; ModuleID = '/llk/IR_all_yes/fs/btrfs/super.c_pt.bc'
source_filename = "../fs/btrfs/super.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_eval_map = type { ptr, ptr, i32 }
%struct.trace_event_fields = type { ptr, %union.anon.111 }
%union.anon.111 = type { %struct.anon.112 }
%struct.anon.112 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.113, %struct.trace_event, ptr, ptr, %union.anon.114, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.113 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.114 = type { ptr }
%union.anon.115 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.116 = type { %struct.bpf_raw_event_map }
%union.anon.117 = type { %struct.bpf_raw_event_map }
%union.anon.118 = type { %struct.bpf_raw_event_map }
%union.anon.119 = type { %struct.bpf_raw_event_map }
%union.anon.120 = type { %struct.bpf_raw_event_map }
%union.anon.121 = type { %struct.bpf_raw_event_map }
%union.anon.122 = type { %struct.bpf_raw_event_map }
%union.anon.123 = type { %struct.bpf_raw_event_map }
%union.anon.124 = type { %struct.bpf_raw_event_map }
%union.anon.125 = type { %struct.bpf_raw_event_map }
%union.anon.126 = type { %struct.bpf_raw_event_map }
%union.anon.127 = type { %struct.bpf_raw_event_map }
%union.anon.128 = type { %struct.bpf_raw_event_map }
%union.anon.129 = type { %struct.bpf_raw_event_map }
%union.anon.130 = type { %struct.bpf_raw_event_map }
%union.anon.131 = type { %struct.bpf_raw_event_map }
%union.anon.132 = type { %struct.bpf_raw_event_map }
%union.anon.133 = type { %struct.bpf_raw_event_map }
%union.anon.134 = type { %struct.bpf_raw_event_map }
%union.anon.135 = type { %struct.bpf_raw_event_map }
%union.anon.136 = type { %struct.bpf_raw_event_map }
%union.anon.137 = type { %struct.bpf_raw_event_map }
%union.anon.138 = type { %struct.bpf_raw_event_map }
%union.anon.139 = type { %struct.bpf_raw_event_map }
%union.anon.140 = type { %struct.bpf_raw_event_map }
%union.anon.141 = type { %struct.bpf_raw_event_map }
%union.anon.142 = type { %struct.bpf_raw_event_map }
%union.anon.143 = type { %struct.bpf_raw_event_map }
%union.anon.144 = type { %struct.bpf_raw_event_map }
%union.anon.145 = type { %struct.bpf_raw_event_map }
%union.anon.146 = type { %struct.bpf_raw_event_map }
%union.anon.147 = type { %struct.bpf_raw_event_map }
%union.anon.148 = type { %struct.bpf_raw_event_map }
%union.anon.149 = type { %struct.bpf_raw_event_map }
%union.anon.150 = type { %struct.bpf_raw_event_map }
%union.anon.151 = type { %struct.bpf_raw_event_map }
%union.anon.152 = type { %struct.bpf_raw_event_map }
%union.anon.153 = type { %struct.bpf_raw_event_map }
%union.anon.154 = type { %struct.bpf_raw_event_map }
%union.anon.155 = type { %struct.bpf_raw_event_map }
%union.anon.156 = type { %struct.bpf_raw_event_map }
%union.anon.157 = type { %struct.bpf_raw_event_map }
%union.anon.158 = type { %struct.bpf_raw_event_map }
%union.anon.159 = type { %struct.bpf_raw_event_map }
%union.anon.160 = type { %struct.bpf_raw_event_map }
%union.anon.161 = type { %struct.bpf_raw_event_map }
%union.anon.162 = type { %struct.bpf_raw_event_map }
%union.anon.163 = type { %struct.bpf_raw_event_map }
%union.anon.164 = type { %struct.bpf_raw_event_map }
%union.anon.165 = type { %struct.bpf_raw_event_map }
%union.anon.166 = type { %struct.bpf_raw_event_map }
%union.anon.167 = type { %struct.bpf_raw_event_map }
%union.anon.168 = type { %struct.bpf_raw_event_map }
%union.anon.169 = type { %struct.bpf_raw_event_map }
%union.anon.170 = type { %struct.bpf_raw_event_map }
%union.anon.171 = type { %struct.bpf_raw_event_map }
%union.anon.172 = type { %struct.bpf_raw_event_map }
%union.anon.173 = type { %struct.bpf_raw_event_map }
%union.anon.174 = type { %struct.bpf_raw_event_map }
%union.anon.175 = type { %struct.bpf_raw_event_map }
%union.anon.176 = type { %struct.bpf_raw_event_map }
%union.anon.177 = type { %struct.bpf_raw_event_map }
%union.anon.178 = type { %struct.bpf_raw_event_map }
%union.anon.179 = type { %struct.bpf_raw_event_map }
%union.anon.180 = type { %struct.bpf_raw_event_map }
%union.anon.181 = type { %struct.bpf_raw_event_map }
%union.anon.182 = type { %struct.bpf_raw_event_map }
%union.anon.183 = type { %struct.bpf_raw_event_map }
%union.anon.184 = type { %struct.bpf_raw_event_map }
%union.anon.185 = type { %struct.bpf_raw_event_map }
%union.anon.186 = type { %struct.bpf_raw_event_map }
%union.anon.187 = type { %struct.bpf_raw_event_map }
%union.anon.188 = type { %struct.bpf_raw_event_map }
%union.anon.189 = type { %struct.bpf_raw_event_map }
%union.anon.190 = type { %struct.bpf_raw_event_map }
%union.anon.191 = type { %struct.bpf_raw_event_map }
%union.anon.192 = type { %struct.bpf_raw_event_map }
%union.anon.193 = type { %struct.bpf_raw_event_map }
%union.anon.194 = type { %struct.bpf_raw_event_map }
%union.anon.195 = type { %struct.bpf_raw_event_map }
%union.anon.196 = type { %struct.bpf_raw_event_map }
%union.anon.197 = type { %struct.bpf_raw_event_map }
%union.anon.198 = type { %struct.bpf_raw_event_map }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.match_token = type { i32, ptr }
%struct.file_system_type = type { ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.hlist_head = type { ptr }
%struct.lock_class_key = type { %union.anon.2 }
%union.anon.2 = type { %struct.hlist_node }
%struct.trace_print_flags_u64 = type { i64, ptr }
%struct.trace_print_flags = type { i32, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.miscdevice = type { i32, ptr, ptr, %struct.list_head, ptr, ptr, ptr, ptr, i16 }
%struct.file_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.super_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dentry_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [76 x i8] }
%struct.export_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.fsverity_operations = type opaque
%struct.btrfs_raid_attr = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], i64 }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.trace_event_raw_btrfs_transaction_commit = type { %struct.trace_entry, [16 x i8], i64, i64, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.btrfs_fs_info = type { [16 x i8], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.rwlock_t, %struct.rb_root, %struct.spinlock, %struct.xarray, %struct.spinlock, i64, %struct.rb_root, %struct.atomic64_t, %struct.extent_io_tree, %struct.extent_map_tree, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, i64, i64, i64, i64, i64, i32, i32, i8, i32, i32, i64, ptr, %struct.wait_queue_head, %struct.wait_queue_head, %struct.wait_queue_head, %struct.wait_queue_head, %struct.spinlock, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.mutex, %struct.mutex, %struct.mutex, ptr, %struct.mutex, %struct.rw_semaphore, %struct.rw_semaphore, %struct.rw_semaphore, %struct.spinlock, %struct.mutex, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.list_head, %struct.atomic_t, %struct.wait_queue_head, %struct.atomic64_t, %struct.rwlock_t, %struct.rb_root, %struct.list_head, %struct.atomic_t, %struct.spinlock, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, %struct.percpu_counter, %struct.percpu_counter, %struct.percpu_counter, i32, i32, %struct.list_head, ptr, %struct.list_head, ptr, ptr, %struct.btrfs_free_cluster, %struct.btrfs_free_cluster, %struct.spinlock, %struct.rb_root, %struct.atomic_t, %struct.seqlock_t, i64, i64, i64, %struct.spinlock, %struct.mutex, %struct.atomic_t, %struct.atomic_t, ptr, %struct.wait_queue_head, %struct.atomic_t, i32, i32, ptr, %struct.mutex, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.wait_queue_head, %struct.refcount_struct, ptr, ptr, ptr, ptr, %struct.btrfs_discard_ctl, i32, i64, %struct.rb_root, %struct.spinlock, ptr, %struct.mutex, %struct.list_head, i64, %struct.mutex, %struct.btrfs_key, ptr, %struct.completion, %struct.btrfs_work, i8, i32, ptr, %struct.spinlock, %struct.xarray, i32, %struct.btrfs_dev_replace, %struct.semaphore, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.list_head, i32, %struct.spinlock, %struct.list_head, %struct.mutex, %struct.mutex, i32, i32, i32, i32, i32, i32, %struct.spinlock, %struct.rb_root, ptr, i32, %union.anon.87, %struct.mutex, %struct.spinlock, i64, %struct.spinlock, i64, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.rb_root, ptr, ptr, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.extent_io_tree = type { %struct.rb_root, ptr, ptr, i64, i8, i8, %struct.spinlock }
%struct.extent_map_tree = type { %struct.rb_root_cached, %struct.list_head, %struct.rwlock_t }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.btrfs_block_rsv = type { i64, i64, ptr, %struct.spinlock, i16, i16, i16, i64, i64 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.atomic64_t = type { i64 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.btrfs_free_cluster = type { %struct.spinlock, %struct.spinlock, %struct.rb_root, i64, i64, i8, ptr, %struct.list_head }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.btrfs_discard_ctl = type { ptr, %struct.delayed_work, %struct.spinlock, ptr, [3 x %struct.list_head], i64, i64, %struct.atomic_t, %struct.atomic64_t, i64, i64, i32, i32, i64, i64, %struct.atomic64_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.btrfs_key = type <{ i64, i8, i64 }>
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.btrfs_work = type { ptr, ptr, ptr, %struct.work_struct, %struct.list_head, ptr, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.btrfs_dev_replace = type { i64, i64, i64, %struct.atomic64_t, %struct.atomic64_t, i64, i64, i64, i64, i64, i32, i32, ptr, ptr, %struct.mutex, %struct.rw_semaphore, %struct.btrfs_scrub_progress, %struct.percpu_counter, %struct.wait_queue_head }
%struct.btrfs_scrub_progress = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%union.anon.87 = type { i64 }
%struct.rb_root = type { ptr }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.79, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.80, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.81, ptr, %struct.address_space, %struct.list_head, %union.anon.82, i32, i32, ptr, ptr, ptr, ptr }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%union.anon.79 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%union.anon.80 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%union.anon.81 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%union.anon.82 = type { ptr }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, i16, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [24 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [24 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.list_lru = type { ptr, %struct.list_head, i32, i8 }
%struct.trace_event_raw_btrfs__inode = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i64, i64, i64, i64, [0 x i8] }
%struct.btrfs_root = type { %struct.rb_node, ptr, ptr, ptr, ptr, i32, %struct.btrfs_root_item, %struct.btrfs_key, ptr, %struct.extent_io_tree, %struct.mutex, %struct.spinlock, ptr, %struct.mutex, %struct.wait_queue_head, [2 x %struct.wait_queue_head], [2 x %struct.list_head], %struct.atomic_t, [2 x %struct.atomic_t], %struct.atomic_t, i32, i32, i32, i32, i64, i32, i64, %struct.btrfs_key, %struct.btrfs_key, %struct.list_head, %struct.list_head, [2 x %struct.spinlock], [2 x %struct.list_head], %struct.spinlock, %struct.rb_root, %struct.xarray, i32, %struct.spinlock, %struct.refcount_struct, %struct.mutex, %struct.spinlock, %struct.list_head, %struct.list_head, i64, %struct.mutex, %struct.spinlock, %struct.list_head, %struct.list_head, i64, %struct.list_head, i32, i32, %struct.btrfs_drew_lock, %struct.atomic_t, %struct.spinlock, i64, i64, %struct.wait_queue_head, %struct.atomic_t, %struct.btrfs_qgroup_swapped_blocks, %struct.extent_io_tree, i64, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.btrfs_root_item = type <{ %struct.btrfs_inode_item, i64, i64, i64, i64, i64, i64, i64, i32, %struct.btrfs_disk_key, i8, i8, i64, [16 x i8], [16 x i8], [16 x i8], i64, i64, i64, i64, %struct.btrfs_timespec, %struct.btrfs_timespec, %struct.btrfs_timespec, %struct.btrfs_timespec, [8 x i64] }>
%struct.btrfs_inode_item = type { i64, i64, i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, [4 x i64], %struct.btrfs_timespec, %struct.btrfs_timespec, %struct.btrfs_timespec, %struct.btrfs_timespec }
%struct.btrfs_disk_key = type <{ i64, i8, i64 }>
%struct.btrfs_timespec = type <{ i64, i32 }>
%struct.btrfs_drew_lock = type { %struct.atomic_t, %struct.percpu_counter, %struct.wait_queue_head, %struct.wait_queue_head }
%struct.btrfs_qgroup_swapped_blocks = type { %struct.spinlock, i8, [8 x %struct.rb_root] }
%struct.trace_event_raw_btrfs_get_extent = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, [0 x i8] }
%struct.btrfs_inode = type { ptr, %struct.btrfs_key, %struct.spinlock, %struct.extent_map_tree, %struct.extent_io_tree, %struct.extent_io_tree, %struct.extent_io_tree, %struct.mutex, %struct.btrfs_ordered_inode_tree, %struct.list_head, %struct.rb_node, i32, %struct.atomic_t, i64, i64, i64, i32, i32, i64, %union.anon.90, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, %struct.btrfs_block_rsv, i32, i32, ptr, %struct.timespec64, %struct.list_head, %struct.rw_semaphore, %struct.inode }
%struct.btrfs_ordered_inode_tree = type { %struct.spinlock, %struct.rb_root, ptr }
%union.anon.90 = type { i64 }
%struct.extent_map = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, ptr, %struct.refcount_struct, i32, %struct.list_head }
%struct.trace_event_raw_btrfs_handle_em_exist = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i64, i64, i64, [0 x i8] }
%struct.trace_event_raw_btrfs__file_extent_item_regular = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i64, i64, i64, i64, i64, i64, i8, i8, i64, i64, [0 x i8] }
%struct.trace_event_raw_btrfs__file_extent_item_inline = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i64, i8, i8, i64, i64, [0 x i8] }
%struct.trace_event_raw_btrfs__ordered_extent = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i64, i64, i64, i32, i32, i32, i64, i64, [0 x i8] }
%struct.btrfs_ordered_extent = type { i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, %struct.refcount_struct, ptr, %struct.list_head, %struct.list_head, %struct.wait_queue_head, %struct.rb_node, %struct.list_head, %struct.btrfs_work, %struct.completion, %struct.btrfs_work, %struct.list_head, i64, ptr }
%struct.trace_event_raw_btrfs__writepage = type { %struct.trace_entry, [16 x i8], i64, i32, i32, i32, i64, i64, i8, i8, i8, i32, i64, [0 x i8] }
%struct.page = type { i32, %union.anon.3, %union.anon.78, %struct.atomic_t, i32 }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.78 = type { %struct.atomic_t }
%struct.writeback_control = type { i32, i32, i64, i64, i32, i16, ptr, ptr, i32, i32, i32, i32, i32, i32 }
%struct.trace_event_raw_btrfs_writepage_end_io_hook = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i32, i64, [0 x i8] }
%struct.file = type { %union.anon.5, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, ptr, i32, i32 }
%union.anon.5 = type { %struct.callback_head }
%struct.path = type { ptr, ptr }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, ptr, %struct.qstr, ptr, [36 x i8], %struct.lockref, ptr, ptr, i32, ptr, %union.anon.62, %struct.list_head, %struct.list_head, %union.anon.63 }
%struct.hlist_bl_node = type { ptr, ptr }
%struct.qstr = type { %union.anon.6, ptr }
%union.anon.6 = type { i64 }
%struct.lockref = type { %union.anon.8 }
%union.anon.8 = type { %struct.anon.9 }
%struct.anon.9 = type { %struct.spinlock, i32 }
%union.anon.62 = type { %struct.list_head }
%union.anon.63 = type { %struct.hlist_node }
%struct.trace_event_raw_btrfs_sync_file = type { %struct.trace_entry, [16 x i8], i64, i64, i32, i64, [0 x i8] }
%struct.trace_event_raw_btrfs_sync_fs = type { %struct.trace_entry, [16 x i8], i32, [0 x i8] }
%struct.trace_event_raw_btrfs_add_block_group = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i64, i64, i32, [0 x i8] }
%struct.btrfs_block_group = type { ptr, ptr, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.rw_semaphore, i32, i32, i8, i32, i32, ptr, i64, ptr, ptr, %struct.rb_node, %struct.list_head, %struct.refcount_struct, %struct.list_head, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.list_head, i32, i64, i64, i32, %struct.list_head, %struct.list_head, %struct.btrfs_io_ctl, %struct.atomic_t, %struct.atomic_t, %struct.mutex, i32, i8, i32, %struct.btrfs_full_stripe_locks_tree, i64, i64, i64, i64, ptr, %struct.list_head }
%struct.btrfs_io_ctl = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32 }
%struct.btrfs_full_stripe_locks_tree = type { %struct.rb_root, %struct.mutex }
%struct.trace_event_raw_btrfs_delayed_tree_ref = type { %struct.trace_entry, [16 x i8], i64, i64, i32, i64, i64, i32, i32, i64, [0 x i8] }
%struct.btrfs_delayed_ref_node = type { %struct.rb_node, %struct.list_head, i64, i64, i64, %struct.refcount_struct, i32, i24 }
%struct.btrfs_delayed_tree_ref = type { %struct.btrfs_delayed_ref_node, i64, i64, i32 }
%struct.trace_event_raw_btrfs_delayed_data_ref = type { %struct.trace_entry, [16 x i8], i64, i64, i32, i64, i64, i64, i64, i32, i64, [0 x i8] }
%struct.btrfs_delayed_data_ref = type { %struct.btrfs_delayed_ref_node, i64, i64, i64, i64 }
%struct.trace_event_raw_btrfs_delayed_ref_head = type { %struct.trace_entry, [16 x i8], i64, i64, i32, i32, [0 x i8] }
%struct.btrfs_delayed_ref_head = type { i64, i64, %struct.refcount_struct, %struct.mutex, %struct.spinlock, %struct.rb_root_cached, %struct.list_head, %struct.rb_node, ptr, i32, i32, i8 }
%struct.trace_event_raw_btrfs__chunk = type { %struct.trace_entry, [16 x i8], i32, i64, i32, i64, i64, i64, [0 x i8] }
%struct.map_lookup = type { i64, i32, i32, i64, i32, i32, i32, [0 x %struct.btrfs_io_stripe] }
%struct.btrfs_io_stripe = type { ptr, i64, i64 }
%struct.trace_event_raw_btrfs_cow_block = type { %struct.trace_entry, [16 x i8], i64, i64, i32, i64, i32, i32, [0 x i8] }
%struct.extent_buffer = type { i64, i32, i32, ptr, %struct.spinlock, %struct.atomic_t, %struct.atomic_t, i32, %struct.callback_head, i32, i8, %struct.rw_semaphore, [16 x ptr], %struct.list_head, %struct.list_head }
%struct.btrfs_header = type <{ [32 x i8], [16 x i8], i64, i64, [16 x i8], i64, i64, i32, i8 }>
%struct.trace_event_raw_btrfs_space_reservation = type { %struct.trace_entry, [16 x i8], i32, i64, i64, i32, [0 x i8] }
%struct.trace_event_raw_btrfs_trigger_flush = type { %struct.trace_entry, [16 x i8], i64, i64, i32, i32, [0 x i8] }
%struct.trace_event_raw_btrfs_flush_space = type { %struct.trace_entry, [16 x i8], i64, i64, i32, i32, i8, [0 x i8] }
%struct.trace_event_raw_btrfs__reserved_extent = type { %struct.trace_entry, [16 x i8], i64, i64, [0 x i8] }
%struct.trace_event_raw_find_free_extent = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i64, [0 x i8] }
%struct.trace_event_raw_btrfs__reserve_extent = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i64, [0 x i8] }
%struct.trace_event_raw_btrfs_find_cluster = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i64, i64, i64, [0 x i8] }
%struct.trace_event_raw_btrfs_failed_cluster_setup = type { %struct.trace_entry, [16 x i8], i64, [0 x i8] }
%struct.trace_event_raw_btrfs_setup_cluster = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i64, i64, i32, [0 x i8] }
%struct.trace_event_raw_alloc_extent_state = type { %struct.trace_entry, ptr, i32, ptr, [0 x i8] }
%struct.trace_event_raw_free_extent_state = type { %struct.trace_entry, ptr, ptr, [0 x i8] }
%struct.trace_event_raw_btrfs__work = type { %struct.trace_entry, [16 x i8], ptr, ptr, ptr, ptr, ptr, ptr, [0 x i8] }
%struct.trace_event_raw_btrfs__work__done = type { %struct.trace_entry, [16 x i8], ptr, [0 x i8] }
%struct.trace_event_raw_btrfs__workqueue = type { %struct.trace_entry, [16 x i8], ptr, i32, i32, [0 x i8] }
%struct.trace_event_raw_btrfs__workqueue_done = type { %struct.trace_entry, [16 x i8], ptr, [0 x i8] }
%struct.trace_event_raw_btrfs__qgroup_rsv_data = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i64, i64, i32, [0 x i8] }
%struct.trace_event_raw_btrfs_qgroup_extent = type { %struct.trace_entry, [16 x i8], i64, i64, [0 x i8] }
%struct.btrfs_qgroup_extent_record = type { %struct.rb_node, i64, i64, i32, i64, ptr }
%struct.trace_event_raw_qgroup_num_dirty_extents = type { %struct.trace_entry, [16 x i8], i64, i64, [0 x i8] }
%struct.trace_event_raw_btrfs_qgroup_account_extent = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i64, i64, [0 x i8] }
%struct.trace_event_raw_qgroup_update_counters = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i64, i64, [0 x i8] }
%struct.btrfs_qgroup = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.btrfs_qgroup_rsv, %struct.list_head, %struct.list_head, %struct.list_head, %struct.rb_node, i64, i64, %struct.kobject }
%struct.btrfs_qgroup_rsv = type { [3 x i64] }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.trace_event_raw_qgroup_update_reserve = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i32, [0 x i8] }
%struct.trace_event_raw_qgroup_meta_reserve = type { %struct.trace_entry, [16 x i8], i64, i64, i32, [0 x i8] }
%struct.trace_event_raw_qgroup_meta_convert = type { %struct.trace_entry, [16 x i8], i64, i64, [0 x i8] }
%struct.trace_event_raw_qgroup_meta_free_all_pertrans = type { %struct.trace_entry, [16 x i8], i64, i64, i32, [0 x i8] }
%struct.trace_event_raw_btrfs__prelim_ref = type { %struct.trace_entry, [16 x i8], i64, i64, i8, i64, i32, i32, i64, i64, i32, i64, [0 x i8] }
%struct.prelim_ref = type { %struct.rb_node, i64, %struct.btrfs_key, i32, i32, ptr, i64, i64 }
%struct.trace_event_raw_btrfs_inode_mod_outstanding_extents = type { %struct.trace_entry, [16 x i8], i64, i64, i32, [0 x i8] }
%struct.trace_event_raw_btrfs__block_group = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i64, [0 x i8] }
%struct.trace_event_raw_btrfs_set_extent_bit = type { %struct.trace_entry, [16 x i8], i32, i64, i64, i64, i64, i32, [0 x i8] }
%struct.trace_event_raw_btrfs_clear_extent_bit = type { %struct.trace_entry, [16 x i8], i32, i64, i64, i64, i64, i32, [0 x i8] }
%struct.trace_event_raw_btrfs_convert_extent_bit = type { %struct.trace_entry, [16 x i8], i32, i64, i64, i64, i64, i32, i32, [0 x i8] }
%struct.trace_event_raw_btrfs_dump_space_info = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i64, i64, i64, i64, i64, i32, i64, i64, i64, i64, i64, i64, i64, [0 x i8] }
%struct.btrfs_space_info = type { %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i32, i8, i32, i64, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i64, i64, %struct.rw_semaphore, [9 x %struct.list_head], %struct.kobject, [9 x ptr] }
%struct.trace_event_raw_btrfs_reserve_ticket = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i32, i32, [0 x i8] }
%struct.trace_event_raw_btrfs_sleep_tree_lock = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i64, i64, i64, i32, [0 x i8] }
%struct.trace_event_raw_btrfs_locking_events = type { %struct.trace_entry, [16 x i8], i64, i64, i64, i32, [0 x i8] }
%struct.trace_event_raw_btrfs__space_info_update = type { %struct.trace_entry, [16 x i8], i64, i64, i64, [0 x i8] }
%struct.va_format = type { ptr, ptr }
%struct.__va_list = type { ptr }
%struct.btrfs_trans_handle = type { i64, i64, i64, i32, ptr, ptr, ptr, ptr, %struct.refcount_struct, i32, i16, i8, i8, i8, i8, i8, ptr, %struct.list_head }
%struct.btrfs_transaction = type { i64, %struct.atomic_t, %struct.atomic_t, %struct.refcount_struct, i32, i32, i32, %struct.list_head, %struct.extent_io_tree, i64, %struct.wait_queue_head, %struct.wait_queue_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.extent_io_tree, %struct.mutex, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.btrfs_delayed_ref_root, ptr, %struct.atomic_t, %struct.wait_queue_head, %struct.spinlock, %struct.list_head }
%struct.btrfs_delayed_ref_root = type { %struct.rb_root_cached, %struct.rb_root, %struct.spinlock, %struct.atomic_t, i32, i32, i64, i32, i64, i64 }
%struct.substring_t = type { ptr, ptr }
%struct.btrfs_super_block = type <{ [32 x i8], [16 x i8], i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i64, i64, i64, i16, i8, i8, i8, %struct.btrfs_dev_item, [256 x i8], i64, i64, [16 x i8], [28 x i64], [2048 x i8], [4 x %struct.btrfs_root_backup], [565 x i8] }>
%struct.btrfs_dev_item = type <{ i64, i64, i64, i32, i32, i32, i64, i64, i64, i32, i8, i8, [16 x i8], [16 x i8] }>
%struct.btrfs_root_backup = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [4 x i64], i8, i8, i8, i8, i8, i8, [10 x i8] }
%struct.btrfs_path = type { [8 x ptr], [8 x i32], [8 x i8], i8, i8, i8 }
%struct.btrfs_root_ref = type <{ i64, i64, i16 }>
%struct.btrfs_inode_ref = type <{ i64, i16 }>
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }
%struct.btrfs_ioctl_vol_args = type { i64, [4088 x i8] }
%struct.btrfs_device = type { %struct.list_head, %struct.list_head, %struct.list_head, ptr, ptr, ptr, i64, ptr, ptr, i32, i32, i8, %struct.seqcount, i64, i64, i64, i64, i32, i32, i64, i32, [16 x i8], i64, i64, ptr, %struct.completion, ptr, i32, %struct.atomic_t, [5 x %struct.atomic_t], %struct.extent_io_tree, %struct.completion, %struct.kobject, i64 }
%struct.btrfs_fs_devices = type { [16 x i8], [16 x i8], i8, %struct.list_head, i64, i64, i64, i64, i64, i64, i64, ptr, %struct.mutex, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32, i8, ptr, %struct.kobject, ptr, ptr, %struct.completion, i32, i32 }
%struct.kstatfs = type { i32, i32, i64, i64, i64, i64, i64, %struct.__kernel_fsid_t, i32, i32, i32, [4 x i32] }
%struct.__kernel_fsid_t = type { [2 x i32] }
%struct.btrfs_device_info = type { ptr, i64, i64, i64 }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.rcu_string = type { %struct.callback_head, [0 x i8] }
%struct.vfsmount = type { ptr, ptr, i32, ptr }

@__tpstrtab_btrfs_transaction_commit = internal constant [25 x i8] c"btrfs_transaction_commit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_transaction_commit = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_transaction_commit }, align 4
@__tracepoint_btrfs_transaction_commit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_transaction_commit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_transaction_commit, ptr null, ptr @__traceiter_btrfs_transaction_commit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_transaction_commit = internal constant ptr @__tracepoint_btrfs_transaction_commit, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_inode_new = internal constant [16 x i8] c"btrfs_inode_new\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_inode_new = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_inode_new }, align 4
@__tracepoint_btrfs_inode_new = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_inode_new, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_inode_new, ptr null, ptr @__traceiter_btrfs_inode_new, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_inode_new = internal constant ptr @__tracepoint_btrfs_inode_new, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_inode_request = internal constant [20 x i8] c"btrfs_inode_request\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_inode_request = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_inode_request }, align 4
@__tracepoint_btrfs_inode_request = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_inode_request, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_inode_request, ptr null, ptr @__traceiter_btrfs_inode_request, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_inode_request = internal constant ptr @__tracepoint_btrfs_inode_request, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_inode_evict = internal constant [18 x i8] c"btrfs_inode_evict\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_inode_evict = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_inode_evict }, align 4
@__tracepoint_btrfs_inode_evict = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_inode_evict, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_inode_evict, ptr null, ptr @__traceiter_btrfs_inode_evict, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_inode_evict = internal constant ptr @__tracepoint_btrfs_inode_evict, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_get_extent = internal constant [17 x i8] c"btrfs_get_extent\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_get_extent = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_get_extent }, align 4
@__tracepoint_btrfs_get_extent = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_get_extent, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_get_extent, ptr null, ptr @__traceiter_btrfs_get_extent, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_get_extent = internal constant ptr @__tracepoint_btrfs_get_extent, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_handle_em_exist = internal constant [22 x i8] c"btrfs_handle_em_exist\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_handle_em_exist = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_handle_em_exist }, align 4
@__tracepoint_btrfs_handle_em_exist = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_handle_em_exist, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_handle_em_exist, ptr null, ptr @__traceiter_btrfs_handle_em_exist, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_handle_em_exist = internal constant ptr @__tracepoint_btrfs_handle_em_exist, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_get_extent_show_fi_regular = internal constant [33 x i8] c"btrfs_get_extent_show_fi_regular\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_get_extent_show_fi_regular = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_get_extent_show_fi_regular }, align 4
@__tracepoint_btrfs_get_extent_show_fi_regular = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_get_extent_show_fi_regular, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_get_extent_show_fi_regular, ptr null, ptr @__traceiter_btrfs_get_extent_show_fi_regular, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_get_extent_show_fi_regular = internal constant ptr @__tracepoint_btrfs_get_extent_show_fi_regular, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_truncate_show_fi_regular = internal constant [31 x i8] c"btrfs_truncate_show_fi_regular\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_truncate_show_fi_regular = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_truncate_show_fi_regular }, align 4
@__tracepoint_btrfs_truncate_show_fi_regular = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_truncate_show_fi_regular, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_truncate_show_fi_regular, ptr null, ptr @__traceiter_btrfs_truncate_show_fi_regular, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_truncate_show_fi_regular = internal constant ptr @__tracepoint_btrfs_truncate_show_fi_regular, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_get_extent_show_fi_inline = internal constant [32 x i8] c"btrfs_get_extent_show_fi_inline\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_get_extent_show_fi_inline = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_get_extent_show_fi_inline }, align 4
@__tracepoint_btrfs_get_extent_show_fi_inline = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_get_extent_show_fi_inline, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_get_extent_show_fi_inline, ptr null, ptr @__traceiter_btrfs_get_extent_show_fi_inline, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_get_extent_show_fi_inline = internal constant ptr @__tracepoint_btrfs_get_extent_show_fi_inline, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_truncate_show_fi_inline = internal constant [30 x i8] c"btrfs_truncate_show_fi_inline\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_truncate_show_fi_inline = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_truncate_show_fi_inline }, align 4
@__tracepoint_btrfs_truncate_show_fi_inline = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_truncate_show_fi_inline, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_truncate_show_fi_inline, ptr null, ptr @__traceiter_btrfs_truncate_show_fi_inline, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_truncate_show_fi_inline = internal constant ptr @__tracepoint_btrfs_truncate_show_fi_inline, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_ordered_extent_add = internal constant [25 x i8] c"btrfs_ordered_extent_add\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_ordered_extent_add = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_ordered_extent_add }, align 4
@__tracepoint_btrfs_ordered_extent_add = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_ordered_extent_add, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_ordered_extent_add, ptr null, ptr @__traceiter_btrfs_ordered_extent_add, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_ordered_extent_add = internal constant ptr @__tracepoint_btrfs_ordered_extent_add, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_ordered_extent_remove = internal constant [28 x i8] c"btrfs_ordered_extent_remove\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_ordered_extent_remove = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_ordered_extent_remove }, align 4
@__tracepoint_btrfs_ordered_extent_remove = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_ordered_extent_remove, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_ordered_extent_remove, ptr null, ptr @__traceiter_btrfs_ordered_extent_remove, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_ordered_extent_remove = internal constant ptr @__tracepoint_btrfs_ordered_extent_remove, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_ordered_extent_start = internal constant [27 x i8] c"btrfs_ordered_extent_start\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_ordered_extent_start = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_ordered_extent_start }, align 4
@__tracepoint_btrfs_ordered_extent_start = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_ordered_extent_start, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_ordered_extent_start, ptr null, ptr @__traceiter_btrfs_ordered_extent_start, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_ordered_extent_start = internal constant ptr @__tracepoint_btrfs_ordered_extent_start, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_ordered_extent_put = internal constant [25 x i8] c"btrfs_ordered_extent_put\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_ordered_extent_put = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_ordered_extent_put }, align 4
@__tracepoint_btrfs_ordered_extent_put = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_ordered_extent_put, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_ordered_extent_put, ptr null, ptr @__traceiter_btrfs_ordered_extent_put, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_ordered_extent_put = internal constant ptr @__tracepoint_btrfs_ordered_extent_put, section "__tracepoints_ptrs", align 4
@__tpstrtab___extent_writepage = internal constant [19 x i8] c"__extent_writepage\00", section "__tracepoints_strings", align 1
@__SCK__tp_func___extent_writepage = dso_local global %struct.static_call_key { ptr @__traceiter___extent_writepage }, align 4
@__tracepoint___extent_writepage = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab___extent_writepage, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func___extent_writepage, ptr null, ptr @__traceiter___extent_writepage, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr___extent_writepage = internal constant ptr @__tracepoint___extent_writepage, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_writepage_end_io_hook = internal constant [28 x i8] c"btrfs_writepage_end_io_hook\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_writepage_end_io_hook = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_writepage_end_io_hook }, align 4
@__tracepoint_btrfs_writepage_end_io_hook = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_writepage_end_io_hook, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_writepage_end_io_hook, ptr null, ptr @__traceiter_btrfs_writepage_end_io_hook, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_writepage_end_io_hook = internal constant ptr @__tracepoint_btrfs_writepage_end_io_hook, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_sync_file = internal constant [16 x i8] c"btrfs_sync_file\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_sync_file = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_sync_file }, align 4
@__tracepoint_btrfs_sync_file = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_sync_file, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_sync_file, ptr null, ptr @__traceiter_btrfs_sync_file, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_sync_file = internal constant ptr @__tracepoint_btrfs_sync_file, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_sync_fs = internal constant [14 x i8] c"btrfs_sync_fs\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_sync_fs = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_sync_fs }, align 4
@__tracepoint_btrfs_sync_fs = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_sync_fs, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_sync_fs, ptr null, ptr @__traceiter_btrfs_sync_fs, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_sync_fs = internal constant ptr @__tracepoint_btrfs_sync_fs, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_add_block_group = internal constant [22 x i8] c"btrfs_add_block_group\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_add_block_group = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_add_block_group }, align 4
@__tracepoint_btrfs_add_block_group = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_add_block_group, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_add_block_group, ptr null, ptr @__traceiter_btrfs_add_block_group, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_add_block_group = internal constant ptr @__tracepoint_btrfs_add_block_group, section "__tracepoints_ptrs", align 4
@__tpstrtab_add_delayed_tree_ref = internal constant [21 x i8] c"add_delayed_tree_ref\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_add_delayed_tree_ref = dso_local global %struct.static_call_key { ptr @__traceiter_add_delayed_tree_ref }, align 4
@__tracepoint_add_delayed_tree_ref = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_add_delayed_tree_ref, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_add_delayed_tree_ref, ptr null, ptr @__traceiter_add_delayed_tree_ref, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_add_delayed_tree_ref = internal constant ptr @__tracepoint_add_delayed_tree_ref, section "__tracepoints_ptrs", align 4
@__tpstrtab_run_delayed_tree_ref = internal constant [21 x i8] c"run_delayed_tree_ref\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_run_delayed_tree_ref = dso_local global %struct.static_call_key { ptr @__traceiter_run_delayed_tree_ref }, align 4
@__tracepoint_run_delayed_tree_ref = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_run_delayed_tree_ref, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_run_delayed_tree_ref, ptr null, ptr @__traceiter_run_delayed_tree_ref, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_run_delayed_tree_ref = internal constant ptr @__tracepoint_run_delayed_tree_ref, section "__tracepoints_ptrs", align 4
@__tpstrtab_add_delayed_data_ref = internal constant [21 x i8] c"add_delayed_data_ref\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_add_delayed_data_ref = dso_local global %struct.static_call_key { ptr @__traceiter_add_delayed_data_ref }, align 4
@__tracepoint_add_delayed_data_ref = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_add_delayed_data_ref, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_add_delayed_data_ref, ptr null, ptr @__traceiter_add_delayed_data_ref, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_add_delayed_data_ref = internal constant ptr @__tracepoint_add_delayed_data_ref, section "__tracepoints_ptrs", align 4
@__tpstrtab_run_delayed_data_ref = internal constant [21 x i8] c"run_delayed_data_ref\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_run_delayed_data_ref = dso_local global %struct.static_call_key { ptr @__traceiter_run_delayed_data_ref }, align 4
@__tracepoint_run_delayed_data_ref = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_run_delayed_data_ref, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_run_delayed_data_ref, ptr null, ptr @__traceiter_run_delayed_data_ref, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_run_delayed_data_ref = internal constant ptr @__tracepoint_run_delayed_data_ref, section "__tracepoints_ptrs", align 4
@__tpstrtab_add_delayed_ref_head = internal constant [21 x i8] c"add_delayed_ref_head\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_add_delayed_ref_head = dso_local global %struct.static_call_key { ptr @__traceiter_add_delayed_ref_head }, align 4
@__tracepoint_add_delayed_ref_head = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_add_delayed_ref_head, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_add_delayed_ref_head, ptr null, ptr @__traceiter_add_delayed_ref_head, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_add_delayed_ref_head = internal constant ptr @__tracepoint_add_delayed_ref_head, section "__tracepoints_ptrs", align 4
@__tpstrtab_run_delayed_ref_head = internal constant [21 x i8] c"run_delayed_ref_head\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_run_delayed_ref_head = dso_local global %struct.static_call_key { ptr @__traceiter_run_delayed_ref_head }, align 4
@__tracepoint_run_delayed_ref_head = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_run_delayed_ref_head, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_run_delayed_ref_head, ptr null, ptr @__traceiter_run_delayed_ref_head, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_run_delayed_ref_head = internal constant ptr @__tracepoint_run_delayed_ref_head, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_chunk_alloc = internal constant [18 x i8] c"btrfs_chunk_alloc\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_chunk_alloc = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_chunk_alloc }, align 4
@__tracepoint_btrfs_chunk_alloc = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_chunk_alloc, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_chunk_alloc, ptr null, ptr @__traceiter_btrfs_chunk_alloc, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_chunk_alloc = internal constant ptr @__tracepoint_btrfs_chunk_alloc, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_chunk_free = internal constant [17 x i8] c"btrfs_chunk_free\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_chunk_free = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_chunk_free }, align 4
@__tracepoint_btrfs_chunk_free = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_chunk_free, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_chunk_free, ptr null, ptr @__traceiter_btrfs_chunk_free, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_chunk_free = internal constant ptr @__tracepoint_btrfs_chunk_free, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_cow_block = internal constant [16 x i8] c"btrfs_cow_block\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_cow_block = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_cow_block }, align 4
@__tracepoint_btrfs_cow_block = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_cow_block, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_cow_block, ptr null, ptr @__traceiter_btrfs_cow_block, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_cow_block = internal constant ptr @__tracepoint_btrfs_cow_block, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_space_reservation = internal constant [24 x i8] c"btrfs_space_reservation\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_space_reservation = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_space_reservation }, align 4
@__tracepoint_btrfs_space_reservation = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_space_reservation, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_space_reservation, ptr null, ptr @__traceiter_btrfs_space_reservation, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_space_reservation = internal constant ptr @__tracepoint_btrfs_space_reservation, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_trigger_flush = internal constant [20 x i8] c"btrfs_trigger_flush\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_trigger_flush = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_trigger_flush }, align 4
@__tracepoint_btrfs_trigger_flush = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_trigger_flush, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_trigger_flush, ptr null, ptr @__traceiter_btrfs_trigger_flush, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_trigger_flush = internal constant ptr @__tracepoint_btrfs_trigger_flush, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_flush_space = internal constant [18 x i8] c"btrfs_flush_space\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_flush_space = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_flush_space }, align 4
@__tracepoint_btrfs_flush_space = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_flush_space, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_flush_space, ptr null, ptr @__traceiter_btrfs_flush_space, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_flush_space = internal constant ptr @__tracepoint_btrfs_flush_space, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_reserved_extent_alloc = internal constant [28 x i8] c"btrfs_reserved_extent_alloc\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_reserved_extent_alloc = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_reserved_extent_alloc }, align 4
@__tracepoint_btrfs_reserved_extent_alloc = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_reserved_extent_alloc, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_reserved_extent_alloc, ptr null, ptr @__traceiter_btrfs_reserved_extent_alloc, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_reserved_extent_alloc = internal constant ptr @__tracepoint_btrfs_reserved_extent_alloc, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_reserved_extent_free = internal constant [27 x i8] c"btrfs_reserved_extent_free\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_reserved_extent_free = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_reserved_extent_free }, align 4
@__tracepoint_btrfs_reserved_extent_free = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_reserved_extent_free, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_reserved_extent_free, ptr null, ptr @__traceiter_btrfs_reserved_extent_free, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_reserved_extent_free = internal constant ptr @__tracepoint_btrfs_reserved_extent_free, section "__tracepoints_ptrs", align 4
@__tpstrtab_find_free_extent = internal constant [17 x i8] c"find_free_extent\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_find_free_extent = dso_local global %struct.static_call_key { ptr @__traceiter_find_free_extent }, align 4
@__tracepoint_find_free_extent = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_find_free_extent, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_find_free_extent, ptr null, ptr @__traceiter_find_free_extent, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_find_free_extent = internal constant ptr @__tracepoint_find_free_extent, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_reserve_extent = internal constant [21 x i8] c"btrfs_reserve_extent\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_reserve_extent = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_reserve_extent }, align 4
@__tracepoint_btrfs_reserve_extent = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_reserve_extent, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_reserve_extent, ptr null, ptr @__traceiter_btrfs_reserve_extent, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_reserve_extent = internal constant ptr @__tracepoint_btrfs_reserve_extent, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_reserve_extent_cluster = internal constant [29 x i8] c"btrfs_reserve_extent_cluster\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_reserve_extent_cluster = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_reserve_extent_cluster }, align 4
@__tracepoint_btrfs_reserve_extent_cluster = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_reserve_extent_cluster, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_reserve_extent_cluster, ptr null, ptr @__traceiter_btrfs_reserve_extent_cluster, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_reserve_extent_cluster = internal constant ptr @__tracepoint_btrfs_reserve_extent_cluster, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_find_cluster = internal constant [19 x i8] c"btrfs_find_cluster\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_find_cluster = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_find_cluster }, align 4
@__tracepoint_btrfs_find_cluster = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_find_cluster, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_find_cluster, ptr null, ptr @__traceiter_btrfs_find_cluster, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_find_cluster = internal constant ptr @__tracepoint_btrfs_find_cluster, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_failed_cluster_setup = internal constant [27 x i8] c"btrfs_failed_cluster_setup\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_failed_cluster_setup = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_failed_cluster_setup }, align 4
@__tracepoint_btrfs_failed_cluster_setup = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_failed_cluster_setup, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_failed_cluster_setup, ptr null, ptr @__traceiter_btrfs_failed_cluster_setup, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_failed_cluster_setup = internal constant ptr @__tracepoint_btrfs_failed_cluster_setup, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_setup_cluster = internal constant [20 x i8] c"btrfs_setup_cluster\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_setup_cluster = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_setup_cluster }, align 4
@__tracepoint_btrfs_setup_cluster = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_setup_cluster, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_setup_cluster, ptr null, ptr @__traceiter_btrfs_setup_cluster, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_setup_cluster = internal constant ptr @__tracepoint_btrfs_setup_cluster, section "__tracepoints_ptrs", align 4
@__tpstrtab_alloc_extent_state = internal constant [19 x i8] c"alloc_extent_state\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_alloc_extent_state = dso_local global %struct.static_call_key { ptr @__traceiter_alloc_extent_state }, align 4
@__tracepoint_alloc_extent_state = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_alloc_extent_state, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_alloc_extent_state, ptr null, ptr @__traceiter_alloc_extent_state, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_alloc_extent_state = internal constant ptr @__tracepoint_alloc_extent_state, section "__tracepoints_ptrs", align 4
@__tpstrtab_free_extent_state = internal constant [18 x i8] c"free_extent_state\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_free_extent_state = dso_local global %struct.static_call_key { ptr @__traceiter_free_extent_state }, align 4
@__tracepoint_free_extent_state = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_free_extent_state, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_free_extent_state, ptr null, ptr @__traceiter_free_extent_state, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_free_extent_state = internal constant ptr @__tracepoint_free_extent_state, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_work_queued = internal constant [18 x i8] c"btrfs_work_queued\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_work_queued = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_work_queued }, align 4
@__tracepoint_btrfs_work_queued = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_work_queued, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_work_queued, ptr null, ptr @__traceiter_btrfs_work_queued, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_work_queued = internal constant ptr @__tracepoint_btrfs_work_queued, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_work_sched = internal constant [17 x i8] c"btrfs_work_sched\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_work_sched = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_work_sched }, align 4
@__tracepoint_btrfs_work_sched = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_work_sched, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_work_sched, ptr null, ptr @__traceiter_btrfs_work_sched, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_work_sched = internal constant ptr @__tracepoint_btrfs_work_sched, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_all_work_done = internal constant [20 x i8] c"btrfs_all_work_done\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_all_work_done = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_all_work_done }, align 4
@__tracepoint_btrfs_all_work_done = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_all_work_done, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_all_work_done, ptr null, ptr @__traceiter_btrfs_all_work_done, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_all_work_done = internal constant ptr @__tracepoint_btrfs_all_work_done, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_ordered_sched = internal constant [20 x i8] c"btrfs_ordered_sched\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_ordered_sched = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_ordered_sched }, align 4
@__tracepoint_btrfs_ordered_sched = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_ordered_sched, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_ordered_sched, ptr null, ptr @__traceiter_btrfs_ordered_sched, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_ordered_sched = internal constant ptr @__tracepoint_btrfs_ordered_sched, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_workqueue_alloc = internal constant [22 x i8] c"btrfs_workqueue_alloc\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_workqueue_alloc = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_workqueue_alloc }, align 4
@__tracepoint_btrfs_workqueue_alloc = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_workqueue_alloc, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_workqueue_alloc, ptr null, ptr @__traceiter_btrfs_workqueue_alloc, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_workqueue_alloc = internal constant ptr @__tracepoint_btrfs_workqueue_alloc, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_workqueue_destroy = internal constant [24 x i8] c"btrfs_workqueue_destroy\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_workqueue_destroy = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_workqueue_destroy }, align 4
@__tracepoint_btrfs_workqueue_destroy = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_workqueue_destroy, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_workqueue_destroy, ptr null, ptr @__traceiter_btrfs_workqueue_destroy, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_workqueue_destroy = internal constant ptr @__tracepoint_btrfs_workqueue_destroy, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_qgroup_reserve_data = internal constant [26 x i8] c"btrfs_qgroup_reserve_data\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_qgroup_reserve_data = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_qgroup_reserve_data }, align 4
@__tracepoint_btrfs_qgroup_reserve_data = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_qgroup_reserve_data, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_qgroup_reserve_data, ptr null, ptr @__traceiter_btrfs_qgroup_reserve_data, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_qgroup_reserve_data = internal constant ptr @__tracepoint_btrfs_qgroup_reserve_data, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_qgroup_release_data = internal constant [26 x i8] c"btrfs_qgroup_release_data\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_qgroup_release_data = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_qgroup_release_data }, align 4
@__tracepoint_btrfs_qgroup_release_data = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_qgroup_release_data, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_qgroup_release_data, ptr null, ptr @__traceiter_btrfs_qgroup_release_data, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_qgroup_release_data = internal constant ptr @__tracepoint_btrfs_qgroup_release_data, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_qgroup_account_extents = internal constant [29 x i8] c"btrfs_qgroup_account_extents\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_qgroup_account_extents = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_qgroup_account_extents }, align 4
@__tracepoint_btrfs_qgroup_account_extents = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_qgroup_account_extents, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_qgroup_account_extents, ptr null, ptr @__traceiter_btrfs_qgroup_account_extents, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_qgroup_account_extents = internal constant ptr @__tracepoint_btrfs_qgroup_account_extents, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_qgroup_trace_extent = internal constant [26 x i8] c"btrfs_qgroup_trace_extent\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_qgroup_trace_extent = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_qgroup_trace_extent }, align 4
@__tracepoint_btrfs_qgroup_trace_extent = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_qgroup_trace_extent, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_qgroup_trace_extent, ptr null, ptr @__traceiter_btrfs_qgroup_trace_extent, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_qgroup_trace_extent = internal constant ptr @__tracepoint_btrfs_qgroup_trace_extent, section "__tracepoints_ptrs", align 4
@__tpstrtab_qgroup_num_dirty_extents = internal constant [25 x i8] c"qgroup_num_dirty_extents\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_qgroup_num_dirty_extents = dso_local global %struct.static_call_key { ptr @__traceiter_qgroup_num_dirty_extents }, align 4
@__tracepoint_qgroup_num_dirty_extents = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_qgroup_num_dirty_extents, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_qgroup_num_dirty_extents, ptr null, ptr @__traceiter_qgroup_num_dirty_extents, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_qgroup_num_dirty_extents = internal constant ptr @__tracepoint_qgroup_num_dirty_extents, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_qgroup_account_extent = internal constant [28 x i8] c"btrfs_qgroup_account_extent\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_qgroup_account_extent = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_qgroup_account_extent }, align 4
@__tracepoint_btrfs_qgroup_account_extent = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_qgroup_account_extent, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_qgroup_account_extent, ptr null, ptr @__traceiter_btrfs_qgroup_account_extent, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_qgroup_account_extent = internal constant ptr @__tracepoint_btrfs_qgroup_account_extent, section "__tracepoints_ptrs", align 4
@__tpstrtab_qgroup_update_counters = internal constant [23 x i8] c"qgroup_update_counters\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_qgroup_update_counters = dso_local global %struct.static_call_key { ptr @__traceiter_qgroup_update_counters }, align 4
@__tracepoint_qgroup_update_counters = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_qgroup_update_counters, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_qgroup_update_counters, ptr null, ptr @__traceiter_qgroup_update_counters, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_qgroup_update_counters = internal constant ptr @__tracepoint_qgroup_update_counters, section "__tracepoints_ptrs", align 4
@__tpstrtab_qgroup_update_reserve = internal constant [22 x i8] c"qgroup_update_reserve\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_qgroup_update_reserve = dso_local global %struct.static_call_key { ptr @__traceiter_qgroup_update_reserve }, align 4
@__tracepoint_qgroup_update_reserve = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_qgroup_update_reserve, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_qgroup_update_reserve, ptr null, ptr @__traceiter_qgroup_update_reserve, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_qgroup_update_reserve = internal constant ptr @__tracepoint_qgroup_update_reserve, section "__tracepoints_ptrs", align 4
@__tpstrtab_qgroup_meta_reserve = internal constant [20 x i8] c"qgroup_meta_reserve\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_qgroup_meta_reserve = dso_local global %struct.static_call_key { ptr @__traceiter_qgroup_meta_reserve }, align 4
@__tracepoint_qgroup_meta_reserve = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_qgroup_meta_reserve, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_qgroup_meta_reserve, ptr null, ptr @__traceiter_qgroup_meta_reserve, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_qgroup_meta_reserve = internal constant ptr @__tracepoint_qgroup_meta_reserve, section "__tracepoints_ptrs", align 4
@__tpstrtab_qgroup_meta_convert = internal constant [20 x i8] c"qgroup_meta_convert\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_qgroup_meta_convert = dso_local global %struct.static_call_key { ptr @__traceiter_qgroup_meta_convert }, align 4
@__tracepoint_qgroup_meta_convert = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_qgroup_meta_convert, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_qgroup_meta_convert, ptr null, ptr @__traceiter_qgroup_meta_convert, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_qgroup_meta_convert = internal constant ptr @__tracepoint_qgroup_meta_convert, section "__tracepoints_ptrs", align 4
@__tpstrtab_qgroup_meta_free_all_pertrans = internal constant [30 x i8] c"qgroup_meta_free_all_pertrans\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_qgroup_meta_free_all_pertrans = dso_local global %struct.static_call_key { ptr @__traceiter_qgroup_meta_free_all_pertrans }, align 4
@__tracepoint_qgroup_meta_free_all_pertrans = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_qgroup_meta_free_all_pertrans, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_qgroup_meta_free_all_pertrans, ptr null, ptr @__traceiter_qgroup_meta_free_all_pertrans, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_qgroup_meta_free_all_pertrans = internal constant ptr @__tracepoint_qgroup_meta_free_all_pertrans, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_prelim_ref_merge = internal constant [23 x i8] c"btrfs_prelim_ref_merge\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_prelim_ref_merge = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_prelim_ref_merge }, align 4
@__tracepoint_btrfs_prelim_ref_merge = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_prelim_ref_merge, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_prelim_ref_merge, ptr null, ptr @__traceiter_btrfs_prelim_ref_merge, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_prelim_ref_merge = internal constant ptr @__tracepoint_btrfs_prelim_ref_merge, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_prelim_ref_insert = internal constant [24 x i8] c"btrfs_prelim_ref_insert\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_prelim_ref_insert = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_prelim_ref_insert }, align 4
@__tracepoint_btrfs_prelim_ref_insert = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_prelim_ref_insert, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_prelim_ref_insert, ptr null, ptr @__traceiter_btrfs_prelim_ref_insert, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_prelim_ref_insert = internal constant ptr @__tracepoint_btrfs_prelim_ref_insert, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_inode_mod_outstanding_extents = internal constant [36 x i8] c"btrfs_inode_mod_outstanding_extents\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_inode_mod_outstanding_extents = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_inode_mod_outstanding_extents }, align 4
@__tracepoint_btrfs_inode_mod_outstanding_extents = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_inode_mod_outstanding_extents, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_inode_mod_outstanding_extents, ptr null, ptr @__traceiter_btrfs_inode_mod_outstanding_extents, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_inode_mod_outstanding_extents = internal constant ptr @__tracepoint_btrfs_inode_mod_outstanding_extents, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_remove_block_group = internal constant [25 x i8] c"btrfs_remove_block_group\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_remove_block_group = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_remove_block_group }, align 4
@__tracepoint_btrfs_remove_block_group = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_remove_block_group, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_remove_block_group, ptr null, ptr @__traceiter_btrfs_remove_block_group, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_remove_block_group = internal constant ptr @__tracepoint_btrfs_remove_block_group, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_add_unused_block_group = internal constant [29 x i8] c"btrfs_add_unused_block_group\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_add_unused_block_group = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_add_unused_block_group }, align 4
@__tracepoint_btrfs_add_unused_block_group = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_add_unused_block_group, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_add_unused_block_group, ptr null, ptr @__traceiter_btrfs_add_unused_block_group, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_add_unused_block_group = internal constant ptr @__tracepoint_btrfs_add_unused_block_group, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_add_reclaim_block_group = internal constant [30 x i8] c"btrfs_add_reclaim_block_group\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_add_reclaim_block_group = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_add_reclaim_block_group }, align 4
@__tracepoint_btrfs_add_reclaim_block_group = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_add_reclaim_block_group, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_add_reclaim_block_group, ptr null, ptr @__traceiter_btrfs_add_reclaim_block_group, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_add_reclaim_block_group = internal constant ptr @__tracepoint_btrfs_add_reclaim_block_group, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_reclaim_block_group = internal constant [26 x i8] c"btrfs_reclaim_block_group\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_reclaim_block_group = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_reclaim_block_group }, align 4
@__tracepoint_btrfs_reclaim_block_group = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_reclaim_block_group, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_reclaim_block_group, ptr null, ptr @__traceiter_btrfs_reclaim_block_group, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_reclaim_block_group = internal constant ptr @__tracepoint_btrfs_reclaim_block_group, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_skip_unused_block_group = internal constant [30 x i8] c"btrfs_skip_unused_block_group\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_skip_unused_block_group = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_skip_unused_block_group }, align 4
@__tracepoint_btrfs_skip_unused_block_group = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_skip_unused_block_group, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_skip_unused_block_group, ptr null, ptr @__traceiter_btrfs_skip_unused_block_group, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_skip_unused_block_group = internal constant ptr @__tracepoint_btrfs_skip_unused_block_group, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_set_extent_bit = internal constant [21 x i8] c"btrfs_set_extent_bit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_set_extent_bit = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_set_extent_bit }, align 4
@__tracepoint_btrfs_set_extent_bit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_set_extent_bit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_set_extent_bit, ptr null, ptr @__traceiter_btrfs_set_extent_bit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_set_extent_bit = internal constant ptr @__tracepoint_btrfs_set_extent_bit, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_clear_extent_bit = internal constant [23 x i8] c"btrfs_clear_extent_bit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_clear_extent_bit = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_clear_extent_bit }, align 4
@__tracepoint_btrfs_clear_extent_bit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_clear_extent_bit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_clear_extent_bit, ptr null, ptr @__traceiter_btrfs_clear_extent_bit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_clear_extent_bit = internal constant ptr @__tracepoint_btrfs_clear_extent_bit, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_convert_extent_bit = internal constant [25 x i8] c"btrfs_convert_extent_bit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_convert_extent_bit = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_convert_extent_bit }, align 4
@__tracepoint_btrfs_convert_extent_bit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_convert_extent_bit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_convert_extent_bit, ptr null, ptr @__traceiter_btrfs_convert_extent_bit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_convert_extent_bit = internal constant ptr @__tracepoint_btrfs_convert_extent_bit, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_done_preemptive_reclaim = internal constant [30 x i8] c"btrfs_done_preemptive_reclaim\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_done_preemptive_reclaim = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_done_preemptive_reclaim }, align 4
@__tracepoint_btrfs_done_preemptive_reclaim = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_done_preemptive_reclaim, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_done_preemptive_reclaim, ptr null, ptr @__traceiter_btrfs_done_preemptive_reclaim, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_done_preemptive_reclaim = internal constant ptr @__tracepoint_btrfs_done_preemptive_reclaim, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_fail_all_tickets = internal constant [23 x i8] c"btrfs_fail_all_tickets\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_fail_all_tickets = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_fail_all_tickets }, align 4
@__tracepoint_btrfs_fail_all_tickets = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_fail_all_tickets, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_fail_all_tickets, ptr null, ptr @__traceiter_btrfs_fail_all_tickets, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_fail_all_tickets = internal constant ptr @__tracepoint_btrfs_fail_all_tickets, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_reserve_ticket = internal constant [21 x i8] c"btrfs_reserve_ticket\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_reserve_ticket = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_reserve_ticket }, align 4
@__tracepoint_btrfs_reserve_ticket = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_reserve_ticket, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_reserve_ticket, ptr null, ptr @__traceiter_btrfs_reserve_ticket, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_reserve_ticket = internal constant ptr @__tracepoint_btrfs_reserve_ticket, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_tree_read_lock = internal constant [21 x i8] c"btrfs_tree_read_lock\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_tree_read_lock = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_tree_read_lock }, align 4
@__tracepoint_btrfs_tree_read_lock = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_tree_read_lock, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_tree_read_lock, ptr null, ptr @__traceiter_btrfs_tree_read_lock, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_tree_read_lock = internal constant ptr @__tracepoint_btrfs_tree_read_lock, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_tree_lock = internal constant [16 x i8] c"btrfs_tree_lock\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_tree_lock = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_tree_lock }, align 4
@__tracepoint_btrfs_tree_lock = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_tree_lock, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_tree_lock, ptr null, ptr @__traceiter_btrfs_tree_lock, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_tree_lock = internal constant ptr @__tracepoint_btrfs_tree_lock, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_tree_unlock = internal constant [18 x i8] c"btrfs_tree_unlock\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_tree_unlock = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_tree_unlock }, align 4
@__tracepoint_btrfs_tree_unlock = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_tree_unlock, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_tree_unlock, ptr null, ptr @__traceiter_btrfs_tree_unlock, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_tree_unlock = internal constant ptr @__tracepoint_btrfs_tree_unlock, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_tree_read_unlock = internal constant [23 x i8] c"btrfs_tree_read_unlock\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_tree_read_unlock = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_tree_read_unlock }, align 4
@__tracepoint_btrfs_tree_read_unlock = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_tree_read_unlock, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_tree_read_unlock, ptr null, ptr @__traceiter_btrfs_tree_read_unlock, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_tree_read_unlock = internal constant ptr @__tracepoint_btrfs_tree_read_unlock, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_tree_read_unlock_blocking = internal constant [32 x i8] c"btrfs_tree_read_unlock_blocking\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_tree_read_unlock_blocking = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_tree_read_unlock_blocking }, align 4
@__tracepoint_btrfs_tree_read_unlock_blocking = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_tree_read_unlock_blocking, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_tree_read_unlock_blocking, ptr null, ptr @__traceiter_btrfs_tree_read_unlock_blocking, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_tree_read_unlock_blocking = internal constant ptr @__tracepoint_btrfs_tree_read_unlock_blocking, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_set_lock_blocking_read = internal constant [29 x i8] c"btrfs_set_lock_blocking_read\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_set_lock_blocking_read = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_set_lock_blocking_read }, align 4
@__tracepoint_btrfs_set_lock_blocking_read = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_set_lock_blocking_read, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_set_lock_blocking_read, ptr null, ptr @__traceiter_btrfs_set_lock_blocking_read, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_set_lock_blocking_read = internal constant ptr @__tracepoint_btrfs_set_lock_blocking_read, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_set_lock_blocking_write = internal constant [30 x i8] c"btrfs_set_lock_blocking_write\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_set_lock_blocking_write = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_set_lock_blocking_write }, align 4
@__tracepoint_btrfs_set_lock_blocking_write = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_set_lock_blocking_write, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_set_lock_blocking_write, ptr null, ptr @__traceiter_btrfs_set_lock_blocking_write, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_set_lock_blocking_write = internal constant ptr @__tracepoint_btrfs_set_lock_blocking_write, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_try_tree_read_lock = internal constant [25 x i8] c"btrfs_try_tree_read_lock\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_try_tree_read_lock = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_try_tree_read_lock }, align 4
@__tracepoint_btrfs_try_tree_read_lock = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_try_tree_read_lock, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_try_tree_read_lock, ptr null, ptr @__traceiter_btrfs_try_tree_read_lock, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_try_tree_read_lock = internal constant ptr @__tracepoint_btrfs_try_tree_read_lock, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_try_tree_write_lock = internal constant [26 x i8] c"btrfs_try_tree_write_lock\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_try_tree_write_lock = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_try_tree_write_lock }, align 4
@__tracepoint_btrfs_try_tree_write_lock = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_try_tree_write_lock, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_try_tree_write_lock, ptr null, ptr @__traceiter_btrfs_try_tree_write_lock, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_try_tree_write_lock = internal constant ptr @__tracepoint_btrfs_try_tree_write_lock, section "__tracepoints_ptrs", align 4
@__tpstrtab_btrfs_tree_read_lock_atomic = internal constant [28 x i8] c"btrfs_tree_read_lock_atomic\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_btrfs_tree_read_lock_atomic = dso_local global %struct.static_call_key { ptr @__traceiter_btrfs_tree_read_lock_atomic }, align 4
@__tracepoint_btrfs_tree_read_lock_atomic = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_btrfs_tree_read_lock_atomic, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_btrfs_tree_read_lock_atomic, ptr null, ptr @__traceiter_btrfs_tree_read_lock_atomic, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_btrfs_tree_read_lock_atomic = internal constant ptr @__tracepoint_btrfs_tree_read_lock_atomic, section "__tracepoints_ptrs", align 4
@__tpstrtab_update_bytes_may_use = internal constant [21 x i8] c"update_bytes_may_use\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_update_bytes_may_use = dso_local global %struct.static_call_key { ptr @__traceiter_update_bytes_may_use }, align 4
@__tracepoint_update_bytes_may_use = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_update_bytes_may_use, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_update_bytes_may_use, ptr null, ptr @__traceiter_update_bytes_may_use, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_update_bytes_may_use = internal constant ptr @__tracepoint_update_bytes_may_use, section "__tracepoints_ptrs", align 4
@__tpstrtab_update_bytes_pinned = internal constant [20 x i8] c"update_bytes_pinned\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_update_bytes_pinned = dso_local global %struct.static_call_key { ptr @__traceiter_update_bytes_pinned }, align 4
@__tracepoint_update_bytes_pinned = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_update_bytes_pinned, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_update_bytes_pinned, ptr null, ptr @__traceiter_update_bytes_pinned, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_update_bytes_pinned = internal constant ptr @__tracepoint_update_bytes_pinned, section "__tracepoints_ptrs", align 4
@str__btrfs__trace_system_name = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"btrfs\00", [26 x i8] zeroinitializer }, align 32
@.str = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"COMPACT_SKIPPED\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_SKIPPED = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_SKIPPED = internal global ptr @__TRACE_SYSTEM_COMPACT_SKIPPED, section "_ftrace_eval_map", align 4
@.str.1 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"COMPACT_DEFERRED\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_DEFERRED = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.1, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_DEFERRED = internal global ptr @__TRACE_SYSTEM_COMPACT_DEFERRED, section "_ftrace_eval_map", align 4
@.str.2 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"COMPACT_CONTINUE\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_CONTINUE = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.2, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_CONTINUE = internal global ptr @__TRACE_SYSTEM_COMPACT_CONTINUE, section "_ftrace_eval_map", align 4
@.str.3 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"COMPACT_SUCCESS\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_SUCCESS = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.3, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_SUCCESS = internal global ptr @__TRACE_SYSTEM_COMPACT_SUCCESS, section "_ftrace_eval_map", align 4
@.str.4 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"COMPACT_PARTIAL_SKIPPED\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.4, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED = internal global ptr @__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, section "_ftrace_eval_map", align 4
@.str.5 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"COMPACT_COMPLETE\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_COMPLETE = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.5, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_COMPLETE = internal global ptr @__TRACE_SYSTEM_COMPACT_COMPLETE, section "_ftrace_eval_map", align 4
@.str.6 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"COMPACT_NO_SUITABLE_PAGE\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.6, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE = internal global ptr @__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, section "_ftrace_eval_map", align 4
@.str.7 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"COMPACT_NOT_SUITABLE_ZONE\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.7, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE = internal global ptr @__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, section "_ftrace_eval_map", align 4
@.str.8 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"COMPACT_CONTENDED\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_CONTENDED = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.8, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_CONTENDED = internal global ptr @__TRACE_SYSTEM_COMPACT_CONTENDED, section "_ftrace_eval_map", align 4
@.str.9 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"COMPACT_PRIO_SYNC_FULL\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.9, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL = internal global ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, section "_ftrace_eval_map", align 4
@.str.10 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"COMPACT_PRIO_SYNC_LIGHT\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.10, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT = internal global ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, section "_ftrace_eval_map", align 4
@.str.11 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"COMPACT_PRIO_ASYNC\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_PRIO_ASYNC = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.11, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_PRIO_ASYNC = internal global ptr @__TRACE_SYSTEM_COMPACT_PRIO_ASYNC, section "_ftrace_eval_map", align 4
@.str.12 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"ZONE_DMA\00", [23 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_ZONE_DMA = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.12, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_ZONE_DMA = internal global ptr @__TRACE_SYSTEM_ZONE_DMA, section "_ftrace_eval_map", align 4
@.str.13 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ZONE_NORMAL\00", [20 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_ZONE_NORMAL = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.13, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_ZONE_NORMAL = internal global ptr @__TRACE_SYSTEM_ZONE_NORMAL, section "_ftrace_eval_map", align 4
@.str.14 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ZONE_HIGHMEM\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_ZONE_HIGHMEM = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.14, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_ZONE_HIGHMEM = internal global ptr @__TRACE_SYSTEM_ZONE_HIGHMEM, section "_ftrace_eval_map", align 4
@.str.15 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ZONE_MOVABLE\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_ZONE_MOVABLE = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.15, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_ZONE_MOVABLE = internal global ptr @__TRACE_SYSTEM_ZONE_MOVABLE, section "_ftrace_eval_map", align 4
@.str.16 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"LRU_INACTIVE_ANON\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_INACTIVE_ANON = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.16, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_INACTIVE_ANON = internal global ptr @__TRACE_SYSTEM_LRU_INACTIVE_ANON, section "_ftrace_eval_map", align 4
@.str.17 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"LRU_ACTIVE_ANON\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_ACTIVE_ANON = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.17, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_ACTIVE_ANON = internal global ptr @__TRACE_SYSTEM_LRU_ACTIVE_ANON, section "_ftrace_eval_map", align 4
@.str.18 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"LRU_INACTIVE_FILE\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_INACTIVE_FILE = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.18, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_INACTIVE_FILE = internal global ptr @__TRACE_SYSTEM_LRU_INACTIVE_FILE, section "_ftrace_eval_map", align 4
@.str.19 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"LRU_ACTIVE_FILE\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_ACTIVE_FILE = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.19, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_ACTIVE_FILE = internal global ptr @__TRACE_SYSTEM_LRU_ACTIVE_FILE, section "_ftrace_eval_map", align 4
@.str.20 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"LRU_UNEVICTABLE\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_UNEVICTABLE = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.20, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_UNEVICTABLE = internal global ptr @__TRACE_SYSTEM_LRU_UNEVICTABLE, section "_ftrace_eval_map", align 4
@.str.21 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"BTRFS_RESERVE_NO_FLUSH\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_BTRFS_RESERVE_NO_FLUSH = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.21, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_BTRFS_RESERVE_NO_FLUSH = internal global ptr @__TRACE_SYSTEM_BTRFS_RESERVE_NO_FLUSH, section "_ftrace_eval_map", align 4
@.str.22 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"BTRFS_RESERVE_FLUSH_LIMIT\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_LIMIT = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.22, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_LIMIT = internal global ptr @__TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_LIMIT, section "_ftrace_eval_map", align 4
@.str.23 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"BTRFS_RESERVE_FLUSH_ALL\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_ALL = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.23, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_ALL = internal global ptr @__TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_ALL, section "_ftrace_eval_map", align 4
@.str.24 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"BTRFS_RESERVE_FLUSH_ALL_STEAL\00", [34 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_ALL_STEAL = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.24, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_ALL_STEAL = internal global ptr @__TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_ALL_STEAL, section "_ftrace_eval_map", align 4
@.str.25 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"BTRFS_FILE_EXTENT_INLINE\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_BTRFS_FILE_EXTENT_INLINE = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.25, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_BTRFS_FILE_EXTENT_INLINE = internal global ptr @__TRACE_SYSTEM_BTRFS_FILE_EXTENT_INLINE, section "_ftrace_eval_map", align 4
@.str.26 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"BTRFS_FILE_EXTENT_REG\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_BTRFS_FILE_EXTENT_REG = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.26, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_BTRFS_FILE_EXTENT_REG = internal global ptr @__TRACE_SYSTEM_BTRFS_FILE_EXTENT_REG, section "_ftrace_eval_map", align 4
@.str.27 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"BTRFS_FILE_EXTENT_PREALLOC\00", [37 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_BTRFS_FILE_EXTENT_PREALLOC = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.27, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_BTRFS_FILE_EXTENT_PREALLOC = internal global ptr @__TRACE_SYSTEM_BTRFS_FILE_EXTENT_PREALLOC, section "_ftrace_eval_map", align 4
@.str.28 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"BTRFS_QGROUP_RSV_DATA\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_BTRFS_QGROUP_RSV_DATA = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.28, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_BTRFS_QGROUP_RSV_DATA = internal global ptr @__TRACE_SYSTEM_BTRFS_QGROUP_RSV_DATA, section "_ftrace_eval_map", align 4
@.str.29 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"BTRFS_QGROUP_RSV_META_PERTRANS\00", [33 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_BTRFS_QGROUP_RSV_META_PERTRANS = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.29, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_BTRFS_QGROUP_RSV_META_PERTRANS = internal global ptr @__TRACE_SYSTEM_BTRFS_QGROUP_RSV_META_PERTRANS, section "_ftrace_eval_map", align 4
@.str.30 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"BTRFS_QGROUP_RSV_META_PREALLOC\00", [33 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_BTRFS_QGROUP_RSV_META_PREALLOC = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.30, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_BTRFS_QGROUP_RSV_META_PREALLOC = internal global ptr @__TRACE_SYSTEM_BTRFS_QGROUP_RSV_META_PREALLOC, section "_ftrace_eval_map", align 4
@.str.31 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"IO_TREE_FS_PINNED_EXTENTS\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IO_TREE_FS_PINNED_EXTENTS = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.31, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_IO_TREE_FS_PINNED_EXTENTS = internal global ptr @__TRACE_SYSTEM_IO_TREE_FS_PINNED_EXTENTS, section "_ftrace_eval_map", align 4
@.str.32 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"IO_TREE_FS_EXCLUDED_EXTENTS\00", [36 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IO_TREE_FS_EXCLUDED_EXTENTS = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.32, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_IO_TREE_FS_EXCLUDED_EXTENTS = internal global ptr @__TRACE_SYSTEM_IO_TREE_FS_EXCLUDED_EXTENTS, section "_ftrace_eval_map", align 4
@.str.33 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"IO_TREE_BTREE_INODE_IO\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IO_TREE_BTREE_INODE_IO = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.33, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_IO_TREE_BTREE_INODE_IO = internal global ptr @__TRACE_SYSTEM_IO_TREE_BTREE_INODE_IO, section "_ftrace_eval_map", align 4
@.str.34 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"IO_TREE_INODE_IO\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IO_TREE_INODE_IO = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.34, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_IO_TREE_INODE_IO = internal global ptr @__TRACE_SYSTEM_IO_TREE_INODE_IO, section "_ftrace_eval_map", align 4
@.str.35 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"IO_TREE_INODE_IO_FAILURE\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IO_TREE_INODE_IO_FAILURE = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.35, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_IO_TREE_INODE_IO_FAILURE = internal global ptr @__TRACE_SYSTEM_IO_TREE_INODE_IO_FAILURE, section "_ftrace_eval_map", align 4
@.str.36 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"IO_TREE_RELOC_BLOCKS\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IO_TREE_RELOC_BLOCKS = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.36, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_IO_TREE_RELOC_BLOCKS = internal global ptr @__TRACE_SYSTEM_IO_TREE_RELOC_BLOCKS, section "_ftrace_eval_map", align 4
@.str.37 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"IO_TREE_TRANS_DIRTY_PAGES\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IO_TREE_TRANS_DIRTY_PAGES = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.37, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_IO_TREE_TRANS_DIRTY_PAGES = internal global ptr @__TRACE_SYSTEM_IO_TREE_TRANS_DIRTY_PAGES, section "_ftrace_eval_map", align 4
@.str.38 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"IO_TREE_ROOT_DIRTY_LOG_PAGES\00", [35 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IO_TREE_ROOT_DIRTY_LOG_PAGES = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.38, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_IO_TREE_ROOT_DIRTY_LOG_PAGES = internal global ptr @__TRACE_SYSTEM_IO_TREE_ROOT_DIRTY_LOG_PAGES, section "_ftrace_eval_map", align 4
@.str.39 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"IO_TREE_INODE_FILE_EXTENT\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IO_TREE_INODE_FILE_EXTENT = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.39, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_IO_TREE_INODE_FILE_EXTENT = internal global ptr @__TRACE_SYSTEM_IO_TREE_INODE_FILE_EXTENT, section "_ftrace_eval_map", align 4
@.str.40 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"IO_TREE_LOG_CSUM_RANGE\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IO_TREE_LOG_CSUM_RANGE = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.40, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_IO_TREE_LOG_CSUM_RANGE = internal global ptr @__TRACE_SYSTEM_IO_TREE_LOG_CSUM_RANGE, section "_ftrace_eval_map", align 4
@.str.41 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"IO_TREE_SELFTEST\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IO_TREE_SELFTEST = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.41, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_IO_TREE_SELFTEST = internal global ptr @__TRACE_SYSTEM_IO_TREE_SELFTEST, section "_ftrace_eval_map", align 4
@.str.42 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"FLUSH_DELAYED_ITEMS_NR\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_FLUSH_DELAYED_ITEMS_NR = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.42, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_FLUSH_DELAYED_ITEMS_NR = internal global ptr @__TRACE_SYSTEM_FLUSH_DELAYED_ITEMS_NR, section "_ftrace_eval_map", align 4
@.str.43 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"FLUSH_DELAYED_ITEMS\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_FLUSH_DELAYED_ITEMS = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.43, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_FLUSH_DELAYED_ITEMS = internal global ptr @__TRACE_SYSTEM_FLUSH_DELAYED_ITEMS, section "_ftrace_eval_map", align 4
@.str.44 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"FLUSH_DELALLOC\00", [17 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_FLUSH_DELALLOC = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.44, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_FLUSH_DELALLOC = internal global ptr @__TRACE_SYSTEM_FLUSH_DELALLOC, section "_ftrace_eval_map", align 4
@.str.45 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"FLUSH_DELALLOC_WAIT\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_FLUSH_DELALLOC_WAIT = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.45, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_FLUSH_DELALLOC_WAIT = internal global ptr @__TRACE_SYSTEM_FLUSH_DELALLOC_WAIT, section "_ftrace_eval_map", align 4
@.str.46 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"FLUSH_DELALLOC_FULL\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_FLUSH_DELALLOC_FULL = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.46, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_FLUSH_DELALLOC_FULL = internal global ptr @__TRACE_SYSTEM_FLUSH_DELALLOC_FULL, section "_ftrace_eval_map", align 4
@.str.47 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"FLUSH_DELAYED_REFS_NR\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_FLUSH_DELAYED_REFS_NR = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.47, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_FLUSH_DELAYED_REFS_NR = internal global ptr @__TRACE_SYSTEM_FLUSH_DELAYED_REFS_NR, section "_ftrace_eval_map", align 4
@.str.48 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"FLUSH_DELAYED_REFS\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_FLUSH_DELAYED_REFS = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.48, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_FLUSH_DELAYED_REFS = internal global ptr @__TRACE_SYSTEM_FLUSH_DELAYED_REFS, section "_ftrace_eval_map", align 4
@.str.49 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ALLOC_CHUNK\00", [20 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_ALLOC_CHUNK = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.49, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_ALLOC_CHUNK = internal global ptr @__TRACE_SYSTEM_ALLOC_CHUNK, section "_ftrace_eval_map", align 4
@.str.50 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"ALLOC_CHUNK_FORCE\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_ALLOC_CHUNK_FORCE = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.50, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_ALLOC_CHUNK_FORCE = internal global ptr @__TRACE_SYSTEM_ALLOC_CHUNK_FORCE, section "_ftrace_eval_map", align 4
@.str.51 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"RUN_DELAYED_IPUTS\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RUN_DELAYED_IPUTS = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.51, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_RUN_DELAYED_IPUTS = internal global ptr @__TRACE_SYSTEM_RUN_DELAYED_IPUTS, section "_ftrace_eval_map", align 4
@.str.52 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"COMMIT_TRANS\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMMIT_TRANS = internal global %struct.trace_eval_map { ptr @str__btrfs__trace_system_name, ptr @.str.52, i32 11 }, section ".init.data", align 4
@TRACE_SYSTEM_COMMIT_TRANS = internal global ptr @__TRACE_SYSTEM_COMMIT_TRANS, section "_ftrace_eval_map", align 4
@trace_event_fields_btrfs_transaction_commit = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.157, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.158, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_btrfs_transaction_commit = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_transaction_commit, ptr @perf_trace_btrfs_transaction_commit, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_transaction_commit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_transaction_commit, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_transaction_commit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_transaction_commit = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_transaction_commit, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_transaction_commit = internal global { [647 x i8], [185 x i8] } { [647 x i8] c"\22%pU: root=%llu(%s) gen=%llu\22, REC->fsid, REC->root_objectid, ((REC->root_objectid >= -9ULL) || (REC->root_objectid >= 1ULL && REC->root_objectid <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->root_objectid, symbols); }) : \22-\22, REC->generation\00", [185 x i8] zeroinitializer }, align 32
@event_btrfs_transaction_commit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_transaction_commit, %union.anon.113 { ptr @__tracepoint_btrfs_transaction_commit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_transaction_commit }, ptr @print_fmt_btrfs_transaction_commit, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_transaction_commit = internal global ptr @event_btrfs_transaction_commit, section "_ftrace_events", align 4
@trace_event_fields_btrfs__inode = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.174, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.175, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.176, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.157, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.177, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.178, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.158, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_btrfs__inode = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs__inode, ptr @perf_trace_btrfs__inode, ptr @trace_event_reg, ptr @trace_event_fields_btrfs__inode, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs__inode, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs__inode, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs__inode = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs__inode, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs__inode = internal global { [796 x i8], [196 x i8] } { [796 x i8] c"\22%pU: root=%llu(%s) gen=%llu ino=%llu blocks=%llu disk_i_size=%llu last_trans=%llu logged_trans=%llu\22, REC->fsid, REC->root_objectid, ((REC->root_objectid >= -9ULL) || (REC->root_objectid >= 1ULL && REC->root_objectid <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->root_objectid, symbols); }) : \22-\22, REC->generation, REC->ino, REC->blocks, REC->disk_i_size, REC->last_trans, REC->logged_trans\00", [196 x i8] zeroinitializer }, align 32
@event_btrfs_inode_new = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__inode, %union.anon.113 { ptr @__tracepoint_btrfs_inode_new }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__inode }, ptr @print_fmt_btrfs__inode, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_inode_new = internal global ptr @event_btrfs_inode_new, section "_ftrace_events", align 4
@event_btrfs_inode_request = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__inode, %union.anon.113 { ptr @__tracepoint_btrfs_inode_request }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__inode }, ptr @print_fmt_btrfs__inode, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_inode_request = internal global ptr @event_btrfs_inode_request, section "_ftrace_events", align 4
@event_btrfs_inode_evict = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__inode, %union.anon.113 { ptr @__tracepoint_btrfs_inode_evict }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__inode }, ptr @print_fmt_btrfs__inode, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_inode_evict = internal global ptr @event_btrfs_inode_evict, section "_ftrace_events", align 4
@trace_event_fields_btrfs_get_extent = internal global { [12 x %struct.trace_event_fields], [64 x i8] } { [12 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.158, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.174, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.180, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.181, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.182, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.183, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.184, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.185, %union.anon.111 { %struct.anon.112 { ptr @.str.186, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.188, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.189, %union.anon.111 { %struct.anon.112 { ptr @.str.190, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [64 x i8] zeroinitializer }, align 32
@event_class_btrfs_get_extent = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_get_extent, ptr @perf_trace_btrfs_get_extent, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_get_extent, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_get_extent, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_get_extent, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_get_extent = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_get_extent, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_get_extent = internal global { [1440 x i8], [352 x i8] } { [1440 x i8] c"\22%pU: root=%llu(%s) ino=%llu start=%llu len=%llu orig_start=%llu block_start=%llu(%s) block_len=%llu flags=%s refs=%u compress_type=%u\22, REC->fsid, REC->root_objectid, ((REC->root_objectid >= -9ULL) || (REC->root_objectid >= 1ULL && REC->root_objectid <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->root_objectid, symbols); }) : \22-\22, REC->ino, REC->start, REC->len, REC->orig_start, REC->block_start, (REC->block_start >= ((u64)-4)) ? \22-\22 : ({ static const struct trace_print_flags_u64 symbols[] = { { ((u64)-4), \22LAST_BYTE\22 }, { ((u64)-3), \22HOLE\22 }, { ((u64)-2), \22INLINE\22 }, { ((u64)-1), \22DELALLOC\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->block_start, symbols); }), REC->block_len, __print_flags(REC->flags, \22|\22, { (1 << EXTENT_FLAG_PINNED), \22PINNED\22 }, { (1 << EXTENT_FLAG_COMPRESSED), \22COMPRESSED\22 }, { (1 << EXTENT_FLAG_PREALLOC), \22PREALLOC\22 }, { (1 << EXTENT_FLAG_LOGGING), \22LOGGING\22 }, { (1 << EXTENT_FLAG_FILLING), \22FILLING\22 }, { (1 << EXTENT_FLAG_FS_MAPPING), \22FS_MAPPING\22 }), REC->refs, REC->compress_type\00", [352 x i8] zeroinitializer }, align 32
@event_btrfs_get_extent = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_get_extent, %union.anon.113 { ptr @__tracepoint_btrfs_get_extent }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_get_extent }, ptr @print_fmt_btrfs_get_extent, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_get_extent = internal global ptr @event_btrfs_get_extent, section "_ftrace_events", align 4
@trace_event_fields_btrfs_handle_em_exist = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.204, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.205, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.206, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.207, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.180, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.181, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_btrfs_handle_em_exist = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_handle_em_exist, ptr @perf_trace_btrfs_handle_em_exist, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_handle_em_exist, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_handle_em_exist, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_handle_em_exist, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_handle_em_exist = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_handle_em_exist, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_handle_em_exist = internal global { [170 x i8], [54 x i8] } { [170 x i8] c"\22%pU: start=%llu len=%llu existing(start=%llu len=%llu) em(start=%llu len=%llu)\22, REC->fsid, REC->start, REC->len, REC->e_start, REC->e_len, REC->map_start, REC->map_len\00", [54 x i8] zeroinitializer }, align 32
@event_btrfs_handle_em_exist = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_handle_em_exist, %union.anon.113 { ptr @__tracepoint_btrfs_handle_em_exist }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_handle_em_exist }, ptr @print_fmt_btrfs_handle_em_exist, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_handle_em_exist = internal global ptr @event_btrfs_handle_em_exist, section "_ftrace_events", align 4
@trace_event_fields_btrfs__file_extent_item_regular = internal global { [15 x %struct.trace_event_fields], [88 x i8] } { [15 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.209, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.174, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.210, %union.anon.111 { %struct.anon.112 { ptr @.str.211, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.212, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.213, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.214, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.215, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.216, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.217, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.218, %union.anon.111 { %struct.anon.112 { ptr @.str.219, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.218, %union.anon.111 { %struct.anon.112 { ptr @.str.220, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.221, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.222, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [88 x i8] zeroinitializer }, align 32
@event_class_btrfs__file_extent_item_regular = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs__file_extent_item_regular, ptr @perf_trace_btrfs__file_extent_item_regular, ptr @trace_event_reg, ptr @trace_event_fields_btrfs__file_extent_item_regular, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs__file_extent_item_regular, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs__file_extent_item_regular, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_btrfs__file_extent_item_inline = internal global { [10 x %struct.trace_event_fields], [48 x i8] } { [10 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.209, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.174, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.210, %union.anon.111 { %struct.anon.112 { ptr @.str.211, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.212, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.218, %union.anon.111 { %struct.anon.112 { ptr @.str.219, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.218, %union.anon.111 { %struct.anon.112 { ptr @.str.220, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.221, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.222, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_btrfs__file_extent_item_inline = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs__file_extent_item_inline, ptr @perf_trace_btrfs__file_extent_item_inline, ptr @trace_event_reg, ptr @trace_event_fields_btrfs__file_extent_item_inline, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs__file_extent_item_inline, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs__file_extent_item_inline, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs__file_extent_item_regular = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs__file_extent_item_regular, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs__file_extent_item_regular = internal global { [1105 x i8], [271 x i8] } { [1105 x i8] c"\22%pU: root=%llu(%s) inode=%llu size=%llu disk_isize=%llu file extent range=[%llu %llu] (num_bytes=%llu ram_bytes=%llu disk_bytenr=%llu disk_num_bytes=%llu extent_offset=%llu type=%s compression=%u\22, REC->fsid, REC->root_obj, ((REC->root_obj >= -9ULL) || (REC->root_obj >= 1ULL && REC->root_obj <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->root_obj, symbols); }) : \22-\22, REC->ino, REC->isize, REC->disk_isize, REC->extent_start, REC->extent_end, REC->num_bytes, REC->ram_bytes, REC->disk_bytenr, REC->disk_num_bytes, REC->extent_offset, __print_symbolic(REC->extent_type, {BTRFS_FILE_EXTENT_INLINE, \22INLINE\22}, {BTRFS_FILE_EXTENT_REG, \22REG\22}, {BTRFS_FILE_EXTENT_PREALLOC, \22PREALLOC\22}), REC->compression\00", [271 x i8] zeroinitializer }, align 32
@event_btrfs_get_extent_show_fi_regular = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__file_extent_item_regular, %union.anon.113 { ptr @__tracepoint_btrfs_get_extent_show_fi_regular }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__file_extent_item_regular }, ptr @print_fmt_btrfs__file_extent_item_regular, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_get_extent_show_fi_regular = internal global ptr @event_btrfs_get_extent_show_fi_regular, section "_ftrace_events", align 4
@event_btrfs_truncate_show_fi_regular = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__file_extent_item_regular, %union.anon.113 { ptr @__tracepoint_btrfs_truncate_show_fi_regular }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__file_extent_item_regular }, ptr @print_fmt_btrfs__file_extent_item_regular, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_truncate_show_fi_regular = internal global ptr @event_btrfs_truncate_show_fi_regular, section "_ftrace_events", align 4
@trace_event_type_funcs_btrfs__file_extent_item_inline = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs__file_extent_item_inline, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs__file_extent_item_inline = internal global { [934 x i8], [250 x i8] } { [934 x i8] c"\22%pU: root=%llu(%s) inode=%llu size=%llu disk_isize=%llu file extent range=[%llu %llu] extent_type=%s compression=%u\22, REC->fsid, REC->root_obj, ((REC->root_obj >= -9ULL) || (REC->root_obj >= 1ULL && REC->root_obj <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->root_obj, symbols); }) : \22-\22, REC->ino, REC->isize, REC->disk_isize, REC->extent_start, REC->extent_end, __print_symbolic(REC->extent_type, {BTRFS_FILE_EXTENT_INLINE, \22INLINE\22}, {BTRFS_FILE_EXTENT_REG, \22REG\22}, {BTRFS_FILE_EXTENT_PREALLOC, \22PREALLOC\22}), REC->compression\00", [250 x i8] zeroinitializer }, align 32
@event_btrfs_get_extent_show_fi_inline = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__file_extent_item_inline, %union.anon.113 { ptr @__tracepoint_btrfs_get_extent_show_fi_inline }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__file_extent_item_inline }, ptr @print_fmt_btrfs__file_extent_item_inline, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_get_extent_show_fi_inline = internal global ptr @event_btrfs_get_extent_show_fi_inline, section "_ftrace_events", align 4
@event_btrfs_truncate_show_fi_inline = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__file_extent_item_inline, %union.anon.113 { ptr @__tracepoint_btrfs_truncate_show_fi_inline }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__file_extent_item_inline }, ptr @print_fmt_btrfs__file_extent_item_inline, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_truncate_show_fi_inline = internal global ptr @event_btrfs_truncate_show_fi_inline, section "_ftrace_events", align 4
@trace_event_fields_btrfs__ordered_extent = internal global { [13 x %struct.trace_event_fields], [72 x i8] } { [13 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.174, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.228, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.180, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.181, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.229, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.230, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.185, %union.anon.111 { %struct.anon.112 { ptr @.str.186, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.190, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.188, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.158, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.231, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [72 x i8] zeroinitializer }, align 32
@event_class_btrfs__ordered_extent = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs__ordered_extent, ptr @perf_trace_btrfs__ordered_extent, ptr @trace_event_reg, ptr @trace_event_fields_btrfs__ordered_extent, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs__ordered_extent, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs__ordered_extent, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs__ordered_extent = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs__ordered_extent, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs__ordered_extent = internal global { [1324 x i8], [340 x i8] } { [1324 x i8] c"\22%pU: root=%llu(%s) ino=%llu file_offset=%llu start=%llu len=%llu disk_len=%llu truncated_len=%llu bytes_left=%llu flags=%s compress_type=%d refs=%d\22, REC->fsid, REC->root_objectid, ((REC->root_objectid >= -9ULL) || (REC->root_objectid >= 1ULL && REC->root_objectid <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->root_objectid, symbols); }) : \22-\22, REC->ino, REC->file_offset, REC->start, REC->len, REC->disk_len, REC->truncated_len, REC->bytes_left, __print_flags(REC->flags, \22|\22, { (1 << BTRFS_ORDERED_REGULAR), \22REGULAR\22 }, { (1 << BTRFS_ORDERED_NOCOW), \22NOCOW\22 }, { (1 << BTRFS_ORDERED_PREALLOC), \22PREALLOC\22 }, { (1 << BTRFS_ORDERED_COMPRESSED), \22COMPRESSED\22 }, { (1 << BTRFS_ORDERED_DIRECT), \22DIRECT\22 }, { (1 << BTRFS_ORDERED_IO_DONE), \22IO_DONE\22 }, { (1 << BTRFS_ORDERED_COMPLETE), \22COMPLETE\22 }, { (1 << BTRFS_ORDERED_IOERR), \22IOERR\22 }, { (1 << BTRFS_ORDERED_TRUNCATED), \22TRUNCATED\22 }), REC->compress_type, REC->refs\00", [340 x i8] zeroinitializer }, align 32
@event_btrfs_ordered_extent_add = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__ordered_extent, %union.anon.113 { ptr @__tracepoint_btrfs_ordered_extent_add }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__ordered_extent }, ptr @print_fmt_btrfs__ordered_extent, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_ordered_extent_add = internal global ptr @event_btrfs_ordered_extent_add, section "_ftrace_events", align 4
@event_btrfs_ordered_extent_remove = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__ordered_extent, %union.anon.113 { ptr @__tracepoint_btrfs_ordered_extent_remove }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__ordered_extent }, ptr @print_fmt_btrfs__ordered_extent, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_ordered_extent_remove = internal global ptr @event_btrfs_ordered_extent_remove, section "_ftrace_events", align 4
@event_btrfs_ordered_extent_start = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__ordered_extent, %union.anon.113 { ptr @__tracepoint_btrfs_ordered_extent_start }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__ordered_extent }, ptr @print_fmt_btrfs__ordered_extent, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_ordered_extent_start = internal global ptr @event_btrfs_ordered_extent_start, section "_ftrace_events", align 4
@event_btrfs_ordered_extent_put = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__ordered_extent, %union.anon.113 { ptr @__tracepoint_btrfs_ordered_extent_put }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__ordered_extent }, ptr @print_fmt_btrfs__ordered_extent, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_ordered_extent_put = internal global ptr @event_btrfs_ordered_extent_put, section "_ftrace_events", align 4
@trace_event_fields_btrfs__writepage = internal global { [13 x %struct.trace_event_fields], [72 x i8] } { [13 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.174, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.185, %union.anon.111 { %struct.anon.112 { ptr @.str.240, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.241, %union.anon.111 { %struct.anon.112 { ptr @.str.242, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.241, %union.anon.111 { %struct.anon.112 { ptr @.str.243, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.210, %union.anon.111 { %struct.anon.112 { ptr @.str.244, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.210, %union.anon.111 { %struct.anon.112 { ptr @.str.245, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.246, %union.anon.111 { %struct.anon.112 { ptr @.str.247, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.246, %union.anon.111 { %struct.anon.112 { ptr @.str.248, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.246, %union.anon.111 { %struct.anon.112 { ptr @.str.249, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.185, %union.anon.111 { %struct.anon.112 { ptr @.str.250, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.158, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [72 x i8] zeroinitializer }, align 32
@event_class_btrfs__writepage = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs__writepage, ptr @perf_trace_btrfs__writepage, ptr @trace_event_reg, ptr @trace_event_fields_btrfs__writepage, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs__writepage, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs__writepage, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs__writepage = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs__writepage, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs__writepage = internal global { [948 x i8], [236 x i8] } { [948 x i8] c"\22%pU: root=%llu(%s) ino=%llu page_index=%lu nr_to_write=%ld pages_skipped=%ld range_start=%llu range_end=%llu for_kupdate=%d for_reclaim=%d range_cyclic=%d writeback_index=%lu\22, REC->fsid, REC->root_objectid, ((REC->root_objectid >= -9ULL) || (REC->root_objectid >= 1ULL && REC->root_objectid <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->root_objectid, symbols); }) : \22-\22, REC->ino, REC->index, REC->nr_to_write, REC->pages_skipped, REC->range_start, REC->range_end, REC->for_kupdate, REC->for_reclaim, REC->range_cyclic, REC->writeback_index\00", [236 x i8] zeroinitializer }, align 32
@event___extent_writepage = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__writepage, %union.anon.113 { ptr @__tracepoint___extent_writepage }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__writepage }, ptr @print_fmt_btrfs__writepage, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event___extent_writepage = internal global ptr @event___extent_writepage, section "_ftrace_events", align 4
@trace_event_fields_btrfs_writepage_end_io_hook = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.174, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.180, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.252, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.253, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.158, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_btrfs_writepage_end_io_hook = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_writepage_end_io_hook, ptr @perf_trace_btrfs_writepage_end_io_hook, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_writepage_end_io_hook, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_writepage_end_io_hook, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_writepage_end_io_hook, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_writepage_end_io_hook = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_writepage_end_io_hook, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_writepage_end_io_hook = internal global { [709 x i8], [187 x i8] } { [709 x i8] c"\22%pU: root=%llu(%s) ino=%llu start=%llu end=%llu uptodate=%d\22, REC->fsid, REC->root_objectid, ((REC->root_objectid >= -9ULL) || (REC->root_objectid >= 1ULL && REC->root_objectid <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->root_objectid, symbols); }) : \22-\22, REC->ino, REC->start, REC->end, REC->uptodate\00", [187 x i8] zeroinitializer }, align 32
@event_btrfs_writepage_end_io_hook = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_writepage_end_io_hook, %union.anon.113 { ptr @__tracepoint_btrfs_writepage_end_io_hook }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_writepage_end_io_hook }, ptr @print_fmt_btrfs_writepage_end_io_hook, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_writepage_end_io_hook = internal global ptr @event_btrfs_writepage_end_io_hook, section "_ftrace_events", align 4
@trace_event_fields_btrfs_sync_file = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.174, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.255, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.256, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.158, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_btrfs_sync_file = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_sync_file, ptr @perf_trace_btrfs_sync_file, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_sync_file, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_sync_file, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_sync_file, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_sync_file = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_sync_file, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_sync_file = internal global { [692 x i8], [172 x i8] } { [692 x i8] c"\22%pU: root=%llu(%s) ino=%llu parent=%llu datasync=%d\22, REC->fsid, REC->root_objectid, ((REC->root_objectid >= -9ULL) || (REC->root_objectid >= 1ULL && REC->root_objectid <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->root_objectid, symbols); }) : \22-\22, REC->ino, REC->parent, REC->datasync\00", [172 x i8] zeroinitializer }, align 32
@event_btrfs_sync_file = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_sync_file, %union.anon.113 { ptr @__tracepoint_btrfs_sync_file }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_sync_file }, ptr @print_fmt_btrfs_sync_file, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_sync_file = internal global ptr @event_btrfs_sync_file, section "_ftrace_events", align 4
@trace_event_fields_btrfs_sync_fs = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.258, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_btrfs_sync_fs = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_sync_fs, ptr @perf_trace_btrfs_sync_fs, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_sync_fs, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_sync_fs, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_sync_fs, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_sync_fs = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_sync_fs, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_sync_fs = internal global { [37 x i8], [59 x i8] } { [37 x i8] c"\22%pU: wait=%d\22, REC->fsid, REC->wait\00", [59 x i8] zeroinitializer }, align 32
@event_btrfs_sync_fs = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_sync_fs, %union.anon.113 { ptr @__tracepoint_btrfs_sync_fs }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_sync_fs }, ptr @print_fmt_btrfs_sync_fs, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_sync_fs = internal global ptr @event_btrfs_sync_fs, section "_ftrace_events", align 4
@trace_event_fields_btrfs_add_block_group = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.260, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.261, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.186, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.262, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.263, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.264, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_btrfs_add_block_group = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_add_block_group, ptr @perf_trace_btrfs_add_block_group, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_add_block_group, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_add_block_group, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_add_block_group, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_add_block_group = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_add_block_group, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_add_block_group = internal global { [468 x i8], [108 x i8] } { [468 x i8] c"\22%pU: block_group offset=%llu size=%llu flags=%llu(%s) bytes_used=%llu bytes_super=%llu create=%d\22, REC->fsid, REC->offset, REC->size, REC->flags, __print_flags((unsigned long)REC->flags, \22|\22, { (1ULL << 0), \22DATA\22}, { (1ULL << 1), \22SYSTEM\22}, { (1ULL << 2), \22METADATA\22}, { (1ULL << 3), \22RAID0\22}, { (1ULL << 4), \22RAID1\22}, { (1ULL << 5), \22DUP\22}, { (1ULL << 6), \22RAID10\22}, { (1ULL << 7), \22RAID5\22}, { (1ULL << 8), \22RAID6\22}), REC->bytes_used, REC->bytes_super, REC->create\00", [108 x i8] zeroinitializer }, align 32
@event_btrfs_add_block_group = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_add_block_group, %union.anon.113 { ptr @__tracepoint_btrfs_add_block_group }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_add_block_group }, ptr @print_fmt_btrfs_add_block_group, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_add_block_group = internal global ptr @event_btrfs_add_block_group, section "_ftrace_events", align 4
@trace_event_fields_btrfs_delayed_tree_ref = internal global { [10 x %struct.trace_event_fields], [48 x i8] } { [10 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.275, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.213, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.276, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.255, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.277, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.278, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.279, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.280, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_btrfs_delayed_tree_ref = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_delayed_tree_ref, ptr @perf_trace_btrfs_delayed_tree_ref, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_delayed_tree_ref, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_delayed_tree_ref, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_delayed_tree_ref, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_delayed_tree_ref = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_delayed_tree_ref, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_delayed_tree_ref = internal global { [1594 x i8], [390 x i8] } { [1594 x i8] c"\22%pU: bytenr=%llu num_bytes=%llu action=%s parent=%llu(%s) ref_root=%llu(%s) level=%d type=%s seq=%llu\22, REC->fsid, REC->bytenr, REC->num_bytes, __print_symbolic(REC->action, { 1, \22ADD_DELAYED_REF\22 }, { 2, \22DROP_DELAYED_REF\22 }, { 3, \22ADD_DELAYED_EXTENT\22 }, { 4, \22UPDATE_DELAYED_HEAD\22 }), REC->parent, ((REC->parent >= -9ULL) || (REC->parent >= 1ULL && REC->parent <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->parent, symbols); }) : \22-\22, REC->ref_root, ((REC->ref_root >= -9ULL) || (REC->ref_root >= 1ULL && REC->ref_root <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->ref_root, symbols); }) : \22-\22, REC->level, __print_symbolic(REC->type, { 176, \22TREE_BLOCK_REF\22 }, { 178, \22EXTENT_DATA_REF\22 }, { 180, \22EXTENT_REF_V0\22 }, { 182, \22SHARED_BLOCK_REF\22 }, { 184, \22SHARED_DATA_REF\22 }), REC->seq\00", [390 x i8] zeroinitializer }, align 32
@event_add_delayed_tree_ref = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_delayed_tree_ref, %union.anon.113 { ptr @__tracepoint_add_delayed_tree_ref }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_delayed_tree_ref }, ptr @print_fmt_btrfs_delayed_tree_ref, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_add_delayed_tree_ref = internal global ptr @event_add_delayed_tree_ref, section "_ftrace_events", align 4
@event_run_delayed_tree_ref = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_delayed_tree_ref, %union.anon.113 { ptr @__tracepoint_run_delayed_tree_ref }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_delayed_tree_ref }, ptr @print_fmt_btrfs_delayed_tree_ref, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_run_delayed_tree_ref = internal global ptr @event_run_delayed_tree_ref, section "_ftrace_events", align 4
@trace_event_fields_btrfs_delayed_data_ref = internal global { [11 x %struct.trace_event_fields], [88 x i8] } { [11 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.275, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.213, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.276, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.255, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.277, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.294, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.260, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.279, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.280, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [88 x i8] zeroinitializer }, align 32
@event_class_btrfs_delayed_data_ref = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_delayed_data_ref, ptr @perf_trace_btrfs_delayed_data_ref, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_delayed_data_ref, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_delayed_data_ref, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_delayed_data_ref, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_delayed_data_ref = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_delayed_data_ref, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_delayed_data_ref = internal global { [1621 x i8], [395 x i8] } { [1621 x i8] c"\22%pU: bytenr=%llu num_bytes=%llu action=%s parent=%llu(%s) ref_root=%llu(%s) owner=%llu offset=%llu type=%s seq=%llu\22, REC->fsid, REC->bytenr, REC->num_bytes, __print_symbolic(REC->action, { 1, \22ADD_DELAYED_REF\22 }, { 2, \22DROP_DELAYED_REF\22 }, { 3, \22ADD_DELAYED_EXTENT\22 }, { 4, \22UPDATE_DELAYED_HEAD\22 }), REC->parent, ((REC->parent >= -9ULL) || (REC->parent >= 1ULL && REC->parent <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->parent, symbols); }) : \22-\22, REC->ref_root, ((REC->ref_root >= -9ULL) || (REC->ref_root >= 1ULL && REC->ref_root <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->ref_root, symbols); }) : \22-\22, REC->owner, REC->offset, __print_symbolic(REC->type, { 176, \22TREE_BLOCK_REF\22 }, { 178, \22EXTENT_DATA_REF\22 }, { 180, \22EXTENT_REF_V0\22 }, { 182, \22SHARED_BLOCK_REF\22 }, { 184, \22SHARED_DATA_REF\22 }), REC->seq\00", [395 x i8] zeroinitializer }, align 32
@event_add_delayed_data_ref = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_delayed_data_ref, %union.anon.113 { ptr @__tracepoint_add_delayed_data_ref }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_delayed_data_ref }, ptr @print_fmt_btrfs_delayed_data_ref, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_add_delayed_data_ref = internal global ptr @event_add_delayed_data_ref, section "_ftrace_events", align 4
@event_run_delayed_data_ref = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_delayed_data_ref, %union.anon.113 { ptr @__tracepoint_run_delayed_data_ref }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_delayed_data_ref }, ptr @print_fmt_btrfs_delayed_data_ref, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_run_delayed_data_ref = internal global ptr @event_run_delayed_data_ref, section "_ftrace_events", align 4
@trace_event_fields_btrfs_delayed_ref_head = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.275, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.213, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.276, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.299, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_btrfs_delayed_ref_head = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_delayed_ref_head, ptr @perf_trace_btrfs_delayed_ref_head, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_delayed_ref_head, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_delayed_ref_head, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_delayed_ref_head, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_delayed_ref_head = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_delayed_ref_head, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_delayed_ref_head = internal global { [252 x i8], [36 x i8] } { [252 x i8] c"\22%pU: bytenr=%llu num_bytes=%llu action=%s is_data=%d\22, REC->fsid, REC->bytenr, REC->num_bytes, __print_symbolic(REC->action, { 1, \22ADD_DELAYED_REF\22 }, { 2, \22DROP_DELAYED_REF\22 }, { 3, \22ADD_DELAYED_EXTENT\22 }, { 4, \22UPDATE_DELAYED_HEAD\22 }), REC->is_data\00", [36 x i8] zeroinitializer }, align 32
@event_add_delayed_ref_head = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_delayed_ref_head, %union.anon.113 { ptr @__tracepoint_add_delayed_ref_head }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_delayed_ref_head }, ptr @print_fmt_btrfs_delayed_ref_head, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_add_delayed_ref_head = internal global ptr @event_add_delayed_ref_head, section "_ftrace_events", align 4
@event_run_delayed_ref_head = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_delayed_ref_head, %union.anon.113 { ptr @__tracepoint_run_delayed_ref_head }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_delayed_ref_head }, ptr @print_fmt_btrfs_delayed_ref_head, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_run_delayed_ref_head = internal global ptr @event_run_delayed_ref_head, section "_ftrace_events", align 4
@trace_event_fields_btrfs__chunk = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.301, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.279, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.302, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.260, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.261, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.158, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_btrfs__chunk = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs__chunk, ptr @perf_trace_btrfs__chunk, ptr @trace_event_reg, ptr @trace_event_fields_btrfs__chunk, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs__chunk, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs__chunk, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs__chunk = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs__chunk, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs__chunk = internal global { [1005 x i8], [243 x i8] } { [1005 x i8] c"\22%pU: root=%llu(%s) offset=%llu size=%llu num_stripes=%d sub_stripes=%d type=%s\22, REC->fsid, REC->root_objectid, ((REC->root_objectid >= -9ULL) || (REC->root_objectid >= 1ULL && REC->root_objectid <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->root_objectid, symbols); }) : \22-\22, REC->offset, REC->size, REC->num_stripes, REC->sub_stripes, __print_flags(REC->type, \22|\22, { (1ULL << 0), \22DATA\22 }, { (1ULL << 1), \22SYSTEM\22}, { (1ULL << 2), \22METADATA\22}, { (1ULL << 3), \22RAID0\22 }, { (1ULL << 4), \22RAID1\22 }, { (1ULL << 5), \22DUP\22 }, { (1ULL << 6), \22RAID10\22}, { (1ULL << 7), \22RAID5\22 }, { (1ULL << 8), \22RAID6\22 })\00", [243 x i8] zeroinitializer }, align 32
@event_btrfs_chunk_alloc = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__chunk, %union.anon.113 { ptr @__tracepoint_btrfs_chunk_alloc }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__chunk }, ptr @print_fmt_btrfs__chunk, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_chunk_alloc = internal global ptr @event_btrfs_chunk_alloc, section "_ftrace_events", align 4
@event_btrfs_chunk_free = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__chunk, %union.anon.113 { ptr @__tracepoint_btrfs_chunk_free }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__chunk }, ptr @print_fmt_btrfs__chunk, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_chunk_free = internal global ptr @event_btrfs_chunk_free, section "_ftrace_events", align 4
@trace_event_fields_btrfs_cow_block = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.158, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.304, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.188, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.305, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.306, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.307, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_btrfs_cow_block = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_cow_block, ptr @perf_trace_btrfs_cow_block, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_cow_block, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_cow_block, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_cow_block, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_cow_block = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_cow_block, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_cow_block = internal global { [762 x i8], [166 x i8] } { [762 x i8] c"\22%pU: root=%llu(%s) refs=%d orig_buf=%llu (orig_level=%d) cow_buf=%llu (cow_level=%d)\22, REC->fsid, REC->root_objectid, ((REC->root_objectid >= -9ULL) || (REC->root_objectid >= 1ULL && REC->root_objectid <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->root_objectid, symbols); }) : \22-\22, REC->refs, REC->buf_start, REC->buf_level, REC->cow_start, REC->cow_level\00", [166 x i8] zeroinitializer }, align 32
@event_btrfs_cow_block = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_cow_block, %union.anon.113 { ptr @__tracepoint_btrfs_cow_block }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_cow_block }, ptr @print_fmt_btrfs_cow_block, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_cow_block = internal global ptr @event_btrfs_cow_block, section "_ftrace_events", align 4
@trace_event_fields_btrfs_space_reservation = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.310, %union.anon.111 { %struct.anon.112 { ptr @.str.279, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.311, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.312, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.313, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_btrfs_space_reservation = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_space_reservation, ptr @perf_trace_btrfs_space_reservation, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_space_reservation, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_space_reservation, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_space_reservation, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_space_reservation = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_space_reservation, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_space_reservation = internal global { [112 x i8], [48 x i8] } { [112 x i8] c"\22%pU: %s: %llu %s %llu\22, REC->fsid, __get_str(type), REC->val, REC->reserve ? \22reserve\22 : \22release\22, REC->bytes\00", [48 x i8] zeroinitializer }, align 32
@event_btrfs_space_reservation = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_space_reservation, %union.anon.113 { ptr @__tracepoint_btrfs_space_reservation }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_space_reservation }, ptr @print_fmt_btrfs_space_reservation, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_space_reservation = internal global ptr @event_btrfs_space_reservation, section "_ftrace_events", align 4
@trace_event_fields_btrfs_trigger_flush = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.186, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.312, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.316, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.310, %union.anon.111 { %struct.anon.112 { ptr @.str.317, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_btrfs_trigger_flush = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_trigger_flush, ptr @perf_trace_btrfs_trigger_flush, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_trigger_flush, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_trigger_flush, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_trigger_flush, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_trigger_flush = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_trigger_flush, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_trigger_flush = internal global { [650 x i8], [182 x i8] } { [650 x i8] c"\22%pU: %s: flush=%d(%s) flags=%llu(%s) bytes=%llu\22, REC->fsid, __get_str(reason), REC->flush, __print_symbolic(REC->flush, {BTRFS_RESERVE_NO_FLUSH, \22BTRFS_RESERVE_NO_FLUSH\22}, {BTRFS_RESERVE_FLUSH_LIMIT, \22BTRFS_RESERVE_FLUSH_LIMIT\22}, {BTRFS_RESERVE_FLUSH_ALL, \22BTRFS_RESERVE_FLUSH_ALL\22}, {BTRFS_RESERVE_FLUSH_ALL_STEAL, \22BTRFS_RESERVE_FLUSH_ALL_STEAL\22}), REC->flags, __print_flags((unsigned long)REC->flags, \22|\22, { (1ULL << 0), \22DATA\22}, { (1ULL << 1), \22SYSTEM\22}, { (1ULL << 2), \22METADATA\22}, { (1ULL << 3), \22RAID0\22}, { (1ULL << 4), \22RAID1\22}, { (1ULL << 5), \22DUP\22}, { (1ULL << 6), \22RAID10\22}, { (1ULL << 7), \22RAID5\22}, { (1ULL << 8), \22RAID6\22}), REC->bytes\00", [182 x i8] zeroinitializer }, align 32
@event_btrfs_trigger_flush = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_trigger_flush, %union.anon.113 { ptr @__tracepoint_btrfs_trigger_flush }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_trigger_flush }, ptr @print_fmt_btrfs_trigger_flush, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_trigger_flush = internal global ptr @event_btrfs_trigger_flush, section "_ftrace_events", align 4
@trace_event_fields_btrfs_flush_space = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.186, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.213, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.319, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.320, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.321, %union.anon.111 { %struct.anon.112 { ptr @.str.322, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_btrfs_flush_space = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_flush_space, ptr @perf_trace_btrfs_flush_space, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_flush_space, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_flush_space, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_flush_space, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_flush_space = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_flush_space, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_flush_space = internal global { [920 x i8], [232 x i8] } { [920 x i8] c"\22%pU: state=%d(%s) flags=%llu(%s) num_bytes=%llu ret=%d for_preempt=%d\22, REC->fsid, REC->state, __print_symbolic(REC->state, {FLUSH_DELAYED_ITEMS_NR, \22FLUSH_DELAYED_ITEMS_NR\22}, {FLUSH_DELAYED_ITEMS, \22FLUSH_DELAYED_ITEMS\22}, {FLUSH_DELALLOC, \22FLUSH_DELALLOC\22}, {FLUSH_DELALLOC_WAIT, \22FLUSH_DELALLOC_WAIT\22}, {FLUSH_DELALLOC_FULL, \22FLUSH_DELALLOC_FULL\22}, {FLUSH_DELAYED_REFS_NR, \22FLUSH_DELAYED_REFS_NR\22}, {FLUSH_DELAYED_REFS, \22FLUSH_ELAYED_REFS\22}, {ALLOC_CHUNK, \22ALLOC_CHUNK\22}, {ALLOC_CHUNK_FORCE, \22ALLOC_CHUNK_FORCE\22}, {RUN_DELAYED_IPUTS, \22RUN_DELAYED_IPUTS\22}, {COMMIT_TRANS, \22COMMIT_TRANS\22}), REC->flags, __print_flags((unsigned long)REC->flags, \22|\22, { (1ULL << 0), \22DATA\22}, { (1ULL << 1), \22SYSTEM\22}, { (1ULL << 2), \22METADATA\22}, { (1ULL << 3), \22RAID0\22}, { (1ULL << 4), \22RAID1\22}, { (1ULL << 5), \22DUP\22}, { (1ULL << 6), \22RAID10\22}, { (1ULL << 7), \22RAID5\22}, { (1ULL << 8), \22RAID6\22}), REC->num_bytes, REC->ret, REC->for_preempt\00", [232 x i8] zeroinitializer }, align 32
@event_btrfs_flush_space = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_flush_space, %union.anon.113 { ptr @__tracepoint_btrfs_flush_space }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_flush_space }, ptr @print_fmt_btrfs_flush_space, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_flush_space = internal global ptr @event_btrfs_flush_space, section "_ftrace_events", align 4
@trace_event_fields_btrfs__reserved_extent = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.180, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.181, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_btrfs__reserved_extent = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs__reserved_extent, ptr @perf_trace_btrfs__reserved_extent, ptr @trace_event_reg, ptr @trace_event_fields_btrfs__reserved_extent, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs__reserved_extent, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs__reserved_extent, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs__reserved_extent = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs__reserved_extent, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs__reserved_extent = internal global { [593 x i8], [143 x i8] } { [593 x i8] c"\22%pU: root=%llu(%s) start=%llu len=%llu\22, REC->fsid, 2ULL, ((2ULL >= -9ULL) || (2ULL >= 1ULL && 2ULL <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, 2ULL, symbols); }) : \22-\22, REC->start, REC->len\00", [143 x i8] zeroinitializer }, align 32
@event_btrfs_reserved_extent_alloc = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__reserved_extent, %union.anon.113 { ptr @__tracepoint_btrfs_reserved_extent_alloc }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__reserved_extent }, ptr @print_fmt_btrfs__reserved_extent, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_reserved_extent_alloc = internal global ptr @event_btrfs_reserved_extent_alloc, section "_ftrace_events", align 4
@event_btrfs_reserved_extent_free = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__reserved_extent, %union.anon.113 { ptr @__tracepoint_btrfs_reserved_extent_free }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__reserved_extent }, ptr @print_fmt_btrfs__reserved_extent, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_reserved_extent_free = internal global ptr @event_btrfs_reserved_extent_free, section "_ftrace_events", align 4
@trace_event_fields_find_free_extent = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.158, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.213, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.326, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.327, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_find_free_extent = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_find_free_extent, ptr @perf_trace_find_free_extent, ptr @trace_event_reg, ptr @trace_event_fields_find_free_extent, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_find_free_extent, i64 24), ptr getelementptr (i8, ptr @event_class_find_free_extent, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_find_free_extent = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_find_free_extent, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_find_free_extent = internal global { [978 x i8], [238 x i8] } { [978 x i8] c"\22%pU: root=%llu(%s) len=%llu empty_size=%llu flags=%llu(%s)\22, REC->fsid, REC->root_objectid, ((REC->root_objectid >= -9ULL) || (REC->root_objectid >= 1ULL && REC->root_objectid <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->root_objectid, symbols); }) : \22-\22, REC->num_bytes, REC->empty_size, REC->data, __print_flags((unsigned long)REC->data, \22|\22, { (1ULL << 0), \22DATA\22}, { (1ULL << 1), \22SYSTEM\22}, { (1ULL << 2), \22METADATA\22}, { (1ULL << 3), \22RAID0\22}, { (1ULL << 4), \22RAID1\22}, { (1ULL << 5), \22DUP\22}, { (1ULL << 6), \22RAID10\22}, { (1ULL << 7), \22RAID5\22}, { (1ULL << 8), \22RAID6\22})\00", [238 x i8] zeroinitializer }, align 32
@event_find_free_extent = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_find_free_extent, %union.anon.113 { ptr @__tracepoint_find_free_extent }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_find_free_extent }, ptr @print_fmt_find_free_extent, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_find_free_extent = internal global ptr @event_find_free_extent, section "_ftrace_events", align 4
@trace_event_fields_btrfs__reserve_extent = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.329, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.186, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.180, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.181, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_btrfs__reserve_extent = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs__reserve_extent, ptr @perf_trace_btrfs__reserve_extent, ptr @trace_event_reg, ptr @trace_event_fields_btrfs__reserve_extent, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs__reserve_extent, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs__reserve_extent, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs__reserve_extent = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs__reserve_extent, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs__reserve_extent = internal global { [929 x i8], [255 x i8] } { [929 x i8] c"\22%pU: root=%llu(%s) block_group=%llu flags=%llu(%s) start=%llu len=%llu\22, REC->fsid, 2ULL, ((2ULL >= -9ULL) || (2ULL >= 1ULL && 2ULL <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, 2ULL, symbols); }) : \22-\22, REC->bg_objectid, REC->flags, __print_flags((unsigned long)REC->flags, \22|\22, { (1ULL << 0), \22DATA\22}, { (1ULL << 1), \22SYSTEM\22}, { (1ULL << 2), \22METADATA\22}, { (1ULL << 3), \22RAID0\22}, { (1ULL << 4), \22RAID1\22}, { (1ULL << 5), \22DUP\22}, { (1ULL << 6), \22RAID10\22}, { (1ULL << 7), \22RAID5\22}, { (1ULL << 8), \22RAID6\22}), REC->start, REC->len\00", [255 x i8] zeroinitializer }, align 32
@event_btrfs_reserve_extent = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__reserve_extent, %union.anon.113 { ptr @__tracepoint_btrfs_reserve_extent }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__reserve_extent }, ptr @print_fmt_btrfs__reserve_extent, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_reserve_extent = internal global ptr @event_btrfs_reserve_extent, section "_ftrace_events", align 4
@event_btrfs_reserve_extent_cluster = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__reserve_extent, %union.anon.113 { ptr @__tracepoint_btrfs_reserve_extent_cluster }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__reserve_extent }, ptr @print_fmt_btrfs__reserve_extent, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_reserve_extent_cluster = internal global ptr @event_btrfs_reserve_extent_cluster, section "_ftrace_events", align 4
@trace_event_fields_btrfs_find_cluster = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.329, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.186, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.180, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.312, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.326, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.331, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_btrfs_find_cluster = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_find_cluster, ptr @perf_trace_btrfs_find_cluster, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_find_cluster, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_find_cluster, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_find_cluster, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_find_cluster = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_find_cluster, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_find_cluster = internal global { [462 x i8], [114 x i8] } { [462 x i8] c"\22%pU: block_group=%llu flags=%llu(%s) start=%llu len=%llu empty_size=%llu min_bytes=%llu\22, REC->fsid, REC->bg_objectid, REC->flags, __print_flags((unsigned long)REC->flags, \22|\22, { (1ULL << 0), \22DATA\22}, { (1ULL << 1), \22SYSTEM\22}, { (1ULL << 2), \22METADATA\22}, { (1ULL << 3), \22RAID0\22}, { (1ULL << 4), \22RAID1\22}, { (1ULL << 5), \22DUP\22}, { (1ULL << 6), \22RAID10\22}, { (1ULL << 7), \22RAID5\22}, { (1ULL << 8), \22RAID6\22}), REC->start, REC->bytes, REC->empty_size, REC->min_bytes\00", [114 x i8] zeroinitializer }, align 32
@event_btrfs_find_cluster = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_find_cluster, %union.anon.113 { ptr @__tracepoint_btrfs_find_cluster }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_find_cluster }, ptr @print_fmt_btrfs_find_cluster, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_find_cluster = internal global ptr @event_btrfs_find_cluster, section "_ftrace_events", align 4
@trace_event_fields_btrfs_failed_cluster_setup = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.329, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_btrfs_failed_cluster_setup = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_failed_cluster_setup, ptr @perf_trace_btrfs_failed_cluster_setup, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_failed_cluster_setup, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_failed_cluster_setup, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_failed_cluster_setup, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_failed_cluster_setup = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_failed_cluster_setup, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_failed_cluster_setup = internal global { [53 x i8], [43 x i8] } { [53 x i8] c"\22%pU: block_group=%llu\22, REC->fsid, REC->bg_objectid\00", [43 x i8] zeroinitializer }, align 32
@event_btrfs_failed_cluster_setup = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_failed_cluster_setup, %union.anon.113 { ptr @__tracepoint_btrfs_failed_cluster_setup }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_failed_cluster_setup }, ptr @print_fmt_btrfs_failed_cluster_setup, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_failed_cluster_setup = internal global ptr @event_btrfs_failed_cluster_setup, section "_ftrace_events", align 4
@trace_event_fields_btrfs_setup_cluster = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.329, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.186, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.180, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.334, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.261, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.335, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_btrfs_setup_cluster = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_setup_cluster, ptr @perf_trace_btrfs_setup_cluster, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_setup_cluster, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_setup_cluster, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_setup_cluster, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_setup_cluster = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_setup_cluster, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_setup_cluster = internal global { [457 x i8], [119 x i8] } { [457 x i8] c"\22%pU: block_group=%llu flags=%llu(%s) window_start=%llu size=%llu max_size=%llu bitmap=%d\22, REC->fsid, REC->bg_objectid, REC->flags, __print_flags((unsigned long)REC->flags, \22|\22, { (1ULL << 0), \22DATA\22}, { (1ULL << 1), \22SYSTEM\22}, { (1ULL << 2), \22METADATA\22}, { (1ULL << 3), \22RAID0\22}, { (1ULL << 4), \22RAID1\22}, { (1ULL << 5), \22DUP\22}, { (1ULL << 6), \22RAID10\22}, { (1ULL << 7), \22RAID5\22}, { (1ULL << 8), \22RAID6\22}), REC->start, REC->size, REC->max_size, REC->bitmap\00", [119 x i8] zeroinitializer }, align 32
@event_btrfs_setup_cluster = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_setup_cluster, %union.anon.113 { ptr @__tracepoint_btrfs_setup_cluster }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_setup_cluster }, ptr @print_fmt_btrfs_setup_cluster, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_setup_cluster = internal global ptr @event_btrfs_setup_cluster, section "_ftrace_events", align 4
@trace_event_fields_alloc_extent_state = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.337, %union.anon.111 { %struct.anon.112 { ptr @.str.319, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.338, %union.anon.111 { %struct.anon.112 { ptr @.str.339, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.340, %union.anon.111 { %struct.anon.112 { ptr @.str.341, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_alloc_extent_state = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_alloc_extent_state, ptr @perf_trace_alloc_extent_state, ptr @trace_event_reg, ptr @trace_event_fields_alloc_extent_state, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_alloc_extent_state, i64 24), ptr getelementptr (i8, ptr @event_class_alloc_extent_state, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_alloc_extent_state = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_alloc_extent_state, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_alloc_extent_state = internal global { [3018 x i8], [758 x i8] } { [3018 x i8] c"\22state=%p mask=%s caller=%pS\22, REC->state, (REC->mask) ? __print_flags(REC->mask, \22|\22, {(unsigned long)(((((((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)) | (( gfp_t)0x08u) | (( gfp_t)0x1000000u)) | (( gfp_t)0x40000u) | (( gfp_t)0x80000u) | (( gfp_t)0x2000u)) & ~(( gfp_t)(0x400u|0x800u))) | (( gfp_t)0x400u)), \22GFP_TRANSHUGE\22}, {(unsigned long)((((((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)) | (( gfp_t)0x08u) | (( gfp_t)0x1000000u)) | (( gfp_t)0x40000u) | (( gfp_t)0x80000u) | (( gfp_t)0x2000u)) & ~(( gfp_t)(0x400u|0x800u))), \22GFP_TRANSHUGE_LIGHT\22}, {(unsigned long)((((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)) | (( gfp_t)0x08u) | (( gfp_t)0x1000000u)), \22GFP_HIGHUSER_MOVABLE\22}, {(unsigned long)(((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)), \22GFP_HIGHUSER\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)), \22GFP_USER\22}, {(unsigned long)(((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u)) | (( gfp_t)0x400000u)), \22GFP_KERNEL_ACCOUNT\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u)), \22GFP_KERNEL\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u)), \22GFP_NOFS\22}, {(unsigned long)((( gfp_t)0x20u)|(( gfp_t)0x200u)|(( gfp_t)0x800u)), \22GFP_ATOMIC\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u))), \22GFP_NOIO\22}, {(unsigned long)((( gfp_t)0x800u)), \22GFP_NOWAIT\22}, {(unsigned long)(( gfp_t)0x01u), \22GFP_DMA\22}, {(unsigned long)(( gfp_t)0x02u), \22__GFP_HIGHMEM\22}, {(unsigned long)(( gfp_t)0x04u), \22GFP_DMA32\22}, {(unsigned long)(( gfp_t)0x20u), \22__GFP_HIGH\22}, {(unsigned long)(( gfp_t)0x200u), \22__GFP_ATOMIC\22}, {(unsigned long)(( gfp_t)0x40u), \22__GFP_IO\22}, {(unsigned long)(( gfp_t)0x80u), \22__GFP_FS\22}, {(unsigned long)(( gfp_t)0x2000u), \22__GFP_NOWARN\22}, {(unsigned long)(( gfp_t)0x4000u), \22__GFP_RETRY_MAYFAIL\22}, {(unsigned long)(( gfp_t)0x8000u), \22__GFP_NOFAIL\22}, {(unsigned long)(( gfp_t)0x10000u), \22__GFP_NORETRY\22}, {(unsigned long)(( gfp_t)0x40000u), \22__GFP_COMP\22}, {(unsigned long)(( gfp_t)0x100u), \22__GFP_ZERO\22}, {(unsigned long)(( gfp_t)0x80000u), \22__GFP_NOMEMALLOC\22}, {(unsigned long)(( gfp_t)0x20000u), \22__GFP_MEMALLOC\22}, {(unsigned long)(( gfp_t)0x100000u), \22__GFP_HARDWALL\22}, {(unsigned long)(( gfp_t)0x200000u), \22__GFP_THISNODE\22}, {(unsigned long)(( gfp_t)0x10u), \22__GFP_RECLAIMABLE\22}, {(unsigned long)(( gfp_t)0x08u), \22__GFP_MOVABLE\22}, {(unsigned long)(( gfp_t)0x400000u), \22__GFP_ACCOUNT\22}, {(unsigned long)(( gfp_t)0x1000u), \22__GFP_WRITE\22}, {(unsigned long)(( gfp_t)(0x400u|0x800u)), \22__GFP_RECLAIM\22}, {(unsigned long)(( gfp_t)0x400u), \22__GFP_DIRECT_RECLAIM\22}, {(unsigned long)(( gfp_t)0x800u), \22__GFP_KSWAPD_RECLAIM\22}, {(unsigned long)(( gfp_t)0x800000u), \22__GFP_ZEROTAGS\22}, {(unsigned long)(( gfp_t)0x1000000u),\22__GFP_SKIP_KASAN_POISON\22} ) : \22none\22, REC->ip\00", [758 x i8] zeroinitializer }, align 32
@event_alloc_extent_state = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_alloc_extent_state, %union.anon.113 { ptr @__tracepoint_alloc_extent_state }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_alloc_extent_state }, ptr @print_fmt_alloc_extent_state, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_alloc_extent_state = internal global ptr @event_alloc_extent_state, section "_ftrace_events", align 4
@trace_event_fields_free_extent_state = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.337, %union.anon.111 { %struct.anon.112 { ptr @.str.319, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.340, %union.anon.111 { %struct.anon.112 { ptr @.str.341, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_free_extent_state = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_free_extent_state, ptr @perf_trace_free_extent_state, ptr @trace_event_reg, ptr @trace_event_fields_free_extent_state, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_free_extent_state, i64 24), ptr getelementptr (i8, ptr @event_class_free_extent_state, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_free_extent_state = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_free_extent_state, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_free_extent_state = internal global { [43 x i8], [53 x i8] } { [43 x i8] c"\22state=%p caller=%pS\22, REC->state, REC->ip\00", [53 x i8] zeroinitializer }, align 32
@event_free_extent_state = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_free_extent_state, %union.anon.113 { ptr @__tracepoint_free_extent_state }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_free_extent_state }, ptr @print_fmt_free_extent_state, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_free_extent_state = internal global ptr @event_free_extent_state, section "_ftrace_events", align 4
@trace_event_fields_btrfs__work = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.382, %union.anon.111 { %struct.anon.112 { ptr @.str.383, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.382, %union.anon.111 { %struct.anon.112 { ptr @.str.384, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.382, %union.anon.111 { %struct.anon.112 { ptr @.str.385, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.382, %union.anon.111 { %struct.anon.112 { ptr @.str.386, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.382, %union.anon.111 { %struct.anon.112 { ptr @.str.387, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.382, %union.anon.111 { %struct.anon.112 { ptr @.str.388, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_btrfs__work = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs__work, ptr @perf_trace_btrfs__work, ptr @trace_event_reg, ptr @trace_event_fields_btrfs__work, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs__work, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs__work, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_fields_btrfs__work__done = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.382, %union.anon.111 { %struct.anon.112 { ptr @.str.389, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_btrfs__work__done = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs__work__done, ptr @perf_trace_btrfs__work__done, ptr @trace_event_reg, ptr @trace_event_fields_btrfs__work__done, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs__work__done, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs__work__done, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs__work = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs__work, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs__work = internal global { [177 x i8], [47 x i8] } { [177 x i8] c"\22%pU: work=%p (normal_work=%p) wq=%p func=%ps ordered_func=%p ordered_free=%p\22, REC->fsid, REC->work, REC->normal_work, REC->wq, REC->func, REC->ordered_func, REC->ordered_free\00", [47 x i8] zeroinitializer }, align 32
@event_btrfs_work_queued = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__work, %union.anon.113 { ptr @__tracepoint_btrfs_work_queued }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__work }, ptr @print_fmt_btrfs__work, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_work_queued = internal global ptr @event_btrfs_work_queued, section "_ftrace_events", align 4
@event_btrfs_work_sched = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__work, %union.anon.113 { ptr @__tracepoint_btrfs_work_sched }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__work }, ptr @print_fmt_btrfs__work, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_work_sched = internal global ptr @event_btrfs_work_sched, section "_ftrace_events", align 4
@trace_event_type_funcs_btrfs__work__done = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs__work__done, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs__work__done = internal global { [38 x i8], [58 x i8] } { [38 x i8] c"\22%pU: work->%p\22, REC->fsid, REC->wtag\00", [58 x i8] zeroinitializer }, align 32
@event_btrfs_all_work_done = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__work__done, %union.anon.113 { ptr @__tracepoint_btrfs_all_work_done }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__work__done }, ptr @print_fmt_btrfs__work__done, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_all_work_done = internal global ptr @event_btrfs_all_work_done, section "_ftrace_events", align 4
@event_btrfs_ordered_sched = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__work, %union.anon.113 { ptr @__tracepoint_btrfs_ordered_sched }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__work }, ptr @print_fmt_btrfs__work, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_ordered_sched = internal global ptr @event_btrfs_ordered_sched, section "_ftrace_events", align 4
@trace_event_fields_btrfs__workqueue = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.382, %union.anon.111 { %struct.anon.112 { ptr @.str.384, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.310, %union.anon.111 { %struct.anon.112 { ptr @.str.392, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.393, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_btrfs__workqueue = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs__workqueue, ptr @perf_trace_btrfs__workqueue, ptr @trace_event_reg, ptr @trace_event_fields_btrfs__workqueue, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs__workqueue, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs__workqueue, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs__workqueue = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs__workqueue, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs__workqueue = internal global { [115 x i8], [45 x i8] } { [115 x i8] c"\22%pU: name=%s%s wq=%p\22, REC->fsid, __get_str(name), __print_flags(REC->high, \22\22, {(WQ_HIGHPRI), \22-high\22}), REC->wq\00", [45 x i8] zeroinitializer }, align 32
@event_btrfs_workqueue_alloc = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__workqueue, %union.anon.113 { ptr @__tracepoint_btrfs_workqueue_alloc }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__workqueue }, ptr @print_fmt_btrfs__workqueue, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_workqueue_alloc = internal global ptr @event_btrfs_workqueue_alloc, section "_ftrace_events", align 4
@trace_event_fields_btrfs__workqueue_done = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.382, %union.anon.111 { %struct.anon.112 { ptr @.str.384, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_btrfs__workqueue_done = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs__workqueue_done, ptr @perf_trace_btrfs__workqueue_done, ptr @trace_event_reg, ptr @trace_event_fields_btrfs__workqueue_done, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs__workqueue_done, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs__workqueue_done, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs__workqueue_done = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs__workqueue_done, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs__workqueue_done = internal global { [33 x i8], [63 x i8] } { [33 x i8] c"\22%pU: wq=%p\22, REC->fsid, REC->wq\00", [63 x i8] zeroinitializer }, align 32
@event_btrfs_workqueue_destroy = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__workqueue_done, %union.anon.113 { ptr @__tracepoint_btrfs_workqueue_destroy }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__workqueue_done }, ptr @print_fmt_btrfs__workqueue_done, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_workqueue_destroy = internal global ptr @event_btrfs_workqueue_destroy, section "_ftrace_events", align 4
@trace_event_fields_btrfs__qgroup_rsv_data = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.398, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.174, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.180, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.181, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.399, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.400, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_btrfs__qgroup_rsv_data = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs__qgroup_rsv_data, ptr @perf_trace_btrfs__qgroup_rsv_data, ptr @trace_event_reg, ptr @trace_event_fields_btrfs__qgroup_rsv_data, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs__qgroup_rsv_data, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs__qgroup_rsv_data, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs__qgroup_rsv_data = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs__qgroup_rsv_data, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs__qgroup_rsv_data = internal global { [246 x i8], [42 x i8] } { [246 x i8] c"\22%pU: root=%llu ino=%llu start=%llu len=%llu reserved=%llu op=%s\22, REC->fsid, REC->rootid, REC->ino, REC->start, REC->len, REC->reserved, __print_flags((unsigned long)REC->op, \22\22, { (1<<0), \22reserve\22 }, { (1<<1), \22release\22 }, { (1<<2), \22free\22 })\00", [42 x i8] zeroinitializer }, align 32
@event_btrfs_qgroup_reserve_data = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__qgroup_rsv_data, %union.anon.113 { ptr @__tracepoint_btrfs_qgroup_reserve_data }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__qgroup_rsv_data }, ptr @print_fmt_btrfs__qgroup_rsv_data, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_qgroup_reserve_data = internal global ptr @event_btrfs_qgroup_reserve_data, section "_ftrace_events", align 4
@event_btrfs_qgroup_release_data = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__qgroup_rsv_data, %union.anon.113 { ptr @__tracepoint_btrfs_qgroup_release_data }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__qgroup_rsv_data }, ptr @print_fmt_btrfs__qgroup_rsv_data, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_qgroup_release_data = internal global ptr @event_btrfs_qgroup_release_data, section "_ftrace_events", align 4
@trace_event_fields_btrfs_qgroup_extent = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.275, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.213, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_btrfs_qgroup_extent = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_qgroup_extent, ptr @perf_trace_btrfs_qgroup_extent, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_qgroup_extent, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_qgroup_extent, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_qgroup_extent, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_qgroup_extent = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_qgroup_extent, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_qgroup_extent = internal global { [74 x i8], [54 x i8] } { [74 x i8] c"\22%pU: bytenr=%llu num_bytes=%llu\22, REC->fsid, REC->bytenr, REC->num_bytes\00", [54 x i8] zeroinitializer }, align 32
@event_btrfs_qgroup_account_extents = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_qgroup_extent, %union.anon.113 { ptr @__tracepoint_btrfs_qgroup_account_extents }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_qgroup_extent }, ptr @print_fmt_btrfs_qgroup_extent, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_qgroup_account_extents = internal global ptr @event_btrfs_qgroup_account_extents, section "_ftrace_events", align 4
@event_btrfs_qgroup_trace_extent = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_qgroup_extent, %union.anon.113 { ptr @__tracepoint_btrfs_qgroup_trace_extent }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_qgroup_extent }, ptr @print_fmt_btrfs_qgroup_extent, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_qgroup_trace_extent = internal global ptr @event_btrfs_qgroup_trace_extent, section "_ftrace_events", align 4
@trace_event_fields_qgroup_num_dirty_extents = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.404, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.405, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_qgroup_num_dirty_extents = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_qgroup_num_dirty_extents, ptr @perf_trace_qgroup_num_dirty_extents, ptr @trace_event_reg, ptr @trace_event_fields_qgroup_num_dirty_extents, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_qgroup_num_dirty_extents, i64 24), ptr getelementptr (i8, ptr @event_class_qgroup_num_dirty_extents, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_qgroup_num_dirty_extents = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_qgroup_num_dirty_extents, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_qgroup_num_dirty_extents = internal global { [92 x i8], [36 x i8] } { [92 x i8] c"\22%pU: transid=%llu num_dirty_extents=%llu\22, REC->fsid, REC->transid, REC->num_dirty_extents\00", [36 x i8] zeroinitializer }, align 32
@event_qgroup_num_dirty_extents = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_qgroup_num_dirty_extents, %union.anon.113 { ptr @__tracepoint_qgroup_num_dirty_extents }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_qgroup_num_dirty_extents }, ptr @print_fmt_qgroup_num_dirty_extents, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_qgroup_num_dirty_extents = internal global ptr @event_qgroup_num_dirty_extents, section "_ftrace_events", align 4
@trace_event_fields_btrfs_qgroup_account_extent = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.404, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.275, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.213, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.407, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.408, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_btrfs_qgroup_account_extent = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_qgroup_account_extent, ptr @perf_trace_btrfs_qgroup_account_extent, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_qgroup_account_extent, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_qgroup_account_extent, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_qgroup_account_extent, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_qgroup_account_extent = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_qgroup_account_extent, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_qgroup_account_extent = internal global { [175 x i8], [49 x i8] } { [175 x i8] c"\22%pU: transid=%llu bytenr=%llu num_bytes=%llu nr_old_roots=%llu nr_new_roots=%llu\22, REC->fsid, REC->transid, REC->bytenr, REC->num_bytes, REC->nr_old_roots, REC->nr_new_roots\00", [49 x i8] zeroinitializer }, align 32
@event_btrfs_qgroup_account_extent = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_qgroup_account_extent, %union.anon.113 { ptr @__tracepoint_btrfs_qgroup_account_extent }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_qgroup_account_extent }, ptr @print_fmt_btrfs_qgroup_account_extent, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_qgroup_account_extent = internal global ptr @event_btrfs_qgroup_account_extent, section "_ftrace_events", align 4
@trace_event_fields_qgroup_update_counters = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.410, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.411, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.412, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.413, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.414, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_qgroup_update_counters = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_qgroup_update_counters, ptr @perf_trace_qgroup_update_counters, ptr @trace_event_reg, ptr @trace_event_fields_qgroup_update_counters, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_qgroup_update_counters, i64 24), ptr getelementptr (i8, ptr @event_class_qgroup_update_counters, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_qgroup_update_counters = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_qgroup_update_counters, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_qgroup_update_counters = internal global { [175 x i8], [49 x i8] } { [175 x i8] c"\22%pU: qgid=%llu old_rfer=%llu old_excl=%llu cur_old_count=%llu cur_new_count=%llu\22, REC->fsid, REC->qgid, REC->old_rfer, REC->old_excl, REC->cur_old_count, REC->cur_new_count\00", [49 x i8] zeroinitializer }, align 32
@event_qgroup_update_counters = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_qgroup_update_counters, %union.anon.113 { ptr @__tracepoint_qgroup_update_counters }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_qgroup_update_counters }, ptr @print_fmt_qgroup_update_counters, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_qgroup_update_counters = internal global ptr @event_qgroup_update_counters, section "_ftrace_events", align 4
@trace_event_fields_qgroup_update_reserve = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.410, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.416, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.417, %union.anon.111 { %struct.anon.112 { ptr @.str.418, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.279, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_qgroup_update_reserve = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_qgroup_update_reserve, ptr @perf_trace_qgroup_update_reserve, ptr @trace_event_reg, ptr @trace_event_fields_qgroup_update_reserve, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_qgroup_update_reserve, i64 24), ptr getelementptr (i8, ptr @event_class_qgroup_update_reserve, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_qgroup_update_reserve = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_qgroup_update_reserve, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_qgroup_update_reserve = internal global { [269 x i8], [83 x i8] } { [269 x i8] c"\22%pU: qgid=%llu type=%s cur_reserved=%llu diff=%lld\22, REC->fsid, REC->qgid, __print_symbolic(REC->type, {BTRFS_QGROUP_RSV_DATA, \22DATA\22}, {BTRFS_QGROUP_RSV_META_PERTRANS, \22META_PERTRANS\22}, {BTRFS_QGROUP_RSV_META_PREALLOC, \22META_PREALLOC\22}), REC->cur_reserved, REC->diff\00", [83 x i8] zeroinitializer }, align 32
@event_qgroup_update_reserve = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_qgroup_update_reserve, %union.anon.113 { ptr @__tracepoint_qgroup_update_reserve }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_qgroup_update_reserve }, ptr @print_fmt_qgroup_update_reserve, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_qgroup_update_reserve = internal global ptr @event_qgroup_update_reserve, section "_ftrace_events", align 4
@trace_event_fields_qgroup_meta_reserve = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.422, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.417, %union.anon.111 { %struct.anon.112 { ptr @.str.418, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.279, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_qgroup_meta_reserve = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_qgroup_meta_reserve, ptr @perf_trace_qgroup_meta_reserve, ptr @trace_event_reg, ptr @trace_event_fields_qgroup_meta_reserve, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_qgroup_meta_reserve, i64 24), ptr getelementptr (i8, ptr @event_class_qgroup_meta_reserve, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_qgroup_meta_reserve = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_qgroup_meta_reserve, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_qgroup_meta_reserve = internal global { [787 x i8], [205 x i8] } { [787 x i8] c"\22%pU: refroot=%llu(%s) type=%s diff=%lld\22, REC->fsid, REC->refroot, ((REC->refroot >= -9ULL) || (REC->refroot >= 1ULL && REC->refroot <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->refroot, symbols); }) : \22-\22, __print_symbolic(REC->type, {BTRFS_QGROUP_RSV_DATA, \22DATA\22}, {BTRFS_QGROUP_RSV_META_PERTRANS, \22META_PERTRANS\22}, {BTRFS_QGROUP_RSV_META_PREALLOC, \22META_PREALLOC\22}), REC->diff\00", [205 x i8] zeroinitializer }, align 32
@event_qgroup_meta_reserve = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_qgroup_meta_reserve, %union.anon.113 { ptr @__tracepoint_qgroup_meta_reserve }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_qgroup_meta_reserve }, ptr @print_fmt_qgroup_meta_reserve, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_qgroup_meta_reserve = internal global ptr @event_qgroup_meta_reserve, section "_ftrace_events", align 4
@trace_event_fields_qgroup_meta_convert = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.422, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.417, %union.anon.111 { %struct.anon.112 { ptr @.str.418, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_qgroup_meta_convert = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_qgroup_meta_convert, ptr @perf_trace_qgroup_meta_convert, ptr @trace_event_reg, ptr @trace_event_fields_qgroup_meta_convert, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_qgroup_meta_convert, i64 24), ptr getelementptr (i8, ptr @event_class_qgroup_meta_convert, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_qgroup_meta_convert = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_qgroup_meta_convert, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_qgroup_meta_convert = internal global { [997 x i8], [251 x i8] } { [997 x i8] c"\22%pU: refroot=%llu(%s) type=%s->%s diff=%lld\22, REC->fsid, REC->refroot, ((REC->refroot >= -9ULL) || (REC->refroot >= 1ULL && REC->refroot <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->refroot, symbols); }) : \22-\22, __print_symbolic(BTRFS_QGROUP_RSV_META_PREALLOC, {BTRFS_QGROUP_RSV_DATA, \22DATA\22}, {BTRFS_QGROUP_RSV_META_PERTRANS, \22META_PERTRANS\22}, {BTRFS_QGROUP_RSV_META_PREALLOC, \22META_PREALLOC\22}), __print_symbolic(BTRFS_QGROUP_RSV_META_PERTRANS, {BTRFS_QGROUP_RSV_DATA, \22DATA\22}, {BTRFS_QGROUP_RSV_META_PERTRANS, \22META_PERTRANS\22}, {BTRFS_QGROUP_RSV_META_PREALLOC, \22META_PREALLOC\22}), REC->diff\00", [251 x i8] zeroinitializer }, align 32
@event_qgroup_meta_convert = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_qgroup_meta_convert, %union.anon.113 { ptr @__tracepoint_qgroup_meta_convert }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_qgroup_meta_convert }, ptr @print_fmt_qgroup_meta_convert, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_qgroup_meta_convert = internal global ptr @event_qgroup_meta_convert, section "_ftrace_events", align 4
@trace_event_fields_qgroup_meta_free_all_pertrans = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.422, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.417, %union.anon.111 { %struct.anon.112 { ptr @.str.418, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.279, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_qgroup_meta_free_all_pertrans = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_qgroup_meta_free_all_pertrans, ptr @perf_trace_qgroup_meta_free_all_pertrans, ptr @trace_event_reg, ptr @trace_event_fields_qgroup_meta_free_all_pertrans, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_qgroup_meta_free_all_pertrans, i64 24), ptr getelementptr (i8, ptr @event_class_qgroup_meta_free_all_pertrans, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_qgroup_meta_free_all_pertrans = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_qgroup_meta_free_all_pertrans, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_qgroup_meta_free_all_pertrans = internal global { [787 x i8], [205 x i8] } { [787 x i8] c"\22%pU: refroot=%llu(%s) type=%s diff=%lld\22, REC->fsid, REC->refroot, ((REC->refroot >= -9ULL) || (REC->refroot >= 1ULL && REC->refroot <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->refroot, symbols); }) : \22-\22, __print_symbolic(REC->type, {BTRFS_QGROUP_RSV_DATA, \22DATA\22}, {BTRFS_QGROUP_RSV_META_PERTRANS, \22META_PERTRANS\22}, {BTRFS_QGROUP_RSV_META_PREALLOC, \22META_PREALLOC\22}), REC->diff\00", [205 x i8] zeroinitializer }, align 32
@event_qgroup_meta_free_all_pertrans = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_qgroup_meta_free_all_pertrans, %union.anon.113 { ptr @__tracepoint_qgroup_meta_free_all_pertrans }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_qgroup_meta_free_all_pertrans }, ptr @print_fmt_qgroup_meta_free_all_pertrans, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_qgroup_meta_free_all_pertrans = internal global ptr @event_qgroup_meta_free_all_pertrans, section "_ftrace_events", align 4
@trace_event_fields_btrfs__prelim_ref = internal global { [12 x %struct.trace_event_fields], [64 x i8] } { [12 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.429, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.430, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.218, %union.anon.111 { %struct.anon.112 { ptr @.str.279, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.260, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.278, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.431, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.255, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.275, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.432, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.433, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [64 x i8] zeroinitializer }, align 32
@event_class_btrfs__prelim_ref = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs__prelim_ref, ptr @perf_trace_btrfs__prelim_ref, ptr @trace_event_reg, ptr @trace_event_fields_btrfs__prelim_ref, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs__prelim_ref, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs__prelim_ref, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs__prelim_ref = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs__prelim_ref, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs__prelim_ref = internal global { [293 x i8], [91 x i8] } { [293 x i8] c"\22%pU: root_id=%llu key=[%llu,%u,%llu] level=%d count=[%d+%d=%d] parent=%llu wanted_disk_byte=%llu nodes=%llu\22, REC->fsid, REC->root_id, REC->objectid, REC->type, REC->offset, REC->level, REC->old_count, REC->mod_count, REC->old_count + REC->mod_count, REC->parent, REC->bytenr, REC->tree_size\00", [91 x i8] zeroinitializer }, align 32
@event_btrfs_prelim_ref_merge = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__prelim_ref, %union.anon.113 { ptr @__tracepoint_btrfs_prelim_ref_merge }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__prelim_ref }, ptr @print_fmt_btrfs__prelim_ref, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_prelim_ref_merge = internal global ptr @event_btrfs_prelim_ref_merge, section "_ftrace_events", align 4
@event_btrfs_prelim_ref_insert = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__prelim_ref, %union.anon.113 { ptr @__tracepoint_btrfs_prelim_ref_insert }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__prelim_ref }, ptr @print_fmt_btrfs__prelim_ref, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_prelim_ref_insert = internal global ptr @event_btrfs_prelim_ref_insert, section "_ftrace_events", align 4
@trace_event_fields_btrfs_inode_mod_outstanding_extents = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.158, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.174, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.435, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_btrfs_inode_mod_outstanding_extents = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_inode_mod_outstanding_extents, ptr @perf_trace_btrfs_inode_mod_outstanding_extents, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_inode_mod_outstanding_extents, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_inode_mod_outstanding_extents, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_inode_mod_outstanding_extents, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_inode_mod_outstanding_extents = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_inode_mod_outstanding_extents, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_inode_mod_outstanding_extents = internal global { [657 x i8], [175 x i8] } { [657 x i8] c"\22%pU: root=%llu(%s) ino=%llu mod=%d\22, REC->fsid, REC->root_objectid, ((REC->root_objectid >= -9ULL) || (REC->root_objectid >= 1ULL && REC->root_objectid <= 8ULL)) ? ({ static const struct trace_print_flags_u64 symbols[] = { { 1ULL, \22ROOT_TREE\22 }, { 2ULL, \22EXTENT_TREE\22 }, { 3ULL, \22CHUNK_TREE\22 }, { 4ULL, \22DEV_TREE\22 }, { 5ULL, \22FS_TREE\22 }, { 6ULL, \22ROOT_TREE_DIR\22 }, { 7ULL, \22CSUM_TREE\22 }, { -6ULL, \22TREE_LOG\22 }, { 8ULL, \22QUOTA_TREE\22 }, { -8ULL, \22TREE_RELOC\22 }, { 9ULL, \22UUID_TREE\22 }, { 10ULL, \22FREE_SPACE_TREE\22 }, { -9ULL, \22DATA_RELOC_TREE\22 }, { -1, ((void *)0) } }; trace_print_symbols_seq_u64(p, REC->root_objectid, symbols); }) : \22-\22, REC->ino, REC->mod\00", [175 x i8] zeroinitializer }, align 32
@event_btrfs_inode_mod_outstanding_extents = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_inode_mod_outstanding_extents, %union.anon.113 { ptr @__tracepoint_btrfs_inode_mod_outstanding_extents }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_inode_mod_outstanding_extents }, ptr @print_fmt_btrfs_inode_mod_outstanding_extents, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_inode_mod_outstanding_extents = internal global ptr @event_btrfs_inode_mod_outstanding_extents, section "_ftrace_events", align 4
@trace_event_fields_btrfs__block_group = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.275, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.181, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.437, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.186, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_btrfs__block_group = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs__block_group, ptr @perf_trace_btrfs__block_group, ptr @trace_event_reg, ptr @trace_event_fields_btrfs__block_group, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs__block_group, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs__block_group, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs__block_group = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs__block_group, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs__block_group = internal global { [372 x i8], [76 x i8] } { [372 x i8] c"\22%pU: bg bytenr=%llu len=%llu used=%llu flags=%llu(%s)\22, REC->fsid, REC->bytenr, REC->len, REC->used, REC->flags, __print_flags(REC->flags, \22|\22, { (1ULL << 0), \22DATA\22}, { (1ULL << 1), \22SYSTEM\22}, { (1ULL << 2), \22METADATA\22}, { (1ULL << 3), \22RAID0\22}, { (1ULL << 4), \22RAID1\22}, { (1ULL << 5), \22DUP\22}, { (1ULL << 6), \22RAID10\22}, { (1ULL << 7), \22RAID5\22}, { (1ULL << 8), \22RAID6\22})\00", [76 x i8] zeroinitializer }, align 32
@event_btrfs_remove_block_group = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__block_group, %union.anon.113 { ptr @__tracepoint_btrfs_remove_block_group }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__block_group }, ptr @print_fmt_btrfs__block_group, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_remove_block_group = internal global ptr @event_btrfs_remove_block_group, section "_ftrace_events", align 4
@event_btrfs_add_unused_block_group = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__block_group, %union.anon.113 { ptr @__tracepoint_btrfs_add_unused_block_group }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__block_group }, ptr @print_fmt_btrfs__block_group, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_add_unused_block_group = internal global ptr @event_btrfs_add_unused_block_group, section "_ftrace_events", align 4
@event_btrfs_add_reclaim_block_group = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__block_group, %union.anon.113 { ptr @__tracepoint_btrfs_add_reclaim_block_group }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__block_group }, ptr @print_fmt_btrfs__block_group, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_add_reclaim_block_group = internal global ptr @event_btrfs_add_reclaim_block_group, section "_ftrace_events", align 4
@event_btrfs_reclaim_block_group = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__block_group, %union.anon.113 { ptr @__tracepoint_btrfs_reclaim_block_group }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__block_group }, ptr @print_fmt_btrfs__block_group, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_reclaim_block_group = internal global ptr @event_btrfs_reclaim_block_group, section "_ftrace_events", align 4
@event_btrfs_skip_unused_block_group = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__block_group, %union.anon.113 { ptr @__tracepoint_btrfs_skip_unused_block_group }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__block_group }, ptr @print_fmt_btrfs__block_group, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_skip_unused_block_group = internal global ptr @event_btrfs_skip_unused_block_group, section "_ftrace_events", align 4
@trace_event_fields_btrfs_set_extent_bit = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.439, %union.anon.111 { %struct.anon.112 { ptr @.str.294, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.174, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.398, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.180, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.181, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.439, %union.anon.111 { %struct.anon.112 { ptr @.str.440, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_btrfs_set_extent_bit = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_set_extent_bit, ptr @perf_trace_btrfs_set_extent_bit, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_set_extent_bit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_set_extent_bit, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_set_extent_bit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_set_extent_bit = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_set_extent_bit, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_set_extent_bit = internal global { [1094 x i8], [282 x i8] } { [1094 x i8] c"\22%pU: io_tree=%s ino=%llu root=%llu start=%llu len=%llu set_bits=%s\22, REC->fsid, __print_symbolic(REC->owner, {IO_TREE_FS_PINNED_EXTENTS, \22PINNED_EXTENTS\22}, {IO_TREE_FS_EXCLUDED_EXTENTS, \22EXCLUDED_EXTENTS\22}, {IO_TREE_BTREE_INODE_IO, \22BTREE_INODE_IO\22}, {IO_TREE_INODE_IO, \22INODE_IO\22}, {IO_TREE_INODE_IO_FAILURE, \22INODE_IO_FAILURE\22}, {IO_TREE_RELOC_BLOCKS, \22RELOC_BLOCKS\22}, {IO_TREE_TRANS_DIRTY_PAGES, \22TRANS_DIRTY_PAGES\22}, {IO_TREE_ROOT_DIRTY_LOG_PAGES, \22ROOT_DIRTY_LOG_PAGES\22}, {IO_TREE_INODE_FILE_EXTENT, \22INODE_FILE_EXTENT\22}, {IO_TREE_LOG_CSUM_RANGE, \22LOG_CSUM_RANGE\22}, {IO_TREE_SELFTEST, \22SELFTEST\22}), REC->ino, REC->rootid, REC->start, REC->len, __print_flags(REC->set_bits, \22|\22, { (1U << 0), \22DIRTY\22}, { (1U << 1), \22UPTODATE\22}, { (1U << 2), \22LOCKED\22}, { (1U << 3), \22NEW\22}, { (1U << 4), \22DELALLOC\22}, { (1U << 5), \22DEFRAG\22}, { (1U << 6), \22BOUNDARY\22}, { (1U << 7), \22NODATASUM\22}, { (1U << 8), \22CLEAR_META_RESV\22}, { (1U << 9), \22NEED_WAIT\22}, { (1U << 10), \22DAMAGED\22}, { (1U << 11), \22NORESERVE\22}, { (1U << 12), \22QGROUP_RESERVED\22}, { (1U << 13), \22CLEAR_DATA_RESV\22}, { (1U << 14), \22DELALLOC_NEW\22})\00", [282 x i8] zeroinitializer }, align 32
@event_btrfs_set_extent_bit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_set_extent_bit, %union.anon.113 { ptr @__tracepoint_btrfs_set_extent_bit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_set_extent_bit }, ptr @print_fmt_btrfs_set_extent_bit, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_set_extent_bit = internal global ptr @event_btrfs_set_extent_bit, section "_ftrace_events", align 4
@trace_event_fields_btrfs_clear_extent_bit = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.439, %union.anon.111 { %struct.anon.112 { ptr @.str.294, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.174, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.398, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.180, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.181, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.439, %union.anon.111 { %struct.anon.112 { ptr @.str.467, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_btrfs_clear_extent_bit = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_clear_extent_bit, ptr @perf_trace_btrfs_clear_extent_bit, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_clear_extent_bit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_clear_extent_bit, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_clear_extent_bit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_clear_extent_bit = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_clear_extent_bit, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_clear_extent_bit = internal global { [1098 x i8], [278 x i8] } { [1098 x i8] c"\22%pU: io_tree=%s ino=%llu root=%llu start=%llu len=%llu clear_bits=%s\22, REC->fsid, __print_symbolic(REC->owner, {IO_TREE_FS_PINNED_EXTENTS, \22PINNED_EXTENTS\22}, {IO_TREE_FS_EXCLUDED_EXTENTS, \22EXCLUDED_EXTENTS\22}, {IO_TREE_BTREE_INODE_IO, \22BTREE_INODE_IO\22}, {IO_TREE_INODE_IO, \22INODE_IO\22}, {IO_TREE_INODE_IO_FAILURE, \22INODE_IO_FAILURE\22}, {IO_TREE_RELOC_BLOCKS, \22RELOC_BLOCKS\22}, {IO_TREE_TRANS_DIRTY_PAGES, \22TRANS_DIRTY_PAGES\22}, {IO_TREE_ROOT_DIRTY_LOG_PAGES, \22ROOT_DIRTY_LOG_PAGES\22}, {IO_TREE_INODE_FILE_EXTENT, \22INODE_FILE_EXTENT\22}, {IO_TREE_LOG_CSUM_RANGE, \22LOG_CSUM_RANGE\22}, {IO_TREE_SELFTEST, \22SELFTEST\22}), REC->ino, REC->rootid, REC->start, REC->len, __print_flags(REC->clear_bits, \22|\22, { (1U << 0), \22DIRTY\22}, { (1U << 1), \22UPTODATE\22}, { (1U << 2), \22LOCKED\22}, { (1U << 3), \22NEW\22}, { (1U << 4), \22DELALLOC\22}, { (1U << 5), \22DEFRAG\22}, { (1U << 6), \22BOUNDARY\22}, { (1U << 7), \22NODATASUM\22}, { (1U << 8), \22CLEAR_META_RESV\22}, { (1U << 9), \22NEED_WAIT\22}, { (1U << 10), \22DAMAGED\22}, { (1U << 11), \22NORESERVE\22}, { (1U << 12), \22QGROUP_RESERVED\22}, { (1U << 13), \22CLEAR_DATA_RESV\22}, { (1U << 14), \22DELALLOC_NEW\22})\00", [278 x i8] zeroinitializer }, align 32
@event_btrfs_clear_extent_bit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_clear_extent_bit, %union.anon.113 { ptr @__tracepoint_btrfs_clear_extent_bit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_clear_extent_bit }, ptr @print_fmt_btrfs_clear_extent_bit, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_clear_extent_bit = internal global ptr @event_btrfs_clear_extent_bit, section "_ftrace_events", align 4
@trace_event_fields_btrfs_convert_extent_bit = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.439, %union.anon.111 { %struct.anon.112 { ptr @.str.294, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.174, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.398, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.180, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.181, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.439, %union.anon.111 { %struct.anon.112 { ptr @.str.440, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.439, %union.anon.111 { %struct.anon.112 { ptr @.str.467, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_btrfs_convert_extent_bit = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_convert_extent_bit, ptr @perf_trace_btrfs_convert_extent_bit, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_convert_extent_bit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_convert_extent_bit, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_convert_extent_bit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_convert_extent_bit = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_convert_extent_bit, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_convert_extent_bit = internal global { [1556 x i8], [396 x i8] } { [1556 x i8] c"\22%pU: io_tree=%s ino=%llu root=%llu start=%llu len=%llu set_bits=%s clear_bits=%s\22, REC->fsid, __print_symbolic(REC->owner, {IO_TREE_FS_PINNED_EXTENTS, \22PINNED_EXTENTS\22}, {IO_TREE_FS_EXCLUDED_EXTENTS, \22EXCLUDED_EXTENTS\22}, {IO_TREE_BTREE_INODE_IO, \22BTREE_INODE_IO\22}, {IO_TREE_INODE_IO, \22INODE_IO\22}, {IO_TREE_INODE_IO_FAILURE, \22INODE_IO_FAILURE\22}, {IO_TREE_RELOC_BLOCKS, \22RELOC_BLOCKS\22}, {IO_TREE_TRANS_DIRTY_PAGES, \22TRANS_DIRTY_PAGES\22}, {IO_TREE_ROOT_DIRTY_LOG_PAGES, \22ROOT_DIRTY_LOG_PAGES\22}, {IO_TREE_INODE_FILE_EXTENT, \22INODE_FILE_EXTENT\22}, {IO_TREE_LOG_CSUM_RANGE, \22LOG_CSUM_RANGE\22}, {IO_TREE_SELFTEST, \22SELFTEST\22}), REC->ino, REC->rootid, REC->start, REC->len, __print_flags(REC->set_bits , \22|\22, { (1U << 0), \22DIRTY\22}, { (1U << 1), \22UPTODATE\22}, { (1U << 2), \22LOCKED\22}, { (1U << 3), \22NEW\22}, { (1U << 4), \22DELALLOC\22}, { (1U << 5), \22DEFRAG\22}, { (1U << 6), \22BOUNDARY\22}, { (1U << 7), \22NODATASUM\22}, { (1U << 8), \22CLEAR_META_RESV\22}, { (1U << 9), \22NEED_WAIT\22}, { (1U << 10), \22DAMAGED\22}, { (1U << 11), \22NORESERVE\22}, { (1U << 12), \22QGROUP_RESERVED\22}, { (1U << 13), \22CLEAR_DATA_RESV\22}, { (1U << 14), \22DELALLOC_NEW\22}), __print_flags(REC->clear_bits, \22|\22, { (1U << 0), \22DIRTY\22}, { (1U << 1), \22UPTODATE\22}, { (1U << 2), \22LOCKED\22}, { (1U << 3), \22NEW\22}, { (1U << 4), \22DELALLOC\22}, { (1U << 5), \22DEFRAG\22}, { (1U << 6), \22BOUNDARY\22}, { (1U << 7), \22NODATASUM\22}, { (1U << 8), \22CLEAR_META_RESV\22}, { (1U << 9), \22NEED_WAIT\22}, { (1U << 10), \22DAMAGED\22}, { (1U << 11), \22NORESERVE\22}, { (1U << 12), \22QGROUP_RESERVED\22}, { (1U << 13), \22CLEAR_DATA_RESV\22}, { (1U << 14), \22DELALLOC_NEW\22})\00", [396 x i8] zeroinitializer }, align 32
@event_btrfs_convert_extent_bit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_convert_extent_bit, %union.anon.113 { ptr @__tracepoint_btrfs_convert_extent_bit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_convert_extent_bit }, ptr @print_fmt_btrfs_convert_extent_bit, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_convert_extent_bit = internal global ptr @event_btrfs_convert_extent_bit, section "_ftrace_events", align 4
@trace_event_fields_btrfs_dump_space_info = internal global { [18 x %struct.trace_event_fields], [112 x i8] } { [18 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.186, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.471, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.262, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.472, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.473, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.474, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.475, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.476, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.477, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.478, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.479, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.480, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.481, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.482, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.483, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.484, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [112 x i8] zeroinitializer }, align 32
@event_class_btrfs_dump_space_info = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_dump_space_info, ptr @perf_trace_btrfs_dump_space_info, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_dump_space_info, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_dump_space_info, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_dump_space_info, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_dump_space_info = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_dump_space_info, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_dump_space_info = internal global { [879 x i8], [209 x i8] } { [879 x i8] c"\22%pU: flags=%s total_bytes=%llu bytes_used=%llu bytes_pinned=%llu bytes_reserved=%llu bytes_may_use=%llu bytes_readonly=%llu reclaim_size=%llu clamp=%d global_reserved=%llu trans_reserved=%llu delayed_refs_reserved=%llu delayed_reserved=%llu chunk_free_space=%llu delalloc_bytes=%llu ordered_bytes=%llu\22, REC->fsid, __print_flags(REC->flags, \22|\22, { (1ULL << 0), \22DATA\22}, { (1ULL << 1), \22SYSTEM\22}, { (1ULL << 2), \22METADATA\22}, { (1ULL << 3), \22RAID0\22}, { (1ULL << 4), \22RAID1\22}, { (1ULL << 5), \22DUP\22}, { (1ULL << 6), \22RAID10\22}, { (1ULL << 7), \22RAID5\22}, { (1ULL << 8), \22RAID6\22}), REC->total_bytes, REC->bytes_used, REC->bytes_pinned, REC->bytes_reserved, REC->bytes_may_use, REC->bytes_readonly, REC->reclaim_size, REC->clamp, REC->global_reserved, REC->trans_reserved, REC->delayed_refs_reserved, REC->delayed_reserved, REC->free_chunk_space, REC->delalloc_bytes, REC->ordered_bytes\00", [209 x i8] zeroinitializer }, align 32
@event_btrfs_done_preemptive_reclaim = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_dump_space_info, %union.anon.113 { ptr @__tracepoint_btrfs_done_preemptive_reclaim }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_dump_space_info }, ptr @print_fmt_btrfs_dump_space_info, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_done_preemptive_reclaim = internal global ptr @event_btrfs_done_preemptive_reclaim, section "_ftrace_events", align 4
@event_btrfs_fail_all_tickets = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_dump_space_info, %union.anon.113 { ptr @__tracepoint_btrfs_fail_all_tickets }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_dump_space_info }, ptr @print_fmt_btrfs_dump_space_info, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_fail_all_tickets = internal global ptr @event_btrfs_fail_all_tickets, section "_ftrace_events", align 4
@trace_event_fields_btrfs_reserve_ticket = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.186, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.312, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.486, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.316, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.487, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_btrfs_reserve_ticket = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_reserve_ticket, ptr @perf_trace_btrfs_reserve_ticket, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_reserve_ticket, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_reserve_ticket, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_reserve_ticket, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_reserve_ticket = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_reserve_ticket, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_reserve_ticket = internal global { [628 x i8], [140 x i8] } { [628 x i8] c"\22%pU: flags=%s bytes=%llu start_ns=%llu flush=%s error=%d\22, REC->fsid, __print_flags(REC->flags, \22|\22, { (1ULL << 0), \22DATA\22}, { (1ULL << 1), \22SYSTEM\22}, { (1ULL << 2), \22METADATA\22}, { (1ULL << 3), \22RAID0\22}, { (1ULL << 4), \22RAID1\22}, { (1ULL << 5), \22DUP\22}, { (1ULL << 6), \22RAID10\22}, { (1ULL << 7), \22RAID5\22}, { (1ULL << 8), \22RAID6\22}), REC->bytes, REC->start_ns, __print_symbolic(REC->flush, {BTRFS_RESERVE_NO_FLUSH, \22BTRFS_RESERVE_NO_FLUSH\22}, {BTRFS_RESERVE_FLUSH_LIMIT, \22BTRFS_RESERVE_FLUSH_LIMIT\22}, {BTRFS_RESERVE_FLUSH_ALL, \22BTRFS_RESERVE_FLUSH_ALL\22}, {BTRFS_RESERVE_FLUSH_ALL_STEAL, \22BTRFS_RESERVE_FLUSH_ALL_STEAL\22}), REC->error\00", [140 x i8] zeroinitializer }, align 32
@event_btrfs_reserve_ticket = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_reserve_ticket, %union.anon.113 { ptr @__tracepoint_btrfs_reserve_ticket }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_reserve_ticket }, ptr @print_fmt_btrfs_reserve_ticket, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_reserve_ticket = internal global ptr @event_btrfs_reserve_ticket, section "_ftrace_events", align 4
@trace_event_fields_btrfs_sleep_tree_lock = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.489, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.157, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.486, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.490, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.491, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.294, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.492, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_btrfs_sleep_tree_lock = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_sleep_tree_lock, ptr @perf_trace_btrfs_sleep_tree_lock, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_sleep_tree_lock, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_sleep_tree_lock, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_sleep_tree_lock, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_sleep_tree_lock = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_sleep_tree_lock, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_sleep_tree_lock = internal global { [211 x i8], [45 x i8] } { [211 x i8] c"\22%pU: block=%llu generation=%llu start_ns=%llu end_ns=%llu diff_ns=%llu owner=%llu is_log_tree=%d\22, REC->fsid, REC->block, REC->generation, REC->start_ns, REC->end_ns, REC->diff_ns, REC->owner, REC->is_log_tree\00", [45 x i8] zeroinitializer }, align 32
@event_btrfs_tree_read_lock = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_sleep_tree_lock, %union.anon.113 { ptr @__tracepoint_btrfs_tree_read_lock }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_sleep_tree_lock }, ptr @print_fmt_btrfs_sleep_tree_lock, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_tree_read_lock = internal global ptr @event_btrfs_tree_read_lock, section "_ftrace_events", align 4
@event_btrfs_tree_lock = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_sleep_tree_lock, %union.anon.113 { ptr @__tracepoint_btrfs_tree_lock }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_sleep_tree_lock }, ptr @print_fmt_btrfs_sleep_tree_lock, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_tree_lock = internal global ptr @event_btrfs_tree_lock, section "_ftrace_events", align 4
@trace_event_fields_btrfs_locking_events = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.489, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.157, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.294, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.187, %union.anon.111 { %struct.anon.112 { ptr @.str.492, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_btrfs_locking_events = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs_locking_events, ptr @perf_trace_btrfs_locking_events, ptr @trace_event_reg, ptr @trace_event_fields_btrfs_locking_events, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs_locking_events, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs_locking_events, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs_locking_events = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs_locking_events, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs_locking_events = internal global { [130 x i8], [62 x i8] } { [130 x i8] c"\22%pU: block=%llu generation=%llu owner=%llu is_log_tree=%d\22, REC->fsid, REC->block, REC->generation, REC->owner, REC->is_log_tree\00", [62 x i8] zeroinitializer }, align 32
@event_btrfs_tree_unlock = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_locking_events, %union.anon.113 { ptr @__tracepoint_btrfs_tree_unlock }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_locking_events }, ptr @print_fmt_btrfs_locking_events, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_tree_unlock = internal global ptr @event_btrfs_tree_unlock, section "_ftrace_events", align 4
@event_btrfs_tree_read_unlock = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_locking_events, %union.anon.113 { ptr @__tracepoint_btrfs_tree_read_unlock }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_locking_events }, ptr @print_fmt_btrfs_locking_events, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_tree_read_unlock = internal global ptr @event_btrfs_tree_read_unlock, section "_ftrace_events", align 4
@event_btrfs_tree_read_unlock_blocking = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_locking_events, %union.anon.113 { ptr @__tracepoint_btrfs_tree_read_unlock_blocking }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_locking_events }, ptr @print_fmt_btrfs_locking_events, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_tree_read_unlock_blocking = internal global ptr @event_btrfs_tree_read_unlock_blocking, section "_ftrace_events", align 4
@event_btrfs_set_lock_blocking_read = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_locking_events, %union.anon.113 { ptr @__tracepoint_btrfs_set_lock_blocking_read }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_locking_events }, ptr @print_fmt_btrfs_locking_events, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_set_lock_blocking_read = internal global ptr @event_btrfs_set_lock_blocking_read, section "_ftrace_events", align 4
@event_btrfs_set_lock_blocking_write = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_locking_events, %union.anon.113 { ptr @__tracepoint_btrfs_set_lock_blocking_write }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_locking_events }, ptr @print_fmt_btrfs_locking_events, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_set_lock_blocking_write = internal global ptr @event_btrfs_set_lock_blocking_write, section "_ftrace_events", align 4
@event_btrfs_try_tree_read_lock = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_locking_events, %union.anon.113 { ptr @__tracepoint_btrfs_try_tree_read_lock }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_locking_events }, ptr @print_fmt_btrfs_locking_events, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_try_tree_read_lock = internal global ptr @event_btrfs_try_tree_read_lock, section "_ftrace_events", align 4
@event_btrfs_try_tree_write_lock = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_locking_events, %union.anon.113 { ptr @__tracepoint_btrfs_try_tree_write_lock }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_locking_events }, ptr @print_fmt_btrfs_locking_events, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_try_tree_write_lock = internal global ptr @event_btrfs_try_tree_write_lock, section "_ftrace_events", align 4
@event_btrfs_tree_read_lock_atomic = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs_locking_events, %union.anon.113 { ptr @__tracepoint_btrfs_tree_read_lock_atomic }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs_locking_events }, ptr @print_fmt_btrfs_locking_events, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_btrfs_tree_read_lock_atomic = internal global ptr @event_btrfs_tree_read_lock_atomic, section "_ftrace_events", align 4
@trace_event_fields_btrfs__space_info_update = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.154, %union.anon.111 { %struct.anon.112 { ptr @.str.155, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.279, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.111 { %struct.anon.112 { ptr @.str.495, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.417, %union.anon.111 { %struct.anon.112 { ptr @.str.418, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_btrfs__space_info_update = internal global %struct.trace_event_class { ptr @str__btrfs__trace_system_name, ptr @trace_event_raw_event_btrfs__space_info_update, ptr @perf_trace_btrfs__space_info_update, ptr @trace_event_reg, ptr @trace_event_fields_btrfs__space_info_update, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_btrfs__space_info_update, i64 24), ptr getelementptr (i8, ptr @event_class_btrfs__space_info_update, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_btrfs__space_info_update = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_btrfs__space_info_update, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_btrfs__space_info_update = internal global { [324 x i8], [92 x i8] } { [324 x i8] c"\22%pU: type=%s old=%llu diff=%lld\22, REC->fsid, __print_flags(REC->type, \22|\22, { (1ULL << 0), \22DATA\22}, { (1ULL << 1), \22SYSTEM\22}, { (1ULL << 2), \22METADATA\22}, { (1ULL << 3), \22RAID0\22}, { (1ULL << 4), \22RAID1\22}, { (1ULL << 5), \22DUP\22}, { (1ULL << 6), \22RAID10\22}, { (1ULL << 7), \22RAID5\22}, { (1ULL << 8), \22RAID6\22}), REC->old, REC->diff\00", [92 x i8] zeroinitializer }, align 32
@event_update_bytes_may_use = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__space_info_update, %union.anon.113 { ptr @__tracepoint_update_bytes_may_use }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__space_info_update }, ptr @print_fmt_btrfs__space_info_update, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_update_bytes_may_use = internal global ptr @event_update_bytes_may_use, section "_ftrace_events", align 4
@event_update_bytes_pinned = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_btrfs__space_info_update, %union.anon.113 { ptr @__tracepoint_update_bytes_pinned }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_btrfs__space_info_update }, ptr @print_fmt_btrfs__space_info_update, ptr null, %union.anon.114 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_update_bytes_pinned = internal global ptr @event_update_bytes_pinned, section "_ftrace_events", align 4
@__bpf_trace_tp_map_btrfs_transaction_commit = internal global %union.anon.115 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_transaction_commit, ptr @__bpf_trace_btrfs_transaction_commit, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_inode_new = internal global %union.anon.116 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_inode_new, ptr @__bpf_trace_btrfs__inode, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_inode_request = internal global %union.anon.117 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_inode_request, ptr @__bpf_trace_btrfs__inode, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_inode_evict = internal global %union.anon.118 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_inode_evict, ptr @__bpf_trace_btrfs__inode, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_get_extent = internal global %union.anon.119 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_get_extent, ptr @__bpf_trace_btrfs_get_extent, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_handle_em_exist = internal global %union.anon.120 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_handle_em_exist, ptr @__bpf_trace_btrfs_handle_em_exist, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_get_extent_show_fi_regular = internal global %union.anon.121 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_get_extent_show_fi_regular, ptr @__bpf_trace_btrfs__file_extent_item_regular, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_truncate_show_fi_regular = internal global %union.anon.122 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_truncate_show_fi_regular, ptr @__bpf_trace_btrfs__file_extent_item_regular, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_get_extent_show_fi_inline = internal global %union.anon.123 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_get_extent_show_fi_inline, ptr @__bpf_trace_btrfs__file_extent_item_inline, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_truncate_show_fi_inline = internal global %union.anon.124 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_truncate_show_fi_inline, ptr @__bpf_trace_btrfs__file_extent_item_inline, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_ordered_extent_add = internal global %union.anon.125 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_ordered_extent_add, ptr @__bpf_trace_btrfs__ordered_extent, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_ordered_extent_remove = internal global %union.anon.126 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_ordered_extent_remove, ptr @__bpf_trace_btrfs__ordered_extent, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_ordered_extent_start = internal global %union.anon.127 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_ordered_extent_start, ptr @__bpf_trace_btrfs__ordered_extent, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_ordered_extent_put = internal global %union.anon.128 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_ordered_extent_put, ptr @__bpf_trace_btrfs__ordered_extent, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map___extent_writepage = internal global %union.anon.129 { %struct.bpf_raw_event_map { ptr @__tracepoint___extent_writepage, ptr @__bpf_trace_btrfs__writepage, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_writepage_end_io_hook = internal global %union.anon.130 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_writepage_end_io_hook, ptr @__bpf_trace_btrfs_writepage_end_io_hook, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_sync_file = internal global %union.anon.131 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_sync_file, ptr @__bpf_trace_btrfs_sync_file, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_sync_fs = internal global %union.anon.132 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_sync_fs, ptr @__bpf_trace_btrfs_sync_fs, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_add_block_group = internal global %union.anon.133 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_add_block_group, ptr @__bpf_trace_btrfs_add_block_group, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_add_delayed_tree_ref = internal global %union.anon.134 { %struct.bpf_raw_event_map { ptr @__tracepoint_add_delayed_tree_ref, ptr @__bpf_trace_btrfs_delayed_tree_ref, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_run_delayed_tree_ref = internal global %union.anon.135 { %struct.bpf_raw_event_map { ptr @__tracepoint_run_delayed_tree_ref, ptr @__bpf_trace_btrfs_delayed_tree_ref, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_add_delayed_data_ref = internal global %union.anon.136 { %struct.bpf_raw_event_map { ptr @__tracepoint_add_delayed_data_ref, ptr @__bpf_trace_btrfs_delayed_data_ref, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_run_delayed_data_ref = internal global %union.anon.137 { %struct.bpf_raw_event_map { ptr @__tracepoint_run_delayed_data_ref, ptr @__bpf_trace_btrfs_delayed_data_ref, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_add_delayed_ref_head = internal global %union.anon.138 { %struct.bpf_raw_event_map { ptr @__tracepoint_add_delayed_ref_head, ptr @__bpf_trace_btrfs_delayed_ref_head, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_run_delayed_ref_head = internal global %union.anon.139 { %struct.bpf_raw_event_map { ptr @__tracepoint_run_delayed_ref_head, ptr @__bpf_trace_btrfs_delayed_ref_head, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_chunk_alloc = internal global %union.anon.140 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_chunk_alloc, ptr @__bpf_trace_btrfs__chunk, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_chunk_free = internal global %union.anon.141 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_chunk_free, ptr @__bpf_trace_btrfs__chunk, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_cow_block = internal global %union.anon.142 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_cow_block, ptr @__bpf_trace_btrfs_cow_block, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_space_reservation = internal global %union.anon.143 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_space_reservation, ptr @__bpf_trace_btrfs_space_reservation, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_trigger_flush = internal global %union.anon.144 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_trigger_flush, ptr @__bpf_trace_btrfs_trigger_flush, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_flush_space = internal global %union.anon.145 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_flush_space, ptr @__bpf_trace_btrfs_flush_space, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_reserved_extent_alloc = internal global %union.anon.146 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_reserved_extent_alloc, ptr @__bpf_trace_btrfs__reserved_extent, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_reserved_extent_free = internal global %union.anon.147 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_reserved_extent_free, ptr @__bpf_trace_btrfs__reserved_extent, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_find_free_extent = internal global %union.anon.148 { %struct.bpf_raw_event_map { ptr @__tracepoint_find_free_extent, ptr @__bpf_trace_find_free_extent, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_reserve_extent = internal global %union.anon.149 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_reserve_extent, ptr @__bpf_trace_btrfs__reserve_extent, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_reserve_extent_cluster = internal global %union.anon.150 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_reserve_extent_cluster, ptr @__bpf_trace_btrfs__reserve_extent, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_find_cluster = internal global %union.anon.151 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_find_cluster, ptr @__bpf_trace_btrfs_find_cluster, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_failed_cluster_setup = internal global %union.anon.152 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_failed_cluster_setup, ptr @__bpf_trace_btrfs_failed_cluster_setup, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_setup_cluster = internal global %union.anon.153 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_setup_cluster, ptr @__bpf_trace_btrfs_setup_cluster, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_alloc_extent_state = internal global %union.anon.154 { %struct.bpf_raw_event_map { ptr @__tracepoint_alloc_extent_state, ptr @__bpf_trace_alloc_extent_state, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_free_extent_state = internal global %union.anon.155 { %struct.bpf_raw_event_map { ptr @__tracepoint_free_extent_state, ptr @__bpf_trace_free_extent_state, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_work_queued = internal global %union.anon.156 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_work_queued, ptr @__bpf_trace_btrfs__work, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_work_sched = internal global %union.anon.157 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_work_sched, ptr @__bpf_trace_btrfs__work, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_all_work_done = internal global %union.anon.158 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_all_work_done, ptr @__bpf_trace_btrfs__work__done, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_ordered_sched = internal global %union.anon.159 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_ordered_sched, ptr @__bpf_trace_btrfs__work, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_workqueue_alloc = internal global %union.anon.160 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_workqueue_alloc, ptr @__bpf_trace_btrfs__workqueue, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_workqueue_destroy = internal global %union.anon.161 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_workqueue_destroy, ptr @__bpf_trace_btrfs__workqueue_done, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_qgroup_reserve_data = internal global %union.anon.162 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_qgroup_reserve_data, ptr @__bpf_trace_btrfs__qgroup_rsv_data, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_qgroup_release_data = internal global %union.anon.163 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_qgroup_release_data, ptr @__bpf_trace_btrfs__qgroup_rsv_data, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_qgroup_account_extents = internal global %union.anon.164 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_qgroup_account_extents, ptr @__bpf_trace_btrfs_qgroup_extent, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_qgroup_trace_extent = internal global %union.anon.165 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_qgroup_trace_extent, ptr @__bpf_trace_btrfs_qgroup_extent, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_qgroup_num_dirty_extents = internal global %union.anon.166 { %struct.bpf_raw_event_map { ptr @__tracepoint_qgroup_num_dirty_extents, ptr @__bpf_trace_qgroup_num_dirty_extents, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_qgroup_account_extent = internal global %union.anon.167 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_qgroup_account_extent, ptr @__bpf_trace_btrfs_qgroup_account_extent, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_qgroup_update_counters = internal global %union.anon.168 { %struct.bpf_raw_event_map { ptr @__tracepoint_qgroup_update_counters, ptr @__bpf_trace_qgroup_update_counters, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_qgroup_update_reserve = internal global %union.anon.169 { %struct.bpf_raw_event_map { ptr @__tracepoint_qgroup_update_reserve, ptr @__bpf_trace_qgroup_update_reserve, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_qgroup_meta_reserve = internal global %union.anon.170 { %struct.bpf_raw_event_map { ptr @__tracepoint_qgroup_meta_reserve, ptr @__bpf_trace_qgroup_meta_reserve, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_qgroup_meta_convert = internal global %union.anon.171 { %struct.bpf_raw_event_map { ptr @__tracepoint_qgroup_meta_convert, ptr @__bpf_trace_qgroup_meta_convert, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_qgroup_meta_free_all_pertrans = internal global %union.anon.172 { %struct.bpf_raw_event_map { ptr @__tracepoint_qgroup_meta_free_all_pertrans, ptr @__bpf_trace_qgroup_meta_free_all_pertrans, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_prelim_ref_merge = internal global %union.anon.173 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_prelim_ref_merge, ptr @__bpf_trace_btrfs__prelim_ref, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_prelim_ref_insert = internal global %union.anon.174 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_prelim_ref_insert, ptr @__bpf_trace_btrfs__prelim_ref, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_inode_mod_outstanding_extents = internal global %union.anon.175 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_inode_mod_outstanding_extents, ptr @__bpf_trace_btrfs_inode_mod_outstanding_extents, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_remove_block_group = internal global %union.anon.176 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_remove_block_group, ptr @__bpf_trace_btrfs__block_group, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_add_unused_block_group = internal global %union.anon.177 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_add_unused_block_group, ptr @__bpf_trace_btrfs__block_group, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_add_reclaim_block_group = internal global %union.anon.178 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_add_reclaim_block_group, ptr @__bpf_trace_btrfs__block_group, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_reclaim_block_group = internal global %union.anon.179 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_reclaim_block_group, ptr @__bpf_trace_btrfs__block_group, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_skip_unused_block_group = internal global %union.anon.180 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_skip_unused_block_group, ptr @__bpf_trace_btrfs__block_group, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_set_extent_bit = internal global %union.anon.181 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_set_extent_bit, ptr @__bpf_trace_btrfs_set_extent_bit, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_clear_extent_bit = internal global %union.anon.182 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_clear_extent_bit, ptr @__bpf_trace_btrfs_clear_extent_bit, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_convert_extent_bit = internal global %union.anon.183 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_convert_extent_bit, ptr @__bpf_trace_btrfs_convert_extent_bit, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_done_preemptive_reclaim = internal global %union.anon.184 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_done_preemptive_reclaim, ptr @__bpf_trace_btrfs_dump_space_info, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_fail_all_tickets = internal global %union.anon.185 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_fail_all_tickets, ptr @__bpf_trace_btrfs_dump_space_info, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_reserve_ticket = internal global %union.anon.186 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_reserve_ticket, ptr @__bpf_trace_btrfs_reserve_ticket, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_tree_read_lock = internal global %union.anon.187 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_tree_read_lock, ptr @__bpf_trace_btrfs_sleep_tree_lock, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_tree_lock = internal global %union.anon.188 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_tree_lock, ptr @__bpf_trace_btrfs_sleep_tree_lock, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_tree_unlock = internal global %union.anon.189 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_tree_unlock, ptr @__bpf_trace_btrfs_locking_events, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_tree_read_unlock = internal global %union.anon.190 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_tree_read_unlock, ptr @__bpf_trace_btrfs_locking_events, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_tree_read_unlock_blocking = internal global %union.anon.191 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_tree_read_unlock_blocking, ptr @__bpf_trace_btrfs_locking_events, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_set_lock_blocking_read = internal global %union.anon.192 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_set_lock_blocking_read, ptr @__bpf_trace_btrfs_locking_events, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_set_lock_blocking_write = internal global %union.anon.193 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_set_lock_blocking_write, ptr @__bpf_trace_btrfs_locking_events, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_try_tree_read_lock = internal global %union.anon.194 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_try_tree_read_lock, ptr @__bpf_trace_btrfs_locking_events, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_try_tree_write_lock = internal global %union.anon.195 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_try_tree_write_lock, ptr @__bpf_trace_btrfs_locking_events, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_btrfs_tree_read_lock_atomic = internal global %union.anon.196 { %struct.bpf_raw_event_map { ptr @__tracepoint_btrfs_tree_read_lock_atomic, ptr @__bpf_trace_btrfs_locking_events, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_update_bytes_may_use = internal global %union.anon.197 { %struct.bpf_raw_event_map { ptr @__tracepoint_update_bytes_may_use, ptr @__bpf_trace_btrfs__space_info_update, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_update_bytes_pinned = internal global %union.anon.198 { %struct.bpf_raw_event_map { ptr @__tracepoint_update_bytes_pinned, ptr @__bpf_trace_btrfs__space_info_update, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@.str.53 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"unknown\00", [24 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"No such entry\00", [18 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"IO failure\00", [21 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Out of memory\00", [18 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Object already exists\00", [42 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"No space left\00", [18 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Readonly filesystem\00", [44 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Operation not supported\00", [40 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Filesystem corrupted\00", [43 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Quota exceeded\00", [17 x i8] zeroinitializer }, align 32
@__btrfs_handle_fs_error._entry = internal constant %struct.pi_entry { ptr @.str.63, ptr @.str.64, ptr @.str.65, i32 152, ptr null, ptr null }, align 1
@.str.63 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\012BTRFS: error (device %s) in %s:%d: errno=%d %s (%pV)\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"__btrfs_handle_fs_error\00", [40 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"fs/btrfs/super.c\00", [47 x i8] zeroinitializer }, align 32
@__btrfs_handle_fs_error._entry_ptr = internal global ptr @__btrfs_handle_fs_error._entry, section ".printk_index", align 4
@__btrfs_handle_fs_error._entry.66 = internal constant %struct.pi_entry { ptr @.str.67, ptr @.str.64, ptr @.str.65, i32 156, ptr null, ptr null }, align 1
@.str.67 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\012BTRFS: error (device %s) in %s:%d: errno=%d %s\0A\00", [46 x i8] zeroinitializer }, align 32
@__btrfs_handle_fs_error._entry_ptr.68 = internal global ptr @__btrfs_handle_fs_error._entry.66, section ".printk_index", align 4
@.str.69 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"\016forced readonly\00", [46 x i8] zeroinitializer }, align 32
@logtypes = internal constant { [8 x ptr], [32 x i8] } { [8 x ptr] [ptr @.str.497, ptr @.str.498, ptr @.str.499, ptr @.str.487, ptr @.str.500, ptr @.str.501, ptr @.str.502, ptr @.str.503], [32 x i8] zeroinitializer }, align 32
@printk_limits = internal global { [8 x %struct.ratelimit_state], [128 x i8] } { [8 x %struct.ratelimit_state] [%struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.504, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 100, i32 0, i32 0, i32 0, i32 0 }, %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.505, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 100, i32 0, i32 0, i32 0, i32 0 }, %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.506, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 100, i32 0, i32 0, i32 0, i32 0 }, %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.507, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 100, i32 0, i32 0, i32 0, i32 0 }, %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.508, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 100, i32 0, i32 0, i32 0, i32 0 }, %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.509, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 100, i32 0, i32 0, i32 0, i32 0 }, %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.510, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 100, i32 0, i32 0, i32 0, i32 0 }, %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.511, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 100, i32 0, i32 0, i32 0, i32 0 }], [128 x i8] zeroinitializer }, align 32
@__func__.btrfs_printk = private unnamed_addr constant [13 x i8] c"btrfs_printk\00", align 1
@btrfs_printk._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.70, ptr @__func__.btrfs_printk, ptr @.str.65, i32 245, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"%sBTRFS %s (device %s): %pV\0A\00", [35 x i8] zeroinitializer }, align 32
@btrfs_printk._entry_ptr = internal global ptr @btrfs_printk._entry, section ".printk_index", align 4
@btrfs_printk._entry.71 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.72, ptr @__func__.btrfs_printk, ptr @.str.65, i32 247, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"%sBTRFS %s: %pV\0A\00", [47 x i8] zeroinitializer }, align 32
@btrfs_printk._entry_ptr.73 = internal global ptr @btrfs_printk._entry.71, section ".printk_index", align 4
@.str.74 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\014reaching 32bit limit for logical addresses\00", [51 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [91 x i8], [37 x i8] } { [91 x i8] c"\014due to page cache limit on 32bit systems, btrfs can't access metadata at or beyond %lluT\00", [37 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\014please consider upgrading to 64bit kernel/hardware\00", [43 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\013reached 32bit limit for logical addresses\00", [52 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [84 x i8], [44 x i8] } { [84 x i8] c"\013due to page cache limit on 32bit systems, metadata beyond %lluT can't be accessed\00", [44 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\013please consider upgrading to 64bit kernel/hardware\00", [43 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"<unknown>\00", [22 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\012BTRFS panic (device %s) in %s:%d: %pV (errno=%d %s)\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\012panic in %s:%d: %pV (errno=%d %s)\00", [60 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\016zoned: clearing existing space cache\00", [57 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c",\00", [30 x i8] zeroinitializer }, align 32
@tokens = internal constant { [59 x %struct.match_token], [104 x i8] } { [59 x %struct.match_token] [%struct.match_token { i32 0, ptr @.str.512 }, %struct.match_token { i32 1, ptr @.str.513 }, %struct.match_token { i32 2, ptr @.str.514 }, %struct.match_token { i32 3, ptr @.str.515 }, %struct.match_token { i32 4, ptr @.str.516 }, %struct.match_token { i32 7, ptr @.str.517 }, %struct.match_token { i32 5, ptr @.str.518 }, %struct.match_token { i32 6, ptr @.str.519 }, %struct.match_token { i32 8, ptr @.str.520 }, %struct.match_token { i32 9, ptr @.str.521 }, %struct.match_token { i32 10, ptr @.str.522 }, %struct.match_token { i32 11, ptr @.str.523 }, %struct.match_token { i32 12, ptr @.str.524 }, %struct.match_token { i32 50, ptr @.str.525 }, %struct.match_token { i32 51, ptr @.str.526 }, %struct.match_token { i32 13, ptr @.str.527 }, %struct.match_token { i32 14, ptr @.str.528 }, %struct.match_token { i32 15, ptr @.str.529 }, %struct.match_token { i32 16, ptr @.str.530 }, %struct.match_token { i32 17, ptr @.str.531 }, %struct.match_token { i32 18, ptr @.str.532 }, %struct.match_token { i32 19, ptr @.str.533 }, %struct.match_token { i32 20, ptr @.str.534 }, %struct.match_token { i32 21, ptr @.str.535 }, %struct.match_token { i32 22, ptr @.str.536 }, %struct.match_token { i32 24, ptr @.str.537 }, %struct.match_token { i32 23, ptr @.str.538 }, %struct.match_token { i32 25, ptr @.str.539 }, %struct.match_token { i32 26, ptr @.str.540 }, %struct.match_token { i32 27, ptr @.str.541 }, %struct.match_token { i32 28, ptr @.str.542 }, %struct.match_token { i32 29, ptr @.str.543 }, %struct.match_token { i32 30, ptr @.str.544 }, %struct.match_token { i32 31, ptr @.str.545 }, %struct.match_token { i32 32, ptr @.str.546 }, %struct.match_token { i32 33, ptr @.str.547 }, %struct.match_token { i32 34, ptr @.str.548 }, %struct.match_token { i32 35, ptr @.str.549 }, %struct.match_token { i32 36, ptr @.str.550 }, %struct.match_token { i32 37, ptr @.str.551 }, %struct.match_token { i32 38, ptr @.str.552 }, %struct.match_token { i32 39, ptr @.str.553 }, %struct.match_token { i32 40, ptr @.str.554 }, %struct.match_token { i32 41, ptr @.str.555 }, %struct.match_token { i32 42, ptr @.str.556 }, %struct.match_token { i32 43, ptr @.str.557 }, %struct.match_token { i32 45, ptr @.str.148 }, %struct.match_token { i32 44, ptr @.str.134 }, %struct.match_token { i32 49, ptr @.str.133 }, %struct.match_token { i32 52, ptr @.str.558 }, %struct.match_token { i32 53, ptr @.str.559 }, %struct.match_token { i32 54, ptr @.str.560 }, %struct.match_token { i32 55, ptr @.str.561 }, %struct.match_token { i32 56, ptr @.str.562 }, %struct.match_token { i32 57, ptr @.str.563 }, %struct.match_token { i32 58, ptr @.str.564 }, %struct.match_token { i32 59, ptr @.str.565 }, %struct.match_token { i32 60, ptr @.str.566 }, %struct.match_token { i32 61, ptr null }], [104 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"\016allowing degraded mounts\00", [37 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"\016setting nodatasum\00", [44 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\016setting datasum, datacow enabled\00", [61 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"\016setting datasum\00", [46 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\016setting nodatacow, compression disabled\00", [54 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"\016setting nodatacow\00", [44 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"\016setting datacow\00", [46 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"zlib\00", [27 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"lzo\00", [28 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"COMPRESS_LZO\00", [19 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"zstd\00", [27 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"COMPRESS_ZSTD\00", [18 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"no\00", [29 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"\016use no compression\00", [43 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"\016%s %s compression, level %d\00", [34 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"force\00", [26 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"use\00", [28 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\016enabling ssd optimizations\00", [35 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\016using spread ssd allocation scheme\00", [59 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"\016not using ssd optimizations\00", [34 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\016not using spread ssd allocation scheme\00", [55 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"\016turning on barriers\00", [42 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"\016turning off barriers\00", [41 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"\016max_inline at %llu\00", [43 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"\016disabling tree log\00", [43 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"\016enabling tree log\00", [44 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\014'nologreplay' is deprecated, use 'rescue=nologreplay' instead\00", [32 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\016disabling log replay at mount time\00", [59 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\016turning on flush-on-commit\00", [35 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"\016turning off flush-on-commit\00", [34 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"\016metadata ratio %u\00", [44 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"sync\00", [27 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"\016turning on sync discard\00", [38 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"async\00", [26 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"\016turning on async discard\00", [37 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"\016turning off discard\00", [42 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\016turning off async discard\00", [36 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"v1\00", [29 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"\016enabling disk space caching\00", [34 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"v2\00", [29 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"\016enabling free space tree\00", [37 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\016disabling disk space caching\00", [33 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\016disabling free space tree\00", [36 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\014the 'inode_cache' option is deprecated and has no effect since 5.11\00", [58 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\016force clearing of disk cache\00", [33 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"\016enabling auto defrag\00", [41 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"\016disabling auto defrag\00", [40 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\014'%s' is deprecated, use 'rescue=usebackuproot' instead\00", [39 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"recovery\00", [23 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"usebackuproot\00", [18 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\016trying to use backup root at mount time\00", [54 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\016enabling check integrity including extent data\00", [47 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"\016enabling check integrity\00", [37 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\016check_integrity_print_mask 0x%x\00", [62 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"panic\00", [26 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"bug\00", [28 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\016using default commit interval %us\00", [60 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\014excessive commit interval %d\00", [33 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"\016fragmenting all space\00", [40 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"\016fragmenting metadata\00", [41 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"\016fragmenting data\00", [45 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"\016doing ref verification\00", [39 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\013unrecognized mount option '%s'\00", [63 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"nologreplay\00", [20 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"ignorebadroots\00", [17 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"ignoredatacsums\00", [16 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\013cannot disable free space tree\00", [63 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\016disk space caching is enabled\00", [32 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"\016using free space tree\00", [40 x i8] zeroinitializer }, align 32
@__UNIQUE_ID_alias1199 = internal constant [21 x i8] c"btrfs.alias=fs-btrfs\00", section ".modinfo", align 1
@__UNIQUE_ID_alias1202 = internal constant [30 x i8] c"btrfs.alias=char-major-10-234\00", section ".modinfo", align 1
@__UNIQUE_ID_alias1203 = internal constant [34 x i8] c"btrfs.alias=devname:btrfs-control\00", section ".modinfo", align 1
@btrfs_fs_type = internal global { %struct.file_system_type, [44 x i8] } { %struct.file_system_type { ptr @.str.583, i32 3, ptr null, ptr null, ptr @btrfs_mount, ptr @btrfs_kill_super, ptr null, ptr null, %struct.hlist_head zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, [3 x %struct.lock_class_key] zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer }, [44 x i8] zeroinitializer }, align 32
@__initcall__kmod_btrfs__1204_2664_init_btrfs_fs7 = internal global ptr @init_btrfs_fs, section ".initcall7.init", align 4
@__exitcall_exit_btrfs_fs = internal global ptr @exit_btrfs_fs, section ".exitcall.exit", align 4
@__UNIQUE_ID_file1205 = internal constant [26 x i8] c"btrfs.file=fs/btrfs/btrfs\00", section ".modinfo", align 1
@__UNIQUE_ID_license1206 = internal constant [18 x i8] c"btrfs.license=GPL\00", section ".modinfo", align 1
@__UNIQUE_ID_softdep1207 = internal constant [26 x i8] c"btrfs.softdep=pre: crc32c\00", section ".modinfo", align 1
@__UNIQUE_ID_softdep1208 = internal constant [28 x i8] c"btrfs.softdep=pre: xxhash64\00", section ".modinfo", align 1
@__UNIQUE_ID_softdep1209 = internal constant [26 x i8] c"btrfs.softdep=pre: sha256\00", section ".modinfo", align 1
@__UNIQUE_ID_softdep1210 = internal constant [31 x i8] c"btrfs.softdep=pre: blake2b-256\00", section ".modinfo", align 1
@.str.154 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"u8[16]\00", [25 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"fsid\00", [27 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"u64\00", [28 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"generation\00", [21 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"root_objectid\00", [18 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"%pU: root=%llu(%s) gen=%llu\0A\00", [35 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_transaction_commit.symbols = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ROOT_TREE\00", [22 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"EXTENT_TREE\00", [20 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"CHUNK_TREE\00", [21 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"DEV_TREE\00", [23 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"FS_TREE\00", [24 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"ROOT_TREE_DIR\00", [18 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"CSUM_TREE\00", [22 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"TREE_LOG\00", [23 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"QUOTA_TREE\00", [21 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"TREE_RELOC\00", [21 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"UUID_TREE\00", [22 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"FREE_SPACE_TREE\00", [16 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"DATA_RELOC_TREE\00", [16 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"-\00", [30 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ino\00", [28 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"blocks\00", [25 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"disk_i_size\00", [20 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"last_trans\00", [21 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"logged_trans\00", [19 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [101 x i8], [59 x i8] } { [101 x i8] c"%pU: root=%llu(%s) gen=%llu ino=%llu blocks=%llu disk_i_size=%llu last_trans=%llu logged_trans=%llu\0A\00", [59 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs__inode.symbols = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"start\00", [26 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"len\00", [28 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"orig_start\00", [21 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"block_start\00", [20 x i8] zeroinitializer }, align 32
@.str.184 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"block_len\00", [22 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned long\00", [18 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"flags\00", [26 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"refs\00", [27 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"compress_type\00", [18 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [135 x i8], [57 x i8] } { [135 x i8] c"%pU: root=%llu(%s) ino=%llu start=%llu len=%llu orig_start=%llu block_start=%llu(%s) block_len=%llu flags=%s refs=%u compress_type=%u\0A\00", [57 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_get_extent.symbols = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_get_extent.symbols.192 = internal constant { [5 x %struct.trace_print_flags_u64], [48 x i8] } { [5 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 -4, ptr @.str.193 }, %struct.trace_print_flags_u64 { i64 -3, ptr @.str.194 }, %struct.trace_print_flags_u64 { i64 -2, ptr @.str.195 }, %struct.trace_print_flags_u64 { i64 -1, ptr @.str.196 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"LAST_BYTE\00", [22 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"HOLE\00", [27 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"INLINE\00", [25 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"DELALLOC\00", [23 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_get_extent.__flags = internal constant { [7 x %struct.trace_print_flags], [40 x i8] } { [7 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.197 }, %struct.trace_print_flags { i32 2, ptr @.str.198 }, %struct.trace_print_flags { i32 4, ptr @.str.199 }, %struct.trace_print_flags { i32 8, ptr @.str.200 }, %struct.trace_print_flags { i32 16, ptr @.str.201 }, %struct.trace_print_flags { i32 32, ptr @.str.202 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"PINNED\00", [25 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"COMPRESSED\00", [21 x i8] zeroinitializer }, align 32
@.str.199 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"PREALLOC\00", [23 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"LOGGING\00", [24 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"FILLING\00", [24 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"FS_MAPPING\00", [21 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"|\00", [30 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"e_start\00", [24 x i8] zeroinitializer }, align 32
@.str.205 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"e_len\00", [26 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"map_start\00", [22 x i8] zeroinitializer }, align 32
@.str.207 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"map_len\00", [24 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"%pU: start=%llu len=%llu existing(start=%llu len=%llu) em(start=%llu len=%llu)\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"root_obj\00", [23 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"loff_t\00", [25 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"isize\00", [26 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"disk_isize\00", [21 x i8] zeroinitializer }, align 32
@.str.213 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"num_bytes\00", [22 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ram_bytes\00", [22 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"disk_bytenr\00", [20 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"disk_num_bytes\00", [17 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"extent_offset\00", [18 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"u8\00", [29 x i8] zeroinitializer }, align 32
@.str.219 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"extent_type\00", [20 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"compression\00", [20 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"extent_start\00", [19 x i8] zeroinitializer }, align 32
@.str.222 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"extent_end\00", [21 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [197 x i8], [59 x i8] } { [197 x i8] c"%pU: root=%llu(%s) inode=%llu size=%llu disk_isize=%llu file extent range=[%llu %llu] (num_bytes=%llu ram_bytes=%llu disk_bytenr=%llu disk_num_bytes=%llu extent_offset=%llu type=%s compression=%u\0A\00", [59 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs__file_extent_item_regular.symbols = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs__file_extent_item_regular.symbols.224 = internal constant { [4 x %struct.trace_print_flags], [32 x i8] } { [4 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.195 }, %struct.trace_print_flags { i32 1, ptr @.str.225 }, %struct.trace_print_flags { i32 2, ptr @.str.199 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.225 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"REG\00", [28 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [117 x i8], [43 x i8] } { [117 x i8] c"%pU: root=%llu(%s) inode=%llu size=%llu disk_isize=%llu file extent range=[%llu %llu] extent_type=%s compression=%u\0A\00", [43 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs__file_extent_item_inline.symbols = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs__file_extent_item_inline.symbols.227 = internal constant { [4 x %struct.trace_print_flags], [32 x i8] } { [4 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.195 }, %struct.trace_print_flags { i32 1, ptr @.str.225 }, %struct.trace_print_flags { i32 2, ptr @.str.199 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.228 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"file_offset\00", [20 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"disk_len\00", [23 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"bytes_left\00", [21 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"truncated_len\00", [18 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [149 x i8], [43 x i8] } { [149 x i8] c"%pU: root=%llu(%s) ino=%llu file_offset=%llu start=%llu len=%llu disk_len=%llu truncated_len=%llu bytes_left=%llu flags=%s compress_type=%d refs=%d\0A\00", [43 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs__ordered_extent.symbols = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs__ordered_extent.__flags = internal constant { [10 x %struct.trace_print_flags], [48 x i8] } { [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.233 }, %struct.trace_print_flags { i32 2, ptr @.str.234 }, %struct.trace_print_flags { i32 4, ptr @.str.199 }, %struct.trace_print_flags { i32 8, ptr @.str.198 }, %struct.trace_print_flags { i32 16, ptr @.str.235 }, %struct.trace_print_flags { i32 32, ptr @.str.236 }, %struct.trace_print_flags { i32 64, ptr @.str.237 }, %struct.trace_print_flags { i32 128, ptr @.str.238 }, %struct.trace_print_flags { i32 256, ptr @.str.239 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"REGULAR\00", [24 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"NOCOW\00", [26 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"DIRECT\00", [25 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"IO_DONE\00", [24 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"COMPLETE\00", [23 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"IOERR\00", [26 x i8] zeroinitializer }, align 32
@.str.239 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"TRUNCATED\00", [22 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"index\00", [26 x i8] zeroinitializer }, align 32
@.str.241 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"long\00", [27 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"nr_to_write\00", [20 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"pages_skipped\00", [18 x i8] zeroinitializer }, align 32
@.str.244 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"range_start\00", [20 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"range_end\00", [22 x i8] zeroinitializer }, align 32
@.str.246 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"char\00", [27 x i8] zeroinitializer }, align 32
@.str.247 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"for_kupdate\00", [20 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"for_reclaim\00", [20 x i8] zeroinitializer }, align 32
@.str.249 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"range_cyclic\00", [19 x i8] zeroinitializer }, align 32
@.str.250 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"writeback_index\00", [16 x i8] zeroinitializer }, align 32
@.str.251 = internal constant { [176 x i8], [48 x i8] } { [176 x i8] c"%pU: root=%llu(%s) ino=%llu page_index=%lu nr_to_write=%ld pages_skipped=%ld range_start=%llu range_end=%llu for_kupdate=%d for_reclaim=%d range_cyclic=%d writeback_index=%lu\0A\00", [48 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs__writepage.symbols = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.252 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"end\00", [28 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"uptodate\00", [23 x i8] zeroinitializer }, align 32
@.str.254 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"%pU: root=%llu(%s) ino=%llu start=%llu end=%llu uptodate=%d\0A\00", [35 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_writepage_end_io_hook.symbols = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.255 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"parent\00", [25 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"datasync\00", [23 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"%pU: root=%llu(%s) ino=%llu parent=%llu datasync=%d\0A\00", [43 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_sync_file.symbols = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.258 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"wait\00", [27 x i8] zeroinitializer }, align 32
@.str.259 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"%pU: wait=%d\0A\00", [18 x i8] zeroinitializer }, align 32
@.str.260 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"offset\00", [25 x i8] zeroinitializer }, align 32
@.str.261 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"size\00", [27 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"bytes_used\00", [21 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"bytes_super\00", [20 x i8] zeroinitializer }, align 32
@.str.264 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"create\00", [25 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [98 x i8], [62 x i8] } { [98 x i8] c"%pU: block_group offset=%llu size=%llu flags=%llu(%s) bytes_used=%llu bytes_super=%llu create=%d\0A\00", [62 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_add_block_group.__flags = internal constant { [10 x %struct.trace_print_flags], [48 x i8] } { [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.266 }, %struct.trace_print_flags { i32 2, ptr @.str.267 }, %struct.trace_print_flags { i32 4, ptr @.str.268 }, %struct.trace_print_flags { i32 8, ptr @.str.269 }, %struct.trace_print_flags { i32 16, ptr @.str.270 }, %struct.trace_print_flags { i32 32, ptr @.str.271 }, %struct.trace_print_flags { i32 64, ptr @.str.272 }, %struct.trace_print_flags { i32 128, ptr @.str.273 }, %struct.trace_print_flags { i32 256, ptr @.str.274 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"DATA\00", [27 x i8] zeroinitializer }, align 32
@.str.267 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"SYSTEM\00", [25 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"METADATA\00", [23 x i8] zeroinitializer }, align 32
@.str.269 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"RAID0\00", [26 x i8] zeroinitializer }, align 32
@.str.270 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"RAID1\00", [26 x i8] zeroinitializer }, align 32
@.str.271 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"DUP\00", [28 x i8] zeroinitializer }, align 32
@.str.272 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"RAID10\00", [25 x i8] zeroinitializer }, align 32
@.str.273 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"RAID5\00", [26 x i8] zeroinitializer }, align 32
@.str.274 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"RAID6\00", [26 x i8] zeroinitializer }, align 32
@.str.275 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"bytenr\00", [25 x i8] zeroinitializer }, align 32
@.str.276 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"action\00", [25 x i8] zeroinitializer }, align 32
@.str.277 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"ref_root\00", [23 x i8] zeroinitializer }, align 32
@.str.278 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"level\00", [26 x i8] zeroinitializer }, align 32
@.str.279 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"type\00", [27 x i8] zeroinitializer }, align 32
@.str.280 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"seq\00", [28 x i8] zeroinitializer }, align 32
@.str.281 = internal constant { [103 x i8], [57 x i8] } { [103 x i8] c"%pU: bytenr=%llu num_bytes=%llu action=%s parent=%llu(%s) ref_root=%llu(%s) level=%d type=%s seq=%llu\0A\00", [57 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_delayed_tree_ref.symbols = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.282 }, %struct.trace_print_flags { i32 2, ptr @.str.283 }, %struct.trace_print_flags { i32 3, ptr @.str.284 }, %struct.trace_print_flags { i32 4, ptr @.str.285 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.282 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"ADD_DELAYED_REF\00", [16 x i8] zeroinitializer }, align 32
@.str.283 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"DROP_DELAYED_REF\00", [47 x i8] zeroinitializer }, align 32
@.str.284 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"ADD_DELAYED_EXTENT\00", [45 x i8] zeroinitializer }, align 32
@.str.285 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"UPDATE_DELAYED_HEAD\00", [44 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_delayed_tree_ref.symbols.286 = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_delayed_tree_ref.symbols.287 = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_delayed_tree_ref.symbols.288 = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 176, ptr @.str.289 }, %struct.trace_print_flags { i32 178, ptr @.str.290 }, %struct.trace_print_flags { i32 180, ptr @.str.291 }, %struct.trace_print_flags { i32 182, ptr @.str.292 }, %struct.trace_print_flags { i32 184, ptr @.str.293 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.289 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"TREE_BLOCK_REF\00", [17 x i8] zeroinitializer }, align 32
@.str.290 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"EXTENT_DATA_REF\00", [16 x i8] zeroinitializer }, align 32
@.str.291 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"EXTENT_REF_V0\00", [18 x i8] zeroinitializer }, align 32
@.str.292 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"SHARED_BLOCK_REF\00", [47 x i8] zeroinitializer }, align 32
@.str.293 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"SHARED_DATA_REF\00", [16 x i8] zeroinitializer }, align 32
@.str.294 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"owner\00", [26 x i8] zeroinitializer }, align 32
@.str.295 = internal constant { [117 x i8], [43 x i8] } { [117 x i8] c"%pU: bytenr=%llu num_bytes=%llu action=%s parent=%llu(%s) ref_root=%llu(%s) owner=%llu offset=%llu type=%s seq=%llu\0A\00", [43 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_delayed_data_ref.symbols = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.282 }, %struct.trace_print_flags { i32 2, ptr @.str.283 }, %struct.trace_print_flags { i32 3, ptr @.str.284 }, %struct.trace_print_flags { i32 4, ptr @.str.285 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_delayed_data_ref.symbols.296 = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_delayed_data_ref.symbols.297 = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_delayed_data_ref.symbols.298 = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 176, ptr @.str.289 }, %struct.trace_print_flags { i32 178, ptr @.str.290 }, %struct.trace_print_flags { i32 180, ptr @.str.291 }, %struct.trace_print_flags { i32 182, ptr @.str.292 }, %struct.trace_print_flags { i32 184, ptr @.str.293 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.299 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"is_data\00", [24 x i8] zeroinitializer }, align 32
@.str.300 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"%pU: bytenr=%llu num_bytes=%llu action=%s is_data=%d\0A\00", [42 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_delayed_ref_head.symbols = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.282 }, %struct.trace_print_flags { i32 2, ptr @.str.283 }, %struct.trace_print_flags { i32 3, ptr @.str.284 }, %struct.trace_print_flags { i32 4, ptr @.str.285 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.301 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"num_stripes\00", [20 x i8] zeroinitializer }, align 32
@.str.302 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"sub_stripes\00", [20 x i8] zeroinitializer }, align 32
@.str.303 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"%pU: root=%llu(%s) offset=%llu size=%llu num_stripes=%d sub_stripes=%d type=%s\0A\00", [48 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs__chunk.symbols = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs__chunk.__flags = internal constant { [10 x %struct.trace_print_flags], [48 x i8] } { [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.266 }, %struct.trace_print_flags { i32 2, ptr @.str.267 }, %struct.trace_print_flags { i32 4, ptr @.str.268 }, %struct.trace_print_flags { i32 8, ptr @.str.269 }, %struct.trace_print_flags { i32 16, ptr @.str.270 }, %struct.trace_print_flags { i32 32, ptr @.str.271 }, %struct.trace_print_flags { i32 64, ptr @.str.272 }, %struct.trace_print_flags { i32 128, ptr @.str.273 }, %struct.trace_print_flags { i32 256, ptr @.str.274 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.304 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"buf_start\00", [22 x i8] zeroinitializer }, align 32
@.str.305 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"cow_start\00", [22 x i8] zeroinitializer }, align 32
@.str.306 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"buf_level\00", [22 x i8] zeroinitializer }, align 32
@.str.307 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"cow_level\00", [22 x i8] zeroinitializer }, align 32
@.str.308 = internal constant { [86 x i8], [42 x i8] } { [86 x i8] c"%pU: root=%llu(%s) refs=%d orig_buf=%llu (orig_level=%d) cow_buf=%llu (cow_level=%d)\0A\00", [42 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_cow_block.symbols = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.309 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"(null)\00", [25 x i8] zeroinitializer }, align 32
@.str.310 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__data_loc char[]\00", [46 x i8] zeroinitializer }, align 32
@.str.311 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"val\00", [28 x i8] zeroinitializer }, align 32
@.str.312 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"bytes\00", [26 x i8] zeroinitializer }, align 32
@.str.313 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"reserve\00", [24 x i8] zeroinitializer }, align 32
@.str.314 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%pU: %s: %llu %s %llu\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.315 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"release\00", [24 x i8] zeroinitializer }, align 32
@.str.316 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"flush\00", [26 x i8] zeroinitializer }, align 32
@.str.317 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"reason\00", [25 x i8] zeroinitializer }, align 32
@.str.318 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"%pU: %s: flush=%d(%s) flags=%llu(%s) bytes=%llu\0A\00", [47 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_trigger_flush.symbols = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.21 }, %struct.trace_print_flags { i32 1, ptr @.str.22 }, %struct.trace_print_flags { i32 5, ptr @.str.23 }, %struct.trace_print_flags { i32 6, ptr @.str.24 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_trigger_flush.__flags = internal constant { [10 x %struct.trace_print_flags], [48 x i8] } { [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.266 }, %struct.trace_print_flags { i32 2, ptr @.str.267 }, %struct.trace_print_flags { i32 4, ptr @.str.268 }, %struct.trace_print_flags { i32 8, ptr @.str.269 }, %struct.trace_print_flags { i32 16, ptr @.str.270 }, %struct.trace_print_flags { i32 32, ptr @.str.271 }, %struct.trace_print_flags { i32 64, ptr @.str.272 }, %struct.trace_print_flags { i32 128, ptr @.str.273 }, %struct.trace_print_flags { i32 256, ptr @.str.274 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.319 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"state\00", [26 x i8] zeroinitializer }, align 32
@.str.320 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ret\00", [28 x i8] zeroinitializer }, align 32
@.str.321 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"bool\00", [27 x i8] zeroinitializer }, align 32
@.str.322 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"for_preempt\00", [20 x i8] zeroinitializer }, align 32
@.str.323 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"%pU: state=%d(%s) flags=%llu(%s) num_bytes=%llu ret=%d for_preempt=%d\0A\00", [57 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_flush_space.symbols = internal constant { [12 x %struct.trace_print_flags], [32 x i8] } { [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.42 }, %struct.trace_print_flags { i32 2, ptr @.str.43 }, %struct.trace_print_flags { i32 5, ptr @.str.44 }, %struct.trace_print_flags { i32 6, ptr @.str.45 }, %struct.trace_print_flags { i32 7, ptr @.str.46 }, %struct.trace_print_flags { i32 3, ptr @.str.47 }, %struct.trace_print_flags { i32 4, ptr @.str.324 }, %struct.trace_print_flags { i32 8, ptr @.str.49 }, %struct.trace_print_flags { i32 9, ptr @.str.50 }, %struct.trace_print_flags { i32 10, ptr @.str.51 }, %struct.trace_print_flags { i32 11, ptr @.str.52 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.324 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"FLUSH_ELAYED_REFS\00", [46 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_flush_space.__flags = internal constant { [10 x %struct.trace_print_flags], [48 x i8] } { [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.266 }, %struct.trace_print_flags { i32 2, ptr @.str.267 }, %struct.trace_print_flags { i32 4, ptr @.str.268 }, %struct.trace_print_flags { i32 8, ptr @.str.269 }, %struct.trace_print_flags { i32 16, ptr @.str.270 }, %struct.trace_print_flags { i32 32, ptr @.str.271 }, %struct.trace_print_flags { i32 64, ptr @.str.272 }, %struct.trace_print_flags { i32 128, ptr @.str.273 }, %struct.trace_print_flags { i32 256, ptr @.str.274 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.325 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"%pU: root=%llu(%s) start=%llu len=%llu\0A\00", [56 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs__reserved_extent.symbols = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.326 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"empty_size\00", [21 x i8] zeroinitializer }, align 32
@.str.327 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"data\00", [27 x i8] zeroinitializer }, align 32
@.str.328 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"%pU: root=%llu(%s) len=%llu empty_size=%llu flags=%llu(%s)\0A\00", [36 x i8] zeroinitializer }, align 32
@trace_raw_output_find_free_extent.symbols = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_find_free_extent.__flags = internal constant { [10 x %struct.trace_print_flags], [48 x i8] } { [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.266 }, %struct.trace_print_flags { i32 2, ptr @.str.267 }, %struct.trace_print_flags { i32 4, ptr @.str.268 }, %struct.trace_print_flags { i32 8, ptr @.str.269 }, %struct.trace_print_flags { i32 16, ptr @.str.270 }, %struct.trace_print_flags { i32 32, ptr @.str.271 }, %struct.trace_print_flags { i32 64, ptr @.str.272 }, %struct.trace_print_flags { i32 128, ptr @.str.273 }, %struct.trace_print_flags { i32 256, ptr @.str.274 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.329 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"bg_objectid\00", [20 x i8] zeroinitializer }, align 32
@.str.330 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"%pU: root=%llu(%s) block_group=%llu flags=%llu(%s) start=%llu len=%llu\0A\00", [56 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs__reserve_extent.symbols = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs__reserve_extent.__flags = internal constant { [10 x %struct.trace_print_flags], [48 x i8] } { [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.266 }, %struct.trace_print_flags { i32 2, ptr @.str.267 }, %struct.trace_print_flags { i32 4, ptr @.str.268 }, %struct.trace_print_flags { i32 8, ptr @.str.269 }, %struct.trace_print_flags { i32 16, ptr @.str.270 }, %struct.trace_print_flags { i32 32, ptr @.str.271 }, %struct.trace_print_flags { i32 64, ptr @.str.272 }, %struct.trace_print_flags { i32 128, ptr @.str.273 }, %struct.trace_print_flags { i32 256, ptr @.str.274 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.331 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"min_bytes\00", [22 x i8] zeroinitializer }, align 32
@.str.332 = internal constant { [89 x i8], [39 x i8] } { [89 x i8] c"%pU: block_group=%llu flags=%llu(%s) start=%llu len=%llu empty_size=%llu min_bytes=%llu\0A\00", [39 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_find_cluster.__flags = internal constant { [10 x %struct.trace_print_flags], [48 x i8] } { [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.266 }, %struct.trace_print_flags { i32 2, ptr @.str.267 }, %struct.trace_print_flags { i32 4, ptr @.str.268 }, %struct.trace_print_flags { i32 8, ptr @.str.269 }, %struct.trace_print_flags { i32 16, ptr @.str.270 }, %struct.trace_print_flags { i32 32, ptr @.str.271 }, %struct.trace_print_flags { i32 64, ptr @.str.272 }, %struct.trace_print_flags { i32 128, ptr @.str.273 }, %struct.trace_print_flags { i32 256, ptr @.str.274 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.333 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%pU: block_group=%llu\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.334 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"max_size\00", [23 x i8] zeroinitializer }, align 32
@.str.335 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"bitmap\00", [25 x i8] zeroinitializer }, align 32
@.str.336 = internal constant { [90 x i8], [38 x i8] } { [90 x i8] c"%pU: block_group=%llu flags=%llu(%s) window_start=%llu size=%llu max_size=%llu bitmap=%d\0A\00", [38 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_setup_cluster.__flags = internal constant { [10 x %struct.trace_print_flags], [48 x i8] } { [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.266 }, %struct.trace_print_flags { i32 2, ptr @.str.267 }, %struct.trace_print_flags { i32 4, ptr @.str.268 }, %struct.trace_print_flags { i32 8, ptr @.str.269 }, %struct.trace_print_flags { i32 16, ptr @.str.270 }, %struct.trace_print_flags { i32 32, ptr @.str.271 }, %struct.trace_print_flags { i32 64, ptr @.str.272 }, %struct.trace_print_flags { i32 128, ptr @.str.273 }, %struct.trace_print_flags { i32 256, ptr @.str.274 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.337 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"const struct extent_state *\00", [36 x i8] zeroinitializer }, align 32
@.str.338 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"gfp_t\00", [26 x i8] zeroinitializer }, align 32
@.str.339 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"mask\00", [27 x i8] zeroinitializer }, align 32
@.str.340 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"const void*\00", [20 x i8] zeroinitializer }, align 32
@.str.341 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"ip\00", [29 x i8] zeroinitializer }, align 32
@.str.342 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"state=%p mask=%s caller=%pS\0A\00", [35 x i8] zeroinitializer }, align 32
@trace_raw_output_alloc_extent_state.__flags = internal constant { [38 x %struct.trace_print_flags], [80 x i8] } { [38 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 18621642, ptr @.str.343 }, %struct.trace_print_flags { i32 18620618, ptr @.str.344 }, %struct.trace_print_flags { i32 17829066, ptr @.str.345 }, %struct.trace_print_flags { i32 1051842, ptr @.str.346 }, %struct.trace_print_flags { i32 1051840, ptr @.str.347 }, %struct.trace_print_flags { i32 4197568, ptr @.str.348 }, %struct.trace_print_flags { i32 3264, ptr @.str.349 }, %struct.trace_print_flags { i32 3136, ptr @.str.350 }, %struct.trace_print_flags { i32 2592, ptr @.str.351 }, %struct.trace_print_flags { i32 3072, ptr @.str.352 }, %struct.trace_print_flags { i32 2048, ptr @.str.353 }, %struct.trace_print_flags { i32 1, ptr @.str.354 }, %struct.trace_print_flags { i32 2, ptr @.str.355 }, %struct.trace_print_flags { i32 4, ptr @.str.356 }, %struct.trace_print_flags { i32 32, ptr @.str.357 }, %struct.trace_print_flags { i32 512, ptr @.str.358 }, %struct.trace_print_flags { i32 64, ptr @.str.359 }, %struct.trace_print_flags { i32 128, ptr @.str.360 }, %struct.trace_print_flags { i32 8192, ptr @.str.361 }, %struct.trace_print_flags { i32 16384, ptr @.str.362 }, %struct.trace_print_flags { i32 32768, ptr @.str.363 }, %struct.trace_print_flags { i32 65536, ptr @.str.364 }, %struct.trace_print_flags { i32 262144, ptr @.str.365 }, %struct.trace_print_flags { i32 256, ptr @.str.366 }, %struct.trace_print_flags { i32 524288, ptr @.str.367 }, %struct.trace_print_flags { i32 131072, ptr @.str.368 }, %struct.trace_print_flags { i32 1048576, ptr @.str.369 }, %struct.trace_print_flags { i32 2097152, ptr @.str.370 }, %struct.trace_print_flags { i32 16, ptr @.str.371 }, %struct.trace_print_flags { i32 8, ptr @.str.372 }, %struct.trace_print_flags { i32 4194304, ptr @.str.373 }, %struct.trace_print_flags { i32 4096, ptr @.str.374 }, %struct.trace_print_flags { i32 3072, ptr @.str.375 }, %struct.trace_print_flags { i32 1024, ptr @.str.376 }, %struct.trace_print_flags { i32 2048, ptr @.str.377 }, %struct.trace_print_flags { i32 8388608, ptr @.str.378 }, %struct.trace_print_flags { i32 16777216, ptr @.str.379 }, %struct.trace_print_flags { i32 -1, ptr null }], [80 x i8] zeroinitializer }, align 32
@.str.343 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"GFP_TRANSHUGE\00", [18 x i8] zeroinitializer }, align 32
@.str.344 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"GFP_TRANSHUGE_LIGHT\00", [44 x i8] zeroinitializer }, align 32
@.str.345 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"GFP_HIGHUSER_MOVABLE\00", [43 x i8] zeroinitializer }, align 32
@.str.346 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"GFP_HIGHUSER\00", [19 x i8] zeroinitializer }, align 32
@.str.347 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"GFP_USER\00", [23 x i8] zeroinitializer }, align 32
@.str.348 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"GFP_KERNEL_ACCOUNT\00", [45 x i8] zeroinitializer }, align 32
@.str.349 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"GFP_KERNEL\00", [21 x i8] zeroinitializer }, align 32
@.str.350 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"GFP_NOFS\00", [23 x i8] zeroinitializer }, align 32
@.str.351 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"GFP_ATOMIC\00", [21 x i8] zeroinitializer }, align 32
@.str.352 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"GFP_NOIO\00", [23 x i8] zeroinitializer }, align 32
@.str.353 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"GFP_NOWAIT\00", [21 x i8] zeroinitializer }, align 32
@.str.354 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"GFP_DMA\00", [24 x i8] zeroinitializer }, align 32
@.str.355 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"__GFP_HIGHMEM\00", [18 x i8] zeroinitializer }, align 32
@.str.356 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"GFP_DMA32\00", [22 x i8] zeroinitializer }, align 32
@.str.357 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"__GFP_HIGH\00", [21 x i8] zeroinitializer }, align 32
@.str.358 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"__GFP_ATOMIC\00", [19 x i8] zeroinitializer }, align 32
@.str.359 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"__GFP_IO\00", [23 x i8] zeroinitializer }, align 32
@.str.360 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"__GFP_FS\00", [23 x i8] zeroinitializer }, align 32
@.str.361 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"__GFP_NOWARN\00", [19 x i8] zeroinitializer }, align 32
@.str.362 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"__GFP_RETRY_MAYFAIL\00", [44 x i8] zeroinitializer }, align 32
@.str.363 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"__GFP_NOFAIL\00", [19 x i8] zeroinitializer }, align 32
@.str.364 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"__GFP_NORETRY\00", [18 x i8] zeroinitializer }, align 32
@.str.365 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"__GFP_COMP\00", [21 x i8] zeroinitializer }, align 32
@.str.366 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"__GFP_ZERO\00", [21 x i8] zeroinitializer }, align 32
@.str.367 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"__GFP_NOMEMALLOC\00", [47 x i8] zeroinitializer }, align 32
@.str.368 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"__GFP_MEMALLOC\00", [17 x i8] zeroinitializer }, align 32
@.str.369 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"__GFP_HARDWALL\00", [17 x i8] zeroinitializer }, align 32
@.str.370 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"__GFP_THISNODE\00", [17 x i8] zeroinitializer }, align 32
@.str.371 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__GFP_RECLAIMABLE\00", [46 x i8] zeroinitializer }, align 32
@.str.372 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"__GFP_MOVABLE\00", [18 x i8] zeroinitializer }, align 32
@.str.373 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"__GFP_ACCOUNT\00", [18 x i8] zeroinitializer }, align 32
@.str.374 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"__GFP_WRITE\00", [20 x i8] zeroinitializer }, align 32
@.str.375 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"__GFP_RECLAIM\00", [18 x i8] zeroinitializer }, align 32
@.str.376 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"__GFP_DIRECT_RECLAIM\00", [43 x i8] zeroinitializer }, align 32
@.str.377 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"__GFP_KSWAPD_RECLAIM\00", [43 x i8] zeroinitializer }, align 32
@.str.378 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"__GFP_ZEROTAGS\00", [17 x i8] zeroinitializer }, align 32
@.str.379 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"__GFP_SKIP_KASAN_POISON\00", [40 x i8] zeroinitializer }, align 32
@.str.380 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"none\00", [27 x i8] zeroinitializer }, align 32
@.str.381 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"state=%p caller=%pS\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.382 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"const void *\00", [19 x i8] zeroinitializer }, align 32
@.str.383 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"work\00", [27 x i8] zeroinitializer }, align 32
@.str.384 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"wq\00", [29 x i8] zeroinitializer }, align 32
@.str.385 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"func\00", [27 x i8] zeroinitializer }, align 32
@.str.386 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ordered_func\00", [19 x i8] zeroinitializer }, align 32
@.str.387 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ordered_free\00", [19 x i8] zeroinitializer }, align 32
@.str.388 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"normal_work\00", [20 x i8] zeroinitializer }, align 32
@.str.389 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"wtag\00", [27 x i8] zeroinitializer }, align 32
@.str.390 = internal constant { [78 x i8], [50 x i8] } { [78 x i8] c"%pU: work=%p (normal_work=%p) wq=%p func=%ps ordered_func=%p ordered_free=%p\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.391 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"%pU: work->%p\0A\00", [17 x i8] zeroinitializer }, align 32
@.str.392 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"name\00", [27 x i8] zeroinitializer }, align 32
@.str.393 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"high\00", [27 x i8] zeroinitializer }, align 32
@.str.394 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"%pU: name=%s%s wq=%p\0A\00", [42 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs__workqueue.__flags = internal constant { [2 x %struct.trace_print_flags], [16 x i8] } { [2 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 16, ptr @.str.395 }, %struct.trace_print_flags { i32 -1, ptr null }], [16 x i8] zeroinitializer }, align 32
@.str.395 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"-high\00", [26 x i8] zeroinitializer }, align 32
@.str.396 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@.str.397 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"%pU: wq=%p\0A\00", [20 x i8] zeroinitializer }, align 32
@.str.398 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"rootid\00", [25 x i8] zeroinitializer }, align 32
@.str.399 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"reserved\00", [23 x i8] zeroinitializer }, align 32
@.str.400 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"op\00", [29 x i8] zeroinitializer }, align 32
@.str.401 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"%pU: root=%llu ino=%llu start=%llu len=%llu reserved=%llu op=%s\0A\00", [63 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs__qgroup_rsv_data.__flags = internal constant { [4 x %struct.trace_print_flags], [32 x i8] } { [4 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.313 }, %struct.trace_print_flags { i32 2, ptr @.str.315 }, %struct.trace_print_flags { i32 4, ptr @.str.402 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.402 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"free\00", [27 x i8] zeroinitializer }, align 32
@.str.403 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%pU: bytenr=%llu num_bytes=%llu\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.404 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"transid\00", [24 x i8] zeroinitializer }, align 32
@.str.405 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"num_dirty_extents\00", [46 x i8] zeroinitializer }, align 32
@.str.406 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"%pU: transid=%llu num_dirty_extents=%llu\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.407 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"nr_old_roots\00", [19 x i8] zeroinitializer }, align 32
@.str.408 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"nr_new_roots\00", [19 x i8] zeroinitializer }, align 32
@.str.409 = internal constant { [82 x i8], [46 x i8] } { [82 x i8] c"%pU: transid=%llu bytenr=%llu num_bytes=%llu nr_old_roots=%llu nr_new_roots=%llu\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.410 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"qgid\00", [27 x i8] zeroinitializer }, align 32
@.str.411 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"old_rfer\00", [23 x i8] zeroinitializer }, align 32
@.str.412 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"old_excl\00", [23 x i8] zeroinitializer }, align 32
@.str.413 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"cur_old_count\00", [18 x i8] zeroinitializer }, align 32
@.str.414 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"cur_new_count\00", [18 x i8] zeroinitializer }, align 32
@.str.415 = internal constant { [82 x i8], [46 x i8] } { [82 x i8] c"%pU: qgid=%llu old_rfer=%llu old_excl=%llu cur_old_count=%llu cur_new_count=%llu\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.416 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"cur_reserved\00", [19 x i8] zeroinitializer }, align 32
@.str.417 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"s64\00", [28 x i8] zeroinitializer }, align 32
@.str.418 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"diff\00", [27 x i8] zeroinitializer }, align 32
@.str.419 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"%pU: qgid=%llu type=%s cur_reserved=%llu diff=%lld\0A\00", [44 x i8] zeroinitializer }, align 32
@trace_raw_output_qgroup_update_reserve.symbols = internal constant { [4 x %struct.trace_print_flags], [32 x i8] } { [4 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.266 }, %struct.trace_print_flags { i32 1, ptr @.str.420 }, %struct.trace_print_flags { i32 2, ptr @.str.421 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.420 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"META_PERTRANS\00", [18 x i8] zeroinitializer }, align 32
@.str.421 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"META_PREALLOC\00", [18 x i8] zeroinitializer }, align 32
@.str.422 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"refroot\00", [24 x i8] zeroinitializer }, align 32
@.str.423 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"%pU: refroot=%llu(%s) type=%s diff=%lld\0A\00", [55 x i8] zeroinitializer }, align 32
@trace_raw_output_qgroup_meta_reserve.symbols = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_qgroup_meta_reserve.symbols.424 = internal constant { [4 x %struct.trace_print_flags], [32 x i8] } { [4 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.266 }, %struct.trace_print_flags { i32 1, ptr @.str.420 }, %struct.trace_print_flags { i32 2, ptr @.str.421 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.425 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"%pU: refroot=%llu(%s) type=%s->%s diff=%lld\0A\00", [51 x i8] zeroinitializer }, align 32
@trace_raw_output_qgroup_meta_convert.symbols = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_qgroup_meta_convert.symbols.426 = internal constant { [4 x %struct.trace_print_flags], [32 x i8] } { [4 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.266 }, %struct.trace_print_flags { i32 1, ptr @.str.420 }, %struct.trace_print_flags { i32 2, ptr @.str.421 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_qgroup_meta_convert.symbols.427 = internal constant { [4 x %struct.trace_print_flags], [32 x i8] } { [4 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.266 }, %struct.trace_print_flags { i32 1, ptr @.str.420 }, %struct.trace_print_flags { i32 2, ptr @.str.421 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_qgroup_meta_free_all_pertrans.symbols = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_qgroup_meta_free_all_pertrans.symbols.428 = internal constant { [4 x %struct.trace_print_flags], [32 x i8] } { [4 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.266 }, %struct.trace_print_flags { i32 1, ptr @.str.420 }, %struct.trace_print_flags { i32 2, ptr @.str.421 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.429 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"root_id\00", [24 x i8] zeroinitializer }, align 32
@.str.430 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"objectid\00", [23 x i8] zeroinitializer }, align 32
@.str.431 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"old_count\00", [22 x i8] zeroinitializer }, align 32
@.str.432 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"mod_count\00", [22 x i8] zeroinitializer }, align 32
@.str.433 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"tree_size\00", [22 x i8] zeroinitializer }, align 32
@.str.434 = internal constant { [109 x i8], [51 x i8] } { [109 x i8] c"%pU: root_id=%llu key=[%llu,%u,%llu] level=%d count=[%d+%d=%d] parent=%llu wanted_disk_byte=%llu nodes=%llu\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.435 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"mod\00", [28 x i8] zeroinitializer }, align 32
@.str.436 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"%pU: root=%llu(%s) ino=%llu mod=%d\0A\00", [60 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_inode_mod_outstanding_extents.symbols = internal constant { [14 x %struct.trace_print_flags_u64], [32 x i8] } { [14 x %struct.trace_print_flags_u64] [%struct.trace_print_flags_u64 { i64 1, ptr @.str.160 }, %struct.trace_print_flags_u64 { i64 2, ptr @.str.161 }, %struct.trace_print_flags_u64 { i64 3, ptr @.str.162 }, %struct.trace_print_flags_u64 { i64 4, ptr @.str.163 }, %struct.trace_print_flags_u64 { i64 5, ptr @.str.164 }, %struct.trace_print_flags_u64 { i64 6, ptr @.str.165 }, %struct.trace_print_flags_u64 { i64 7, ptr @.str.166 }, %struct.trace_print_flags_u64 { i64 -6, ptr @.str.167 }, %struct.trace_print_flags_u64 { i64 8, ptr @.str.168 }, %struct.trace_print_flags_u64 { i64 -8, ptr @.str.169 }, %struct.trace_print_flags_u64 { i64 9, ptr @.str.170 }, %struct.trace_print_flags_u64 { i64 10, ptr @.str.171 }, %struct.trace_print_flags_u64 { i64 -9, ptr @.str.172 }, %struct.trace_print_flags_u64 { i64 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.437 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"used\00", [27 x i8] zeroinitializer }, align 32
@.str.438 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"%pU: bg bytenr=%llu len=%llu used=%llu flags=%llu(%s)\0A\00", [41 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs__block_group.__flags = internal constant { [10 x %struct.trace_print_flags], [48 x i8] } { [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.266 }, %struct.trace_print_flags { i32 2, ptr @.str.267 }, %struct.trace_print_flags { i32 4, ptr @.str.268 }, %struct.trace_print_flags { i32 8, ptr @.str.269 }, %struct.trace_print_flags { i32 16, ptr @.str.270 }, %struct.trace_print_flags { i32 32, ptr @.str.271 }, %struct.trace_print_flags { i32 64, ptr @.str.272 }, %struct.trace_print_flags { i32 128, ptr @.str.273 }, %struct.trace_print_flags { i32 256, ptr @.str.274 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.439 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"unsigned\00", [23 x i8] zeroinitializer }, align 32
@.str.440 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"set_bits\00", [23 x i8] zeroinitializer }, align 32
@.str.441 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"%pU: io_tree=%s ino=%llu root=%llu start=%llu len=%llu set_bits=%s\0A\00", [60 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_set_extent_bit.symbols = internal constant { [12 x %struct.trace_print_flags], [32 x i8] } { [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.442 }, %struct.trace_print_flags { i32 1, ptr @.str.443 }, %struct.trace_print_flags { i32 2, ptr @.str.444 }, %struct.trace_print_flags { i32 3, ptr @.str.445 }, %struct.trace_print_flags { i32 4, ptr @.str.446 }, %struct.trace_print_flags { i32 5, ptr @.str.447 }, %struct.trace_print_flags { i32 6, ptr @.str.448 }, %struct.trace_print_flags { i32 7, ptr @.str.449 }, %struct.trace_print_flags { i32 8, ptr @.str.450 }, %struct.trace_print_flags { i32 9, ptr @.str.451 }, %struct.trace_print_flags { i32 10, ptr @.str.452 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.442 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"PINNED_EXTENTS\00", [17 x i8] zeroinitializer }, align 32
@.str.443 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"EXCLUDED_EXTENTS\00", [47 x i8] zeroinitializer }, align 32
@.str.444 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"BTREE_INODE_IO\00", [17 x i8] zeroinitializer }, align 32
@.str.445 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"INODE_IO\00", [23 x i8] zeroinitializer }, align 32
@.str.446 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"INODE_IO_FAILURE\00", [47 x i8] zeroinitializer }, align 32
@.str.447 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"RELOC_BLOCKS\00", [19 x i8] zeroinitializer }, align 32
@.str.448 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"TRANS_DIRTY_PAGES\00", [46 x i8] zeroinitializer }, align 32
@.str.449 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"ROOT_DIRTY_LOG_PAGES\00", [43 x i8] zeroinitializer }, align 32
@.str.450 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"INODE_FILE_EXTENT\00", [46 x i8] zeroinitializer }, align 32
@.str.451 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"LOG_CSUM_RANGE\00", [17 x i8] zeroinitializer }, align 32
@.str.452 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"SELFTEST\00", [23 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_set_extent_bit.__flags = internal constant { [16 x %struct.trace_print_flags], [32 x i8] } { [16 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.453 }, %struct.trace_print_flags { i32 2, ptr @.str.454 }, %struct.trace_print_flags { i32 4, ptr @.str.455 }, %struct.trace_print_flags { i32 8, ptr @.str.456 }, %struct.trace_print_flags { i32 16, ptr @.str.196 }, %struct.trace_print_flags { i32 32, ptr @.str.457 }, %struct.trace_print_flags { i32 64, ptr @.str.458 }, %struct.trace_print_flags { i32 128, ptr @.str.459 }, %struct.trace_print_flags { i32 256, ptr @.str.460 }, %struct.trace_print_flags { i32 512, ptr @.str.461 }, %struct.trace_print_flags { i32 1024, ptr @.str.462 }, %struct.trace_print_flags { i32 2048, ptr @.str.463 }, %struct.trace_print_flags { i32 4096, ptr @.str.464 }, %struct.trace_print_flags { i32 8192, ptr @.str.465 }, %struct.trace_print_flags { i32 16384, ptr @.str.466 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.453 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"DIRTY\00", [26 x i8] zeroinitializer }, align 32
@.str.454 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"UPTODATE\00", [23 x i8] zeroinitializer }, align 32
@.str.455 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"LOCKED\00", [25 x i8] zeroinitializer }, align 32
@.str.456 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"NEW\00", [28 x i8] zeroinitializer }, align 32
@.str.457 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"DEFRAG\00", [25 x i8] zeroinitializer }, align 32
@.str.458 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"BOUNDARY\00", [23 x i8] zeroinitializer }, align 32
@.str.459 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"NODATASUM\00", [22 x i8] zeroinitializer }, align 32
@.str.460 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"CLEAR_META_RESV\00", [16 x i8] zeroinitializer }, align 32
@.str.461 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"NEED_WAIT\00", [22 x i8] zeroinitializer }, align 32
@.str.462 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"DAMAGED\00", [24 x i8] zeroinitializer }, align 32
@.str.463 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"NORESERVE\00", [22 x i8] zeroinitializer }, align 32
@.str.464 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"QGROUP_RESERVED\00", [16 x i8] zeroinitializer }, align 32
@.str.465 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"CLEAR_DATA_RESV\00", [16 x i8] zeroinitializer }, align 32
@.str.466 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"DELALLOC_NEW\00", [19 x i8] zeroinitializer }, align 32
@.str.467 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"clear_bits\00", [21 x i8] zeroinitializer }, align 32
@.str.468 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"%pU: io_tree=%s ino=%llu root=%llu start=%llu len=%llu clear_bits=%s\0A\00", [58 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_clear_extent_bit.symbols = internal constant { [12 x %struct.trace_print_flags], [32 x i8] } { [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.442 }, %struct.trace_print_flags { i32 1, ptr @.str.443 }, %struct.trace_print_flags { i32 2, ptr @.str.444 }, %struct.trace_print_flags { i32 3, ptr @.str.445 }, %struct.trace_print_flags { i32 4, ptr @.str.446 }, %struct.trace_print_flags { i32 5, ptr @.str.447 }, %struct.trace_print_flags { i32 6, ptr @.str.448 }, %struct.trace_print_flags { i32 7, ptr @.str.449 }, %struct.trace_print_flags { i32 8, ptr @.str.450 }, %struct.trace_print_flags { i32 9, ptr @.str.451 }, %struct.trace_print_flags { i32 10, ptr @.str.452 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_clear_extent_bit.__flags = internal constant { [16 x %struct.trace_print_flags], [32 x i8] } { [16 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.453 }, %struct.trace_print_flags { i32 2, ptr @.str.454 }, %struct.trace_print_flags { i32 4, ptr @.str.455 }, %struct.trace_print_flags { i32 8, ptr @.str.456 }, %struct.trace_print_flags { i32 16, ptr @.str.196 }, %struct.trace_print_flags { i32 32, ptr @.str.457 }, %struct.trace_print_flags { i32 64, ptr @.str.458 }, %struct.trace_print_flags { i32 128, ptr @.str.459 }, %struct.trace_print_flags { i32 256, ptr @.str.460 }, %struct.trace_print_flags { i32 512, ptr @.str.461 }, %struct.trace_print_flags { i32 1024, ptr @.str.462 }, %struct.trace_print_flags { i32 2048, ptr @.str.463 }, %struct.trace_print_flags { i32 4096, ptr @.str.464 }, %struct.trace_print_flags { i32 8192, ptr @.str.465 }, %struct.trace_print_flags { i32 16384, ptr @.str.466 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.469 = internal constant { [82 x i8], [46 x i8] } { [82 x i8] c"%pU: io_tree=%s ino=%llu root=%llu start=%llu len=%llu set_bits=%s clear_bits=%s\0A\00", [46 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_convert_extent_bit.symbols = internal constant { [12 x %struct.trace_print_flags], [32 x i8] } { [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.442 }, %struct.trace_print_flags { i32 1, ptr @.str.443 }, %struct.trace_print_flags { i32 2, ptr @.str.444 }, %struct.trace_print_flags { i32 3, ptr @.str.445 }, %struct.trace_print_flags { i32 4, ptr @.str.446 }, %struct.trace_print_flags { i32 5, ptr @.str.447 }, %struct.trace_print_flags { i32 6, ptr @.str.448 }, %struct.trace_print_flags { i32 7, ptr @.str.449 }, %struct.trace_print_flags { i32 8, ptr @.str.450 }, %struct.trace_print_flags { i32 9, ptr @.str.451 }, %struct.trace_print_flags { i32 10, ptr @.str.452 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_convert_extent_bit.__flags = internal constant { [16 x %struct.trace_print_flags], [32 x i8] } { [16 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.453 }, %struct.trace_print_flags { i32 2, ptr @.str.454 }, %struct.trace_print_flags { i32 4, ptr @.str.455 }, %struct.trace_print_flags { i32 8, ptr @.str.456 }, %struct.trace_print_flags { i32 16, ptr @.str.196 }, %struct.trace_print_flags { i32 32, ptr @.str.457 }, %struct.trace_print_flags { i32 64, ptr @.str.458 }, %struct.trace_print_flags { i32 128, ptr @.str.459 }, %struct.trace_print_flags { i32 256, ptr @.str.460 }, %struct.trace_print_flags { i32 512, ptr @.str.461 }, %struct.trace_print_flags { i32 1024, ptr @.str.462 }, %struct.trace_print_flags { i32 2048, ptr @.str.463 }, %struct.trace_print_flags { i32 4096, ptr @.str.464 }, %struct.trace_print_flags { i32 8192, ptr @.str.465 }, %struct.trace_print_flags { i32 16384, ptr @.str.466 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_convert_extent_bit.__flags.470 = internal constant { [16 x %struct.trace_print_flags], [32 x i8] } { [16 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.453 }, %struct.trace_print_flags { i32 2, ptr @.str.454 }, %struct.trace_print_flags { i32 4, ptr @.str.455 }, %struct.trace_print_flags { i32 8, ptr @.str.456 }, %struct.trace_print_flags { i32 16, ptr @.str.196 }, %struct.trace_print_flags { i32 32, ptr @.str.457 }, %struct.trace_print_flags { i32 64, ptr @.str.458 }, %struct.trace_print_flags { i32 128, ptr @.str.459 }, %struct.trace_print_flags { i32 256, ptr @.str.460 }, %struct.trace_print_flags { i32 512, ptr @.str.461 }, %struct.trace_print_flags { i32 1024, ptr @.str.462 }, %struct.trace_print_flags { i32 2048, ptr @.str.463 }, %struct.trace_print_flags { i32 4096, ptr @.str.464 }, %struct.trace_print_flags { i32 8192, ptr @.str.465 }, %struct.trace_print_flags { i32 16384, ptr @.str.466 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.471 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"total_bytes\00", [20 x i8] zeroinitializer }, align 32
@.str.472 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"bytes_pinned\00", [19 x i8] zeroinitializer }, align 32
@.str.473 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"bytes_reserved\00", [17 x i8] zeroinitializer }, align 32
@.str.474 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"bytes_may_use\00", [18 x i8] zeroinitializer }, align 32
@.str.475 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"bytes_readonly\00", [17 x i8] zeroinitializer }, align 32
@.str.476 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"reclaim_size\00", [19 x i8] zeroinitializer }, align 32
@.str.477 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"clamp\00", [26 x i8] zeroinitializer }, align 32
@.str.478 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"global_reserved\00", [16 x i8] zeroinitializer }, align 32
@.str.479 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"trans_reserved\00", [17 x i8] zeroinitializer }, align 32
@.str.480 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"delayed_refs_reserved\00", [42 x i8] zeroinitializer }, align 32
@.str.481 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"delayed_reserved\00", [47 x i8] zeroinitializer }, align 32
@.str.482 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"free_chunk_space\00", [47 x i8] zeroinitializer }, align 32
@.str.483 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"delalloc_bytes\00", [17 x i8] zeroinitializer }, align 32
@.str.484 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"ordered_bytes\00", [18 x i8] zeroinitializer }, align 32
@.str.485 = internal constant { [303 x i8], [81 x i8] } { [303 x i8] c"%pU: flags=%s total_bytes=%llu bytes_used=%llu bytes_pinned=%llu bytes_reserved=%llu bytes_may_use=%llu bytes_readonly=%llu reclaim_size=%llu clamp=%d global_reserved=%llu trans_reserved=%llu delayed_refs_reserved=%llu delayed_reserved=%llu chunk_free_space=%llu delalloc_bytes=%llu ordered_bytes=%llu\0A\00", [81 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_dump_space_info.__flags = internal constant { [10 x %struct.trace_print_flags], [48 x i8] } { [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.266 }, %struct.trace_print_flags { i32 2, ptr @.str.267 }, %struct.trace_print_flags { i32 4, ptr @.str.268 }, %struct.trace_print_flags { i32 8, ptr @.str.269 }, %struct.trace_print_flags { i32 16, ptr @.str.270 }, %struct.trace_print_flags { i32 32, ptr @.str.271 }, %struct.trace_print_flags { i32 64, ptr @.str.272 }, %struct.trace_print_flags { i32 128, ptr @.str.273 }, %struct.trace_print_flags { i32 256, ptr @.str.274 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.486 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"start_ns\00", [23 x i8] zeroinitializer }, align 32
@.str.487 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"error\00", [26 x i8] zeroinitializer }, align 32
@.str.488 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"%pU: flags=%s bytes=%llu start_ns=%llu flush=%s error=%d\0A\00", [38 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_reserve_ticket.__flags = internal constant { [10 x %struct.trace_print_flags], [48 x i8] } { [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.266 }, %struct.trace_print_flags { i32 2, ptr @.str.267 }, %struct.trace_print_flags { i32 4, ptr @.str.268 }, %struct.trace_print_flags { i32 8, ptr @.str.269 }, %struct.trace_print_flags { i32 16, ptr @.str.270 }, %struct.trace_print_flags { i32 32, ptr @.str.271 }, %struct.trace_print_flags { i32 64, ptr @.str.272 }, %struct.trace_print_flags { i32 128, ptr @.str.273 }, %struct.trace_print_flags { i32 256, ptr @.str.274 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs_reserve_ticket.symbols = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.21 }, %struct.trace_print_flags { i32 1, ptr @.str.22 }, %struct.trace_print_flags { i32 5, ptr @.str.23 }, %struct.trace_print_flags { i32 6, ptr @.str.24 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.489 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"block\00", [26 x i8] zeroinitializer }, align 32
@.str.490 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"end_ns\00", [25 x i8] zeroinitializer }, align 32
@.str.491 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"diff_ns\00", [24 x i8] zeroinitializer }, align 32
@.str.492 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"is_log_tree\00", [20 x i8] zeroinitializer }, align 32
@.str.493 = internal constant { [98 x i8], [62 x i8] } { [98 x i8] c"%pU: block=%llu generation=%llu start_ns=%llu end_ns=%llu diff_ns=%llu owner=%llu is_log_tree=%d\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.494 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"%pU: block=%llu generation=%llu owner=%llu is_log_tree=%d\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.495 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"old\00", [28 x i8] zeroinitializer }, align 32
@.str.496 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%pU: type=%s old=%llu diff=%lld\0A\00", [63 x i8] zeroinitializer }, align 32
@trace_raw_output_btrfs__space_info_update.__flags = internal constant { [10 x %struct.trace_print_flags], [48 x i8] } { [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.266 }, %struct.trace_print_flags { i32 2, ptr @.str.267 }, %struct.trace_print_flags { i32 4, ptr @.str.268 }, %struct.trace_print_flags { i32 8, ptr @.str.269 }, %struct.trace_print_flags { i32 16, ptr @.str.270 }, %struct.trace_print_flags { i32 32, ptr @.str.271 }, %struct.trace_print_flags { i32 64, ptr @.str.272 }, %struct.trace_print_flags { i32 128, ptr @.str.273 }, %struct.trace_print_flags { i32 256, ptr @.str.274 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@.str.497 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"emergency\00", [22 x i8] zeroinitializer }, align 32
@.str.498 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"alert\00", [26 x i8] zeroinitializer }, align 32
@.str.499 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"critical\00", [23 x i8] zeroinitializer }, align 32
@.str.500 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"warning\00", [24 x i8] zeroinitializer }, align 32
@.str.501 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"notice\00", [25 x i8] zeroinitializer }, align 32
@.str.502 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"info\00", [27 x i8] zeroinitializer }, align 32
@.str.503 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"debug\00", [26 x i8] zeroinitializer }, align 32
@.str.504 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"printk_limits[0].lock\00", [42 x i8] zeroinitializer }, align 32
@.str.505 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"printk_limits[1].lock\00", [42 x i8] zeroinitializer }, align 32
@.str.506 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"printk_limits[2].lock\00", [42 x i8] zeroinitializer }, align 32
@.str.507 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"printk_limits[3].lock\00", [42 x i8] zeroinitializer }, align 32
@.str.508 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"printk_limits[4].lock\00", [42 x i8] zeroinitializer }, align 32
@.str.509 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"printk_limits[5].lock\00", [42 x i8] zeroinitializer }, align 32
@.str.510 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"printk_limits[6].lock\00", [42 x i8] zeroinitializer }, align 32
@.str.511 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"printk_limits[7].lock\00", [42 x i8] zeroinitializer }, align 32
@.str.512 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"acl\00", [28 x i8] zeroinitializer }, align 32
@.str.513 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"noacl\00", [26 x i8] zeroinitializer }, align 32
@.str.514 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"clear_cache\00", [20 x i8] zeroinitializer }, align 32
@.str.515 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"commit=%u\00", [22 x i8] zeroinitializer }, align 32
@.str.516 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"compress\00", [23 x i8] zeroinitializer }, align 32
@.str.517 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"compress=%s\00", [20 x i8] zeroinitializer }, align 32
@.str.518 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"compress-force\00", [17 x i8] zeroinitializer }, align 32
@.str.519 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"compress-force=%s\00", [46 x i8] zeroinitializer }, align 32
@.str.520 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"degraded\00", [23 x i8] zeroinitializer }, align 32
@.str.521 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"device=%s\00", [22 x i8] zeroinitializer }, align 32
@.str.522 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"fatal_errors=%s\00", [16 x i8] zeroinitializer }, align 32
@.str.523 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"flushoncommit\00", [18 x i8] zeroinitializer }, align 32
@.str.524 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"noflushoncommit\00", [16 x i8] zeroinitializer }, align 32
@.str.525 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"inode_cache\00", [20 x i8] zeroinitializer }, align 32
@.str.526 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"noinode_cache\00", [18 x i8] zeroinitializer }, align 32
@.str.527 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"max_inline=%s\00", [18 x i8] zeroinitializer }, align 32
@.str.528 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"barrier\00", [24 x i8] zeroinitializer }, align 32
@.str.529 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"nobarrier\00", [22 x i8] zeroinitializer }, align 32
@.str.530 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"datacow\00", [24 x i8] zeroinitializer }, align 32
@.str.531 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"nodatacow\00", [22 x i8] zeroinitializer }, align 32
@.str.532 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"datasum\00", [24 x i8] zeroinitializer }, align 32
@.str.533 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"nodatasum\00", [22 x i8] zeroinitializer }, align 32
@.str.534 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"autodefrag\00", [21 x i8] zeroinitializer }, align 32
@.str.535 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"noautodefrag\00", [19 x i8] zeroinitializer }, align 32
@.str.536 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"discard\00", [24 x i8] zeroinitializer }, align 32
@.str.537 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"discard=%s\00", [21 x i8] zeroinitializer }, align 32
@.str.538 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"nodiscard\00", [22 x i8] zeroinitializer }, align 32
@.str.539 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"norecovery\00", [21 x i8] zeroinitializer }, align 32
@.str.540 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"metadata_ratio=%u\00", [46 x i8] zeroinitializer }, align 32
@.str.541 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"rescan_uuid_tree\00", [47 x i8] zeroinitializer }, align 32
@.str.542 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"skip_balance\00", [19 x i8] zeroinitializer }, align 32
@.str.543 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"space_cache\00", [20 x i8] zeroinitializer }, align 32
@.str.544 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"nospace_cache\00", [18 x i8] zeroinitializer }, align 32
@.str.545 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"space_cache=%s\00", [17 x i8] zeroinitializer }, align 32
@.str.546 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ssd\00", [28 x i8] zeroinitializer }, align 32
@.str.547 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"nossd\00", [26 x i8] zeroinitializer }, align 32
@.str.548 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"ssd_spread\00", [21 x i8] zeroinitializer }, align 32
@.str.549 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"nossd_spread\00", [19 x i8] zeroinitializer }, align 32
@.str.550 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"subvol=%s\00", [22 x i8] zeroinitializer }, align 32
@.str.551 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"subvol=\00", [24 x i8] zeroinitializer }, align 32
@.str.552 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"subvolid=%s\00", [20 x i8] zeroinitializer }, align 32
@.str.553 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"thread_pool=%u\00", [17 x i8] zeroinitializer }, align 32
@.str.554 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"treelog\00", [24 x i8] zeroinitializer }, align 32
@.str.555 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"notreelog\00", [22 x i8] zeroinitializer }, align 32
@.str.556 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"user_subvol_rm_allowed\00", [41 x i8] zeroinitializer }, align 32
@.str.557 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"rescue=%s\00", [22 x i8] zeroinitializer }, align 32
@.str.558 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"check_int\00", [22 x i8] zeroinitializer }, align 32
@.str.559 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"check_int_data\00", [17 x i8] zeroinitializer }, align 32
@.str.560 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"check_int_print_mask=%u\00", [40 x i8] zeroinitializer }, align 32
@.str.561 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"enospc_debug\00", [19 x i8] zeroinitializer }, align 32
@.str.562 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"noenospc_debug\00", [17 x i8] zeroinitializer }, align 32
@.str.563 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"fragment=data\00", [18 x i8] zeroinitializer }, align 32
@.str.564 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"fragment=metadata\00", [46 x i8] zeroinitializer }, align 32
@.str.565 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"fragment=all\00", [19 x i8] zeroinitializer }, align 32
@.str.566 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"ref_verify\00", [21 x i8] zeroinitializer }, align 32
@.str.567 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\016setting incompat feature flag for %s (0x%llx)\00", [48 x i8] zeroinitializer }, align 32
@.str.568 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c":\00", [30 x i8] zeroinitializer }, align 32
@rescue_tokens = internal constant { [8 x %struct.match_token], [32 x i8] } { [8 x %struct.match_token] [%struct.match_token { i32 44, ptr @.str.134 }, %struct.match_token { i32 45, ptr @.str.148 }, %struct.match_token { i32 46, ptr @.str.149 }, %struct.match_token { i32 46, ptr @.str.573 }, %struct.match_token { i32 47, ptr @.str.150 }, %struct.match_token { i32 47, ptr @.str.574 }, %struct.match_token { i32 48, ptr @.str.575 }, %struct.match_token { i32 61, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.569 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"\016ignoring bad roots\00", [43 x i8] zeroinitializer }, align 32
@.str.570 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"\016ignoring data csums\00", [42 x i8] zeroinitializer }, align 32
@.str.571 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\016enabling all of the rescue options\00", [59 x i8] zeroinitializer }, align 32
@.str.572 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\016unrecognized rescue option '%s'\00", [62 x i8] zeroinitializer }, align 32
@.str.573 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ibadroots\00", [22 x i8] zeroinitializer }, align 32
@.str.574 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"idatacsums\00", [21 x i8] zeroinitializer }, align 32
@.str.575 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"all\00", [28 x i8] zeroinitializer }, align 32
@.str.576 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\013%s must be used with ro mount option\00", [57 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@.str.577 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"include/trace/events/btrfs.h\00", [35 x i8] zeroinitializer }, align 32
@trace_btrfs_sync_fs.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.578 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.579 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@rcu_sync_is_idle.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.580 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcu_sync.h\00", [39 x i8] zeroinitializer }, align 32
@.str.581 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"suspicious rcu_sync_is_idle() usage\00", [60 x i8] zeroinitializer }, align 32
@btrfs_misc = internal global { %struct.miscdevice, [56 x i8] } { %struct.miscdevice { i32 234, ptr @.str.582, ptr @btrfs_ctl_fops, %struct.list_head zeroinitializer, ptr null, ptr null, ptr null, ptr null, i16 0 }, [56 x i8] zeroinitializer }, align 32
@.str.582 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"btrfs-control\00", [18 x i8] zeroinitializer }, align 32
@btrfs_ctl_fops = internal constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr @noop_llseek, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @btrfs_control_ioctl, ptr null, ptr null, i32 0, ptr @btrfs_control_open, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@uuid_mutex = external dso_local global %struct.mutex, align 4
@btrfs_root_fs_type = internal global { %struct.file_system_type, [44 x i8] } { %struct.file_system_type { ptr @.str.583, i32 35, ptr null, ptr null, ptr @btrfs_mount_root, ptr @btrfs_kill_super, ptr null, ptr null, %struct.hlist_head zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, [3 x %struct.lock_class_key] zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer }, [44 x i8] zeroinitializer }, align 32
@.str.583 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"btrfs\00", [26 x i8] zeroinitializer }, align 32
@.str.584 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%pg\00", [28 x i8] zeroinitializer }, align 32
@.str.585 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"generic\00", [24 x i8] zeroinitializer }, align 32
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@btrfs_super_ops = internal constant { %struct.super_operations, [60 x i8] } { %struct.super_operations { ptr @btrfs_alloc_inode, ptr @btrfs_destroy_inode, ptr @btrfs_free_inode, ptr null, ptr null, ptr @btrfs_drop_inode, ptr @btrfs_evict_inode, ptr @btrfs_put_super, ptr @btrfs_sync_fs, ptr null, ptr @btrfs_freeze, ptr null, ptr @btrfs_unfreeze, ptr @btrfs_statfs, ptr @btrfs_remount, ptr null, ptr @btrfs_show_options, ptr @btrfs_show_devname, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [60 x i8] zeroinitializer }, align 32
@btrfs_dentry_operations = external dso_local constant %struct.dentry_operations, align 128
@btrfs_export_ops = external dso_local constant %struct.export_operations, align 4
@btrfs_verityops = external dso_local constant %struct.fsverity_operations, align 1
@btrfs_xattr_handlers = external dso_local global [0 x ptr], align 4
@.str.586 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"\013super_setup_bdi failed\00", [39 x i8] zeroinitializer }, align 32
@.str.587 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"\013open_ctree failed\00", [44 x i8] zeroinitializer }, align 32
@btrfs_raid_array = external dso_local local_unnamed_addr constant [9 x %struct.btrfs_raid_attr], align 8
@.str.588 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"nr_devices\00", [21 x i8] zeroinitializer }, align 32
@btrfs_calc_avail_data_space.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.589 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RCU-list traversed in non-reader section!\00", [54 x i8] zeroinitializer }, align 32
@assertfail._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.590, ptr @.str.591, ptr @.str.592, i32 3491, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.590 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\013assertion failed: %s, in %s:%d\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.591 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"assertfail\00", [21 x i8] zeroinitializer }, align 32
@.str.592 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"fs/btrfs/ctree.h\00", [47 x i8] zeroinitializer }, align 32
@assertfail._entry_ptr = internal global ptr @assertfail._entry, section ".printk_index", align 4
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.593 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.594 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.595 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@.str.596 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\014remount supports changing free space tree only from ro to rw\00", [33 x i8] zeroinitializer }, align 32
@.str.597 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\013Remounting read-write after error is not allowed\00", [45 x i8] zeroinitializer }, align 32
@.str.598 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\014too many missing devices, writable remount is not allowed\00", [36 x i8] zeroinitializer }, align 32
@.str.599 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\014mount required to replay tree-log, cannot remount read-write\00", [33 x i8] zeroinitializer }, align 32
@.str.600 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"\016resize thread pool %d -> %d\00", [34 x i8] zeroinitializer }, align 32
@.str.601 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/wait_bit.h\00", [39 x i8] zeroinitializer }, align 32
@.str.602 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c",degraded\00", [22 x i8] zeroinitializer }, align 32
@.str.603 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c",nodatasum\00", [21 x i8] zeroinitializer }, align 32
@.str.604 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c",nodatacow\00", [21 x i8] zeroinitializer }, align 32
@.str.605 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c",nobarrier\00", [21 x i8] zeroinitializer }, align 32
@.str.606 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c",max_inline=%llu\00", [47 x i8] zeroinitializer }, align 32
@.str.607 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c",thread_pool=%u\00", [16 x i8] zeroinitializer }, align 32
@.str.608 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c",compress-force=%s\00", [45 x i8] zeroinitializer }, align 32
@.str.609 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c",compress=%s\00", [19 x i8] zeroinitializer }, align 32
@.str.610 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c":%d\00", [28 x i8] zeroinitializer }, align 32
@.str.611 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c",nossd\00", [25 x i8] zeroinitializer }, align 32
@.str.612 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c",ssd_spread\00", [20 x i8] zeroinitializer }, align 32
@.str.613 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c",ssd\00", [27 x i8] zeroinitializer }, align 32
@.str.614 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c",notreelog\00", [21 x i8] zeroinitializer }, align 32
@.str.615 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c",flushoncommit\00", [17 x i8] zeroinitializer }, align 32
@.str.616 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c",discard\00", [23 x i8] zeroinitializer }, align 32
@.str.617 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c",discard=async\00", [17 x i8] zeroinitializer }, align 32
@.str.618 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c",noacl\00", [25 x i8] zeroinitializer }, align 32
@.str.619 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c",space_cache\00", [19 x i8] zeroinitializer }, align 32
@.str.620 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c",space_cache=v2\00", [16 x i8] zeroinitializer }, align 32
@.str.621 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c",nospace_cache\00", [17 x i8] zeroinitializer }, align 32
@.str.622 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c",rescan_uuid_tree\00", [46 x i8] zeroinitializer }, align 32
@.str.623 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c",clear_cache\00", [19 x i8] zeroinitializer }, align 32
@.str.624 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c",user_subvol_rm_allowed\00", [40 x i8] zeroinitializer }, align 32
@.str.625 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c",enospc_debug\00", [18 x i8] zeroinitializer }, align 32
@.str.626 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c",autodefrag\00", [20 x i8] zeroinitializer }, align 32
@.str.627 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c",skip_balance\00", [18 x i8] zeroinitializer }, align 32
@.str.628 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c",check_int_data\00", [16 x i8] zeroinitializer }, align 32
@.str.629 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c",check_int\00", [21 x i8] zeroinitializer }, align 32
@.str.630 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c",check_int_print_mask=%d\00", [39 x i8] zeroinitializer }, align 32
@.str.631 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c",metadata_ratio=%u\00", [45 x i8] zeroinitializer }, align 32
@.str.632 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c",fatal_errors=panic\00", [44 x i8] zeroinitializer }, align 32
@.str.633 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c",commit=%u\00", [21 x i8] zeroinitializer }, align 32
@.str.634 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c",fragment=data\00", [17 x i8] zeroinitializer }, align 32
@.str.635 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c",fragment=metadata\00", [45 x i8] zeroinitializer }, align 32
@.str.636 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c",ref_verify\00", [20 x i8] zeroinitializer }, align 32
@.str.637 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c",subvolid=%llu\00", [17 x i8] zeroinitializer }, align 32
@.str.638 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c",subvol=\00", [23 x i8] zeroinitializer }, align 32
@.str.639 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c" \09\0A\\\00", [27 x i8] zeroinitializer }, align 32
@__num_online_cpus = external dso_local global %struct.atomic_t, align 4
@.str.640 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"%s%s\00", [27 x i8] zeroinitializer }, align 32
@.str.641 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c",rescue=\00", [23 x i8] zeroinitializer }, align 32
@btrfs_show_devname.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.642 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\013'%s' is not a valid subvolume\00", [32 x i8] zeroinitializer }, align 32
@.str.643 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\013subvol '%s' does not match subvolid %llu\00", [53 x i8] zeroinitializer }, align 32
@.str.644 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"default\00", [24 x i8] zeroinitializer }, align 32
@btrfs_print_mod_info.options = internal constant { [84 x i8], [44 x i8] } { [84 x i8] c", debug=on, assert=on, integrity-checker=on, ref-verify=on, zoned=yes, fsverity=yes\00", [44 x i8] zeroinitializer }, align 32
@btrfs_print_mod_info._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.645, ptr @.str.646, ptr @.str.65, i32 2545, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.645 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\016Btrfs loaded, crc32c=%s%s\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.646 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"btrfs_print_mod_info\00", [43 x i8] zeroinitializer }, align 32
@btrfs_print_mod_info._entry_ptr = internal global ptr @btrfs_print_mod_info._entry, section ".printk_index", align 4
@__sancov_gen_cov_switch_values = internal global [11 x i64] [i64 9, i64 32, i64 4294967174, i64 4294967179, i64 4294967201, i64 4294967266, i64 4294967268, i64 4294967279, i64 4294967284, i64 4294967291, i64 4294967294]
@__sancov_gen_cov_switch_values.647 = internal global [11 x i64] [i64 9, i64 8, i64 48, i64 49, i64 50, i64 51, i64 52, i64 53, i64 54, i64 55, i64 99]
@__sancov_gen_cov_switch_values.648 = internal global [11 x i64] [i64 9, i64 8, i64 48, i64 49, i64 50, i64 51, i64 52, i64 53, i64 54, i64 55, i64 99]
@__sancov_gen_cov_switch_values.649 = internal global [57 x i64] [i64 55, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 16, i64 17, i64 18, i64 19, i64 20, i64 21, i64 22, i64 23, i64 24, i64 25, i64 26, i64 27, i64 28, i64 29, i64 30, i64 31, i64 32, i64 33, i64 34, i64 35, i64 39, i64 40, i64 41, i64 42, i64 43, i64 44, i64 45, i64 49, i64 50, i64 51, i64 52, i64 53, i64 54, i64 55, i64 56, i64 57, i64 58, i64 59, i64 60, i64 61]
@__sancov_gen_cov_switch_values.650 = internal global [8 x i64] [i64 6, i64 32, i64 44, i64 45, i64 46, i64 47, i64 48, i64 61]
@__sancov_gen_cov_switch_values.651 = internal global [6 x i64] [i64 4, i64 32, i64 1342215172, i64 1342215173, i64 2152240185, i64 2415957031]
@__sancov_gen_cov_switch_values.652 = internal global [4 x i64] [i64 2, i64 32, i64 36, i64 38]
@___asan_gen_.653 = private unnamed_addr constant [30 x i8] c"str__btrfs__trace_system_name\00", align 1
@___asan_gen_.654 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.655 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 36, i32 1 }
@___asan_gen_.682 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.717, i32 274, i32 1 }
@___asan_gen_.691 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.717, i32 275, i32 1 }
@___asan_gen_.703 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.717, i32 277, i32 1 }
@___asan_gen_.717 = private unnamed_addr constant [34 x i8] c"../include/trace/events/mmflags.h\00", align 1
@___asan_gen_.718 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.717, i32 278, i32 1 }
@___asan_gen_.730 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 115, i32 1 }
@___asan_gen_.739 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 116, i32 1 }
@___asan_gen_.748 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 117, i32 1 }
@___asan_gen_.781 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 118, i32 1 }
@___asan_gen_.814 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 119, i32 1 }
@___asan_gen_.815 = private unnamed_addr constant [44 x i8] c"trace_event_fields_btrfs_transaction_commit\00", align 1
@___asan_gen_.818 = private unnamed_addr constant [48 x i8] c"trace_event_type_funcs_btrfs_transaction_commit\00", align 1
@___asan_gen_.821 = private unnamed_addr constant [35 x i8] c"print_fmt_btrfs_transaction_commit\00", align 1
@___asan_gen_.824 = private unnamed_addr constant [31 x i8] c"event_btrfs_transaction_commit\00", align 1
@___asan_gen_.827 = private unnamed_addr constant [32 x i8] c"trace_event_fields_btrfs__inode\00", align 1
@___asan_gen_.830 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_btrfs__inode\00", align 1
@___asan_gen_.833 = private unnamed_addr constant [23 x i8] c"print_fmt_btrfs__inode\00", align 1
@___asan_gen_.836 = private unnamed_addr constant [22 x i8] c"event_btrfs_inode_new\00", align 1
@___asan_gen_.838 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 242, i32 1 }
@___asan_gen_.839 = private unnamed_addr constant [26 x i8] c"event_btrfs_inode_request\00", align 1
@___asan_gen_.841 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 249, i32 1 }
@___asan_gen_.842 = private unnamed_addr constant [24 x i8] c"event_btrfs_inode_evict\00", align 1
@___asan_gen_.844 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 256, i32 1 }
@___asan_gen_.845 = private unnamed_addr constant [36 x i8] c"trace_event_fields_btrfs_get_extent\00", align 1
@___asan_gen_.848 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_btrfs_get_extent\00", align 1
@___asan_gen_.851 = private unnamed_addr constant [27 x i8] c"print_fmt_btrfs_get_extent\00", align 1
@___asan_gen_.854 = private unnamed_addr constant [23 x i8] c"event_btrfs_get_extent\00", align 1
@___asan_gen_.857 = private unnamed_addr constant [41 x i8] c"trace_event_fields_btrfs_handle_em_exist\00", align 1
@___asan_gen_.860 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_btrfs_handle_em_exist\00", align 1
@___asan_gen_.863 = private unnamed_addr constant [32 x i8] c"print_fmt_btrfs_handle_em_exist\00", align 1
@___asan_gen_.866 = private unnamed_addr constant [28 x i8] c"event_btrfs_handle_em_exist\00", align 1
@___asan_gen_.869 = private unnamed_addr constant [51 x i8] c"trace_event_fields_btrfs__file_extent_item_regular\00", align 1
@___asan_gen_.872 = private unnamed_addr constant [50 x i8] c"trace_event_fields_btrfs__file_extent_item_inline\00", align 1
@___asan_gen_.875 = private unnamed_addr constant [55 x i8] c"trace_event_type_funcs_btrfs__file_extent_item_regular\00", align 1
@___asan_gen_.878 = private unnamed_addr constant [42 x i8] c"print_fmt_btrfs__file_extent_item_regular\00", align 1
@___asan_gen_.881 = private unnamed_addr constant [39 x i8] c"event_btrfs_get_extent_show_fi_regular\00", align 1
@___asan_gen_.883 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 465, i32 1 }
@___asan_gen_.884 = private unnamed_addr constant [37 x i8] c"event_btrfs_truncate_show_fi_regular\00", align 1
@___asan_gen_.886 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 474, i32 1 }
@___asan_gen_.887 = private unnamed_addr constant [54 x i8] c"trace_event_type_funcs_btrfs__file_extent_item_inline\00", align 1
@___asan_gen_.890 = private unnamed_addr constant [41 x i8] c"print_fmt_btrfs__file_extent_item_inline\00", align 1
@___asan_gen_.893 = private unnamed_addr constant [38 x i8] c"event_btrfs_get_extent_show_fi_inline\00", align 1
@___asan_gen_.895 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 483, i32 1 }
@___asan_gen_.896 = private unnamed_addr constant [36 x i8] c"event_btrfs_truncate_show_fi_inline\00", align 1
@___asan_gen_.898 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 492, i32 1 }
@___asan_gen_.899 = private unnamed_addr constant [41 x i8] c"trace_event_fields_btrfs__ordered_extent\00", align 1
@___asan_gen_.902 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_btrfs__ordered_extent\00", align 1
@___asan_gen_.905 = private unnamed_addr constant [32 x i8] c"print_fmt_btrfs__ordered_extent\00", align 1
@___asan_gen_.908 = private unnamed_addr constant [31 x i8] c"event_btrfs_ordered_extent_add\00", align 1
@___asan_gen_.910 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 566, i32 1 }
@___asan_gen_.911 = private unnamed_addr constant [34 x i8] c"event_btrfs_ordered_extent_remove\00", align 1
@___asan_gen_.913 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 574, i32 1 }
@___asan_gen_.914 = private unnamed_addr constant [33 x i8] c"event_btrfs_ordered_extent_start\00", align 1
@___asan_gen_.916 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 582, i32 1 }
@___asan_gen_.917 = private unnamed_addr constant [31 x i8] c"event_btrfs_ordered_extent_put\00", align 1
@___asan_gen_.919 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 590, i32 1 }
@___asan_gen_.920 = private unnamed_addr constant [36 x i8] c"trace_event_fields_btrfs__writepage\00", align 1
@___asan_gen_.923 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_btrfs__writepage\00", align 1
@___asan_gen_.926 = private unnamed_addr constant [27 x i8] c"print_fmt_btrfs__writepage\00", align 1
@___asan_gen_.929 = private unnamed_addr constant [25 x i8] c"event___extent_writepage\00", align 1
@___asan_gen_.931 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 647, i32 1 }
@___asan_gen_.932 = private unnamed_addr constant [47 x i8] c"trace_event_fields_btrfs_writepage_end_io_hook\00", align 1
@___asan_gen_.935 = private unnamed_addr constant [51 x i8] c"trace_event_type_funcs_btrfs_writepage_end_io_hook\00", align 1
@___asan_gen_.938 = private unnamed_addr constant [38 x i8] c"print_fmt_btrfs_writepage_end_io_hook\00", align 1
@___asan_gen_.941 = private unnamed_addr constant [34 x i8] c"event_btrfs_writepage_end_io_hook\00", align 1
@___asan_gen_.944 = private unnamed_addr constant [35 x i8] c"trace_event_fields_btrfs_sync_file\00", align 1
@___asan_gen_.947 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_btrfs_sync_file\00", align 1
@___asan_gen_.950 = private unnamed_addr constant [26 x i8] c"print_fmt_btrfs_sync_file\00", align 1
@___asan_gen_.953 = private unnamed_addr constant [22 x i8] c"event_btrfs_sync_file\00", align 1
@___asan_gen_.956 = private unnamed_addr constant [33 x i8] c"trace_event_fields_btrfs_sync_fs\00", align 1
@___asan_gen_.959 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_btrfs_sync_fs\00", align 1
@___asan_gen_.962 = private unnamed_addr constant [24 x i8] c"print_fmt_btrfs_sync_fs\00", align 1
@___asan_gen_.965 = private unnamed_addr constant [20 x i8] c"event_btrfs_sync_fs\00", align 1
@___asan_gen_.968 = private unnamed_addr constant [41 x i8] c"trace_event_fields_btrfs_add_block_group\00", align 1
@___asan_gen_.971 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_btrfs_add_block_group\00", align 1
@___asan_gen_.974 = private unnamed_addr constant [32 x i8] c"print_fmt_btrfs_add_block_group\00", align 1
@___asan_gen_.977 = private unnamed_addr constant [28 x i8] c"event_btrfs_add_block_group\00", align 1
@___asan_gen_.980 = private unnamed_addr constant [42 x i8] c"trace_event_fields_btrfs_delayed_tree_ref\00", align 1
@___asan_gen_.983 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_btrfs_delayed_tree_ref\00", align 1
@___asan_gen_.986 = private unnamed_addr constant [33 x i8] c"print_fmt_btrfs_delayed_tree_ref\00", align 1
@___asan_gen_.989 = private unnamed_addr constant [27 x i8] c"event_add_delayed_tree_ref\00", align 1
@___asan_gen_.991 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 821, i32 1 }
@___asan_gen_.992 = private unnamed_addr constant [27 x i8] c"event_run_delayed_tree_ref\00", align 1
@___asan_gen_.994 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 831, i32 1 }
@___asan_gen_.995 = private unnamed_addr constant [42 x i8] c"trace_event_fields_btrfs_delayed_data_ref\00", align 1
@___asan_gen_.998 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_btrfs_delayed_data_ref\00", align 1
@___asan_gen_.1001 = private unnamed_addr constant [33 x i8] c"print_fmt_btrfs_delayed_data_ref\00", align 1
@___asan_gen_.1004 = private unnamed_addr constant [27 x i8] c"event_add_delayed_data_ref\00", align 1
@___asan_gen_.1006 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 888, i32 1 }
@___asan_gen_.1007 = private unnamed_addr constant [27 x i8] c"event_run_delayed_data_ref\00", align 1
@___asan_gen_.1009 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 898, i32 1 }
@___asan_gen_.1010 = private unnamed_addr constant [42 x i8] c"trace_event_fields_btrfs_delayed_ref_head\00", align 1
@___asan_gen_.1013 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_btrfs_delayed_ref_head\00", align 1
@___asan_gen_.1016 = private unnamed_addr constant [33 x i8] c"print_fmt_btrfs_delayed_ref_head\00", align 1
@___asan_gen_.1019 = private unnamed_addr constant [27 x i8] c"event_add_delayed_ref_head\00", align 1
@___asan_gen_.1021 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 937, i32 1 }
@___asan_gen_.1022 = private unnamed_addr constant [27 x i8] c"event_run_delayed_ref_head\00", align 1
@___asan_gen_.1024 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 946, i32 1 }
@___asan_gen_.1025 = private unnamed_addr constant [32 x i8] c"trace_event_fields_btrfs__chunk\00", align 1
@___asan_gen_.1028 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_btrfs__chunk\00", align 1
@___asan_gen_.1031 = private unnamed_addr constant [23 x i8] c"print_fmt_btrfs__chunk\00", align 1
@___asan_gen_.1034 = private unnamed_addr constant [24 x i8] c"event_btrfs_chunk_alloc\00", align 1
@___asan_gen_.1036 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1001, i32 1 }
@___asan_gen_.1037 = private unnamed_addr constant [23 x i8] c"event_btrfs_chunk_free\00", align 1
@___asan_gen_.1039 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1009, i32 1 }
@___asan_gen_.1040 = private unnamed_addr constant [35 x i8] c"trace_event_fields_btrfs_cow_block\00", align 1
@___asan_gen_.1043 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_btrfs_cow_block\00", align 1
@___asan_gen_.1046 = private unnamed_addr constant [26 x i8] c"print_fmt_btrfs_cow_block\00", align 1
@___asan_gen_.1049 = private unnamed_addr constant [22 x i8] c"event_btrfs_cow_block\00", align 1
@___asan_gen_.1052 = private unnamed_addr constant [43 x i8] c"trace_event_fields_btrfs_space_reservation\00", align 1
@___asan_gen_.1055 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_btrfs_space_reservation\00", align 1
@___asan_gen_.1058 = private unnamed_addr constant [34 x i8] c"print_fmt_btrfs_space_reservation\00", align 1
@___asan_gen_.1061 = private unnamed_addr constant [30 x i8] c"event_btrfs_space_reservation\00", align 1
@___asan_gen_.1064 = private unnamed_addr constant [39 x i8] c"trace_event_fields_btrfs_trigger_flush\00", align 1
@___asan_gen_.1067 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_btrfs_trigger_flush\00", align 1
@___asan_gen_.1070 = private unnamed_addr constant [30 x i8] c"print_fmt_btrfs_trigger_flush\00", align 1
@___asan_gen_.1073 = private unnamed_addr constant [26 x i8] c"event_btrfs_trigger_flush\00", align 1
@___asan_gen_.1076 = private unnamed_addr constant [37 x i8] c"trace_event_fields_btrfs_flush_space\00", align 1
@___asan_gen_.1079 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_btrfs_flush_space\00", align 1
@___asan_gen_.1082 = private unnamed_addr constant [28 x i8] c"print_fmt_btrfs_flush_space\00", align 1
@___asan_gen_.1085 = private unnamed_addr constant [24 x i8] c"event_btrfs_flush_space\00", align 1
@___asan_gen_.1088 = private unnamed_addr constant [42 x i8] c"trace_event_fields_btrfs__reserved_extent\00", align 1
@___asan_gen_.1091 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_btrfs__reserved_extent\00", align 1
@___asan_gen_.1094 = private unnamed_addr constant [33 x i8] c"print_fmt_btrfs__reserved_extent\00", align 1
@___asan_gen_.1097 = private unnamed_addr constant [34 x i8] c"event_btrfs_reserved_extent_alloc\00", align 1
@___asan_gen_.1099 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1163, i32 1 }
@___asan_gen_.1100 = private unnamed_addr constant [33 x i8] c"event_btrfs_reserved_extent_free\00", align 1
@___asan_gen_.1102 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1170, i32 1 }
@___asan_gen_.1103 = private unnamed_addr constant [36 x i8] c"trace_event_fields_find_free_extent\00", align 1
@___asan_gen_.1106 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_find_free_extent\00", align 1
@___asan_gen_.1109 = private unnamed_addr constant [27 x i8] c"print_fmt_find_free_extent\00", align 1
@___asan_gen_.1112 = private unnamed_addr constant [23 x i8] c"event_find_free_extent\00", align 1
@___asan_gen_.1115 = private unnamed_addr constant [41 x i8] c"trace_event_fields_btrfs__reserve_extent\00", align 1
@___asan_gen_.1118 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_btrfs__reserve_extent\00", align 1
@___asan_gen_.1121 = private unnamed_addr constant [32 x i8] c"print_fmt_btrfs__reserve_extent\00", align 1
@___asan_gen_.1124 = private unnamed_addr constant [27 x i8] c"event_btrfs_reserve_extent\00", align 1
@___asan_gen_.1126 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1235, i32 1 }
@___asan_gen_.1127 = private unnamed_addr constant [35 x i8] c"event_btrfs_reserve_extent_cluster\00", align 1
@___asan_gen_.1129 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1243, i32 1 }
@___asan_gen_.1130 = private unnamed_addr constant [38 x i8] c"trace_event_fields_btrfs_find_cluster\00", align 1
@___asan_gen_.1133 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_btrfs_find_cluster\00", align 1
@___asan_gen_.1136 = private unnamed_addr constant [29 x i8] c"print_fmt_btrfs_find_cluster\00", align 1
@___asan_gen_.1139 = private unnamed_addr constant [25 x i8] c"event_btrfs_find_cluster\00", align 1
@___asan_gen_.1142 = private unnamed_addr constant [46 x i8] c"trace_event_fields_btrfs_failed_cluster_setup\00", align 1
@___asan_gen_.1145 = private unnamed_addr constant [50 x i8] c"trace_event_type_funcs_btrfs_failed_cluster_setup\00", align 1
@___asan_gen_.1148 = private unnamed_addr constant [37 x i8] c"print_fmt_btrfs_failed_cluster_setup\00", align 1
@___asan_gen_.1151 = private unnamed_addr constant [33 x i8] c"event_btrfs_failed_cluster_setup\00", align 1
@___asan_gen_.1154 = private unnamed_addr constant [39 x i8] c"trace_event_fields_btrfs_setup_cluster\00", align 1
@___asan_gen_.1157 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_btrfs_setup_cluster\00", align 1
@___asan_gen_.1160 = private unnamed_addr constant [30 x i8] c"print_fmt_btrfs_setup_cluster\00", align 1
@___asan_gen_.1163 = private unnamed_addr constant [26 x i8] c"event_btrfs_setup_cluster\00", align 1
@___asan_gen_.1166 = private unnamed_addr constant [38 x i8] c"trace_event_fields_alloc_extent_state\00", align 1
@___asan_gen_.1169 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_alloc_extent_state\00", align 1
@___asan_gen_.1172 = private unnamed_addr constant [29 x i8] c"print_fmt_alloc_extent_state\00", align 1
@___asan_gen_.1175 = private unnamed_addr constant [25 x i8] c"event_alloc_extent_state\00", align 1
@___asan_gen_.1178 = private unnamed_addr constant [37 x i8] c"trace_event_fields_free_extent_state\00", align 1
@___asan_gen_.1181 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_free_extent_state\00", align 1
@___asan_gen_.1184 = private unnamed_addr constant [28 x i8] c"print_fmt_free_extent_state\00", align 1
@___asan_gen_.1187 = private unnamed_addr constant [24 x i8] c"event_free_extent_state\00", align 1
@___asan_gen_.1190 = private unnamed_addr constant [31 x i8] c"trace_event_fields_btrfs__work\00", align 1
@___asan_gen_.1193 = private unnamed_addr constant [37 x i8] c"trace_event_fields_btrfs__work__done\00", align 1
@___asan_gen_.1196 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_btrfs__work\00", align 1
@___asan_gen_.1199 = private unnamed_addr constant [22 x i8] c"print_fmt_btrfs__work\00", align 1
@___asan_gen_.1202 = private unnamed_addr constant [24 x i8] c"event_btrfs_work_queued\00", align 1
@___asan_gen_.1204 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1431, i32 1 }
@___asan_gen_.1205 = private unnamed_addr constant [23 x i8] c"event_btrfs_work_sched\00", align 1
@___asan_gen_.1207 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1438, i32 1 }
@___asan_gen_.1208 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_btrfs__work__done\00", align 1
@___asan_gen_.1211 = private unnamed_addr constant [28 x i8] c"print_fmt_btrfs__work__done\00", align 1
@___asan_gen_.1214 = private unnamed_addr constant [26 x i8] c"event_btrfs_all_work_done\00", align 1
@___asan_gen_.1216 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1445, i32 1 }
@___asan_gen_.1217 = private unnamed_addr constant [26 x i8] c"event_btrfs_ordered_sched\00", align 1
@___asan_gen_.1219 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1452, i32 1 }
@___asan_gen_.1220 = private unnamed_addr constant [36 x i8] c"trace_event_fields_btrfs__workqueue\00", align 1
@___asan_gen_.1223 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_btrfs__workqueue\00", align 1
@___asan_gen_.1226 = private unnamed_addr constant [27 x i8] c"print_fmt_btrfs__workqueue\00", align 1
@___asan_gen_.1229 = private unnamed_addr constant [28 x i8] c"event_btrfs_workqueue_alloc\00", align 1
@___asan_gen_.1231 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1484, i32 1 }
@___asan_gen_.1232 = private unnamed_addr constant [41 x i8] c"trace_event_fields_btrfs__workqueue_done\00", align 1
@___asan_gen_.1235 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_btrfs__workqueue_done\00", align 1
@___asan_gen_.1238 = private unnamed_addr constant [32 x i8] c"print_fmt_btrfs__workqueue_done\00", align 1
@___asan_gen_.1241 = private unnamed_addr constant [30 x i8] c"event_btrfs_workqueue_destroy\00", align 1
@___asan_gen_.1243 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1509, i32 1 }
@___asan_gen_.1244 = private unnamed_addr constant [42 x i8] c"trace_event_fields_btrfs__qgroup_rsv_data\00", align 1
@___asan_gen_.1247 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_btrfs__qgroup_rsv_data\00", align 1
@___asan_gen_.1250 = private unnamed_addr constant [33 x i8] c"print_fmt_btrfs__qgroup_rsv_data\00", align 1
@___asan_gen_.1253 = private unnamed_addr constant [32 x i8] c"event_btrfs_qgroup_reserve_data\00", align 1
@___asan_gen_.1255 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1555, i32 1 }
@___asan_gen_.1256 = private unnamed_addr constant [32 x i8] c"event_btrfs_qgroup_release_data\00", align 1
@___asan_gen_.1258 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1563, i32 1 }
@___asan_gen_.1259 = private unnamed_addr constant [39 x i8] c"trace_event_fields_btrfs_qgroup_extent\00", align 1
@___asan_gen_.1262 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_btrfs_qgroup_extent\00", align 1
@___asan_gen_.1265 = private unnamed_addr constant [30 x i8] c"print_fmt_btrfs_qgroup_extent\00", align 1
@___asan_gen_.1268 = private unnamed_addr constant [35 x i8] c"event_btrfs_qgroup_account_extents\00", align 1
@___asan_gen_.1270 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1591, i32 1 }
@___asan_gen_.1271 = private unnamed_addr constant [32 x i8] c"event_btrfs_qgroup_trace_extent\00", align 1
@___asan_gen_.1273 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1599, i32 1 }
@___asan_gen_.1274 = private unnamed_addr constant [44 x i8] c"trace_event_fields_qgroup_num_dirty_extents\00", align 1
@___asan_gen_.1277 = private unnamed_addr constant [48 x i8] c"trace_event_type_funcs_qgroup_num_dirty_extents\00", align 1
@___asan_gen_.1280 = private unnamed_addr constant [35 x i8] c"print_fmt_qgroup_num_dirty_extents\00", align 1
@___asan_gen_.1283 = private unnamed_addr constant [31 x i8] c"event_qgroup_num_dirty_extents\00", align 1
@___asan_gen_.1286 = private unnamed_addr constant [47 x i8] c"trace_event_fields_btrfs_qgroup_account_extent\00", align 1
@___asan_gen_.1289 = private unnamed_addr constant [51 x i8] c"trace_event_type_funcs_btrfs_qgroup_account_extent\00", align 1
@___asan_gen_.1292 = private unnamed_addr constant [38 x i8] c"print_fmt_btrfs_qgroup_account_extent\00", align 1
@___asan_gen_.1295 = private unnamed_addr constant [34 x i8] c"event_btrfs_qgroup_account_extent\00", align 1
@___asan_gen_.1298 = private unnamed_addr constant [42 x i8] c"trace_event_fields_qgroup_update_counters\00", align 1
@___asan_gen_.1301 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_qgroup_update_counters\00", align 1
@___asan_gen_.1304 = private unnamed_addr constant [33 x i8] c"print_fmt_qgroup_update_counters\00", align 1
@___asan_gen_.1307 = private unnamed_addr constant [29 x i8] c"event_qgroup_update_counters\00", align 1
@___asan_gen_.1310 = private unnamed_addr constant [41 x i8] c"trace_event_fields_qgroup_update_reserve\00", align 1
@___asan_gen_.1313 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_qgroup_update_reserve\00", align 1
@___asan_gen_.1316 = private unnamed_addr constant [32 x i8] c"print_fmt_qgroup_update_reserve\00", align 1
@___asan_gen_.1319 = private unnamed_addr constant [28 x i8] c"event_qgroup_update_reserve\00", align 1
@___asan_gen_.1322 = private unnamed_addr constant [39 x i8] c"trace_event_fields_qgroup_meta_reserve\00", align 1
@___asan_gen_.1325 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_qgroup_meta_reserve\00", align 1
@___asan_gen_.1328 = private unnamed_addr constant [30 x i8] c"print_fmt_qgroup_meta_reserve\00", align 1
@___asan_gen_.1331 = private unnamed_addr constant [26 x i8] c"event_qgroup_meta_reserve\00", align 1
@___asan_gen_.1334 = private unnamed_addr constant [39 x i8] c"trace_event_fields_qgroup_meta_convert\00", align 1
@___asan_gen_.1337 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_qgroup_meta_convert\00", align 1
@___asan_gen_.1340 = private unnamed_addr constant [30 x i8] c"print_fmt_qgroup_meta_convert\00", align 1
@___asan_gen_.1343 = private unnamed_addr constant [26 x i8] c"event_qgroup_meta_convert\00", align 1
@___asan_gen_.1346 = private unnamed_addr constant [49 x i8] c"trace_event_fields_qgroup_meta_free_all_pertrans\00", align 1
@___asan_gen_.1349 = private unnamed_addr constant [53 x i8] c"trace_event_type_funcs_qgroup_meta_free_all_pertrans\00", align 1
@___asan_gen_.1352 = private unnamed_addr constant [40 x i8] c"print_fmt_qgroup_meta_free_all_pertrans\00", align 1
@___asan_gen_.1355 = private unnamed_addr constant [36 x i8] c"event_qgroup_meta_free_all_pertrans\00", align 1
@___asan_gen_.1358 = private unnamed_addr constant [37 x i8] c"trace_event_fields_btrfs__prelim_ref\00", align 1
@___asan_gen_.1361 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_btrfs__prelim_ref\00", align 1
@___asan_gen_.1364 = private unnamed_addr constant [28 x i8] c"print_fmt_btrfs__prelim_ref\00", align 1
@___asan_gen_.1367 = private unnamed_addr constant [29 x i8] c"event_btrfs_prelim_ref_merge\00", align 1
@___asan_gen_.1369 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1830, i32 1 }
@___asan_gen_.1370 = private unnamed_addr constant [30 x i8] c"event_btrfs_prelim_ref_insert\00", align 1
@___asan_gen_.1372 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1837, i32 1 }
@___asan_gen_.1373 = private unnamed_addr constant [55 x i8] c"trace_event_fields_btrfs_inode_mod_outstanding_extents\00", align 1
@___asan_gen_.1376 = private unnamed_addr constant [59 x i8] c"trace_event_type_funcs_btrfs_inode_mod_outstanding_extents\00", align 1
@___asan_gen_.1379 = private unnamed_addr constant [46 x i8] c"print_fmt_btrfs_inode_mod_outstanding_extents\00", align 1
@___asan_gen_.1382 = private unnamed_addr constant [42 x i8] c"event_btrfs_inode_mod_outstanding_extents\00", align 1
@___asan_gen_.1385 = private unnamed_addr constant [38 x i8] c"trace_event_fields_btrfs__block_group\00", align 1
@___asan_gen_.1388 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_btrfs__block_group\00", align 1
@___asan_gen_.1391 = private unnamed_addr constant [29 x i8] c"print_fmt_btrfs__block_group\00", align 1
@___asan_gen_.1394 = private unnamed_addr constant [31 x i8] c"event_btrfs_remove_block_group\00", align 1
@___asan_gen_.1396 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1890, i32 1 }
@___asan_gen_.1397 = private unnamed_addr constant [35 x i8] c"event_btrfs_add_unused_block_group\00", align 1
@___asan_gen_.1399 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1896, i32 1 }
@___asan_gen_.1400 = private unnamed_addr constant [36 x i8] c"event_btrfs_add_reclaim_block_group\00", align 1
@___asan_gen_.1402 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1902, i32 1 }
@___asan_gen_.1403 = private unnamed_addr constant [32 x i8] c"event_btrfs_reclaim_block_group\00", align 1
@___asan_gen_.1405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1908, i32 1 }
@___asan_gen_.1406 = private unnamed_addr constant [36 x i8] c"event_btrfs_skip_unused_block_group\00", align 1
@___asan_gen_.1408 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1914, i32 1 }
@___asan_gen_.1409 = private unnamed_addr constant [40 x i8] c"trace_event_fields_btrfs_set_extent_bit\00", align 1
@___asan_gen_.1412 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_btrfs_set_extent_bit\00", align 1
@___asan_gen_.1415 = private unnamed_addr constant [31 x i8] c"print_fmt_btrfs_set_extent_bit\00", align 1
@___asan_gen_.1418 = private unnamed_addr constant [27 x i8] c"event_btrfs_set_extent_bit\00", align 1
@___asan_gen_.1421 = private unnamed_addr constant [42 x i8] c"trace_event_fields_btrfs_clear_extent_bit\00", align 1
@___asan_gen_.1424 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_btrfs_clear_extent_bit\00", align 1
@___asan_gen_.1427 = private unnamed_addr constant [33 x i8] c"print_fmt_btrfs_clear_extent_bit\00", align 1
@___asan_gen_.1430 = private unnamed_addr constant [29 x i8] c"event_btrfs_clear_extent_bit\00", align 1
@___asan_gen_.1433 = private unnamed_addr constant [44 x i8] c"trace_event_fields_btrfs_convert_extent_bit\00", align 1
@___asan_gen_.1436 = private unnamed_addr constant [48 x i8] c"trace_event_type_funcs_btrfs_convert_extent_bit\00", align 1
@___asan_gen_.1439 = private unnamed_addr constant [35 x i8] c"print_fmt_btrfs_convert_extent_bit\00", align 1
@___asan_gen_.1442 = private unnamed_addr constant [31 x i8] c"event_btrfs_convert_extent_bit\00", align 1
@___asan_gen_.1445 = private unnamed_addr constant [41 x i8] c"trace_event_fields_btrfs_dump_space_info\00", align 1
@___asan_gen_.1448 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_btrfs_dump_space_info\00", align 1
@___asan_gen_.1451 = private unnamed_addr constant [32 x i8] c"print_fmt_btrfs_dump_space_info\00", align 1
@___asan_gen_.1454 = private unnamed_addr constant [36 x i8] c"event_btrfs_done_preemptive_reclaim\00", align 1
@___asan_gen_.1456 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2102, i32 1 }
@___asan_gen_.1457 = private unnamed_addr constant [29 x i8] c"event_btrfs_fail_all_tickets\00", align 1
@___asan_gen_.1459 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2108, i32 1 }
@___asan_gen_.1460 = private unnamed_addr constant [40 x i8] c"trace_event_fields_btrfs_reserve_ticket\00", align 1
@___asan_gen_.1463 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_btrfs_reserve_ticket\00", align 1
@___asan_gen_.1466 = private unnamed_addr constant [31 x i8] c"print_fmt_btrfs_reserve_ticket\00", align 1
@___asan_gen_.1469 = private unnamed_addr constant [27 x i8] c"event_btrfs_reserve_ticket\00", align 1
@___asan_gen_.1472 = private unnamed_addr constant [41 x i8] c"trace_event_fields_btrfs_sleep_tree_lock\00", align 1
@___asan_gen_.1475 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_btrfs_sleep_tree_lock\00", align 1
@___asan_gen_.1478 = private unnamed_addr constant [32 x i8] c"print_fmt_btrfs_sleep_tree_lock\00", align 1
@___asan_gen_.1481 = private unnamed_addr constant [27 x i8] c"event_btrfs_tree_read_lock\00", align 1
@___asan_gen_.1483 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2175, i32 1 }
@___asan_gen_.1484 = private unnamed_addr constant [22 x i8] c"event_btrfs_tree_lock\00", align 1
@___asan_gen_.1486 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2181, i32 1 }
@___asan_gen_.1487 = private unnamed_addr constant [40 x i8] c"trace_event_fields_btrfs_locking_events\00", align 1
@___asan_gen_.1490 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_btrfs_locking_events\00", align 1
@___asan_gen_.1493 = private unnamed_addr constant [31 x i8] c"print_fmt_btrfs_locking_events\00", align 1
@___asan_gen_.1496 = private unnamed_addr constant [24 x i8] c"event_btrfs_tree_unlock\00", align 1
@___asan_gen_.1498 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2218, i32 1 }
@___asan_gen_.1499 = private unnamed_addr constant [29 x i8] c"event_btrfs_tree_read_unlock\00", align 1
@___asan_gen_.1501 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2219, i32 1 }
@___asan_gen_.1502 = private unnamed_addr constant [38 x i8] c"event_btrfs_tree_read_unlock_blocking\00", align 1
@___asan_gen_.1504 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2220, i32 1 }
@___asan_gen_.1505 = private unnamed_addr constant [35 x i8] c"event_btrfs_set_lock_blocking_read\00", align 1
@___asan_gen_.1507 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2221, i32 1 }
@___asan_gen_.1508 = private unnamed_addr constant [36 x i8] c"event_btrfs_set_lock_blocking_write\00", align 1
@___asan_gen_.1510 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2222, i32 1 }
@___asan_gen_.1511 = private unnamed_addr constant [31 x i8] c"event_btrfs_try_tree_read_lock\00", align 1
@___asan_gen_.1513 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2223, i32 1 }
@___asan_gen_.1514 = private unnamed_addr constant [32 x i8] c"event_btrfs_try_tree_write_lock\00", align 1
@___asan_gen_.1516 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2224, i32 1 }
@___asan_gen_.1517 = private unnamed_addr constant [34 x i8] c"event_btrfs_tree_read_lock_atomic\00", align 1
@___asan_gen_.1519 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2225, i32 1 }
@___asan_gen_.1520 = private unnamed_addr constant [44 x i8] c"trace_event_fields_btrfs__space_info_update\00", align 1
@___asan_gen_.1523 = private unnamed_addr constant [48 x i8] c"trace_event_type_funcs_btrfs__space_info_update\00", align 1
@___asan_gen_.1526 = private unnamed_addr constant [35 x i8] c"print_fmt_btrfs__space_info_update\00", align 1
@___asan_gen_.1529 = private unnamed_addr constant [27 x i8] c"event_update_bytes_may_use\00", align 1
@___asan_gen_.1531 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2250, i32 1 }
@___asan_gen_.1532 = private unnamed_addr constant [26 x i8] c"event_update_bytes_pinned\00", align 1
@___asan_gen_.1534 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2258, i32 1 }
@___asan_gen_.1537 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 86, i32 17 }
@___asan_gen_.1540 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 90, i32 12 }
@___asan_gen_.1543 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 93, i32 12 }
@___asan_gen_.1546 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 96, i32 12 }
@___asan_gen_.1549 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 99, i32 12 }
@___asan_gen_.1552 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 102, i32 12 }
@___asan_gen_.1555 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 105, i32 12 }
@___asan_gen_.1558 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 108, i32 12 }
@___asan_gen_.1561 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 111, i32 12 }
@___asan_gen_.1564 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 114, i32 12 }
@___asan_gen_.1573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 151, i32 3 }
@___asan_gen_.1576 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 155, i32 3 }
@___asan_gen_.1579 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 177, i32 2 }
@___asan_gen_.1580 = private unnamed_addr constant [9 x i8] c"logtypes\00", align 1
@___asan_gen_.1582 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 189, i32 27 }
@___asan_gen_.1583 = private unnamed_addr constant [14 x i8] c"printk_limits\00", align 1
@___asan_gen_.1585 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 205, i32 31 }
@___asan_gen_.1591 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 244, i32 4 }
@___asan_gen_.1597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 247, i32 4 }
@___asan_gen_.1600 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 258, i32 3 }
@___asan_gen_.1603 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 259, i32 3 }
@___asan_gen_.1606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 262, i32 3 }
@___asan_gen_.1609 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 270, i32 3 }
@___asan_gen_.1612 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 271, i32 3 }
@___asan_gen_.1615 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 274, i32 3 }
@___asan_gen_.1618 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 315, i32 15 }
@___asan_gen_.1621 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 328, i32 9 }
@___asan_gen_.1624 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 331, i32 2 }
@___asan_gen_.1627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 581, i32 4 }
@___asan_gen_.1630 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 596, i32 31 }
@___asan_gen_.1631 = private unnamed_addr constant [7 x i8] c"tokens\00", align 1
@___asan_gen_.1633 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 402, i32 28 }
@___asan_gen_.1636 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 604, i32 4 }
@___asan_gen_.1639 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 617, i32 4 }
@___asan_gen_.1642 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 623, i32 6 }
@___asan_gen_.1645 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 626, i32 6 }
@___asan_gen_.1648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 635, i32 6 }
@___asan_gen_.1651 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 638, i32 6 }
@___asan_gen_.1654 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 647, i32 4 }
@___asan_gen_.1657 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 664, i32 30 }
@___asan_gen_.1660 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 684, i32 37 }
@___asan_gen_.1663 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 691, i32 5 }
@___asan_gen_.1666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 693, i32 37 }
@___asan_gen_.1669 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 703, i32 5 }
@___asan_gen_.1672 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 705, i32 37 }
@___asan_gen_.1675 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 730, i32 5 }
@___asan_gen_.1684 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 734, i32 5 }
@___asan_gen_.1687 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 741, i32 4 }
@___asan_gen_.1690 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 748, i32 4 }
@___asan_gen_.1693 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 754, i32 4 }
@___asan_gen_.1696 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 758, i32 4 }
@___asan_gen_.1699 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 762, i32 4 }
@___asan_gen_.1702 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 766, i32 4 }
@___asan_gen_.1705 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 790, i32 5 }
@___asan_gen_.1708 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 810, i32 4 }
@___asan_gen_.1711 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 814, i32 4 }
@___asan_gen_.1714 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 819, i32 4 }
@___asan_gen_.1717 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 821, i32 4 }
@___asan_gen_.1720 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 825, i32 4 }
@___asan_gen_.1723 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 829, i32 4 }
@___asan_gen_.1726 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 837, i32 4 }
@___asan_gen_.1729 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 843, i32 29 }
@___asan_gen_.1732 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 845, i32 5 }
@___asan_gen_.1735 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 847, i32 36 }
@___asan_gen_.1738 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 849, i32 5 }
@___asan_gen_.1741 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 857, i32 4 }
@___asan_gen_.1744 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 859, i32 4 }
@___asan_gen_.1747 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 865, i32 29 }
@___asan_gen_.1750 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 868, i32 5 }
@___asan_gen_.1753 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 870, i32 36 }
@___asan_gen_.1756 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 873, i32 5 }
@___asan_gen_.1759 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 885, i32 5 }
@___asan_gen_.1762 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 889, i32 5 }
@___asan_gen_.1765 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 895, i32 4 }
@___asan_gen_.1768 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 899, i32 4 }
@___asan_gen_.1771 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 912, i32 4 }
@___asan_gen_.1774 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 916, i32 4 }
@___asan_gen_.1783 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 921, i32 4 }
@___asan_gen_.1786 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 925, i32 4 }
@___asan_gen_.1789 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 934, i32 4 }
@___asan_gen_.1792 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 940, i32 4 }
@___asan_gen_.1795 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 948, i32 4 }
@___asan_gen_.1798 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 961, i32 29 }
@___asan_gen_.1801 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 964, i32 34 }
@___asan_gen_.1804 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 978, i32 5 }
@___asan_gen_.1807 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 983, i32 5 }
@___asan_gen_.1810 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 995, i32 4 }
@___asan_gen_.1813 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1000, i32 4 }
@___asan_gen_.1816 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1005, i32 4 }
@___asan_gen_.1819 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1011, i32 4 }
@___asan_gen_.1822 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1016, i32 4 }
@___asan_gen_.1825 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1028, i32 53 }
@___asan_gen_.1828 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1029, i32 56 }
@___asan_gen_.1831 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1030, i32 57 }
@___asan_gen_.1834 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1036, i32 3 }
@___asan_gen_.1837 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1043, i32 3 }
@___asan_gen_.1840 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1045, i32 3 }
@___asan_gen_.1841 = private unnamed_addr constant [14 x i8] c"btrfs_fs_type\00", align 1
@___asan_gen_.1843 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 2349, i32 32 }
@___asan_gen_.1906 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 183, i32 1 }
@___asan_gen_.1927 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 204, i32 1 }
@___asan_gen_.2005 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 282, i32 1 }
@___asan_gen_.2020 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 332, i32 1 }
@___asan_gen_.2074 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 370, i32 1 }
@___asan_gen_.2083 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 424, i32 1 }
@___asan_gen_.2125 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 514, i32 1 }
@___asan_gen_.2164 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 598, i32 1 }
@___asan_gen_.2176 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 655, i32 1 }
@___asan_gen_.2188 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 684, i32 1 }
@___asan_gen_.2242 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 733, i32 1 }
@___asan_gen_.2302 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 778, i32 1 }
@___asan_gen_.2320 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 841, i32 1 }
@___asan_gen_.2329 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 908, i32 1 }
@___asan_gen_.2344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 967, i32 1 }
@___asan_gen_.2362 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1017, i32 1 }
@___asan_gen_.2383 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1052, i32 1 }
@___asan_gen_.2398 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1078, i32 1 }
@___asan_gen_.2422 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1109, i32 1 }
@___asan_gen_.2428 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1141, i32 1 }
@___asan_gen_.2443 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1177, i32 1 }
@___asan_gen_.2455 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1205, i32 1 }
@___asan_gen_.2464 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1251, i32 1 }
@___asan_gen_.2467 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1284, i32 1 }
@___asan_gen_.2479 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1301, i32 1 }
@___asan_gen_.2614 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1337, i32 1 }
@___asan_gen_.2617 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1360, i32 1 }
@___asan_gen_.2644 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1379, i32 1 }
@___asan_gen_.2647 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1414, i32 1 }
@___asan_gen_.2665 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1459, i32 1 }
@___asan_gen_.2668 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1492, i32 1 }
@___asan_gen_.2686 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1521, i32 1 }
@___asan_gen_.2689 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1571, i32 1 }
@___asan_gen_.2698 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1607, i32 1 }
@___asan_gen_.2707 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1628, i32 1 }
@___asan_gen_.2725 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1661, i32 1 }
@___asan_gen_.2746 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1690, i32 1 }
@___asan_gen_.2758 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1716, i32 1 }
@___asan_gen_.2770 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1739, i32 1 }
@___asan_gen_.2776 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1762, i32 1 }
@___asan_gen_.2794 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1787, i32 1 }
@___asan_gen_.2803 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1844, i32 1 }
@___asan_gen_.2812 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1866, i32 1 }
@___asan_gen_.2902 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1920, i32 1 }
@___asan_gen_.2914 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1959, i32 1 }
@___asan_gen_.2926 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 1998, i32 1 }
@___asan_gen_.2974 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2040, i32 1 }
@___asan_gen_.2987 = private unnamed_addr constant [8 x i8] c"symbols\00", align 1
@___asan_gen_.2989 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2114, i32 1 }
@___asan_gen_.3004 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2143, i32 1 }
@___asan_gen_.3007 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2187, i32 1 }
@___asan_gen_.3014 = private unnamed_addr constant [8 x i8] c"__flags\00", align 1
@___asan_gen_.3016 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 2227, i32 1 }
@___asan_gen_.3019 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 190, i32 2 }
@___asan_gen_.3022 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 191, i32 2 }
@___asan_gen_.3025 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 192, i32 2 }
@___asan_gen_.3028 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 194, i32 2 }
@___asan_gen_.3031 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 195, i32 2 }
@___asan_gen_.3034 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 196, i32 2 }
@___asan_gen_.3037 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 197, i32 2 }
@___asan_gen_.3040 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 206, i32 2 }
@___asan_gen_.3043 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 207, i32 2 }
@___asan_gen_.3046 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 208, i32 2 }
@___asan_gen_.3049 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 209, i32 2 }
@___asan_gen_.3052 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 210, i32 2 }
@___asan_gen_.3055 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 211, i32 2 }
@___asan_gen_.3058 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 212, i32 2 }
@___asan_gen_.3061 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 213, i32 2 }
@___asan_gen_.3064 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 403, i32 12 }
@___asan_gen_.3067 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 404, i32 14 }
@___asan_gen_.3070 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 405, i32 20 }
@___asan_gen_.3073 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 406, i32 24 }
@___asan_gen_.3076 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 407, i32 17 }
@___asan_gen_.3079 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 408, i32 22 }
@___asan_gen_.3082 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 409, i32 23 }
@___asan_gen_.3085 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 410, i32 28 }
@___asan_gen_.3088 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 411, i32 17 }
@___asan_gen_.3091 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 412, i32 15 }
@___asan_gen_.3094 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 413, i32 21 }
@___asan_gen_.3097 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 414, i32 22 }
@___asan_gen_.3100 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 415, i32 24 }
@___asan_gen_.3103 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 416, i32 20 }
@___asan_gen_.3106 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 417, i32 22 }
@___asan_gen_.3109 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 418, i32 19 }
@___asan_gen_.3112 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 419, i32 16 }
@___asan_gen_.3115 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 420, i32 18 }
@___asan_gen_.3118 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 421, i32 16 }
@___asan_gen_.3121 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 422, i32 18 }
@___asan_gen_.3124 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 423, i32 16 }
@___asan_gen_.3127 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 424, i32 18 }
@___asan_gen_.3130 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 425, i32 15 }
@___asan_gen_.3133 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 426, i32 17 }
@___asan_gen_.3136 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 427, i32 16 }
@___asan_gen_.3139 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 428, i32 21 }
@___asan_gen_.3142 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 429, i32 18 }
@___asan_gen_.3145 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 430, i32 19 }
@___asan_gen_.3148 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 431, i32 14 }
@___asan_gen_.3151 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 432, i32 25 }
@___asan_gen_.3154 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 433, i32 21 }
@___asan_gen_.3157 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 434, i32 20 }
@___asan_gen_.3160 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 435, i32 23 }
@___asan_gen_.3163 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 436, i32 28 }
@___asan_gen_.3166 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 437, i32 12 }
@___asan_gen_.3169 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 438, i32 14 }
@___asan_gen_.3172 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 439, i32 19 }
@___asan_gen_.3175 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 440, i32 21 }
@___asan_gen_.3178 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 441, i32 15 }
@___asan_gen_.3181 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 442, i32 21 }
@___asan_gen_.3184 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 443, i32 17 }
@___asan_gen_.3187 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 444, i32 20 }
@___asan_gen_.3190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 445, i32 16 }
@___asan_gen_.3193 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 446, i32 18 }
@___asan_gen_.3196 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 447, i32 31 }
@___asan_gen_.3199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 450, i32 15 }
@___asan_gen_.3202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 460, i32 24 }
@___asan_gen_.3205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 461, i32 46 }
@___asan_gen_.3208 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 462, i32 35 }
@___asan_gen_.3211 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 463, i32 21 }
@___asan_gen_.3214 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 464, i32 23 }
@___asan_gen_.3217 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 466, i32 22 }
@___asan_gen_.3220 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 467, i32 26 }
@___asan_gen_.3223 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 468, i32 21 }
@___asan_gen_.3226 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 471, i32 19 }
@___asan_gen_.3229 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3321, i32 3648, i32 4 }
@___asan_gen_.3232 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 511, i32 28 }
@___asan_gen_.3233 = private unnamed_addr constant [14 x i8] c"rescue_tokens\00", align 1
@___asan_gen_.3235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 476, i32 28 }
@___asan_gen_.3238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 528, i32 4 }
@___asan_gen_.3241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 532, i32 4 }
@___asan_gen_.3244 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 536, i32 4 }
@___asan_gen_.3247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 545, i32 4 }
@___asan_gen_.3250 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 480, i32 23 }
@___asan_gen_.3253 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 482, i32 24 }
@___asan_gen_.3256 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 483, i32 19 }
@___asan_gen_.3259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 491, i32 3 }
@___asan_gen_.3264 = private unnamed_addr constant [32 x i8] c"../include/trace/events/btrfs.h\00", align 1
@___asan_gen_.3265 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3264, i32 716, i32 1 }
@___asan_gen_.3267 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.3268 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3267, i32 108, i32 2 }
@___asan_gen_.3273 = private unnamed_addr constant [28 x i8] c"../include/linux/rcu_sync.h\00", align 1
@___asan_gen_.3274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3273, i32 34, i32 2 }
@___asan_gen_.3275 = private unnamed_addr constant [11 x i8] c"btrfs_misc\00", align 1
@___asan_gen_.3277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 2500, i32 26 }
@___asan_gen_.3280 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 2502, i32 11 }
@___asan_gen_.3281 = private unnamed_addr constant [15 x i8] c"btrfs_ctl_fops\00", align 1
@___asan_gen_.3283 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 2492, i32 37 }
@___asan_gen_.3284 = private unnamed_addr constant [19 x i8] c"btrfs_root_fs_type\00", align 1
@___asan_gen_.3286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 2357, i32 32 }
@___asan_gen_.3289 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 2359, i32 11 }
@___asan_gen_.3292 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1720, i32 38 }
@___asan_gen_.3295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1722, i32 30 }
@___asan_gen_.3296 = private unnamed_addr constant [16 x i8] c"btrfs_super_ops\00", align 1
@___asan_gen_.3298 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 2476, i32 38 }
@___asan_gen_.3301 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1354, i32 3 }
@___asan_gen_.3304 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1360, i32 3 }
@___asan_gen_.3307 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 2127, i32 3 }
@___asan_gen_.3310 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 2158, i32 2 }
@___asan_gen_.3321 = private unnamed_addr constant [20 x i8] c"../fs/btrfs/ctree.h\00", align 1
@___asan_gen_.3322 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3321, i32 3491, i32 2 }
@___asan_gen_.3328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3330, i32 695, i32 2 }
@___asan_gen_.3330 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.3331 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3330, i32 723, i32 2 }
@___asan_gen_.3334 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1924, i32 3 }
@___asan_gen_.3337 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 2007, i32 4 }
@___asan_gen_.3340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 2018, i32 4 }
@___asan_gen_.3343 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 2025, i32 4 }
@___asan_gen_.3346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1830, i32 2 }
@___asan_gen_.3348 = private unnamed_addr constant [28 x i8] c"../include/linux/wait_bit.h\00", align 1
@___asan_gen_.3349 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3348, i32 73, i32 2 }
@___asan_gen_.3352 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1441, i32 17 }
@___asan_gen_.3355 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1443, i32 17 }
@___asan_gen_.3358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1445, i32 17 }
@___asan_gen_.3361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1447, i32 17 }
@___asan_gen_.3364 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1449, i32 19 }
@___asan_gen_.3367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1452, i32 19 }
@___asan_gen_.3370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1456, i32 20 }
@___asan_gen_.3373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1458, i32 20 }
@___asan_gen_.3376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1460, i32 20 }
@___asan_gen_.3379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1463, i32 17 }
@___asan_gen_.3382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1465, i32 17 }
@___asan_gen_.3385 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1467, i32 17 }
@___asan_gen_.3388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1469, i32 17 }
@___asan_gen_.3391 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1479, i32 17 }
@___asan_gen_.3394 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1481, i32 17 }
@___asan_gen_.3397 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1483, i32 17 }
@___asan_gen_.3400 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1485, i32 17 }
@___asan_gen_.3403 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1487, i32 17 }
@___asan_gen_.3406 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1489, i32 17 }
@___asan_gen_.3409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1491, i32 17 }
@___asan_gen_.3412 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1493, i32 17 }
@___asan_gen_.3415 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1495, i32 17 }
@___asan_gen_.3418 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1497, i32 17 }
@___asan_gen_.3421 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1499, i32 17 }
@___asan_gen_.3424 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1501, i32 17 }
@___asan_gen_.3427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1503, i32 17 }
@___asan_gen_.3430 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1506, i32 17 }
@___asan_gen_.3433 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1508, i32 17 }
@___asan_gen_.3436 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1510, i32 19 }
@___asan_gen_.3439 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1514, i32 19 }
@___asan_gen_.3442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1516, i32 17 }
@___asan_gen_.3445 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1518, i32 19 }
@___asan_gen_.3448 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1521, i32 17 }
@___asan_gen_.3451 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1523, i32 17 }
@___asan_gen_.3454 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1526, i32 17 }
@___asan_gen_.3457 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1527, i32 18 }
@___asan_gen_.3460 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1532, i32 17 }
@___asan_gen_.3463 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1533, i32 32 }
@___asan_gen_.3466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1429, i32 18 }
@___asan_gen_.3469 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1429, i32 45 }
@___asan_gen_.3472 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1602, i32 4 }
@___asan_gen_.3475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1612, i32 4 }
@___asan_gen_.3478 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 1306, i32 55 }
@___asan_gen_.3479 = private unnamed_addr constant [8 x i8] c"options\00", align 1
@___asan_gen_.3481 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 2521, i32 20 }
@___asan_gen_.3482 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.3488 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.3489 = private constant [20 x i8] c"../fs/btrfs/super.c\00", align 1
@___asan_gen_.3490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3489, i32 2545, i32 2 }
@llvm.compiler.used = appending global [1460 x ptr] [ptr @TRACE_SYSTEM_ALLOC_CHUNK, ptr @TRACE_SYSTEM_ALLOC_CHUNK_FORCE, ptr @TRACE_SYSTEM_BTRFS_FILE_EXTENT_INLINE, ptr @TRACE_SYSTEM_BTRFS_FILE_EXTENT_PREALLOC, ptr @TRACE_SYSTEM_BTRFS_FILE_EXTENT_REG, ptr @TRACE_SYSTEM_BTRFS_QGROUP_RSV_DATA, ptr @TRACE_SYSTEM_BTRFS_QGROUP_RSV_META_PERTRANS, ptr @TRACE_SYSTEM_BTRFS_QGROUP_RSV_META_PREALLOC, ptr @TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_ALL, ptr @TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_ALL_STEAL, ptr @TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_LIMIT, ptr @TRACE_SYSTEM_BTRFS_RESERVE_NO_FLUSH, ptr @TRACE_SYSTEM_COMMIT_TRANS, ptr @TRACE_SYSTEM_COMPACT_COMPLETE, ptr @TRACE_SYSTEM_COMPACT_CONTENDED, ptr @TRACE_SYSTEM_COMPACT_CONTINUE, ptr @TRACE_SYSTEM_COMPACT_DEFERRED, ptr @TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, ptr @TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, ptr @TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, ptr @TRACE_SYSTEM_COMPACT_PRIO_ASYNC, ptr @TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, ptr @TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, ptr @TRACE_SYSTEM_COMPACT_SKIPPED, ptr @TRACE_SYSTEM_COMPACT_SUCCESS, ptr @TRACE_SYSTEM_FLUSH_DELALLOC, ptr @TRACE_SYSTEM_FLUSH_DELALLOC_FULL, ptr @TRACE_SYSTEM_FLUSH_DELALLOC_WAIT, ptr @TRACE_SYSTEM_FLUSH_DELAYED_ITEMS, ptr @TRACE_SYSTEM_FLUSH_DELAYED_ITEMS_NR, ptr @TRACE_SYSTEM_FLUSH_DELAYED_REFS, ptr @TRACE_SYSTEM_FLUSH_DELAYED_REFS_NR, ptr @TRACE_SYSTEM_IO_TREE_BTREE_INODE_IO, ptr @TRACE_SYSTEM_IO_TREE_FS_EXCLUDED_EXTENTS, ptr @TRACE_SYSTEM_IO_TREE_FS_PINNED_EXTENTS, ptr @TRACE_SYSTEM_IO_TREE_INODE_FILE_EXTENT, ptr @TRACE_SYSTEM_IO_TREE_INODE_IO, ptr @TRACE_SYSTEM_IO_TREE_INODE_IO_FAILURE, ptr @TRACE_SYSTEM_IO_TREE_LOG_CSUM_RANGE, ptr @TRACE_SYSTEM_IO_TREE_RELOC_BLOCKS, ptr @TRACE_SYSTEM_IO_TREE_ROOT_DIRTY_LOG_PAGES, ptr @TRACE_SYSTEM_IO_TREE_SELFTEST, ptr @TRACE_SYSTEM_IO_TREE_TRANS_DIRTY_PAGES, ptr @TRACE_SYSTEM_LRU_ACTIVE_ANON, ptr @TRACE_SYSTEM_LRU_ACTIVE_FILE, ptr @TRACE_SYSTEM_LRU_INACTIVE_ANON, ptr @TRACE_SYSTEM_LRU_INACTIVE_FILE, ptr @TRACE_SYSTEM_LRU_UNEVICTABLE, ptr @TRACE_SYSTEM_RUN_DELAYED_IPUTS, ptr @TRACE_SYSTEM_ZONE_DMA, ptr @TRACE_SYSTEM_ZONE_HIGHMEM, ptr @TRACE_SYSTEM_ZONE_MOVABLE, ptr @TRACE_SYSTEM_ZONE_NORMAL, ptr @__TRACE_SYSTEM_ALLOC_CHUNK, ptr @__TRACE_SYSTEM_ALLOC_CHUNK_FORCE, ptr @__TRACE_SYSTEM_BTRFS_FILE_EXTENT_INLINE, ptr @__TRACE_SYSTEM_BTRFS_FILE_EXTENT_PREALLOC, ptr @__TRACE_SYSTEM_BTRFS_FILE_EXTENT_REG, ptr @__TRACE_SYSTEM_BTRFS_QGROUP_RSV_DATA, ptr @__TRACE_SYSTEM_BTRFS_QGROUP_RSV_META_PERTRANS, ptr @__TRACE_SYSTEM_BTRFS_QGROUP_RSV_META_PREALLOC, ptr @__TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_ALL, ptr @__TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_ALL_STEAL, ptr @__TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_LIMIT, ptr @__TRACE_SYSTEM_BTRFS_RESERVE_NO_FLUSH, ptr @__TRACE_SYSTEM_COMMIT_TRANS, ptr @__TRACE_SYSTEM_COMPACT_COMPLETE, ptr @__TRACE_SYSTEM_COMPACT_CONTENDED, ptr @__TRACE_SYSTEM_COMPACT_CONTINUE, ptr @__TRACE_SYSTEM_COMPACT_DEFERRED, ptr @__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, ptr @__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, ptr @__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, ptr @__TRACE_SYSTEM_COMPACT_PRIO_ASYNC, ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, ptr @__TRACE_SYSTEM_COMPACT_SKIPPED, ptr @__TRACE_SYSTEM_COMPACT_SUCCESS, ptr @__TRACE_SYSTEM_FLUSH_DELALLOC, ptr @__TRACE_SYSTEM_FLUSH_DELALLOC_FULL, ptr @__TRACE_SYSTEM_FLUSH_DELALLOC_WAIT, ptr @__TRACE_SYSTEM_FLUSH_DELAYED_ITEMS, ptr @__TRACE_SYSTEM_FLUSH_DELAYED_ITEMS_NR, ptr @__TRACE_SYSTEM_FLUSH_DELAYED_REFS, ptr @__TRACE_SYSTEM_FLUSH_DELAYED_REFS_NR, ptr @__TRACE_SYSTEM_IO_TREE_BTREE_INODE_IO, ptr @__TRACE_SYSTEM_IO_TREE_FS_EXCLUDED_EXTENTS, ptr @__TRACE_SYSTEM_IO_TREE_FS_PINNED_EXTENTS, ptr @__TRACE_SYSTEM_IO_TREE_INODE_FILE_EXTENT, ptr @__TRACE_SYSTEM_IO_TREE_INODE_IO, ptr @__TRACE_SYSTEM_IO_TREE_INODE_IO_FAILURE, ptr @__TRACE_SYSTEM_IO_TREE_LOG_CSUM_RANGE, ptr @__TRACE_SYSTEM_IO_TREE_RELOC_BLOCKS, ptr @__TRACE_SYSTEM_IO_TREE_ROOT_DIRTY_LOG_PAGES, ptr @__TRACE_SYSTEM_IO_TREE_SELFTEST, ptr @__TRACE_SYSTEM_IO_TREE_TRANS_DIRTY_PAGES, ptr @__TRACE_SYSTEM_LRU_ACTIVE_ANON, ptr @__TRACE_SYSTEM_LRU_ACTIVE_FILE, ptr @__TRACE_SYSTEM_LRU_INACTIVE_ANON, ptr @__TRACE_SYSTEM_LRU_INACTIVE_FILE, ptr @__TRACE_SYSTEM_LRU_UNEVICTABLE, ptr @__TRACE_SYSTEM_RUN_DELAYED_IPUTS, ptr @__TRACE_SYSTEM_ZONE_DMA, ptr @__TRACE_SYSTEM_ZONE_HIGHMEM, ptr @__TRACE_SYSTEM_ZONE_MOVABLE, ptr @__TRACE_SYSTEM_ZONE_NORMAL, ptr @__UNIQUE_ID_alias1199, ptr @__UNIQUE_ID_alias1202, ptr @__UNIQUE_ID_alias1203, ptr @__UNIQUE_ID_file1205, ptr @__UNIQUE_ID_license1206, ptr @__UNIQUE_ID_softdep1207, ptr @__UNIQUE_ID_softdep1208, ptr @__UNIQUE_ID_softdep1209, ptr @__UNIQUE_ID_softdep1210, ptr @__bpf_trace_tp_map___extent_writepage, ptr @__bpf_trace_tp_map_add_delayed_data_ref, ptr @__bpf_trace_tp_map_add_delayed_ref_head, ptr @__bpf_trace_tp_map_add_delayed_tree_ref, ptr @__bpf_trace_tp_map_alloc_extent_state, ptr @__bpf_trace_tp_map_btrfs_add_block_group, ptr @__bpf_trace_tp_map_btrfs_add_reclaim_block_group, ptr @__bpf_trace_tp_map_btrfs_add_unused_block_group, ptr @__bpf_trace_tp_map_btrfs_all_work_done, ptr @__bpf_trace_tp_map_btrfs_chunk_alloc, ptr @__bpf_trace_tp_map_btrfs_chunk_free, ptr @__bpf_trace_tp_map_btrfs_clear_extent_bit, ptr @__bpf_trace_tp_map_btrfs_convert_extent_bit, ptr @__bpf_trace_tp_map_btrfs_cow_block, ptr @__bpf_trace_tp_map_btrfs_done_preemptive_reclaim, ptr @__bpf_trace_tp_map_btrfs_fail_all_tickets, ptr @__bpf_trace_tp_map_btrfs_failed_cluster_setup, ptr @__bpf_trace_tp_map_btrfs_find_cluster, ptr @__bpf_trace_tp_map_btrfs_flush_space, ptr @__bpf_trace_tp_map_btrfs_get_extent, ptr @__bpf_trace_tp_map_btrfs_get_extent_show_fi_inline, ptr @__bpf_trace_tp_map_btrfs_get_extent_show_fi_regular, ptr @__bpf_trace_tp_map_btrfs_handle_em_exist, ptr @__bpf_trace_tp_map_btrfs_inode_evict, ptr @__bpf_trace_tp_map_btrfs_inode_mod_outstanding_extents, ptr @__bpf_trace_tp_map_btrfs_inode_new, ptr @__bpf_trace_tp_map_btrfs_inode_request, ptr @__bpf_trace_tp_map_btrfs_ordered_extent_add, ptr @__bpf_trace_tp_map_btrfs_ordered_extent_put, ptr @__bpf_trace_tp_map_btrfs_ordered_extent_remove, ptr @__bpf_trace_tp_map_btrfs_ordered_extent_start, ptr @__bpf_trace_tp_map_btrfs_ordered_sched, ptr @__bpf_trace_tp_map_btrfs_prelim_ref_insert, ptr @__bpf_trace_tp_map_btrfs_prelim_ref_merge, ptr @__bpf_trace_tp_map_btrfs_qgroup_account_extent, ptr @__bpf_trace_tp_map_btrfs_qgroup_account_extents, ptr @__bpf_trace_tp_map_btrfs_qgroup_release_data, ptr @__bpf_trace_tp_map_btrfs_qgroup_reserve_data, ptr @__bpf_trace_tp_map_btrfs_qgroup_trace_extent, ptr @__bpf_trace_tp_map_btrfs_reclaim_block_group, ptr @__bpf_trace_tp_map_btrfs_remove_block_group, ptr @__bpf_trace_tp_map_btrfs_reserve_extent, ptr @__bpf_trace_tp_map_btrfs_reserve_extent_cluster, ptr @__bpf_trace_tp_map_btrfs_reserve_ticket, ptr @__bpf_trace_tp_map_btrfs_reserved_extent_alloc, ptr @__bpf_trace_tp_map_btrfs_reserved_extent_free, ptr @__bpf_trace_tp_map_btrfs_set_extent_bit, ptr @__bpf_trace_tp_map_btrfs_set_lock_blocking_read, ptr @__bpf_trace_tp_map_btrfs_set_lock_blocking_write, ptr @__bpf_trace_tp_map_btrfs_setup_cluster, ptr @__bpf_trace_tp_map_btrfs_skip_unused_block_group, ptr @__bpf_trace_tp_map_btrfs_space_reservation, ptr @__bpf_trace_tp_map_btrfs_sync_file, ptr @__bpf_trace_tp_map_btrfs_sync_fs, ptr @__bpf_trace_tp_map_btrfs_transaction_commit, ptr @__bpf_trace_tp_map_btrfs_tree_lock, ptr @__bpf_trace_tp_map_btrfs_tree_read_lock, ptr @__bpf_trace_tp_map_btrfs_tree_read_lock_atomic, ptr @__bpf_trace_tp_map_btrfs_tree_read_unlock, ptr @__bpf_trace_tp_map_btrfs_tree_read_unlock_blocking, ptr @__bpf_trace_tp_map_btrfs_tree_unlock, ptr @__bpf_trace_tp_map_btrfs_trigger_flush, ptr @__bpf_trace_tp_map_btrfs_truncate_show_fi_inline, ptr @__bpf_trace_tp_map_btrfs_truncate_show_fi_regular, ptr @__bpf_trace_tp_map_btrfs_try_tree_read_lock, ptr @__bpf_trace_tp_map_btrfs_try_tree_write_lock, ptr @__bpf_trace_tp_map_btrfs_work_queued, ptr @__bpf_trace_tp_map_btrfs_work_sched, ptr @__bpf_trace_tp_map_btrfs_workqueue_alloc, ptr @__bpf_trace_tp_map_btrfs_workqueue_destroy, ptr @__bpf_trace_tp_map_btrfs_writepage_end_io_hook, ptr @__bpf_trace_tp_map_find_free_extent, ptr @__bpf_trace_tp_map_free_extent_state, ptr @__bpf_trace_tp_map_qgroup_meta_convert, ptr @__bpf_trace_tp_map_qgroup_meta_free_all_pertrans, ptr @__bpf_trace_tp_map_qgroup_meta_reserve, ptr @__bpf_trace_tp_map_qgroup_num_dirty_extents, ptr @__bpf_trace_tp_map_qgroup_update_counters, ptr @__bpf_trace_tp_map_qgroup_update_reserve, ptr @__bpf_trace_tp_map_run_delayed_data_ref, ptr @__bpf_trace_tp_map_run_delayed_ref_head, ptr @__bpf_trace_tp_map_run_delayed_tree_ref, ptr @__bpf_trace_tp_map_update_bytes_may_use, ptr @__bpf_trace_tp_map_update_bytes_pinned, ptr @__btrfs_handle_fs_error._entry, ptr @__btrfs_handle_fs_error._entry.66, ptr @__btrfs_handle_fs_error._entry_ptr, ptr @__btrfs_handle_fs_error._entry_ptr.68, ptr @__event___extent_writepage, ptr @__event_add_delayed_data_ref, ptr @__event_add_delayed_ref_head, ptr @__event_add_delayed_tree_ref, ptr @__event_alloc_extent_state, ptr @__event_btrfs_add_block_group, ptr @__event_btrfs_add_reclaim_block_group, ptr @__event_btrfs_add_unused_block_group, ptr @__event_btrfs_all_work_done, ptr @__event_btrfs_chunk_alloc, ptr @__event_btrfs_chunk_free, ptr @__event_btrfs_clear_extent_bit, ptr @__event_btrfs_convert_extent_bit, ptr @__event_btrfs_cow_block, ptr @__event_btrfs_done_preemptive_reclaim, ptr @__event_btrfs_fail_all_tickets, ptr @__event_btrfs_failed_cluster_setup, ptr @__event_btrfs_find_cluster, ptr @__event_btrfs_flush_space, ptr @__event_btrfs_get_extent, ptr @__event_btrfs_get_extent_show_fi_inline, ptr @__event_btrfs_get_extent_show_fi_regular, ptr @__event_btrfs_handle_em_exist, ptr @__event_btrfs_inode_evict, ptr @__event_btrfs_inode_mod_outstanding_extents, ptr @__event_btrfs_inode_new, ptr @__event_btrfs_inode_request, ptr @__event_btrfs_ordered_extent_add, ptr @__event_btrfs_ordered_extent_put, ptr @__event_btrfs_ordered_extent_remove, ptr @__event_btrfs_ordered_extent_start, ptr @__event_btrfs_ordered_sched, ptr @__event_btrfs_prelim_ref_insert, ptr @__event_btrfs_prelim_ref_merge, ptr @__event_btrfs_qgroup_account_extent, ptr @__event_btrfs_qgroup_account_extents, ptr @__event_btrfs_qgroup_release_data, ptr @__event_btrfs_qgroup_reserve_data, ptr @__event_btrfs_qgroup_trace_extent, ptr @__event_btrfs_reclaim_block_group, ptr @__event_btrfs_remove_block_group, ptr @__event_btrfs_reserve_extent, ptr @__event_btrfs_reserve_extent_cluster, ptr @__event_btrfs_reserve_ticket, ptr @__event_btrfs_reserved_extent_alloc, ptr @__event_btrfs_reserved_extent_free, ptr @__event_btrfs_set_extent_bit, ptr @__event_btrfs_set_lock_blocking_read, ptr @__event_btrfs_set_lock_blocking_write, ptr @__event_btrfs_setup_cluster, ptr @__event_btrfs_skip_unused_block_group, ptr @__event_btrfs_space_reservation, ptr @__event_btrfs_sync_file, ptr @__event_btrfs_sync_fs, ptr @__event_btrfs_transaction_commit, ptr @__event_btrfs_tree_lock, ptr @__event_btrfs_tree_read_lock, ptr @__event_btrfs_tree_read_lock_atomic, ptr @__event_btrfs_tree_read_unlock, ptr @__event_btrfs_tree_read_unlock_blocking, ptr @__event_btrfs_tree_unlock, ptr @__event_btrfs_trigger_flush, ptr @__event_btrfs_truncate_show_fi_inline, ptr @__event_btrfs_truncate_show_fi_regular, ptr @__event_btrfs_try_tree_read_lock, ptr @__event_btrfs_try_tree_write_lock, ptr @__event_btrfs_work_queued, ptr @__event_btrfs_work_sched, ptr @__event_btrfs_workqueue_alloc, ptr @__event_btrfs_workqueue_destroy, ptr @__event_btrfs_writepage_end_io_hook, ptr @__event_find_free_extent, ptr @__event_free_extent_state, ptr @__event_qgroup_meta_convert, ptr @__event_qgroup_meta_free_all_pertrans, ptr @__event_qgroup_meta_reserve, ptr @__event_qgroup_num_dirty_extents, ptr @__event_qgroup_update_counters, ptr @__event_qgroup_update_reserve, ptr @__event_run_delayed_data_ref, ptr @__event_run_delayed_ref_head, ptr @__event_run_delayed_tree_ref, ptr @__event_update_bytes_may_use, ptr @__event_update_bytes_pinned, ptr @__exitcall_exit_btrfs_fs, ptr @__initcall__kmod_btrfs__1204_2664_init_btrfs_fs7, ptr @__tracepoint___extent_writepage, ptr @__tracepoint_add_delayed_data_ref, ptr @__tracepoint_add_delayed_ref_head, ptr @__tracepoint_add_delayed_tree_ref, ptr @__tracepoint_alloc_extent_state, ptr @__tracepoint_btrfs_add_block_group, ptr @__tracepoint_btrfs_add_reclaim_block_group, ptr @__tracepoint_btrfs_add_unused_block_group, ptr @__tracepoint_btrfs_all_work_done, ptr @__tracepoint_btrfs_chunk_alloc, ptr @__tracepoint_btrfs_chunk_free, ptr @__tracepoint_btrfs_clear_extent_bit, ptr @__tracepoint_btrfs_convert_extent_bit, ptr @__tracepoint_btrfs_cow_block, ptr @__tracepoint_btrfs_done_preemptive_reclaim, ptr @__tracepoint_btrfs_fail_all_tickets, ptr @__tracepoint_btrfs_failed_cluster_setup, ptr @__tracepoint_btrfs_find_cluster, ptr @__tracepoint_btrfs_flush_space, ptr @__tracepoint_btrfs_get_extent, ptr @__tracepoint_btrfs_get_extent_show_fi_inline, ptr @__tracepoint_btrfs_get_extent_show_fi_regular, ptr @__tracepoint_btrfs_handle_em_exist, ptr @__tracepoint_btrfs_inode_evict, ptr @__tracepoint_btrfs_inode_mod_outstanding_extents, ptr @__tracepoint_btrfs_inode_new, ptr @__tracepoint_btrfs_inode_request, ptr @__tracepoint_btrfs_ordered_extent_add, ptr @__tracepoint_btrfs_ordered_extent_put, ptr @__tracepoint_btrfs_ordered_extent_remove, ptr @__tracepoint_btrfs_ordered_extent_start, ptr @__tracepoint_btrfs_ordered_sched, ptr @__tracepoint_btrfs_prelim_ref_insert, ptr @__tracepoint_btrfs_prelim_ref_merge, ptr @__tracepoint_btrfs_qgroup_account_extent, ptr @__tracepoint_btrfs_qgroup_account_extents, ptr @__tracepoint_btrfs_qgroup_release_data, ptr @__tracepoint_btrfs_qgroup_reserve_data, ptr @__tracepoint_btrfs_qgroup_trace_extent, ptr @__tracepoint_btrfs_reclaim_block_group, ptr @__tracepoint_btrfs_remove_block_group, ptr @__tracepoint_btrfs_reserve_extent, ptr @__tracepoint_btrfs_reserve_extent_cluster, ptr @__tracepoint_btrfs_reserve_ticket, ptr @__tracepoint_btrfs_reserved_extent_alloc, ptr @__tracepoint_btrfs_reserved_extent_free, ptr @__tracepoint_btrfs_set_extent_bit, ptr @__tracepoint_btrfs_set_lock_blocking_read, ptr @__tracepoint_btrfs_set_lock_blocking_write, ptr @__tracepoint_btrfs_setup_cluster, ptr @__tracepoint_btrfs_skip_unused_block_group, ptr @__tracepoint_btrfs_space_reservation, ptr @__tracepoint_btrfs_sync_file, ptr @__tracepoint_btrfs_sync_fs, ptr @__tracepoint_btrfs_transaction_commit, ptr @__tracepoint_btrfs_tree_lock, ptr @__tracepoint_btrfs_tree_read_lock, ptr @__tracepoint_btrfs_tree_read_lock_atomic, ptr @__tracepoint_btrfs_tree_read_unlock, ptr @__tracepoint_btrfs_tree_read_unlock_blocking, ptr @__tracepoint_btrfs_tree_unlock, ptr @__tracepoint_btrfs_trigger_flush, ptr @__tracepoint_btrfs_truncate_show_fi_inline, ptr @__tracepoint_btrfs_truncate_show_fi_regular, ptr @__tracepoint_btrfs_try_tree_read_lock, ptr @__tracepoint_btrfs_try_tree_write_lock, ptr @__tracepoint_btrfs_work_queued, ptr @__tracepoint_btrfs_work_sched, ptr @__tracepoint_btrfs_workqueue_alloc, ptr @__tracepoint_btrfs_workqueue_destroy, ptr @__tracepoint_btrfs_writepage_end_io_hook, ptr @__tracepoint_find_free_extent, ptr @__tracepoint_free_extent_state, ptr @__tracepoint_ptr___extent_writepage, ptr @__tracepoint_ptr_add_delayed_data_ref, ptr @__tracepoint_ptr_add_delayed_ref_head, ptr @__tracepoint_ptr_add_delayed_tree_ref, ptr @__tracepoint_ptr_alloc_extent_state, ptr @__tracepoint_ptr_btrfs_add_block_group, ptr @__tracepoint_ptr_btrfs_add_reclaim_block_group, ptr @__tracepoint_ptr_btrfs_add_unused_block_group, ptr @__tracepoint_ptr_btrfs_all_work_done, ptr @__tracepoint_ptr_btrfs_chunk_alloc, ptr @__tracepoint_ptr_btrfs_chunk_free, ptr @__tracepoint_ptr_btrfs_clear_extent_bit, ptr @__tracepoint_ptr_btrfs_convert_extent_bit, ptr @__tracepoint_ptr_btrfs_cow_block, ptr @__tracepoint_ptr_btrfs_done_preemptive_reclaim, ptr @__tracepoint_ptr_btrfs_fail_all_tickets, ptr @__tracepoint_ptr_btrfs_failed_cluster_setup, ptr @__tracepoint_ptr_btrfs_find_cluster, ptr @__tracepoint_ptr_btrfs_flush_space, ptr @__tracepoint_ptr_btrfs_get_extent, ptr @__tracepoint_ptr_btrfs_get_extent_show_fi_inline, ptr @__tracepoint_ptr_btrfs_get_extent_show_fi_regular, ptr @__tracepoint_ptr_btrfs_handle_em_exist, ptr @__tracepoint_ptr_btrfs_inode_evict, ptr @__tracepoint_ptr_btrfs_inode_mod_outstanding_extents, ptr @__tracepoint_ptr_btrfs_inode_new, ptr @__tracepoint_ptr_btrfs_inode_request, ptr @__tracepoint_ptr_btrfs_ordered_extent_add, ptr @__tracepoint_ptr_btrfs_ordered_extent_put, ptr @__tracepoint_ptr_btrfs_ordered_extent_remove, ptr @__tracepoint_ptr_btrfs_ordered_extent_start, ptr @__tracepoint_ptr_btrfs_ordered_sched, ptr @__tracepoint_ptr_btrfs_prelim_ref_insert, ptr @__tracepoint_ptr_btrfs_prelim_ref_merge, ptr @__tracepoint_ptr_btrfs_qgroup_account_extent, ptr @__tracepoint_ptr_btrfs_qgroup_account_extents, ptr @__tracepoint_ptr_btrfs_qgroup_release_data, ptr @__tracepoint_ptr_btrfs_qgroup_reserve_data, ptr @__tracepoint_ptr_btrfs_qgroup_trace_extent, ptr @__tracepoint_ptr_btrfs_reclaim_block_group, ptr @__tracepoint_ptr_btrfs_remove_block_group, ptr @__tracepoint_ptr_btrfs_reserve_extent, ptr @__tracepoint_ptr_btrfs_reserve_extent_cluster, ptr @__tracepoint_ptr_btrfs_reserve_ticket, ptr @__tracepoint_ptr_btrfs_reserved_extent_alloc, ptr @__tracepoint_ptr_btrfs_reserved_extent_free, ptr @__tracepoint_ptr_btrfs_set_extent_bit, ptr @__tracepoint_ptr_btrfs_set_lock_blocking_read, ptr @__tracepoint_ptr_btrfs_set_lock_blocking_write, ptr @__tracepoint_ptr_btrfs_setup_cluster, ptr @__tracepoint_ptr_btrfs_skip_unused_block_group, ptr @__tracepoint_ptr_btrfs_space_reservation, ptr @__tracepoint_ptr_btrfs_sync_file, ptr @__tracepoint_ptr_btrfs_sync_fs, ptr @__tracepoint_ptr_btrfs_transaction_commit, ptr @__tracepoint_ptr_btrfs_tree_lock, ptr @__tracepoint_ptr_btrfs_tree_read_lock, ptr @__tracepoint_ptr_btrfs_tree_read_lock_atomic, ptr @__tracepoint_ptr_btrfs_tree_read_unlock, ptr @__tracepoint_ptr_btrfs_tree_read_unlock_blocking, ptr @__tracepoint_ptr_btrfs_tree_unlock, ptr @__tracepoint_ptr_btrfs_trigger_flush, ptr @__tracepoint_ptr_btrfs_truncate_show_fi_inline, ptr @__tracepoint_ptr_btrfs_truncate_show_fi_regular, ptr @__tracepoint_ptr_btrfs_try_tree_read_lock, ptr @__tracepoint_ptr_btrfs_try_tree_write_lock, ptr @__tracepoint_ptr_btrfs_work_queued, ptr @__tracepoint_ptr_btrfs_work_sched, ptr @__tracepoint_ptr_btrfs_workqueue_alloc, ptr @__tracepoint_ptr_btrfs_workqueue_destroy, ptr @__tracepoint_ptr_btrfs_writepage_end_io_hook, ptr @__tracepoint_ptr_find_free_extent, ptr @__tracepoint_ptr_free_extent_state, ptr @__tracepoint_ptr_qgroup_meta_convert, ptr @__tracepoint_ptr_qgroup_meta_free_all_pertrans, ptr @__tracepoint_ptr_qgroup_meta_reserve, ptr @__tracepoint_ptr_qgroup_num_dirty_extents, ptr @__tracepoint_ptr_qgroup_update_counters, ptr @__tracepoint_ptr_qgroup_update_reserve, ptr @__tracepoint_ptr_run_delayed_data_ref, ptr @__tracepoint_ptr_run_delayed_ref_head, ptr @__tracepoint_ptr_run_delayed_tree_ref, ptr @__tracepoint_ptr_update_bytes_may_use, ptr @__tracepoint_ptr_update_bytes_pinned, ptr @__tracepoint_qgroup_meta_convert, ptr @__tracepoint_qgroup_meta_free_all_pertrans, ptr @__tracepoint_qgroup_meta_reserve, ptr @__tracepoint_qgroup_num_dirty_extents, ptr @__tracepoint_qgroup_update_counters, ptr @__tracepoint_qgroup_update_reserve, ptr @__tracepoint_run_delayed_data_ref, ptr @__tracepoint_run_delayed_ref_head, ptr @__tracepoint_run_delayed_tree_ref, ptr @__tracepoint_update_bytes_may_use, ptr @__tracepoint_update_bytes_pinned, ptr @assertfail._entry, ptr @assertfail._entry_ptr, ptr @btrfs_print_mod_info._entry, ptr @btrfs_print_mod_info._entry_ptr, ptr @btrfs_printk._entry, ptr @btrfs_printk._entry.71, ptr @btrfs_printk._entry_ptr, ptr @btrfs_printk._entry_ptr.73, ptr @event___extent_writepage, ptr @event_add_delayed_data_ref, ptr @event_add_delayed_ref_head, ptr @event_add_delayed_tree_ref, ptr @event_alloc_extent_state, ptr @event_btrfs_add_block_group, ptr @event_btrfs_add_reclaim_block_group, ptr @event_btrfs_add_unused_block_group, ptr @event_btrfs_all_work_done, ptr @event_btrfs_chunk_alloc, ptr @event_btrfs_chunk_free, ptr @event_btrfs_clear_extent_bit, ptr @event_btrfs_convert_extent_bit, ptr @event_btrfs_cow_block, ptr @event_btrfs_done_preemptive_reclaim, ptr @event_btrfs_fail_all_tickets, ptr @event_btrfs_failed_cluster_setup, ptr @event_btrfs_find_cluster, ptr @event_btrfs_flush_space, ptr @event_btrfs_get_extent, ptr @event_btrfs_get_extent_show_fi_inline, ptr @event_btrfs_get_extent_show_fi_regular, ptr @event_btrfs_handle_em_exist, ptr @event_btrfs_inode_evict, ptr @event_btrfs_inode_mod_outstanding_extents, ptr @event_btrfs_inode_new, ptr @event_btrfs_inode_request, ptr @event_btrfs_ordered_extent_add, ptr @event_btrfs_ordered_extent_put, ptr @event_btrfs_ordered_extent_remove, ptr @event_btrfs_ordered_extent_start, ptr @event_btrfs_ordered_sched, ptr @event_btrfs_prelim_ref_insert, ptr @event_btrfs_prelim_ref_merge, ptr @event_btrfs_qgroup_account_extent, ptr @event_btrfs_qgroup_account_extents, ptr @event_btrfs_qgroup_release_data, ptr @event_btrfs_qgroup_reserve_data, ptr @event_btrfs_qgroup_trace_extent, ptr @event_btrfs_reclaim_block_group, ptr @event_btrfs_remove_block_group, ptr @event_btrfs_reserve_extent, ptr @event_btrfs_reserve_extent_cluster, ptr @event_btrfs_reserve_ticket, ptr @event_btrfs_reserved_extent_alloc, ptr @event_btrfs_reserved_extent_free, ptr @event_btrfs_set_extent_bit, ptr @event_btrfs_set_lock_blocking_read, ptr @event_btrfs_set_lock_blocking_write, ptr @event_btrfs_setup_cluster, ptr @event_btrfs_skip_unused_block_group, ptr @event_btrfs_space_reservation, ptr @event_btrfs_sync_file, ptr @event_btrfs_sync_fs, ptr @event_btrfs_transaction_commit, ptr @event_btrfs_tree_lock, ptr @event_btrfs_tree_read_lock, ptr @event_btrfs_tree_read_lock_atomic, ptr @event_btrfs_tree_read_unlock, ptr @event_btrfs_tree_read_unlock_blocking, ptr @event_btrfs_tree_unlock, ptr @event_btrfs_trigger_flush, ptr @event_btrfs_truncate_show_fi_inline, ptr @event_btrfs_truncate_show_fi_regular, ptr @event_btrfs_try_tree_read_lock, ptr @event_btrfs_try_tree_write_lock, ptr @event_btrfs_work_queued, ptr @event_btrfs_work_sched, ptr @event_btrfs_workqueue_alloc, ptr @event_btrfs_workqueue_destroy, ptr @event_btrfs_writepage_end_io_hook, ptr @event_class_alloc_extent_state, ptr @event_class_btrfs__block_group, ptr @event_class_btrfs__chunk, ptr @event_class_btrfs__file_extent_item_inline, ptr @event_class_btrfs__file_extent_item_regular, ptr @event_class_btrfs__inode, ptr @event_class_btrfs__ordered_extent, ptr @event_class_btrfs__prelim_ref, ptr @event_class_btrfs__qgroup_rsv_data, ptr @event_class_btrfs__reserve_extent, ptr @event_class_btrfs__reserved_extent, ptr @event_class_btrfs__space_info_update, ptr @event_class_btrfs__work, ptr @event_class_btrfs__work__done, ptr @event_class_btrfs__workqueue, ptr @event_class_btrfs__workqueue_done, ptr @event_class_btrfs__writepage, ptr @event_class_btrfs_add_block_group, ptr @event_class_btrfs_clear_extent_bit, ptr @event_class_btrfs_convert_extent_bit, ptr @event_class_btrfs_cow_block, ptr @event_class_btrfs_delayed_data_ref, ptr @event_class_btrfs_delayed_ref_head, ptr @event_class_btrfs_delayed_tree_ref, ptr @event_class_btrfs_dump_space_info, ptr @event_class_btrfs_failed_cluster_setup, ptr @event_class_btrfs_find_cluster, ptr @event_class_btrfs_flush_space, ptr @event_class_btrfs_get_extent, ptr @event_class_btrfs_handle_em_exist, ptr @event_class_btrfs_inode_mod_outstanding_extents, ptr @event_class_btrfs_locking_events, ptr @event_class_btrfs_qgroup_account_extent, ptr @event_class_btrfs_qgroup_extent, ptr @event_class_btrfs_reserve_ticket, ptr @event_class_btrfs_set_extent_bit, ptr @event_class_btrfs_setup_cluster, ptr @event_class_btrfs_sleep_tree_lock, ptr @event_class_btrfs_space_reservation, ptr @event_class_btrfs_sync_file, ptr @event_class_btrfs_sync_fs, ptr @event_class_btrfs_transaction_commit, ptr @event_class_btrfs_trigger_flush, ptr @event_class_btrfs_writepage_end_io_hook, ptr @event_class_find_free_extent, ptr @event_class_free_extent_state, ptr @event_class_qgroup_meta_convert, ptr @event_class_qgroup_meta_free_all_pertrans, ptr @event_class_qgroup_meta_reserve, ptr @event_class_qgroup_num_dirty_extents, ptr @event_class_qgroup_update_counters, ptr @event_class_qgroup_update_reserve, ptr @event_find_free_extent, ptr @event_free_extent_state, ptr @event_qgroup_meta_convert, ptr @event_qgroup_meta_free_all_pertrans, ptr @event_qgroup_meta_reserve, ptr @event_qgroup_num_dirty_extents, ptr @event_qgroup_update_counters, ptr @event_qgroup_update_reserve, ptr @event_run_delayed_data_ref, ptr @event_run_delayed_ref_head, ptr @event_run_delayed_tree_ref, ptr @event_update_bytes_may_use, ptr @event_update_bytes_pinned, ptr @exit_btrfs_fs, ptr @str__btrfs__trace_system_name, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @trace_event_fields_btrfs_transaction_commit, ptr @trace_event_type_funcs_btrfs_transaction_commit, ptr @print_fmt_btrfs_transaction_commit, ptr @trace_event_fields_btrfs__inode, ptr @trace_event_type_funcs_btrfs__inode, ptr @print_fmt_btrfs__inode, ptr @trace_event_fields_btrfs_get_extent, ptr @trace_event_type_funcs_btrfs_get_extent, ptr @print_fmt_btrfs_get_extent, ptr @trace_event_fields_btrfs_handle_em_exist, ptr @trace_event_type_funcs_btrfs_handle_em_exist, ptr @print_fmt_btrfs_handle_em_exist, ptr @trace_event_fields_btrfs__file_extent_item_regular, ptr @trace_event_fields_btrfs__file_extent_item_inline, ptr @trace_event_type_funcs_btrfs__file_extent_item_regular, ptr @print_fmt_btrfs__file_extent_item_regular, ptr @trace_event_type_funcs_btrfs__file_extent_item_inline, ptr @print_fmt_btrfs__file_extent_item_inline, ptr @trace_event_fields_btrfs__ordered_extent, ptr @trace_event_type_funcs_btrfs__ordered_extent, ptr @print_fmt_btrfs__ordered_extent, ptr @trace_event_fields_btrfs__writepage, ptr @trace_event_type_funcs_btrfs__writepage, ptr @print_fmt_btrfs__writepage, ptr @trace_event_fields_btrfs_writepage_end_io_hook, ptr @trace_event_type_funcs_btrfs_writepage_end_io_hook, ptr @print_fmt_btrfs_writepage_end_io_hook, ptr @trace_event_fields_btrfs_sync_file, ptr @trace_event_type_funcs_btrfs_sync_file, ptr @print_fmt_btrfs_sync_file, ptr @trace_event_fields_btrfs_sync_fs, ptr @trace_event_type_funcs_btrfs_sync_fs, ptr @print_fmt_btrfs_sync_fs, ptr @trace_event_fields_btrfs_add_block_group, ptr @trace_event_type_funcs_btrfs_add_block_group, ptr @print_fmt_btrfs_add_block_group, ptr @trace_event_fields_btrfs_delayed_tree_ref, ptr @trace_event_type_funcs_btrfs_delayed_tree_ref, ptr @print_fmt_btrfs_delayed_tree_ref, ptr @trace_event_fields_btrfs_delayed_data_ref, ptr @trace_event_type_funcs_btrfs_delayed_data_ref, ptr @print_fmt_btrfs_delayed_data_ref, ptr @trace_event_fields_btrfs_delayed_ref_head, ptr @trace_event_type_funcs_btrfs_delayed_ref_head, ptr @print_fmt_btrfs_delayed_ref_head, ptr @trace_event_fields_btrfs__chunk, ptr @trace_event_type_funcs_btrfs__chunk, ptr @print_fmt_btrfs__chunk, ptr @trace_event_fields_btrfs_cow_block, ptr @trace_event_type_funcs_btrfs_cow_block, ptr @print_fmt_btrfs_cow_block, ptr @trace_event_fields_btrfs_space_reservation, ptr @trace_event_type_funcs_btrfs_space_reservation, ptr @print_fmt_btrfs_space_reservation, ptr @trace_event_fields_btrfs_trigger_flush, ptr @trace_event_type_funcs_btrfs_trigger_flush, ptr @print_fmt_btrfs_trigger_flush, ptr @trace_event_fields_btrfs_flush_space, ptr @trace_event_type_funcs_btrfs_flush_space, ptr @print_fmt_btrfs_flush_space, ptr @trace_event_fields_btrfs__reserved_extent, ptr @trace_event_type_funcs_btrfs__reserved_extent, ptr @print_fmt_btrfs__reserved_extent, ptr @trace_event_fields_find_free_extent, ptr @trace_event_type_funcs_find_free_extent, ptr @print_fmt_find_free_extent, ptr @trace_event_fields_btrfs__reserve_extent, ptr @trace_event_type_funcs_btrfs__reserve_extent, ptr @print_fmt_btrfs__reserve_extent, ptr @trace_event_fields_btrfs_find_cluster, ptr @trace_event_type_funcs_btrfs_find_cluster, ptr @print_fmt_btrfs_find_cluster, ptr @trace_event_fields_btrfs_failed_cluster_setup, ptr @trace_event_type_funcs_btrfs_failed_cluster_setup, ptr @print_fmt_btrfs_failed_cluster_setup, ptr @trace_event_fields_btrfs_setup_cluster, ptr @trace_event_type_funcs_btrfs_setup_cluster, ptr @print_fmt_btrfs_setup_cluster, ptr @trace_event_fields_alloc_extent_state, ptr @trace_event_type_funcs_alloc_extent_state, ptr @print_fmt_alloc_extent_state, ptr @trace_event_fields_free_extent_state, ptr @trace_event_type_funcs_free_extent_state, ptr @print_fmt_free_extent_state, ptr @trace_event_fields_btrfs__work, ptr @trace_event_fields_btrfs__work__done, ptr @trace_event_type_funcs_btrfs__work, ptr @print_fmt_btrfs__work, ptr @trace_event_type_funcs_btrfs__work__done, ptr @print_fmt_btrfs__work__done, ptr @trace_event_fields_btrfs__workqueue, ptr @trace_event_type_funcs_btrfs__workqueue, ptr @print_fmt_btrfs__workqueue, ptr @trace_event_fields_btrfs__workqueue_done, ptr @trace_event_type_funcs_btrfs__workqueue_done, ptr @print_fmt_btrfs__workqueue_done, ptr @trace_event_fields_btrfs__qgroup_rsv_data, ptr @trace_event_type_funcs_btrfs__qgroup_rsv_data, ptr @print_fmt_btrfs__qgroup_rsv_data, ptr @trace_event_fields_btrfs_qgroup_extent, ptr @trace_event_type_funcs_btrfs_qgroup_extent, ptr @print_fmt_btrfs_qgroup_extent, ptr @trace_event_fields_qgroup_num_dirty_extents, ptr @trace_event_type_funcs_qgroup_num_dirty_extents, ptr @print_fmt_qgroup_num_dirty_extents, ptr @trace_event_fields_btrfs_qgroup_account_extent, ptr @trace_event_type_funcs_btrfs_qgroup_account_extent, ptr @print_fmt_btrfs_qgroup_account_extent, ptr @trace_event_fields_qgroup_update_counters, ptr @trace_event_type_funcs_qgroup_update_counters, ptr @print_fmt_qgroup_update_counters, ptr @trace_event_fields_qgroup_update_reserve, ptr @trace_event_type_funcs_qgroup_update_reserve, ptr @print_fmt_qgroup_update_reserve, ptr @trace_event_fields_qgroup_meta_reserve, ptr @trace_event_type_funcs_qgroup_meta_reserve, ptr @print_fmt_qgroup_meta_reserve, ptr @trace_event_fields_qgroup_meta_convert, ptr @trace_event_type_funcs_qgroup_meta_convert, ptr @print_fmt_qgroup_meta_convert, ptr @trace_event_fields_qgroup_meta_free_all_pertrans, ptr @trace_event_type_funcs_qgroup_meta_free_all_pertrans, ptr @print_fmt_qgroup_meta_free_all_pertrans, ptr @trace_event_fields_btrfs__prelim_ref, ptr @trace_event_type_funcs_btrfs__prelim_ref, ptr @print_fmt_btrfs__prelim_ref, ptr @trace_event_fields_btrfs_inode_mod_outstanding_extents, ptr @trace_event_type_funcs_btrfs_inode_mod_outstanding_extents, ptr @print_fmt_btrfs_inode_mod_outstanding_extents, ptr @trace_event_fields_btrfs__block_group, ptr @trace_event_type_funcs_btrfs__block_group, ptr @print_fmt_btrfs__block_group, ptr @trace_event_fields_btrfs_set_extent_bit, ptr @trace_event_type_funcs_btrfs_set_extent_bit, ptr @print_fmt_btrfs_set_extent_bit, ptr @trace_event_fields_btrfs_clear_extent_bit, ptr @trace_event_type_funcs_btrfs_clear_extent_bit, ptr @print_fmt_btrfs_clear_extent_bit, ptr @trace_event_fields_btrfs_convert_extent_bit, ptr @trace_event_type_funcs_btrfs_convert_extent_bit, ptr @print_fmt_btrfs_convert_extent_bit, ptr @trace_event_fields_btrfs_dump_space_info, ptr @trace_event_type_funcs_btrfs_dump_space_info, ptr @print_fmt_btrfs_dump_space_info, ptr @trace_event_fields_btrfs_reserve_ticket, ptr @trace_event_type_funcs_btrfs_reserve_ticket, ptr @print_fmt_btrfs_reserve_ticket, ptr @trace_event_fields_btrfs_sleep_tree_lock, ptr @trace_event_type_funcs_btrfs_sleep_tree_lock, ptr @print_fmt_btrfs_sleep_tree_lock, ptr @trace_event_fields_btrfs_locking_events, ptr @trace_event_type_funcs_btrfs_locking_events, ptr @print_fmt_btrfs_locking_events, ptr @trace_event_fields_btrfs__space_info_update, ptr @trace_event_type_funcs_btrfs__space_info_update, ptr @print_fmt_btrfs__space_info_update, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.67, ptr @.str.69, ptr @logtypes, ptr @printk_limits, ptr @.str.70, ptr @.str.72, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @tokens, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @btrfs_fs_type, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @trace_raw_output_btrfs_transaction_commit.symbols, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @trace_raw_output_btrfs__inode.symbols, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.191, ptr @trace_raw_output_btrfs_get_extent.symbols, ptr @trace_raw_output_btrfs_get_extent.symbols.192, ptr @.str.193, ptr @.str.194, ptr @.str.195, ptr @.str.196, ptr @trace_raw_output_btrfs_get_extent.__flags, ptr @.str.197, ptr @.str.198, ptr @.str.199, ptr @.str.200, ptr @.str.201, ptr @.str.202, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.206, ptr @.str.207, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @.str.212, ptr @.str.213, ptr @.str.214, ptr @.str.215, ptr @.str.216, ptr @.str.217, ptr @.str.218, ptr @.str.219, ptr @.str.220, ptr @.str.221, ptr @.str.222, ptr @.str.223, ptr @trace_raw_output_btrfs__file_extent_item_regular.symbols, ptr @trace_raw_output_btrfs__file_extent_item_regular.symbols.224, ptr @.str.225, ptr @.str.226, ptr @trace_raw_output_btrfs__file_extent_item_inline.symbols, ptr @trace_raw_output_btrfs__file_extent_item_inline.symbols.227, ptr @.str.228, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @.str.232, ptr @trace_raw_output_btrfs__ordered_extent.symbols, ptr @trace_raw_output_btrfs__ordered_extent.__flags, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @.str.242, ptr @.str.243, ptr @.str.244, ptr @.str.245, ptr @.str.246, ptr @.str.247, ptr @.str.248, ptr @.str.249, ptr @.str.250, ptr @.str.251, ptr @trace_raw_output_btrfs__writepage.symbols, ptr @.str.252, ptr @.str.253, ptr @.str.254, ptr @trace_raw_output_btrfs_writepage_end_io_hook.symbols, ptr @.str.255, ptr @.str.256, ptr @.str.257, ptr @trace_raw_output_btrfs_sync_file.symbols, ptr @.str.258, ptr @.str.259, ptr @.str.260, ptr @.str.261, ptr @.str.262, ptr @.str.263, ptr @.str.264, ptr @.str.265, ptr @trace_raw_output_btrfs_add_block_group.__flags, ptr @.str.266, ptr @.str.267, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @.str.271, ptr @.str.272, ptr @.str.273, ptr @.str.274, ptr @.str.275, ptr @.str.276, ptr @.str.277, ptr @.str.278, ptr @.str.279, ptr @.str.280, ptr @.str.281, ptr @trace_raw_output_btrfs_delayed_tree_ref.symbols, ptr @.str.282, ptr @.str.283, ptr @.str.284, ptr @.str.285, ptr @trace_raw_output_btrfs_delayed_tree_ref.symbols.286, ptr @trace_raw_output_btrfs_delayed_tree_ref.symbols.287, ptr @trace_raw_output_btrfs_delayed_tree_ref.symbols.288, ptr @.str.289, ptr @.str.290, ptr @.str.291, ptr @.str.292, ptr @.str.293, ptr @.str.294, ptr @.str.295, ptr @trace_raw_output_btrfs_delayed_data_ref.symbols, ptr @trace_raw_output_btrfs_delayed_data_ref.symbols.296, ptr @trace_raw_output_btrfs_delayed_data_ref.symbols.297, ptr @trace_raw_output_btrfs_delayed_data_ref.symbols.298, ptr @.str.299, ptr @.str.300, ptr @trace_raw_output_btrfs_delayed_ref_head.symbols, ptr @.str.301, ptr @.str.302, ptr @.str.303, ptr @trace_raw_output_btrfs__chunk.symbols, ptr @trace_raw_output_btrfs__chunk.__flags, ptr @.str.304, ptr @.str.305, ptr @.str.306, ptr @.str.307, ptr @.str.308, ptr @trace_raw_output_btrfs_cow_block.symbols, ptr @.str.309, ptr @.str.310, ptr @.str.311, ptr @.str.312, ptr @.str.313, ptr @.str.314, ptr @.str.315, ptr @.str.316, ptr @.str.317, ptr @.str.318, ptr @trace_raw_output_btrfs_trigger_flush.symbols, ptr @trace_raw_output_btrfs_trigger_flush.__flags, ptr @.str.319, ptr @.str.320, ptr @.str.321, ptr @.str.322, ptr @.str.323, ptr @trace_raw_output_btrfs_flush_space.symbols, ptr @.str.324, ptr @trace_raw_output_btrfs_flush_space.__flags, ptr @.str.325, ptr @trace_raw_output_btrfs__reserved_extent.symbols, ptr @.str.326, ptr @.str.327, ptr @.str.328, ptr @trace_raw_output_find_free_extent.symbols, ptr @trace_raw_output_find_free_extent.__flags, ptr @.str.329, ptr @.str.330, ptr @trace_raw_output_btrfs__reserve_extent.symbols, ptr @trace_raw_output_btrfs__reserve_extent.__flags, ptr @.str.331, ptr @.str.332, ptr @trace_raw_output_btrfs_find_cluster.__flags, ptr @.str.333, ptr @.str.334, ptr @.str.335, ptr @.str.336, ptr @trace_raw_output_btrfs_setup_cluster.__flags, ptr @.str.337, ptr @.str.338, ptr @.str.339, ptr @.str.340, ptr @.str.341, ptr @.str.342, ptr @trace_raw_output_alloc_extent_state.__flags, ptr @.str.343, ptr @.str.344, ptr @.str.345, ptr @.str.346, ptr @.str.347, ptr @.str.348, ptr @.str.349, ptr @.str.350, ptr @.str.351, ptr @.str.352, ptr @.str.353, ptr @.str.354, ptr @.str.355, ptr @.str.356, ptr @.str.357, ptr @.str.358, ptr @.str.359, ptr @.str.360, ptr @.str.361, ptr @.str.362, ptr @.str.363, ptr @.str.364, ptr @.str.365, ptr @.str.366, ptr @.str.367, ptr @.str.368, ptr @.str.369, ptr @.str.370, ptr @.str.371, ptr @.str.372, ptr @.str.373, ptr @.str.374, ptr @.str.375, ptr @.str.376, ptr @.str.377, ptr @.str.378, ptr @.str.379, ptr @.str.380, ptr @.str.381, ptr @.str.382, ptr @.str.383, ptr @.str.384, ptr @.str.385, ptr @.str.386, ptr @.str.387, ptr @.str.388, ptr @.str.389, ptr @.str.390, ptr @.str.391, ptr @.str.392, ptr @.str.393, ptr @.str.394, ptr @trace_raw_output_btrfs__workqueue.__flags, ptr @.str.395, ptr @.str.396, ptr @.str.397, ptr @.str.398, ptr @.str.399, ptr @.str.400, ptr @.str.401, ptr @trace_raw_output_btrfs__qgroup_rsv_data.__flags, ptr @.str.402, ptr @.str.403, ptr @.str.404, ptr @.str.405, ptr @.str.406, ptr @.str.407, ptr @.str.408, ptr @.str.409, ptr @.str.410, ptr @.str.411, ptr @.str.412, ptr @.str.413, ptr @.str.414, ptr @.str.415, ptr @.str.416, ptr @.str.417, ptr @.str.418, ptr @.str.419, ptr @trace_raw_output_qgroup_update_reserve.symbols, ptr @.str.420, ptr @.str.421, ptr @.str.422, ptr @.str.423, ptr @trace_raw_output_qgroup_meta_reserve.symbols, ptr @trace_raw_output_qgroup_meta_reserve.symbols.424, ptr @.str.425, ptr @trace_raw_output_qgroup_meta_convert.symbols, ptr @trace_raw_output_qgroup_meta_convert.symbols.426, ptr @trace_raw_output_qgroup_meta_convert.symbols.427, ptr @trace_raw_output_qgroup_meta_free_all_pertrans.symbols, ptr @trace_raw_output_qgroup_meta_free_all_pertrans.symbols.428, ptr @.str.429, ptr @.str.430, ptr @.str.431, ptr @.str.432, ptr @.str.433, ptr @.str.434, ptr @.str.435, ptr @.str.436, ptr @trace_raw_output_btrfs_inode_mod_outstanding_extents.symbols, ptr @.str.437, ptr @.str.438, ptr @trace_raw_output_btrfs__block_group.__flags, ptr @.str.439, ptr @.str.440, ptr @.str.441, ptr @trace_raw_output_btrfs_set_extent_bit.symbols, ptr @.str.442, ptr @.str.443, ptr @.str.444, ptr @.str.445, ptr @.str.446, ptr @.str.447, ptr @.str.448, ptr @.str.449, ptr @.str.450, ptr @.str.451, ptr @.str.452, ptr @trace_raw_output_btrfs_set_extent_bit.__flags, ptr @.str.453, ptr @.str.454, ptr @.str.455, ptr @.str.456, ptr @.str.457, ptr @.str.458, ptr @.str.459, ptr @.str.460, ptr @.str.461, ptr @.str.462, ptr @.str.463, ptr @.str.464, ptr @.str.465, ptr @.str.466, ptr @.str.467, ptr @.str.468, ptr @trace_raw_output_btrfs_clear_extent_bit.symbols, ptr @trace_raw_output_btrfs_clear_extent_bit.__flags, ptr @.str.469, ptr @trace_raw_output_btrfs_convert_extent_bit.symbols, ptr @trace_raw_output_btrfs_convert_extent_bit.__flags, ptr @trace_raw_output_btrfs_convert_extent_bit.__flags.470, ptr @.str.471, ptr @.str.472, ptr @.str.473, ptr @.str.474, ptr @.str.475, ptr @.str.476, ptr @.str.477, ptr @.str.478, ptr @.str.479, ptr @.str.480, ptr @.str.481, ptr @.str.482, ptr @.str.483, ptr @.str.484, ptr @.str.485, ptr @trace_raw_output_btrfs_dump_space_info.__flags, ptr @.str.486, ptr @.str.487, ptr @.str.488, ptr @trace_raw_output_btrfs_reserve_ticket.__flags, ptr @trace_raw_output_btrfs_reserve_ticket.symbols, ptr @.str.489, ptr @.str.490, ptr @.str.491, ptr @.str.492, ptr @.str.493, ptr @.str.494, ptr @.str.495, ptr @.str.496, ptr @trace_raw_output_btrfs__space_info_update.__flags, ptr @.str.497, ptr @.str.498, ptr @.str.499, ptr @.str.500, ptr @.str.501, ptr @.str.502, ptr @.str.503, ptr @.str.504, ptr @.str.505, ptr @.str.506, ptr @.str.507, ptr @.str.508, ptr @.str.509, ptr @.str.510, ptr @.str.511, ptr @.str.512, ptr @.str.513, ptr @.str.514, ptr @.str.515, ptr @.str.516, ptr @.str.517, ptr @.str.518, ptr @.str.519, ptr @.str.520, ptr @.str.521, ptr @.str.522, ptr @.str.523, ptr @.str.524, ptr @.str.525, ptr @.str.526, ptr @.str.527, ptr @.str.528, ptr @.str.529, ptr @.str.530, ptr @.str.531, ptr @.str.532, ptr @.str.533, ptr @.str.534, ptr @.str.535, ptr @.str.536, ptr @.str.537, ptr @.str.538, ptr @.str.539, ptr @.str.540, ptr @.str.541, ptr @.str.542, ptr @.str.543, ptr @.str.544, ptr @.str.545, ptr @.str.546, ptr @.str.547, ptr @.str.548, ptr @.str.549, ptr @.str.550, ptr @.str.551, ptr @.str.552, ptr @.str.553, ptr @.str.554, ptr @.str.555, ptr @.str.556, ptr @.str.557, ptr @.str.558, ptr @.str.559, ptr @.str.560, ptr @.str.561, ptr @.str.562, ptr @.str.563, ptr @.str.564, ptr @.str.565, ptr @.str.566, ptr @.str.567, ptr @.str.568, ptr @rescue_tokens, ptr @.str.569, ptr @.str.570, ptr @.str.571, ptr @.str.572, ptr @.str.573, ptr @.str.574, ptr @.str.575, ptr @.str.576, ptr @.str.577, ptr @.str.578, ptr @.str.579, ptr @.str.580, ptr @.str.581, ptr @btrfs_misc, ptr @.str.582, ptr @btrfs_ctl_fops, ptr @btrfs_root_fs_type, ptr @.str.583, ptr @.str.584, ptr @.str.585, ptr @btrfs_super_ops, ptr @.str.586, ptr @.str.587, ptr @.str.588, ptr @.str.589, ptr @.str.590, ptr @.str.591, ptr @.str.592, ptr @.str.593, ptr @.str.594, ptr @.str.595, ptr @.str.596, ptr @.str.597, ptr @.str.598, ptr @.str.599, ptr @.str.600, ptr @.str.601, ptr @.str.602, ptr @.str.603, ptr @.str.604, ptr @.str.605, ptr @.str.606, ptr @.str.607, ptr @.str.608, ptr @.str.609, ptr @.str.610, ptr @.str.611, ptr @.str.612, ptr @.str.613, ptr @.str.614, ptr @.str.615, ptr @.str.616, ptr @.str.617, ptr @.str.618, ptr @.str.619, ptr @.str.620, ptr @.str.621, ptr @.str.622, ptr @.str.623, ptr @.str.624, ptr @.str.625, ptr @.str.626, ptr @.str.627, ptr @.str.628, ptr @.str.629, ptr @.str.630, ptr @.str.631, ptr @.str.632, ptr @.str.633, ptr @.str.634, ptr @.str.635, ptr @.str.636, ptr @.str.637, ptr @.str.638, ptr @.str.639, ptr @.str.640, ptr @.str.641, ptr @.str.642, ptr @.str.643, ptr @.str.644, ptr @btrfs_print_mod_info.options, ptr @.str.645, ptr @.str.646], section "llvm.metadata"
@0 = internal global [946 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__btrfs__trace_system_name to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.748 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.748 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.748 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_transaction_commit to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_transaction_commit to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_transaction_commit to i32), i32 647, i32 832, i32 ptrtoint (ptr @___asan_gen_.821 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_transaction_commit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs__inode to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs__inode to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.830 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs__inode to i32), i32 796, i32 992, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_inode_new to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_inode_request to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.839 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_inode_evict to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_get_extent to i32), i32 288, i32 352, i32 ptrtoint (ptr @___asan_gen_.845 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_get_extent to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_get_extent to i32), i32 1440, i32 1792, i32 ptrtoint (ptr @___asan_gen_.851 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_get_extent to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_handle_em_exist to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_handle_em_exist to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_handle_em_exist to i32), i32 170, i32 224, i32 ptrtoint (ptr @___asan_gen_.863 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_handle_em_exist to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs__file_extent_item_regular to i32), i32 360, i32 448, i32 ptrtoint (ptr @___asan_gen_.869 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs__file_extent_item_inline to i32), i32 240, i32 288, i32 ptrtoint (ptr @___asan_gen_.872 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs__file_extent_item_regular to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.875 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs__file_extent_item_regular to i32), i32 1105, i32 1376, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_get_extent_show_fi_regular to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.881 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_truncate_show_fi_regular to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs__file_extent_item_inline to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.887 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs__file_extent_item_inline to i32), i32 934, i32 1184, i32 ptrtoint (ptr @___asan_gen_.890 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_get_extent_show_fi_inline to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.893 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.895 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_truncate_show_fi_inline to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.898 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs__ordered_extent to i32), i32 312, i32 384, i32 ptrtoint (ptr @___asan_gen_.899 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs__ordered_extent to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs__ordered_extent to i32), i32 1324, i32 1664, i32 ptrtoint (ptr @___asan_gen_.905 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_ordered_extent_add to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.910 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_ordered_extent_remove to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.911 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.913 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_ordered_extent_start to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.914 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_ordered_extent_put to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.917 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs__writepage to i32), i32 312, i32 384, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs__writepage to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.923 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs__writepage to i32), i32 948, i32 1184, i32 ptrtoint (ptr @___asan_gen_.926 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event___extent_writepage to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.929 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.931 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_writepage_end_io_hook to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_writepage_end_io_hook to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.935 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_writepage_end_io_hook to i32), i32 709, i32 896, i32 ptrtoint (ptr @___asan_gen_.938 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_writepage_end_io_hook to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.941 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_sync_file to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.944 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_sync_file to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_sync_file to i32), i32 692, i32 864, i32 ptrtoint (ptr @___asan_gen_.950 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_sync_file to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.953 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_sync_fs to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_sync_fs to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.959 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_sync_fs to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_sync_fs to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.965 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_add_block_group to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.968 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_add_block_group to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.971 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_add_block_group to i32), i32 468, i32 576, i32 ptrtoint (ptr @___asan_gen_.974 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_add_block_group to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.977 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_delayed_tree_ref to i32), i32 240, i32 288, i32 ptrtoint (ptr @___asan_gen_.980 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_delayed_tree_ref to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.983 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_delayed_tree_ref to i32), i32 1594, i32 1984, i32 ptrtoint (ptr @___asan_gen_.986 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_add_delayed_tree_ref to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.989 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.991 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_run_delayed_tree_ref to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_delayed_data_ref to i32), i32 264, i32 352, i32 ptrtoint (ptr @___asan_gen_.995 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_delayed_data_ref to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.998 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_delayed_data_ref to i32), i32 1621, i32 2016, i32 ptrtoint (ptr @___asan_gen_.1001 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_add_delayed_data_ref to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1004 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1006 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_run_delayed_data_ref to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1007 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_delayed_ref_head to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.1010 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_delayed_ref_head to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1013 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_delayed_ref_head to i32), i32 252, i32 288, i32 ptrtoint (ptr @___asan_gen_.1016 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_add_delayed_ref_head to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1019 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1021 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_run_delayed_ref_head to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1022 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs__chunk to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs__chunk to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1028 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs__chunk to i32), i32 1005, i32 1248, i32 ptrtoint (ptr @___asan_gen_.1031 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_chunk_alloc to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1034 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1036 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_chunk_free to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1039 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_cow_block to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.1040 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_cow_block to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1043 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_cow_block to i32), i32 762, i32 928, i32 ptrtoint (ptr @___asan_gen_.1046 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_cow_block to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1049 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_space_reservation to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_space_reservation to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1055 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_space_reservation to i32), i32 112, i32 160, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_space_reservation to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_trigger_flush to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_trigger_flush to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1067 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_trigger_flush to i32), i32 650, i32 832, i32 ptrtoint (ptr @___asan_gen_.1070 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_trigger_flush to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1073 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_flush_space to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.1076 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_flush_space to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1079 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_flush_space to i32), i32 920, i32 1152, i32 ptrtoint (ptr @___asan_gen_.1082 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_flush_space to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1085 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs__reserved_extent to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1088 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs__reserved_extent to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs__reserved_extent to i32), i32 593, i32 736, i32 ptrtoint (ptr @___asan_gen_.1094 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_reserved_extent_alloc to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1097 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1099 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_reserved_extent_free to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1100 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1102 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_find_free_extent to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.1103 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_find_free_extent to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1106 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_find_free_extent to i32), i32 978, i32 1216, i32 ptrtoint (ptr @___asan_gen_.1109 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_find_free_extent to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1112 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs__reserve_extent to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.1115 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs__reserve_extent to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1118 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs__reserve_extent to i32), i32 929, i32 1184, i32 ptrtoint (ptr @___asan_gen_.1121 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_reserve_extent to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1124 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_reserve_extent_cluster to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1127 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1129 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_find_cluster to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.1130 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_find_cluster to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1133 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_find_cluster to i32), i32 462, i32 576, i32 ptrtoint (ptr @___asan_gen_.1136 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_find_cluster to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1139 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_failed_cluster_setup to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1142 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_failed_cluster_setup to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1145 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_failed_cluster_setup to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1148 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_failed_cluster_setup to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1151 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_setup_cluster to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.1154 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_setup_cluster to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1157 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_setup_cluster to i32), i32 457, i32 576, i32 ptrtoint (ptr @___asan_gen_.1160 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_setup_cluster to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1163 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_alloc_extent_state to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1166 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_alloc_extent_state to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1169 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_alloc_extent_state to i32), i32 3018, i32 3776, i32 ptrtoint (ptr @___asan_gen_.1172 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_alloc_extent_state to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1175 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_free_extent_state to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1178 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_free_extent_state to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1181 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_free_extent_state to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1184 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_free_extent_state to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1187 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs__work to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.1190 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs__work__done to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1193 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2647 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs__work to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1196 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs__work to i32), i32 177, i32 224, i32 ptrtoint (ptr @___asan_gen_.1199 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_work_queued to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1202 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_work_sched to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1205 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1207 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs__work__done to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1208 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2647 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs__work__done to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1211 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2647 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_all_work_done to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1214 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_ordered_sched to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1217 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1219 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs__workqueue to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1220 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs__workqueue to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1223 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs__workqueue to i32), i32 115, i32 160, i32 ptrtoint (ptr @___asan_gen_.1226 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_workqueue_alloc to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1229 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs__workqueue_done to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1232 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs__workqueue_done to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1235 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs__workqueue_done to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1238 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_workqueue_destroy to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1241 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs__qgroup_rsv_data to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.1244 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs__qgroup_rsv_data to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1247 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs__qgroup_rsv_data to i32), i32 246, i32 288, i32 ptrtoint (ptr @___asan_gen_.1250 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_qgroup_reserve_data to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1253 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_qgroup_release_data to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_qgroup_extent to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1259 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_qgroup_extent to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1262 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_qgroup_extent to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.1265 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_qgroup_account_extents to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1268 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_qgroup_trace_extent to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1271 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_qgroup_num_dirty_extents to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1274 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_qgroup_num_dirty_extents to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1277 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_qgroup_num_dirty_extents to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.1280 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_qgroup_num_dirty_extents to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1283 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_qgroup_account_extent to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.1286 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2707 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_qgroup_account_extent to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1289 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2707 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_qgroup_account_extent to i32), i32 175, i32 224, i32 ptrtoint (ptr @___asan_gen_.1292 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2707 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_qgroup_account_extent to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1295 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2707 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_qgroup_update_counters to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.1298 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_qgroup_update_counters to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1301 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_qgroup_update_counters to i32), i32 175, i32 224, i32 ptrtoint (ptr @___asan_gen_.1304 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_qgroup_update_counters to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1307 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_qgroup_update_reserve to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.1310 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_qgroup_update_reserve to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1313 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_qgroup_update_reserve to i32), i32 269, i32 352, i32 ptrtoint (ptr @___asan_gen_.1316 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_qgroup_update_reserve to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1319 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_qgroup_meta_reserve to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1322 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_qgroup_meta_reserve to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_qgroup_meta_reserve to i32), i32 787, i32 992, i32 ptrtoint (ptr @___asan_gen_.1328 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_qgroup_meta_reserve to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1331 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_qgroup_meta_convert to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1334 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_qgroup_meta_convert to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_qgroup_meta_convert to i32), i32 997, i32 1248, i32 ptrtoint (ptr @___asan_gen_.1340 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_qgroup_meta_convert to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1343 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_qgroup_meta_free_all_pertrans to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_qgroup_meta_free_all_pertrans to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1349 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_qgroup_meta_free_all_pertrans to i32), i32 787, i32 992, i32 ptrtoint (ptr @___asan_gen_.1352 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_qgroup_meta_free_all_pertrans to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1355 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs__prelim_ref to i32), i32 288, i32 352, i32 ptrtoint (ptr @___asan_gen_.1358 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2794 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs__prelim_ref to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1361 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2794 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs__prelim_ref to i32), i32 293, i32 384, i32 ptrtoint (ptr @___asan_gen_.1364 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2794 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_prelim_ref_merge to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1367 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1369 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_prelim_ref_insert to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1370 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_inode_mod_outstanding_extents to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_inode_mod_outstanding_extents to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1376 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_inode_mod_outstanding_extents to i32), i32 657, i32 832, i32 ptrtoint (ptr @___asan_gen_.1379 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_inode_mod_outstanding_extents to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1382 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs__block_group to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs__block_group to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1388 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs__block_group to i32), i32 372, i32 448, i32 ptrtoint (ptr @___asan_gen_.1391 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_remove_block_group to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1394 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_add_unused_block_group to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1397 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1399 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_add_reclaim_block_group to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1400 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_reclaim_block_group to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1403 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_skip_unused_block_group to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1406 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1408 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_set_extent_bit to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.1409 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_set_extent_bit to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1412 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_set_extent_bit to i32), i32 1094, i32 1376, i32 ptrtoint (ptr @___asan_gen_.1415 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_set_extent_bit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1418 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_clear_extent_bit to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.1421 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_clear_extent_bit to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1424 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_clear_extent_bit to i32), i32 1098, i32 1376, i32 ptrtoint (ptr @___asan_gen_.1427 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_clear_extent_bit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1430 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_convert_extent_bit to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.1433 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2926 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_convert_extent_bit to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1436 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2926 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_convert_extent_bit to i32), i32 1556, i32 1952, i32 ptrtoint (ptr @___asan_gen_.1439 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2926 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_convert_extent_bit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1442 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2926 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_dump_space_info to i32), i32 432, i32 544, i32 ptrtoint (ptr @___asan_gen_.1445 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_dump_space_info to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1448 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_dump_space_info to i32), i32 879, i32 1088, i32 ptrtoint (ptr @___asan_gen_.1451 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_done_preemptive_reclaim to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1454 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_fail_all_tickets to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1457 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_reserve_ticket to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.1460 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2989 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_reserve_ticket to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1463 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2989 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_reserve_ticket to i32), i32 628, i32 768, i32 ptrtoint (ptr @___asan_gen_.1466 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2989 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_reserve_ticket to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1469 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2989 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_sleep_tree_lock to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.1472 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_sleep_tree_lock to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1475 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_sleep_tree_lock to i32), i32 211, i32 256, i32 ptrtoint (ptr @___asan_gen_.1478 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_tree_read_lock to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1481 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_tree_lock to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1484 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1486 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs_locking_events to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.1487 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3007 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs_locking_events to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1490 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3007 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs_locking_events to i32), i32 130, i32 192, i32 ptrtoint (ptr @___asan_gen_.1493 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3007 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_tree_unlock to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1496 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_tree_read_unlock to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1499 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_tree_read_unlock_blocking to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_set_lock_blocking_read to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1505 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1507 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_set_lock_blocking_write to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1508 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_try_tree_read_lock to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1511 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_try_tree_write_lock to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1514 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_btrfs_tree_read_lock_atomic to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1517 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_btrfs__space_info_update to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.1520 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3016 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_btrfs__space_info_update to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1523 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3016 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_btrfs__space_info_update to i32), i32 324, i32 416, i32 ptrtoint (ptr @___asan_gen_.1526 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3016 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_update_bytes_may_use to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1529 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_update_bytes_pinned to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1532 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1555 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1576 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @logtypes to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1580 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @printk_limits to i32), i32 544, i32 672, i32 ptrtoint (ptr @___asan_gen_.1583 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_printk._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3482 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_printk._entry.71 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3482 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 91, i32 128, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1609 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1615 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tokens to i32), i32 472, i32 576, i32 ptrtoint (ptr @___asan_gen_.1631 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1663 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1693 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1699 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1702 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1708 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1711 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1717 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1720 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1726 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1732 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1738 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1744 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1747 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1753 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1762 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1768 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1789 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1795 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1810 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1816 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1819 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1825 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_fs_type to i32), i32 116, i32 160, i32 ptrtoint (ptr @___asan_gen_.1841 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_transaction_commit.symbols to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 101, i32 160, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs__inode.symbols to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 135, i32 192, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_get_extent.symbols to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_get_extent.symbols.192 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_get_extent.__flags to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 197, i32 256, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs__file_extent_item_regular.symbols to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs__file_extent_item_regular.symbols.224 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 117, i32 160, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs__file_extent_item_inline.symbols to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs__file_extent_item_inline.symbols.227 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 149, i32 192, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs__ordered_extent.symbols to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs__ordered_extent.__flags to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.251 to i32), i32 176, i32 224, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs__writepage.symbols to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.252 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_writepage_end_io_hook.symbols to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_sync_file.symbols to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.261 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 98, i32 160, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_add_block_group.__flags to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.267 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.269 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.270 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.272 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.273 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.274 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.275 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.276 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.277 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.278 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.279 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.281 to i32), i32 103, i32 160, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_delayed_tree_ref.symbols to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.283 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.284 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_delayed_tree_ref.symbols.286 to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_delayed_tree_ref.symbols.287 to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_delayed_tree_ref.symbols.288 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.289 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.290 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.291 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.292 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.293 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.294 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.295 to i32), i32 117, i32 160, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_delayed_data_ref.symbols to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_delayed_data_ref.symbols.296 to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_delayed_data_ref.symbols.297 to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_delayed_data_ref.symbols.298 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.299 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.300 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_delayed_ref_head.symbols to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.301 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.302 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.303 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs__chunk.symbols to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs__chunk.__flags to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.304 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.305 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.306 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.307 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.308 to i32), i32 86, i32 128, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_cow_block.symbols to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.309 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.310 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.311 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.312 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.313 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.314 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.315 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.316 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.317 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.318 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_trigger_flush.symbols to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_trigger_flush.__flags to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.319 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.320 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.321 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.322 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.323 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_flush_space.symbols to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.324 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_flush_space.__flags to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.325 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs__reserved_extent.symbols to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.326 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.327 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.328 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_find_free_extent.symbols to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_find_free_extent.__flags to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.329 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.330 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs__reserve_extent.symbols to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs__reserve_extent.__flags to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.331 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.332 to i32), i32 89, i32 128, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_find_cluster.__flags to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.333 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.334 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.335 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.336 to i32), i32 90, i32 128, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_setup_cluster.__flags to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.337 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.338 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.339 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.340 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.341 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.342 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_alloc_extent_state.__flags to i32), i32 304, i32 384, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.343 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.344 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.345 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.346 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.347 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.348 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.349 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.350 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.351 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.352 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.353 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.354 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.355 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.356 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.357 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.358 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.359 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.360 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.361 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.362 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.363 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.364 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.365 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.366 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.367 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.368 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.369 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.370 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.371 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.372 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.373 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.374 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.375 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.376 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.377 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.378 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.379 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.380 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.381 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.382 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.383 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.384 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.385 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.386 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.387 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.388 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.389 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2647 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.390 to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.391 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2647 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.392 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.393 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.394 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs__workqueue.__flags to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.395 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.396 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.397 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.398 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.399 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.400 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.401 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs__qgroup_rsv_data.__flags to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.402 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.403 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.404 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.405 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.406 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.407 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2707 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.408 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2707 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.409 to i32), i32 82, i32 128, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2707 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.410 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.411 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.412 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.413 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.414 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.415 to i32), i32 82, i32 128, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.416 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.417 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.418 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.419 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_qgroup_update_reserve.symbols to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.420 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.421 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.422 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.423 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_qgroup_meta_reserve.symbols to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_qgroup_meta_reserve.symbols.424 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.425 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_qgroup_meta_convert.symbols to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_qgroup_meta_convert.symbols.426 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_qgroup_meta_convert.symbols.427 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_qgroup_meta_free_all_pertrans.symbols to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_qgroup_meta_free_all_pertrans.symbols.428 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.429 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2794 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.430 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2794 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.431 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2794 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.432 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2794 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.433 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2794 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.434 to i32), i32 109, i32 160, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2794 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.435 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.436 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_inode_mod_outstanding_extents.symbols to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.437 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.438 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs__block_group.__flags to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.439 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.440 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.441 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_set_extent_bit.symbols to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.442 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.443 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.444 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.445 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.446 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.447 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.448 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.449 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.450 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.451 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.452 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_set_extent_bit.__flags to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.453 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.454 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.455 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.456 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.457 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.458 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.459 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.460 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.461 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.462 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.463 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.464 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.465 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.466 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.467 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.468 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_clear_extent_bit.symbols to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_clear_extent_bit.__flags to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.469 to i32), i32 82, i32 128, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2926 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_convert_extent_bit.symbols to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2926 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_convert_extent_bit.__flags to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2926 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_convert_extent_bit.__flags.470 to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2926 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.471 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.472 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.473 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.474 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.475 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.476 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.477 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.478 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.479 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.480 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.481 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.482 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.483 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.484 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.485 to i32), i32 303, i32 384, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_dump_space_info.__flags to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.486 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2989 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.487 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2989 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.488 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2989 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_reserve_ticket.__flags to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2989 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs_reserve_ticket.symbols to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2987 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2989 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.489 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.490 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.491 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.492 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.493 to i32), i32 98, i32 160, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.494 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3007 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.495 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3016 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.496 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3016 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_btrfs__space_info_update.__flags to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3014 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3016 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.497 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3019 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.498 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3022 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.499 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3025 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.500 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.501 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3031 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.502 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3034 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.503 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3037 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.504 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3040 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.505 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3043 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.506 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3046 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.507 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3049 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.508 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3052 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.509 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3055 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.510 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3058 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.511 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3061 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.512 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3064 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.513 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3067 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.514 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3070 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.515 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3073 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.516 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3076 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.517 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3079 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.518 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3082 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.519 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3085 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.520 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3088 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.521 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3091 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.522 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3094 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.523 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3097 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.524 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3100 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.525 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3103 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.526 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3106 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.527 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3109 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.528 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3112 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.529 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3115 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.530 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3118 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.531 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3121 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.532 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3124 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.533 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3127 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.534 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3130 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.535 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.536 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3136 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.537 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.538 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3142 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.539 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3145 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.540 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.541 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.542 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3154 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.543 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.544 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.545 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.546 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3166 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.547 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.548 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3172 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.549 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.550 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.551 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3181 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.552 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3184 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.553 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.554 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.555 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.556 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.557 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.558 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.559 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.560 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.561 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.562 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.563 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.564 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.565 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.566 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.567 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.568 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rescue_tokens to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3233 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.569 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.570 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.571 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3244 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.572 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.573 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.574 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.575 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.576 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.577 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.578 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.579 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.580 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.581 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_misc to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3275 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.582 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_ctl_fops to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.3281 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_root_fs_type to i32), i32 116, i32 160, i32 ptrtoint (ptr @___asan_gen_.3284 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.583 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.584 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.585 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_super_ops to i32), i32 100, i32 160, i32 ptrtoint (ptr @___asan_gen_.3296 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.586 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3301 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.587 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3304 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.588 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.589 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @assertfail._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3482 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.590 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.591 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.592 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.593 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.594 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.595 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.596 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.597 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.598 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.599 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.600 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.601 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.602 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.603 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.604 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.605 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.606 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.607 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.608 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.609 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.610 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.611 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.612 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.613 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3385 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.614 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.615 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.616 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.617 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.618 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.619 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.620 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3406 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.621 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.622 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.623 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.624 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.625 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.626 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.627 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.628 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3430 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.629 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.630 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.631 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.632 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.633 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.634 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3448 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.635 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.636 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.637 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.638 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.639 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.640 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.641 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.642 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.643 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.644 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3478 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_print_mod_info.options to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.3479 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_print_mod_info._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3482 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.645 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.646 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3488 to i32), i32 ptrtoint (ptr @___asan_gen_.3489 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3490 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_transaction_commit(ptr nocapture readnone %__data, ptr noundef %fs_info) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_transaction_commit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_inode_new(ptr nocapture readnone %__data, ptr noundef %inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_inode_new, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_inode_request(ptr nocapture readnone %__data, ptr noundef %inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_inode_request, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_inode_evict(ptr nocapture readnone %__data, ptr noundef %inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_inode_evict, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_get_extent(ptr nocapture readnone %__data, ptr noundef %root, ptr noundef %inode, ptr noundef %map) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_get_extent, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %root, ptr noundef %inode, ptr noundef %map) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_handle_em_exist(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %existing, ptr noundef %map, i64 noundef %start, i64 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_handle_em_exist, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %existing, ptr noundef %map, i64 noundef %start, i64 noundef %len) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_get_extent_show_fi_regular(ptr nocapture readnone %__data, ptr noundef %bi, ptr noundef %l, ptr noundef %fi, i64 noundef %start) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_get_extent_show_fi_regular, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %bi, ptr noundef %l, ptr noundef %fi, i64 noundef %start) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_truncate_show_fi_regular(ptr nocapture readnone %__data, ptr noundef %bi, ptr noundef %l, ptr noundef %fi, i64 noundef %start) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_truncate_show_fi_regular, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %bi, ptr noundef %l, ptr noundef %fi, i64 noundef %start) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_get_extent_show_fi_inline(ptr nocapture readnone %__data, ptr noundef %bi, ptr noundef %l, ptr noundef %fi, i32 noundef %slot, i64 noundef %start) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_get_extent_show_fi_inline, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %bi, ptr noundef %l, ptr noundef %fi, i32 noundef %slot, i64 noundef %start) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_truncate_show_fi_inline(ptr nocapture readnone %__data, ptr noundef %bi, ptr noundef %l, ptr noundef %fi, i32 noundef %slot, i64 noundef %start) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_truncate_show_fi_inline, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %bi, ptr noundef %l, ptr noundef %fi, i32 noundef %slot, i64 noundef %start) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_ordered_extent_add(ptr nocapture readnone %__data, ptr noundef %inode, ptr noundef %ordered) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_ordered_extent_add, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, ptr noundef %ordered) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_ordered_extent_remove(ptr nocapture readnone %__data, ptr noundef %inode, ptr noundef %ordered) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_ordered_extent_remove, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, ptr noundef %ordered) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_ordered_extent_start(ptr nocapture readnone %__data, ptr noundef %inode, ptr noundef %ordered) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_ordered_extent_start, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, ptr noundef %ordered) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_ordered_extent_put(ptr nocapture readnone %__data, ptr noundef %inode, ptr noundef %ordered) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_ordered_extent_put, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, ptr noundef %ordered) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter___extent_writepage(ptr nocapture readnone %__data, ptr noundef %page, ptr noundef %inode, ptr noundef %wbc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint___extent_writepage, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %page, ptr noundef %inode, ptr noundef %wbc) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_writepage_end_io_hook(ptr nocapture readnone %__data, ptr noundef %inode, i64 noundef %start, i64 noundef %end, i32 noundef %uptodate) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_writepage_end_io_hook, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, i64 noundef %start, i64 noundef %end, i32 noundef %uptodate) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_sync_file(ptr nocapture readnone %__data, ptr noundef %file, i32 noundef %datasync) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_sync_file, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %file, i32 noundef %datasync) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_sync_fs(ptr nocapture readnone %__data, ptr noundef %fs_info, i32 noundef %wait) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_sync_fs, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, i32 noundef %wait) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_add_block_group(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %block_group, i32 noundef %create) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_add_block_group, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %block_group, i32 noundef %create) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_add_delayed_tree_ref(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %ref, ptr noundef %full_ref, i32 noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_add_delayed_tree_ref, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %ref, ptr noundef %full_ref, i32 noundef %action) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_run_delayed_tree_ref(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %ref, ptr noundef %full_ref, i32 noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_run_delayed_tree_ref, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %ref, ptr noundef %full_ref, i32 noundef %action) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_add_delayed_data_ref(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %ref, ptr noundef %full_ref, i32 noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_add_delayed_data_ref, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %ref, ptr noundef %full_ref, i32 noundef %action) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_run_delayed_data_ref(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %ref, ptr noundef %full_ref, i32 noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_run_delayed_data_ref, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %ref, ptr noundef %full_ref, i32 noundef %action) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_add_delayed_ref_head(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %head_ref, i32 noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_add_delayed_ref_head, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %head_ref, i32 noundef %action) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_run_delayed_ref_head(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %head_ref, i32 noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_run_delayed_ref_head, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %head_ref, i32 noundef %action) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_chunk_alloc(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %map, i64 noundef %offset, i64 noundef %size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_chunk_alloc, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %map, i64 noundef %offset, i64 noundef %size) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_chunk_free(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %map, i64 noundef %offset, i64 noundef %size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_chunk_free, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %map, i64 noundef %offset, i64 noundef %size) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_cow_block(ptr nocapture readnone %__data, ptr noundef %root, ptr noundef %buf, ptr noundef %cow) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_cow_block, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %root, ptr noundef %buf, ptr noundef %cow) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_space_reservation(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %type, i64 noundef %val, i64 noundef %bytes, i32 noundef %reserve) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_space_reservation, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %type, i64 noundef %val, i64 noundef %bytes, i32 noundef %reserve) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_trigger_flush(ptr nocapture readnone %__data, ptr noundef %fs_info, i64 noundef %flags, i64 noundef %bytes, i32 noundef %flush, ptr noundef %reason) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_trigger_flush, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, i64 noundef %flags, i64 noundef %bytes, i32 noundef %flush, ptr noundef %reason) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_flush_space(ptr nocapture readnone %__data, ptr noundef %fs_info, i64 noundef %flags, i64 noundef %num_bytes, i32 noundef %state, i32 noundef %ret, i1 noundef zeroext %for_preempt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_flush_space, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, i64 noundef %flags, i64 noundef %num_bytes, i32 noundef %state, i32 noundef %ret, i1 noundef zeroext %for_preempt) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool10.not = icmp eq ptr %6, null
  br i1 %tobool10.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_reserved_extent_alloc(ptr nocapture readnone %__data, ptr noundef %fs_info, i64 noundef %start, i64 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_reserved_extent_alloc, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, i64 noundef %start, i64 noundef %len) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_reserved_extent_free(ptr nocapture readnone %__data, ptr noundef %fs_info, i64 noundef %start, i64 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_reserved_extent_free, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, i64 noundef %start, i64 noundef %len) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_find_free_extent(ptr nocapture readnone %__data, ptr noundef %root, i64 noundef %num_bytes, i64 noundef %empty_size, i64 noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_find_free_extent, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data7 = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data7 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data7, align 4
  tail call void %2(ptr noundef %4, ptr noundef %root, i64 noundef %num_bytes, i64 noundef %empty_size, i64 noundef %data) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool10.not = icmp eq ptr %6, null
  br i1 %tobool10.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_reserve_extent(ptr nocapture readnone %__data, ptr noundef %block_group, i64 noundef %start, i64 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_reserve_extent, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %block_group, i64 noundef %start, i64 noundef %len) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_reserve_extent_cluster(ptr nocapture readnone %__data, ptr noundef %block_group, i64 noundef %start, i64 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_reserve_extent_cluster, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %block_group, i64 noundef %start, i64 noundef %len) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_find_cluster(ptr nocapture readnone %__data, ptr noundef %block_group, i64 noundef %start, i64 noundef %bytes, i64 noundef %empty_size, i64 noundef %min_bytes) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_find_cluster, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %block_group, i64 noundef %start, i64 noundef %bytes, i64 noundef %empty_size, i64 noundef %min_bytes) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_failed_cluster_setup(ptr nocapture readnone %__data, ptr noundef %block_group) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_failed_cluster_setup, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %block_group) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_setup_cluster(ptr nocapture readnone %__data, ptr noundef %block_group, ptr noundef %cluster, i64 noundef %size, i32 noundef %bitmap) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_setup_cluster, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %block_group, ptr noundef %cluster, i64 noundef %size, i32 noundef %bitmap) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_alloc_extent_state(ptr nocapture readnone %__data, ptr noundef %state, i32 noundef %mask, i32 noundef %IP) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_alloc_extent_state, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %state, i32 noundef %mask, i32 noundef %IP) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_free_extent_state(ptr nocapture readnone %__data, ptr noundef %state, i32 noundef %IP) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_free_extent_state, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %state, i32 noundef %IP) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_work_queued(ptr nocapture readnone %__data, ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_work_queued, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %work) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_work_sched(ptr nocapture readnone %__data, ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_work_sched, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %work) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_all_work_done(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %wtag) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_all_work_done, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %wtag) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_ordered_sched(ptr nocapture readnone %__data, ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_ordered_sched, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %work) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_workqueue_alloc(ptr nocapture readnone %__data, ptr noundef %wq, ptr noundef %name, i32 noundef %high) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_workqueue_alloc, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wq, ptr noundef %name, i32 noundef %high) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_workqueue_destroy(ptr nocapture readnone %__data, ptr noundef %wq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_workqueue_destroy, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wq) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_qgroup_reserve_data(ptr nocapture readnone %__data, ptr noundef %inode, i64 noundef %start, i64 noundef %len, i64 noundef %reserved, i32 noundef %op) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_qgroup_reserve_data, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, i64 noundef %start, i64 noundef %len, i64 noundef %reserved, i32 noundef %op) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_qgroup_release_data(ptr nocapture readnone %__data, ptr noundef %inode, i64 noundef %start, i64 noundef %len, i64 noundef %reserved, i32 noundef %op) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_qgroup_release_data, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, i64 noundef %start, i64 noundef %len, i64 noundef %reserved, i32 noundef %op) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_qgroup_account_extents(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %rec) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_qgroup_account_extents, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %rec) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_qgroup_trace_extent(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %rec) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_qgroup_trace_extent, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %rec) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_qgroup_num_dirty_extents(ptr nocapture readnone %__data, ptr noundef %fs_info, i64 noundef %transid, i64 noundef %num_dirty_extents) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_qgroup_num_dirty_extents, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, i64 noundef %transid, i64 noundef %num_dirty_extents) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_qgroup_account_extent(ptr nocapture readnone %__data, ptr noundef %fs_info, i64 noundef %transid, i64 noundef %bytenr, i64 noundef %num_bytes, i64 noundef %nr_old_roots, i64 noundef %nr_new_roots) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_qgroup_account_extent, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, i64 noundef %transid, i64 noundef %bytenr, i64 noundef %num_bytes, i64 noundef %nr_old_roots, i64 noundef %nr_new_roots) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_qgroup_update_counters(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %qgroup, i64 noundef %cur_old_count, i64 noundef %cur_new_count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_qgroup_update_counters, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %qgroup, i64 noundef %cur_old_count, i64 noundef %cur_new_count) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_qgroup_update_reserve(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %qgroup, i64 noundef %diff, i32 noundef %type) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_qgroup_update_reserve, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %qgroup, i64 noundef %diff, i32 noundef %type) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_qgroup_meta_reserve(ptr nocapture readnone %__data, ptr noundef %root, i64 noundef %diff, i32 noundef %type) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_qgroup_meta_reserve, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %root, i64 noundef %diff, i32 noundef %type) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_qgroup_meta_convert(ptr nocapture readnone %__data, ptr noundef %root, i64 noundef %diff) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_qgroup_meta_convert, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %root, i64 noundef %diff) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_qgroup_meta_free_all_pertrans(ptr nocapture readnone %__data, ptr noundef %root) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_qgroup_meta_free_all_pertrans, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %root) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_prelim_ref_merge(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %oldref, ptr noundef %newref, i64 noundef %tree_size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_prelim_ref_merge, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %oldref, ptr noundef %newref, i64 noundef %tree_size) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_prelim_ref_insert(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %oldref, ptr noundef %newref, i64 noundef %tree_size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_prelim_ref_insert, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %oldref, ptr noundef %newref, i64 noundef %tree_size) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_inode_mod_outstanding_extents(ptr nocapture readnone %__data, ptr noundef %root, i64 noundef %ino, i32 noundef %mod) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_inode_mod_outstanding_extents, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %root, i64 noundef %ino, i32 noundef %mod) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_remove_block_group(ptr nocapture readnone %__data, ptr noundef %bg_cache) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_remove_block_group, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %bg_cache) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_add_unused_block_group(ptr nocapture readnone %__data, ptr noundef %bg_cache) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_add_unused_block_group, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %bg_cache) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_add_reclaim_block_group(ptr nocapture readnone %__data, ptr noundef %bg_cache) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_add_reclaim_block_group, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %bg_cache) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_reclaim_block_group(ptr nocapture readnone %__data, ptr noundef %bg_cache) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_reclaim_block_group, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %bg_cache) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_skip_unused_block_group(ptr nocapture readnone %__data, ptr noundef %bg_cache) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_skip_unused_block_group, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %bg_cache) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_set_extent_bit(ptr nocapture readnone %__data, ptr noundef %tree, i64 noundef %start, i64 noundef %len, i32 noundef %set_bits) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_set_extent_bit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %tree, i64 noundef %start, i64 noundef %len, i32 noundef %set_bits) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_clear_extent_bit(ptr nocapture readnone %__data, ptr noundef %tree, i64 noundef %start, i64 noundef %len, i32 noundef %clear_bits) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_clear_extent_bit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %tree, i64 noundef %start, i64 noundef %len, i32 noundef %clear_bits) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_convert_extent_bit(ptr nocapture readnone %__data, ptr noundef %tree, i64 noundef %start, i64 noundef %len, i32 noundef %set_bits, i32 noundef %clear_bits) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_convert_extent_bit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %tree, i64 noundef %start, i64 noundef %len, i32 noundef %set_bits, i32 noundef %clear_bits) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_done_preemptive_reclaim(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %sinfo) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_done_preemptive_reclaim, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %sinfo) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_fail_all_tickets(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %sinfo) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_fail_all_tickets, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %sinfo) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_reserve_ticket(ptr nocapture readnone %__data, ptr noundef %fs_info, i64 noundef %flags, i64 noundef %bytes, i64 noundef %start_ns, i32 noundef %flush, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_reserve_ticket, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, i64 noundef %flags, i64 noundef %bytes, i64 noundef %start_ns, i32 noundef %flush, i32 noundef %error) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_tree_read_lock(ptr nocapture readnone %__data, ptr noundef %eb, i64 noundef %start_ns) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_tree_read_lock, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %eb, i64 noundef %start_ns) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_tree_lock(ptr nocapture readnone %__data, ptr noundef %eb, i64 noundef %start_ns) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_tree_lock, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %eb, i64 noundef %start_ns) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_tree_unlock(ptr nocapture readnone %__data, ptr noundef %eb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_tree_unlock, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %eb) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_tree_read_unlock(ptr nocapture readnone %__data, ptr noundef %eb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_tree_read_unlock, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %eb) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_tree_read_unlock_blocking(ptr nocapture readnone %__data, ptr noundef %eb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_tree_read_unlock_blocking, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %eb) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_set_lock_blocking_read(ptr nocapture readnone %__data, ptr noundef %eb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_set_lock_blocking_read, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %eb) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_set_lock_blocking_write(ptr nocapture readnone %__data, ptr noundef %eb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_set_lock_blocking_write, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %eb) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_try_tree_read_lock(ptr nocapture readnone %__data, ptr noundef %eb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_try_tree_read_lock, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %eb) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_try_tree_write_lock(ptr nocapture readnone %__data, ptr noundef %eb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_try_tree_write_lock, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %eb) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_btrfs_tree_read_lock_atomic(ptr nocapture readnone %__data, ptr noundef %eb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_tree_read_lock_atomic, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %eb) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_update_bytes_may_use(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %sinfo, i64 noundef %old, i64 noundef %diff) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_update_bytes_may_use, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %sinfo, i64 noundef %old, i64 noundef %diff) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_update_bytes_pinned(ptr nocapture readnone %__data, ptr noundef %fs_info, ptr noundef %sinfo, i64 noundef %old, i64 noundef %diff) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_update_bytes_pinned, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fs_info, ptr noundef %sinfo, i64 noundef %old, i64 noundef %diff) #23
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_transaction_commit(ptr noundef %__data, ptr noundef readonly %fs_info) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_btrfs_transaction_commit, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %generation = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 26
  %7 = ptrtoint ptr %generation to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %generation, align 8
  %generation13 = getelementptr inbounds %struct.trace_event_raw_btrfs_transaction_commit, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %generation13 to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %generation13, align 8
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_transaction_commit, ptr %call3, i32 0, i32 3
  %10 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 1, ptr %root_objectid, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_transaction_commit(ptr noundef %__data, ptr noundef readonly %fs_info) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_btrfs_transaction_commit, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %generation = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 26
  %31 = ptrtoint ptr %generation to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %generation, align 8
  %generation24 = getelementptr inbounds %struct.trace_event_raw_btrfs_transaction_commit, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %generation24 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %generation24, align 8
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_transaction_commit, ptr %call13, i32 0, i32 3
  %34 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 1, ptr %root_objectid, align 8
  %35 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rctx, align 4
  %37 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %36, ptr noundef %__data, i64 noundef 1, ptr noundef %38, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs__inode(ptr noundef %__data, ptr nocapture noundef readonly %inode) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 80) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %3 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 33
  %5 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %s_fs_info.i, align 16
  %tobool7.not = icmp eq ptr %6, null
  %fsid13 = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %call3, i32 0, i32 1
  br i1 %tobool7.not, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %6, i32 0, i32 100
  %7 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fs_devices, align 8
  %9 = call ptr @memcpy(ptr %fsid13, ptr %8, i32 16)
  br label %if.end15

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %10 = call ptr @memset(ptr %fsid13, i32 0, i32 16)
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then8
  %add.ptr.i = getelementptr i8, ptr %inode, i32 -864
  %location.i = getelementptr i8, ptr %inode, i32 -860
  %11 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %12 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %12)
  %tobool.not.i51 = icmp eq i64 %12, 0
  br i1 %tobool.not.i51, label %if.end15.if.then.i_crit_edge, label %lor.lhs.false.i

if.end15.if.then.i_crit_edge:                     ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end15
  %type.i = getelementptr i8, ptr %inode, i32 -852
  %13 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %14)
  %cmp.i = icmp eq i8 %14, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end15.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %inode, i32 40
  %15 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %16 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %12, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %call3, i32 0, i32 2
  %17 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %ino.0.i, ptr %ino, align 8
  %i_blocks = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 22
  %18 = ptrtoint ptr %i_blocks to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %i_blocks, align 8
  %blocks = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %call3, i32 0, i32 3
  %20 = ptrtoint ptr %blocks to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %19, ptr %blocks, align 8
  %disk_i_size = getelementptr i8, ptr %inode, i32 -288
  %21 = ptrtoint ptr %disk_i_size to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %disk_i_size, align 8
  %disk_i_size19 = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %call3, i32 0, i32 4
  %23 = ptrtoint ptr %disk_i_size19 to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %22, ptr %disk_i_size19, align 8
  %generation = getelementptr i8, ptr %inode, i32 -344
  %24 = ptrtoint ptr %generation to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %generation, align 8
  %generation21 = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %call3, i32 0, i32 5
  %26 = ptrtoint ptr %generation21 to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %25, ptr %generation21, align 8
  %last_trans = getelementptr i8, ptr %inode, i32 -336
  %27 = ptrtoint ptr %last_trans to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %last_trans, align 8
  %last_trans23 = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %call3, i32 0, i32 6
  %29 = ptrtoint ptr %last_trans23 to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %last_trans23, align 8
  %logged_trans = getelementptr i8, ptr %inode, i32 -328
  %30 = ptrtoint ptr %logged_trans to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %logged_trans, align 8
  %logged_trans25 = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %call3, i32 0, i32 7
  %32 = ptrtoint ptr %logged_trans25 to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %31, ptr %logged_trans25, align 8
  %33 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %add.ptr.i, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %34, i32 0, i32 7
  %35 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %35, i32 8)
  %36 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %call3, i32 0, i32 8
  %37 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %36, ptr %root_objectid, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_ino.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs__inode(ptr noundef %__data, ptr nocapture noundef readonly %inode) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 84, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %27 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 33
  %29 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %s_fs_info.i, align 16
  %tobool18.not = icmp eq ptr %30, null
  %fsid24 = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %call13, i32 0, i32 1
  br i1 %tobool18.not, label %if.else, label %if.then19

if.then19:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %30, i32 0, i32 100
  %31 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %fs_devices, align 8
  %33 = call ptr @memcpy(ptr %fsid24, ptr %32, i32 16)
  br label %if.end26

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %34 = call ptr @memset(ptr %fsid24, i32 0, i32 16)
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then19
  %add.ptr.i = getelementptr i8, ptr %inode, i32 -864
  %location.i = getelementptr i8, ptr %inode, i32 -860
  %35 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %35, i32 8)
  %36 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %36)
  %tobool.not.i74 = icmp eq i64 %36, 0
  br i1 %tobool.not.i74, label %if.end26.if.then.i_crit_edge, label %lor.lhs.false.i

if.end26.if.then.i_crit_edge:                     ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end26
  %type.i = getelementptr i8, ptr %inode, i32 -852
  %37 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %38)
  %cmp.i = icmp eq i8 %38, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end26.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %inode, i32 40
  %39 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %40 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %36, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %call13, i32 0, i32 2
  %41 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %ino.0.i, ptr %ino, align 8
  %i_blocks = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 22
  %42 = ptrtoint ptr %i_blocks to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %i_blocks, align 8
  %blocks = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %call13, i32 0, i32 3
  %44 = ptrtoint ptr %blocks to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %43, ptr %blocks, align 8
  %disk_i_size = getelementptr i8, ptr %inode, i32 -288
  %45 = ptrtoint ptr %disk_i_size to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %disk_i_size, align 8
  %disk_i_size30 = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %call13, i32 0, i32 4
  %47 = ptrtoint ptr %disk_i_size30 to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 %46, ptr %disk_i_size30, align 8
  %generation = getelementptr i8, ptr %inode, i32 -344
  %48 = ptrtoint ptr %generation to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %generation, align 8
  %generation32 = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %call13, i32 0, i32 5
  %50 = ptrtoint ptr %generation32 to i32
  call void @__asan_store8_noabort(i32 %50)
  store i64 %49, ptr %generation32, align 8
  %last_trans = getelementptr i8, ptr %inode, i32 -336
  %51 = ptrtoint ptr %last_trans to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %last_trans, align 8
  %last_trans34 = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %call13, i32 0, i32 6
  %53 = ptrtoint ptr %last_trans34 to i32
  call void @__asan_store8_noabort(i32 %53)
  store i64 %52, ptr %last_trans34, align 8
  %logged_trans = getelementptr i8, ptr %inode, i32 -328
  %54 = ptrtoint ptr %logged_trans to i32
  call void @__asan_load8_noabort(i32 %54)
  %55 = load i64, ptr %logged_trans, align 8
  %logged_trans36 = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %call13, i32 0, i32 7
  %56 = ptrtoint ptr %logged_trans36 to i32
  call void @__asan_store8_noabort(i32 %56)
  store i64 %55, ptr %logged_trans36, align 8
  %57 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %add.ptr.i, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %58, i32 0, i32 7
  %59 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %59, i32 8)
  %60 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %call13, i32 0, i32 8
  %61 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %61)
  store i64 %60, ptr %root_objectid, align 8
  %62 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %rctx, align 4
  %64 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 84, i32 noundef %63, ptr noundef %__data, i64 noundef 1, ptr noundef %65, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_ino.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_get_extent(ptr noundef %__data, ptr nocapture noundef readonly %root, ptr nocapture noundef readonly %inode, ptr noundef %map) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 96) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 8
  %3 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_info, align 8
  %tobool6.not = icmp eq ptr %4, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %4, i32 0, i32 100
  %5 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices, align 8
  %7 = call ptr @memcpy(ptr %fsid11, ptr %6, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %8 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 7
  %9 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %9, i32 8)
  %10 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %root_objectid, align 8
  %location.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 1
  %12 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %12, i32 8)
  %13 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %13)
  %tobool.not.i53 = icmp eq i64 %13, 0
  br i1 %tobool.not.i53, label %if.end13.if.then.i_crit_edge, label %lor.lhs.false.i

if.end13.if.then.i_crit_edge:                     ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end13
  %type.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 1, i32 1
  %14 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %15)
  %cmp.i = icmp eq i8 %15, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end13.if.then.i_crit_edge
  %i_ino.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37, i32 11
  %16 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %17 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %13, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call3, i32 0, i32 3
  %18 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %ino.0.i, ptr %ino, align 8
  %start = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 1
  %19 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %start, align 8
  %start15 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call3, i32 0, i32 4
  %21 = ptrtoint ptr %start15 to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %start15, align 8
  %len = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 2
  %22 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %len, align 8
  %len16 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call3, i32 0, i32 5
  %24 = ptrtoint ptr %len16 to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 %23, ptr %len16, align 8
  %orig_start = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 5
  %25 = ptrtoint ptr %orig_start to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %orig_start, align 8
  %orig_start17 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call3, i32 0, i32 6
  %27 = ptrtoint ptr %orig_start17 to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %orig_start17, align 8
  %block_start = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 8
  %28 = ptrtoint ptr %block_start to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %block_start, align 8
  %block_start18 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call3, i32 0, i32 7
  %30 = ptrtoint ptr %block_start18 to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %29, ptr %block_start18, align 8
  %block_len = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 9
  %31 = ptrtoint ptr %block_len to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %block_len, align 8
  %block_len19 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call3, i32 0, i32 8
  %33 = ptrtoint ptr %block_len19 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %block_len19, align 8
  %flags = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 11
  %34 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %flags, align 8
  %flags20 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call3, i32 0, i32 9
  %36 = ptrtoint ptr %flags20 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %flags20, align 8
  %refs = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 13
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %refs, i32 noundef 4) #23
  %37 = ptrtoint ptr %refs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %refs, align 4
  %refs22 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call3, i32 0, i32 10
  %39 = ptrtoint ptr %refs22 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %refs22, align 4
  %compress_type = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 14
  %40 = ptrtoint ptr %compress_type to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %compress_type, align 4
  %compress_type23 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call3, i32 0, i32 11
  %42 = ptrtoint ptr %compress_type23 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %compress_type23, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_ino.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_get_extent(ptr noundef %__data, ptr nocapture noundef readonly %root, ptr nocapture noundef readonly %inode, ptr noundef %map) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 100, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 8
  %27 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_info, align 8
  %tobool17.not = icmp eq ptr %28, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 100
  %29 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_devices, align 8
  %31 = call ptr @memcpy(ptr %fsid22, ptr %30, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %32 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 7
  %33 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %33, i32 8)
  %34 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %root_objectid, align 8
  %location.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 1
  %36 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %36, i32 8)
  %37 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %37)
  %tobool.not.i76 = icmp eq i64 %37, 0
  br i1 %tobool.not.i76, label %if.end24.if.then.i_crit_edge, label %lor.lhs.false.i

if.end24.if.then.i_crit_edge:                     ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end24
  %type.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 1, i32 1
  %38 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %39)
  %cmp.i = icmp eq i8 %39, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end24.if.then.i_crit_edge
  %i_ino.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37, i32 11
  %40 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %41 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %37, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call13, i32 0, i32 3
  %42 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %ino.0.i, ptr %ino, align 8
  %start = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 1
  %43 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %start, align 8
  %start26 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call13, i32 0, i32 4
  %45 = ptrtoint ptr %start26 to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %44, ptr %start26, align 8
  %len = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 2
  %46 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %len, align 8
  %len27 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call13, i32 0, i32 5
  %48 = ptrtoint ptr %len27 to i32
  call void @__asan_store8_noabort(i32 %48)
  store i64 %47, ptr %len27, align 8
  %orig_start = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 5
  %49 = ptrtoint ptr %orig_start to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %orig_start, align 8
  %orig_start28 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call13, i32 0, i32 6
  %51 = ptrtoint ptr %orig_start28 to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 %50, ptr %orig_start28, align 8
  %block_start = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 8
  %52 = ptrtoint ptr %block_start to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %block_start, align 8
  %block_start29 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call13, i32 0, i32 7
  %54 = ptrtoint ptr %block_start29 to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 %53, ptr %block_start29, align 8
  %block_len = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 9
  %55 = ptrtoint ptr %block_len to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %block_len, align 8
  %block_len30 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call13, i32 0, i32 8
  %57 = ptrtoint ptr %block_len30 to i32
  call void @__asan_store8_noabort(i32 %57)
  store i64 %56, ptr %block_len30, align 8
  %flags = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 11
  %58 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %flags, align 8
  %flags31 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call13, i32 0, i32 9
  %60 = ptrtoint ptr %flags31 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %59, ptr %flags31, align 8
  %refs = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 13
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %refs, i32 noundef 4) #23
  %61 = ptrtoint ptr %refs to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %refs, align 4
  %refs33 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call13, i32 0, i32 10
  %63 = ptrtoint ptr %refs33 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %62, ptr %refs33, align 4
  %compress_type = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 14
  %64 = ptrtoint ptr %compress_type to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %compress_type, align 4
  %compress_type34 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %call13, i32 0, i32 11
  %66 = ptrtoint ptr %compress_type34 to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %65, ptr %compress_type34, align 8
  %67 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %rctx, align 4
  %69 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 100, i32 noundef %68, ptr noundef %__data, i64 noundef 1, ptr noundef %70, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_ino.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_handle_em_exist(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %existing, ptr nocapture noundef readonly %map, i64 noundef %start, i64 noundef %len) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 72) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %start13 = getelementptr inbounds %struct.extent_map, ptr %existing, i32 0, i32 1
  %7 = ptrtoint ptr %start13 to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %start13, align 8
  %e_start = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %e_start to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %e_start, align 8
  %len14 = getelementptr inbounds %struct.extent_map, ptr %existing, i32 0, i32 2
  %10 = ptrtoint ptr %len14 to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %len14, align 8
  %e_len = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %e_len to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %e_len, align 8
  %start15 = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 1
  %13 = ptrtoint ptr %start15 to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %start15, align 8
  %map_start = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %call3, i32 0, i32 4
  %15 = ptrtoint ptr %map_start to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %map_start, align 8
  %len16 = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 2
  %16 = ptrtoint ptr %len16 to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %len16, align 8
  %map_len = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %call3, i32 0, i32 5
  %18 = ptrtoint ptr %map_len to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %17, ptr %map_len, align 8
  %start17 = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %call3, i32 0, i32 6
  %19 = ptrtoint ptr %start17 to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %start, ptr %start17, align 8
  %len18 = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %call3, i32 0, i32 7
  %20 = ptrtoint ptr %len18 to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %len, ptr %len18, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_handle_em_exist(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %existing, ptr nocapture noundef readonly %map, i64 noundef %start, i64 noundef %len) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 76, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %start24 = getelementptr inbounds %struct.extent_map, ptr %existing, i32 0, i32 1
  %31 = ptrtoint ptr %start24 to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %start24, align 8
  %e_start = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %e_start to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %e_start, align 8
  %len25 = getelementptr inbounds %struct.extent_map, ptr %existing, i32 0, i32 2
  %34 = ptrtoint ptr %len25 to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %len25, align 8
  %e_len = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %e_len to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %e_len, align 8
  %start26 = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 1
  %37 = ptrtoint ptr %start26 to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %start26, align 8
  %map_start = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %call13, i32 0, i32 4
  %39 = ptrtoint ptr %map_start to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %38, ptr %map_start, align 8
  %len27 = getelementptr inbounds %struct.extent_map, ptr %map, i32 0, i32 2
  %40 = ptrtoint ptr %len27 to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %len27, align 8
  %map_len = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %call13, i32 0, i32 5
  %42 = ptrtoint ptr %map_len to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %41, ptr %map_len, align 8
  %start28 = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %call13, i32 0, i32 6
  %43 = ptrtoint ptr %start28 to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %start, ptr %start28, align 8
  %len29 = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %call13, i32 0, i32 7
  %44 = ptrtoint ptr %len29 to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %len, ptr %len29, align 8
  %45 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rctx, align 4
  %47 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 76, i32 noundef %46, ptr noundef %__data, i64 noundef 1, ptr noundef %48, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs__file_extent_item_regular(ptr noundef %__data, ptr nocapture noundef readonly %bi, ptr noundef %l, ptr noundef %fi, i64 noundef %start) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 120) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %3 = ptrtoint ptr %bi to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %bi, align 8
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %4, i32 0, i32 8
  %5 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_info, align 8
  %tobool6.not = icmp eq ptr %6, null
  %fsid12 = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %6, i32 0, i32 100
  %7 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fs_devices, align 8
  %9 = call ptr @memcpy(ptr %fsid12, ptr %8, i32 16)
  br label %if.end14

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %10 = call ptr @memset(ptr %fsid12, i32 0, i32 16)
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then7
  %11 = ptrtoint ptr %bi to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %bi, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %12, i32 0, i32 7
  %13 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %13, i32 8)
  %14 = load i64, ptr %root_key, align 1
  %root_obj = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call3, i32 0, i32 2
  %15 = ptrtoint ptr %root_obj to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %root_obj, align 8
  %location.i = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 1
  %16 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %16, i32 8)
  %17 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %17)
  %tobool.not.i69 = icmp eq i64 %17, 0
  br i1 %tobool.not.i69, label %if.end14.if.then.i_crit_edge, label %lor.lhs.false.i

if.end14.if.then.i_crit_edge:                     ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end14
  %type.i = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 1, i32 1
  %18 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %19)
  %cmp.i = icmp eq i8 %19, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end14.if.then.i_crit_edge
  %i_ino.i = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 37, i32 11
  %20 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %21 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %17, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call3, i32 0, i32 3
  %22 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %ino.0.i, ptr %ino, align 8
  %i_size = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 37, i32 14
  %23 = ptrtoint ptr %i_size to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %i_size, align 8
  %isize = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call3, i32 0, i32 4
  %25 = ptrtoint ptr %isize to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %isize, align 8
  %disk_i_size = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 21
  %26 = ptrtoint ptr %disk_i_size to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %disk_i_size, align 8
  %disk_isize = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call3, i32 0, i32 5
  %28 = ptrtoint ptr %disk_isize to i32
  call void @__asan_store8_noabort(i32 %28)
  store i64 %27, ptr %disk_isize, align 8
  %call.i71 = call i64 @btrfs_get_64(ptr noundef %l, ptr noundef %fi, i32 noundef 45) #23
  %num_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call3, i32 0, i32 6
  %29 = ptrtoint ptr %num_bytes to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %call.i71, ptr %num_bytes, align 8
  %call.i72 = call i64 @btrfs_get_64(ptr noundef %l, ptr noundef %fi, i32 noundef 8) #23
  %ram_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call3, i32 0, i32 7
  %30 = ptrtoint ptr %ram_bytes to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %call.i72, ptr %ram_bytes, align 8
  %call.i73 = call i64 @btrfs_get_64(ptr noundef %l, ptr noundef %fi, i32 noundef 21) #23
  %disk_bytenr = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call3, i32 0, i32 8
  %31 = ptrtoint ptr %disk_bytenr to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %call.i73, ptr %disk_bytenr, align 8
  %call.i74 = call i64 @btrfs_get_64(ptr noundef %l, ptr noundef %fi, i32 noundef 29) #23
  %disk_num_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call3, i32 0, i32 9
  %32 = ptrtoint ptr %disk_num_bytes to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %call.i74, ptr %disk_num_bytes, align 8
  %call.i75 = call i64 @btrfs_get_64(ptr noundef %l, ptr noundef %fi, i32 noundef 37) #23
  %extent_offset = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call3, i32 0, i32 10
  %33 = ptrtoint ptr %extent_offset to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %call.i75, ptr %extent_offset, align 8
  %call.i76 = call zeroext i8 @btrfs_get_8(ptr noundef %l, ptr noundef %fi, i32 noundef 20) #23
  %extent_type = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call3, i32 0, i32 11
  %34 = ptrtoint ptr %extent_type to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %call.i76, ptr %extent_type, align 8
  %call.i77 = call zeroext i8 @btrfs_get_8(ptr noundef %l, ptr noundef %fi, i32 noundef 16) #23
  %compression = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call3, i32 0, i32 12
  %35 = ptrtoint ptr %compression to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 %call.i77, ptr %compression, align 1
  %extent_start = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call3, i32 0, i32 13
  %36 = ptrtoint ptr %extent_start to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %start, ptr %extent_start, align 8
  %37 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %num_bytes, align 8
  %add25 = add i64 %38, %start
  %extent_end = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call3, i32 0, i32 14
  %39 = ptrtoint ptr %extent_end to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %add25, ptr %extent_end, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_ino.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs__file_extent_item_regular(ptr noundef %__data, ptr nocapture noundef readonly %bi, ptr noundef %l, ptr noundef %fi, i64 noundef %start) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 124, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %bi to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %bi, align 8
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %28, i32 0, i32 8
  %29 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_info, align 8
  %tobool17.not = icmp eq ptr %30, null
  %fsid23 = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %30, i32 0, i32 100
  %31 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %fs_devices, align 8
  %33 = call ptr @memcpy(ptr %fsid23, ptr %32, i32 16)
  br label %if.end25

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %34 = call ptr @memset(ptr %fsid23, i32 0, i32 16)
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then18
  %35 = ptrtoint ptr %bi to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %bi, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %36, i32 0, i32 7
  %37 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %37, i32 8)
  %38 = load i64, ptr %root_key, align 1
  %root_obj = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call13, i32 0, i32 2
  %39 = ptrtoint ptr %root_obj to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %38, ptr %root_obj, align 8
  %location.i = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 1
  %40 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %40, i32 8)
  %41 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %41)
  %tobool.not.i92 = icmp eq i64 %41, 0
  br i1 %tobool.not.i92, label %if.end25.if.then.i_crit_edge, label %lor.lhs.false.i

if.end25.if.then.i_crit_edge:                     ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end25
  %type.i = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 1, i32 1
  %42 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %43)
  %cmp.i = icmp eq i8 %43, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end25.if.then.i_crit_edge
  %i_ino.i = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 37, i32 11
  %44 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %45 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %41, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call13, i32 0, i32 3
  %46 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %ino.0.i, ptr %ino, align 8
  %i_size = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 37, i32 14
  %47 = ptrtoint ptr %i_size to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %i_size, align 8
  %isize = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call13, i32 0, i32 4
  %49 = ptrtoint ptr %isize to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 %48, ptr %isize, align 8
  %disk_i_size = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 21
  %50 = ptrtoint ptr %disk_i_size to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %disk_i_size, align 8
  %disk_isize = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call13, i32 0, i32 5
  %52 = ptrtoint ptr %disk_isize to i32
  call void @__asan_store8_noabort(i32 %52)
  store i64 %51, ptr %disk_isize, align 8
  %call.i = call i64 @btrfs_get_64(ptr noundef %l, ptr noundef %fi, i32 noundef 45) #23
  %num_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call13, i32 0, i32 6
  %53 = ptrtoint ptr %num_bytes to i32
  call void @__asan_store8_noabort(i32 %53)
  store i64 %call.i, ptr %num_bytes, align 8
  %call.i93 = call i64 @btrfs_get_64(ptr noundef %l, ptr noundef %fi, i32 noundef 8) #23
  %ram_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call13, i32 0, i32 7
  %54 = ptrtoint ptr %ram_bytes to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 %call.i93, ptr %ram_bytes, align 8
  %call.i94 = call i64 @btrfs_get_64(ptr noundef %l, ptr noundef %fi, i32 noundef 21) #23
  %disk_bytenr = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call13, i32 0, i32 8
  %55 = ptrtoint ptr %disk_bytenr to i32
  call void @__asan_store8_noabort(i32 %55)
  store i64 %call.i94, ptr %disk_bytenr, align 8
  %call.i95 = call i64 @btrfs_get_64(ptr noundef %l, ptr noundef %fi, i32 noundef 29) #23
  %disk_num_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call13, i32 0, i32 9
  %56 = ptrtoint ptr %disk_num_bytes to i32
  call void @__asan_store8_noabort(i32 %56)
  store i64 %call.i95, ptr %disk_num_bytes, align 8
  %call.i96 = call i64 @btrfs_get_64(ptr noundef %l, ptr noundef %fi, i32 noundef 37) #23
  %extent_offset = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call13, i32 0, i32 10
  %57 = ptrtoint ptr %extent_offset to i32
  call void @__asan_store8_noabort(i32 %57)
  store i64 %call.i96, ptr %extent_offset, align 8
  %call.i97 = call zeroext i8 @btrfs_get_8(ptr noundef %l, ptr noundef %fi, i32 noundef 20) #23
  %extent_type = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call13, i32 0, i32 11
  %58 = ptrtoint ptr %extent_type to i32
  call void @__asan_store1_noabort(i32 %58)
  store i8 %call.i97, ptr %extent_type, align 8
  %call.i98 = call zeroext i8 @btrfs_get_8(ptr noundef %l, ptr noundef %fi, i32 noundef 16) #23
  %compression = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call13, i32 0, i32 12
  %59 = ptrtoint ptr %compression to i32
  call void @__asan_store1_noabort(i32 %59)
  store i8 %call.i98, ptr %compression, align 1
  %extent_start = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call13, i32 0, i32 13
  %60 = ptrtoint ptr %extent_start to i32
  call void @__asan_store8_noabort(i32 %60)
  store i64 %start, ptr %extent_start, align 8
  %61 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %num_bytes, align 8
  %add36 = add i64 %62, %start
  %extent_end = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %call13, i32 0, i32 14
  %63 = ptrtoint ptr %extent_end to i32
  call void @__asan_store8_noabort(i32 %63)
  store i64 %add36, ptr %extent_end, align 8
  %64 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %rctx, align 4
  %66 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 124, i32 noundef %65, ptr noundef %__data, i64 noundef 1, ptr noundef %67, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_ino.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs__file_extent_item_inline(ptr noundef %__data, ptr nocapture noundef readonly %bi, ptr noundef %l, ptr noundef %fi, i32 noundef %slot, i64 noundef %start) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 80) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %3 = ptrtoint ptr %bi to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %bi, align 8
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %4, i32 0, i32 8
  %5 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_info, align 8
  %tobool6.not = icmp eq ptr %6, null
  %fsid12 = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %6, i32 0, i32 100
  %7 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fs_devices, align 8
  %9 = call ptr @memcpy(ptr %fsid12, ptr %8, i32 16)
  br label %if.end14

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %10 = call ptr @memset(ptr %fsid12, i32 0, i32 16)
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then7
  %11 = ptrtoint ptr %bi to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %bi, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %12, i32 0, i32 7
  %13 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %13, i32 8)
  %14 = load i64, ptr %root_key, align 1
  %root_obj = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %call3, i32 0, i32 2
  %15 = ptrtoint ptr %root_obj to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %root_obj, align 8
  %location.i = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 1
  %16 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %16, i32 8)
  %17 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %17)
  %tobool.not.i50 = icmp eq i64 %17, 0
  br i1 %tobool.not.i50, label %if.end14.if.then.i_crit_edge, label %lor.lhs.false.i

if.end14.if.then.i_crit_edge:                     ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end14
  %type.i = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 1, i32 1
  %18 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %19)
  %cmp.i = icmp eq i8 %19, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end14.if.then.i_crit_edge
  %i_ino.i = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 37, i32 11
  %20 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %21 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %17, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %call3, i32 0, i32 3
  %22 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %ino.0.i, ptr %ino, align 8
  %i_size = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 37, i32 14
  %23 = ptrtoint ptr %i_size to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %i_size, align 8
  %isize = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %call3, i32 0, i32 4
  %25 = ptrtoint ptr %isize to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %isize, align 8
  %disk_i_size = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 21
  %26 = ptrtoint ptr %disk_i_size to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %disk_i_size, align 8
  %disk_isize = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %call3, i32 0, i32 5
  %28 = ptrtoint ptr %disk_isize to i32
  call void @__asan_store8_noabort(i32 %28)
  store i64 %27, ptr %disk_isize, align 8
  %call.i52 = call zeroext i8 @btrfs_get_8(ptr noundef %l, ptr noundef %fi, i32 noundef 20) #23
  %extent_type = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %call3, i32 0, i32 6
  %29 = ptrtoint ptr %extent_type to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 %call.i52, ptr %extent_type, align 8
  %call.i53 = call zeroext i8 @btrfs_get_8(ptr noundef %l, ptr noundef %fi, i32 noundef 16) #23
  %compression = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %call3, i32 0, i32 7
  %30 = ptrtoint ptr %compression to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %call.i53, ptr %compression, align 1
  %extent_start = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %call3, i32 0, i32 8
  %31 = ptrtoint ptr %extent_start to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %start, ptr %extent_start, align 8
  %call.i54 = call i64 @btrfs_get_64(ptr noundef %l, ptr noundef %fi, i32 noundef 8) #23
  %add20 = add i64 %call.i54, %start
  %extent_end = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %call3, i32 0, i32 9
  %32 = ptrtoint ptr %extent_end to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %add20, ptr %extent_end, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_ino.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs__file_extent_item_inline(ptr noundef %__data, ptr nocapture noundef readonly %bi, ptr noundef %l, ptr noundef %fi, i32 noundef %slot, i64 noundef %start) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 84, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %bi to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %bi, align 8
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %28, i32 0, i32 8
  %29 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_info, align 8
  %tobool17.not = icmp eq ptr %30, null
  %fsid23 = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %30, i32 0, i32 100
  %31 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %fs_devices, align 8
  %33 = call ptr @memcpy(ptr %fsid23, ptr %32, i32 16)
  br label %if.end25

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %34 = call ptr @memset(ptr %fsid23, i32 0, i32 16)
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then18
  %35 = ptrtoint ptr %bi to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %bi, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %36, i32 0, i32 7
  %37 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %37, i32 8)
  %38 = load i64, ptr %root_key, align 1
  %root_obj = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %call13, i32 0, i32 2
  %39 = ptrtoint ptr %root_obj to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %38, ptr %root_obj, align 8
  %location.i = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 1
  %40 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %40, i32 8)
  %41 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %41)
  %tobool.not.i73 = icmp eq i64 %41, 0
  br i1 %tobool.not.i73, label %if.end25.if.then.i_crit_edge, label %lor.lhs.false.i

if.end25.if.then.i_crit_edge:                     ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end25
  %type.i = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 1, i32 1
  %42 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %43)
  %cmp.i = icmp eq i8 %43, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end25.if.then.i_crit_edge
  %i_ino.i = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 37, i32 11
  %44 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %45 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %41, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %call13, i32 0, i32 3
  %46 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %ino.0.i, ptr %ino, align 8
  %i_size = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 37, i32 14
  %47 = ptrtoint ptr %i_size to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %i_size, align 8
  %isize = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %call13, i32 0, i32 4
  %49 = ptrtoint ptr %isize to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 %48, ptr %isize, align 8
  %disk_i_size = getelementptr inbounds %struct.btrfs_inode, ptr %bi, i32 0, i32 21
  %50 = ptrtoint ptr %disk_i_size to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %disk_i_size, align 8
  %disk_isize = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %call13, i32 0, i32 5
  %52 = ptrtoint ptr %disk_isize to i32
  call void @__asan_store8_noabort(i32 %52)
  store i64 %51, ptr %disk_isize, align 8
  %call.i = call zeroext i8 @btrfs_get_8(ptr noundef %l, ptr noundef %fi, i32 noundef 20) #23
  %extent_type = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %call13, i32 0, i32 6
  %53 = ptrtoint ptr %extent_type to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 %call.i, ptr %extent_type, align 8
  %call.i74 = call zeroext i8 @btrfs_get_8(ptr noundef %l, ptr noundef %fi, i32 noundef 16) #23
  %compression = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %call13, i32 0, i32 7
  %54 = ptrtoint ptr %compression to i32
  call void @__asan_store1_noabort(i32 %54)
  store i8 %call.i74, ptr %compression, align 1
  %extent_start = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %call13, i32 0, i32 8
  %55 = ptrtoint ptr %extent_start to i32
  call void @__asan_store8_noabort(i32 %55)
  store i64 %start, ptr %extent_start, align 8
  %call.i75 = call i64 @btrfs_get_64(ptr noundef %l, ptr noundef %fi, i32 noundef 8) #23
  %add31 = add i64 %call.i75, %start
  %extent_end = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %call13, i32 0, i32 9
  %56 = ptrtoint ptr %extent_end to i32
  call void @__asan_store8_noabort(i32 %56)
  store i64 %add31, ptr %extent_end, align 8
  %57 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %rctx, align 4
  %59 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 84, i32 noundef %58, ptr noundef %__data, i64 noundef 1, ptr noundef %60, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_ino.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs__ordered_extent(ptr noundef %__data, ptr nocapture noundef readonly %inode, ptr noundef %ordered) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 104) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %3 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %inode, align 8
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %4, i32 0, i32 8
  %5 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_info, align 8
  %tobool6.not = icmp eq ptr %6, null
  %fsid12 = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %6, i32 0, i32 100
  %7 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fs_devices, align 8
  %9 = call ptr @memcpy(ptr %fsid12, ptr %8, i32 16)
  br label %if.end14

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %10 = call ptr @memset(ptr %fsid12, i32 0, i32 16)
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then7
  %location.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 1
  %11 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %12 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %12)
  %tobool.not.i55 = icmp eq i64 %12, 0
  br i1 %tobool.not.i55, label %if.end14.if.then.i_crit_edge, label %lor.lhs.false.i

if.end14.if.then.i_crit_edge:                     ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end14
  %type.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 1, i32 1
  %13 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %14)
  %cmp.i = icmp eq i8 %14, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end14.if.then.i_crit_edge
  %i_ino.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37, i32 11
  %15 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %16 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %12, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call3, i32 0, i32 2
  %17 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %ino.0.i, ptr %ino, align 8
  %18 = ptrtoint ptr %ordered to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %ordered, align 8
  %file_offset16 = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call3, i32 0, i32 3
  %20 = ptrtoint ptr %file_offset16 to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %19, ptr %file_offset16, align 8
  %disk_bytenr = getelementptr inbounds %struct.btrfs_ordered_extent, ptr %ordered, i32 0, i32 1
  %21 = ptrtoint ptr %disk_bytenr to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %disk_bytenr, align 8
  %start = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call3, i32 0, i32 4
  %23 = ptrtoint ptr %start to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %22, ptr %start, align 8
  %num_bytes = getelementptr inbounds %struct.btrfs_ordered_extent, ptr %ordered, i32 0, i32 2
  %24 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %num_bytes, align 8
  %len = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call3, i32 0, i32 5
  %26 = ptrtoint ptr %len to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %25, ptr %len, align 8
  %disk_num_bytes = getelementptr inbounds %struct.btrfs_ordered_extent, ptr %ordered, i32 0, i32 3
  %27 = ptrtoint ptr %disk_num_bytes to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %disk_num_bytes, align 8
  %disk_len = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call3, i32 0, i32 6
  %29 = ptrtoint ptr %disk_len to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %disk_len, align 8
  %bytes_left = getelementptr inbounds %struct.btrfs_ordered_extent, ptr %ordered, i32 0, i32 4
  %30 = ptrtoint ptr %bytes_left to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %bytes_left, align 8
  %bytes_left17 = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call3, i32 0, i32 7
  %32 = ptrtoint ptr %bytes_left17 to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %31, ptr %bytes_left17, align 8
  %flags = getelementptr inbounds %struct.btrfs_ordered_extent, ptr %ordered, i32 0, i32 7
  %33 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %flags, align 8
  %flags18 = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call3, i32 0, i32 8
  %35 = ptrtoint ptr %flags18 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %flags18, align 8
  %compress_type = getelementptr inbounds %struct.btrfs_ordered_extent, ptr %ordered, i32 0, i32 8
  %36 = ptrtoint ptr %compress_type to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %compress_type, align 4
  %compress_type19 = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call3, i32 0, i32 9
  %38 = ptrtoint ptr %compress_type19 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %compress_type19, align 4
  %refs = getelementptr inbounds %struct.btrfs_ordered_extent, ptr %ordered, i32 0, i32 10
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %refs, i32 noundef 4) #23
  %39 = ptrtoint ptr %refs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %refs, align 4
  %refs21 = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call3, i32 0, i32 10
  %41 = ptrtoint ptr %refs21 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %refs21, align 8
  %42 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %inode, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %43, i32 0, i32 7
  %44 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %44, i32 8)
  %45 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call3, i32 0, i32 11
  %46 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %45, ptr %root_objectid, align 8
  %truncated_len = getelementptr inbounds %struct.btrfs_ordered_extent, ptr %ordered, i32 0, i32 6
  %47 = ptrtoint ptr %truncated_len to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %truncated_len, align 8
  %truncated_len23 = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call3, i32 0, i32 12
  %49 = ptrtoint ptr %truncated_len23 to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 %48, ptr %truncated_len23, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_ino.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs__ordered_extent(ptr noundef %__data, ptr nocapture noundef readonly %inode, ptr noundef %ordered) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 108, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %inode, align 8
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %28, i32 0, i32 8
  %29 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_info, align 8
  %tobool17.not = icmp eq ptr %30, null
  %fsid23 = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %30, i32 0, i32 100
  %31 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %fs_devices, align 8
  %33 = call ptr @memcpy(ptr %fsid23, ptr %32, i32 16)
  br label %if.end25

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %34 = call ptr @memset(ptr %fsid23, i32 0, i32 16)
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then18
  %location.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 1
  %35 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %35, i32 8)
  %36 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %36)
  %tobool.not.i78 = icmp eq i64 %36, 0
  br i1 %tobool.not.i78, label %if.end25.if.then.i_crit_edge, label %lor.lhs.false.i

if.end25.if.then.i_crit_edge:                     ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end25
  %type.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 1, i32 1
  %37 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %38)
  %cmp.i = icmp eq i8 %38, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end25.if.then.i_crit_edge
  %i_ino.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37, i32 11
  %39 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %40 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %36, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call13, i32 0, i32 2
  %41 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %ino.0.i, ptr %ino, align 8
  %42 = ptrtoint ptr %ordered to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %ordered, align 8
  %file_offset27 = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call13, i32 0, i32 3
  %44 = ptrtoint ptr %file_offset27 to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %43, ptr %file_offset27, align 8
  %disk_bytenr = getelementptr inbounds %struct.btrfs_ordered_extent, ptr %ordered, i32 0, i32 1
  %45 = ptrtoint ptr %disk_bytenr to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %disk_bytenr, align 8
  %start = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call13, i32 0, i32 4
  %47 = ptrtoint ptr %start to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 %46, ptr %start, align 8
  %num_bytes = getelementptr inbounds %struct.btrfs_ordered_extent, ptr %ordered, i32 0, i32 2
  %48 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %num_bytes, align 8
  %len = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call13, i32 0, i32 5
  %50 = ptrtoint ptr %len to i32
  call void @__asan_store8_noabort(i32 %50)
  store i64 %49, ptr %len, align 8
  %disk_num_bytes = getelementptr inbounds %struct.btrfs_ordered_extent, ptr %ordered, i32 0, i32 3
  %51 = ptrtoint ptr %disk_num_bytes to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %disk_num_bytes, align 8
  %disk_len = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call13, i32 0, i32 6
  %53 = ptrtoint ptr %disk_len to i32
  call void @__asan_store8_noabort(i32 %53)
  store i64 %52, ptr %disk_len, align 8
  %bytes_left = getelementptr inbounds %struct.btrfs_ordered_extent, ptr %ordered, i32 0, i32 4
  %54 = ptrtoint ptr %bytes_left to i32
  call void @__asan_load8_noabort(i32 %54)
  %55 = load i64, ptr %bytes_left, align 8
  %bytes_left28 = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call13, i32 0, i32 7
  %56 = ptrtoint ptr %bytes_left28 to i32
  call void @__asan_store8_noabort(i32 %56)
  store i64 %55, ptr %bytes_left28, align 8
  %flags = getelementptr inbounds %struct.btrfs_ordered_extent, ptr %ordered, i32 0, i32 7
  %57 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %flags, align 8
  %flags29 = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call13, i32 0, i32 8
  %59 = ptrtoint ptr %flags29 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %58, ptr %flags29, align 8
  %compress_type = getelementptr inbounds %struct.btrfs_ordered_extent, ptr %ordered, i32 0, i32 8
  %60 = ptrtoint ptr %compress_type to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %compress_type, align 4
  %compress_type30 = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call13, i32 0, i32 9
  %62 = ptrtoint ptr %compress_type30 to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %61, ptr %compress_type30, align 4
  %refs = getelementptr inbounds %struct.btrfs_ordered_extent, ptr %ordered, i32 0, i32 10
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %refs, i32 noundef 4) #23
  %63 = ptrtoint ptr %refs to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %refs, align 4
  %refs32 = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call13, i32 0, i32 10
  %65 = ptrtoint ptr %refs32 to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %64, ptr %refs32, align 8
  %66 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %inode, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %67, i32 0, i32 7
  %68 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %68, i32 8)
  %69 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call13, i32 0, i32 11
  %70 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %70)
  store i64 %69, ptr %root_objectid, align 8
  %truncated_len = getelementptr inbounds %struct.btrfs_ordered_extent, ptr %ordered, i32 0, i32 6
  %71 = ptrtoint ptr %truncated_len to i32
  call void @__asan_load8_noabort(i32 %71)
  %72 = load i64, ptr %truncated_len, align 8
  %truncated_len34 = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %call13, i32 0, i32 12
  %73 = ptrtoint ptr %truncated_len34 to i32
  call void @__asan_store8_noabort(i32 %73)
  store i64 %72, ptr %truncated_len34, align 8
  %74 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %rctx, align 4
  %76 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 108, i32 noundef %75, ptr noundef %__data, i64 noundef 1, ptr noundef %77, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_ino.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs__writepage(ptr noundef %__data, ptr nocapture noundef readonly %page, ptr nocapture noundef readonly %inode, ptr nocapture noundef readonly %wbc) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 80) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %3 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 33
  %5 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %s_fs_info.i, align 16
  %tobool7.not = icmp eq ptr %6, null
  %fsid13 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call3, i32 0, i32 1
  br i1 %tobool7.not, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %6, i32 0, i32 100
  %7 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fs_devices, align 8
  %9 = call ptr @memcpy(ptr %fsid13, ptr %8, i32 16)
  br label %if.end15

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %10 = call ptr @memset(ptr %fsid13, i32 0, i32 16)
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then8
  %add.ptr.i = getelementptr i8, ptr %inode, i32 -864
  %location.i = getelementptr i8, ptr %inode, i32 -860
  %11 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %12 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %12)
  %tobool.not.i69 = icmp eq i64 %12, 0
  br i1 %tobool.not.i69, label %if.end15.if.then.i_crit_edge, label %lor.lhs.false.i

if.end15.if.then.i_crit_edge:                     ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end15
  %type.i = getelementptr i8, ptr %inode, i32 -852
  %13 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %14)
  %cmp.i = icmp eq i8 %14, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end15.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %inode, i32 40
  %15 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %16 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %12, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call3, i32 0, i32 2
  %17 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %ino.0.i, ptr %ino, align 8
  %index = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 2
  %18 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %index, align 4
  %index18 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call3, i32 0, i32 3
  %20 = ptrtoint ptr %index18 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %index18, align 8
  %21 = ptrtoint ptr %wbc to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %wbc, align 8
  %nr_to_write19 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call3, i32 0, i32 4
  %23 = ptrtoint ptr %nr_to_write19 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %nr_to_write19, align 4
  %pages_skipped = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 1
  %24 = ptrtoint ptr %pages_skipped to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %pages_skipped, align 4
  %pages_skipped20 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call3, i32 0, i32 5
  %26 = ptrtoint ptr %pages_skipped20 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %pages_skipped20, align 8
  %range_start = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 2
  %27 = ptrtoint ptr %range_start to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %range_start, align 8
  %range_start21 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call3, i32 0, i32 6
  %29 = ptrtoint ptr %range_start21 to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %range_start21, align 8
  %range_end = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 3
  %30 = ptrtoint ptr %range_end to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %range_end, align 8
  %range_end22 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call3, i32 0, i32 7
  %32 = ptrtoint ptr %range_end22 to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %31, ptr %range_end22, align 8
  %for_kupdate = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 5
  %33 = ptrtoint ptr %for_kupdate to i32
  call void @__asan_load2_noabort(i32 %33)
  %bf.load = load i16, ptr %for_kupdate, align 4
  %bf.lshr = lshr i16 %bf.load, 15
  %conv = trunc i16 %bf.lshr to i8
  %for_kupdate23 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call3, i32 0, i32 8
  %34 = ptrtoint ptr %for_kupdate23 to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %conv, ptr %for_kupdate23, align 8
  %bf.load24 = load i16, ptr %for_kupdate, align 4
  %bf.lshr25 = lshr i16 %bf.load24, 12
  %35 = trunc i16 %bf.lshr25 to i8
  %conv27 = and i8 %35, 1
  %for_reclaim28 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call3, i32 0, i32 9
  %36 = ptrtoint ptr %for_reclaim28 to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 %conv27, ptr %for_reclaim28, align 1
  %bf.load29 = load i16, ptr %for_kupdate, align 4
  %bf.lshr30 = lshr i16 %bf.load29, 11
  %37 = trunc i16 %bf.lshr30 to i8
  %conv33 = and i8 %37, 1
  %range_cyclic34 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call3, i32 0, i32 10
  %38 = ptrtoint ptr %range_cyclic34 to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 %conv33, ptr %range_cyclic34, align 2
  %i_mapping = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %39 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %i_mapping, align 8
  %writeback_index = getelementptr inbounds %struct.address_space, ptr %40, i32 0, i32 8
  %41 = ptrtoint ptr %writeback_index to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %writeback_index, align 4
  %writeback_index35 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call3, i32 0, i32 11
  %43 = ptrtoint ptr %writeback_index35 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %writeback_index35, align 4
  %44 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %add.ptr.i, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %45, i32 0, i32 7
  %46 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %46, i32 8)
  %47 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call3, i32 0, i32 12
  %48 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %48)
  store i64 %47, ptr %root_objectid, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_ino.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs__writepage(ptr noundef %__data, ptr nocapture noundef readonly %page, ptr nocapture noundef readonly %inode, ptr nocapture noundef readonly %wbc) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 84, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %27 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 33
  %29 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %s_fs_info.i, align 16
  %tobool18.not = icmp eq ptr %30, null
  %fsid24 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call13, i32 0, i32 1
  br i1 %tobool18.not, label %if.else, label %if.then19

if.then19:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %30, i32 0, i32 100
  %31 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %fs_devices, align 8
  %33 = call ptr @memcpy(ptr %fsid24, ptr %32, i32 16)
  br label %if.end26

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %34 = call ptr @memset(ptr %fsid24, i32 0, i32 16)
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then19
  %add.ptr.i = getelementptr i8, ptr %inode, i32 -864
  %location.i = getelementptr i8, ptr %inode, i32 -860
  %35 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %35, i32 8)
  %36 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %36)
  %tobool.not.i92 = icmp eq i64 %36, 0
  br i1 %tobool.not.i92, label %if.end26.if.then.i_crit_edge, label %lor.lhs.false.i

if.end26.if.then.i_crit_edge:                     ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end26
  %type.i = getelementptr i8, ptr %inode, i32 -852
  %37 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %38)
  %cmp.i = icmp eq i8 %38, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end26.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %inode, i32 40
  %39 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %40 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %36, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call13, i32 0, i32 2
  %41 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %ino.0.i, ptr %ino, align 8
  %index = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 2
  %42 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %index, align 4
  %index29 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call13, i32 0, i32 3
  %44 = ptrtoint ptr %index29 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %index29, align 8
  %45 = ptrtoint ptr %wbc to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %wbc, align 8
  %nr_to_write30 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call13, i32 0, i32 4
  %47 = ptrtoint ptr %nr_to_write30 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %nr_to_write30, align 4
  %pages_skipped = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 1
  %48 = ptrtoint ptr %pages_skipped to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %pages_skipped, align 4
  %pages_skipped31 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call13, i32 0, i32 5
  %50 = ptrtoint ptr %pages_skipped31 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %pages_skipped31, align 8
  %range_start = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 2
  %51 = ptrtoint ptr %range_start to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %range_start, align 8
  %range_start32 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call13, i32 0, i32 6
  %53 = ptrtoint ptr %range_start32 to i32
  call void @__asan_store8_noabort(i32 %53)
  store i64 %52, ptr %range_start32, align 8
  %range_end = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 3
  %54 = ptrtoint ptr %range_end to i32
  call void @__asan_load8_noabort(i32 %54)
  %55 = load i64, ptr %range_end, align 8
  %range_end33 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call13, i32 0, i32 7
  %56 = ptrtoint ptr %range_end33 to i32
  call void @__asan_store8_noabort(i32 %56)
  store i64 %55, ptr %range_end33, align 8
  %for_kupdate = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 5
  %57 = ptrtoint ptr %for_kupdate to i32
  call void @__asan_load2_noabort(i32 %57)
  %bf.load = load i16, ptr %for_kupdate, align 4
  %bf.lshr = lshr i16 %bf.load, 15
  %conv = trunc i16 %bf.lshr to i8
  %for_kupdate34 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call13, i32 0, i32 8
  %58 = ptrtoint ptr %for_kupdate34 to i32
  call void @__asan_store1_noabort(i32 %58)
  store i8 %conv, ptr %for_kupdate34, align 8
  %bf.load35 = load i16, ptr %for_kupdate, align 4
  %bf.lshr36 = lshr i16 %bf.load35, 12
  %59 = trunc i16 %bf.lshr36 to i8
  %conv38 = and i8 %59, 1
  %for_reclaim39 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call13, i32 0, i32 9
  %60 = ptrtoint ptr %for_reclaim39 to i32
  call void @__asan_store1_noabort(i32 %60)
  store i8 %conv38, ptr %for_reclaim39, align 1
  %bf.load40 = load i16, ptr %for_kupdate, align 4
  %bf.lshr41 = lshr i16 %bf.load40, 11
  %61 = trunc i16 %bf.lshr41 to i8
  %conv44 = and i8 %61, 1
  %range_cyclic45 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call13, i32 0, i32 10
  %62 = ptrtoint ptr %range_cyclic45 to i32
  call void @__asan_store1_noabort(i32 %62)
  store i8 %conv44, ptr %range_cyclic45, align 2
  %i_mapping = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %63 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %i_mapping, align 8
  %writeback_index = getelementptr inbounds %struct.address_space, ptr %64, i32 0, i32 8
  %65 = ptrtoint ptr %writeback_index to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %writeback_index, align 4
  %writeback_index46 = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call13, i32 0, i32 11
  %67 = ptrtoint ptr %writeback_index46 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %66, ptr %writeback_index46, align 4
  %68 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %add.ptr.i, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %69, i32 0, i32 7
  %70 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %70, i32 8)
  %71 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %call13, i32 0, i32 12
  %72 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %72)
  store i64 %71, ptr %root_objectid, align 8
  %73 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %rctx, align 4
  %75 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 84, i32 noundef %74, ptr noundef %__data, i64 noundef 1, ptr noundef %76, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_ino.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_writepage_end_io_hook(ptr noundef %__data, ptr nocapture noundef readonly %inode, i64 noundef %start, i64 noundef %end, i32 noundef %uptodate) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 64) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %3 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %inode, align 8
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %4, i32 0, i32 8
  %5 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_info, align 8
  %tobool6.not = icmp eq ptr %6, null
  %fsid12 = getelementptr inbounds %struct.trace_event_raw_btrfs_writepage_end_io_hook, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %6, i32 0, i32 100
  %7 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fs_devices, align 8
  %9 = call ptr @memcpy(ptr %fsid12, ptr %8, i32 16)
  br label %if.end14

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %10 = call ptr @memset(ptr %fsid12, i32 0, i32 16)
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then7
  %location.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 1
  %11 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %12 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %12)
  %tobool.not.i39 = icmp eq i64 %12, 0
  br i1 %tobool.not.i39, label %if.end14.if.then.i_crit_edge, label %lor.lhs.false.i

if.end14.if.then.i_crit_edge:                     ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end14
  %type.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 1, i32 1
  %13 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %14)
  %cmp.i = icmp eq i8 %14, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end14.if.then.i_crit_edge
  %i_ino.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37, i32 11
  %15 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %16 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %12, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_writepage_end_io_hook, ptr %call3, i32 0, i32 2
  %17 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %ino.0.i, ptr %ino, align 8
  %start16 = getelementptr inbounds %struct.trace_event_raw_btrfs_writepage_end_io_hook, ptr %call3, i32 0, i32 3
  %18 = ptrtoint ptr %start16 to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %start, ptr %start16, align 8
  %end17 = getelementptr inbounds %struct.trace_event_raw_btrfs_writepage_end_io_hook, ptr %call3, i32 0, i32 4
  %19 = ptrtoint ptr %end17 to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %end, ptr %end17, align 8
  %uptodate18 = getelementptr inbounds %struct.trace_event_raw_btrfs_writepage_end_io_hook, ptr %call3, i32 0, i32 5
  %20 = ptrtoint ptr %uptodate18 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %uptodate, ptr %uptodate18, align 8
  %21 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %inode, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %22, i32 0, i32 7
  %23 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %23, i32 8)
  %24 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_writepage_end_io_hook, ptr %call3, i32 0, i32 6
  %25 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %root_objectid, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_ino.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_writepage_end_io_hook(ptr noundef %__data, ptr nocapture noundef readonly %inode, i64 noundef %start, i64 noundef %end, i32 noundef %uptodate) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 68, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %inode, align 8
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %28, i32 0, i32 8
  %29 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_info, align 8
  %tobool17.not = icmp eq ptr %30, null
  %fsid23 = getelementptr inbounds %struct.trace_event_raw_btrfs_writepage_end_io_hook, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %30, i32 0, i32 100
  %31 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %fs_devices, align 8
  %33 = call ptr @memcpy(ptr %fsid23, ptr %32, i32 16)
  br label %if.end25

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %34 = call ptr @memset(ptr %fsid23, i32 0, i32 16)
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then18
  %location.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 1
  %35 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %35, i32 8)
  %36 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %36)
  %tobool.not.i62 = icmp eq i64 %36, 0
  br i1 %tobool.not.i62, label %if.end25.if.then.i_crit_edge, label %lor.lhs.false.i

if.end25.if.then.i_crit_edge:                     ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end25
  %type.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 1, i32 1
  %37 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %38)
  %cmp.i = icmp eq i8 %38, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end25.if.then.i_crit_edge
  %i_ino.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37, i32 11
  %39 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %40 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %36, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_writepage_end_io_hook, ptr %call13, i32 0, i32 2
  %41 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %ino.0.i, ptr %ino, align 8
  %start27 = getelementptr inbounds %struct.trace_event_raw_btrfs_writepage_end_io_hook, ptr %call13, i32 0, i32 3
  %42 = ptrtoint ptr %start27 to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %start, ptr %start27, align 8
  %end28 = getelementptr inbounds %struct.trace_event_raw_btrfs_writepage_end_io_hook, ptr %call13, i32 0, i32 4
  %43 = ptrtoint ptr %end28 to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %end, ptr %end28, align 8
  %uptodate29 = getelementptr inbounds %struct.trace_event_raw_btrfs_writepage_end_io_hook, ptr %call13, i32 0, i32 5
  %44 = ptrtoint ptr %uptodate29 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %uptodate, ptr %uptodate29, align 8
  %45 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %inode, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %46, i32 0, i32 7
  %47 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %47, i32 8)
  %48 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_writepage_end_io_hook, ptr %call13, i32 0, i32 6
  %49 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 %48, ptr %root_objectid, align 8
  %50 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %rctx, align 4
  %52 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 68, i32 noundef %51, ptr noundef %__data, i64 noundef 1, ptr noundef %53, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_ino.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_sync_file(ptr noundef %__data, ptr nocapture noundef readonly %file, i32 noundef %datasync) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 56) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %dentry6 = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1, i32 1
  %3 = ptrtoint ptr %dentry6 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dentry6, align 4
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %4, i32 0, i32 5
  %5 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %d_inode.i, align 8
  %d_sb = getelementptr inbounds %struct.dentry, ptr %4, i32 0, i32 9
  %7 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %d_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %8, i32 0, i32 33
  %9 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %s_fs_info.i, align 16
  %tobool11.not = icmp eq ptr %10, null
  %fsid19 = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_file, ptr %call3, i32 0, i32 1
  br i1 %tobool11.not, label %if.else, label %if.then12

if.then12:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %10, i32 0, i32 100
  %11 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %fs_devices, align 8
  %13 = call ptr @memcpy(ptr %fsid19, ptr %12, i32 16)
  br label %if.end21

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %14 = call ptr @memset(ptr %fsid19, i32 0, i32 16)
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then12
  %add.ptr.i = getelementptr i8, ptr %6, i32 -864
  %location.i = getelementptr i8, ptr %6, i32 -860
  %15 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %15, i32 8)
  %16 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %16)
  %tobool.not.i47 = icmp eq i64 %16, 0
  br i1 %tobool.not.i47, label %if.end21.if.then.i_crit_edge, label %lor.lhs.false.i

if.end21.if.then.i_crit_edge:                     ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end21
  %type.i = getelementptr i8, ptr %6, i32 -852
  %17 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %18)
  %cmp.i = icmp eq i8 %18, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end21.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %6, i32 40
  %19 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %20 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %16, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_file, ptr %call3, i32 0, i32 2
  %21 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %ino.0.i, ptr %ino, align 8
  %d_parent = getelementptr inbounds %struct.dentry, ptr %4, i32 0, i32 3
  %22 = ptrtoint ptr %d_parent to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %d_parent, align 8
  %d_inode.i49 = getelementptr inbounds %struct.dentry, ptr %23, i32 0, i32 5
  %24 = ptrtoint ptr %d_inode.i49 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %d_inode.i49, align 8
  %location.i51 = getelementptr i8, ptr %25, i32 -860
  %26 = ptrtoint ptr %location.i51 to i32
  call void @__asan_loadN_noabort(i32 %26, i32 8)
  %27 = load i64, ptr %location.i51, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %27)
  %tobool.not.i52 = icmp eq i64 %27, 0
  br i1 %tobool.not.i52, label %btrfs_ino.exit.if.then.i58_crit_edge, label %lor.lhs.false.i55

btrfs_ino.exit.if.then.i58_crit_edge:             ; preds = %btrfs_ino.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i58

lor.lhs.false.i55:                                ; preds = %btrfs_ino.exit
  %type.i53 = getelementptr i8, ptr %25, i32 -852
  %28 = ptrtoint ptr %type.i53 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %type.i53, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %29)
  %cmp.i54 = icmp eq i8 %29, -124
  br i1 %cmp.i54, label %lor.lhs.false.i55.if.then.i58_crit_edge, label %lor.lhs.false.i55.btrfs_ino.exit61_crit_edge

lor.lhs.false.i55.btrfs_ino.exit61_crit_edge:     ; preds = %lor.lhs.false.i55
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit61

lor.lhs.false.i55.if.then.i58_crit_edge:          ; preds = %lor.lhs.false.i55
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i58

if.then.i58:                                      ; preds = %lor.lhs.false.i55.if.then.i58_crit_edge, %btrfs_ino.exit.if.then.i58_crit_edge
  %i_ino.i56 = getelementptr i8, ptr %25, i32 40
  %30 = ptrtoint ptr %i_ino.i56 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %i_ino.i56, align 8
  %conv3.i57 = zext i32 %31 to i64
  br label %btrfs_ino.exit61

btrfs_ino.exit61:                                 ; preds = %if.then.i58, %lor.lhs.false.i55.btrfs_ino.exit61_crit_edge
  %ino.0.i59 = phi i64 [ %conv3.i57, %if.then.i58 ], [ %27, %lor.lhs.false.i55.btrfs_ino.exit61_crit_edge ]
  %parent = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_file, ptr %call3, i32 0, i32 3
  %32 = ptrtoint ptr %parent to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %ino.0.i59, ptr %parent, align 8
  %datasync27 = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_file, ptr %call3, i32 0, i32 4
  %33 = ptrtoint ptr %datasync27 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %datasync, ptr %datasync27, align 8
  %34 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %add.ptr.i, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %35, i32 0, i32 7
  %36 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %36, i32 8)
  %37 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_file, ptr %call3, i32 0, i32 5
  %38 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %37, ptr %root_objectid, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_ino.exit61, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_sync_file(ptr noundef %__data, ptr nocapture noundef readonly %file, i32 noundef %datasync) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %dentry17 = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1, i32 1
  %27 = ptrtoint ptr %dentry17 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %dentry17, align 4
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %28, i32 0, i32 5
  %29 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %d_inode.i, align 8
  %d_sb = getelementptr inbounds %struct.dentry, ptr %28, i32 0, i32 9
  %31 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %d_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %32, i32 0, i32 33
  %33 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %s_fs_info.i, align 16
  %tobool22.not = icmp eq ptr %34, null
  %fsid30 = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_file, ptr %call13, i32 0, i32 1
  br i1 %tobool22.not, label %if.else, label %if.then23

if.then23:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %34, i32 0, i32 100
  %35 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %fs_devices, align 8
  %37 = call ptr @memcpy(ptr %fsid30, ptr %36, i32 16)
  br label %if.end32

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %38 = call ptr @memset(ptr %fsid30, i32 0, i32 16)
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then23
  %add.ptr.i = getelementptr i8, ptr %30, i32 -864
  %location.i = getelementptr i8, ptr %30, i32 -860
  %39 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %39, i32 8)
  %40 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %40)
  %tobool.not.i70 = icmp eq i64 %40, 0
  br i1 %tobool.not.i70, label %if.end32.if.then.i_crit_edge, label %lor.lhs.false.i

if.end32.if.then.i_crit_edge:                     ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end32
  %type.i = getelementptr i8, ptr %30, i32 -852
  %41 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %42)
  %cmp.i = icmp eq i8 %42, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end32.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %30, i32 40
  %43 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %44 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %40, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_file, ptr %call13, i32 0, i32 2
  %45 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %ino.0.i, ptr %ino, align 8
  %d_parent = getelementptr inbounds %struct.dentry, ptr %28, i32 0, i32 3
  %46 = ptrtoint ptr %d_parent to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %d_parent, align 8
  %d_inode.i71 = getelementptr inbounds %struct.dentry, ptr %47, i32 0, i32 5
  %48 = ptrtoint ptr %d_inode.i71 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %d_inode.i71, align 8
  %location.i73 = getelementptr i8, ptr %49, i32 -860
  %50 = ptrtoint ptr %location.i73 to i32
  call void @__asan_loadN_noabort(i32 %50, i32 8)
  %51 = load i64, ptr %location.i73, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %51)
  %tobool.not.i74 = icmp eq i64 %51, 0
  br i1 %tobool.not.i74, label %btrfs_ino.exit.if.then.i80_crit_edge, label %lor.lhs.false.i77

btrfs_ino.exit.if.then.i80_crit_edge:             ; preds = %btrfs_ino.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i80

lor.lhs.false.i77:                                ; preds = %btrfs_ino.exit
  %type.i75 = getelementptr i8, ptr %49, i32 -852
  %52 = ptrtoint ptr %type.i75 to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %type.i75, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %53)
  %cmp.i76 = icmp eq i8 %53, -124
  br i1 %cmp.i76, label %lor.lhs.false.i77.if.then.i80_crit_edge, label %lor.lhs.false.i77.btrfs_ino.exit82_crit_edge

lor.lhs.false.i77.btrfs_ino.exit82_crit_edge:     ; preds = %lor.lhs.false.i77
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit82

lor.lhs.false.i77.if.then.i80_crit_edge:          ; preds = %lor.lhs.false.i77
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i80

if.then.i80:                                      ; preds = %lor.lhs.false.i77.if.then.i80_crit_edge, %btrfs_ino.exit.if.then.i80_crit_edge
  %i_ino.i78 = getelementptr i8, ptr %49, i32 40
  %54 = ptrtoint ptr %i_ino.i78 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %i_ino.i78, align 8
  %conv3.i79 = zext i32 %55 to i64
  br label %btrfs_ino.exit82

btrfs_ino.exit82:                                 ; preds = %if.then.i80, %lor.lhs.false.i77.btrfs_ino.exit82_crit_edge
  %ino.0.i81 = phi i64 [ %conv3.i79, %if.then.i80 ], [ %51, %lor.lhs.false.i77.btrfs_ino.exit82_crit_edge ]
  %parent = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_file, ptr %call13, i32 0, i32 3
  %56 = ptrtoint ptr %parent to i32
  call void @__asan_store8_noabort(i32 %56)
  store i64 %ino.0.i81, ptr %parent, align 8
  %datasync38 = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_file, ptr %call13, i32 0, i32 4
  %57 = ptrtoint ptr %datasync38 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %datasync, ptr %datasync38, align 8
  %58 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %add.ptr.i, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %59, i32 0, i32 7
  %60 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %60, i32 8)
  %61 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_file, ptr %call13, i32 0, i32 5
  %62 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %62)
  store i64 %61, ptr %root_objectid, align 8
  %63 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %rctx, align 4
  %65 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 60, i32 noundef %64, ptr noundef %__data, i64 noundef 1, ptr noundef %66, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_ino.exit82, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_sync_fs(ptr noundef %__data, ptr noundef readonly %fs_info, i32 noundef %wait) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_fs, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %wait13 = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_fs, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %wait13 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %wait, ptr %wait13, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_sync_fs(ptr noundef %__data, ptr noundef readonly %fs_info, i32 noundef %wait) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_fs, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %wait24 = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_fs, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %wait24 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %wait, ptr %wait24, align 4
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_add_block_group(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %block_group, i32 noundef %create) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 72) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %start = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 3
  %7 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %start, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %offset, align 8
  %length = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 4
  %10 = ptrtoint ptr %length to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %length, align 8
  %size = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %size to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %size, align 8
  %flags = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 10
  %13 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %flags, align 8
  %flags13 = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %call3, i32 0, i32 4
  %15 = ptrtoint ptr %flags13 to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %flags13, align 8
  %used = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 7
  %16 = ptrtoint ptr %used to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %used, align 8
  %bytes_used = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %call3, i32 0, i32 5
  %18 = ptrtoint ptr %bytes_used to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %17, ptr %bytes_used, align 8
  %bytes_super = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 9
  %19 = ptrtoint ptr %bytes_super to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %bytes_super, align 8
  %bytes_super14 = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %call3, i32 0, i32 6
  %21 = ptrtoint ptr %bytes_super14 to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %bytes_super14, align 8
  %create15 = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %call3, i32 0, i32 7
  %22 = ptrtoint ptr %create15 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %create, ptr %create15, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_add_block_group(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %block_group, i32 noundef %create) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 76, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %start = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 3
  %31 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %start, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %offset, align 8
  %length = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 4
  %34 = ptrtoint ptr %length to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %length, align 8
  %size = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %size to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %size, align 8
  %flags = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 10
  %37 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %flags, align 8
  %flags24 = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %call13, i32 0, i32 4
  %39 = ptrtoint ptr %flags24 to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %38, ptr %flags24, align 8
  %used = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 7
  %40 = ptrtoint ptr %used to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %used, align 8
  %bytes_used = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %call13, i32 0, i32 5
  %42 = ptrtoint ptr %bytes_used to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %41, ptr %bytes_used, align 8
  %bytes_super = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 9
  %43 = ptrtoint ptr %bytes_super to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %bytes_super, align 8
  %bytes_super25 = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %call13, i32 0, i32 6
  %45 = ptrtoint ptr %bytes_super25 to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %44, ptr %bytes_super25, align 8
  %create26 = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %call13, i32 0, i32 7
  %46 = ptrtoint ptr %create26 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %create, ptr %create26, align 8
  %47 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %rctx, align 4
  %49 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 76, i32 noundef %48, ptr noundef %__data, i64 noundef 1, ptr noundef %50, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_delayed_tree_ref(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %ref, ptr nocapture noundef readonly %full_ref, i32 noundef %action) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 80) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %bytenr = getelementptr inbounds %struct.btrfs_delayed_ref_node, ptr %ref, i32 0, i32 2
  %7 = ptrtoint ptr %bytenr to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %bytenr, align 8
  %bytenr13 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %bytenr13 to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %bytenr13, align 8
  %num_bytes = getelementptr inbounds %struct.btrfs_delayed_ref_node, ptr %ref, i32 0, i32 3
  %10 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %num_bytes, align 8
  %num_bytes14 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %num_bytes14 to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %num_bytes14, align 8
  %action15 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %call3, i32 0, i32 4
  %13 = ptrtoint ptr %action15 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %action, ptr %action15, align 8
  %parent = getelementptr inbounds %struct.btrfs_delayed_tree_ref, ptr %full_ref, i32 0, i32 2
  %14 = ptrtoint ptr %parent to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %parent, align 8
  %parent16 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %call3, i32 0, i32 5
  %16 = ptrtoint ptr %parent16 to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %15, ptr %parent16, align 8
  %root = getelementptr inbounds %struct.btrfs_delayed_tree_ref, ptr %full_ref, i32 0, i32 1
  %17 = ptrtoint ptr %root to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %root, align 8
  %ref_root = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %call3, i32 0, i32 6
  %19 = ptrtoint ptr %ref_root to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %18, ptr %ref_root, align 8
  %level = getelementptr inbounds %struct.btrfs_delayed_tree_ref, ptr %full_ref, i32 0, i32 3
  %20 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %level, align 8
  %level17 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %call3, i32 0, i32 7
  %22 = ptrtoint ptr %level17 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %level17, align 8
  %type = getelementptr inbounds %struct.btrfs_delayed_ref_node, ptr %ref, i32 0, i32 7
  %23 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %23)
  %bf.load = load i32, ptr %type, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %type18 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %call3, i32 0, i32 8
  %24 = ptrtoint ptr %type18 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %bf.clear, ptr %type18, align 4
  %seq = getelementptr inbounds %struct.btrfs_delayed_ref_node, ptr %ref, i32 0, i32 4
  %25 = ptrtoint ptr %seq to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %seq, align 8
  %seq19 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %call3, i32 0, i32 9
  %27 = ptrtoint ptr %seq19 to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %seq19, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_delayed_tree_ref(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %ref, ptr nocapture noundef readonly %full_ref, i32 noundef %action) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 84, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %bytenr = getelementptr inbounds %struct.btrfs_delayed_ref_node, ptr %ref, i32 0, i32 2
  %31 = ptrtoint ptr %bytenr to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %bytenr, align 8
  %bytenr24 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %bytenr24 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %bytenr24, align 8
  %num_bytes = getelementptr inbounds %struct.btrfs_delayed_ref_node, ptr %ref, i32 0, i32 3
  %34 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %num_bytes, align 8
  %num_bytes25 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %num_bytes25 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %num_bytes25, align 8
  %action26 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %call13, i32 0, i32 4
  %37 = ptrtoint ptr %action26 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %action, ptr %action26, align 8
  %parent = getelementptr inbounds %struct.btrfs_delayed_tree_ref, ptr %full_ref, i32 0, i32 2
  %38 = ptrtoint ptr %parent to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %parent, align 8
  %parent27 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %call13, i32 0, i32 5
  %40 = ptrtoint ptr %parent27 to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 %39, ptr %parent27, align 8
  %root = getelementptr inbounds %struct.btrfs_delayed_tree_ref, ptr %full_ref, i32 0, i32 1
  %41 = ptrtoint ptr %root to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %root, align 8
  %ref_root = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %call13, i32 0, i32 6
  %43 = ptrtoint ptr %ref_root to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %42, ptr %ref_root, align 8
  %level = getelementptr inbounds %struct.btrfs_delayed_tree_ref, ptr %full_ref, i32 0, i32 3
  %44 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %level, align 8
  %level28 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %call13, i32 0, i32 7
  %46 = ptrtoint ptr %level28 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %level28, align 8
  %type = getelementptr inbounds %struct.btrfs_delayed_ref_node, ptr %ref, i32 0, i32 7
  %47 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %47)
  %bf.load = load i32, ptr %type, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %type29 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %call13, i32 0, i32 8
  %48 = ptrtoint ptr %type29 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %bf.clear, ptr %type29, align 4
  %seq = getelementptr inbounds %struct.btrfs_delayed_ref_node, ptr %ref, i32 0, i32 4
  %49 = ptrtoint ptr %seq to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %seq, align 8
  %seq30 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %call13, i32 0, i32 9
  %51 = ptrtoint ptr %seq30 to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 %50, ptr %seq30, align 8
  %52 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %rctx, align 4
  %54 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 84, i32 noundef %53, ptr noundef %__data, i64 noundef 1, ptr noundef %55, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_delayed_data_ref(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %ref, ptr nocapture noundef readonly %full_ref, i32 noundef %action) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 96) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %bytenr = getelementptr inbounds %struct.btrfs_delayed_ref_node, ptr %ref, i32 0, i32 2
  %7 = ptrtoint ptr %bytenr to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %bytenr, align 8
  %bytenr13 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %bytenr13 to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %bytenr13, align 8
  %num_bytes = getelementptr inbounds %struct.btrfs_delayed_ref_node, ptr %ref, i32 0, i32 3
  %10 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %num_bytes, align 8
  %num_bytes14 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %num_bytes14 to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %num_bytes14, align 8
  %action15 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call3, i32 0, i32 4
  %13 = ptrtoint ptr %action15 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %action, ptr %action15, align 8
  %parent = getelementptr inbounds %struct.btrfs_delayed_data_ref, ptr %full_ref, i32 0, i32 2
  %14 = ptrtoint ptr %parent to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %parent, align 8
  %parent16 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call3, i32 0, i32 5
  %16 = ptrtoint ptr %parent16 to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %15, ptr %parent16, align 8
  %root = getelementptr inbounds %struct.btrfs_delayed_data_ref, ptr %full_ref, i32 0, i32 1
  %17 = ptrtoint ptr %root to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %root, align 8
  %ref_root = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call3, i32 0, i32 6
  %19 = ptrtoint ptr %ref_root to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %18, ptr %ref_root, align 8
  %objectid = getelementptr inbounds %struct.btrfs_delayed_data_ref, ptr %full_ref, i32 0, i32 3
  %20 = ptrtoint ptr %objectid to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %objectid, align 8
  %owner = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call3, i32 0, i32 7
  %22 = ptrtoint ptr %owner to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %21, ptr %owner, align 8
  %offset = getelementptr inbounds %struct.btrfs_delayed_data_ref, ptr %full_ref, i32 0, i32 4
  %23 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %offset, align 8
  %offset17 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call3, i32 0, i32 8
  %25 = ptrtoint ptr %offset17 to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %offset17, align 8
  %type = getelementptr inbounds %struct.btrfs_delayed_ref_node, ptr %ref, i32 0, i32 7
  %26 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %26)
  %bf.load = load i32, ptr %type, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %type18 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call3, i32 0, i32 9
  %27 = ptrtoint ptr %type18 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %bf.clear, ptr %type18, align 8
  %seq = getelementptr inbounds %struct.btrfs_delayed_ref_node, ptr %ref, i32 0, i32 4
  %28 = ptrtoint ptr %seq to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %seq, align 8
  %seq19 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call3, i32 0, i32 10
  %30 = ptrtoint ptr %seq19 to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %29, ptr %seq19, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_delayed_data_ref(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %ref, ptr nocapture noundef readonly %full_ref, i32 noundef %action) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 100, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %bytenr = getelementptr inbounds %struct.btrfs_delayed_ref_node, ptr %ref, i32 0, i32 2
  %31 = ptrtoint ptr %bytenr to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %bytenr, align 8
  %bytenr24 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %bytenr24 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %bytenr24, align 8
  %num_bytes = getelementptr inbounds %struct.btrfs_delayed_ref_node, ptr %ref, i32 0, i32 3
  %34 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %num_bytes, align 8
  %num_bytes25 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %num_bytes25 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %num_bytes25, align 8
  %action26 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call13, i32 0, i32 4
  %37 = ptrtoint ptr %action26 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %action, ptr %action26, align 8
  %parent = getelementptr inbounds %struct.btrfs_delayed_data_ref, ptr %full_ref, i32 0, i32 2
  %38 = ptrtoint ptr %parent to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %parent, align 8
  %parent27 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call13, i32 0, i32 5
  %40 = ptrtoint ptr %parent27 to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 %39, ptr %parent27, align 8
  %root = getelementptr inbounds %struct.btrfs_delayed_data_ref, ptr %full_ref, i32 0, i32 1
  %41 = ptrtoint ptr %root to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %root, align 8
  %ref_root = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call13, i32 0, i32 6
  %43 = ptrtoint ptr %ref_root to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %42, ptr %ref_root, align 8
  %objectid = getelementptr inbounds %struct.btrfs_delayed_data_ref, ptr %full_ref, i32 0, i32 3
  %44 = ptrtoint ptr %objectid to i32
  call void @__asan_load8_noabort(i32 %44)
  %45 = load i64, ptr %objectid, align 8
  %owner = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call13, i32 0, i32 7
  %46 = ptrtoint ptr %owner to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %45, ptr %owner, align 8
  %offset = getelementptr inbounds %struct.btrfs_delayed_data_ref, ptr %full_ref, i32 0, i32 4
  %47 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %offset, align 8
  %offset28 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call13, i32 0, i32 8
  %49 = ptrtoint ptr %offset28 to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 %48, ptr %offset28, align 8
  %type = getelementptr inbounds %struct.btrfs_delayed_ref_node, ptr %ref, i32 0, i32 7
  %50 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %50)
  %bf.load = load i32, ptr %type, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %type29 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call13, i32 0, i32 9
  %51 = ptrtoint ptr %type29 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %bf.clear, ptr %type29, align 8
  %seq = getelementptr inbounds %struct.btrfs_delayed_ref_node, ptr %ref, i32 0, i32 4
  %52 = ptrtoint ptr %seq to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %seq, align 8
  %seq30 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %call13, i32 0, i32 10
  %54 = ptrtoint ptr %seq30 to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 %53, ptr %seq30, align 8
  %55 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %rctx, align 4
  %57 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 100, i32 noundef %56, ptr noundef %__data, i64 noundef 1, ptr noundef %58, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_delayed_ref_head(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %head_ref, i32 noundef %action) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_ref_head, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %7 = ptrtoint ptr %head_ref to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %head_ref, align 8
  %bytenr13 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_ref_head, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %bytenr13 to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %bytenr13, align 8
  %num_bytes = getelementptr inbounds %struct.btrfs_delayed_ref_head, ptr %head_ref, i32 0, i32 1
  %10 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %num_bytes, align 8
  %num_bytes14 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_ref_head, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %num_bytes14 to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %num_bytes14, align 8
  %action15 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_ref_head, ptr %call3, i32 0, i32 4
  %13 = ptrtoint ptr %action15 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %action, ptr %action15, align 8
  %is_data = getelementptr inbounds %struct.btrfs_delayed_ref_head, ptr %head_ref, i32 0, i32 11
  %14 = ptrtoint ptr %is_data to i32
  call void @__asan_load1_noabort(i32 %14)
  %bf.load = load i8, ptr %is_data, align 4
  %bf.lshr = lshr i8 %bf.load, 6
  %bf.clear = and i8 %bf.lshr, 1
  %bf.cast = zext i8 %bf.clear to i32
  %is_data16 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_ref_head, ptr %call3, i32 0, i32 5
  %15 = ptrtoint ptr %is_data16 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %bf.cast, ptr %is_data16, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_delayed_ref_head(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %head_ref, i32 noundef %action) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_ref_head, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %31 = ptrtoint ptr %head_ref to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %head_ref, align 8
  %bytenr24 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_ref_head, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %bytenr24 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %bytenr24, align 8
  %num_bytes = getelementptr inbounds %struct.btrfs_delayed_ref_head, ptr %head_ref, i32 0, i32 1
  %34 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %num_bytes, align 8
  %num_bytes25 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_ref_head, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %num_bytes25 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %num_bytes25, align 8
  %action26 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_ref_head, ptr %call13, i32 0, i32 4
  %37 = ptrtoint ptr %action26 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %action, ptr %action26, align 8
  %is_data = getelementptr inbounds %struct.btrfs_delayed_ref_head, ptr %head_ref, i32 0, i32 11
  %38 = ptrtoint ptr %is_data to i32
  call void @__asan_load1_noabort(i32 %38)
  %bf.load = load i8, ptr %is_data, align 4
  %bf.lshr = lshr i8 %bf.load, 6
  %bf.clear = and i8 %bf.lshr, 1
  %bf.cast = zext i8 %bf.clear to i32
  %is_data27 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_ref_head, ptr %call13, i32 0, i32 5
  %39 = ptrtoint ptr %is_data27 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %bf.cast, ptr %is_data27, align 4
  %40 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rctx, align 4
  %42 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %41, ptr noundef %__data, i64 noundef 1, ptr noundef %43, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs__chunk(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %map, i64 noundef %offset, i64 noundef %size) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 72) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %num_stripes = getelementptr inbounds %struct.map_lookup, ptr %map, i32 0, i32 4
  %7 = ptrtoint ptr %num_stripes to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %num_stripes, align 8
  %num_stripes13 = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %num_stripes13 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %num_stripes13, align 8
  %10 = ptrtoint ptr %map to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %map, align 8
  %type14 = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %type14 to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %type14, align 8
  %sub_stripes = getelementptr inbounds %struct.map_lookup, ptr %map, i32 0, i32 5
  %13 = ptrtoint ptr %sub_stripes to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sub_stripes, align 4
  %sub_stripes15 = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %call3, i32 0, i32 4
  %15 = ptrtoint ptr %sub_stripes15 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %sub_stripes15, align 8
  %offset16 = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %call3, i32 0, i32 5
  %16 = ptrtoint ptr %offset16 to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %offset, ptr %offset16, align 8
  %size17 = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %call3, i32 0, i32 6
  %17 = ptrtoint ptr %size17 to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %size, ptr %size17, align 8
  %chunk_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 3
  %18 = ptrtoint ptr %chunk_root to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %chunk_root, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %19, i32 0, i32 7
  %20 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %20, i32 8)
  %21 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %call3, i32 0, i32 7
  %22 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %21, ptr %root_objectid, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs__chunk(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %map, i64 noundef %offset, i64 noundef %size) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 76, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %num_stripes = getelementptr inbounds %struct.map_lookup, ptr %map, i32 0, i32 4
  %31 = ptrtoint ptr %num_stripes to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %num_stripes, align 8
  %num_stripes24 = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %num_stripes24 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %num_stripes24, align 8
  %34 = ptrtoint ptr %map to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %map, align 8
  %type25 = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %type25 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %type25, align 8
  %sub_stripes = getelementptr inbounds %struct.map_lookup, ptr %map, i32 0, i32 5
  %37 = ptrtoint ptr %sub_stripes to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %sub_stripes, align 4
  %sub_stripes26 = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %call13, i32 0, i32 4
  %39 = ptrtoint ptr %sub_stripes26 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %sub_stripes26, align 8
  %offset27 = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %call13, i32 0, i32 5
  %40 = ptrtoint ptr %offset27 to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 %offset, ptr %offset27, align 8
  %size28 = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %call13, i32 0, i32 6
  %41 = ptrtoint ptr %size28 to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %size, ptr %size28, align 8
  %chunk_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 3
  %42 = ptrtoint ptr %chunk_root to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %chunk_root, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %43, i32 0, i32 7
  %44 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %44, i32 8)
  %45 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %call13, i32 0, i32 7
  %46 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %45, ptr %root_objectid, align 8
  %47 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %rctx, align 4
  %49 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 76, i32 noundef %48, ptr noundef %__data, i64 noundef 1, ptr noundef %50, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_cow_block(ptr noundef %__data, ptr nocapture noundef readonly %root, ptr noundef %buf, ptr nocapture noundef readonly %cow) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 64) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 8
  %3 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_info, align 8
  %tobool6.not = icmp eq ptr %4, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %4, i32 0, i32 100
  %5 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices, align 8
  %7 = call ptr @memcpy(ptr %fsid11, ptr %6, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %8 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 7
  %9 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %9, i32 8)
  %10 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %root_objectid, align 8
  %12 = ptrtoint ptr %buf to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %buf, align 8
  %buf_start = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %call3, i32 0, i32 3
  %14 = ptrtoint ptr %buf_start to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %13, ptr %buf_start, align 8
  %refs = getelementptr inbounds %struct.extent_buffer, ptr %buf, i32 0, i32 5
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %refs, i32 noundef 4) #23
  %15 = ptrtoint ptr %refs to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %refs, align 4
  %refs15 = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %call3, i32 0, i32 4
  %17 = ptrtoint ptr %refs15 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %refs15, align 8
  %18 = ptrtoint ptr %cow to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %cow, align 8
  %cow_start = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %call3, i32 0, i32 5
  %20 = ptrtoint ptr %cow_start to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %19, ptr %cow_start, align 8
  %pages.i = getelementptr inbounds %struct.extent_buffer, ptr %buf, i32 0, i32 12
  %21 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %pages.i, align 4
  %call.i41 = call ptr @page_address(ptr noundef %22) #23
  %23 = ptrtoint ptr %buf to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %buf, align 8
  %conv.i = trunc i64 %24 to i32
  %and.i42 = and i32 %conv.i, 4095
  %add.ptr.i = getelementptr i8, ptr %call.i41, i32 %and.i42
  %level.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i, i32 0, i32 8
  %25 = ptrtoint ptr %level.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %level.i, align 1
  %conv = zext i8 %26 to i32
  %buf_level = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %call3, i32 0, i32 6
  %27 = ptrtoint ptr %buf_level to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %conv, ptr %buf_level, align 8
  %pages.i43 = getelementptr inbounds %struct.extent_buffer, ptr %cow, i32 0, i32 12
  %28 = ptrtoint ptr %pages.i43 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %pages.i43, align 4
  %call.i44 = call ptr @page_address(ptr noundef %29) #23
  %30 = ptrtoint ptr %cow to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %cow, align 8
  %conv.i45 = trunc i64 %31 to i32
  %and.i46 = and i32 %conv.i45, 4095
  %add.ptr.i47 = getelementptr i8, ptr %call.i44, i32 %and.i46
  %level.i48 = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i47, i32 0, i32 8
  %32 = ptrtoint ptr %level.i48 to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %level.i48, align 1
  %conv19 = zext i8 %33 to i32
  %cow_level = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %call3, i32 0, i32 7
  %34 = ptrtoint ptr %cow_level to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %conv19, ptr %cow_level, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_cow_block(ptr noundef %__data, ptr nocapture noundef readonly %root, ptr noundef %buf, ptr nocapture noundef readonly %cow) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 68, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 8
  %27 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_info, align 8
  %tobool17.not = icmp eq ptr %28, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 100
  %29 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_devices, align 8
  %31 = call ptr @memcpy(ptr %fsid22, ptr %30, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %32 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 7
  %33 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %33, i32 8)
  %34 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %root_objectid, align 8
  %36 = ptrtoint ptr %buf to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %buf, align 8
  %buf_start = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %call13, i32 0, i32 3
  %38 = ptrtoint ptr %buf_start to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %37, ptr %buf_start, align 8
  %refs = getelementptr inbounds %struct.extent_buffer, ptr %buf, i32 0, i32 5
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %refs, i32 noundef 4) #23
  %39 = ptrtoint ptr %refs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %refs, align 4
  %refs26 = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %call13, i32 0, i32 4
  %41 = ptrtoint ptr %refs26 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %refs26, align 8
  %42 = ptrtoint ptr %cow to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %cow, align 8
  %cow_start = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %call13, i32 0, i32 5
  %44 = ptrtoint ptr %cow_start to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %43, ptr %cow_start, align 8
  %pages.i = getelementptr inbounds %struct.extent_buffer, ptr %buf, i32 0, i32 12
  %45 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %pages.i, align 4
  %call.i = call ptr @page_address(ptr noundef %46) #23
  %47 = ptrtoint ptr %buf to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %buf, align 8
  %conv.i = trunc i64 %48 to i32
  %and.i64 = and i32 %conv.i, 4095
  %add.ptr.i = getelementptr i8, ptr %call.i, i32 %and.i64
  %level.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i, i32 0, i32 8
  %49 = ptrtoint ptr %level.i to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %level.i, align 1
  %conv = zext i8 %50 to i32
  %buf_level = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %call13, i32 0, i32 6
  %51 = ptrtoint ptr %buf_level to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %conv, ptr %buf_level, align 8
  %pages.i65 = getelementptr inbounds %struct.extent_buffer, ptr %cow, i32 0, i32 12
  %52 = ptrtoint ptr %pages.i65 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %pages.i65, align 4
  %call.i66 = call ptr @page_address(ptr noundef %53) #23
  %54 = ptrtoint ptr %cow to i32
  call void @__asan_load8_noabort(i32 %54)
  %55 = load i64, ptr %cow, align 8
  %conv.i67 = trunc i64 %55 to i32
  %and.i68 = and i32 %conv.i67, 4095
  %add.ptr.i69 = getelementptr i8, ptr %call.i66, i32 %and.i68
  %level.i70 = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i69, i32 0, i32 8
  %56 = ptrtoint ptr %level.i70 to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %level.i70, align 1
  %conv30 = zext i8 %57 to i32
  %cow_level = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %call13, i32 0, i32 7
  %58 = ptrtoint ptr %cow_level to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %conv30, ptr %cow_level, align 4
  %59 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %rctx, align 4
  %61 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 68, i32 noundef %60, ptr noundef %__data, i64 noundef 1, ptr noundef %62, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_space_reservation(ptr noundef %__data, ptr noundef readonly %fs_info, ptr noundef readonly %type, i64 noundef %val, i64 noundef %bytes, i32 noundef %reserve) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i40 = icmp eq ptr %type, null
  %spec.select.i = select i1 %tobool.not.i40, ptr @.str.309, ptr %type
  %call.i41 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #26
  %add = add i32 %call.i41, 57
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %add.i = shl i32 %call.i41, 16
  %or.i = add i32 %add.i, 65588
  %__data_loc_type = getelementptr inbounds %struct.trace_event_raw_btrfs_space_reservation, ptr %call3, i32 0, i32 2
  %3 = ptrtoint ptr %__data_loc_type to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_type, align 8
  %tobool7.not = icmp eq ptr %fs_info, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_btrfs_space_reservation, ptr %call3, i32 0, i32 1
  br i1 %tobool7.not, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %4 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %fs_devices, align 8
  %6 = call ptr @memcpy(ptr %fsid11, ptr %5, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %7 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then8
  %8 = ptrtoint ptr %__data_loc_type to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %__data_loc_type, align 8
  %and = and i32 %9, 65535
  %add.ptr = getelementptr i8, ptr %call3, i32 %and
  %call16 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #27
  %val17 = getelementptr inbounds %struct.trace_event_raw_btrfs_space_reservation, ptr %call3, i32 0, i32 3
  %10 = ptrtoint ptr %val17 to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %val, ptr %val17, align 8
  %bytes18 = getelementptr inbounds %struct.trace_event_raw_btrfs_space_reservation, ptr %call3, i32 0, i32 4
  %11 = ptrtoint ptr %bytes18 to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %bytes, ptr %bytes18, align 8
  %reserve19 = getelementptr inbounds %struct.trace_event_raw_btrfs_space_reservation, ptr %call3, i32 0, i32 5
  %12 = ptrtoint ptr %reserve19 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %reserve, ptr %reserve19, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_space_reservation(ptr noundef %__data, ptr noundef readonly %fs_info, ptr noundef readonly %type, i64 noundef %val, i64 noundef %bytes, i32 noundef %reserve) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %tobool.not.i = icmp eq ptr %type, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.309, ptr %type
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #26
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65588
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i64.not = icmp eq ptr %15, null
  br i1 %tobool.not.i64.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 68
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_type = getelementptr inbounds %struct.trace_event_raw_btrfs_space_reservation, ptr %call13, i32 0, i32 2
  %27 = ptrtoint ptr %__data_loc_type to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_type, align 8
  %tobool18.not = icmp eq ptr %fs_info, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_btrfs_space_reservation, ptr %call13, i32 0, i32 1
  br i1 %tobool18.not, label %if.else, label %if.then19

if.then19:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %28 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %fs_devices, align 8
  %30 = call ptr @memcpy(ptr %fsid22, ptr %29, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %31 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then19
  %32 = ptrtoint ptr %__data_loc_type to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %__data_loc_type, align 8
  %and26 = and i32 %33, 65535
  %add.ptr = getelementptr i8, ptr %call13, i32 %and26
  %call28 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #27
  %val29 = getelementptr inbounds %struct.trace_event_raw_btrfs_space_reservation, ptr %call13, i32 0, i32 3
  %34 = ptrtoint ptr %val29 to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %val, ptr %val29, align 8
  %bytes30 = getelementptr inbounds %struct.trace_event_raw_btrfs_space_reservation, ptr %call13, i32 0, i32 4
  %35 = ptrtoint ptr %bytes30 to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %bytes, ptr %bytes30, align 8
  %reserve31 = getelementptr inbounds %struct.trace_event_raw_btrfs_space_reservation, ptr %call13, i32 0, i32 5
  %36 = ptrtoint ptr %reserve31 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %reserve, ptr %reserve31, align 8
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_trigger_flush(ptr noundef %__data, ptr noundef readonly %fs_info, i64 noundef %flags, i64 noundef %bytes, i32 noundef %flush, ptr noundef readonly %reason) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i40 = icmp eq ptr %reason, null
  %spec.select.i = select i1 %tobool.not.i40, ptr @.str.309, ptr %reason
  %call.i41 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #26
  %add = add i32 %call.i41, 49
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %add.i = shl i32 %call.i41, 16
  %or.i = add i32 %add.i, 65584
  %__data_loc_reason = getelementptr inbounds %struct.trace_event_raw_btrfs_trigger_flush, ptr %call3, i32 0, i32 5
  %3 = ptrtoint ptr %__data_loc_reason to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_reason, align 4
  %tobool7.not = icmp eq ptr %fs_info, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_btrfs_trigger_flush, ptr %call3, i32 0, i32 1
  br i1 %tobool7.not, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %4 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %fs_devices, align 8
  %6 = call ptr @memcpy(ptr %fsid11, ptr %5, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %7 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then8
  %flags14 = getelementptr inbounds %struct.trace_event_raw_btrfs_trigger_flush, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %flags14 to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %flags, ptr %flags14, align 8
  %bytes15 = getelementptr inbounds %struct.trace_event_raw_btrfs_trigger_flush, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %bytes15 to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %bytes, ptr %bytes15, align 8
  %flush16 = getelementptr inbounds %struct.trace_event_raw_btrfs_trigger_flush, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %flush16 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %flush, ptr %flush16, align 8
  %11 = ptrtoint ptr %__data_loc_reason to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %__data_loc_reason, align 4
  %and = and i32 %12, 65535
  %add.ptr = getelementptr i8, ptr %call3, i32 %and
  %call19 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #27
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_trigger_flush(ptr noundef %__data, ptr noundef readonly %fs_info, i64 noundef %flags, i64 noundef %bytes, i32 noundef %flush, ptr noundef readonly %reason) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %tobool.not.i = icmp eq ptr %reason, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.309, ptr %reason
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #26
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65584
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i64.not = icmp eq ptr %15, null
  br i1 %tobool.not.i64.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 60
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_reason = getelementptr inbounds %struct.trace_event_raw_btrfs_trigger_flush, ptr %call13, i32 0, i32 5
  %27 = ptrtoint ptr %__data_loc_reason to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_reason, align 4
  %tobool18.not = icmp eq ptr %fs_info, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_btrfs_trigger_flush, ptr %call13, i32 0, i32 1
  br i1 %tobool18.not, label %if.else, label %if.then19

if.then19:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %28 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %fs_devices, align 8
  %30 = call ptr @memcpy(ptr %fsid22, ptr %29, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %31 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then19
  %flags25 = getelementptr inbounds %struct.trace_event_raw_btrfs_trigger_flush, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %flags25 to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %flags, ptr %flags25, align 8
  %bytes26 = getelementptr inbounds %struct.trace_event_raw_btrfs_trigger_flush, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %bytes26 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %bytes, ptr %bytes26, align 8
  %flush27 = getelementptr inbounds %struct.trace_event_raw_btrfs_trigger_flush, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %flush27 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %flush, ptr %flush27, align 8
  %35 = ptrtoint ptr %__data_loc_reason to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %__data_loc_reason, align 4
  %and29 = and i32 %36, 65535
  %add.ptr = getelementptr i8, ptr %call13, i32 %and29
  %call31 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #27
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_flush_space(ptr noundef %__data, ptr noundef readonly %fs_info, i64 noundef %flags, i64 noundef %num_bytes, i32 noundef %state, i32 noundef %ret, i1 noundef zeroext %for_preempt) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  %frombool = zext i1 %for_preempt to i8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 56) #23
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %tobool7.not = icmp eq ptr %fs_info, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_btrfs_flush_space, ptr %call3, i32 0, i32 1
  br i1 %tobool7.not, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid11, ptr %4, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then8
  %flags14 = getelementptr inbounds %struct.trace_event_raw_btrfs_flush_space, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %flags14 to i32
  call void @__asan_store8_noabort(i32 %7)
  store i64 %flags, ptr %flags14, align 8
  %num_bytes15 = getelementptr inbounds %struct.trace_event_raw_btrfs_flush_space, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %num_bytes15 to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %num_bytes, ptr %num_bytes15, align 8
  %state16 = getelementptr inbounds %struct.trace_event_raw_btrfs_flush_space, ptr %call3, i32 0, i32 4
  %9 = ptrtoint ptr %state16 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %state, ptr %state16, align 8
  %ret17 = getelementptr inbounds %struct.trace_event_raw_btrfs_flush_space, ptr %call3, i32 0, i32 5
  %10 = ptrtoint ptr %ret17 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %ret, ptr %ret17, align 4
  %for_preempt19 = getelementptr inbounds %struct.trace_event_raw_btrfs_flush_space, ptr %call3, i32 0, i32 6
  %11 = ptrtoint ptr %for_preempt19 to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %frombool, ptr %for_preempt19, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_flush_space(ptr noundef %__data, ptr noundef readonly %fs_info, i64 noundef %flags, i64 noundef %num_bytes, i32 noundef %state, i32 noundef %ret, i1 noundef zeroext %for_preempt) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  %frombool = zext i1 %for_preempt to i8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end17:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool18.not = icmp eq ptr %fs_info, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_btrfs_flush_space, ptr %call14, i32 0, i32 1
  br i1 %tobool18.not, label %if.else, label %if.then19

if.then19:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid22, ptr %28, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then19
  %flags25 = getelementptr inbounds %struct.trace_event_raw_btrfs_flush_space, ptr %call14, i32 0, i32 2
  %31 = ptrtoint ptr %flags25 to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %flags, ptr %flags25, align 8
  %num_bytes26 = getelementptr inbounds %struct.trace_event_raw_btrfs_flush_space, ptr %call14, i32 0, i32 3
  %32 = ptrtoint ptr %num_bytes26 to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %num_bytes, ptr %num_bytes26, align 8
  %state27 = getelementptr inbounds %struct.trace_event_raw_btrfs_flush_space, ptr %call14, i32 0, i32 4
  %33 = ptrtoint ptr %state27 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %state, ptr %state27, align 8
  %ret28 = getelementptr inbounds %struct.trace_event_raw_btrfs_flush_space, ptr %call14, i32 0, i32 5
  %34 = ptrtoint ptr %ret28 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %ret, ptr %ret28, align 4
  %for_preempt30 = getelementptr inbounds %struct.trace_event_raw_btrfs_flush_space, ptr %call14, i32 0, i32 6
  %35 = ptrtoint ptr %for_preempt30 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 %frombool, ptr %for_preempt30, align 8
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 60, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs__reserved_extent(ptr noundef %__data, ptr noundef readonly %fs_info, i64 noundef %start, i64 noundef %len) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_btrfs__reserved_extent, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %start13 = getelementptr inbounds %struct.trace_event_raw_btrfs__reserved_extent, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %start13 to i32
  call void @__asan_store8_noabort(i32 %7)
  store i64 %start, ptr %start13, align 8
  %len14 = getelementptr inbounds %struct.trace_event_raw_btrfs__reserved_extent, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %len14 to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %len, ptr %len14, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs__reserved_extent(ptr noundef %__data, ptr noundef readonly %fs_info, i64 noundef %start, i64 noundef %len) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_btrfs__reserved_extent, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %start24 = getelementptr inbounds %struct.trace_event_raw_btrfs__reserved_extent, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %start24 to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %start, ptr %start24, align 8
  %len25 = getelementptr inbounds %struct.trace_event_raw_btrfs__reserved_extent, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %len25 to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %len, ptr %len25, align 8
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_find_free_extent(ptr noundef %__data, ptr nocapture noundef readonly %root, i64 noundef %num_bytes, i64 noundef %empty_size, i64 noundef %data) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 56) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 8
  %3 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_info, align 8
  %tobool6.not = icmp eq ptr %4, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_find_free_extent, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %4, i32 0, i32 100
  %5 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices, align 8
  %7 = call ptr @memcpy(ptr %fsid11, ptr %6, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %8 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 7
  %9 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %9, i32 8)
  %10 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_find_free_extent, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %root_objectid, align 8
  %num_bytes14 = getelementptr inbounds %struct.trace_event_raw_find_free_extent, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %num_bytes14 to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %num_bytes, ptr %num_bytes14, align 8
  %empty_size15 = getelementptr inbounds %struct.trace_event_raw_find_free_extent, ptr %call3, i32 0, i32 4
  %13 = ptrtoint ptr %empty_size15 to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %empty_size, ptr %empty_size15, align 8
  %data16 = getelementptr inbounds %struct.trace_event_raw_find_free_extent, ptr %call3, i32 0, i32 5
  %14 = ptrtoint ptr %data16 to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %data, ptr %data16, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_find_free_extent(ptr noundef %__data, ptr nocapture noundef readonly %root, i64 noundef %num_bytes, i64 noundef %empty_size, i64 noundef %data) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 8
  %27 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_info, align 8
  %tobool17.not = icmp eq ptr %28, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_find_free_extent, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 100
  %29 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_devices, align 8
  %31 = call ptr @memcpy(ptr %fsid22, ptr %30, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %32 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 7
  %33 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %33, i32 8)
  %34 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_find_free_extent, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %root_objectid, align 8
  %num_bytes25 = getelementptr inbounds %struct.trace_event_raw_find_free_extent, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %num_bytes25 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %num_bytes, ptr %num_bytes25, align 8
  %empty_size26 = getelementptr inbounds %struct.trace_event_raw_find_free_extent, ptr %call13, i32 0, i32 4
  %37 = ptrtoint ptr %empty_size26 to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %empty_size, ptr %empty_size26, align 8
  %data27 = getelementptr inbounds %struct.trace_event_raw_find_free_extent, ptr %call13, i32 0, i32 5
  %38 = ptrtoint ptr %data27 to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %data, ptr %data27, align 8
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 60, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs__reserve_extent(ptr noundef %__data, ptr nocapture noundef readonly %block_group, i64 noundef %start, i64 noundef %len) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 56) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %3 = ptrtoint ptr %block_group to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %block_group, align 8
  %tobool6.not = icmp eq ptr %4, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_btrfs__reserve_extent, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %4, i32 0, i32 100
  %5 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices, align 8
  %7 = call ptr @memcpy(ptr %fsid11, ptr %6, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %8 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %start14 = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 3
  %9 = ptrtoint ptr %start14 to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %start14, align 8
  %bg_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs__reserve_extent, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %bg_objectid to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %bg_objectid, align 8
  %flags = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 10
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %flags, align 8
  %flags15 = getelementptr inbounds %struct.trace_event_raw_btrfs__reserve_extent, ptr %call3, i32 0, i32 3
  %14 = ptrtoint ptr %flags15 to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %13, ptr %flags15, align 8
  %start16 = getelementptr inbounds %struct.trace_event_raw_btrfs__reserve_extent, ptr %call3, i32 0, i32 4
  %15 = ptrtoint ptr %start16 to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %start, ptr %start16, align 8
  %len17 = getelementptr inbounds %struct.trace_event_raw_btrfs__reserve_extent, ptr %call3, i32 0, i32 5
  %16 = ptrtoint ptr %len17 to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %len, ptr %len17, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs__reserve_extent(ptr noundef %__data, ptr nocapture noundef readonly %block_group, i64 noundef %start, i64 noundef %len) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %block_group to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %block_group, align 8
  %tobool17.not = icmp eq ptr %28, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_btrfs__reserve_extent, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 100
  %29 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_devices, align 8
  %31 = call ptr @memcpy(ptr %fsid22, ptr %30, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %32 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18
  %start25 = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 3
  %33 = ptrtoint ptr %start25 to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %start25, align 8
  %bg_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs__reserve_extent, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %bg_objectid to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %bg_objectid, align 8
  %flags = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 10
  %36 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %flags, align 8
  %flags26 = getelementptr inbounds %struct.trace_event_raw_btrfs__reserve_extent, ptr %call13, i32 0, i32 3
  %38 = ptrtoint ptr %flags26 to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %37, ptr %flags26, align 8
  %start27 = getelementptr inbounds %struct.trace_event_raw_btrfs__reserve_extent, ptr %call13, i32 0, i32 4
  %39 = ptrtoint ptr %start27 to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %start, ptr %start27, align 8
  %len28 = getelementptr inbounds %struct.trace_event_raw_btrfs__reserve_extent, ptr %call13, i32 0, i32 5
  %40 = ptrtoint ptr %len28 to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 %len, ptr %len28, align 8
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 60, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_find_cluster(ptr noundef %__data, ptr nocapture noundef readonly %block_group, i64 noundef %start, i64 noundef %bytes, i64 noundef %empty_size, i64 noundef %min_bytes) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 72) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %3 = ptrtoint ptr %block_group to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %block_group, align 8
  %tobool6.not = icmp eq ptr %4, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %4, i32 0, i32 100
  %5 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices, align 8
  %7 = call ptr @memcpy(ptr %fsid11, ptr %6, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %8 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %start14 = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 3
  %9 = ptrtoint ptr %start14 to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %start14, align 8
  %bg_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %bg_objectid to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %bg_objectid, align 8
  %flags = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 10
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %flags, align 8
  %flags15 = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %call3, i32 0, i32 3
  %14 = ptrtoint ptr %flags15 to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %13, ptr %flags15, align 8
  %start16 = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %call3, i32 0, i32 4
  %15 = ptrtoint ptr %start16 to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %start, ptr %start16, align 8
  %bytes17 = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %call3, i32 0, i32 5
  %16 = ptrtoint ptr %bytes17 to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %bytes, ptr %bytes17, align 8
  %empty_size18 = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %call3, i32 0, i32 6
  %17 = ptrtoint ptr %empty_size18 to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %empty_size, ptr %empty_size18, align 8
  %min_bytes19 = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %call3, i32 0, i32 7
  %18 = ptrtoint ptr %min_bytes19 to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %min_bytes, ptr %min_bytes19, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_find_cluster(ptr noundef %__data, ptr nocapture noundef readonly %block_group, i64 noundef %start, i64 noundef %bytes, i64 noundef %empty_size, i64 noundef %min_bytes) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 76, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %block_group to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %block_group, align 8
  %tobool17.not = icmp eq ptr %28, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 100
  %29 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_devices, align 8
  %31 = call ptr @memcpy(ptr %fsid22, ptr %30, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %32 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18
  %start25 = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 3
  %33 = ptrtoint ptr %start25 to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %start25, align 8
  %bg_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %bg_objectid to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %bg_objectid, align 8
  %flags = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 10
  %36 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %flags, align 8
  %flags26 = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %call13, i32 0, i32 3
  %38 = ptrtoint ptr %flags26 to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %37, ptr %flags26, align 8
  %start27 = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %call13, i32 0, i32 4
  %39 = ptrtoint ptr %start27 to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %start, ptr %start27, align 8
  %bytes28 = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %call13, i32 0, i32 5
  %40 = ptrtoint ptr %bytes28 to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 %bytes, ptr %bytes28, align 8
  %empty_size29 = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %call13, i32 0, i32 6
  %41 = ptrtoint ptr %empty_size29 to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %empty_size, ptr %empty_size29, align 8
  %min_bytes30 = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %call13, i32 0, i32 7
  %42 = ptrtoint ptr %min_bytes30 to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %min_bytes, ptr %min_bytes30, align 8
  %43 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %rctx, align 4
  %45 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 76, i32 noundef %44, ptr noundef %__data, i64 noundef 1, ptr noundef %46, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_failed_cluster_setup(ptr noundef %__data, ptr nocapture noundef readonly %block_group) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %3 = ptrtoint ptr %block_group to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %block_group, align 8
  %tobool6.not = icmp eq ptr %4, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_btrfs_failed_cluster_setup, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %4, i32 0, i32 100
  %5 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices, align 8
  %7 = call ptr @memcpy(ptr %fsid11, ptr %6, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %8 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %start = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 3
  %9 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %start, align 8
  %bg_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_failed_cluster_setup, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %bg_objectid to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %bg_objectid, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_failed_cluster_setup(ptr noundef %__data, ptr nocapture noundef readonly %block_group) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %block_group to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %block_group, align 8
  %tobool17.not = icmp eq ptr %28, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_btrfs_failed_cluster_setup, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 100
  %29 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_devices, align 8
  %31 = call ptr @memcpy(ptr %fsid22, ptr %30, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %32 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18
  %start = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 3
  %33 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %start, align 8
  %bg_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_failed_cluster_setup, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %bg_objectid to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %bg_objectid, align 8
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_setup_cluster(ptr noundef %__data, ptr nocapture noundef readonly %block_group, ptr nocapture noundef readonly %cluster, i64 noundef %size, i32 noundef %bitmap) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 72) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %3 = ptrtoint ptr %block_group to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %block_group, align 8
  %tobool6.not = icmp eq ptr %4, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %4, i32 0, i32 100
  %5 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices, align 8
  %7 = call ptr @memcpy(ptr %fsid11, ptr %6, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %8 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %start = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 3
  %9 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %start, align 8
  %bg_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %bg_objectid to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %bg_objectid, align 8
  %flags = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 10
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %flags, align 8
  %flags14 = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %call3, i32 0, i32 3
  %14 = ptrtoint ptr %flags14 to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %13, ptr %flags14, align 8
  %window_start = getelementptr inbounds %struct.btrfs_free_cluster, ptr %cluster, i32 0, i32 4
  %15 = ptrtoint ptr %window_start to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %window_start, align 8
  %start15 = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %call3, i32 0, i32 4
  %17 = ptrtoint ptr %start15 to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %16, ptr %start15, align 8
  %max_size = getelementptr inbounds %struct.btrfs_free_cluster, ptr %cluster, i32 0, i32 3
  %18 = ptrtoint ptr %max_size to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %max_size, align 8
  %max_size16 = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %call3, i32 0, i32 5
  %20 = ptrtoint ptr %max_size16 to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %19, ptr %max_size16, align 8
  %size17 = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %call3, i32 0, i32 6
  %21 = ptrtoint ptr %size17 to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %size, ptr %size17, align 8
  %bitmap18 = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %call3, i32 0, i32 7
  %22 = ptrtoint ptr %bitmap18 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %bitmap, ptr %bitmap18, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_setup_cluster(ptr noundef %__data, ptr nocapture noundef readonly %block_group, ptr nocapture noundef readonly %cluster, i64 noundef %size, i32 noundef %bitmap) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 76, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %block_group to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %block_group, align 8
  %tobool17.not = icmp eq ptr %28, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 100
  %29 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_devices, align 8
  %31 = call ptr @memcpy(ptr %fsid22, ptr %30, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %32 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18
  %start = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 3
  %33 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %start, align 8
  %bg_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %bg_objectid to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %bg_objectid, align 8
  %flags = getelementptr inbounds %struct.btrfs_block_group, ptr %block_group, i32 0, i32 10
  %36 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %flags, align 8
  %flags25 = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %call13, i32 0, i32 3
  %38 = ptrtoint ptr %flags25 to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %37, ptr %flags25, align 8
  %window_start = getelementptr inbounds %struct.btrfs_free_cluster, ptr %cluster, i32 0, i32 4
  %39 = ptrtoint ptr %window_start to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %window_start, align 8
  %start26 = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %call13, i32 0, i32 4
  %41 = ptrtoint ptr %start26 to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %40, ptr %start26, align 8
  %max_size = getelementptr inbounds %struct.btrfs_free_cluster, ptr %cluster, i32 0, i32 3
  %42 = ptrtoint ptr %max_size to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %max_size, align 8
  %max_size27 = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %call13, i32 0, i32 5
  %44 = ptrtoint ptr %max_size27 to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %43, ptr %max_size27, align 8
  %size28 = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %call13, i32 0, i32 6
  %45 = ptrtoint ptr %size28 to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %size, ptr %size28, align 8
  %bitmap29 = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %call13, i32 0, i32 7
  %46 = ptrtoint ptr %bitmap29 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %bitmap, ptr %bitmap29, align 8
  %47 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %rctx, align 4
  %49 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 76, i32 noundef %48, ptr noundef %__data, i64 noundef 1, ptr noundef %50, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_alloc_extent_state(ptr noundef %__data, ptr noundef %state, i32 noundef %mask, i32 noundef %IP) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %state6 = getelementptr inbounds %struct.trace_event_raw_alloc_extent_state, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %state6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %state, ptr %state6, align 4
  %mask7 = getelementptr inbounds %struct.trace_event_raw_alloc_extent_state, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %mask7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %mask, ptr %mask7, align 4
  %5 = inttoptr i32 %IP to ptr
  %ip = getelementptr inbounds %struct.trace_event_raw_alloc_extent_state, ptr %call3, i32 0, i32 3
  %6 = ptrtoint ptr %ip to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %5, ptr %ip, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_alloc_extent_state(ptr noundef %__data, ptr noundef %state, i32 noundef %mask, i32 noundef %IP) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %state17 = getelementptr inbounds %struct.trace_event_raw_alloc_extent_state, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %state17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %state, ptr %state17, align 4
  %mask18 = getelementptr inbounds %struct.trace_event_raw_alloc_extent_state, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %mask18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %mask, ptr %mask18, align 4
  %29 = inttoptr i32 %IP to ptr
  %ip = getelementptr inbounds %struct.trace_event_raw_alloc_extent_state, ptr %call13, i32 0, i32 3
  %30 = ptrtoint ptr %ip to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %29, ptr %ip, align 4
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_free_extent_state(ptr noundef %__data, ptr noundef %state, i32 noundef %IP) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %state6 = getelementptr inbounds %struct.trace_event_raw_free_extent_state, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %state6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %state, ptr %state6, align 4
  %4 = inttoptr i32 %IP to ptr
  %ip = getelementptr inbounds %struct.trace_event_raw_free_extent_state, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %ip to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %4, ptr %ip, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_free_extent_state(ptr noundef %__data, ptr noundef %state, i32 noundef %IP) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %state17 = getelementptr inbounds %struct.trace_event_raw_free_extent_state, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %state17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %state, ptr %state17, align 4
  %28 = inttoptr i32 %IP to ptr
  %ip = getelementptr inbounds %struct.trace_event_raw_free_extent_state, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %ip to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %28, ptr %ip, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs__work(ptr noundef %__data, ptr noundef %work) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %call6 = call ptr @btrfs_work_owner(ptr noundef %work) #28
  %tobool7.not = icmp eq ptr %call6, null
  %fsid12 = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %call3, i32 0, i32 1
  br i1 %tobool7.not, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %call6, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid12, ptr %4, i32 16)
  br label %if.end14

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid12, i32 0, i32 16)
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then8
  %work15 = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %work15 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %work, ptr %work15, align 4
  %wq = getelementptr inbounds %struct.btrfs_work, ptr %work, i32 0, i32 5
  %8 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %wq, align 4
  %wq16 = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %call3, i32 0, i32 3
  %10 = ptrtoint ptr %wq16 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %9, ptr %wq16, align 4
  %11 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %work, align 4
  %func17 = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %call3, i32 0, i32 4
  %13 = ptrtoint ptr %func17 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %12, ptr %func17, align 4
  %ordered_func = getelementptr inbounds %struct.btrfs_work, ptr %work, i32 0, i32 1
  %14 = ptrtoint ptr %ordered_func to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ordered_func, align 4
  %ordered_func18 = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %call3, i32 0, i32 5
  %16 = ptrtoint ptr %ordered_func18 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %15, ptr %ordered_func18, align 4
  %ordered_free = getelementptr inbounds %struct.btrfs_work, ptr %work, i32 0, i32 2
  %17 = ptrtoint ptr %ordered_free to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ordered_free, align 4
  %ordered_free19 = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %call3, i32 0, i32 6
  %19 = ptrtoint ptr %ordered_free19 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %18, ptr %ordered_free19, align 4
  %normal_work = getelementptr inbounds %struct.btrfs_work, ptr %work, i32 0, i32 3
  %normal_work20 = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %call3, i32 0, i32 7
  %20 = ptrtoint ptr %normal_work20 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %normal_work, ptr %normal_work20, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs__work(ptr noundef %__data, ptr noundef %work) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %call17 = call ptr @btrfs_work_owner(ptr noundef %work) #28
  %tobool18.not = icmp eq ptr %call17, null
  %fsid23 = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %call13, i32 0, i32 1
  br i1 %tobool18.not, label %if.else, label %if.then19

if.then19:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %call17, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid23, ptr %28, i32 16)
  br label %if.end25

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid23, i32 0, i32 16)
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then19
  %work26 = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %work26 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %work, ptr %work26, align 4
  %wq = getelementptr inbounds %struct.btrfs_work, ptr %work, i32 0, i32 5
  %32 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %wq, align 4
  %wq27 = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %call13, i32 0, i32 3
  %34 = ptrtoint ptr %wq27 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %33, ptr %wq27, align 4
  %35 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %work, align 4
  %func28 = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %call13, i32 0, i32 4
  %37 = ptrtoint ptr %func28 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %36, ptr %func28, align 4
  %ordered_func = getelementptr inbounds %struct.btrfs_work, ptr %work, i32 0, i32 1
  %38 = ptrtoint ptr %ordered_func to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %ordered_func, align 4
  %ordered_func29 = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %call13, i32 0, i32 5
  %40 = ptrtoint ptr %ordered_func29 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %39, ptr %ordered_func29, align 4
  %ordered_free = getelementptr inbounds %struct.btrfs_work, ptr %work, i32 0, i32 2
  %41 = ptrtoint ptr %ordered_free to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ordered_free, align 4
  %ordered_free30 = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %call13, i32 0, i32 6
  %43 = ptrtoint ptr %ordered_free30 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %42, ptr %ordered_free30, align 4
  %normal_work = getelementptr inbounds %struct.btrfs_work, ptr %work, i32 0, i32 3
  %normal_work31 = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %call13, i32 0, i32 7
  %44 = ptrtoint ptr %normal_work31 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %normal_work, ptr %normal_work31, align 4
  %45 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rctx, align 4
  %47 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %46, ptr noundef %__data, i64 noundef 1, ptr noundef %48, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end25, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs__work__done(ptr noundef %__data, ptr noundef readonly %fs_info, ptr noundef %wtag) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_btrfs__work__done, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %wtag13 = getelementptr inbounds %struct.trace_event_raw_btrfs__work__done, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %wtag13 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %wtag, ptr %wtag13, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs__work__done(ptr noundef %__data, ptr noundef readonly %fs_info, ptr noundef %wtag) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_btrfs__work__done, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %wtag24 = getelementptr inbounds %struct.trace_event_raw_btrfs__work__done, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %wtag24 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %wtag, ptr %wtag24, align 4
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs__workqueue(ptr noundef %__data, ptr noundef %wq, ptr noundef readonly %name, i32 noundef %high) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i39 = icmp eq ptr %name, null
  %spec.select.i = select i1 %tobool.not.i39, ptr @.str.309, ptr %name
  %call.i40 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #26
  %add = add i32 %call.i40, 37
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %add.i = shl i32 %call.i40, 16
  %or.i = add i32 %add.i, 65572
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_btrfs__workqueue, ptr %call3, i32 0, i32 3
  %3 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %call7 = call ptr @btrfs_workqueue_owner(ptr noundef %wq) #28
  %tobool8.not = icmp eq ptr %call7, null
  %fsid13 = getelementptr inbounds %struct.trace_event_raw_btrfs__workqueue, ptr %call3, i32 0, i32 1
  br i1 %tobool8.not, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %call7, i32 0, i32 100
  %4 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %fs_devices, align 8
  %6 = call ptr @memcpy(ptr %fsid13, ptr %5, i32 16)
  br label %if.end15

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %7 = call ptr @memset(ptr %fsid13, i32 0, i32 16)
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then9
  %wq16 = getelementptr inbounds %struct.trace_event_raw_btrfs__workqueue, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %wq16 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %wq, ptr %wq16, align 4
  %9 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %10, 65535
  %add.ptr = getelementptr i8, ptr %call3, i32 %and
  %call19 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #27
  %high20 = getelementptr inbounds %struct.trace_event_raw_btrfs__workqueue, ptr %call3, i32 0, i32 4
  %11 = ptrtoint ptr %high20 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %high, ptr %high20, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs__workqueue(ptr noundef %__data, ptr noundef %wq, ptr noundef readonly %name, i32 noundef %high) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %tobool.not.i = icmp eq ptr %name, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.309, ptr %name
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #26
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65572
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i63.not = icmp eq ptr %15, null
  br i1 %tobool.not.i63.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 48
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_btrfs__workqueue, ptr %call13, i32 0, i32 3
  %27 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %call18 = call ptr @btrfs_workqueue_owner(ptr noundef %wq) #28
  %tobool19.not = icmp eq ptr %call18, null
  %fsid24 = getelementptr inbounds %struct.trace_event_raw_btrfs__workqueue, ptr %call13, i32 0, i32 1
  br i1 %tobool19.not, label %if.else, label %if.then20

if.then20:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %call18, i32 0, i32 100
  %28 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %fs_devices, align 8
  %30 = call ptr @memcpy(ptr %fsid24, ptr %29, i32 16)
  br label %if.end26

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %31 = call ptr @memset(ptr %fsid24, i32 0, i32 16)
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then20
  %wq27 = getelementptr inbounds %struct.trace_event_raw_btrfs__workqueue, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %wq27 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %wq, ptr %wq27, align 4
  %33 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %__data_loc_name, align 4
  %and29 = and i32 %34, 65535
  %add.ptr = getelementptr i8, ptr %call13, i32 %and29
  %call31 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #27
  %high32 = getelementptr inbounds %struct.trace_event_raw_btrfs__workqueue, ptr %call13, i32 0, i32 4
  %35 = ptrtoint ptr %high32 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %high, ptr %high32, align 4
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end26, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs__workqueue_done(ptr noundef %__data, ptr noundef %wq) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %call6 = call ptr @btrfs_workqueue_owner(ptr noundef %wq) #28
  %tobool7.not = icmp eq ptr %call6, null
  %fsid12 = getelementptr inbounds %struct.trace_event_raw_btrfs__workqueue_done, ptr %call3, i32 0, i32 1
  br i1 %tobool7.not, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %call6, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid12, ptr %4, i32 16)
  br label %if.end14

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid12, i32 0, i32 16)
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then8
  %wq15 = getelementptr inbounds %struct.trace_event_raw_btrfs__workqueue_done, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %wq15 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %wq, ptr %wq15, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs__workqueue_done(ptr noundef %__data, ptr noundef %wq) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %call17 = call ptr @btrfs_workqueue_owner(ptr noundef %wq) #28
  %tobool18.not = icmp eq ptr %call17, null
  %fsid23 = getelementptr inbounds %struct.trace_event_raw_btrfs__workqueue_done, ptr %call13, i32 0, i32 1
  br i1 %tobool18.not, label %if.else, label %if.then19

if.then19:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %call17, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid23, ptr %28, i32 16)
  br label %if.end25

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid23, i32 0, i32 16)
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then19
  %wq26 = getelementptr inbounds %struct.trace_event_raw_btrfs__workqueue_done, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %wq26 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %wq, ptr %wq26, align 4
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end25, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs__qgroup_rsv_data(ptr noundef %__data, ptr nocapture noundef readonly %inode, i64 noundef %start, i64 noundef %len, i64 noundef %reserved, i32 noundef %op) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 72) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %3 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 33
  %5 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %s_fs_info.i, align 16
  %tobool7.not = icmp eq ptr %6, null
  %fsid13 = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %call3, i32 0, i32 1
  br i1 %tobool7.not, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %6, i32 0, i32 100
  %7 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fs_devices, align 8
  %9 = call ptr @memcpy(ptr %fsid13, ptr %8, i32 16)
  br label %if.end15

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %10 = call ptr @memset(ptr %fsid13, i32 0, i32 16)
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then8
  %add.ptr.i = getelementptr i8, ptr %inode, i32 -864
  %11 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %add.ptr.i, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %12, i32 0, i32 7
  %13 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %13, i32 8)
  %14 = load i64, ptr %root_key, align 1
  %rootid = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %call3, i32 0, i32 2
  %15 = ptrtoint ptr %rootid to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %rootid, align 8
  %location.i = getelementptr i8, ptr %inode, i32 -860
  %16 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %16, i32 8)
  %17 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %17)
  %tobool.not.i46 = icmp eq i64 %17, 0
  br i1 %tobool.not.i46, label %if.end15.if.then.i_crit_edge, label %lor.lhs.false.i

if.end15.if.then.i_crit_edge:                     ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end15
  %type.i = getelementptr i8, ptr %inode, i32 -852
  %18 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %19)
  %cmp.i = icmp eq i8 %19, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end15.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %inode, i32 40
  %20 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %21 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %17, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %call3, i32 0, i32 3
  %22 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %ino.0.i, ptr %ino, align 8
  %start19 = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %call3, i32 0, i32 4
  %23 = ptrtoint ptr %start19 to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %start, ptr %start19, align 8
  %len20 = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %call3, i32 0, i32 5
  %24 = ptrtoint ptr %len20 to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 %len, ptr %len20, align 8
  %reserved21 = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %call3, i32 0, i32 6
  %25 = ptrtoint ptr %reserved21 to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %reserved, ptr %reserved21, align 8
  %op22 = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %call3, i32 0, i32 7
  %26 = ptrtoint ptr %op22 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %op, ptr %op22, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_ino.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs__qgroup_rsv_data(ptr noundef %__data, ptr nocapture noundef readonly %inode, i64 noundef %start, i64 noundef %len, i64 noundef %reserved, i32 noundef %op) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 76, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %27 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 33
  %29 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %s_fs_info.i, align 16
  %tobool18.not = icmp eq ptr %30, null
  %fsid24 = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %call13, i32 0, i32 1
  br i1 %tobool18.not, label %if.else, label %if.then19

if.then19:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %30, i32 0, i32 100
  %31 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %fs_devices, align 8
  %33 = call ptr @memcpy(ptr %fsid24, ptr %32, i32 16)
  br label %if.end26

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %34 = call ptr @memset(ptr %fsid24, i32 0, i32 16)
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then19
  %add.ptr.i = getelementptr i8, ptr %inode, i32 -864
  %35 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %add.ptr.i, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %36, i32 0, i32 7
  %37 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %37, i32 8)
  %38 = load i64, ptr %root_key, align 1
  %rootid = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %call13, i32 0, i32 2
  %39 = ptrtoint ptr %rootid to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %38, ptr %rootid, align 8
  %location.i = getelementptr i8, ptr %inode, i32 -860
  %40 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %40, i32 8)
  %41 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %41)
  %tobool.not.i69 = icmp eq i64 %41, 0
  br i1 %tobool.not.i69, label %if.end26.if.then.i_crit_edge, label %lor.lhs.false.i

if.end26.if.then.i_crit_edge:                     ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end26
  %type.i = getelementptr i8, ptr %inode, i32 -852
  %42 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %43)
  %cmp.i = icmp eq i8 %43, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end26.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %inode, i32 40
  %44 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %45 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %41, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %call13, i32 0, i32 3
  %46 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %ino.0.i, ptr %ino, align 8
  %start30 = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %call13, i32 0, i32 4
  %47 = ptrtoint ptr %start30 to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 %start, ptr %start30, align 8
  %len31 = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %call13, i32 0, i32 5
  %48 = ptrtoint ptr %len31 to i32
  call void @__asan_store8_noabort(i32 %48)
  store i64 %len, ptr %len31, align 8
  %reserved32 = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %call13, i32 0, i32 6
  %49 = ptrtoint ptr %reserved32 to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 %reserved, ptr %reserved32, align 8
  %op33 = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %call13, i32 0, i32 7
  %50 = ptrtoint ptr %op33 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %op, ptr %op33, align 8
  %51 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %rctx, align 4
  %53 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 76, i32 noundef %52, ptr noundef %__data, i64 noundef 1, ptr noundef %54, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_ino.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_qgroup_extent(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %rec) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_extent, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %bytenr = getelementptr inbounds %struct.btrfs_qgroup_extent_record, ptr %rec, i32 0, i32 1
  %7 = ptrtoint ptr %bytenr to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %bytenr, align 8
  %bytenr13 = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_extent, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %bytenr13 to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %bytenr13, align 8
  %num_bytes = getelementptr inbounds %struct.btrfs_qgroup_extent_record, ptr %rec, i32 0, i32 2
  %10 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %num_bytes, align 8
  %num_bytes14 = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_extent, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %num_bytes14 to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %num_bytes14, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_qgroup_extent(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %rec) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_extent, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %bytenr = getelementptr inbounds %struct.btrfs_qgroup_extent_record, ptr %rec, i32 0, i32 1
  %31 = ptrtoint ptr %bytenr to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %bytenr, align 8
  %bytenr24 = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_extent, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %bytenr24 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %bytenr24, align 8
  %num_bytes = getelementptr inbounds %struct.btrfs_qgroup_extent_record, ptr %rec, i32 0, i32 2
  %34 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %num_bytes, align 8
  %num_bytes25 = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_extent, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %num_bytes25 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %num_bytes25, align 8
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_qgroup_num_dirty_extents(ptr noundef %__data, ptr noundef readonly %fs_info, i64 noundef %transid, i64 noundef %num_dirty_extents) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_qgroup_num_dirty_extents, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %transid13 = getelementptr inbounds %struct.trace_event_raw_qgroup_num_dirty_extents, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %transid13 to i32
  call void @__asan_store8_noabort(i32 %7)
  store i64 %transid, ptr %transid13, align 8
  %num_dirty_extents14 = getelementptr inbounds %struct.trace_event_raw_qgroup_num_dirty_extents, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %num_dirty_extents14 to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %num_dirty_extents, ptr %num_dirty_extents14, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_qgroup_num_dirty_extents(ptr noundef %__data, ptr noundef readonly %fs_info, i64 noundef %transid, i64 noundef %num_dirty_extents) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_qgroup_num_dirty_extents, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %transid24 = getelementptr inbounds %struct.trace_event_raw_qgroup_num_dirty_extents, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %transid24 to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %transid, ptr %transid24, align 8
  %num_dirty_extents25 = getelementptr inbounds %struct.trace_event_raw_qgroup_num_dirty_extents, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %num_dirty_extents25 to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %num_dirty_extents, ptr %num_dirty_extents25, align 8
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_qgroup_account_extent(ptr noundef %__data, ptr noundef readonly %fs_info, i64 noundef %transid, i64 noundef %bytenr, i64 noundef %num_bytes, i64 noundef %nr_old_roots, i64 noundef %nr_new_roots) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 64) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_account_extent, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %transid13 = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_account_extent, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %transid13 to i32
  call void @__asan_store8_noabort(i32 %7)
  store i64 %transid, ptr %transid13, align 8
  %bytenr14 = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_account_extent, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %bytenr14 to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %bytenr, ptr %bytenr14, align 8
  %num_bytes15 = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_account_extent, ptr %call3, i32 0, i32 4
  %9 = ptrtoint ptr %num_bytes15 to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %num_bytes, ptr %num_bytes15, align 8
  %nr_old_roots16 = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_account_extent, ptr %call3, i32 0, i32 5
  %10 = ptrtoint ptr %nr_old_roots16 to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %nr_old_roots, ptr %nr_old_roots16, align 8
  %nr_new_roots17 = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_account_extent, ptr %call3, i32 0, i32 6
  %11 = ptrtoint ptr %nr_new_roots17 to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %nr_new_roots, ptr %nr_new_roots17, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_qgroup_account_extent(ptr noundef %__data, ptr noundef readonly %fs_info, i64 noundef %transid, i64 noundef %bytenr, i64 noundef %num_bytes, i64 noundef %nr_old_roots, i64 noundef %nr_new_roots) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 68, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_account_extent, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %transid24 = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_account_extent, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %transid24 to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %transid, ptr %transid24, align 8
  %bytenr25 = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_account_extent, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %bytenr25 to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %bytenr, ptr %bytenr25, align 8
  %num_bytes26 = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_account_extent, ptr %call13, i32 0, i32 4
  %33 = ptrtoint ptr %num_bytes26 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %num_bytes, ptr %num_bytes26, align 8
  %nr_old_roots27 = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_account_extent, ptr %call13, i32 0, i32 5
  %34 = ptrtoint ptr %nr_old_roots27 to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %nr_old_roots, ptr %nr_old_roots27, align 8
  %nr_new_roots28 = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_account_extent, ptr %call13, i32 0, i32 6
  %35 = ptrtoint ptr %nr_new_roots28 to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %nr_new_roots, ptr %nr_new_roots28, align 8
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 68, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_qgroup_update_counters(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %qgroup, i64 noundef %cur_old_count, i64 noundef %cur_new_count) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 64) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_qgroup_update_counters, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %7 = ptrtoint ptr %qgroup to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %qgroup, align 8
  %qgid = getelementptr inbounds %struct.trace_event_raw_qgroup_update_counters, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %qgid to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %qgid, align 8
  %rfer = getelementptr inbounds %struct.btrfs_qgroup, ptr %qgroup, i32 0, i32 1
  %10 = ptrtoint ptr %rfer to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %rfer, align 8
  %old_rfer = getelementptr inbounds %struct.trace_event_raw_qgroup_update_counters, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %old_rfer to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %old_rfer, align 8
  %excl = getelementptr inbounds %struct.btrfs_qgroup, ptr %qgroup, i32 0, i32 3
  %13 = ptrtoint ptr %excl to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %excl, align 8
  %old_excl = getelementptr inbounds %struct.trace_event_raw_qgroup_update_counters, ptr %call3, i32 0, i32 4
  %15 = ptrtoint ptr %old_excl to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %old_excl, align 8
  %cur_old_count13 = getelementptr inbounds %struct.trace_event_raw_qgroup_update_counters, ptr %call3, i32 0, i32 5
  %16 = ptrtoint ptr %cur_old_count13 to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %cur_old_count, ptr %cur_old_count13, align 8
  %cur_new_count14 = getelementptr inbounds %struct.trace_event_raw_qgroup_update_counters, ptr %call3, i32 0, i32 6
  %17 = ptrtoint ptr %cur_new_count14 to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %cur_new_count, ptr %cur_new_count14, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_qgroup_update_counters(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %qgroup, i64 noundef %cur_old_count, i64 noundef %cur_new_count) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 68, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_qgroup_update_counters, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %31 = ptrtoint ptr %qgroup to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %qgroup, align 8
  %qgid = getelementptr inbounds %struct.trace_event_raw_qgroup_update_counters, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %qgid to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %qgid, align 8
  %rfer = getelementptr inbounds %struct.btrfs_qgroup, ptr %qgroup, i32 0, i32 1
  %34 = ptrtoint ptr %rfer to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %rfer, align 8
  %old_rfer = getelementptr inbounds %struct.trace_event_raw_qgroup_update_counters, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %old_rfer to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %old_rfer, align 8
  %excl = getelementptr inbounds %struct.btrfs_qgroup, ptr %qgroup, i32 0, i32 3
  %37 = ptrtoint ptr %excl to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %excl, align 8
  %old_excl = getelementptr inbounds %struct.trace_event_raw_qgroup_update_counters, ptr %call13, i32 0, i32 4
  %39 = ptrtoint ptr %old_excl to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %38, ptr %old_excl, align 8
  %cur_old_count24 = getelementptr inbounds %struct.trace_event_raw_qgroup_update_counters, ptr %call13, i32 0, i32 5
  %40 = ptrtoint ptr %cur_old_count24 to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 %cur_old_count, ptr %cur_old_count24, align 8
  %cur_new_count25 = getelementptr inbounds %struct.trace_event_raw_qgroup_update_counters, ptr %call13, i32 0, i32 6
  %41 = ptrtoint ptr %cur_new_count25 to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %cur_new_count, ptr %cur_new_count25, align 8
  %42 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %rctx, align 4
  %44 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 68, i32 noundef %43, ptr noundef %__data, i64 noundef 1, ptr noundef %45, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_qgroup_update_reserve(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %qgroup, i64 noundef %diff, i32 noundef %type) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 56) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_qgroup_update_reserve, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %7 = ptrtoint ptr %qgroup to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %qgroup, align 8
  %qgid = getelementptr inbounds %struct.trace_event_raw_qgroup_update_reserve, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %qgid to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %qgid, align 8
  %rsv = getelementptr inbounds %struct.btrfs_qgroup, ptr %qgroup, i32 0, i32 10
  %arrayidx = getelementptr [3 x i64], ptr %rsv, i32 0, i32 %type
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %arrayidx, align 8
  %cur_reserved = getelementptr inbounds %struct.trace_event_raw_qgroup_update_reserve, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %cur_reserved to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %cur_reserved, align 8
  %diff13 = getelementptr inbounds %struct.trace_event_raw_qgroup_update_reserve, ptr %call3, i32 0, i32 4
  %13 = ptrtoint ptr %diff13 to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %diff, ptr %diff13, align 8
  %type14 = getelementptr inbounds %struct.trace_event_raw_qgroup_update_reserve, ptr %call3, i32 0, i32 5
  %14 = ptrtoint ptr %type14 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %type, ptr %type14, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_qgroup_update_reserve(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %qgroup, i64 noundef %diff, i32 noundef %type) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_qgroup_update_reserve, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %31 = ptrtoint ptr %qgroup to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %qgroup, align 8
  %qgid = getelementptr inbounds %struct.trace_event_raw_qgroup_update_reserve, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %qgid to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %qgid, align 8
  %rsv = getelementptr inbounds %struct.btrfs_qgroup, ptr %qgroup, i32 0, i32 10
  %arrayidx24 = getelementptr [3 x i64], ptr %rsv, i32 0, i32 %type
  %34 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %arrayidx24, align 8
  %cur_reserved = getelementptr inbounds %struct.trace_event_raw_qgroup_update_reserve, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %cur_reserved to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %cur_reserved, align 8
  %diff25 = getelementptr inbounds %struct.trace_event_raw_qgroup_update_reserve, ptr %call13, i32 0, i32 4
  %37 = ptrtoint ptr %diff25 to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %diff, ptr %diff25, align 8
  %type26 = getelementptr inbounds %struct.trace_event_raw_qgroup_update_reserve, ptr %call13, i32 0, i32 5
  %38 = ptrtoint ptr %type26 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %type, ptr %type26, align 8
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 60, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_qgroup_meta_reserve(ptr noundef %__data, ptr nocapture noundef readonly %root, i64 noundef %diff, i32 noundef %type) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 8
  %3 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_info, align 8
  %tobool6.not = icmp eq ptr %4, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_reserve, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %4, i32 0, i32 100
  %5 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices, align 8
  %7 = call ptr @memcpy(ptr %fsid11, ptr %6, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %8 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 7
  %9 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %9, i32 8)
  %10 = load i64, ptr %root_key, align 1
  %refroot = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_reserve, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %refroot to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %refroot, align 8
  %diff14 = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_reserve, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %diff14 to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %diff, ptr %diff14, align 8
  %type15 = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_reserve, ptr %call3, i32 0, i32 4
  %13 = ptrtoint ptr %type15 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %type, ptr %type15, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_qgroup_meta_reserve(ptr noundef %__data, ptr nocapture noundef readonly %root, i64 noundef %diff, i32 noundef %type) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 8
  %27 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_info, align 8
  %tobool17.not = icmp eq ptr %28, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_reserve, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 100
  %29 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_devices, align 8
  %31 = call ptr @memcpy(ptr %fsid22, ptr %30, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %32 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 7
  %33 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %33, i32 8)
  %34 = load i64, ptr %root_key, align 1
  %refroot = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_reserve, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %refroot to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %refroot, align 8
  %diff25 = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_reserve, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %diff25 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %diff, ptr %diff25, align 8
  %type26 = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_reserve, ptr %call13, i32 0, i32 4
  %37 = ptrtoint ptr %type26 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %type, ptr %type26, align 8
  %38 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rctx, align 4
  %40 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %39, ptr noundef %__data, i64 noundef 1, ptr noundef %41, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_qgroup_meta_convert(ptr noundef %__data, ptr nocapture noundef readonly %root, i64 noundef %diff) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 8
  %3 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_info, align 8
  %tobool6.not = icmp eq ptr %4, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_convert, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %4, i32 0, i32 100
  %5 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices, align 8
  %7 = call ptr @memcpy(ptr %fsid11, ptr %6, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %8 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 7
  %9 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %9, i32 8)
  %10 = load i64, ptr %root_key, align 1
  %refroot = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_convert, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %refroot to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %refroot, align 8
  %diff14 = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_convert, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %diff14 to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %diff, ptr %diff14, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_qgroup_meta_convert(ptr noundef %__data, ptr nocapture noundef readonly %root, i64 noundef %diff) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 8
  %27 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_info, align 8
  %tobool17.not = icmp eq ptr %28, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_convert, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 100
  %29 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_devices, align 8
  %31 = call ptr @memcpy(ptr %fsid22, ptr %30, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %32 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 7
  %33 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %33, i32 8)
  %34 = load i64, ptr %root_key, align 1
  %refroot = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_convert, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %refroot to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %refroot, align 8
  %diff25 = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_convert, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %diff25 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %diff, ptr %diff25, align 8
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_qgroup_meta_free_all_pertrans(ptr noundef %__data, ptr noundef %root) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 8
  %3 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_info, align 8
  %tobool6.not = icmp eq ptr %4, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_free_all_pertrans, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %4, i32 0, i32 100
  %5 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices, align 8
  %7 = call ptr @memcpy(ptr %fsid11, ptr %6, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %8 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 7
  %9 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %9, i32 8)
  %10 = load i64, ptr %root_key, align 1
  %refroot = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_free_all_pertrans, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %refroot to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %refroot, align 8
  %qgroup_meta_rsv_lock = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 54
  call void @_raw_spin_lock(ptr noundef %qgroup_meta_rsv_lock) #23
  %qgroup_meta_rsv_pertrans = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 55
  %12 = ptrtoint ptr %qgroup_meta_rsv_pertrans to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %qgroup_meta_rsv_pertrans, align 8
  %sub = sub i64 0, %13
  %diff = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_free_all_pertrans, ptr %call3, i32 0, i32 3
  %14 = ptrtoint ptr %diff to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %sub, ptr %diff, align 8
  call void @_raw_spin_unlock(ptr noundef %qgroup_meta_rsv_lock) #23
  %type = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_free_all_pertrans, ptr %call3, i32 0, i32 4
  %15 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 1, ptr %type, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_qgroup_meta_free_all_pertrans(ptr noundef %__data, ptr noundef %root) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 8
  %27 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_info, align 8
  %tobool17.not = icmp eq ptr %28, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_free_all_pertrans, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 100
  %29 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_devices, align 8
  %31 = call ptr @memcpy(ptr %fsid22, ptr %30, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %32 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 7
  %33 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %33, i32 8)
  %34 = load i64, ptr %root_key, align 1
  %refroot = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_free_all_pertrans, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %refroot to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %refroot, align 8
  %qgroup_meta_rsv_lock = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 54
  call void @_raw_spin_lock(ptr noundef %qgroup_meta_rsv_lock) #23
  %qgroup_meta_rsv_pertrans = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 55
  %36 = ptrtoint ptr %qgroup_meta_rsv_pertrans to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %qgroup_meta_rsv_pertrans, align 8
  %sub25 = sub i64 0, %37
  %diff = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_free_all_pertrans, ptr %call13, i32 0, i32 3
  %38 = ptrtoint ptr %diff to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %sub25, ptr %diff, align 8
  call void @_raw_spin_unlock(ptr noundef %qgroup_meta_rsv_lock) #23
  %type = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_free_all_pertrans, ptr %call13, i32 0, i32 4
  %39 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 1, ptr %type, align 8
  %40 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rctx, align 4
  %42 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %41, ptr noundef %__data, i64 noundef 1, ptr noundef %43, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs__prelim_ref(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %oldref, ptr noundef readonly %newref, i64 noundef %tree_size) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 96) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %root_id = getelementptr inbounds %struct.prelim_ref, ptr %oldref, i32 0, i32 1
  %7 = ptrtoint ptr %root_id to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %root_id, align 8
  %root_id13 = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %root_id13 to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %root_id13, align 8
  %key_for_search = getelementptr inbounds %struct.prelim_ref, ptr %oldref, i32 0, i32 2
  %10 = ptrtoint ptr %key_for_search to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %key_for_search, align 8
  %objectid14 = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %objectid14 to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %objectid14, align 8
  %type = getelementptr inbounds %struct.prelim_ref, ptr %oldref, i32 0, i32 2, i32 1
  %13 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %type, align 8
  %type16 = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call3, i32 0, i32 4
  %15 = ptrtoint ptr %type16 to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %14, ptr %type16, align 8
  %offset = getelementptr inbounds %struct.prelim_ref, ptr %oldref, i32 0, i32 2, i32 2
  %16 = ptrtoint ptr %offset to i32
  call void @__asan_loadN_noabort(i32 %16, i32 8)
  %17 = load i64, ptr %offset, align 1
  %offset18 = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call3, i32 0, i32 5
  %18 = ptrtoint ptr %offset18 to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %17, ptr %offset18, align 8
  %level = getelementptr inbounds %struct.prelim_ref, ptr %oldref, i32 0, i32 3
  %19 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %level, align 4
  %level19 = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call3, i32 0, i32 6
  %21 = ptrtoint ptr %level19 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %level19, align 8
  %count = getelementptr inbounds %struct.prelim_ref, ptr %oldref, i32 0, i32 4
  %22 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %count, align 8
  %old_count = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call3, i32 0, i32 7
  %24 = ptrtoint ptr %old_count to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %old_count, align 4
  %parent = getelementptr inbounds %struct.prelim_ref, ptr %oldref, i32 0, i32 6
  %25 = ptrtoint ptr %parent to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %parent, align 8
  %parent20 = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call3, i32 0, i32 8
  %27 = ptrtoint ptr %parent20 to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %parent20, align 8
  %wanted_disk_byte = getelementptr inbounds %struct.prelim_ref, ptr %oldref, i32 0, i32 7
  %28 = ptrtoint ptr %wanted_disk_byte to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %wanted_disk_byte, align 8
  %bytenr = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call3, i32 0, i32 9
  %30 = ptrtoint ptr %bytenr to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %29, ptr %bytenr, align 8
  %tobool21.not = icmp eq ptr %newref, null
  br i1 %tobool21.not, label %if.end12.cond.end_crit_edge, label %cond.true

if.end12.cond.end_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #25
  %count22 = getelementptr inbounds %struct.prelim_ref, ptr %newref, i32 0, i32 4
  %31 = ptrtoint ptr %count22 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %count22, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end12.cond.end_crit_edge
  %cond = phi i32 [ %32, %cond.true ], [ 0, %if.end12.cond.end_crit_edge ]
  %mod_count = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call3, i32 0, i32 10
  %33 = ptrtoint ptr %mod_count to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %cond, ptr %mod_count, align 8
  %tree_size23 = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call3, i32 0, i32 11
  %34 = ptrtoint ptr %tree_size23 to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %tree_size, ptr %tree_size23, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs__prelim_ref(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %oldref, ptr noundef readonly %newref, i64 noundef %tree_size) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 100, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %root_id = getelementptr inbounds %struct.prelim_ref, ptr %oldref, i32 0, i32 1
  %31 = ptrtoint ptr %root_id to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %root_id, align 8
  %root_id24 = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %root_id24 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %root_id24, align 8
  %key_for_search = getelementptr inbounds %struct.prelim_ref, ptr %oldref, i32 0, i32 2
  %34 = ptrtoint ptr %key_for_search to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %key_for_search, align 8
  %objectid25 = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %objectid25 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %objectid25, align 8
  %type = getelementptr inbounds %struct.prelim_ref, ptr %oldref, i32 0, i32 2, i32 1
  %37 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %type, align 8
  %type27 = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call13, i32 0, i32 4
  %39 = ptrtoint ptr %type27 to i32
  call void @__asan_store1_noabort(i32 %39)
  store i8 %38, ptr %type27, align 8
  %offset = getelementptr inbounds %struct.prelim_ref, ptr %oldref, i32 0, i32 2, i32 2
  %40 = ptrtoint ptr %offset to i32
  call void @__asan_loadN_noabort(i32 %40, i32 8)
  %41 = load i64, ptr %offset, align 1
  %offset29 = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call13, i32 0, i32 5
  %42 = ptrtoint ptr %offset29 to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %41, ptr %offset29, align 8
  %level = getelementptr inbounds %struct.prelim_ref, ptr %oldref, i32 0, i32 3
  %43 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %level, align 4
  %level30 = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call13, i32 0, i32 6
  %45 = ptrtoint ptr %level30 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %level30, align 8
  %count = getelementptr inbounds %struct.prelim_ref, ptr %oldref, i32 0, i32 4
  %46 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %count, align 8
  %old_count = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call13, i32 0, i32 7
  %48 = ptrtoint ptr %old_count to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %old_count, align 4
  %parent = getelementptr inbounds %struct.prelim_ref, ptr %oldref, i32 0, i32 6
  %49 = ptrtoint ptr %parent to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %parent, align 8
  %parent31 = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call13, i32 0, i32 8
  %51 = ptrtoint ptr %parent31 to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 %50, ptr %parent31, align 8
  %wanted_disk_byte = getelementptr inbounds %struct.prelim_ref, ptr %oldref, i32 0, i32 7
  %52 = ptrtoint ptr %wanted_disk_byte to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %wanted_disk_byte, align 8
  %bytenr = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call13, i32 0, i32 9
  %54 = ptrtoint ptr %bytenr to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 %53, ptr %bytenr, align 8
  %tobool32.not = icmp eq ptr %newref, null
  br i1 %tobool32.not, label %if.end23.cond.end_crit_edge, label %cond.true

if.end23.cond.end_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #25
  %count33 = getelementptr inbounds %struct.prelim_ref, ptr %newref, i32 0, i32 4
  %55 = ptrtoint ptr %count33 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %count33, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end23.cond.end_crit_edge
  %cond = phi i32 [ %56, %cond.true ], [ 0, %if.end23.cond.end_crit_edge ]
  %mod_count = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call13, i32 0, i32 10
  %57 = ptrtoint ptr %mod_count to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %cond, ptr %mod_count, align 8
  %tree_size34 = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %call13, i32 0, i32 11
  %58 = ptrtoint ptr %tree_size34 to i32
  call void @__asan_store8_noabort(i32 %58)
  store i64 %tree_size, ptr %tree_size34, align 8
  %59 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %rctx, align 4
  %61 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 100, i32 noundef %60, ptr noundef %__data, i64 noundef 1, ptr noundef %62, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_inode_mod_outstanding_extents(ptr noundef %__data, ptr nocapture noundef readonly %root, i64 noundef %ino, i32 noundef %mod) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 8
  %3 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_info, align 8
  %tobool6.not = icmp eq ptr %4, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_btrfs_inode_mod_outstanding_extents, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %4, i32 0, i32 100
  %5 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices, align 8
  %7 = call ptr @memcpy(ptr %fsid11, ptr %6, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %8 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 7
  %9 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %9, i32 8)
  %10 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_inode_mod_outstanding_extents, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %root_objectid, align 8
  %ino14 = getelementptr inbounds %struct.trace_event_raw_btrfs_inode_mod_outstanding_extents, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %ino14 to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %ino, ptr %ino14, align 8
  %mod15 = getelementptr inbounds %struct.trace_event_raw_btrfs_inode_mod_outstanding_extents, ptr %call3, i32 0, i32 4
  %13 = ptrtoint ptr %mod15 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %mod, ptr %mod15, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_inode_mod_outstanding_extents(ptr noundef %__data, ptr nocapture noundef readonly %root, i64 noundef %ino, i32 noundef %mod) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 8
  %27 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_info, align 8
  %tobool17.not = icmp eq ptr %28, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_btrfs_inode_mod_outstanding_extents, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 100
  %29 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_devices, align 8
  %31 = call ptr @memcpy(ptr %fsid22, ptr %30, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %32 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 7
  %33 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %33, i32 8)
  %34 = load i64, ptr %root_key, align 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_inode_mod_outstanding_extents, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %root_objectid to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %root_objectid, align 8
  %ino25 = getelementptr inbounds %struct.trace_event_raw_btrfs_inode_mod_outstanding_extents, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %ino25 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %ino, ptr %ino25, align 8
  %mod26 = getelementptr inbounds %struct.trace_event_raw_btrfs_inode_mod_outstanding_extents, ptr %call13, i32 0, i32 4
  %37 = ptrtoint ptr %mod26 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %mod, ptr %mod26, align 8
  %38 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rctx, align 4
  %40 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %39, ptr noundef %__data, i64 noundef 1, ptr noundef %41, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs__block_group(ptr noundef %__data, ptr nocapture noundef readonly %bg_cache) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 56) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %3 = ptrtoint ptr %bg_cache to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %bg_cache, align 8
  %tobool6.not = icmp eq ptr %4, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_btrfs__block_group, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %4, i32 0, i32 100
  %5 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices, align 8
  %7 = call ptr @memcpy(ptr %fsid11, ptr %6, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %8 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %start = getelementptr inbounds %struct.btrfs_block_group, ptr %bg_cache, i32 0, i32 3
  %9 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %start, align 8
  %bytenr = getelementptr inbounds %struct.trace_event_raw_btrfs__block_group, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %bytenr to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %bytenr, align 8
  %length = getelementptr inbounds %struct.btrfs_block_group, ptr %bg_cache, i32 0, i32 4
  %12 = ptrtoint ptr %length to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %length, align 8
  %len = getelementptr inbounds %struct.trace_event_raw_btrfs__block_group, ptr %call3, i32 0, i32 3
  %14 = ptrtoint ptr %len to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %13, ptr %len, align 8
  %used = getelementptr inbounds %struct.btrfs_block_group, ptr %bg_cache, i32 0, i32 7
  %15 = ptrtoint ptr %used to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %used, align 8
  %used14 = getelementptr inbounds %struct.trace_event_raw_btrfs__block_group, ptr %call3, i32 0, i32 4
  %17 = ptrtoint ptr %used14 to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %16, ptr %used14, align 8
  %flags = getelementptr inbounds %struct.btrfs_block_group, ptr %bg_cache, i32 0, i32 10
  %18 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %flags, align 8
  %flags15 = getelementptr inbounds %struct.trace_event_raw_btrfs__block_group, ptr %call3, i32 0, i32 5
  %20 = ptrtoint ptr %flags15 to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %19, ptr %flags15, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs__block_group(ptr noundef %__data, ptr nocapture noundef readonly %bg_cache) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %bg_cache to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %bg_cache, align 8
  %tobool17.not = icmp eq ptr %28, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_btrfs__block_group, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 100
  %29 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_devices, align 8
  %31 = call ptr @memcpy(ptr %fsid22, ptr %30, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %32 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18
  %start = getelementptr inbounds %struct.btrfs_block_group, ptr %bg_cache, i32 0, i32 3
  %33 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %start, align 8
  %bytenr = getelementptr inbounds %struct.trace_event_raw_btrfs__block_group, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %bytenr to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %bytenr, align 8
  %length = getelementptr inbounds %struct.btrfs_block_group, ptr %bg_cache, i32 0, i32 4
  %36 = ptrtoint ptr %length to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %length, align 8
  %len = getelementptr inbounds %struct.trace_event_raw_btrfs__block_group, ptr %call13, i32 0, i32 3
  %38 = ptrtoint ptr %len to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %37, ptr %len, align 8
  %used = getelementptr inbounds %struct.btrfs_block_group, ptr %bg_cache, i32 0, i32 7
  %39 = ptrtoint ptr %used to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %used, align 8
  %used25 = getelementptr inbounds %struct.trace_event_raw_btrfs__block_group, ptr %call13, i32 0, i32 4
  %41 = ptrtoint ptr %used25 to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %40, ptr %used25, align 8
  %flags = getelementptr inbounds %struct.btrfs_block_group, ptr %bg_cache, i32 0, i32 10
  %42 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %flags, align 8
  %flags26 = getelementptr inbounds %struct.trace_event_raw_btrfs__block_group, ptr %call13, i32 0, i32 5
  %44 = ptrtoint ptr %flags26 to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %43, ptr %flags26, align 8
  %45 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rctx, align 4
  %47 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 60, i32 noundef %46, ptr noundef %__data, i64 noundef 1, ptr noundef %48, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_set_extent_bit(ptr noundef %__data, ptr nocapture noundef readonly %tree, i64 noundef %start, i64 noundef %len, i32 noundef %set_bits) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 72) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %fs_info = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %3 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_info, align 4
  %tobool6.not = icmp eq ptr %4, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %4, i32 0, i32 100
  %5 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices, align 8
  %7 = call ptr @memcpy(ptr %fsid11, ptr %6, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %8 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %owner = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 5
  %9 = ptrtoint ptr %owner to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %owner, align 1
  %conv = zext i8 %10 to i32
  %owner14 = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %owner14 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %conv, ptr %owner14, align 8
  %private_data = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 2
  %12 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %private_data, align 8
  %tobool15.not = icmp eq ptr %13, null
  br i1 %tobool15.not, label %if.else21, label %if.then16

if.then16:                                        ; preds = %if.end13
  %add.ptr.i = getelementptr i8, ptr %13, i32 -864
  %location.i = getelementptr i8, ptr %13, i32 -860
  %14 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 8)
  %15 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %15)
  %tobool.not.i53 = icmp eq i64 %15, 0
  br i1 %tobool.not.i53, label %if.then16.if.then.i_crit_edge, label %lor.lhs.false.i

if.then16.if.then.i_crit_edge:                    ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.then16
  %type.i = getelementptr i8, ptr %13, i32 -852
  %16 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %17)
  %cmp.i = icmp eq i8 %17, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.then16.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %13, i32 40
  %18 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %19 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %15, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %call3, i32 0, i32 3
  %20 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %ino.0.i, ptr %ino, align 8
  %21 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %add.ptr.i, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %22, i32 0, i32 7
  %23 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %23, i32 8)
  %24 = load i64, ptr %root_key, align 1
  %rootid = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %call3, i32 0, i32 4
  %25 = ptrtoint ptr %rootid to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %rootid, align 8
  br label %if.end24

if.else21:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #25
  %ino22 = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %call3, i32 0, i32 3
  %26 = call ptr @memset(ptr %ino22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else21, %btrfs_ino.exit
  %start25 = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %call3, i32 0, i32 5
  %27 = ptrtoint ptr %start25 to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %start, ptr %start25, align 8
  %len26 = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %call3, i32 0, i32 6
  %28 = ptrtoint ptr %len26 to i32
  call void @__asan_store8_noabort(i32 %28)
  store i64 %len, ptr %len26, align 8
  %set_bits27 = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %call3, i32 0, i32 7
  %29 = ptrtoint ptr %set_bits27 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %set_bits, ptr %set_bits27, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_set_extent_bit(ptr noundef %__data, ptr nocapture noundef readonly %tree, i64 noundef %start, i64 noundef %len, i32 noundef %set_bits) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 76, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %fs_info = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %27 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_info, align 4
  %tobool17.not = icmp eq ptr %28, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 100
  %29 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_devices, align 8
  %31 = call ptr @memcpy(ptr %fsid22, ptr %30, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %32 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18
  %owner = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 5
  %33 = ptrtoint ptr %owner to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %owner, align 1
  %conv = zext i8 %34 to i32
  %owner25 = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %owner25 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %conv, ptr %owner25, align 8
  %private_data = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 2
  %36 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %private_data, align 8
  %tobool26.not = icmp eq ptr %37, null
  br i1 %tobool26.not, label %if.else32, label %if.then27

if.then27:                                        ; preds = %if.end24
  %add.ptr.i = getelementptr i8, ptr %37, i32 -864
  %location.i = getelementptr i8, ptr %37, i32 -860
  %38 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %38, i32 8)
  %39 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %39)
  %tobool.not.i76 = icmp eq i64 %39, 0
  br i1 %tobool.not.i76, label %if.then27.if.then.i_crit_edge, label %lor.lhs.false.i

if.then27.if.then.i_crit_edge:                    ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.then27
  %type.i = getelementptr i8, ptr %37, i32 -852
  %40 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %41)
  %cmp.i = icmp eq i8 %41, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.then27.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %37, i32 40
  %42 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %43 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %39, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %call13, i32 0, i32 3
  %44 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %ino.0.i, ptr %ino, align 8
  %45 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %add.ptr.i, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %46, i32 0, i32 7
  %47 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %47, i32 8)
  %48 = load i64, ptr %root_key, align 1
  %rootid = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %call13, i32 0, i32 4
  %49 = ptrtoint ptr %rootid to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 %48, ptr %rootid, align 8
  br label %if.end35

if.else32:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #25
  %ino33 = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %call13, i32 0, i32 3
  %50 = call ptr @memset(ptr %ino33, i32 0, i32 16)
  br label %if.end35

if.end35:                                         ; preds = %if.else32, %btrfs_ino.exit
  %start36 = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %call13, i32 0, i32 5
  %51 = ptrtoint ptr %start36 to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 %start, ptr %start36, align 8
  %len37 = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %call13, i32 0, i32 6
  %52 = ptrtoint ptr %len37 to i32
  call void @__asan_store8_noabort(i32 %52)
  store i64 %len, ptr %len37, align 8
  %set_bits38 = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %call13, i32 0, i32 7
  %53 = ptrtoint ptr %set_bits38 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %set_bits, ptr %set_bits38, align 8
  %54 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %rctx, align 4
  %56 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 76, i32 noundef %55, ptr noundef %__data, i64 noundef 1, ptr noundef %57, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end35, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_clear_extent_bit(ptr noundef %__data, ptr nocapture noundef readonly %tree, i64 noundef %start, i64 noundef %len, i32 noundef %clear_bits) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 72) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %fs_info = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %3 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_info, align 4
  %tobool6.not = icmp eq ptr %4, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %4, i32 0, i32 100
  %5 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices, align 8
  %7 = call ptr @memcpy(ptr %fsid11, ptr %6, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %8 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %owner = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 5
  %9 = ptrtoint ptr %owner to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %owner, align 1
  %conv = zext i8 %10 to i32
  %owner14 = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %owner14 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %conv, ptr %owner14, align 8
  %private_data = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 2
  %12 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %private_data, align 8
  %tobool15.not = icmp eq ptr %13, null
  br i1 %tobool15.not, label %if.else21, label %if.then16

if.then16:                                        ; preds = %if.end13
  %add.ptr.i = getelementptr i8, ptr %13, i32 -864
  %location.i = getelementptr i8, ptr %13, i32 -860
  %14 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 8)
  %15 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %15)
  %tobool.not.i53 = icmp eq i64 %15, 0
  br i1 %tobool.not.i53, label %if.then16.if.then.i_crit_edge, label %lor.lhs.false.i

if.then16.if.then.i_crit_edge:                    ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.then16
  %type.i = getelementptr i8, ptr %13, i32 -852
  %16 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %17)
  %cmp.i = icmp eq i8 %17, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.then16.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %13, i32 40
  %18 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %19 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %15, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %call3, i32 0, i32 3
  %20 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %ino.0.i, ptr %ino, align 8
  %21 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %add.ptr.i, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %22, i32 0, i32 7
  %23 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %23, i32 8)
  %24 = load i64, ptr %root_key, align 1
  %rootid = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %call3, i32 0, i32 4
  %25 = ptrtoint ptr %rootid to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %rootid, align 8
  br label %if.end24

if.else21:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #25
  %ino22 = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %call3, i32 0, i32 3
  %26 = call ptr @memset(ptr %ino22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else21, %btrfs_ino.exit
  %start25 = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %call3, i32 0, i32 5
  %27 = ptrtoint ptr %start25 to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %start, ptr %start25, align 8
  %len26 = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %call3, i32 0, i32 6
  %28 = ptrtoint ptr %len26 to i32
  call void @__asan_store8_noabort(i32 %28)
  store i64 %len, ptr %len26, align 8
  %clear_bits27 = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %call3, i32 0, i32 7
  %29 = ptrtoint ptr %clear_bits27 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %clear_bits, ptr %clear_bits27, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_clear_extent_bit(ptr noundef %__data, ptr nocapture noundef readonly %tree, i64 noundef %start, i64 noundef %len, i32 noundef %clear_bits) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 76, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %fs_info = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %27 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_info, align 4
  %tobool17.not = icmp eq ptr %28, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 100
  %29 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_devices, align 8
  %31 = call ptr @memcpy(ptr %fsid22, ptr %30, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %32 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18
  %owner = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 5
  %33 = ptrtoint ptr %owner to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %owner, align 1
  %conv = zext i8 %34 to i32
  %owner25 = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %owner25 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %conv, ptr %owner25, align 8
  %private_data = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 2
  %36 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %private_data, align 8
  %tobool26.not = icmp eq ptr %37, null
  br i1 %tobool26.not, label %if.else32, label %if.then27

if.then27:                                        ; preds = %if.end24
  %add.ptr.i = getelementptr i8, ptr %37, i32 -864
  %location.i = getelementptr i8, ptr %37, i32 -860
  %38 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %38, i32 8)
  %39 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %39)
  %tobool.not.i76 = icmp eq i64 %39, 0
  br i1 %tobool.not.i76, label %if.then27.if.then.i_crit_edge, label %lor.lhs.false.i

if.then27.if.then.i_crit_edge:                    ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.then27
  %type.i = getelementptr i8, ptr %37, i32 -852
  %40 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %41)
  %cmp.i = icmp eq i8 %41, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.then27.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %37, i32 40
  %42 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %43 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %39, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %call13, i32 0, i32 3
  %44 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %ino.0.i, ptr %ino, align 8
  %45 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %add.ptr.i, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %46, i32 0, i32 7
  %47 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %47, i32 8)
  %48 = load i64, ptr %root_key, align 1
  %rootid = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %call13, i32 0, i32 4
  %49 = ptrtoint ptr %rootid to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 %48, ptr %rootid, align 8
  br label %if.end35

if.else32:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #25
  %ino33 = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %call13, i32 0, i32 3
  %50 = call ptr @memset(ptr %ino33, i32 0, i32 16)
  br label %if.end35

if.end35:                                         ; preds = %if.else32, %btrfs_ino.exit
  %start36 = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %call13, i32 0, i32 5
  %51 = ptrtoint ptr %start36 to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 %start, ptr %start36, align 8
  %len37 = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %call13, i32 0, i32 6
  %52 = ptrtoint ptr %len37 to i32
  call void @__asan_store8_noabort(i32 %52)
  store i64 %len, ptr %len37, align 8
  %clear_bits38 = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %call13, i32 0, i32 7
  %53 = ptrtoint ptr %clear_bits38 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %clear_bits, ptr %clear_bits38, align 8
  %54 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %rctx, align 4
  %56 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 76, i32 noundef %55, ptr noundef %__data, i64 noundef 1, ptr noundef %57, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end35, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_convert_extent_bit(ptr noundef %__data, ptr nocapture noundef readonly %tree, i64 noundef %start, i64 noundef %len, i32 noundef %set_bits, i32 noundef %clear_bits) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 72) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %fs_info = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %3 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_info, align 4
  %tobool6.not = icmp eq ptr %4, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %4, i32 0, i32 100
  %5 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices, align 8
  %7 = call ptr @memcpy(ptr %fsid11, ptr %6, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %8 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %owner = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 5
  %9 = ptrtoint ptr %owner to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %owner, align 1
  %conv = zext i8 %10 to i32
  %owner14 = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %owner14 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %conv, ptr %owner14, align 8
  %private_data = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 2
  %12 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %private_data, align 8
  %tobool15.not = icmp eq ptr %13, null
  br i1 %tobool15.not, label %if.else21, label %if.then16

if.then16:                                        ; preds = %if.end13
  %add.ptr.i = getelementptr i8, ptr %13, i32 -864
  %location.i = getelementptr i8, ptr %13, i32 -860
  %14 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 8)
  %15 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %15)
  %tobool.not.i56 = icmp eq i64 %15, 0
  br i1 %tobool.not.i56, label %if.then16.if.then.i_crit_edge, label %lor.lhs.false.i

if.then16.if.then.i_crit_edge:                    ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.then16
  %type.i = getelementptr i8, ptr %13, i32 -852
  %16 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %17)
  %cmp.i = icmp eq i8 %17, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.then16.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %13, i32 40
  %18 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %19 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %15, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %call3, i32 0, i32 3
  %20 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %ino.0.i, ptr %ino, align 8
  %21 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %add.ptr.i, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %22, i32 0, i32 7
  %23 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %23, i32 8)
  %24 = load i64, ptr %root_key, align 1
  %rootid = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %call3, i32 0, i32 4
  %25 = ptrtoint ptr %rootid to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %rootid, align 8
  br label %if.end24

if.else21:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #25
  %ino22 = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %call3, i32 0, i32 3
  %26 = call ptr @memset(ptr %ino22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else21, %btrfs_ino.exit
  %start25 = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %call3, i32 0, i32 5
  %27 = ptrtoint ptr %start25 to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %start, ptr %start25, align 8
  %len26 = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %call3, i32 0, i32 6
  %28 = ptrtoint ptr %len26 to i32
  call void @__asan_store8_noabort(i32 %28)
  store i64 %len, ptr %len26, align 8
  %set_bits27 = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %call3, i32 0, i32 7
  %29 = ptrtoint ptr %set_bits27 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %set_bits, ptr %set_bits27, align 8
  %clear_bits28 = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %call3, i32 0, i32 8
  %30 = ptrtoint ptr %clear_bits28 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %clear_bits, ptr %clear_bits28, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_convert_extent_bit(ptr noundef %__data, ptr nocapture noundef readonly %tree, i64 noundef %start, i64 noundef %len, i32 noundef %set_bits, i32 noundef %clear_bits) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 76, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %fs_info = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %27 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_info, align 4
  %tobool17.not = icmp eq ptr %28, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 100
  %29 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_devices, align 8
  %31 = call ptr @memcpy(ptr %fsid22, ptr %30, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %32 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18
  %owner = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 5
  %33 = ptrtoint ptr %owner to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %owner, align 1
  %conv = zext i8 %34 to i32
  %owner25 = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %owner25 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %conv, ptr %owner25, align 8
  %private_data = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 2
  %36 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %private_data, align 8
  %tobool26.not = icmp eq ptr %37, null
  br i1 %tobool26.not, label %if.else32, label %if.then27

if.then27:                                        ; preds = %if.end24
  %add.ptr.i = getelementptr i8, ptr %37, i32 -864
  %location.i = getelementptr i8, ptr %37, i32 -860
  %38 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %38, i32 8)
  %39 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %39)
  %tobool.not.i79 = icmp eq i64 %39, 0
  br i1 %tobool.not.i79, label %if.then27.if.then.i_crit_edge, label %lor.lhs.false.i

if.then27.if.then.i_crit_edge:                    ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.then27
  %type.i = getelementptr i8, ptr %37, i32 -852
  %40 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %41)
  %cmp.i = icmp eq i8 %41, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.then27.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %37, i32 40
  %42 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %43 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %39, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %call13, i32 0, i32 3
  %44 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %ino.0.i, ptr %ino, align 8
  %45 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %add.ptr.i, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %46, i32 0, i32 7
  %47 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %47, i32 8)
  %48 = load i64, ptr %root_key, align 1
  %rootid = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %call13, i32 0, i32 4
  %49 = ptrtoint ptr %rootid to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 %48, ptr %rootid, align 8
  br label %if.end35

if.else32:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #25
  %ino33 = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %call13, i32 0, i32 3
  %50 = call ptr @memset(ptr %ino33, i32 0, i32 16)
  br label %if.end35

if.end35:                                         ; preds = %if.else32, %btrfs_ino.exit
  %start36 = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %call13, i32 0, i32 5
  %51 = ptrtoint ptr %start36 to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 %start, ptr %start36, align 8
  %len37 = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %call13, i32 0, i32 6
  %52 = ptrtoint ptr %len37 to i32
  call void @__asan_store8_noabort(i32 %52)
  store i64 %len, ptr %len37, align 8
  %set_bits38 = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %call13, i32 0, i32 7
  %53 = ptrtoint ptr %set_bits38 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %set_bits, ptr %set_bits38, align 8
  %clear_bits39 = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %call13, i32 0, i32 8
  %54 = ptrtoint ptr %clear_bits39 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %clear_bits, ptr %clear_bits39, align 4
  %55 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %rctx, align 4
  %57 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 76, i32 noundef %56, ptr noundef %__data, i64 noundef 1, ptr noundef %58, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end35, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_dump_space_info(ptr noundef %__data, ptr noundef %fs_info, ptr nocapture noundef readonly %sinfo) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 152) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %flags = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 14
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %flags, align 8
  %flags13 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %flags13 to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %flags13, align 8
  %total_bytes = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 1
  %10 = ptrtoint ptr %total_bytes to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %total_bytes, align 8
  %total_bytes14 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %total_bytes14 to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %total_bytes14, align 8
  %bytes_used = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 2
  %13 = ptrtoint ptr %bytes_used to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %bytes_used, align 8
  %bytes_used15 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call3, i32 0, i32 4
  %15 = ptrtoint ptr %bytes_used15 to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %bytes_used15, align 8
  %bytes_pinned = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 3
  %16 = ptrtoint ptr %bytes_pinned to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %bytes_pinned, align 8
  %bytes_pinned16 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call3, i32 0, i32 5
  %18 = ptrtoint ptr %bytes_pinned16 to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %17, ptr %bytes_pinned16, align 8
  %bytes_reserved = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 4
  %19 = ptrtoint ptr %bytes_reserved to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %bytes_reserved, align 8
  %bytes_reserved17 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call3, i32 0, i32 6
  %21 = ptrtoint ptr %bytes_reserved17 to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %bytes_reserved17, align 8
  %bytes_may_use = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 5
  %22 = ptrtoint ptr %bytes_may_use to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %bytes_may_use, align 8
  %bytes_may_use18 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call3, i32 0, i32 7
  %24 = ptrtoint ptr %bytes_may_use18 to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 %23, ptr %bytes_may_use18, align 8
  %bytes_readonly = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 6
  %25 = ptrtoint ptr %bytes_readonly to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %bytes_readonly, align 8
  %bytes_readonly19 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call3, i32 0, i32 8
  %27 = ptrtoint ptr %bytes_readonly19 to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %bytes_readonly19, align 8
  %reclaim_size = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 19
  %28 = ptrtoint ptr %reclaim_size to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %reclaim_size, align 8
  %reclaim_size20 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call3, i32 0, i32 9
  %30 = ptrtoint ptr %reclaim_size20 to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %29, ptr %reclaim_size20, align 8
  %clamp = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 9
  %31 = ptrtoint ptr %clamp to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %clamp, align 8
  %clamp21 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call3, i32 0, i32 10
  %33 = ptrtoint ptr %clamp21 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %clamp21, align 8
  %reserved = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 20, i32 1
  %34 = ptrtoint ptr %reserved to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %reserved, align 8
  %global_reserved = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call3, i32 0, i32 11
  %36 = ptrtoint ptr %global_reserved to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %global_reserved, align 8
  %reserved22 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 21, i32 1
  %37 = ptrtoint ptr %reserved22 to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %reserved22, align 8
  %trans_reserved = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call3, i32 0, i32 12
  %39 = ptrtoint ptr %trans_reserved to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %38, ptr %trans_reserved, align 8
  %reserved23 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 24, i32 1
  %40 = ptrtoint ptr %reserved23 to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %reserved23, align 8
  %delayed_refs_reserved = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call3, i32 0, i32 13
  %42 = ptrtoint ptr %delayed_refs_reserved to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %41, ptr %delayed_refs_reserved, align 8
  %reserved24 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 23, i32 1
  %43 = ptrtoint ptr %reserved24 to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %reserved24, align 8
  %delayed_reserved = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call3, i32 0, i32 14
  %45 = ptrtoint ptr %delayed_reserved to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %44, ptr %delayed_reserved, align 8
  %free_chunk_space = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 17
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %free_chunk_space, i32 noundef 8) #23
  %call.i72 = call i64 @generic_atomic64_read(ptr noundef %free_chunk_space) #23
  %free_chunk_space26 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call3, i32 0, i32 15
  %46 = ptrtoint ptr %free_chunk_space26 to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %call.i72, ptr %free_chunk_space26, align 8
  %delalloc_bytes = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 95
  %call.i73 = call i64 @__percpu_counter_sum(ptr noundef %delalloc_bytes) #23
  %47 = call i64 @llvm.smax.i64(i64 %call.i73, i64 0) #23
  %delalloc_bytes28 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call3, i32 0, i32 16
  %48 = ptrtoint ptr %delalloc_bytes28 to i32
  call void @__asan_store8_noabort(i32 %48)
  store i64 %47, ptr %delalloc_bytes28, align 8
  %ordered_bytes = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 96
  %call.i74 = call i64 @__percpu_counter_sum(ptr noundef %ordered_bytes) #23
  %49 = call i64 @llvm.smax.i64(i64 %call.i74, i64 0) #23
  %ordered_bytes30 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call3, i32 0, i32 17
  %50 = ptrtoint ptr %ordered_bytes30 to i32
  call void @__asan_store8_noabort(i32 %50)
  store i64 %49, ptr %ordered_bytes30, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_dump_space_info(ptr noundef %__data, ptr noundef %fs_info, ptr nocapture noundef readonly %sinfo) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 156, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %flags = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 14
  %31 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %flags, align 8
  %flags24 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %flags24 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %flags24, align 8
  %total_bytes = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 1
  %34 = ptrtoint ptr %total_bytes to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %total_bytes, align 8
  %total_bytes25 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %total_bytes25 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %total_bytes25, align 8
  %bytes_used = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 2
  %37 = ptrtoint ptr %bytes_used to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %bytes_used, align 8
  %bytes_used26 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call13, i32 0, i32 4
  %39 = ptrtoint ptr %bytes_used26 to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %38, ptr %bytes_used26, align 8
  %bytes_pinned = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 3
  %40 = ptrtoint ptr %bytes_pinned to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %bytes_pinned, align 8
  %bytes_pinned27 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call13, i32 0, i32 5
  %42 = ptrtoint ptr %bytes_pinned27 to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %41, ptr %bytes_pinned27, align 8
  %bytes_reserved = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 4
  %43 = ptrtoint ptr %bytes_reserved to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %bytes_reserved, align 8
  %bytes_reserved28 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call13, i32 0, i32 6
  %45 = ptrtoint ptr %bytes_reserved28 to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %44, ptr %bytes_reserved28, align 8
  %bytes_may_use = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 5
  %46 = ptrtoint ptr %bytes_may_use to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %bytes_may_use, align 8
  %bytes_may_use29 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call13, i32 0, i32 7
  %48 = ptrtoint ptr %bytes_may_use29 to i32
  call void @__asan_store8_noabort(i32 %48)
  store i64 %47, ptr %bytes_may_use29, align 8
  %bytes_readonly = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 6
  %49 = ptrtoint ptr %bytes_readonly to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %bytes_readonly, align 8
  %bytes_readonly30 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call13, i32 0, i32 8
  %51 = ptrtoint ptr %bytes_readonly30 to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 %50, ptr %bytes_readonly30, align 8
  %reclaim_size = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 19
  %52 = ptrtoint ptr %reclaim_size to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %reclaim_size, align 8
  %reclaim_size31 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call13, i32 0, i32 9
  %54 = ptrtoint ptr %reclaim_size31 to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 %53, ptr %reclaim_size31, align 8
  %clamp = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 9
  %55 = ptrtoint ptr %clamp to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %clamp, align 8
  %clamp32 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call13, i32 0, i32 10
  %57 = ptrtoint ptr %clamp32 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %56, ptr %clamp32, align 8
  %reserved = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 20, i32 1
  %58 = ptrtoint ptr %reserved to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %reserved, align 8
  %global_reserved = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call13, i32 0, i32 11
  %60 = ptrtoint ptr %global_reserved to i32
  call void @__asan_store8_noabort(i32 %60)
  store i64 %59, ptr %global_reserved, align 8
  %reserved33 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 21, i32 1
  %61 = ptrtoint ptr %reserved33 to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %reserved33, align 8
  %trans_reserved = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call13, i32 0, i32 12
  %63 = ptrtoint ptr %trans_reserved to i32
  call void @__asan_store8_noabort(i32 %63)
  store i64 %62, ptr %trans_reserved, align 8
  %reserved34 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 24, i32 1
  %64 = ptrtoint ptr %reserved34 to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %reserved34, align 8
  %delayed_refs_reserved = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call13, i32 0, i32 13
  %66 = ptrtoint ptr %delayed_refs_reserved to i32
  call void @__asan_store8_noabort(i32 %66)
  store i64 %65, ptr %delayed_refs_reserved, align 8
  %reserved35 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 23, i32 1
  %67 = ptrtoint ptr %reserved35 to i32
  call void @__asan_load8_noabort(i32 %67)
  %68 = load i64, ptr %reserved35, align 8
  %delayed_reserved = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call13, i32 0, i32 14
  %69 = ptrtoint ptr %delayed_reserved to i32
  call void @__asan_store8_noabort(i32 %69)
  store i64 %68, ptr %delayed_reserved, align 8
  %free_chunk_space = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 17
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %free_chunk_space, i32 noundef 8) #23
  %call.i = call i64 @generic_atomic64_read(ptr noundef %free_chunk_space) #23
  %free_chunk_space37 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call13, i32 0, i32 15
  %70 = ptrtoint ptr %free_chunk_space37 to i32
  call void @__asan_store8_noabort(i32 %70)
  store i64 %call.i, ptr %free_chunk_space37, align 8
  %delalloc_bytes = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 95
  %call.i95 = call i64 @__percpu_counter_sum(ptr noundef %delalloc_bytes) #23
  %71 = call i64 @llvm.smax.i64(i64 %call.i95, i64 0) #23
  %delalloc_bytes39 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call13, i32 0, i32 16
  %72 = ptrtoint ptr %delalloc_bytes39 to i32
  call void @__asan_store8_noabort(i32 %72)
  store i64 %71, ptr %delalloc_bytes39, align 8
  %ordered_bytes = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 96
  %call.i96 = call i64 @__percpu_counter_sum(ptr noundef %ordered_bytes) #23
  %73 = call i64 @llvm.smax.i64(i64 %call.i96, i64 0) #23
  %ordered_bytes41 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %call13, i32 0, i32 17
  %74 = ptrtoint ptr %ordered_bytes41 to i32
  call void @__asan_store8_noabort(i32 %74)
  store i64 %73, ptr %ordered_bytes41, align 8
  %75 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %rctx, align 4
  %77 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 156, i32 noundef %76, ptr noundef %__data, i64 noundef 1, ptr noundef %78, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_reserve_ticket(ptr noundef %__data, ptr noundef readonly %fs_info, i64 noundef %flags, i64 noundef %bytes, i64 noundef %start_ns, i32 noundef %flush, i32 noundef %error) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 56) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_btrfs_reserve_ticket, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %flags13 = getelementptr inbounds %struct.trace_event_raw_btrfs_reserve_ticket, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %flags13 to i32
  call void @__asan_store8_noabort(i32 %7)
  store i64 %flags, ptr %flags13, align 8
  %bytes14 = getelementptr inbounds %struct.trace_event_raw_btrfs_reserve_ticket, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %bytes14 to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %bytes, ptr %bytes14, align 8
  %start_ns15 = getelementptr inbounds %struct.trace_event_raw_btrfs_reserve_ticket, ptr %call3, i32 0, i32 4
  %9 = ptrtoint ptr %start_ns15 to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %start_ns, ptr %start_ns15, align 8
  %flush16 = getelementptr inbounds %struct.trace_event_raw_btrfs_reserve_ticket, ptr %call3, i32 0, i32 5
  %10 = ptrtoint ptr %flush16 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %flush, ptr %flush16, align 8
  %error17 = getelementptr inbounds %struct.trace_event_raw_btrfs_reserve_ticket, ptr %call3, i32 0, i32 6
  %11 = ptrtoint ptr %error17 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %error, ptr %error17, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_reserve_ticket(ptr noundef %__data, ptr noundef readonly %fs_info, i64 noundef %flags, i64 noundef %bytes, i64 noundef %start_ns, i32 noundef %flush, i32 noundef %error) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_btrfs_reserve_ticket, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %flags24 = getelementptr inbounds %struct.trace_event_raw_btrfs_reserve_ticket, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %flags24 to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %flags, ptr %flags24, align 8
  %bytes25 = getelementptr inbounds %struct.trace_event_raw_btrfs_reserve_ticket, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %bytes25 to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %bytes, ptr %bytes25, align 8
  %start_ns26 = getelementptr inbounds %struct.trace_event_raw_btrfs_reserve_ticket, ptr %call13, i32 0, i32 4
  %33 = ptrtoint ptr %start_ns26 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %start_ns, ptr %start_ns26, align 8
  %flush27 = getelementptr inbounds %struct.trace_event_raw_btrfs_reserve_ticket, ptr %call13, i32 0, i32 5
  %34 = ptrtoint ptr %flush27 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %flush, ptr %flush27, align 8
  %error28 = getelementptr inbounds %struct.trace_event_raw_btrfs_reserve_ticket, ptr %call13, i32 0, i32 6
  %35 = ptrtoint ptr %error28 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %error, ptr %error28, align 4
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 60, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_sleep_tree_lock(ptr noundef %__data, ptr nocapture noundef readonly %eb, i64 noundef %start_ns) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 80) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %fs_info = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %3 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_info, align 8
  %tobool6.not = icmp eq ptr %4, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %4, i32 0, i32 100
  %5 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices, align 8
  %7 = call ptr @memcpy(ptr %fsid11, ptr %6, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %8 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %9 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %eb, align 8
  %block = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %block to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %block, align 8
  %pages.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 12
  %12 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pages.i, align 4
  %call.i43 = call ptr @page_address(ptr noundef %13) #23
  %14 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %eb, align 8
  %conv.i = trunc i64 %15 to i32
  %and.i44 = and i32 %conv.i, 4095
  %add.ptr.i = getelementptr i8, ptr %call.i43, i32 %and.i44
  %generation.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i, i32 0, i32 5
  %16 = ptrtoint ptr %generation.i to i32
  call void @__asan_loadN_noabort(i32 %16, i32 8)
  %17 = load i64, ptr %generation.i, align 1
  %18 = call i64 @llvm.bswap.i64(i64 %17) #23
  %generation = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %call3, i32 0, i32 3
  %19 = ptrtoint ptr %generation to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %18, ptr %generation, align 8
  %start_ns15 = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %call3, i32 0, i32 4
  %20 = ptrtoint ptr %start_ns15 to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %start_ns, ptr %start_ns15, align 8
  %call.i45 = call i64 @ktime_get() #23
  %end_ns = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %call3, i32 0, i32 5
  %21 = ptrtoint ptr %end_ns to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %call.i45, ptr %end_ns, align 8
  %sub = sub i64 %call.i45, %start_ns
  %diff_ns = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %call3, i32 0, i32 6
  %22 = ptrtoint ptr %diff_ns to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %sub, ptr %diff_ns, align 8
  %23 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pages.i, align 4
  %call.i47 = call ptr @page_address(ptr noundef %24) #23
  %25 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %eb, align 8
  %conv.i48 = trunc i64 %26 to i32
  %and.i49 = and i32 %conv.i48, 4095
  %add.ptr.i50 = getelementptr i8, ptr %call.i47, i32 %and.i49
  %owner.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i50, i32 0, i32 6
  %27 = ptrtoint ptr %owner.i to i32
  call void @__asan_loadN_noabort(i32 %27, i32 8)
  %28 = load i64, ptr %owner.i, align 1
  %29 = call i64 @llvm.bswap.i64(i64 %28) #23
  %owner = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %call3, i32 0, i32 7
  %30 = ptrtoint ptr %owner to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %29, ptr %owner, align 8
  %log_index = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 10
  %31 = ptrtoint ptr %log_index to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %log_index, align 8
  %33 = xor i8 %32, -1
  %34 = lshr i8 %33, 7
  %.not = zext i8 %34 to i32
  %is_log_tree = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %call3, i32 0, i32 8
  %35 = ptrtoint ptr %is_log_tree to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %.not, ptr %is_log_tree, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_sleep_tree_lock(ptr noundef %__data, ptr nocapture noundef readonly %eb, i64 noundef %start_ns) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 84, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %fs_info = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %27 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_info, align 8
  %tobool17.not = icmp eq ptr %28, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 100
  %29 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_devices, align 8
  %31 = call ptr @memcpy(ptr %fsid22, ptr %30, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %32 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18
  %33 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %eb, align 8
  %block = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %block to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %block, align 8
  %pages.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 12
  %36 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %pages.i, align 4
  %call.i = call ptr @page_address(ptr noundef %37) #23
  %38 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %eb, align 8
  %conv.i = trunc i64 %39 to i32
  %and.i67 = and i32 %conv.i, 4095
  %add.ptr.i = getelementptr i8, ptr %call.i, i32 %and.i67
  %generation.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i, i32 0, i32 5
  %40 = ptrtoint ptr %generation.i to i32
  call void @__asan_loadN_noabort(i32 %40, i32 8)
  %41 = load i64, ptr %generation.i, align 1
  %42 = call i64 @llvm.bswap.i64(i64 %41) #23
  %generation = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %call13, i32 0, i32 3
  %43 = ptrtoint ptr %generation to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %42, ptr %generation, align 8
  %start_ns26 = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %call13, i32 0, i32 4
  %44 = ptrtoint ptr %start_ns26 to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %start_ns, ptr %start_ns26, align 8
  %call.i68 = call i64 @ktime_get() #23
  %end_ns = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %call13, i32 0, i32 5
  %45 = ptrtoint ptr %end_ns to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %call.i68, ptr %end_ns, align 8
  %sub29 = sub i64 %call.i68, %start_ns
  %diff_ns = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %call13, i32 0, i32 6
  %46 = ptrtoint ptr %diff_ns to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %sub29, ptr %diff_ns, align 8
  %47 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %pages.i, align 4
  %call.i70 = call ptr @page_address(ptr noundef %48) #23
  %49 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %eb, align 8
  %conv.i71 = trunc i64 %50 to i32
  %and.i72 = and i32 %conv.i71, 4095
  %add.ptr.i73 = getelementptr i8, ptr %call.i70, i32 %and.i72
  %owner.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i73, i32 0, i32 6
  %51 = ptrtoint ptr %owner.i to i32
  call void @__asan_loadN_noabort(i32 %51, i32 8)
  %52 = load i64, ptr %owner.i, align 1
  %53 = call i64 @llvm.bswap.i64(i64 %52) #23
  %owner = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %call13, i32 0, i32 7
  %54 = ptrtoint ptr %owner to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 %53, ptr %owner, align 8
  %log_index = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 10
  %55 = ptrtoint ptr %log_index to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %log_index, align 8
  %57 = xor i8 %56, -1
  %58 = lshr i8 %57, 7
  %.not = zext i8 %58 to i32
  %is_log_tree = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %call13, i32 0, i32 8
  %59 = ptrtoint ptr %is_log_tree to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %.not, ptr %is_log_tree, align 8
  %60 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %rctx, align 4
  %62 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 84, i32 noundef %61, ptr noundef %__data, i64 noundef 1, ptr noundef %63, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs_locking_events(ptr noundef %__data, ptr nocapture noundef readonly %eb) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 56) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %fs_info = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %3 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_info, align 8
  %tobool6.not = icmp eq ptr %4, null
  %fsid11 = getelementptr inbounds %struct.trace_event_raw_btrfs_locking_events, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %4, i32 0, i32 100
  %5 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices, align 8
  %7 = call ptr @memcpy(ptr %fsid11, ptr %6, i32 16)
  br label %if.end13

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %8 = call ptr @memset(ptr %fsid11, i32 0, i32 16)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %9 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %eb, align 8
  %block = getelementptr inbounds %struct.trace_event_raw_btrfs_locking_events, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %block to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %block, align 8
  %pages.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 12
  %12 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pages.i, align 4
  %call.i34 = call ptr @page_address(ptr noundef %13) #23
  %14 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %eb, align 8
  %conv.i = trunc i64 %15 to i32
  %and.i35 = and i32 %conv.i, 4095
  %add.ptr.i = getelementptr i8, ptr %call.i34, i32 %and.i35
  %generation.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i, i32 0, i32 5
  %16 = ptrtoint ptr %generation.i to i32
  call void @__asan_loadN_noabort(i32 %16, i32 8)
  %17 = load i64, ptr %generation.i, align 1
  %18 = call i64 @llvm.bswap.i64(i64 %17) #23
  %generation = getelementptr inbounds %struct.trace_event_raw_btrfs_locking_events, ptr %call3, i32 0, i32 3
  %19 = ptrtoint ptr %generation to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %18, ptr %generation, align 8
  %20 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pages.i, align 4
  %call.i37 = call ptr @page_address(ptr noundef %21) #23
  %22 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %eb, align 8
  %conv.i38 = trunc i64 %23 to i32
  %and.i39 = and i32 %conv.i38, 4095
  %add.ptr.i40 = getelementptr i8, ptr %call.i37, i32 %and.i39
  %owner.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i40, i32 0, i32 6
  %24 = ptrtoint ptr %owner.i to i32
  call void @__asan_loadN_noabort(i32 %24, i32 8)
  %25 = load i64, ptr %owner.i, align 1
  %26 = call i64 @llvm.bswap.i64(i64 %25) #23
  %owner = getelementptr inbounds %struct.trace_event_raw_btrfs_locking_events, ptr %call3, i32 0, i32 4
  %27 = ptrtoint ptr %owner to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %owner, align 8
  %log_index = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 10
  %28 = ptrtoint ptr %log_index to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %log_index, align 8
  %30 = xor i8 %29, -1
  %31 = lshr i8 %30, 7
  %.not = zext i8 %31 to i32
  %is_log_tree = getelementptr inbounds %struct.trace_event_raw_btrfs_locking_events, ptr %call3, i32 0, i32 5
  %32 = ptrtoint ptr %is_log_tree to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %.not, ptr %is_log_tree, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs_locking_events(ptr noundef %__data, ptr nocapture noundef readonly %eb) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %fs_info = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %27 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_info, align 8
  %tobool17.not = icmp eq ptr %28, null
  %fsid22 = getelementptr inbounds %struct.trace_event_raw_btrfs_locking_events, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 100
  %29 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %fs_devices, align 8
  %31 = call ptr @memcpy(ptr %fsid22, ptr %30, i32 16)
  br label %if.end24

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %32 = call ptr @memset(ptr %fsid22, i32 0, i32 16)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18
  %33 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %eb, align 8
  %block = getelementptr inbounds %struct.trace_event_raw_btrfs_locking_events, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %block to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %block, align 8
  %pages.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 12
  %36 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %pages.i, align 4
  %call.i = call ptr @page_address(ptr noundef %37) #23
  %38 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %eb, align 8
  %conv.i = trunc i64 %39 to i32
  %and.i57 = and i32 %conv.i, 4095
  %add.ptr.i = getelementptr i8, ptr %call.i, i32 %and.i57
  %generation.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i, i32 0, i32 5
  %40 = ptrtoint ptr %generation.i to i32
  call void @__asan_loadN_noabort(i32 %40, i32 8)
  %41 = load i64, ptr %generation.i, align 1
  %42 = call i64 @llvm.bswap.i64(i64 %41) #23
  %generation = getelementptr inbounds %struct.trace_event_raw_btrfs_locking_events, ptr %call13, i32 0, i32 3
  %43 = ptrtoint ptr %generation to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %42, ptr %generation, align 8
  %44 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %pages.i, align 4
  %call.i59 = call ptr @page_address(ptr noundef %45) #23
  %46 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %eb, align 8
  %conv.i60 = trunc i64 %47 to i32
  %and.i61 = and i32 %conv.i60, 4095
  %add.ptr.i62 = getelementptr i8, ptr %call.i59, i32 %and.i61
  %owner.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i62, i32 0, i32 6
  %48 = ptrtoint ptr %owner.i to i32
  call void @__asan_loadN_noabort(i32 %48, i32 8)
  %49 = load i64, ptr %owner.i, align 1
  %50 = call i64 @llvm.bswap.i64(i64 %49) #23
  %owner = getelementptr inbounds %struct.trace_event_raw_btrfs_locking_events, ptr %call13, i32 0, i32 4
  %51 = ptrtoint ptr %owner to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 %50, ptr %owner, align 8
  %log_index = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 10
  %52 = ptrtoint ptr %log_index to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %log_index, align 8
  %54 = xor i8 %53, -1
  %55 = lshr i8 %54, 7
  %.not = zext i8 %55 to i32
  %is_log_tree = getelementptr inbounds %struct.trace_event_raw_btrfs_locking_events, ptr %call13, i32 0, i32 5
  %56 = ptrtoint ptr %is_log_tree to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %.not, ptr %is_log_tree, align 8
  %57 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %rctx, align 4
  %59 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 60, i32 noundef %58, ptr noundef %__data, i64 noundef 1, ptr noundef %60, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_btrfs__space_info_update(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %sinfo, i64 noundef %old, i64 noundef %diff) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #23
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !2019

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !2020

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #23
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #23
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %fs_info, null
  %fsid10 = getelementptr inbounds %struct.trace_event_raw_btrfs__space_info_update, ptr %call3, i32 0, i32 1
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %5 = call ptr @memcpy(ptr %fsid10, ptr %4, i32 16)
  br label %if.end12

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %6 = call ptr @memset(ptr %fsid10, i32 0, i32 16)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %flags = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 14
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %flags, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_btrfs__space_info_update, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %type to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %type, align 8
  %old13 = getelementptr inbounds %struct.trace_event_raw_btrfs__space_info_update, ptr %call3, i32 0, i32 3
  %10 = ptrtoint ptr %old13 to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %old, ptr %old13, align 8
  %diff14 = getelementptr inbounds %struct.trace_event_raw_btrfs__space_info_update, ptr %call3, i32 0, i32 4
  %11 = ptrtoint ptr %diff14 to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %diff, ptr %diff14, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_btrfs__space_info_update(ptr noundef %__data, ptr noundef readonly %fs_info, ptr nocapture noundef readonly %sinfo, i64 noundef %old, i64 noundef %diff) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #23
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !2021
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #23
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !2021
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #23
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #23
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #23
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !2009) #23
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %tobool17.not = icmp eq ptr %fs_info, null
  %fsid21 = getelementptr inbounds %struct.trace_event_raw_btrfs__space_info_update, ptr %call13, i32 0, i32 1
  br i1 %tobool17.not, label %if.else, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %27 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_devices, align 8
  %29 = call ptr @memcpy(ptr %fsid21, ptr %28, i32 16)
  br label %if.end23

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %30 = call ptr @memset(ptr %fsid21, i32 0, i32 16)
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %flags = getelementptr inbounds %struct.btrfs_space_info, ptr %sinfo, i32 0, i32 14
  %31 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %flags, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_btrfs__space_info_update, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %type to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %type, align 8
  %old24 = getelementptr inbounds %struct.trace_event_raw_btrfs__space_info_update, ptr %call13, i32 0, i32 3
  %34 = ptrtoint ptr %old24 to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %old, ptr %old24, align 8
  %diff25 = getelementptr inbounds %struct.trace_event_raw_btrfs__space_info_update, ptr %call13, i32 0, i32 4
  %35 = ptrtoint ptr %diff25 to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %diff, ptr %diff25, align 8
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_transaction_commit(ptr noundef %__data, ptr noundef %fs_info) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs__inode(ptr noundef %__data, ptr noundef %inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %inode to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_get_extent(ptr noundef %__data, ptr noundef %root, ptr noundef %inode, ptr noundef %map) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %root to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %inode to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %map to i32
  %conv8 = zext i32 %2 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_handle_em_exist(ptr noundef %__data, ptr noundef %fs_info, ptr noundef %existing, ptr noundef %map, i64 noundef %start, i64 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %existing to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %map to i32
  %conv8 = zext i32 %2 to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %start, i64 noundef %len) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs__file_extent_item_regular(ptr noundef %__data, ptr noundef %bi, ptr noundef %l, ptr noundef %fi, i64 noundef %start) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %bi to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %l to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %fi to i32
  %conv8 = zext i32 %2 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %start) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs__file_extent_item_inline(ptr noundef %__data, ptr noundef %bi, ptr noundef %l, ptr noundef %fi, i32 noundef %slot, i64 noundef %start) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %bi to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %l to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %fi to i32
  %conv8 = zext i32 %2 to i64
  %conv12 = zext i32 %slot to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %start) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs__ordered_extent(ptr noundef %__data, ptr noundef %inode, ptr noundef %ordered) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %inode to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %ordered to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs__writepage(ptr noundef %__data, ptr noundef %page, ptr noundef %inode, ptr noundef %wbc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %page to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %inode to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %wbc to i32
  %conv8 = zext i32 %2 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_writepage_end_io_hook(ptr noundef %__data, ptr noundef %inode, i64 noundef %start, i64 noundef %end, i32 noundef %uptodate) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %inode to i32
  %conv = zext i32 %0 to i64
  %conv10 = zext i32 %uptodate to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %start, i64 noundef %end, i64 noundef %conv10) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_sync_file(ptr noundef %__data, ptr noundef %file, i32 noundef %datasync) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %file to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %datasync to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_sync_fs(ptr noundef %__data, ptr noundef %fs_info, i32 noundef %wait) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %wait to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_add_block_group(ptr noundef %__data, ptr noundef %fs_info, ptr noundef %block_group, i32 noundef %create) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %block_group to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %create to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_delayed_tree_ref(ptr noundef %__data, ptr noundef %fs_info, ptr noundef %ref, ptr noundef %full_ref, i32 noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %ref to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %full_ref to i32
  %conv8 = zext i32 %2 to i64
  %conv12 = zext i32 %action to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_delayed_data_ref(ptr noundef %__data, ptr noundef %fs_info, ptr noundef %ref, ptr noundef %full_ref, i32 noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %ref to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %full_ref to i32
  %conv8 = zext i32 %2 to i64
  %conv12 = zext i32 %action to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_delayed_ref_head(ptr noundef %__data, ptr noundef %fs_info, ptr noundef %head_ref, i32 noundef %action) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %head_ref to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %action to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs__chunk(ptr noundef %__data, ptr noundef %fs_info, ptr noundef %map, i64 noundef %offset, i64 noundef %size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %map to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %offset, i64 noundef %size) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_cow_block(ptr noundef %__data, ptr noundef %root, ptr noundef %buf, ptr noundef %cow) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %root to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %buf to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %cow to i32
  %conv8 = zext i32 %2 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_space_reservation(ptr noundef %__data, ptr noundef %fs_info, ptr noundef %type, i64 noundef %val, i64 noundef %bytes, i32 noundef %reserve) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %type to i32
  %conv4 = zext i32 %1 to i64
  %conv14 = zext i32 %reserve to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %val, i64 noundef %bytes, i64 noundef %conv14) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_trigger_flush(ptr noundef %__data, ptr noundef %fs_info, i64 noundef %flags, i64 noundef %bytes, i32 noundef %flush, ptr noundef %reason) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  %conv10 = zext i32 %flush to i64
  %1 = ptrtoint ptr %reason to i32
  %conv14 = zext i32 %1 to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %flags, i64 noundef %bytes, i64 noundef %conv10, i64 noundef %conv14) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_flush_space(ptr noundef %__data, ptr noundef %fs_info, i64 noundef %flags, i64 noundef %num_bytes, i32 noundef %state, i32 noundef %ret, i1 noundef zeroext %for_preempt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  %conv10 = zext i32 %state to i64
  %conv14 = zext i32 %ret to i64
  %conv19 = zext i1 %for_preempt to i64
  tail call void @bpf_trace_run6(ptr noundef %__data, i64 noundef %conv, i64 noundef %flags, i64 noundef %num_bytes, i64 noundef %conv10, i64 noundef %conv14, i64 noundef %conv19) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs__reserved_extent(ptr noundef %__data, ptr noundef %fs_info, i64 noundef %start, i64 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %start, i64 noundef %len) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_find_free_extent(ptr noundef %__data, ptr noundef %root, i64 noundef %num_bytes, i64 noundef %empty_size, i64 noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %root to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %num_bytes, i64 noundef %empty_size, i64 noundef %data) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs__reserve_extent(ptr noundef %__data, ptr noundef %block_group, i64 noundef %start, i64 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %block_group to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %start, i64 noundef %len) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_find_cluster(ptr noundef %__data, ptr noundef %block_group, i64 noundef %start, i64 noundef %bytes, i64 noundef %empty_size, i64 noundef %min_bytes) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %block_group to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %start, i64 noundef %bytes, i64 noundef %empty_size, i64 noundef %min_bytes) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_failed_cluster_setup(ptr noundef %__data, ptr noundef %block_group) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %block_group to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_setup_cluster(ptr noundef %__data, ptr noundef %block_group, ptr noundef %cluster, i64 noundef %size, i32 noundef %bitmap) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %block_group to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %cluster to i32
  %conv4 = zext i32 %1 to i64
  %conv11 = zext i32 %bitmap to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %size, i64 noundef %conv11) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_alloc_extent_state(ptr noundef %__data, ptr noundef %state, i32 noundef %mask, i32 noundef %IP) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %state to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %mask to i64
  %conv8 = zext i32 %IP to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_free_extent_state(ptr noundef %__data, ptr noundef %state, i32 noundef %IP) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %state to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %IP to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs__work(ptr noundef %__data, ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %work to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs__work__done(ptr noundef %__data, ptr noundef %fs_info, ptr noundef %wtag) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %wtag to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs__workqueue(ptr noundef %__data, ptr noundef %wq, ptr noundef %name, i32 noundef %high) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %wq to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %name to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %high to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs__workqueue_done(ptr noundef %__data, ptr noundef %wq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %wq to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs__qgroup_rsv_data(ptr noundef %__data, ptr noundef %inode, i64 noundef %start, i64 noundef %len, i64 noundef %reserved, i32 noundef %op) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %inode to i32
  %conv = zext i32 %0 to i64
  %conv13 = zext i32 %op to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %start, i64 noundef %len, i64 noundef %reserved, i64 noundef %conv13) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_qgroup_extent(ptr noundef %__data, ptr noundef %fs_info, ptr noundef %rec) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %rec to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_qgroup_num_dirty_extents(ptr noundef %__data, ptr noundef %fs_info, i64 noundef %transid, i64 noundef %num_dirty_extents) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %transid, i64 noundef %num_dirty_extents) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_qgroup_account_extent(ptr noundef %__data, ptr noundef %fs_info, i64 noundef %transid, i64 noundef %bytenr, i64 noundef %num_bytes, i64 noundef %nr_old_roots, i64 noundef %nr_new_roots) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run6(ptr noundef %__data, i64 noundef %conv, i64 noundef %transid, i64 noundef %bytenr, i64 noundef %num_bytes, i64 noundef %nr_old_roots, i64 noundef %nr_new_roots) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_qgroup_update_counters(ptr noundef %__data, ptr noundef %fs_info, ptr noundef %qgroup, i64 noundef %cur_old_count, i64 noundef %cur_new_count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %qgroup to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %cur_old_count, i64 noundef %cur_new_count) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_qgroup_update_reserve(ptr noundef %__data, ptr noundef %fs_info, ptr noundef %qgroup, i64 noundef %diff, i32 noundef %type) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %qgroup to i32
  %conv4 = zext i32 %1 to i64
  %conv11 = zext i32 %type to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %diff, i64 noundef %conv11) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_qgroup_meta_reserve(ptr noundef %__data, ptr noundef %root, i64 noundef %diff, i32 noundef %type) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %root to i32
  %conv = zext i32 %0 to i64
  %conv7 = zext i32 %type to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %diff, i64 noundef %conv7) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_qgroup_meta_convert(ptr noundef %__data, ptr noundef %root, i64 noundef %diff) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %root to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %diff) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_qgroup_meta_free_all_pertrans(ptr noundef %__data, ptr noundef %root) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %root to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs__prelim_ref(ptr noundef %__data, ptr noundef %fs_info, ptr noundef %oldref, ptr noundef %newref, i64 noundef %tree_size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %newref to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %oldref to i32
  %conv8 = zext i32 %2 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %tree_size) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_inode_mod_outstanding_extents(ptr noundef %__data, ptr noundef %root, i64 noundef %ino, i32 noundef %mod) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %root to i32
  %conv = zext i32 %0 to i64
  %conv7 = zext i32 %mod to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %ino, i64 noundef %conv7) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs__block_group(ptr noundef %__data, ptr noundef %bg_cache) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %bg_cache to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_set_extent_bit(ptr noundef %__data, ptr noundef %tree, i64 noundef %start, i64 noundef %len, i32 noundef %set_bits) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %tree to i32
  %conv = zext i32 %0 to i64
  %conv10 = zext i32 %set_bits to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %start, i64 noundef %len, i64 noundef %conv10) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_clear_extent_bit(ptr noundef %__data, ptr noundef %tree, i64 noundef %start, i64 noundef %len, i32 noundef %clear_bits) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %tree to i32
  %conv = zext i32 %0 to i64
  %conv10 = zext i32 %clear_bits to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %start, i64 noundef %len, i64 noundef %conv10) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_convert_extent_bit(ptr noundef %__data, ptr noundef %tree, i64 noundef %start, i64 noundef %len, i32 noundef %set_bits, i32 noundef %clear_bits) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %tree to i32
  %conv = zext i32 %0 to i64
  %conv10 = zext i32 %set_bits to i64
  %conv14 = zext i32 %clear_bits to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %start, i64 noundef %len, i64 noundef %conv10, i64 noundef %conv14) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_dump_space_info(ptr noundef %__data, ptr noundef %fs_info, ptr noundef %sinfo) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %sinfo to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_reserve_ticket(ptr noundef %__data, ptr noundef %fs_info, i64 noundef %flags, i64 noundef %bytes, i64 noundef %start_ns, i32 noundef %flush, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  %conv13 = zext i32 %flush to i64
  %conv17 = zext i32 %error to i64
  tail call void @bpf_trace_run6(ptr noundef %__data, i64 noundef %conv, i64 noundef %flags, i64 noundef %bytes, i64 noundef %start_ns, i64 noundef %conv13, i64 noundef %conv17) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_sleep_tree_lock(ptr noundef %__data, ptr noundef %eb, i64 noundef %start_ns) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %eb to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %start_ns) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs_locking_events(ptr noundef %__data, ptr noundef %eb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %eb to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_btrfs__space_info_update(ptr noundef %__data, ptr noundef %fs_info, ptr noundef %sinfo, i64 noundef %old, i64 noundef %diff) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %fs_info to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %sinfo to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %old, i64 noundef %diff) #23
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local nonnull ptr @btrfs_decode_error(i32 noundef %errno) local_unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %errno to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values)
  switch i32 %errno, label %entry.sw.epilog_crit_edge [
    i32 -2, label %sw.bb
    i32 -5, label %sw.bb1
    i32 -12, label %sw.bb2
    i32 -17, label %sw.bb3
    i32 -28, label %sw.bb4
    i32 -30, label %sw.bb5
    i32 -95, label %sw.bb6
    i32 -117, label %sw.bb7
    i32 -122, label %sw.bb8
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb8:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb, %entry.sw.epilog_crit_edge
  %errstr.0 = phi ptr [ @.str.53, %entry.sw.epilog_crit_edge ], [ @.str.62, %sw.bb8 ], [ @.str.61, %sw.bb7 ], [ @.str.60, %sw.bb6 ], [ @.str.59, %sw.bb5 ], [ @.str.58, %sw.bb4 ], [ @.str.57, %sw.bb3 ], [ @.str.56, %sw.bb2 ], [ @.str.55, %sw.bb1 ], [ @.str.54, %sw.bb ]
  ret ptr %errstr.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @__btrfs_handle_fs_error(ptr noundef %fs_info, ptr noundef %function, i32 noundef %line, i32 noundef %errno, ptr noundef %fmt, ...) local_unnamed_addr #4 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sb1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 45
  %0 = ptrtoint ptr %sb1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sb1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -30, i32 %errno)
  %cmp = icmp eq i32 %errno, -30
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %s_flags.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %s_flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %s_flags.i, align 4
  %and.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %call2 = tail call ptr @btrfs_decode_error(i32 noundef %errno) #29
  %tobool.not = icmp eq ptr %fmt, null
  br i1 %tobool.not, label %do.end8, label %if.then3

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #23
  %4 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #23
  %5 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !2021
  call void @llvm.va_start(ptr nonnull %args)
  %6 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %fmt, ptr %vaf, align 4
  %7 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %args, ptr %4, align 4
  %s_id = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 39
  %call5 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.63, ptr noundef %s_id, ptr noundef %function, i32 noundef %line, i32 noundef %errno, ptr noundef nonnull %call2, ptr noundef nonnull %vaf) #30
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #23
  br label %if.end13

do.end8:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %s_id10 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 39
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.67, ptr noundef %s_id10, ptr noundef %function, i32 noundef %line, i32 noundef %errno, ptr noundef nonnull %call2) #30
  br label %if.end13

if.end13:                                         ; preds = %do.end8, %if.then3
  %fs_state = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 149
  call void @_set_bit(i32 noundef 0, ptr noundef %fs_state) #23
  %s_flags = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 10
  %8 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %s_flags, align 4
  %10 = and i32 %9, 536870913
  call void @__sanitizer_cov_trace_const_cmp4(i32 536870912, i32 %10)
  %.not = icmp eq i32 %10, 536870912
  br i1 %.not, label %if.end19, label %if.end13.cleanup_crit_edge

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end19:                                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #25
  call void @btrfs_discard_stop(ptr noundef %fs_info) #23
  %11 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %s_flags, align 4
  %or.i = or i32 %12, 1
  store i32 %or.i, ptr %s_flags, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 33
  %13 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %s_fs_info.i.i, align 16
  %fs_state.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %14, i32 0, i32 149
  call void @_set_bit(i32 noundef 2, ptr noundef %fs_state.i) #23
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.69) #31
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %if.end13.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #5

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_discard_stop(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_printk(ptr noundef readonly %fs_info, ptr noundef %fmt, ...) local_unnamed_addr #4 align 64 {
entry:
  %lvl = alloca [3 x i8], align 1
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %lvl) #23
  %0 = call ptr @memset(ptr %lvl, i32 0, i32 3)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #23
  %1 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #23
  %2 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !2021
  call void @llvm.va_start(ptr nonnull %args)
  %3 = ptrtoint ptr %fmt to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %fmt, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %4)
  %cmp.i37 = icmp eq i8 %4, 1
  br i1 %cmp.i37, label %entry.land.lhs.true.i_crit_edge, label %entry.while.end_crit_edge

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

entry.land.lhs.true.i_crit_edge:                  ; preds = %entry
  br label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end.land.lhs.true.i_crit_edge, %entry.land.lhs.true.i_crit_edge
  %fmt.addr.040 = phi ptr [ %add.ptr, %if.end.land.lhs.true.i_crit_edge ], [ %fmt, %entry.land.lhs.true.i_crit_edge ]
  %ratelimit.039 = phi ptr [ %ratelimit.1, %if.end.land.lhs.true.i_crit_edge ], [ getelementptr inbounds ([8 x %struct.ratelimit_state], ptr @printk_limits, i32 0, i32 4), %entry.land.lhs.true.i_crit_edge ]
  %type.038 = phi ptr [ %type.1, %if.end.land.lhs.true.i_crit_edge ], [ @.str.500, %entry.land.lhs.true.i_crit_edge ]
  %arrayidx2.i = getelementptr i8, ptr %fmt.addr.040, i32 1
  %5 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx2.i, align 1
  %7 = zext i8 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.647)
  switch i8 %6, label %land.lhs.true.i.while.end_crit_edge [
    i8 55, label %land.lhs.true.i.printk_get_level.exit_crit_edge
    i8 99, label %land.lhs.true.i.printk_get_level.exit_crit_edge47
    i8 48, label %land.lhs.true.i.printk_get_level.exit_crit_edge48
    i8 49, label %land.lhs.true.i.printk_get_level.exit_crit_edge49
    i8 50, label %land.lhs.true.i.printk_get_level.exit_crit_edge50
    i8 51, label %land.lhs.true.i.printk_get_level.exit_crit_edge51
    i8 52, label %land.lhs.true.i.printk_get_level.exit_crit_edge52
    i8 53, label %land.lhs.true.i.printk_get_level.exit_crit_edge53
    i8 54, label %land.lhs.true.i.printk_get_level.exit_crit_edge54
  ]

land.lhs.true.i.printk_get_level.exit_crit_edge54: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_get_level.exit

land.lhs.true.i.printk_get_level.exit_crit_edge53: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_get_level.exit

land.lhs.true.i.printk_get_level.exit_crit_edge52: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_get_level.exit

land.lhs.true.i.printk_get_level.exit_crit_edge51: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_get_level.exit

land.lhs.true.i.printk_get_level.exit_crit_edge50: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_get_level.exit

land.lhs.true.i.printk_get_level.exit_crit_edge49: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_get_level.exit

land.lhs.true.i.printk_get_level.exit_crit_edge48: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_get_level.exit

land.lhs.true.i.printk_get_level.exit_crit_edge47: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_get_level.exit

land.lhs.true.i.printk_get_level.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_get_level.exit

land.lhs.true.i.while.end_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

printk_get_level.exit:                            ; preds = %land.lhs.true.i.printk_get_level.exit_crit_edge, %land.lhs.true.i.printk_get_level.exit_crit_edge47, %land.lhs.true.i.printk_get_level.exit_crit_edge48, %land.lhs.true.i.printk_get_level.exit_crit_edge49, %land.lhs.true.i.printk_get_level.exit_crit_edge50, %land.lhs.true.i.printk_get_level.exit_crit_edge51, %land.lhs.true.i.printk_get_level.exit_crit_edge52, %land.lhs.true.i.printk_get_level.exit_crit_edge53, %land.lhs.true.i.printk_get_level.exit_crit_edge54
  %conv8.i = zext i8 %6 to i32
  %8 = zext i8 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.648)
  switch i8 %6, label %printk_get_level.exit.printk_skip_level.exit_crit_edge [
    i8 55, label %printk_get_level.exit.printk_get_level.exit.i_crit_edge
    i8 99, label %printk_get_level.exit.printk_get_level.exit.i_crit_edge55
    i8 48, label %printk_get_level.exit.printk_get_level.exit.i_crit_edge56
    i8 49, label %printk_get_level.exit.printk_get_level.exit.i_crit_edge57
    i8 50, label %printk_get_level.exit.printk_get_level.exit.i_crit_edge58
    i8 51, label %printk_get_level.exit.printk_get_level.exit.i_crit_edge59
    i8 52, label %printk_get_level.exit.printk_get_level.exit.i_crit_edge60
    i8 53, label %printk_get_level.exit.printk_get_level.exit.i_crit_edge61
    i8 54, label %printk_get_level.exit.printk_get_level.exit.i_crit_edge62
  ]

printk_get_level.exit.printk_get_level.exit.i_crit_edge62: ; preds = %printk_get_level.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_get_level.exit.i

printk_get_level.exit.printk_get_level.exit.i_crit_edge61: ; preds = %printk_get_level.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_get_level.exit.i

printk_get_level.exit.printk_get_level.exit.i_crit_edge60: ; preds = %printk_get_level.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_get_level.exit.i

printk_get_level.exit.printk_get_level.exit.i_crit_edge59: ; preds = %printk_get_level.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_get_level.exit.i

printk_get_level.exit.printk_get_level.exit.i_crit_edge58: ; preds = %printk_get_level.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_get_level.exit.i

printk_get_level.exit.printk_get_level.exit.i_crit_edge57: ; preds = %printk_get_level.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_get_level.exit.i

printk_get_level.exit.printk_get_level.exit.i_crit_edge56: ; preds = %printk_get_level.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_get_level.exit.i

printk_get_level.exit.printk_get_level.exit.i_crit_edge55: ; preds = %printk_get_level.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_get_level.exit.i

printk_get_level.exit.printk_get_level.exit.i_crit_edge: ; preds = %printk_get_level.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_get_level.exit.i

printk_get_level.exit.printk_skip_level.exit_crit_edge: ; preds = %printk_get_level.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %printk_skip_level.exit

printk_get_level.exit.i:                          ; preds = %printk_get_level.exit.printk_get_level.exit.i_crit_edge, %printk_get_level.exit.printk_get_level.exit.i_crit_edge55, %printk_get_level.exit.printk_get_level.exit.i_crit_edge56, %printk_get_level.exit.printk_get_level.exit.i_crit_edge57, %printk_get_level.exit.printk_get_level.exit.i_crit_edge58, %printk_get_level.exit.printk_get_level.exit.i_crit_edge59, %printk_get_level.exit.printk_get_level.exit.i_crit_edge60, %printk_get_level.exit.printk_get_level.exit.i_crit_edge61, %printk_get_level.exit.printk_get_level.exit.i_crit_edge62
  %add.ptr.i = getelementptr i8, ptr %fmt.addr.040, i32 2
  br label %printk_skip_level.exit

printk_skip_level.exit:                           ; preds = %printk_get_level.exit.i, %printk_get_level.exit.printk_skip_level.exit_crit_edge
  %9 = phi ptr [ %add.ptr.i, %printk_get_level.exit.i ], [ %fmt.addr.040, %printk_get_level.exit.printk_skip_level.exit_crit_edge ]
  %sub.ptr.lhs.cast = ptrtoint ptr %9 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %fmt.addr.040 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  call void @__sanitizer_cov_trace_const_cmp1(i8 56, i8 %6)
  %cmp3 = icmp ult i8 %6, 56
  br i1 %cmp3, label %if.then, label %printk_skip_level.exit.if.end_crit_edge

printk_skip_level.exit.if.end_crit_edge:          ; preds = %printk_skip_level.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %printk_skip_level.exit
  call void @__sanitizer_cov_trace_pc() #25
  %10 = call ptr @memcpy(ptr %lvl, ptr %fmt.addr.040, i32 %sub.ptr.sub)
  %arrayidx = getelementptr [3 x i8], ptr %lvl, i32 0, i32 %sub.ptr.sub
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 0, ptr %arrayidx, align 1
  %sub = add nsw i32 %conv8.i, -48
  %arrayidx4 = getelementptr [8 x ptr], ptr @logtypes, i32 0, i32 %sub
  %12 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx4, align 4
  %arrayidx6 = getelementptr [8 x %struct.ratelimit_state], ptr @printk_limits, i32 0, i32 %sub
  br label %if.end

if.end:                                           ; preds = %if.then, %printk_skip_level.exit.if.end_crit_edge
  %type.1 = phi ptr [ %13, %if.then ], [ %type.038, %printk_skip_level.exit.if.end_crit_edge ]
  %ratelimit.1 = phi ptr [ %arrayidx6, %if.then ], [ %ratelimit.039, %printk_skip_level.exit.if.end_crit_edge ]
  %add.ptr = getelementptr i8, ptr %fmt.addr.040, i32 %sub.ptr.sub
  %14 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %add.ptr, align 1
  %cmp.i = icmp eq i8 %15, 1
  br i1 %cmp.i, label %if.end.land.lhs.true.i_crit_edge, label %if.end.while.end_crit_edge

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

if.end.land.lhs.true.i_crit_edge:                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %land.lhs.true.i

while.end:                                        ; preds = %if.end.while.end_crit_edge, %land.lhs.true.i.while.end_crit_edge, %entry.while.end_crit_edge
  %type.0.lcssa = phi ptr [ @.str.500, %entry.while.end_crit_edge ], [ %type.1, %if.end.while.end_crit_edge ], [ %type.038, %land.lhs.true.i.while.end_crit_edge ]
  %ratelimit.0.lcssa = phi ptr [ getelementptr inbounds ([8 x %struct.ratelimit_state], ptr @printk_limits, i32 0, i32 4), %entry.while.end_crit_edge ], [ %ratelimit.1, %if.end.while.end_crit_edge ], [ %ratelimit.039, %land.lhs.true.i.while.end_crit_edge ]
  %fmt.addr.0.lcssa = phi ptr [ %fmt, %entry.while.end_crit_edge ], [ %add.ptr, %if.end.while.end_crit_edge ], [ %fmt.addr.040, %land.lhs.true.i.while.end_crit_edge ]
  %16 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %fmt.addr.0.lcssa, ptr %vaf, align 4
  %17 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %args, ptr %1, align 4
  %call8 = call i32 @___ratelimit(ptr noundef %ratelimit.0.lcssa, ptr noundef nonnull @__func__.btrfs_printk) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool.not = icmp eq i32 %call8, 0
  br i1 %tobool.not, label %while.end.if.end22_crit_edge, label %if.then9

while.end.if.end22_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end22

if.then9:                                         ; preds = %while.end
  %tobool10.not = icmp eq ptr %fs_info, null
  br i1 %tobool10.not, label %do.end17, label %do.end

do.end:                                           ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #25
  %sb = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 45
  %18 = ptrtoint ptr %sb to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sb, align 8
  %s_id = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 39
  %call14 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.70, ptr noundef nonnull %lvl, ptr noundef %type.0.lcssa, ptr noundef %s_id, ptr noundef nonnull %vaf) #30
  br label %if.end22

do.end17:                                         ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #25
  %call20 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.72, ptr noundef nonnull %lvl, ptr noundef %type.0.lcssa, ptr noundef nonnull %vaf) #30
  br label %if.end22

if.end22:                                         ; preds = %do.end17, %do.end, %while.end.if.end22_crit_edge
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #23
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %lvl) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_warn_32bit_limit(ptr noundef %fs_info) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 1
  %call = tail call i32 @_test_and_set_bit(i32 noundef 23, ptr noundef %flags) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.74) #31
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.75, i64 noundef 16) #31
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.76) #31
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_err_32bit_limit(ptr noundef %fs_info) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 1
  %call = tail call i32 @_test_and_set_bit(i32 noundef 22, ptr noundef %flags) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.77) #31
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.78, i64 noundef 16) #31
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.79) #31
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @__btrfs_abort_transaction(ptr noundef %trans, ptr noundef %function, i32 noundef %line, i32 noundef %errno) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info1 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %trans, i32 0, i32 16
  %0 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info1, align 4
  %conv = trunc i32 %errno to i16
  %aborted = getelementptr inbounds %struct.btrfs_trans_handle, ptr %trans, i32 0, i32 10
  %2 = ptrtoint ptr %aborted to i32
  call void @__asan_store2_noabort(i32 %2)
  store volatile i16 %conv, ptr %aborted, align 4
  %transaction = getelementptr inbounds %struct.btrfs_trans_handle, ptr %trans, i32 0, i32 4
  %3 = ptrtoint ptr %transaction to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %transaction, align 4
  %aborted13 = getelementptr inbounds %struct.btrfs_transaction, ptr %4, i32 0, i32 6
  %5 = ptrtoint ptr %aborted13 to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile i32 %errno, ptr %aborted13, align 4
  %transaction_wait = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 39
  tail call void @__wake_up(ptr noundef %transaction_wait, i32 noundef 3, i32 noundef 1, ptr noundef null) #23
  %transaction_blocked_wait = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 40
  tail call void @__wake_up(ptr noundef %transaction_blocked_wait, i32 noundef 3, i32 noundef 1, ptr noundef null) #23
  tail call void (ptr, ptr, i32, i32, ptr, ...) @__btrfs_handle_fs_error(ptr noundef %1, ptr noundef %function, i32 noundef %line, i32 noundef %errno, ptr noundef null) #31
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @__btrfs_panic(ptr noundef %fs_info, ptr noundef %function, i32 noundef %line, i32 noundef %errno, ptr noundef %fmt, ...) local_unnamed_addr #4 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #23
  %0 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  %1 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %fmt, ptr %vaf, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #23
  %2 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !2021
  %tobool.not = icmp eq ptr %fs_info, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %sb = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 45
  %3 = ptrtoint ptr %sb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sb, align 8
  %s_id2 = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 39
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %s_id.0 = phi ptr [ %s_id2, %if.then ], [ @.str.80, %entry.if.end_crit_edge ]
  call void @llvm.va_start(ptr nonnull %args)
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %args, ptr %0, align 4
  %call = call ptr @btrfs_decode_error(i32 noundef %errno) #29
  br i1 %tobool.not, label %if.end.if.end7_crit_edge, label %land.lhs.true

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end7

land.lhs.true:                                    ; preds = %if.end
  %mount_opt = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 31
  %6 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mount_opt, align 8
  %and = and i32 %7, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool5.not = icmp eq i32 %and, 0
  br i1 %tobool5.not, label %land.lhs.true.if.end7_crit_edge, label %if.then6

land.lhs.true.if.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end7

if.then6:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  call void (ptr, ...) @panic(ptr noundef nonnull @.str.81, ptr noundef %s_id.0, ptr noundef %function, i32 noundef %line, ptr noundef nonnull %vaf, i32 noundef %errno, ptr noundef nonnull %call) #32
  unreachable

if.end7:                                          ; preds = %land.lhs.true.if.end7_crit_edge, %if.end.if.end7_crit_edge
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.82, ptr noundef %function, i32 noundef %line, ptr noundef nonnull %vaf, i32 noundef %errno, ptr noundef nonnull %call) #31
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #23
  ret void
}

; Function Attrs: cold noreturn null_pointer_is_valid
declare dso_local void @panic(ptr noundef, ...) local_unnamed_addr #7

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_parse_options(ptr noundef %info, ptr noundef %options, i32 noundef %new_flags) local_unnamed_addr #0 align 64 {
entry:
  %opts.i = alloca ptr, align 4
  %args.i = alloca [3 x %struct.substring_t], align 4
  %options.addr = alloca ptr, align 4
  %args = alloca [3 x %struct.substring_t], align 4
  %intarg = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %options.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %options, ptr %options.addr, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %args) #23
  %1 = call ptr @memset(ptr %args, i32 255, i32 24)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %intarg) #23
  %2 = ptrtoint ptr %intarg to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %intarg, align 4, !annotation !2021
  %super_copy.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %info, i32 0, i32 43
  %3 = ptrtoint ptr %super_copy.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %super_copy.i, align 8
  %compat_ro_flags.i.i = getelementptr inbounds %struct.btrfs_super_block, ptr %4, i32 0, i32 21
  %5 = ptrtoint ptr %compat_ro_flags.i.i to i32
  call void @__asan_loadN_noabort(i32 %5, i32 8)
  %6 = load i64, ptr %compat_ro_flags.i.i, align 1
  %7 = and i64 %6, 72057594037927936
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %7)
  %tobool.not = icmp eq i64 %7, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %mount_opt = getelementptr inbounds %struct.btrfs_fs_info, ptr %info, i32 0, i32 31
  %8 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mount_opt, align 8
  %or = or i32 %9, 33554432
  store i32 %or, ptr %mount_opt, align 8
  br label %if.end9

if.else:                                          ; preds = %entry
  %call1 = tail call zeroext i1 @btrfs_free_space_cache_v1_active(ptr noundef %info) #23
  br i1 %call1, label %if.then2, label %if.else.if.end9_crit_edge

if.else.if.end9_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end9

if.then2:                                         ; preds = %if.else
  %10 = getelementptr inbounds %struct.btrfs_fs_info, ptr %info, i32 0, i32 176
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %10, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %12)
  %cmp.i.not = icmp eq i64 %12, 0
  br i1 %cmp.i.not, label %if.else5, label %if.then4

if.then4:                                         ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.83) #31
  %13 = ptrtoint ptr %super_copy.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %super_copy.i, align 8
  %cache_generation.i = getelementptr inbounds %struct.btrfs_super_block, ptr %14, i32 0, i32 29
  %15 = ptrtoint ptr %cache_generation.i to i32
  call void @__asan_storeN_noabort(i32 %15, i32 8)
  store i64 0, ptr %cache_generation.i, align 1
  br label %if.end9

if.else5:                                         ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #25
  %mount_opt6 = getelementptr inbounds %struct.btrfs_fs_info, ptr %info, i32 0, i32 31
  %16 = ptrtoint ptr %mount_opt6 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %mount_opt6, align 8
  %or7 = or i32 %17, 4096
  store i32 %or7, ptr %mount_opt6, align 8
  br label %if.end9

if.end9:                                          ; preds = %if.else5, %if.then4, %if.else.if.end9_crit_edge, %if.then
  %18 = ptrtoint ptr %options.addr to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %options.addr, align 4
  %tobool10.not = icmp eq ptr %19, null
  br i1 %tobool10.not, label %if.end9.check_crit_edge, label %while.cond.preheader

if.end9.check_crit_edge:                          ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  br label %check

while.cond.preheader:                             ; preds = %if.end9
  %call131086 = call ptr @strsep(ptr noundef nonnull %options.addr, ptr noundef nonnull @.str.84) #23
  %cmp.not1087 = icmp eq ptr %call131086, null
  br i1 %cmp.not1087, label %while.cond.preheader.check_crit_edge, label %while.body.lr.ph

while.cond.preheader.check_crit_edge:             ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #25
  br label %check

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %mount_opt479 = getelementptr inbounds %struct.btrfs_fs_info, ptr %info, i32 0, i32 31
  %commit_interval = getelementptr inbounds %struct.btrfs_fs_info, ptr %info, i32 0, i32 35
  %check_integrity_print_mask = getelementptr inbounds %struct.btrfs_fs_info, ptr %info, i32 0, i32 135
  %metadata_ratio = getelementptr inbounds %struct.btrfs_fs_info, ptr %info, i32 0, i32 121
  %sb320 = getelementptr inbounds %struct.btrfs_fs_info, ptr %info, i32 0, i32 45
  %max_inline = getelementptr inbounds %struct.btrfs_fs_info, ptr %info, i32 0, i32 36
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %info, i32 0, i32 167
  %thread_pool_size = getelementptr inbounds %struct.btrfs_fs_info, ptr %info, i32 0, i32 91
  %compress_type83 = getelementptr inbounds %struct.btrfs_fs_info, ptr %info, i32 0, i32 33
  %compress_level = getelementptr inbounds %struct.btrfs_fs_info, ptr %info, i32 0, i32 34
  %super_lock.i1010 = getelementptr inbounds %struct.btrfs_fs_info, ptr %info, i32 0, i32 42
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %call131091 = phi ptr [ %call131086, %while.body.lr.ph ], [ %call13, %cleanup.while.body_crit_edge ]
  %no_compress.01088 = phi i32 [ 0, %while.body.lr.ph ], [ %no_compress.3, %cleanup.while.body_crit_edge ]
  %20 = ptrtoint ptr %call131091 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %call131091, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool14.not = icmp eq i8 %21, 0
  br i1 %tobool14.not, label %while.body.cleanup_crit_edge, label %if.end16

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end16:                                         ; preds = %while.body
  %call17 = call i32 @match_token(ptr noundef nonnull %call131091, ptr noundef nonnull @tokens, ptr noundef nonnull %args) #23
  %22 = zext i32 %call17 to i64
  call void @__sanitizer_cov_trace_switch(i64 %22, ptr @__sancov_gen_cov_switch_values.649)
  switch i32 %call17, label %if.end16.cleanup_crit_edge [
    i32 8, label %sw.bb
    i32 61, label %sw.bb653
    i32 60, label %sw.bb650
    i32 57, label %sw.bb647
    i32 58, label %sw.bb644
    i32 19, label %do.body
    i32 18, label %sw.bb28
    i32 17, label %sw.bb44
    i32 16, label %do.body68
    i32 5, label %if.end16.sw.bb78_crit_edge
    i32 6, label %if.end16.sw.bb78_crit_edge1122
    i32 4, label %if.end16.sw.bb79_crit_edge
    i32 7, label %if.end16.sw.bb79_crit_edge1123
    i32 32, label %do.body203
    i32 34, label %do.body216
    i32 33, label %sw.bb238
    i32 35, label %if.end16.do.body252_crit_edge
    i32 14, label %do.body263
    i32 15, label %do.body274
    i32 39, label %sw.bb284
    i32 13, label %sw.bb295
    i32 0, label %sw.bb317
    i32 1, label %sw.bb319
    i32 41, label %do.body324
    i32 40, label %do.body335
    i32 25, label %if.end16.sw.bb345_crit_edge
    i32 45, label %if.end16.sw.bb345_crit_edge1124
    i32 11, label %do.body357
    i32 12, label %do.body368
    i32 26, label %sw.bb378
    i32 59, label %sw.bb639
    i32 43, label %sw.bb631
    i32 23, label %do.body430
    i32 24, label %lor.lhs.false388
    i32 22, label %if.end16.if.then394_crit_edge
    i32 27, label %sw.bb494
    i32 30, label %sw.bb497
    i32 50, label %if.end16.sw.bb528_crit_edge
    i32 51, label %if.end16.sw.bb528_crit_edge1125
    i32 2, label %do.body530
    i32 42, label %sw.bb540
    i32 55, label %sw.bb543
    i32 56, label %sw.bb546
    i32 20, label %do.body550
    i32 21, label %do.body561
    i32 49, label %if.end16.sw.bb571_crit_edge
    i32 44, label %if.end16.sw.bb571_crit_edge1126
    i32 28, label %sw.bb577
    i32 53, label %sw.bb580
    i32 52, label %sw.bb585
    i32 54, label %sw.bb588
    i32 10, label %sw.bb595
    i32 3, label %sw.bb616
    i32 29, label %if.end16.if.then459_crit_edge
    i32 31, label %lor.lhs.false453
  ]

if.end16.if.then459_crit_edge:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then459

if.end16.sw.bb571_crit_edge1126:                  ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb571

if.end16.sw.bb571_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb571

if.end16.sw.bb528_crit_edge1125:                  ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb528

if.end16.sw.bb528_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb528

if.end16.if.then394_crit_edge:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then394

if.end16.sw.bb345_crit_edge1124:                  ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb345

if.end16.sw.bb345_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb345

if.end16.do.body252_crit_edge:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body252

if.end16.sw.bb79_crit_edge1123:                   ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb79

if.end16.sw.bb79_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb79

if.end16.sw.bb78_crit_edge1122:                   ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb78

if.end16.sw.bb78_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb78

if.end16.cleanup_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

sw.bb:                                            ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.85) #31
  %23 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %mount_opt479, align 8
  %or19 = or i32 %24, 16
  store i32 %or19, ptr %mount_opt479, align 8
  br label %cleanup

do.body:                                          ; preds = %if.end16
  %25 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %mount_opt479, align 8
  %and = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool23.not = icmp eq i32 %and, 0
  br i1 %tobool23.not, label %if.then24, label %do.body.if.end25_crit_edge

do.body.if.end25_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end25

if.then24:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.86) #31
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %do.body.if.end25_crit_edge
  %27 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %mount_opt479, align 8
  %or27 = or i32 %28, 1
  store i32 %or27, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb28:                                          ; preds = %if.end16
  %29 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %mount_opt479, align 8
  %and30 = and i32 %30, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30)
  %tobool31.not = icmp eq i32 %and30, 0
  br i1 %tobool31.not, label %sw.bb28.if.end39_crit_edge, label %if.then32

sw.bb28.if.end39_crit_edge:                       ; preds = %sw.bb28
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end39

if.then32:                                        ; preds = %sw.bb28
  call void @__sanitizer_cov_trace_pc() #25
  %and34 = and i32 %30, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34)
  %tobool35.not = icmp eq i32 %and34, 0
  %.str.88..str.87 = select i1 %tobool35.not, ptr @.str.88, ptr @.str.87
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull %.str.88..str.87) #31
  br label %if.end39

if.end39:                                         ; preds = %if.then32, %sw.bb28.if.end39_crit_edge
  %31 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %mount_opt479, align 8
  %and43 = and i32 %32, -4
  store i32 %and43, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb44:                                          ; preds = %if.end16
  %33 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %mount_opt479, align 8
  %and46 = and i32 %34, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and46)
  %tobool47.not = icmp eq i32 %and46, 0
  br i1 %tobool47.not, label %if.then48, label %sw.bb44.if.end58_crit_edge

sw.bb44.if.end58_crit_edge:                       ; preds = %sw.bb44
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end58

if.then48:                                        ; preds = %sw.bb44
  call void @__sanitizer_cov_trace_pc() #25
  %35 = and i32 %34, 2080
  call void @__sanitizer_cov_trace_const_cmp4(i32 2080, i32 %35)
  %.not = icmp eq i32 %35, 2080
  %.str.90..str.89 = select i1 %.not, ptr @.str.90, ptr @.str.89
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull %.str.90..str.89) #31
  br label %if.end58

if.end58:                                         ; preds = %if.then48, %sw.bb44.if.end58_crit_edge
  %36 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %mount_opt479, align 8
  %and62 = and i32 %37, -2084
  %or66 = or i32 %and62, 3
  store i32 %or66, ptr %mount_opt479, align 8
  br label %cleanup

do.body68:                                        ; preds = %if.end16
  %38 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %mount_opt479, align 8
  %and70 = and i32 %39, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and70)
  %tobool71.not = icmp eq i32 %and70, 0
  br i1 %tobool71.not, label %do.body68.if.end73_crit_edge, label %if.then72

do.body68.if.end73_crit_edge:                     ; preds = %do.body68
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end73

if.then72:                                        ; preds = %do.body68
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.91) #31
  br label %if.end73

if.end73:                                         ; preds = %if.then72, %do.body68.if.end73_crit_edge
  %40 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %mount_opt479, align 8
  %and75 = and i32 %41, -3
  store i32 %and75, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb78:                                          ; preds = %if.end16.sw.bb78_crit_edge, %if.end16.sw.bb78_crit_edge1122
  br label %sw.bb79

sw.bb79:                                          ; preds = %sw.bb78, %if.end16.sw.bb79_crit_edge, %if.end16.sw.bb79_crit_edge1123
  %compress_force.1.off0 = phi i1 [ false, %if.end16.sw.bb79_crit_edge ], [ false, %if.end16.sw.bb79_crit_edge1123 ], [ true, %sw.bb78 ]
  %42 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %mount_opt479, align 8
  %and81 = and i32 %43, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and81)
  %tobool82.not = icmp eq i32 %and81, 0
  br i1 %tobool82.not, label %sw.bb79.cond.end_crit_edge, label %cond.true

sw.bb79.cond.end_crit_edge:                       ; preds = %sw.bb79
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %sw.bb79
  call void @__sanitizer_cov_trace_pc() #25
  %44 = ptrtoint ptr %compress_type83 to i32
  call void @__asan_load1_noabort(i32 %44)
  %bf.load = load i8, ptr %compress_type83, align 8
  %bf.lshr = lshr i8 %bf.load, 4
  %bf.cast = zext i8 %bf.lshr to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %sw.bb79.cond.end_crit_edge
  %cond = phi i32 [ %bf.cast, %cond.true ], [ 0, %sw.bb79.cond.end_crit_edge ]
  %45 = ptrtoint ptr %compress_level to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %compress_level, align 4
  %47 = and i32 %call17, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %47)
  %switch = icmp eq i32 %47, 4
  br i1 %switch, label %if.then93.thread, label %lor.lhs.false90

if.then93.thread:                                 ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  %48 = ptrtoint ptr %compress_type83 to i32
  call void @__asan_load1_noabort(i32 %48)
  %bf.load951037 = load i8, ptr %compress_type83, align 8
  %bf.clear1038 = and i8 %bf.load951037, 15
  %bf.set1039 = or i8 %bf.clear1038, 16
  store i8 %bf.set1039, ptr %compress_type83, align 8
  br label %if.end104

lor.lhs.false90:                                  ; preds = %cond.end
  %49 = ptrtoint ptr %args to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %args, align 4
  %call91 = call i32 @strncmp(ptr noundef %50, ptr noundef nonnull dereferenceable(5) @.str.92, i32 noundef 4)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call91)
  %cmp92 = icmp eq i32 %call91, 0
  br i1 %cmp92, label %if.then99, label %if.else111

if.then99:                                        ; preds = %lor.lhs.false90
  call void @__sanitizer_cov_trace_pc() #25
  %51 = ptrtoint ptr %compress_type83 to i32
  call void @__asan_load1_noabort(i32 %51)
  %bf.load95 = load i8, ptr %compress_type83, align 8
  %bf.clear = and i8 %bf.load95, 15
  %bf.set = or i8 %bf.clear, 16
  store i8 %bf.set, ptr %compress_type83, align 8
  %52 = ptrtoint ptr %compress_level to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 3, ptr %compress_level, align 4
  %53 = ptrtoint ptr %args to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %args, align 4
  %add.ptr = getelementptr i8, ptr %54, i32 4
  %call102 = call i32 @btrfs_compress_str2level(i32 noundef 1, ptr noundef %add.ptr) #23
  br label %if.end104

if.end104:                                        ; preds = %if.then99, %if.then93.thread
  %storemerge = phi i32 [ %call102, %if.then99 ], [ 3, %if.then93.thread ]
  %55 = ptrtoint ptr %compress_level to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %storemerge, ptr %compress_level, align 4
  %56 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %mount_opt479, align 8
  %or106 = and i32 %57, -36
  %and108 = or i32 %or106, 32
  store i32 %and108, ptr %mount_opt479, align 8
  br i1 %compress_force.1.off0, label %if.end104.if.end176.thread_crit_edge, label %if.end104.if.end176.thread1061_crit_edge

if.end104.if.end176.thread1061_crit_edge:         ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end176.thread1061

if.end104.if.end176.thread_crit_edge:             ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end176.thread

if.else111:                                       ; preds = %lor.lhs.false90
  %call114 = call i32 @strncmp(ptr noundef %50, ptr noundef nonnull dereferenceable(4) @.str.93, i32 noundef 3)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call114)
  %cmp115 = icmp eq i32 %call114, 0
  br i1 %cmp115, label %if.then116, label %if.else128

if.then116:                                       ; preds = %if.else111
  %58 = ptrtoint ptr %compress_type83 to i32
  call void @__asan_load1_noabort(i32 %58)
  %bf.load118 = load i8, ptr %compress_type83, align 8
  %bf.clear119 = and i8 %bf.load118, 15
  %bf.set120 = or i8 %bf.clear119, 32
  store i8 %bf.set120, ptr %compress_type83, align 8
  %59 = ptrtoint ptr %compress_level to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 0, ptr %compress_level, align 4
  %or123 = and i32 %43, -36
  %and125 = or i32 %or123, 32
  %60 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %and125, ptr %mount_opt479, align 8
  %61 = ptrtoint ptr %super_copy.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %super_copy.i, align 8
  %incompat_flags.i.i = getelementptr inbounds %struct.btrfs_super_block, ptr %62, i32 0, i32 22
  %63 = ptrtoint ptr %incompat_flags.i.i to i32
  call void @__asan_loadN_noabort(i32 %63, i32 8)
  %64 = load i64, ptr %incompat_flags.i.i, align 1
  %65 = and i64 %64, 576460752303423488
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %65)
  %tobool.not.i = icmp eq i64 %65, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.then116.if.end168_crit_edge

if.then116.if.end168_crit_edge:                   ; preds = %if.then116
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end168

if.then.i:                                        ; preds = %if.then116
  call void @_raw_spin_lock(ptr noundef %super_lock.i1010) #23
  %66 = ptrtoint ptr %incompat_flags.i.i to i32
  call void @__asan_loadN_noabort(i32 %66, i32 8)
  %67 = load i64, ptr %incompat_flags.i.i, align 1
  %68 = call i64 @llvm.bswap.i64(i64 %67) #23
  %and2.i = and i64 %68, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and2.i)
  %tobool3.not.i = icmp eq i64 %and2.i, 0
  br i1 %tobool3.not.i, label %if.then4.i, label %if.then.i.if.end.i_crit_edge

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

if.then4.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  %or.i = or i64 %68, 8
  %69 = call i64 @llvm.bswap.i64(i64 %or.i) #23
  %70 = ptrtoint ptr %incompat_flags.i.i to i32
  call void @__asan_storeN_noabort(i32 %70, i32 8)
  store i64 %69, ptr %incompat_flags.i.i, align 1
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.567, ptr noundef nonnull @.str.94, i64 noundef 8) #30
  br label %if.end.i

if.end.i:                                         ; preds = %if.then4.i, %if.then.i.if.end.i_crit_edge
  call void @_raw_spin_unlock(ptr noundef %super_lock.i1010) #23
  br i1 %compress_force.1.off0, label %if.end.i.if.end176.thread_crit_edge, label %if.end.i.if.end176.thread1061_crit_edge

if.end.i.if.end176.thread1061_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end176.thread1061

if.end.i.if.end176.thread_crit_edge:              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end176.thread

if.else128:                                       ; preds = %if.else111
  %call131 = call i32 @strncmp(ptr noundef %50, ptr noundef nonnull dereferenceable(5) @.str.95, i32 noundef 4)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call131)
  %cmp132 = icmp eq i32 %call131, 0
  br i1 %cmp132, label %if.then133, label %if.else149

if.then133:                                       ; preds = %if.else128
  %71 = ptrtoint ptr %compress_type83 to i32
  call void @__asan_load1_noabort(i32 %71)
  %bf.load135 = load i8, ptr %compress_type83, align 8
  %bf.clear136 = and i8 %bf.load135, 15
  %bf.set137 = or i8 %bf.clear136, 48
  store i8 %bf.set137, ptr %compress_type83, align 8
  %add.ptr140 = getelementptr i8, ptr %50, i32 4
  %call141 = call i32 @btrfs_compress_str2level(i32 noundef 3, ptr noundef %add.ptr140) #23
  %72 = ptrtoint ptr %compress_level to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %call141, ptr %compress_level, align 4
  %73 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %mount_opt479, align 8
  %or144 = and i32 %74, -36
  %and146 = or i32 %or144, 32
  store i32 %and146, ptr %mount_opt479, align 8
  %75 = ptrtoint ptr %super_copy.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %super_copy.i, align 8
  %incompat_flags.i.i1007 = getelementptr inbounds %struct.btrfs_super_block, ptr %76, i32 0, i32 22
  %77 = ptrtoint ptr %incompat_flags.i.i1007 to i32
  call void @__asan_loadN_noabort(i32 %77, i32 8)
  %78 = load i64, ptr %incompat_flags.i.i1007, align 1
  %79 = and i64 %78, 1152921504606846976
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %79)
  %tobool.not.i1009 = icmp eq i64 %79, 0
  br i1 %tobool.not.i1009, label %if.then.i1013, label %if.then133.if.end168_crit_edge

if.then133.if.end168_crit_edge:                   ; preds = %if.then133
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end168

if.then.i1013:                                    ; preds = %if.then133
  call void @_raw_spin_lock(ptr noundef %super_lock.i1010) #23
  %80 = ptrtoint ptr %incompat_flags.i.i1007 to i32
  call void @__asan_loadN_noabort(i32 %80, i32 8)
  %81 = load i64, ptr %incompat_flags.i.i1007, align 1
  %82 = call i64 @llvm.bswap.i64(i64 %81) #23
  %and2.i1011 = and i64 %82, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and2.i1011)
  %tobool3.not.i1012 = icmp eq i64 %and2.i1011, 0
  br i1 %tobool3.not.i1012, label %if.then4.i1015, label %if.then.i1013.if.end.i1016_crit_edge

if.then.i1013.if.end.i1016_crit_edge:             ; preds = %if.then.i1013
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i1016

if.then4.i1015:                                   ; preds = %if.then.i1013
  call void @__sanitizer_cov_trace_pc() #25
  %or.i1014 = or i64 %82, 16
  %83 = call i64 @llvm.bswap.i64(i64 %or.i1014) #23
  %84 = ptrtoint ptr %incompat_flags.i.i1007 to i32
  call void @__asan_storeN_noabort(i32 %84, i32 8)
  store i64 %83, ptr %incompat_flags.i.i1007, align 1
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.567, ptr noundef nonnull @.str.96, i64 noundef 16) #30
  br label %if.end.i1016

if.end.i1016:                                     ; preds = %if.then4.i1015, %if.then.i1013.if.end.i1016_crit_edge
  call void @_raw_spin_unlock(ptr noundef %super_lock.i1010) #23
  br i1 %compress_force.1.off0, label %if.end.i1016.if.end176.thread_crit_edge, label %if.end.i1016.if.end176.thread1061_crit_edge

if.end.i1016.if.end176.thread1061_crit_edge:      ; preds = %if.end.i1016
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end176.thread1061

if.end.i1016.if.end176.thread_crit_edge:          ; preds = %if.end.i1016
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end176.thread

if.else149:                                       ; preds = %if.else128
  %call152 = call i32 @strncmp(ptr noundef %50, ptr noundef nonnull dereferenceable(3) @.str.97, i32 noundef 2)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call152)
  %cmp153 = icmp eq i32 %call152, 0
  br i1 %cmp153, label %if.end176, label %if.else149.out_crit_edge

if.else149.out_crit_edge:                         ; preds = %if.else149
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end168:                                        ; preds = %if.then133.if.end168_crit_edge, %if.then116.if.end168_crit_edge
  %compress_type.0 = phi ptr [ @.str.93, %if.then116.if.end168_crit_edge ], [ @.str.95, %if.then133.if.end168_crit_edge ]
  br i1 %compress_force.1.off0, label %if.end168.if.end176.thread_crit_edge, label %if.end168.if.end176.thread1061_crit_edge

if.end168.if.end176.thread1061_crit_edge:         ; preds = %if.end168
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end176.thread1061

if.end168.if.end176.thread_crit_edge:             ; preds = %if.end168
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end176.thread

if.end176.thread:                                 ; preds = %if.end168.if.end176.thread_crit_edge, %if.end.i1016.if.end176.thread_crit_edge, %if.end.i.if.end176.thread_crit_edge, %if.end104.if.end176.thread_crit_edge
  %compress_type.01050 = phi ptr [ @.str.92, %if.end104.if.end176.thread_crit_edge ], [ %compress_type.0, %if.end168.if.end176.thread_crit_edge ], [ @.str.93, %if.end.i.if.end176.thread_crit_edge ], [ @.str.95, %if.end.i1016.if.end176.thread_crit_edge ]
  %85 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %mount_opt479, align 8
  %or172 = or i32 %86, 2048
  br label %if.else179.sink.split

if.end176.thread1061:                             ; preds = %if.end168.if.end176.thread1061_crit_edge, %if.end.i1016.if.end176.thread1061_crit_edge, %if.end.i.if.end176.thread1061_crit_edge, %if.end104.if.end176.thread1061_crit_edge
  %compress_type.01044.ph = phi ptr [ @.str.95, %if.end.i1016.if.end176.thread1061_crit_edge ], [ @.str.93, %if.end.i.if.end176.thread1061_crit_edge ], [ @.str.92, %if.end104.if.end176.thread1061_crit_edge ], [ %compress_type.0, %if.end168.if.end176.thread1061_crit_edge ]
  %87 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %mount_opt479, align 8
  %and1751065 = and i32 %88, -2049
  br label %if.else179.sink.split

if.end176:                                        ; preds = %if.else149
  %89 = ptrtoint ptr %compress_level to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 0, ptr %compress_level, align 4
  %90 = ptrtoint ptr %compress_type83 to i32
  call void @__asan_load1_noabort(i32 %90)
  %bf.load157 = load i8, ptr %compress_type83, align 8
  %bf.clear158 = and i8 %bf.load157, 15
  store i8 %bf.clear158, ptr %compress_type83, align 8
  %and163 = and i32 %43, -2081
  %inc = add i32 %no_compress.01088, 1
  %91 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %and163, ptr %mount_opt479, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %no_compress.01088)
  %cmp177 = icmp eq i32 %no_compress.01088, 0
  br i1 %cmp177, label %if.then178, label %if.end176.if.else179_crit_edge

if.end176.if.else179_crit_edge:                   ; preds = %if.end176
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else179

if.then178:                                       ; preds = %if.end176
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.98) #31
  br label %cleanup

if.else179.sink.split:                            ; preds = %if.end176.thread1061, %if.end176.thread
  %and1751065.sink = phi i32 [ %and1751065, %if.end176.thread1061 ], [ %or172, %if.end176.thread ]
  %compress_type.010431060.ph = phi ptr [ %compress_type.01044.ph, %if.end176.thread1061 ], [ %compress_type.01050, %if.end176.thread ]
  %compress_force.2.off010451059.ph = phi i1 [ false, %if.end176.thread1061 ], [ true, %if.end176.thread ]
  %92 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 %and1751065.sink, ptr %mount_opt479, align 8
  br label %if.else179

if.else179:                                       ; preds = %if.else179.sink.split, %if.end176.if.else179_crit_edge
  %compress_type.010431060 = phi ptr [ @.str.97, %if.end176.if.else179_crit_edge ], [ %compress_type.010431060.ph, %if.else179.sink.split ]
  %compress_force.2.off010451059 = phi i1 [ false, %if.end176.if.else179_crit_edge ], [ %compress_force.2.off010451059.ph, %if.else179.sink.split ]
  %no_compress.110471058 = phi i32 [ %inc, %if.end176.if.else179_crit_edge ], [ 0, %if.else179.sink.split ]
  %93 = ptrtoint ptr %compress_type83 to i32
  call void @__asan_load1_noabort(i32 %93)
  %bf.load181 = load i8, ptr %compress_type83, align 8
  %bf.lshr182 = lshr i8 %bf.load181, 4
  %bf.cast183 = zext i8 %bf.lshr182 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %bf.cast183)
  %cmp184.not = icmp eq i32 %cond, %bf.cast183
  br i1 %cmp184.not, label %lor.lhs.false185, label %if.else179.if.then195_crit_edge

if.else179.if.then195_crit_edge:                  ; preds = %if.else179
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then195

lor.lhs.false185:                                 ; preds = %if.else179
  %94 = and i32 %43, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %94)
  %95 = icmp eq i32 %94, 0
  %cmp189.not = xor i1 %95, %compress_force.2.off010451059
  br i1 %cmp189.not, label %lor.lhs.false191, label %lor.lhs.false185.if.then195_crit_edge

lor.lhs.false185.if.then195_crit_edge:            ; preds = %lor.lhs.false185
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then195

lor.lhs.false191:                                 ; preds = %lor.lhs.false185
  %96 = ptrtoint ptr %compress_level to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %compress_level, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %97, i32 %46)
  %cmp193.not = icmp eq i32 %97, %46
  br i1 %cmp193.not, label %lor.lhs.false191.cleanup_crit_edge, label %lor.lhs.false191.if.then195_crit_edge

lor.lhs.false191.if.then195_crit_edge:            ; preds = %lor.lhs.false191
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then195

lor.lhs.false191.cleanup_crit_edge:               ; preds = %lor.lhs.false191
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then195:                                       ; preds = %lor.lhs.false191.if.then195_crit_edge, %lor.lhs.false185.if.then195_crit_edge, %if.else179.if.then195_crit_edge
  %cond198 = select i1 %compress_force.2.off010451059, ptr @.str.100, ptr @.str.101
  %98 = ptrtoint ptr %compress_level to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %compress_level, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.99, ptr noundef nonnull %cond198, ptr noundef nonnull %compress_type.010431060, i32 noundef %99) #31
  br label %cleanup

do.body203:                                       ; preds = %if.end16
  %100 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %mount_opt479, align 8
  %and205 = and i32 %101, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and205)
  %tobool206.not = icmp eq i32 %and205, 0
  br i1 %tobool206.not, label %if.then207, label %do.body203.if.end208_crit_edge

do.body203.if.end208_crit_edge:                   ; preds = %do.body203
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end208

if.then207:                                       ; preds = %do.body203
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.102) #31
  br label %if.end208

if.end208:                                        ; preds = %if.then207, %do.body203.if.end208_crit_edge
  %102 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %mount_opt479, align 8
  %or210 = and i32 %103, -521
  %and214 = or i32 %or210, 8
  store i32 %and214, ptr %mount_opt479, align 8
  br label %cleanup

do.body216:                                       ; preds = %if.end16
  %104 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %mount_opt479, align 8
  %and218 = and i32 %105, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and218)
  %tobool219.not = icmp eq i32 %and218, 0
  br i1 %tobool219.not, label %if.then220, label %do.body216.if.end221_crit_edge

do.body216.if.end221_crit_edge:                   ; preds = %do.body216
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end221

if.then220:                                       ; preds = %do.body216
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.102) #31
  br label %if.end221

if.end221:                                        ; preds = %if.then220, %do.body216.if.end221_crit_edge
  %106 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %mount_opt479, align 8
  %or223 = or i32 %107, 8
  store i32 %or223, ptr %mount_opt479, align 8
  %and228 = and i32 %107, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and228)
  %tobool229.not = icmp eq i32 %and228, 0
  br i1 %tobool229.not, label %if.then230, label %if.end221.if.end231_crit_edge

if.end221.if.end231_crit_edge:                    ; preds = %if.end221
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end231

if.then230:                                       ; preds = %if.end221
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.103) #31
  br label %if.end231

if.end231:                                        ; preds = %if.then230, %if.end221.if.end231_crit_edge
  %108 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %mount_opt479, align 8
  %or233 = and i32 %109, -769
  %and237 = or i32 %or233, 256
  store i32 %and237, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb238:                                         ; preds = %if.end16
  %110 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %mount_opt479, align 8
  %or240 = or i32 %111, 512
  store i32 %or240, ptr %mount_opt479, align 8
  %and243 = and i32 %111, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and243)
  %tobool244.not = icmp eq i32 %and243, 0
  br i1 %tobool244.not, label %sw.bb238.if.end246_crit_edge, label %if.then245

sw.bb238.if.end246_crit_edge:                     ; preds = %sw.bb238
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end246

if.then245:                                       ; preds = %sw.bb238
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.104) #31
  br label %if.end246

if.end246:                                        ; preds = %if.then245, %sw.bb238.if.end246_crit_edge
  %112 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %mount_opt479, align 8
  %and248 = and i32 %113, -9
  store i32 %and248, ptr %mount_opt479, align 8
  br label %do.body252

do.body252:                                       ; preds = %if.end246, %if.end16.do.body252_crit_edge
  %114 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %mount_opt479, align 8
  %and254 = and i32 %115, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and254)
  %tobool255.not = icmp eq i32 %and254, 0
  br i1 %tobool255.not, label %do.body252.if.end257_crit_edge, label %if.then256

do.body252.if.end257_crit_edge:                   ; preds = %do.body252
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end257

if.then256:                                       ; preds = %do.body252
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.105) #31
  br label %if.end257

if.end257:                                        ; preds = %if.then256, %do.body252.if.end257_crit_edge
  %116 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %mount_opt479, align 8
  %and259 = and i32 %117, -257
  store i32 %and259, ptr %mount_opt479, align 8
  br label %cleanup

do.body263:                                       ; preds = %if.end16
  %118 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %mount_opt479, align 8
  %and265 = and i32 %119, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and265)
  %tobool266.not = icmp eq i32 %and265, 0
  br i1 %tobool266.not, label %do.body263.if.end268_crit_edge, label %if.then267

do.body263.if.end268_crit_edge:                   ; preds = %do.body263
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end268

if.then267:                                       ; preds = %do.body263
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.106) #31
  br label %if.end268

if.end268:                                        ; preds = %if.then267, %do.body263.if.end268_crit_edge
  %120 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %mount_opt479, align 8
  %and270 = and i32 %121, -5
  store i32 %and270, ptr %mount_opt479, align 8
  br label %cleanup

do.body274:                                       ; preds = %if.end16
  %122 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %mount_opt479, align 8
  %and276 = and i32 %123, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and276)
  %tobool277.not = icmp eq i32 %and276, 0
  br i1 %tobool277.not, label %if.then278, label %do.body274.if.end279_crit_edge

do.body274.if.end279_crit_edge:                   ; preds = %do.body274
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end279

if.then278:                                       ; preds = %do.body274
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.107) #31
  br label %if.end279

if.end279:                                        ; preds = %if.then278, %do.body274.if.end279_crit_edge
  %124 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %mount_opt479, align 8
  %or281 = or i32 %125, 4
  store i32 %or281, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb284:                                         ; preds = %if.end16
  %call286 = call i32 @match_int(ptr noundef nonnull %args, ptr noundef nonnull %intarg) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call286)
  %tobool287.not = icmp eq i32 %call286, 0
  br i1 %tobool287.not, label %if.else289, label %sw.bb284.out_crit_edge

sw.bb284.out_crit_edge:                           ; preds = %sw.bb284
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.else289:                                       ; preds = %sw.bb284
  %126 = ptrtoint ptr %intarg to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %intarg, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %127)
  %cmp290 = icmp eq i32 %127, 0
  br i1 %cmp290, label %if.else289.out_crit_edge, label %if.end294

if.else289.out_crit_edge:                         ; preds = %if.else289
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end294:                                        ; preds = %if.else289
  call void @__sanitizer_cov_trace_pc() #25
  %128 = ptrtoint ptr %thread_pool_size to i32
  call void @__asan_store4_noabort(i32 %128)
  store i32 %127, ptr %thread_pool_size, align 4
  br label %cleanup

sw.bb295:                                         ; preds = %if.end16
  %call297 = call ptr @match_strdup(ptr noundef nonnull %args) #23
  %tobool298.not = icmp eq ptr %call297, null
  br i1 %tobool298.not, label %sw.bb295.out_crit_edge, label %if.then299

sw.bb295.out_crit_edge:                           ; preds = %sw.bb295
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.then299:                                       ; preds = %sw.bb295
  %call300 = call i64 @memparse(ptr noundef nonnull %call297, ptr noundef null) #23
  %129 = ptrtoint ptr %max_inline to i32
  call void @__asan_store8_noabort(i32 %129)
  store i64 %call300, ptr %max_inline, align 8
  call void @kfree(ptr noundef nonnull %call297) #23
  %130 = ptrtoint ptr %max_inline to i32
  call void @__asan_load8_noabort(i32 %130)
  %131 = load i64, ptr %max_inline, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %131)
  %tobool302.not = icmp eq i64 %131, 0
  br i1 %tobool302.not, label %if.then299.if.end313_crit_edge, label %if.then303

if.then299.if.end313_crit_edge:                   ; preds = %if.then299
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end313

if.then303:                                       ; preds = %if.then299
  call void @__sanitizer_cov_trace_pc() #25
  %132 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %sectorsize, align 4
  %conv305 = zext i32 %133 to i64
  %134 = call i64 @llvm.umin.i64(i64 %131, i64 %conv305)
  %135 = ptrtoint ptr %max_inline to i32
  call void @__asan_store8_noabort(i32 %135)
  store i64 %134, ptr %max_inline, align 8
  br label %if.end313

if.end313:                                        ; preds = %if.then303, %if.then299.if.end313_crit_edge
  %136 = ptrtoint ptr %max_inline to i32
  call void @__asan_load8_noabort(i32 %136)
  %137 = load i64, ptr %max_inline, align 8
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.108, i64 noundef %137) #31
  br label %cleanup

sw.bb317:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %138 = ptrtoint ptr %sb320 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %sb320, align 8
  %s_flags = getelementptr inbounds %struct.super_block, ptr %139, i32 0, i32 10
  %140 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %s_flags, align 4
  %or318 = or i32 %141, 65536
  store i32 %or318, ptr %s_flags, align 4
  br label %cleanup

sw.bb319:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %142 = ptrtoint ptr %sb320 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %sb320, align 8
  %s_flags321 = getelementptr inbounds %struct.super_block, ptr %143, i32 0, i32 10
  %144 = ptrtoint ptr %s_flags321 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %s_flags321, align 4
  %and322 = and i32 %145, -65537
  store i32 %and322, ptr %s_flags321, align 4
  br label %cleanup

do.body324:                                       ; preds = %if.end16
  %146 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %mount_opt479, align 8
  %and326 = and i32 %147, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and326)
  %tobool327.not = icmp eq i32 %and326, 0
  br i1 %tobool327.not, label %if.then328, label %do.body324.if.end329_crit_edge

do.body324.if.end329_crit_edge:                   ; preds = %do.body324
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end329

if.then328:                                       ; preds = %do.body324
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.109) #31
  br label %if.end329

if.end329:                                        ; preds = %if.then328, %do.body324.if.end329_crit_edge
  %148 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load i32, ptr %mount_opt479, align 8
  %or331 = or i32 %149, 64
  store i32 %or331, ptr %mount_opt479, align 8
  br label %cleanup

do.body335:                                       ; preds = %if.end16
  %150 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %mount_opt479, align 8
  %and337 = and i32 %151, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and337)
  %tobool338.not = icmp eq i32 %and337, 0
  br i1 %tobool338.not, label %do.body335.if.end340_crit_edge, label %if.then339

do.body335.if.end340_crit_edge:                   ; preds = %do.body335
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end340

if.then339:                                       ; preds = %do.body335
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.110) #31
  br label %if.end340

if.end340:                                        ; preds = %if.then339, %do.body335.if.end340_crit_edge
  %152 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %mount_opt479, align 8
  %and342 = and i32 %153, -65
  store i32 %and342, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb345:                                         ; preds = %if.end16.sw.bb345_crit_edge, %if.end16.sw.bb345_crit_edge1124
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.111) #31
  %154 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %mount_opt479, align 8
  %and348 = and i32 %155, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and348)
  %tobool349.not = icmp eq i32 %and348, 0
  br i1 %tobool349.not, label %if.then350, label %sw.bb345.if.end351_crit_edge

sw.bb345.if.end351_crit_edge:                     ; preds = %sw.bb345
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end351

if.then350:                                       ; preds = %sw.bb345
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.112) #31
  br label %if.end351

if.end351:                                        ; preds = %if.then350, %sw.bb345.if.end351_crit_edge
  %156 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %mount_opt479, align 8
  %or353 = or i32 %157, 67108864
  store i32 %or353, ptr %mount_opt479, align 8
  br label %cleanup

do.body357:                                       ; preds = %if.end16
  %158 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %mount_opt479, align 8
  %and359 = and i32 %159, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and359)
  %tobool360.not = icmp eq i32 %and359, 0
  br i1 %tobool360.not, label %if.then361, label %do.body357.if.end362_crit_edge

do.body357.if.end362_crit_edge:                   ; preds = %do.body357
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end362

if.then361:                                       ; preds = %do.body357
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.113) #31
  br label %if.end362

if.end362:                                        ; preds = %if.then361, %do.body357.if.end362_crit_edge
  %160 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %mount_opt479, align 8
  %or364 = or i32 %161, 128
  store i32 %or364, ptr %mount_opt479, align 8
  br label %cleanup

do.body368:                                       ; preds = %if.end16
  %162 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %mount_opt479, align 8
  %and370 = and i32 %163, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and370)
  %tobool371.not = icmp eq i32 %and370, 0
  br i1 %tobool371.not, label %do.body368.if.end373_crit_edge, label %if.then372

do.body368.if.end373_crit_edge:                   ; preds = %do.body368
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end373

if.then372:                                       ; preds = %do.body368
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.114) #31
  br label %if.end373

if.end373:                                        ; preds = %if.then372, %do.body368.if.end373_crit_edge
  %164 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %mount_opt479, align 8
  %and375 = and i32 %165, -129
  store i32 %and375, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb378:                                         ; preds = %if.end16
  %call380 = call i32 @match_int(ptr noundef nonnull %args, ptr noundef nonnull %intarg) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call380)
  %tobool381.not = icmp eq i32 %call380, 0
  br i1 %tobool381.not, label %if.end383, label %sw.bb378.out_crit_edge

sw.bb378.out_crit_edge:                           ; preds = %sw.bb378
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end383:                                        ; preds = %sw.bb378
  call void @__sanitizer_cov_trace_pc() #25
  %166 = ptrtoint ptr %intarg to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %intarg, align 4
  %168 = ptrtoint ptr %metadata_ratio to i32
  call void @__asan_store4_noabort(i32 %168)
  store i32 %167, ptr %metadata_ratio, align 8
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.115, i32 noundef %167) #31
  br label %cleanup

lor.lhs.false388:                                 ; preds = %if.end16
  %169 = ptrtoint ptr %args to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %args, align 4
  %call391 = call i32 @strcmp(ptr noundef %170, ptr noundef nonnull dereferenceable(5) @.str.116) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call391)
  %cmp392 = icmp eq i32 %call391, 0
  br i1 %cmp392, label %lor.lhs.false388.if.then394_crit_edge, label %if.else407

lor.lhs.false388.if.then394_crit_edge:            ; preds = %lor.lhs.false388
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then394

if.then394:                                       ; preds = %lor.lhs.false388.if.then394_crit_edge, %if.end16.if.then394_crit_edge
  %171 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load i32, ptr %mount_opt479, align 8
  %and396 = and i32 %172, -268435457
  store i32 %and396, ptr %mount_opt479, align 8
  %and399 = and i32 %172, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and399)
  %tobool400.not = icmp eq i32 %and399, 0
  br i1 %tobool400.not, label %if.then401, label %if.then394.if.end402_crit_edge

if.then394.if.end402_crit_edge:                   ; preds = %if.then394
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end402

if.then401:                                       ; preds = %if.then394
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.117) #31
  br label %if.end402

if.end402:                                        ; preds = %if.then401, %if.then394.if.end402_crit_edge
  %173 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %mount_opt479, align 8
  %or404 = or i32 %174, 1024
  store i32 %or404, ptr %mount_opt479, align 8
  br label %cleanup

if.else407:                                       ; preds = %lor.lhs.false388
  %call410 = call i32 @strcmp(ptr noundef %170, ptr noundef nonnull dereferenceable(6) @.str.118) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call410)
  %cmp411 = icmp eq i32 %call410, 0
  br i1 %cmp411, label %if.then413, label %if.else407.out_crit_edge

if.else407.out_crit_edge:                         ; preds = %if.else407
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.then413:                                       ; preds = %if.else407
  %175 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %mount_opt479, align 8
  %and415 = and i32 %176, -1025
  store i32 %and415, ptr %mount_opt479, align 8
  %and418 = and i32 %176, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and418)
  %tobool419.not = icmp eq i32 %and418, 0
  br i1 %tobool419.not, label %if.then420, label %if.then413.if.end421_crit_edge

if.then413.if.end421_crit_edge:                   ; preds = %if.then413
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end421

if.then420:                                       ; preds = %if.then413
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.119) #31
  br label %if.end421

if.end421:                                        ; preds = %if.then420, %if.then413.if.end421_crit_edge
  %177 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %mount_opt479, align 8
  %or423 = or i32 %178, 268435456
  store i32 %or423, ptr %mount_opt479, align 8
  br label %cleanup

do.body430:                                       ; preds = %if.end16
  %179 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %mount_opt479, align 8
  %and432 = and i32 %180, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and432)
  %tobool433.not = icmp eq i32 %and432, 0
  br i1 %tobool433.not, label %do.body430.if.end435_crit_edge, label %if.then434

do.body430.if.end435_crit_edge:                   ; preds = %do.body430
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end435

if.then434:                                       ; preds = %do.body430
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.120) #31
  br label %if.end435

if.end435:                                        ; preds = %if.then434, %do.body430.if.end435_crit_edge
  %181 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load i32, ptr %mount_opt479, align 8
  %and437 = and i32 %182, -1025
  store i32 %and437, ptr %mount_opt479, align 8
  %and442 = and i32 %182, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and442)
  %tobool443.not = icmp eq i32 %and442, 0
  br i1 %tobool443.not, label %if.end435.if.end445_crit_edge, label %if.then444

if.end435.if.end445_crit_edge:                    ; preds = %if.end435
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end445

if.then444:                                       ; preds = %if.end435
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.121) #31
  br label %if.end445

if.end445:                                        ; preds = %if.then444, %if.end435.if.end445_crit_edge
  %183 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load i32, ptr %mount_opt479, align 8
  %and447 = and i32 %184, -268435457
  store i32 %and447, ptr %mount_opt479, align 8
  br label %cleanup

lor.lhs.false453:                                 ; preds = %if.end16
  %185 = ptrtoint ptr %args to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %args, align 4
  %call456 = call i32 @strcmp(ptr noundef %186, ptr noundef nonnull dereferenceable(3) @.str.122) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call456)
  %cmp457 = icmp eq i32 %call456, 0
  br i1 %cmp457, label %lor.lhs.false453.if.then459_crit_edge, label %if.else472

lor.lhs.false453.if.then459_crit_edge:            ; preds = %lor.lhs.false453
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then459

if.then459:                                       ; preds = %lor.lhs.false453.if.then459_crit_edge, %if.end16.if.then459_crit_edge
  %187 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load i32, ptr %mount_opt479, align 8
  %and461 = and i32 %188, -33554433
  store i32 %and461, ptr %mount_opt479, align 8
  %and464 = and i32 %188, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and464)
  %tobool465.not = icmp eq i32 %and464, 0
  br i1 %tobool465.not, label %if.then466, label %if.then459.if.end467_crit_edge

if.then459.if.end467_crit_edge:                   ; preds = %if.then459
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end467

if.then466:                                       ; preds = %if.then459
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.123) #31
  br label %if.end467

if.end467:                                        ; preds = %if.then466, %if.then459.if.end467_crit_edge
  %189 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %mount_opt479, align 8
  %or469 = or i32 %190, 4096
  store i32 %or469, ptr %mount_opt479, align 8
  br label %cleanup

if.else472:                                       ; preds = %lor.lhs.false453
  %call475 = call i32 @strcmp(ptr noundef %186, ptr noundef nonnull dereferenceable(3) @.str.124) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call475)
  %cmp476 = icmp eq i32 %call475, 0
  br i1 %cmp476, label %if.then478, label %if.else472.out_crit_edge

if.else472.out_crit_edge:                         ; preds = %if.else472
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.then478:                                       ; preds = %if.else472
  %191 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load i32, ptr %mount_opt479, align 8
  %and480 = and i32 %192, -4097
  store i32 %and480, ptr %mount_opt479, align 8
  %and483 = and i32 %192, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and483)
  %tobool484.not = icmp eq i32 %and483, 0
  br i1 %tobool484.not, label %if.then485, label %if.then478.if.end486_crit_edge

if.then478.if.end486_crit_edge:                   ; preds = %if.then478
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end486

if.then485:                                       ; preds = %if.then478
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.125) #31
  br label %if.end486

if.end486:                                        ; preds = %if.then485, %if.then478.if.end486_crit_edge
  %193 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %mount_opt479, align 8
  %or488 = or i32 %194, 33554432
  store i32 %or488, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb494:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %195 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load i32, ptr %mount_opt479, align 8
  %or496 = or i32 %196, 4194304
  store i32 %or496, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb497:                                         ; preds = %if.end16
  %197 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load i32, ptr %mount_opt479, align 8
  %and499 = and i32 %198, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and499)
  %tobool500.not = icmp eq i32 %and499, 0
  br i1 %tobool500.not, label %sw.bb497.if.end512_crit_edge, label %if.then506

sw.bb497.if.end512_crit_edge:                     ; preds = %sw.bb497
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end512

if.then506:                                       ; preds = %sw.bb497
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.126) #31
  %199 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %mount_opt479, align 8
  %and509 = and i32 %200, -4097
  store i32 %and509, ptr %mount_opt479, align 8
  br label %if.end512

if.end512:                                        ; preds = %if.then506, %sw.bb497.if.end512_crit_edge
  %201 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load i32, ptr %mount_opt479, align 8
  %and514 = and i32 %202, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and514)
  %tobool515.not = icmp eq i32 %and514, 0
  br i1 %tobool515.not, label %if.end512.cleanup_crit_edge, label %if.then521

if.end512.cleanup_crit_edge:                      ; preds = %if.end512
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then521:                                       ; preds = %if.end512
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.127) #31
  %203 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load i32, ptr %mount_opt479, align 8
  %and524 = and i32 %204, -33554433
  store i32 %and524, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb528:                                         ; preds = %if.end16.sw.bb528_crit_edge, %if.end16.sw.bb528_crit_edge1125
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.128) #31
  br label %cleanup

do.body530:                                       ; preds = %if.end16
  %205 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load i32, ptr %mount_opt479, align 8
  %and532 = and i32 %206, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and532)
  %tobool533.not = icmp eq i32 %and532, 0
  br i1 %tobool533.not, label %if.then534, label %do.body530.if.end535_crit_edge

do.body530.if.end535_crit_edge:                   ; preds = %do.body530
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end535

if.then534:                                       ; preds = %do.body530
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.129) #31
  br label %if.end535

if.end535:                                        ; preds = %if.then534, %do.body530.if.end535_crit_edge
  %207 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %mount_opt479, align 8
  %or537 = or i32 %208, 8192
  store i32 %or537, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb540:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %209 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load i32, ptr %mount_opt479, align 8
  %or542 = or i32 %210, 16384
  store i32 %or542, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb543:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %211 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load i32, ptr %mount_opt479, align 8
  %or545 = or i32 %212, 32768
  store i32 %or545, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb546:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %213 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load i32, ptr %mount_opt479, align 8
  %and548 = and i32 %214, -32769
  store i32 %and548, ptr %mount_opt479, align 8
  br label %cleanup

do.body550:                                       ; preds = %if.end16
  %215 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load i32, ptr %mount_opt479, align 8
  %and552 = and i32 %216, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and552)
  %tobool553.not = icmp eq i32 %and552, 0
  br i1 %tobool553.not, label %if.then554, label %do.body550.if.end555_crit_edge

do.body550.if.end555_crit_edge:                   ; preds = %do.body550
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end555

if.then554:                                       ; preds = %do.body550
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.130) #31
  br label %if.end555

if.end555:                                        ; preds = %if.then554, %do.body550.if.end555_crit_edge
  %217 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load i32, ptr %mount_opt479, align 8
  %or557 = or i32 %218, 65536
  store i32 %or557, ptr %mount_opt479, align 8
  br label %cleanup

do.body561:                                       ; preds = %if.end16
  %219 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load i32, ptr %mount_opt479, align 8
  %and563 = and i32 %220, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and563)
  %tobool564.not = icmp eq i32 %and563, 0
  br i1 %tobool564.not, label %do.body561.if.end566_crit_edge, label %if.then565

do.body561.if.end566_crit_edge:                   ; preds = %do.body561
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end566

if.then565:                                       ; preds = %do.body561
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.131) #31
  br label %if.end566

if.end566:                                        ; preds = %if.then565, %do.body561.if.end566_crit_edge
  %221 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load i32, ptr %mount_opt479, align 8
  %and568 = and i32 %222, -65537
  store i32 %and568, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb571:                                         ; preds = %if.end16.sw.bb571_crit_edge, %if.end16.sw.bb571_crit_edge1126
  call void @__sanitizer_cov_trace_const_cmp4(i32 49, i32 %call17)
  %cmp572 = icmp eq i32 %call17, 49
  %cond574 = select i1 %cmp572, ptr @.str.133, ptr @.str.134
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.132, ptr noundef nonnull %cond574) #31
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.135) #31
  %223 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load i32, ptr %mount_opt479, align 8
  %or576 = or i32 %224, 131072
  store i32 %or576, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb577:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  %225 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load i32, ptr %mount_opt479, align 8
  %or579 = or i32 %226, 262144
  store i32 %or579, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb580:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.136) #31
  %227 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load i32, ptr %mount_opt479, align 8
  %or584 = or i32 %228, 1572864
  store i32 %or584, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb585:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.137) #31
  %229 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load i32, ptr %mount_opt479, align 8
  %or587 = or i32 %230, 524288
  store i32 %or587, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb588:                                         ; preds = %if.end16
  %call590 = call i32 @match_int(ptr noundef nonnull %args, ptr noundef nonnull %intarg) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call590)
  %tobool591.not = icmp eq i32 %call590, 0
  br i1 %tobool591.not, label %if.end593, label %sw.bb588.out_crit_edge

sw.bb588.out_crit_edge:                           ; preds = %sw.bb588
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end593:                                        ; preds = %sw.bb588
  call void @__sanitizer_cov_trace_pc() #25
  %231 = ptrtoint ptr %intarg to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load i32, ptr %intarg, align 4
  %233 = ptrtoint ptr %check_integrity_print_mask to i32
  call void @__asan_store4_noabort(i32 %233)
  store i32 %232, ptr %check_integrity_print_mask, align 8
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.138, i32 noundef %232) #31
  br label %cleanup

sw.bb595:                                         ; preds = %if.end16
  %234 = ptrtoint ptr %args to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load ptr, ptr %args, align 4
  %call598 = call i32 @strcmp(ptr noundef %235, ptr noundef nonnull dereferenceable(6) @.str.139) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call598)
  %cmp599 = icmp eq i32 %call598, 0
  br i1 %cmp599, label %if.then601, label %if.else604

if.then601:                                       ; preds = %sw.bb595
  call void @__sanitizer_cov_trace_pc() #25
  %236 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load i32, ptr %mount_opt479, align 8
  %or603 = or i32 %237, 2097152
  store i32 %or603, ptr %mount_opt479, align 8
  br label %cleanup

if.else604:                                       ; preds = %sw.bb595
  %call607 = call i32 @strcmp(ptr noundef %235, ptr noundef nonnull dereferenceable(4) @.str.140) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call607)
  %cmp608 = icmp eq i32 %call607, 0
  br i1 %cmp608, label %if.then610, label %if.else604.out_crit_edge

if.else604.out_crit_edge:                         ; preds = %if.else604
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.then610:                                       ; preds = %if.else604
  call void @__sanitizer_cov_trace_pc() #25
  %238 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load i32, ptr %mount_opt479, align 8
  %and612 = and i32 %239, -2097153
  store i32 %and612, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb616:                                         ; preds = %if.end16
  %240 = ptrtoint ptr %intarg to i32
  call void @__asan_store4_noabort(i32 %240)
  store i32 0, ptr %intarg, align 4
  %call618 = call i32 @match_int(ptr noundef nonnull %args, ptr noundef nonnull %intarg) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call618)
  %tobool619.not = icmp eq i32 %call618, 0
  br i1 %tobool619.not, label %if.end621, label %sw.bb616.out_crit_edge

sw.bb616.out_crit_edge:                           ; preds = %sw.bb616
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end621:                                        ; preds = %sw.bb616
  %241 = ptrtoint ptr %intarg to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load i32, ptr %intarg, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %242)
  %cmp622 = icmp eq i32 %242, 0
  br i1 %cmp622, label %if.then624, label %if.else625

if.then624:                                       ; preds = %if.end621
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.141, i32 noundef 30) #31
  %243 = ptrtoint ptr %intarg to i32
  call void @__asan_store4_noabort(i32 %243)
  store i32 30, ptr %intarg, align 4
  br label %if.end630

if.else625:                                       ; preds = %if.end621
  call void @__sanitizer_cov_trace_const_cmp4(i32 300, i32 %242)
  %cmp626 = icmp sgt i32 %242, 300
  br i1 %cmp626, label %if.then628, label %if.else625.if.end630_crit_edge

if.else625.if.end630_crit_edge:                   ; preds = %if.else625
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end630

if.then628:                                       ; preds = %if.else625
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.142, i32 noundef %242) #31
  br label %if.end630

if.end630:                                        ; preds = %if.then628, %if.else625.if.end630_crit_edge, %if.then624
  %244 = ptrtoint ptr %intarg to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load i32, ptr %intarg, align 4
  %246 = ptrtoint ptr %commit_interval to i32
  call void @__asan_store4_noabort(i32 %246)
  store i32 %245, ptr %commit_interval, align 8
  br label %cleanup

sw.bb631:                                         ; preds = %if.end16
  %247 = ptrtoint ptr %args to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load ptr, ptr %args, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %opts.i) #23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %args.i) #23
  %249 = call ptr @memset(ptr %args.i, i32 255, i32 24)
  %call.i = call noalias ptr @kstrdup(ptr noundef %248, i32 noundef 3264) #23
  %250 = ptrtoint ptr %opts.i to i32
  call void @__asan_store4_noabort(i32 %250)
  store ptr %call.i, ptr %opts.i, align 4
  %tobool.not.i1018 = icmp eq ptr %call.i, null
  br i1 %tobool.not.i1018, label %parse_rescue_options.exit.thread, label %while.cond.preheader.i

parse_rescue_options.exit.thread:                 ; preds = %sw.bb631
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %opts.i) #23
  br label %out

while.cond.preheader.i:                           ; preds = %sw.bb631
  %call198.i = call ptr @strsep(ptr noundef nonnull %opts.i, ptr noundef nonnull @.str.568) #23
  %cmp.not99.i = icmp eq ptr %call198.i, null
  br i1 %cmp.not99.i, label %while.cond.preheader.i.parse_rescue_options.exit.thread1069_crit_edge, label %while.cond.preheader.i.while.body.i_crit_edge

while.cond.preheader.i.while.body.i_crit_edge:    ; preds = %while.cond.preheader.i
  br label %while.body.i

while.cond.preheader.i.parse_rescue_options.exit.thread1069_crit_edge: ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %parse_rescue_options.exit.thread1069

while.body.i:                                     ; preds = %cleanup.i.while.body.i_crit_edge, %while.cond.preheader.i.while.body.i_crit_edge
  %call1100.i = phi ptr [ %call1.i, %cleanup.i.while.body.i_crit_edge ], [ %call198.i, %while.cond.preheader.i.while.body.i_crit_edge ]
  %251 = ptrtoint ptr %call1100.i to i32
  call void @__asan_load1_noabort(i32 %251)
  %252 = load i8, ptr %call1100.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %252)
  %tobool2.not.i = icmp eq i8 %252, 0
  br i1 %tobool2.not.i, label %while.body.i.cleanup.i_crit_edge, label %if.end4.i

while.body.i.cleanup.i_crit_edge:                 ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.i

if.end4.i:                                        ; preds = %while.body.i
  %call5.i = call i32 @match_token(ptr noundef nonnull %call1100.i, ptr noundef nonnull @rescue_tokens, ptr noundef nonnull %args.i) #23
  %253 = zext i32 %call5.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %253, ptr @__sancov_gen_cov_switch_values.650)
  switch i32 %call5.i, label %if.end4.i.cleanup.i_crit_edge [
    i32 44, label %if.end4.i.cleanup.sink.split.sink.split.i_crit_edge
    i32 45, label %do.body.i
    i32 46, label %do.body14.i
    i32 47, label %do.body25.i
    i32 48, label %sw.bb35.i
    i32 61, label %parse_rescue_options.exit
  ]

if.end4.i.cleanup.sink.split.sink.split.i_crit_edge: ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split.sink.split.i

if.end4.i.cleanup.i_crit_edge:                    ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.i

do.body.i:                                        ; preds = %if.end4.i
  %254 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load i32, ptr %mount_opt479, align 8
  %and.i1019 = and i32 %255, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i1019)
  %tobool8.not.i = icmp eq i32 %and.i1019, 0
  br i1 %tobool8.not.i, label %do.body.i.cleanup.sink.split.sink.split.i_crit_edge, label %do.body.i.cleanup.sink.split.i_crit_edge

do.body.i.cleanup.sink.split.i_crit_edge:         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split.i

do.body.i.cleanup.sink.split.sink.split.i_crit_edge: ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split.sink.split.i

do.body14.i:                                      ; preds = %if.end4.i
  %256 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load i32, ptr %mount_opt479, align 8
  %and16.i = and i32 %257, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and16.i)
  %tobool17.not.i = icmp eq i32 %and16.i, 0
  br i1 %tobool17.not.i, label %do.body14.i.cleanup.sink.split.sink.split.i_crit_edge, label %do.body14.i.cleanup.sink.split.i_crit_edge

do.body14.i.cleanup.sink.split.i_crit_edge:       ; preds = %do.body14.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split.i

do.body14.i.cleanup.sink.split.sink.split.i_crit_edge: ; preds = %do.body14.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split.sink.split.i

do.body25.i:                                      ; preds = %if.end4.i
  %258 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load i32, ptr %mount_opt479, align 8
  %and27.i = and i32 %259, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27.i)
  %tobool28.not.i = icmp eq i32 %and27.i, 0
  br i1 %tobool28.not.i, label %do.body25.i.cleanup.sink.split.sink.split.i_crit_edge, label %do.body25.i.cleanup.sink.split.i_crit_edge

do.body25.i.cleanup.sink.split.i_crit_edge:       ; preds = %do.body25.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split.i

do.body25.i.cleanup.sink.split.sink.split.i_crit_edge: ; preds = %do.body25.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split.sink.split.i

sw.bb35.i:                                        ; preds = %if.end4.i
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.571) #30
  %260 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load i32, ptr %mount_opt479, align 8
  %and38.i = and i32 %261, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and38.i)
  %tobool39.not.i = icmp eq i32 %and38.i, 0
  br i1 %tobool39.not.i, label %if.then40.i, label %sw.bb35.i.if.end41.i_crit_edge

sw.bb35.i.if.end41.i_crit_edge:                   ; preds = %sw.bb35.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end41.i

if.then40.i:                                      ; preds = %sw.bb35.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.570) #30
  br label %if.end41.i

if.end41.i:                                       ; preds = %if.then40.i, %sw.bb35.i.if.end41.i_crit_edge
  %262 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load i32, ptr %mount_opt479, align 8
  %or43.i = or i32 %263, 1073741824
  store i32 %or43.i, ptr %mount_opt479, align 8
  %and48.i = and i32 %263, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and48.i)
  %tobool49.not.i = icmp eq i32 %and48.i, 0
  br i1 %tobool49.not.i, label %if.then50.i, label %if.end41.i.if.end51.i_crit_edge

if.end41.i.if.end51.i_crit_edge:                  ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end51.i

if.then50.i:                                      ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.569) #30
  br label %if.end51.i

if.end51.i:                                       ; preds = %if.then50.i, %if.end41.i.if.end51.i_crit_edge
  %264 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load i32, ptr %mount_opt479, align 8
  %or53.i = or i32 %265, 536870912
  store i32 %or53.i, ptr %mount_opt479, align 8
  %and58.i = and i32 %265, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and58.i)
  %tobool59.not.i = icmp eq i32 %and58.i, 0
  br i1 %tobool59.not.i, label %if.end51.i.cleanup.sink.split.sink.split.i_crit_edge, label %if.end51.i.cleanup.sink.split.i_crit_edge

if.end51.i.cleanup.sink.split.i_crit_edge:        ; preds = %if.end51.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split.i

if.end51.i.cleanup.sink.split.sink.split.i_crit_edge: ; preds = %if.end51.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split.sink.split.i

cleanup.sink.split.sink.split.i:                  ; preds = %if.end51.i.cleanup.sink.split.sink.split.i_crit_edge, %do.body25.i.cleanup.sink.split.sink.split.i_crit_edge, %do.body14.i.cleanup.sink.split.sink.split.i_crit_edge, %do.body.i.cleanup.sink.split.sink.split.i_crit_edge, %if.end4.i.cleanup.sink.split.sink.split.i_crit_edge
  %.str.112.sink.i = phi ptr [ @.str.135, %if.end4.i.cleanup.sink.split.sink.split.i_crit_edge ], [ @.str.112, %do.body.i.cleanup.sink.split.sink.split.i_crit_edge ], [ @.str.569, %do.body14.i.cleanup.sink.split.sink.split.i_crit_edge ], [ @.str.570, %do.body25.i.cleanup.sink.split.sink.split.i_crit_edge ], [ @.str.112, %if.end51.i.cleanup.sink.split.sink.split.i_crit_edge ]
  %.sink103.ph.i = phi i32 [ 131072, %if.end4.i.cleanup.sink.split.sink.split.i_crit_edge ], [ 67108864, %do.body.i.cleanup.sink.split.sink.split.i_crit_edge ], [ 536870912, %do.body14.i.cleanup.sink.split.sink.split.i_crit_edge ], [ 1073741824, %do.body25.i.cleanup.sink.split.sink.split.i_crit_edge ], [ 67108864, %if.end51.i.cleanup.sink.split.sink.split.i_crit_edge ]
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull %.str.112.sink.i) #30
  br label %cleanup.sink.split.i

cleanup.sink.split.i:                             ; preds = %cleanup.sink.split.sink.split.i, %if.end51.i.cleanup.sink.split.i_crit_edge, %do.body25.i.cleanup.sink.split.i_crit_edge, %do.body14.i.cleanup.sink.split.i_crit_edge, %do.body.i.cleanup.sink.split.i_crit_edge
  %.sink103.i = phi i32 [ 67108864, %do.body.i.cleanup.sink.split.i_crit_edge ], [ 536870912, %do.body14.i.cleanup.sink.split.i_crit_edge ], [ 1073741824, %do.body25.i.cleanup.sink.split.i_crit_edge ], [ 67108864, %if.end51.i.cleanup.sink.split.i_crit_edge ], [ %.sink103.ph.i, %cleanup.sink.split.sink.split.i ]
  %266 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load i32, ptr %mount_opt479, align 8
  %or.i1020 = or i32 %267, %.sink103.i
  store i32 %or.i1020, ptr %mount_opt479, align 8
  br label %cleanup.i

cleanup.i:                                        ; preds = %cleanup.sink.split.i, %if.end4.i.cleanup.i_crit_edge, %while.body.i.cleanup.i_crit_edge
  %call1.i = call ptr @strsep(ptr noundef nonnull %opts.i, ptr noundef nonnull @.str.568) #23
  %cmp.not.i = icmp eq ptr %call1.i, null
  br i1 %cmp.not.i, label %cleanup.i.parse_rescue_options.exit.thread1069_crit_edge, label %cleanup.i.while.body.i_crit_edge

cleanup.i.while.body.i_crit_edge:                 ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body.i

cleanup.i.parse_rescue_options.exit.thread1069_crit_edge: ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %parse_rescue_options.exit.thread1069

parse_rescue_options.exit.thread1069:             ; preds = %cleanup.i.parse_rescue_options.exit.thread1069_crit_edge, %while.cond.preheader.i.parse_rescue_options.exit.thread1069_crit_edge
  call void @kfree(ptr noundef nonnull %call.i) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %opts.i) #23
  br label %cleanup

parse_rescue_options.exit:                        ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.572, ptr noundef nonnull %call1100.i) #30
  call void @kfree(ptr noundef nonnull %call.i) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %opts.i) #23
  br label %out

sw.bb639:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.143) #31
  %268 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load i32, ptr %mount_opt479, align 8
  %or643 = or i32 %269, 25165824
  store i32 %or643, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb644:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.144) #31
  %270 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load i32, ptr %mount_opt479, align 8
  %or646 = or i32 %271, 16777216
  store i32 %or646, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb647:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.145) #31
  %272 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load i32, ptr %mount_opt479, align 8
  %or649 = or i32 %273, 8388608
  store i32 %or649, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb650:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.146) #31
  %274 = ptrtoint ptr %mount_opt479 to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load i32, ptr %mount_opt479, align 8
  %or652 = or i32 %275, 134217728
  store i32 %or652, ptr %mount_opt479, align 8
  br label %cleanup

sw.bb653:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.147, ptr noundef nonnull %call131091) #31
  br label %out

cleanup:                                          ; preds = %sw.bb650, %sw.bb647, %sw.bb644, %sw.bb639, %parse_rescue_options.exit.thread1069, %if.end630, %if.then610, %if.then601, %if.end593, %sw.bb585, %sw.bb580, %sw.bb577, %sw.bb571, %if.end566, %if.end555, %sw.bb546, %sw.bb543, %sw.bb540, %if.end535, %sw.bb528, %if.then521, %if.end512.cleanup_crit_edge, %sw.bb494, %if.end486, %if.end467, %if.end445, %if.end421, %if.end402, %if.end383, %if.end373, %if.end362, %if.end351, %if.end340, %if.end329, %sw.bb319, %sw.bb317, %if.end313, %if.end294, %if.end279, %if.end268, %if.end257, %if.end231, %if.end208, %if.then195, %lor.lhs.false191.cleanup_crit_edge, %if.then178, %if.end73, %if.end58, %if.end39, %if.end25, %sw.bb, %if.end16.cleanup_crit_edge, %while.body.cleanup_crit_edge
  %no_compress.3 = phi i32 [ %no_compress.01088, %while.body.cleanup_crit_edge ], [ %no_compress.01088, %if.end16.cleanup_crit_edge ], [ %no_compress.01088, %sw.bb639 ], [ %no_compress.01088, %if.end630 ], [ %no_compress.01088, %if.then601 ], [ %no_compress.01088, %if.then610 ], [ %no_compress.01088, %if.end593 ], [ %no_compress.01088, %sw.bb585 ], [ %no_compress.01088, %sw.bb580 ], [ %no_compress.01088, %sw.bb577 ], [ %no_compress.01088, %sw.bb571 ], [ %no_compress.01088, %if.end566 ], [ %no_compress.01088, %if.end555 ], [ %no_compress.01088, %sw.bb546 ], [ %no_compress.01088, %sw.bb543 ], [ %no_compress.01088, %sw.bb540 ], [ %no_compress.01088, %if.end535 ], [ %no_compress.01088, %sw.bb528 ], [ %no_compress.01088, %if.then521 ], [ %no_compress.01088, %if.end512.cleanup_crit_edge ], [ %no_compress.01088, %sw.bb494 ], [ %no_compress.01088, %if.end467 ], [ %no_compress.01088, %if.end486 ], [ %no_compress.01088, %if.end445 ], [ %no_compress.01088, %if.end402 ], [ %no_compress.01088, %if.end421 ], [ %no_compress.01088, %if.end383 ], [ %no_compress.01088, %if.end373 ], [ %no_compress.01088, %if.end362 ], [ %no_compress.01088, %if.end351 ], [ %no_compress.01088, %if.end340 ], [ %no_compress.01088, %if.end329 ], [ %no_compress.01088, %sw.bb319 ], [ %no_compress.01088, %sw.bb317 ], [ %no_compress.01088, %if.end313 ], [ %no_compress.01088, %if.end294 ], [ %no_compress.01088, %if.end279 ], [ %no_compress.01088, %if.end268 ], [ %no_compress.01088, %if.end257 ], [ %no_compress.01088, %if.end231 ], [ %no_compress.01088, %if.end208 ], [ %no_compress.01088, %if.end73 ], [ %no_compress.01088, %if.end58 ], [ %no_compress.01088, %if.end39 ], [ %no_compress.01088, %if.end25 ], [ %no_compress.01088, %sw.bb644 ], [ %no_compress.01088, %sw.bb647 ], [ %no_compress.01088, %sw.bb650 ], [ %no_compress.01088, %sw.bb ], [ %no_compress.110471058, %lor.lhs.false191.cleanup_crit_edge ], [ %no_compress.110471058, %if.then195 ], [ 1, %if.then178 ], [ %no_compress.01088, %parse_rescue_options.exit.thread1069 ]
  %call13 = call ptr @strsep(ptr noundef nonnull %options.addr, ptr noundef nonnull @.str.84) #23
  %cmp.not = icmp eq ptr %call13, null
  br i1 %cmp.not, label %cleanup.check_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body

cleanup.check_crit_edge:                          ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #25
  br label %check

check:                                            ; preds = %cleanup.check_crit_edge, %while.cond.preheader.check_crit_edge, %if.end9.check_crit_edge
  %and654 = and i32 %new_flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and654)
  %tobool655.not = icmp eq i32 %and654, 0
  br i1 %tobool655.not, label %if.end657, label %check.out_crit_edge

check.out_crit_edge:                              ; preds = %check
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end657:                                        ; preds = %check
  %mount_opt.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %info, i32 0, i32 31
  %276 = ptrtoint ptr %mount_opt.i to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load i32, ptr %mount_opt.i, align 8
  %and.i1021 = and i32 %277, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i1021)
  %tobool.not.i1022 = icmp eq i32 %and.i1021, 0
  br i1 %tobool.not.i1022, label %lor.lhs.false660, label %check_ro_option.exit.thread

check_ro_option.exit.thread:                      ; preds = %if.end657
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.576, ptr noundef nonnull @.str.148) #30
  br label %out

lor.lhs.false660:                                 ; preds = %if.end657
  %278 = ptrtoint ptr %mount_opt.i to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load i32, ptr %mount_opt.i, align 8
  %and.i1025 = and i32 %279, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i1025)
  %tobool.not.i1026 = icmp eq i32 %and.i1025, 0
  br i1 %tobool.not.i1026, label %lor.lhs.false663, label %check_ro_option.exit1028.thread

check_ro_option.exit1028.thread:                  ; preds = %lor.lhs.false660
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.576, ptr noundef nonnull @.str.149) #30
  br label %out

lor.lhs.false663:                                 ; preds = %lor.lhs.false660
  %280 = ptrtoint ptr %mount_opt.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load i32, ptr %mount_opt.i, align 8
  %and.i1030 = and i32 %281, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i1030)
  %tobool.not.i1031 = icmp eq i32 %and.i1030, 0
  br i1 %tobool.not.i1031, label %lor.lhs.false663.out_crit_edge, label %check_ro_option.exit1033.thread

lor.lhs.false663.out_crit_edge:                   ; preds = %lor.lhs.false663
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

check_ro_option.exit1033.thread:                  ; preds = %lor.lhs.false663
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.576, ptr noundef nonnull @.str.150) #30
  br label %out

out:                                              ; preds = %check_ro_option.exit1033.thread, %lor.lhs.false663.out_crit_edge, %check_ro_option.exit1028.thread, %check_ro_option.exit.thread, %check.out_crit_edge, %sw.bb653, %parse_rescue_options.exit, %parse_rescue_options.exit.thread, %sw.bb616.out_crit_edge, %if.else604.out_crit_edge, %sw.bb588.out_crit_edge, %if.else472.out_crit_edge, %if.else407.out_crit_edge, %sw.bb378.out_crit_edge, %sw.bb295.out_crit_edge, %if.else289.out_crit_edge, %sw.bb284.out_crit_edge, %if.else149.out_crit_edge
  %ret.4 = phi i32 [ 0, %check.out_crit_edge ], [ 0, %lor.lhs.false663.out_crit_edge ], [ -22, %check_ro_option.exit1033.thread ], [ -22, %check_ro_option.exit1028.thread ], [ -22, %check_ro_option.exit.thread ], [ -12, %parse_rescue_options.exit.thread ], [ -22, %parse_rescue_options.exit ], [ -22, %sw.bb653 ], [ -22, %if.else149.out_crit_edge ], [ %call286, %sw.bb284.out_crit_edge ], [ -22, %if.else289.out_crit_edge ], [ -12, %sw.bb295.out_crit_edge ], [ %call380, %sw.bb378.out_crit_edge ], [ -22, %if.else407.out_crit_edge ], [ -22, %if.else472.out_crit_edge ], [ %call590, %sw.bb588.out_crit_edge ], [ -22, %if.else604.out_crit_edge ], [ %call618, %sw.bb616.out_crit_edge ]
  %282 = ptrtoint ptr %super_copy.i to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load ptr, ptr %super_copy.i, align 8
  %compat_ro_flags.i.i1035 = getelementptr inbounds %struct.btrfs_super_block, ptr %283, i32 0, i32 21
  %284 = ptrtoint ptr %compat_ro_flags.i.i1035 to i32
  call void @__asan_loadN_noabort(i32 %284, i32 8)
  %285 = load i64, ptr %compat_ro_flags.i.i1035, align 1
  %286 = and i64 %285, 72057594037927936
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %286)
  %tobool669.not = icmp eq i64 %286, 0
  br i1 %tobool669.not, label %out.if.end679_crit_edge, label %land.lhs.true670

out.if.end679_crit_edge:                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end679

land.lhs.true670:                                 ; preds = %out
  %mount_opt671 = getelementptr inbounds %struct.btrfs_fs_info, ptr %info, i32 0, i32 31
  %287 = ptrtoint ptr %mount_opt671 to i32
  call void @__asan_load4_noabort(i32 %287)
  %288 = load i32, ptr %mount_opt671, align 8
  %289 = and i32 %288, 33562624
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %289)
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %land.lhs.true670.cleanup698.sink.split_crit_edge, label %land.lhs.true670.if.end679_crit_edge

land.lhs.true670.if.end679_crit_edge:             ; preds = %land.lhs.true670
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end679

land.lhs.true670.cleanup698.sink.split_crit_edge: ; preds = %land.lhs.true670
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup698.sink.split

if.end679:                                        ; preds = %land.lhs.true670.if.end679_crit_edge, %out.if.end679_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.4)
  %tobool680.not = icmp eq i32 %ret.4, 0
  br i1 %tobool680.not, label %if.end683, label %if.end679.cleanup698_crit_edge

if.end679.cleanup698_crit_edge:                   ; preds = %if.end679
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup698

if.end683:                                        ; preds = %if.end679
  %call682 = call i32 @btrfs_check_mountopts_zoned(ptr noundef %info) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call682)
  %tobool684.not = icmp eq i32 %call682, 0
  br i1 %tobool684.not, label %land.lhs.true685, label %if.end683.cleanup698_crit_edge

if.end683.cleanup698_crit_edge:                   ; preds = %if.end683
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup698

land.lhs.true685:                                 ; preds = %if.end683
  %mount_opt686 = getelementptr inbounds %struct.btrfs_fs_info, ptr %info, i32 0, i32 31
  %291 = ptrtoint ptr %mount_opt686 to i32
  call void @__asan_load4_noabort(i32 %291)
  %292 = load i32, ptr %mount_opt686, align 8
  %and687 = and i32 %292, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and687)
  %tobool688.not = icmp eq i32 %and687, 0
  br i1 %tobool688.not, label %land.lhs.true685.land.lhs.true692_crit_edge, label %if.then689

land.lhs.true685.land.lhs.true692_crit_edge:      ; preds = %land.lhs.true685
  call void @__sanitizer_cov_trace_pc() #25
  br label %land.lhs.true692

if.then689:                                       ; preds = %land.lhs.true685
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull @.str.152) #31
  br label %land.lhs.true692

land.lhs.true692:                                 ; preds = %if.then689, %land.lhs.true685.land.lhs.true692_crit_edge
  %293 = ptrtoint ptr %mount_opt686 to i32
  call void @__asan_load4_noabort(i32 %293)
  %294 = load i32, ptr %mount_opt686, align 8
  %and694 = and i32 %294, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and694)
  %tobool695.not = icmp eq i32 %and694, 0
  br i1 %tobool695.not, label %land.lhs.true692.cleanup698_crit_edge, label %land.lhs.true692.cleanup698.sink.split_crit_edge

land.lhs.true692.cleanup698.sink.split_crit_edge: ; preds = %land.lhs.true692
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup698.sink.split

land.lhs.true692.cleanup698_crit_edge:            ; preds = %land.lhs.true692
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup698

cleanup698.sink.split:                            ; preds = %land.lhs.true692.cleanup698.sink.split_crit_edge, %land.lhs.true670.cleanup698.sink.split_crit_edge
  %.str.151.sink = phi ptr [ @.str.151, %land.lhs.true670.cleanup698.sink.split_crit_edge ], [ @.str.153, %land.lhs.true692.cleanup698.sink.split_crit_edge ]
  %retval.0.ph = phi i32 [ -22, %land.lhs.true670.cleanup698.sink.split_crit_edge ], [ 0, %land.lhs.true692.cleanup698.sink.split_crit_edge ]
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %info, ptr noundef nonnull %.str.151.sink) #31
  br label %cleanup698

cleanup698:                                       ; preds = %cleanup698.sink.split, %land.lhs.true692.cleanup698_crit_edge, %if.end683.cleanup698_crit_edge, %if.end679.cleanup698_crit_edge
  %retval.0 = phi i32 [ %call682, %if.end683.cleanup698_crit_edge ], [ 0, %land.lhs.true692.cleanup698_crit_edge ], [ %ret.4, %if.end679.cleanup698_crit_edge ], [ %retval.0.ph, %cleanup698.sink.split ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %intarg) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args) #23
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @btrfs_free_space_cache_v1_active(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strsep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @match_token(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i32 noundef) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_compress_str2level(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @match_int(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @match_strdup(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @memparse(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_check_mountopts_zoned(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @btrfs_get_subvol_name_from_objectid(ptr noundef %fs_info, i64 noundef %subvol_objectid) local_unnamed_addr #0 align 64 {
entry:
  %key = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %tree_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 2
  %0 = ptrtoint ptr %tree_root to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tree_root, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #23
  %2 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %3 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %4 = call ptr @memset(ptr %key, i32 255, i32 17)
  %call = tail call ptr @btrfs_alloc_path() #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.err_crit_edge, label %if.end

entry.err_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %err

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12) to i32))
  %5 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %5, i32 noundef 3264, i32 noundef 4096) #33
  %tobool2.not = icmp eq ptr %call7.i, null
  br i1 %tobool2.not, label %if.end.err_crit_edge, label %if.end4

if.end.err_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %err

if.end4:                                          ; preds = %if.end
  %add.ptr = getelementptr i8, ptr %call7.i, i32 4096
  %add.ptr5 = getelementptr i8, ptr %call7.i, i32 4095
  %6 = ptrtoint ptr %add.ptr5 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 0, ptr %add.ptr5, align 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 5, i64 %subvol_objectid)
  %cmp.not170 = icmp eq i64 %subvol_objectid, 5
  br i1 %cmp.not170, label %while.end79.thread, label %while.body.lr.ph

while.end79.thread:                               ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #25
  call void @btrfs_free_path(ptr noundef nonnull %call) #23
  br label %if.then84

while.body.lr.ph:                                 ; preds = %if.end4
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %call, i32 0, i32 1
  br label %while.body

while.body:                                       ; preds = %while.end.while.body_crit_edge, %while.body.lr.ph
  %ptr.0172 = phi ptr [ %add.ptr5, %while.body.lr.ph ], [ %ptr.1.lcssa, %while.end.while.body_crit_edge ]
  %subvol_objectid.addr.0171 = phi i64 [ %subvol_objectid, %while.body.lr.ph ], [ %11, %while.end.while.body_crit_edge ]
  %7 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %7)
  store i64 %subvol_objectid.addr.0171, ptr %key, align 8
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 -112, ptr %2, align 8
  %9 = ptrtoint ptr %3 to i32
  call void @__asan_storeN_noabort(i32 %9, i32 8)
  store i64 -1, ptr %3, align 1
  %call6 = call i32 @btrfs_search_backwards(ptr noundef %1, ptr noundef nonnull %key, ptr noundef nonnull %call) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %cmp7 = icmp slt i32 %call6, 0
  br i1 %cmp7, label %while.body.err_crit_edge, label %if.else

while.body.err_crit_edge:                         ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %err

if.else:                                          ; preds = %while.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %cmp9.not = icmp eq i32 %call6, 0
  br i1 %cmp9.not, label %if.end12, label %if.else.err_crit_edge

if.else.err_crit_edge:                            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %err

if.end12:                                         ; preds = %if.else
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_loadN_noabort(i32 %10, i32 8)
  %11 = load i64, ptr %3, align 1
  %12 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %call, align 4
  %14 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %slots, align 4
  %mul.i.i.i = mul i32 %15, 25
  %add.i.i.i = add i32 %mul.i.i.i, 101
  %16 = inttoptr i32 %add.i.i.i to ptr
  %call.i.i = call i32 @btrfs_get_32(ptr noundef %13, ptr noundef %16, i32 noundef 17) #23
  %add = add i32 %call.i.i, 101
  %17 = inttoptr i32 %add to ptr
  %18 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %call, align 4
  %call.i = call zeroext i16 @btrfs_get_16(ptr noundef %19, ptr noundef %17, i32 noundef 16) #23
  %conv = zext i16 %call.i to i32
  %idx.neg = xor i32 %conv, -1
  %add.ptr21 = getelementptr i8, ptr %ptr.0172, i32 %idx.neg
  %cmp22 = icmp ult ptr %add.ptr21, %call7.i
  br i1 %cmp22, label %if.end12.err_crit_edge, label %if.end25

if.end12.err_crit_edge:                           ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #25
  br label %err

if.end25:                                         ; preds = %if.end12
  %20 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %call, align 4
  %add.ptr28 = getelementptr i8, ptr %add.ptr21, i32 1
  %add.ptr29 = getelementptr %struct.btrfs_root_ref, ptr %17, i32 1
  %22 = ptrtoint ptr %add.ptr29 to i32
  call void @read_extent_buffer(ptr noundef %21, ptr noundef %add.ptr28, i32 noundef %22, i32 noundef %conv) #23
  %23 = ptrtoint ptr %add.ptr21 to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 47, ptr %add.ptr21, align 1
  %24 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %call, align 4
  %call.i155 = call i64 @btrfs_get_64(ptr noundef %25, ptr noundef %17, i32 noundef 0) #23
  call void @btrfs_release_path(ptr noundef nonnull %call) #23
  %call34 = call ptr @btrfs_get_fs_root(ptr noundef %fs_info, i64 noundef %11, i1 noundef zeroext true) #23
  %cmp.i = icmp ugt ptr %call34, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then36, label %while.cond39.preheader

while.cond39.preheader:                           ; preds = %if.end25
  call void @__sanitizer_cov_trace_const_cmp8(i64 256, i64 %call.i155)
  %cmp40.not167 = icmp eq i64 %call.i155, 256
  br i1 %cmp40.not167, label %while.cond39.preheader.while.end_crit_edge, label %while.cond39.preheader.while.body42_crit_edge

while.cond39.preheader.while.body42_crit_edge:    ; preds = %while.cond39.preheader
  br label %while.body42

while.cond39.preheader.while.end_crit_edge:       ; preds = %while.cond39.preheader
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

if.then36:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #25
  %26 = ptrtoint ptr %call34 to i32
  br label %err

while.body42:                                     ; preds = %if.end73.while.body42_crit_edge, %while.cond39.preheader.while.body42_crit_edge
  %dirid.0169 = phi i64 [ %31, %if.end73.while.body42_crit_edge ], [ %call.i155, %while.cond39.preheader.while.body42_crit_edge ]
  %ptr.1168 = phi ptr [ %add.ptr69, %if.end73.while.body42_crit_edge ], [ %add.ptr21, %while.cond39.preheader.while.body42_crit_edge ]
  %27 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %dirid.0169, ptr %key, align 8
  %28 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 12, ptr %2, align 8
  %29 = ptrtoint ptr %3 to i32
  call void @__asan_storeN_noabort(i32 %29, i32 8)
  store i64 -1, ptr %3, align 1
  %call46 = call i32 @btrfs_search_backwards(ptr noundef %call34, ptr noundef nonnull %key, ptr noundef nonnull %call) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call46)
  %cmp47 = icmp slt i32 %call46, 0
  br i1 %cmp47, label %while.body42.err_crit_edge, label %if.else50

while.body42.err_crit_edge:                       ; preds = %while.body42
  call void @__sanitizer_cov_trace_pc() #25
  br label %err

if.else50:                                        ; preds = %while.body42
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call46)
  %cmp51.not = icmp eq i32 %call46, 0
  br i1 %cmp51.not, label %if.end55, label %if.else50.err_crit_edge

if.else50.err_crit_edge:                          ; preds = %if.else50
  call void @__sanitizer_cov_trace_pc() #25
  br label %err

if.end55:                                         ; preds = %if.else50
  %30 = ptrtoint ptr %3 to i32
  call void @__asan_loadN_noabort(i32 %30, i32 8)
  %31 = load i64, ptr %3, align 1
  %32 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %call, align 4
  %34 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %slots, align 4
  %mul.i.i.i156 = mul i32 %35, 25
  %add.i.i.i157 = add i32 %mul.i.i.i156, 101
  %36 = inttoptr i32 %add.i.i.i157 to ptr
  %call.i.i158 = call i32 @btrfs_get_32(ptr noundef %33, ptr noundef %36, i32 noundef 17) #23
  %add62 = add i32 %call.i.i158, 101
  %37 = inttoptr i32 %add62 to ptr
  %38 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %call, align 4
  %call.i159 = call zeroext i16 @btrfs_get_16(ptr noundef %39, ptr noundef %37, i32 noundef 8) #23
  %conv66 = zext i16 %call.i159 to i32
  %idx.neg68 = xor i32 %conv66, -1
  %add.ptr69 = getelementptr i8, ptr %ptr.1168, i32 %idx.neg68
  %cmp70 = icmp ult ptr %add.ptr69, %call7.i
  br i1 %cmp70, label %if.end55.err_crit_edge, label %if.end73

if.end55.err_crit_edge:                           ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #25
  br label %err

if.end73:                                         ; preds = %if.end55
  %40 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %call, align 4
  %add.ptr76 = getelementptr i8, ptr %add.ptr69, i32 1
  %add.ptr77 = getelementptr %struct.btrfs_inode_ref, ptr %37, i32 1
  %42 = ptrtoint ptr %add.ptr77 to i32
  call void @read_extent_buffer(ptr noundef %41, ptr noundef %add.ptr76, i32 noundef %42, i32 noundef %conv66) #23
  %43 = ptrtoint ptr %add.ptr69 to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 47, ptr %add.ptr69, align 1
  call void @btrfs_release_path(ptr noundef nonnull %call) #23
  %cmp40.not = icmp eq i64 %31, 256
  br i1 %cmp40.not, label %if.end73.while.end_crit_edge, label %if.end73.while.body42_crit_edge

if.end73.while.body42_crit_edge:                  ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body42

if.end73.while.end_crit_edge:                     ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

while.end:                                        ; preds = %if.end73.while.end_crit_edge, %while.cond39.preheader.while.end_crit_edge
  %ptr.1.lcssa = phi ptr [ %add.ptr21, %while.cond39.preheader.while.end_crit_edge ], [ %add.ptr69, %if.end73.while.end_crit_edge ]
  call void @btrfs_put_root(ptr noundef %call34) #23
  %cmp.not = icmp eq i64 %11, 5
  br i1 %cmp.not, label %while.end79, label %while.end.while.body_crit_edge

while.end.while.body_crit_edge:                   ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body

while.end79:                                      ; preds = %while.end
  call void @btrfs_free_path(ptr noundef nonnull %call) #23
  %cmp82 = icmp eq ptr %ptr.1.lcssa, %add.ptr5
  br i1 %cmp82, label %while.end79.if.then84_crit_edge, label %if.else87

while.end79.if.then84_crit_edge:                  ; preds = %while.end79
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then84

if.then84:                                        ; preds = %while.end79.if.then84_crit_edge, %while.end79.thread
  %44 = ptrtoint ptr %call7.i to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 47, ptr %call7.i, align 8
  %arrayidx86 = getelementptr i8, ptr %call7.i, i32 1
  %45 = ptrtoint ptr %arrayidx86 to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 0, ptr %arrayidx86, align 1
  br label %cleanup

if.else87:                                        ; preds = %while.end79
  call void @__sanitizer_cov_trace_pc() #25
  %sub.ptr.lhs.cast = ptrtoint ptr %add.ptr to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %ptr.1.lcssa to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %46 = call ptr @memmove(ptr %call7.i, ptr %ptr.1.lcssa, i32 %sub.ptr.sub)
  br label %cleanup

err:                                              ; preds = %if.end55.err_crit_edge, %if.else50.err_crit_edge, %while.body42.err_crit_edge, %if.then36, %if.end12.err_crit_edge, %if.else.err_crit_edge, %while.body.err_crit_edge, %if.end.err_crit_edge, %entry.err_crit_edge
  %fs_root.1 = phi ptr [ null, %if.then36 ], [ null, %entry.err_crit_edge ], [ null, %if.end.err_crit_edge ], [ %call34, %while.body42.err_crit_edge ], [ %call34, %if.else50.err_crit_edge ], [ %call34, %if.end55.err_crit_edge ], [ null, %while.body.err_crit_edge ], [ null, %if.else.err_crit_edge ], [ null, %if.end12.err_crit_edge ]
  %name.0 = phi ptr [ %call7.i, %if.then36 ], [ null, %entry.err_crit_edge ], [ null, %if.end.err_crit_edge ], [ %call7.i, %while.body42.err_crit_edge ], [ %call7.i, %if.else50.err_crit_edge ], [ %call7.i, %if.end55.err_crit_edge ], [ %call7.i, %while.body.err_crit_edge ], [ %call7.i, %if.else.err_crit_edge ], [ %call7.i, %if.end12.err_crit_edge ]
  %ret.0 = phi i32 [ %26, %if.then36 ], [ -12, %entry.err_crit_edge ], [ -12, %if.end.err_crit_edge ], [ -36, %if.end55.err_crit_edge ], [ -2, %if.else50.err_crit_edge ], [ %call46, %while.body42.err_crit_edge ], [ -36, %if.end12.err_crit_edge ], [ -2, %if.else.err_crit_edge ], [ %call6, %while.body.err_crit_edge ]
  call void @btrfs_put_root(ptr noundef %fs_root.1) #23
  call void @btrfs_free_path(ptr noundef %call) #23
  call void @kfree(ptr noundef %name.0) #23
  %47 = inttoptr i32 %ret.0 to ptr
  br label %cleanup

cleanup:                                          ; preds = %err, %if.else87, %if.then84
  %retval.0 = phi ptr [ %47, %err ], [ %call7.i, %if.else87 ], [ %call7.i, %if.then84 ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #23
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_alloc_path() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_search_backwards(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @read_extent_buffer(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_release_path(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_get_fs_root(ptr noundef, i64 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_put_root(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_free_path(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_sync_fs(ptr noundef %sb, i32 noundef %wait) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 33
  %0 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_fs_info.i, align 16
  %tree_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %tree_root to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tree_root, align 4
  tail call fastcc void @trace_btrfs_sync_fs(ptr noundef %1, i32 noundef %wait)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %wait)
  %tobool.not = icmp eq i32 %wait, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %btree_inode = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 46
  %4 = ptrtoint ptr %btree_inode to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %btree_inode, align 4
  %i_mapping = getelementptr inbounds %struct.inode, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %i_mapping, align 8
  %call1 = tail call i32 @filemap_flush(ptr noundef %7) #23
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @btrfs_wait_ordered_roots(ptr noundef %1, i64 noundef -1, i64 noundef 0, i64 noundef -1) #23
  %call2 = tail call ptr @btrfs_attach_transaction_barrier(ptr noundef %3) #23
  %cmp.i = icmp ugt ptr %call2, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then4, label %if.end.if.end19_crit_edge

if.end.if.end19_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end19

if.then4:                                         ; preds = %if.end
  %cmp = icmp eq ptr %call2, inttoptr (i32 -2 to ptr)
  br i1 %cmp, label %if.then6, label %if.then4.if.end14_crit_edge

if.then4.if.end14_crit_edge:                      ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end14

if.then6:                                         ; preds = %if.then4
  %pending_changes = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 32
  %8 = ptrtoint ptr %pending_changes to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %pending_changes, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp7 = icmp eq i32 %9, 0
  br i1 %cmp7, label %if.then6.cleanup_crit_edge, label %if.end9

if.then6.cleanup_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end9:                                          ; preds = %if.then6
  %add.ptr1.i.i = getelementptr %struct.super_block, ptr %sb, i32 0, i32 32, i32 2
  %10 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i.i.i.i.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %13, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !2022
  %call.i.i.i.i = tail call i32 @rcu_read_lock_any_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %land.lhs.true.i.i.i.i, label %if.end9.rcu_sync_is_idle.exit.i.i.i_crit_edge

if.end9.rcu_sync_is_idle.exit.i.i.i_crit_edge:    ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_sync_is_idle.exit.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %if.end9
  %call1.i.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool2.not.i.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool2.not.i.i.i.i, label %land.lhs.true.i.i.i.i.rcu_sync_is_idle.exit.i.i.i_crit_edge, label %land.lhs.true3.i.i.i.i

land.lhs.true.i.i.i.i.rcu_sync_is_idle.exit.i.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_sync_is_idle.exit.i.i.i

land.lhs.true3.i.i.i.i:                           ; preds = %land.lhs.true.i.i.i.i
  %.b8.i.i.i.i = load i1, ptr @rcu_sync_is_idle.__warned, align 1
  br i1 %.b8.i.i.i.i, label %land.lhs.true3.i.i.i.i.rcu_sync_is_idle.exit.i.i.i_crit_edge, label %if.then.i.i.i.i

land.lhs.true3.i.i.i.i.rcu_sync_is_idle.exit.i.i.i_crit_edge: ; preds = %land.lhs.true3.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_sync_is_idle.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %land.lhs.true3.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_sync_is_idle.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.580, i32 noundef 35, ptr noundef nonnull @.str.581) #23
  br label %rcu_sync_is_idle.exit.i.i.i

rcu_sync_is_idle.exit.i.i.i:                      ; preds = %if.then.i.i.i.i, %land.lhs.true3.i.i.i.i.rcu_sync_is_idle.exit.i.i.i_crit_edge, %land.lhs.true.i.i.i.i.rcu_sync_is_idle.exit.i.i.i_crit_edge, %if.end9.rcu_sync_is_idle.exit.i.i.i_crit_edge
  %14 = ptrtoint ptr %add.ptr1.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %add.ptr1.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool7.not.i.i.i.i = icmp eq i32 %15, 0
  br i1 %tobool7.not.i.i.i.i, label %do.body3.i.i.i, label %if.else.i.i.i, !prof !2019

do.body3.i.i.i:                                   ; preds = %rcu_sync_is_idle.exit.i.i.i
  %16 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #23, !srcloc !2023
  %read_count.i.i.i = getelementptr %struct.super_block, ptr %sb, i32 0, i32 32, i32 2, i32 0, i32 1
  %17 = ptrtoint ptr %read_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %read_count.i.i.i, align 4
  %19 = ptrtoint ptr %18 to i32
  %20 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i.i.i.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i.i to ptr
  %cpu.i.i.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 3
  %22 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cpu.i.i.i, align 4
  %arrayidx.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx.i.i.i, align 4
  %add.i.i.i = add i32 %25, %19
  %26 = inttoptr i32 %add.i.i.i to ptr
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %26, align 4
  %add19.i.i.i = add i32 %28, 1
  store i32 %add19.i.i.i, ptr %26, align 4
  %29 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #23, !srcloc !2024
  %and.i.i.i.i.i = and i32 %29, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool30.not.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool30.not.i.i.i, label %if.then39.i.i.i, label %do.body3.i.i.i.do.end41.i.i.i_crit_edge, !prof !2020

do.body3.i.i.i.do.end41.i.i.i_crit_edge:          ; preds = %do.body3.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end41.i.i.i

if.then39.i.i.i:                                  ; preds = %do.body3.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @warn_bogus_irq_restore() #23
  br label %do.end41.i.i.i

do.end41.i.i.i:                                   ; preds = %if.then39.i.i.i, %do.body3.i.i.i.do.end41.i.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %16) #23, !srcloc !2025
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !2026
  %30 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i.i.i61.i.i.i.c = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i.i61.i.i.i.c to ptr
  %preempt_count.i.i62.i.i.i.c = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %preempt_count.i.i62.i.i.i.c to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %preempt_count.i.i62.i.i.i.c, align 4
  %sub.i.i.i.i.c = add i32 %33, -1
  store volatile i32 %sub.i.i.i.i.c, ptr %preempt_count.i.i62.i.i.i.c, align 4
  br label %if.then11

if.else.i.i.i:                                    ; preds = %rcu_sync_is_idle.exit.i.i.i
  %call48.i.i.i = tail call zeroext i1 @__percpu_down_read(ptr noundef %add.ptr1.i.i, i1 noundef zeroext true) #23
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !2026
  %34 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i.i.i61.i.i.i = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i61.i.i.i to ptr
  %preempt_count.i.i62.i.i.i = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %preempt_count.i.i62.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %preempt_count.i.i62.i.i.i, align 4
  %sub.i.i.i.i = add i32 %37, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i62.i.i.i, align 4
  br i1 %call48.i.i.i, label %if.else.i.i.i.if.then11_crit_edge, label %if.else.i.i.i.cleanup_crit_edge

if.else.i.i.i.cleanup_crit_edge:                  ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.else.i.i.i.if.then11_crit_edge:                ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then11

if.then11:                                        ; preds = %if.else.i.i.i.if.then11_crit_edge, %do.end41.i.i.i
  %dep_map.i.i.i = getelementptr %struct.super_block, ptr %sb, i32 0, i32 32, i32 2, i32 0, i32 5
  %38 = tail call ptr @llvm.returnaddress(i32 0) #23
  %39 = ptrtoint ptr %38 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i.i, i32 noundef 0, i32 noundef 1, i32 noundef 1, i32 noundef 1, ptr noundef null, i32 noundef %39) #23
  tail call void @lock_release(ptr noundef %dep_map.i.i.i, i32 noundef %39) #23
  %40 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i.i.i.i.i.i37 = and i32 %40, -16384
  %41 = inttoptr i32 %and.i.i.i.i.i.i37 to ptr
  %preempt_count.i.i.i.i.i38 = getelementptr inbounds %struct.thread_info, ptr %41, i32 0, i32 1
  %42 = ptrtoint ptr %preempt_count.i.i.i.i.i38 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %preempt_count.i.i.i.i.i38, align 4
  %add.i.i.i.i39 = add i32 %43, 1
  store volatile i32 %add.i.i.i.i39, ptr %preempt_count.i.i.i.i.i38, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !2027
  %call.i.i.i.i40 = tail call i32 @rcu_read_lock_any_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i40)
  %tobool.not.i.i.i.i41 = icmp eq i32 %call.i.i.i.i40, 0
  br i1 %tobool.not.i.i.i.i41, label %land.lhs.true.i.i.i.i44, label %if.then11.rcu_sync_is_idle.exit.i.i.i49_crit_edge

if.then11.rcu_sync_is_idle.exit.i.i.i49_crit_edge: ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_sync_is_idle.exit.i.i.i49

land.lhs.true.i.i.i.i44:                          ; preds = %if.then11
  %call1.i.i.i.i42 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i42)
  %tobool2.not.i.i.i.i43 = icmp eq i32 %call1.i.i.i.i42, 0
  br i1 %tobool2.not.i.i.i.i43, label %land.lhs.true.i.i.i.i44.rcu_sync_is_idle.exit.i.i.i49_crit_edge, label %land.lhs.true3.i.i.i.i46

land.lhs.true.i.i.i.i44.rcu_sync_is_idle.exit.i.i.i49_crit_edge: ; preds = %land.lhs.true.i.i.i.i44
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_sync_is_idle.exit.i.i.i49

land.lhs.true3.i.i.i.i46:                         ; preds = %land.lhs.true.i.i.i.i44
  %.b8.i.i.i.i45 = load i1, ptr @rcu_sync_is_idle.__warned, align 1
  br i1 %.b8.i.i.i.i45, label %land.lhs.true3.i.i.i.i46.rcu_sync_is_idle.exit.i.i.i49_crit_edge, label %if.then.i.i.i.i47

land.lhs.true3.i.i.i.i46.rcu_sync_is_idle.exit.i.i.i49_crit_edge: ; preds = %land.lhs.true3.i.i.i.i46
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_sync_is_idle.exit.i.i.i49

if.then.i.i.i.i47:                                ; preds = %land.lhs.true3.i.i.i.i46
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_sync_is_idle.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.580, i32 noundef 35, ptr noundef nonnull @.str.581) #23
  br label %rcu_sync_is_idle.exit.i.i.i49

rcu_sync_is_idle.exit.i.i.i49:                    ; preds = %if.then.i.i.i.i47, %land.lhs.true3.i.i.i.i46.rcu_sync_is_idle.exit.i.i.i49_crit_edge, %land.lhs.true.i.i.i.i44.rcu_sync_is_idle.exit.i.i.i49_crit_edge, %if.then11.rcu_sync_is_idle.exit.i.i.i49_crit_edge
  %44 = ptrtoint ptr %add.ptr1.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %add.ptr1.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool7.not.i.i.i.i48 = icmp eq i32 %45, 0
  br i1 %tobool7.not.i.i.i.i48, label %do.body3.i.i.i56, label %do.end49.i.i.i, !prof !2019

do.body3.i.i.i56:                                 ; preds = %rcu_sync_is_idle.exit.i.i.i49
  %46 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #23, !srcloc !2023
  %read_count.i.i.i50 = getelementptr %struct.super_block, ptr %sb, i32 0, i32 32, i32 2, i32 0, i32 1
  %47 = ptrtoint ptr %read_count.i.i.i50 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %read_count.i.i.i50, align 4
  %49 = ptrtoint ptr %48 to i32
  %50 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i.i.i.i51 = and i32 %50, -16384
  %51 = inttoptr i32 %and.i.i.i.i51 to ptr
  %cpu.i.i.i52 = getelementptr inbounds %struct.thread_info, ptr %51, i32 0, i32 3
  %52 = ptrtoint ptr %cpu.i.i.i52 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %cpu.i.i.i52, align 4
  %arrayidx.i.i.i53 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %53
  %54 = ptrtoint ptr %arrayidx.i.i.i53 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx.i.i.i53, align 4
  %add.i.i.i54 = add i32 %55, %49
  %56 = inttoptr i32 %add.i.i.i54 to ptr
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %56, align 4
  %add17.i.i.i = add i32 %58, -1
  store i32 %add17.i.i.i, ptr %56, align 4
  %59 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #23, !srcloc !2024
  %and.i.i.i.i.i55 = and i32 %59, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i55)
  %tobool28.not.i.i.i = icmp eq i32 %and.i.i.i.i.i55, 0
  br i1 %tobool28.not.i.i.i, label %if.then37.i.i.i, label %do.body3.i.i.i56.do.end39.i.i.i_crit_edge, !prof !2020

do.body3.i.i.i56.do.end39.i.i.i_crit_edge:        ; preds = %do.body3.i.i.i56
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end39.i.i.i

if.then37.i.i.i:                                  ; preds = %do.body3.i.i.i56
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @warn_bogus_irq_restore() #23
  br label %do.end39.i.i.i

do.end39.i.i.i:                                   ; preds = %if.then37.i.i.i, %do.body3.i.i.i56.do.end39.i.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %46) #23, !srcloc !2025
  br label %sb_end_write.exit

do.end49.i.i.i:                                   ; preds = %rcu_sync_is_idle.exit.i.i.i49
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !2028
  %60 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #23, !srcloc !2023
  %read_count75.i.i.i = getelementptr %struct.super_block, ptr %sb, i32 0, i32 32, i32 2, i32 0, i32 1
  %61 = ptrtoint ptr %read_count75.i.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %read_count75.i.i.i, align 4
  %63 = ptrtoint ptr %62 to i32
  %64 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i122.i.i.i = and i32 %64, -16384
  %65 = inttoptr i32 %and.i122.i.i.i to ptr
  %cpu78.i.i.i = getelementptr inbounds %struct.thread_info, ptr %65, i32 0, i32 3
  %66 = ptrtoint ptr %cpu78.i.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %cpu78.i.i.i, align 4
  %arrayidx79.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %67
  %68 = ptrtoint ptr %arrayidx79.i.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %arrayidx79.i.i.i, align 4
  %add80.i.i.i = add i32 %69, %63
  %70 = inttoptr i32 %add80.i.i.i to ptr
  %71 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %70, align 4
  %add81.i.i.i = add i32 %72, -1
  store i32 %add81.i.i.i, ptr %70, align 4
  %73 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #23, !srcloc !2024
  %and.i.i123.i.i.i = and i32 %73, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i123.i.i.i)
  %tobool92.not.i.i.i = icmp eq i32 %and.i.i123.i.i.i, 0
  br i1 %tobool92.not.i.i.i, label %if.then101.i.i.i, label %do.end49.i.i.i.do.end104.i.i.i_crit_edge, !prof !2020

do.end49.i.i.i.do.end104.i.i.i_crit_edge:         ; preds = %do.end49.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end104.i.i.i

if.then101.i.i.i:                                 ; preds = %do.end49.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @warn_bogus_irq_restore() #23
  br label %do.end104.i.i.i

do.end104.i.i.i:                                  ; preds = %if.then101.i.i.i, %do.end49.i.i.i.do.end104.i.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %60) #23, !srcloc !2025
  %writer.i.i.i = getelementptr %struct.super_block, ptr %sb, i32 0, i32 32, i32 2, i32 0, i32 2
  %call111.i.i.i = tail call i32 @rcuwait_wake_up(ptr noundef %writer.i.i.i) #23
  br label %sb_end_write.exit

sb_end_write.exit:                                ; preds = %do.end104.i.i.i, %do.end39.i.i.i
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !2029
  %74 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i.i.i120.i.i.i = and i32 %74, -16384
  %75 = inttoptr i32 %and.i.i.i120.i.i.i to ptr
  %preempt_count.i.i121.i.i.i = getelementptr inbounds %struct.thread_info, ptr %75, i32 0, i32 1
  %76 = ptrtoint ptr %preempt_count.i.i121.i.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %preempt_count.i.i121.i.i.i, align 4
  %sub.i.i.i.i57 = add i32 %77, -1
  store volatile i32 %sub.i.i.i.i57, ptr %preempt_count.i.i121.i.i.i, align 4
  %call13 = tail call ptr @btrfs_start_transaction(ptr noundef %3, i32 noundef 0) #23
  br label %if.end14

if.end14:                                         ; preds = %sb_end_write.exit, %if.then4.if.end14_crit_edge
  %trans.0 = phi ptr [ %call13, %sb_end_write.exit ], [ %call2, %if.then4.if.end14_crit_edge ]
  %cmp.i58 = icmp ugt ptr %trans.0, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i58, label %if.then16, label %if.end14.if.end19_crit_edge

if.end14.if.end19_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end19

if.then16:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #25
  %78 = ptrtoint ptr %trans.0 to i32
  br label %cleanup

if.end19:                                         ; preds = %if.end14.if.end19_crit_edge, %if.end.if.end19_crit_edge
  %trans.1 = phi ptr [ %trans.0, %if.end14.if.end19_crit_edge ], [ %call2, %if.end.if.end19_crit_edge ]
  %call20 = tail call i32 @btrfs_commit_transaction(ptr noundef %trans.1) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %if.then16, %if.else.i.i.i.cleanup_crit_edge, %if.then6.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ %78, %if.then16 ], [ %call20, %if.end19 ], [ 0, %if.then ], [ 0, %if.then6.cleanup_crit_edge ], [ 0, %if.else.i.i.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_btrfs_sync_fs(ptr noundef %fs_info, i32 noundef %wait) unnamed_addr #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_sync_fs, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_btrfs_sync_fs, %do.body)) #23
          to label %if.end48 [label %do.body], !srcloc !2030

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !2019

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.579, i32 noundef 108, i32 noundef 9, ptr noundef null) #23
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !2031
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_sync_fs, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %fs_info, i32 noundef %wait) #23
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !2032
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #25
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !2032
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #25
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !2019

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #25
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.579, i32 noundef 108, i32 noundef 9, ptr noundef null) #23
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !2033
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_btrfs_sync_fs, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_btrfs_sync_fs.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @trace_btrfs_sync_fs.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.577, i32 noundef 731, ptr noundef nonnull @.str.578) #23
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !2034
  %38 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @filemap_flush(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_wait_ordered_roots(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_attach_transaction_barrier(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_start_transaction(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_commit_transaction(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal void @exit_btrfs_fs() #4 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @btrfs_destroy_cachep() #30
  tail call void @btrfs_delayed_ref_exit() #30
  tail call void @btrfs_auto_defrag_exit() #30
  tail call void @btrfs_delayed_inode_exit() #30
  tail call void @btrfs_prelim_ref_exit() #30
  tail call void @ordered_data_exit() #30
  tail call void @extent_map_exit() #30
  tail call void @extent_state_cache_exit() #30
  tail call void @extent_io_exit() #30
  tail call void @misc_deregister(ptr noundef nonnull @btrfs_misc) #23
  tail call void @btrfs_end_io_wq_exit() #30
  %call = tail call i32 @unregister_filesystem(ptr noundef nonnull @btrfs_fs_type) #23
  tail call void @btrfs_exit_sysfs() #30
  tail call void @btrfs_cleanup_fs_uuids() #30
  tail call void @btrfs_exit_compress() #30
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @btrfs_destroy_cachep() local_unnamed_addr #6

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @btrfs_delayed_ref_exit() local_unnamed_addr #6

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @btrfs_auto_defrag_exit() local_unnamed_addr #6

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @btrfs_delayed_inode_exit() local_unnamed_addr #6

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @btrfs_prelim_ref_exit() local_unnamed_addr #6

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @ordered_data_exit() local_unnamed_addr #6

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @extent_map_exit() local_unnamed_addr #6

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @extent_state_cache_exit() local_unnamed_addr #6

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @extent_io_exit() local_unnamed_addr #6

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @btrfs_end_io_wq_exit() local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @unregister_filesystem(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @btrfs_exit_sysfs() local_unnamed_addr #6

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @btrfs_cleanup_fs_uuids() local_unnamed_addr #6 section ".exit.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @btrfs_exit_compress() local_unnamed_addr #6

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @init_btrfs_fs() #4 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @btrfs_props_init() #30
  %call = tail call i32 @btrfs_init_sysfs() #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @btrfs_init_compress() #30
  %call1 = tail call i32 @btrfs_init_cachep() #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.free_compress_crit_edge

if.end.free_compress_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_compress

if.end4:                                          ; preds = %if.end
  %call5 = tail call i32 @extent_io_init() #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end8, label %if.end4.free_cachep_crit_edge

if.end4.free_cachep_crit_edge:                    ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_cachep

if.end8:                                          ; preds = %if.end4
  %call9 = tail call i32 @extent_state_cache_init() #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end12, label %if.end8.free_extent_io_crit_edge

if.end8.free_extent_io_crit_edge:                 ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_extent_io

if.end12:                                         ; preds = %if.end8
  %call13 = tail call i32 @extent_map_init() #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.end16, label %if.end12.free_extent_state_cache_crit_edge

if.end12.free_extent_state_cache_crit_edge:       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_extent_state_cache

if.end16:                                         ; preds = %if.end12
  %call17 = tail call i32 @ordered_data_init() #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %if.end20, label %if.end16.free_extent_map_crit_edge

if.end16.free_extent_map_crit_edge:               ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_extent_map

if.end20:                                         ; preds = %if.end16
  %call21 = tail call i32 @btrfs_delayed_inode_init() #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end24, label %if.end20.free_ordered_data_crit_edge

if.end20.free_ordered_data_crit_edge:             ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_ordered_data

if.end24:                                         ; preds = %if.end20
  %call25 = tail call i32 @btrfs_auto_defrag_init() #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.end28, label %if.end24.free_delayed_inode_crit_edge

if.end24.free_delayed_inode_crit_edge:            ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_delayed_inode

if.end28:                                         ; preds = %if.end24
  %call29 = tail call i32 @btrfs_delayed_ref_init() #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %if.end32, label %if.end28.free_auto_defrag_crit_edge

if.end28.free_auto_defrag_crit_edge:              ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_auto_defrag

if.end32:                                         ; preds = %if.end28
  %call33 = tail call i32 @btrfs_prelim_ref_init() #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %if.end36, label %if.end32.free_delayed_ref_crit_edge

if.end32.free_delayed_ref_crit_edge:              ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_delayed_ref

if.end36:                                         ; preds = %if.end32
  %call37 = tail call i32 @btrfs_end_io_wq_init() #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37)
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %if.end40, label %if.end36.free_prelim_ref_crit_edge

if.end36.free_prelim_ref_crit_edge:               ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_prelim_ref

if.end40:                                         ; preds = %if.end36
  %call.i = tail call i32 @misc_register(ptr noundef nonnull @btrfs_misc) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool42.not = icmp eq i32 %call.i, 0
  br i1 %tobool42.not, label %if.end44, label %if.end40.free_end_io_wq_crit_edge

if.end40.free_end_io_wq_crit_edge:                ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_end_io_wq

if.end44:                                         ; preds = %if.end40
  tail call fastcc void @btrfs_print_mod_info() #31
  %call45 = tail call i32 @btrfs_run_sanity_tests() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45)
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %if.end48, label %if.end44.unregister_ioctl_crit_edge

if.end44.unregister_ioctl_crit_edge:              ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #25
  br label %unregister_ioctl

if.end48:                                         ; preds = %if.end44
  %call49 = tail call i32 @register_filesystem(ptr noundef nonnull @btrfs_fs_type) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call49)
  %tobool50.not = icmp eq i32 %call49, 0
  br i1 %tobool50.not, label %if.end48.cleanup_crit_edge, label %if.end48.unregister_ioctl_crit_edge

if.end48.unregister_ioctl_crit_edge:              ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #25
  br label %unregister_ioctl

if.end48.cleanup_crit_edge:                       ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

unregister_ioctl:                                 ; preds = %if.end48.unregister_ioctl_crit_edge, %if.end44.unregister_ioctl_crit_edge
  %err.0 = phi i32 [ %call45, %if.end44.unregister_ioctl_crit_edge ], [ %call49, %if.end48.unregister_ioctl_crit_edge ]
  tail call void @misc_deregister(ptr noundef nonnull @btrfs_misc) #23
  br label %free_end_io_wq

free_end_io_wq:                                   ; preds = %unregister_ioctl, %if.end40.free_end_io_wq_crit_edge
  %err.1 = phi i32 [ %call.i, %if.end40.free_end_io_wq_crit_edge ], [ %err.0, %unregister_ioctl ]
  tail call void @btrfs_end_io_wq_exit() #30
  br label %free_prelim_ref

free_prelim_ref:                                  ; preds = %free_end_io_wq, %if.end36.free_prelim_ref_crit_edge
  %err.2 = phi i32 [ %call37, %if.end36.free_prelim_ref_crit_edge ], [ %err.1, %free_end_io_wq ]
  tail call void @btrfs_prelim_ref_exit() #30
  br label %free_delayed_ref

free_delayed_ref:                                 ; preds = %free_prelim_ref, %if.end32.free_delayed_ref_crit_edge
  %err.3 = phi i32 [ %call33, %if.end32.free_delayed_ref_crit_edge ], [ %err.2, %free_prelim_ref ]
  tail call void @btrfs_delayed_ref_exit() #30
  br label %free_auto_defrag

free_auto_defrag:                                 ; preds = %free_delayed_ref, %if.end28.free_auto_defrag_crit_edge
  %err.4 = phi i32 [ %call29, %if.end28.free_auto_defrag_crit_edge ], [ %err.3, %free_delayed_ref ]
  tail call void @btrfs_auto_defrag_exit() #30
  br label %free_delayed_inode

free_delayed_inode:                               ; preds = %free_auto_defrag, %if.end24.free_delayed_inode_crit_edge
  %err.5 = phi i32 [ %call25, %if.end24.free_delayed_inode_crit_edge ], [ %err.4, %free_auto_defrag ]
  tail call void @btrfs_delayed_inode_exit() #30
  br label %free_ordered_data

free_ordered_data:                                ; preds = %free_delayed_inode, %if.end20.free_ordered_data_crit_edge
  %err.6 = phi i32 [ %call21, %if.end20.free_ordered_data_crit_edge ], [ %err.5, %free_delayed_inode ]
  tail call void @ordered_data_exit() #30
  br label %free_extent_map

free_extent_map:                                  ; preds = %free_ordered_data, %if.end16.free_extent_map_crit_edge
  %err.7 = phi i32 [ %call17, %if.end16.free_extent_map_crit_edge ], [ %err.6, %free_ordered_data ]
  tail call void @extent_map_exit() #30
  br label %free_extent_state_cache

free_extent_state_cache:                          ; preds = %free_extent_map, %if.end12.free_extent_state_cache_crit_edge
  %err.8 = phi i32 [ %call13, %if.end12.free_extent_state_cache_crit_edge ], [ %err.7, %free_extent_map ]
  tail call void @extent_state_cache_exit() #30
  br label %free_extent_io

free_extent_io:                                   ; preds = %free_extent_state_cache, %if.end8.free_extent_io_crit_edge
  %err.9 = phi i32 [ %call9, %if.end8.free_extent_io_crit_edge ], [ %err.8, %free_extent_state_cache ]
  tail call void @extent_io_exit() #30
  br label %free_cachep

free_cachep:                                      ; preds = %free_extent_io, %if.end4.free_cachep_crit_edge
  %err.10 = phi i32 [ %call5, %if.end4.free_cachep_crit_edge ], [ %err.9, %free_extent_io ]
  tail call void @btrfs_destroy_cachep() #30
  br label %free_compress

free_compress:                                    ; preds = %free_cachep, %if.end.free_compress_crit_edge
  %err.11 = phi i32 [ %call1, %if.end.free_compress_crit_edge ], [ %err.10, %free_cachep ]
  tail call void @btrfs_exit_compress() #30
  tail call void @btrfs_exit_sysfs() #30
  br label %cleanup

cleanup:                                          ; preds = %free_compress, %if.end48.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.11, %free_compress ], [ %call, %entry.cleanup_crit_edge ], [ 0, %if.end48.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_transaction_commit(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_transaction_commit, ptr %1, i32 0, i32 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_transaction_commit, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %root_objectid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %root_objectid, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %3)
  %cmp2 = icmp ugt i64 %3, -10
  %4 = add i64 %3, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %4)
  %5 = icmp ult i64 %4, 8
  %or.cond = or i1 %cmp2, %5
  br i1 %or.cond, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call8 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %3, ptr noundef nonnull @trace_raw_output_btrfs_transaction_commit.symbols) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call8, %cond.true ], [ @.str.173, %if.end.cond.end_crit_edge ]
  %generation = getelementptr inbounds %struct.trace_event_raw_btrfs_transaction_commit, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %generation to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %generation, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.159, ptr noundef %fsid, i64 noundef %3, ptr noundef %cond, i64 noundef %7) #23
  %call9 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call9, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_symbols_seq_u64(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs__inode(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %1, i32 0, i32 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %root_objectid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %root_objectid, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %3)
  %cmp2 = icmp ugt i64 %3, -10
  %4 = add i64 %3, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %4)
  %5 = icmp ult i64 %4, 8
  %or.cond = or i1 %cmp2, %5
  br i1 %or.cond, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call8 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %3, ptr noundef nonnull @trace_raw_output_btrfs__inode.symbols) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call8, %cond.true ], [ @.str.173, %if.end.cond.end_crit_edge ]
  %generation = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %generation to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %generation, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %ino, align 8
  %blocks = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %1, i32 0, i32 3
  %10 = ptrtoint ptr %blocks to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %blocks, align 8
  %disk_i_size = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %1, i32 0, i32 4
  %12 = ptrtoint ptr %disk_i_size to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %disk_i_size, align 8
  %last_trans = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %1, i32 0, i32 6
  %14 = ptrtoint ptr %last_trans to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %last_trans, align 8
  %logged_trans = getelementptr inbounds %struct.trace_event_raw_btrfs__inode, ptr %1, i32 0, i32 7
  %16 = ptrtoint ptr %logged_trans to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %logged_trans, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.179, ptr noundef %fsid, i64 noundef %3, ptr noundef %cond, i64 noundef %7, i64 noundef %9, i64 noundef %11, i64 noundef %13, i64 noundef %15, i64 noundef %17) #23
  %call9 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call9, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_get_extent(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %1, i32 0, i32 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %root_objectid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %root_objectid, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %3)
  %cmp2 = icmp ugt i64 %3, -10
  %4 = add i64 %3, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %4)
  %5 = icmp ult i64 %4, 8
  %or.cond = or i1 %cmp2, %5
  br i1 %or.cond, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call8 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %3, ptr noundef nonnull @trace_raw_output_btrfs_get_extent.symbols) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call8, %cond.true ], [ @.str.173, %if.end.cond.end_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %ino, align 8
  %start = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %start, align 8
  %len = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %len, align 8
  %orig_start = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %orig_start to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %orig_start, align 8
  %block_start = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %block_start to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %block_start, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -5, i64 %15)
  %cmp10 = icmp ugt i64 %15, -5
  br i1 %cmp10, label %cond.end.cond.end16_crit_edge, label %cond.false12

cond.end.cond.end16_crit_edge:                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end16

cond.false12:                                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  %call15 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %15, ptr noundef nonnull @trace_raw_output_btrfs_get_extent.symbols.192) #23
  br label %cond.end16

cond.end16:                                       ; preds = %cond.false12, %cond.end.cond.end16_crit_edge
  %cond17 = phi ptr [ %call15, %cond.false12 ], [ @.str.173, %cond.end.cond.end16_crit_edge ]
  %block_len = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %block_len to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %block_len, align 8
  %flags19 = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %1, i32 0, i32 9
  %18 = ptrtoint ptr %flags19 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags19, align 8
  %call20 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %19, ptr noundef nonnull @trace_raw_output_btrfs_get_extent.__flags) #23
  %refs = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %1, i32 0, i32 10
  %20 = ptrtoint ptr %refs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %refs, align 4
  %compress_type = getelementptr inbounds %struct.trace_event_raw_btrfs_get_extent, ptr %1, i32 0, i32 11
  %22 = ptrtoint ptr %compress_type to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %compress_type, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.191, ptr noundef %fsid, i64 noundef %3, ptr noundef %cond, i64 noundef %7, i64 noundef %9, i64 noundef %11, i64 noundef %13, i64 noundef %15, ptr noundef %cond17, i64 noundef %17, ptr noundef %call20, i32 noundef %21, i32 noundef %23) #23
  %call21 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end16, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call21, %cond.end16 ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_flags_seq(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_handle_em_exist(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %1, i32 0, i32 1
  %start = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %start, align 8
  %len = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %1, i32 0, i32 7
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %len, align 8
  %e_start = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %e_start to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %e_start, align 8
  %e_len = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %e_len to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %e_len, align 8
  %map_start = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %map_start to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %map_start, align 8
  %map_len = getelementptr inbounds %struct.trace_event_raw_btrfs_handle_em_exist, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %map_len to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %map_len, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.208, ptr noundef %fsid, i64 noundef %3, i64 noundef %5, i64 noundef %7, i64 noundef %9, i64 noundef %11, i64 noundef %13) #23
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @btrfs_get_64(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i8 @btrfs_get_8(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs__file_extent_item_regular(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %1, i32 0, i32 1
  %root_obj = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %root_obj to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %root_obj, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %3)
  %cmp2 = icmp ugt i64 %3, -10
  %4 = add i64 %3, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %4)
  %5 = icmp ult i64 %4, 8
  %or.cond = or i1 %cmp2, %5
  br i1 %or.cond, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call8 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %3, ptr noundef nonnull @trace_raw_output_btrfs__file_extent_item_regular.symbols) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call8, %cond.true ], [ @.str.173, %if.end.cond.end_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %ino, align 8
  %isize = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %isize to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %isize, align 8
  %disk_isize = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %disk_isize to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %disk_isize, align 8
  %extent_start = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %1, i32 0, i32 13
  %12 = ptrtoint ptr %extent_start to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %extent_start, align 8
  %extent_end = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %1, i32 0, i32 14
  %14 = ptrtoint ptr %extent_end to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %extent_end, align 8
  %num_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %1, i32 0, i32 6
  %16 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %num_bytes, align 8
  %ram_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %1, i32 0, i32 7
  %18 = ptrtoint ptr %ram_bytes to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %ram_bytes, align 8
  %disk_bytenr = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %1, i32 0, i32 8
  %20 = ptrtoint ptr %disk_bytenr to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %disk_bytenr, align 8
  %disk_num_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %1, i32 0, i32 9
  %22 = ptrtoint ptr %disk_num_bytes to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %disk_num_bytes, align 8
  %extent_offset = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %1, i32 0, i32 10
  %24 = ptrtoint ptr %extent_offset to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %extent_offset, align 8
  %extent_type = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %1, i32 0, i32 11
  %26 = ptrtoint ptr %extent_type to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %extent_type, align 8
  %conv = zext i8 %27 to i32
  %call10 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_btrfs__file_extent_item_regular.symbols.224) #23
  %compression = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_regular, ptr %1, i32 0, i32 12
  %28 = ptrtoint ptr %compression to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %compression, align 1
  %conv11 = zext i8 %29 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.223, ptr noundef %fsid, i64 noundef %3, ptr noundef %cond, i64 noundef %7, i64 noundef %9, i64 noundef %11, i64 noundef %13, i64 noundef %15, i64 noundef %17, i64 noundef %19, i64 noundef %21, i64 noundef %23, i64 noundef %25, ptr noundef %call10, i32 noundef %conv11) #23
  %call12 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call12, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_symbols_seq(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs__file_extent_item_inline(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %1, i32 0, i32 1
  %root_obj = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %root_obj to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %root_obj, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %3)
  %cmp2 = icmp ugt i64 %3, -10
  %4 = add i64 %3, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %4)
  %5 = icmp ult i64 %4, 8
  %or.cond = or i1 %cmp2, %5
  br i1 %or.cond, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call8 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %3, ptr noundef nonnull @trace_raw_output_btrfs__file_extent_item_inline.symbols) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call8, %cond.true ], [ @.str.173, %if.end.cond.end_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %ino, align 8
  %isize = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %isize to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %isize, align 8
  %disk_isize = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %disk_isize to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %disk_isize, align 8
  %extent_start = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %1, i32 0, i32 8
  %12 = ptrtoint ptr %extent_start to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %extent_start, align 8
  %extent_end = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %1, i32 0, i32 9
  %14 = ptrtoint ptr %extent_end to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %extent_end, align 8
  %extent_type = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %1, i32 0, i32 6
  %16 = ptrtoint ptr %extent_type to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %extent_type, align 8
  %conv = zext i8 %17 to i32
  %call10 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_btrfs__file_extent_item_inline.symbols.227) #23
  %compression = getelementptr inbounds %struct.trace_event_raw_btrfs__file_extent_item_inline, ptr %1, i32 0, i32 7
  %18 = ptrtoint ptr %compression to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %compression, align 1
  %conv11 = zext i8 %19 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.226, ptr noundef %fsid, i64 noundef %3, ptr noundef %cond, i64 noundef %7, i64 noundef %9, i64 noundef %11, i64 noundef %13, i64 noundef %15, ptr noundef %call10, i32 noundef %conv11) #23
  %call12 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call12, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs__ordered_extent(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %1, i32 0, i32 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %root_objectid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %root_objectid, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %3)
  %cmp2 = icmp ugt i64 %3, -10
  %4 = add i64 %3, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %4)
  %5 = icmp ult i64 %4, 8
  %or.cond = or i1 %cmp2, %5
  br i1 %or.cond, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call8 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %3, ptr noundef nonnull @trace_raw_output_btrfs__ordered_extent.symbols) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call8, %cond.true ], [ @.str.173, %if.end.cond.end_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %ino, align 8
  %file_offset = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %file_offset to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %file_offset, align 8
  %start = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %start, align 8
  %len = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %len, align 8
  %disk_len = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %1, i32 0, i32 6
  %14 = ptrtoint ptr %disk_len to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %disk_len, align 8
  %truncated_len = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %1, i32 0, i32 12
  %16 = ptrtoint ptr %truncated_len to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %truncated_len, align 8
  %bytes_left = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %1, i32 0, i32 7
  %18 = ptrtoint ptr %bytes_left to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %bytes_left, align 8
  %flags10 = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %1, i32 0, i32 8
  %20 = ptrtoint ptr %flags10 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags10, align 8
  %call11 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %21, ptr noundef nonnull @trace_raw_output_btrfs__ordered_extent.__flags) #23
  %compress_type = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %1, i32 0, i32 9
  %22 = ptrtoint ptr %compress_type to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %compress_type, align 4
  %refs = getelementptr inbounds %struct.trace_event_raw_btrfs__ordered_extent, ptr %1, i32 0, i32 10
  %24 = ptrtoint ptr %refs to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %refs, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.232, ptr noundef %fsid, i64 noundef %3, ptr noundef %cond, i64 noundef %7, i64 noundef %9, i64 noundef %11, i64 noundef %13, i64 noundef %15, i64 noundef %17, i64 noundef %19, ptr noundef %call11, i32 noundef %23, i32 noundef %25) #23
  %call12 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call12, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs__writepage(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %1, i32 0, i32 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %1, i32 0, i32 12
  %2 = ptrtoint ptr %root_objectid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %root_objectid, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %3)
  %cmp2 = icmp ugt i64 %3, -10
  %4 = add i64 %3, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %4)
  %5 = icmp ult i64 %4, 8
  %or.cond = or i1 %cmp2, %5
  br i1 %or.cond, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call8 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %3, ptr noundef nonnull @trace_raw_output_btrfs__writepage.symbols) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call8, %cond.true ], [ @.str.173, %if.end.cond.end_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %ino, align 8
  %index = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %index, align 8
  %nr_to_write = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %nr_to_write to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %nr_to_write, align 4
  %pages_skipped = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %pages_skipped to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %pages_skipped, align 8
  %range_start = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %1, i32 0, i32 6
  %14 = ptrtoint ptr %range_start to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %range_start, align 8
  %range_end = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %1, i32 0, i32 7
  %16 = ptrtoint ptr %range_end to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %range_end, align 8
  %for_kupdate = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %1, i32 0, i32 8
  %18 = ptrtoint ptr %for_kupdate to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %for_kupdate, align 8
  %conv = zext i8 %19 to i32
  %for_reclaim = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %1, i32 0, i32 9
  %20 = ptrtoint ptr %for_reclaim to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %for_reclaim, align 1
  %conv9 = zext i8 %21 to i32
  %range_cyclic = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %1, i32 0, i32 10
  %22 = ptrtoint ptr %range_cyclic to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %range_cyclic, align 2
  %conv10 = zext i8 %23 to i32
  %writeback_index = getelementptr inbounds %struct.trace_event_raw_btrfs__writepage, ptr %1, i32 0, i32 11
  %24 = ptrtoint ptr %writeback_index to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %writeback_index, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.251, ptr noundef %fsid, i64 noundef %3, ptr noundef %cond, i64 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13, i64 noundef %15, i64 noundef %17, i32 noundef %conv, i32 noundef %conv9, i32 noundef %conv10, i32 noundef %25) #23
  %call11 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call11, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_writepage_end_io_hook(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_writepage_end_io_hook, ptr %1, i32 0, i32 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_writepage_end_io_hook, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %root_objectid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %root_objectid, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %3)
  %cmp2 = icmp ugt i64 %3, -10
  %4 = add i64 %3, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %4)
  %5 = icmp ult i64 %4, 8
  %or.cond = or i1 %cmp2, %5
  br i1 %or.cond, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call8 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %3, ptr noundef nonnull @trace_raw_output_btrfs_writepage_end_io_hook.symbols) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call8, %cond.true ], [ @.str.173, %if.end.cond.end_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_writepage_end_io_hook, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %ino, align 8
  %start = getelementptr inbounds %struct.trace_event_raw_btrfs_writepage_end_io_hook, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %start, align 8
  %end = getelementptr inbounds %struct.trace_event_raw_btrfs_writepage_end_io_hook, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %end to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %end, align 8
  %uptodate = getelementptr inbounds %struct.trace_event_raw_btrfs_writepage_end_io_hook, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %uptodate to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %uptodate, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.254, ptr noundef %fsid, i64 noundef %3, ptr noundef %cond, i64 noundef %7, i64 noundef %9, i64 noundef %11, i32 noundef %13) #23
  %call9 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call9, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_sync_file(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_file, ptr %1, i32 0, i32 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_file, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %root_objectid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %root_objectid, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %3)
  %cmp2 = icmp ugt i64 %3, -10
  %4 = add i64 %3, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %4)
  %5 = icmp ult i64 %4, 8
  %or.cond = or i1 %cmp2, %5
  br i1 %or.cond, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call8 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %3, ptr noundef nonnull @trace_raw_output_btrfs_sync_file.symbols) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call8, %cond.true ], [ @.str.173, %if.end.cond.end_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_file, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %ino, align 8
  %parent = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_file, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %parent to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %parent, align 8
  %datasync = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_file, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %datasync to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %datasync, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.257, ptr noundef %fsid, i64 noundef %3, ptr noundef %cond, i64 noundef %7, i64 noundef %9, i32 noundef %11) #23
  %call9 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call9, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_sync_fs(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_fs, ptr %1, i32 0, i32 1
  %wait = getelementptr inbounds %struct.trace_event_raw_btrfs_sync_fs, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %wait to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %wait, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.259, ptr noundef %fsid, i32 noundef %3) #23
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_add_block_group(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %1, i32 0, i32 1
  %offset = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %offset, align 8
  %size = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %size to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %size, align 8
  %flags1 = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %flags1 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %flags1, align 8
  %conv = trunc i64 %7 to i32
  %call3 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_btrfs_add_block_group.__flags) #23
  %bytes_used = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %bytes_used to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %bytes_used, align 8
  %bytes_super = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %bytes_super to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %bytes_super, align 8
  %create = getelementptr inbounds %struct.trace_event_raw_btrfs_add_block_group, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %create to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %create, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.265, ptr noundef %fsid, i64 noundef %3, i64 noundef %5, i64 noundef %7, ptr noundef %call3, i64 noundef %9, i64 noundef %11, i32 noundef %13) #23
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_delayed_tree_ref(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %1, i32 0, i32 1
  %bytenr = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %bytenr to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %bytenr, align 8
  %num_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %num_bytes, align 8
  %action = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %action to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %action, align 8
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_btrfs_delayed_tree_ref.symbols) #23
  %parent = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %parent to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %parent, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %9)
  %cmp3 = icmp ugt i64 %9, -10
  %10 = add i64 %9, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %10)
  %11 = icmp ult i64 %10, 8
  %or.cond = or i1 %cmp3, %11
  br i1 %or.cond, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call10 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %9, ptr noundef nonnull @trace_raw_output_btrfs_delayed_tree_ref.symbols.286) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call10, %cond.true ], [ @.str.173, %if.end.cond.end_crit_edge ]
  %ref_root = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %ref_root to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %ref_root, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %13)
  %cmp12 = icmp ugt i64 %13, -10
  %14 = add i64 %13, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %14)
  %15 = icmp ult i64 %14, 8
  %or.cond61 = or i1 %cmp12, %15
  br i1 %or.cond61, label %cond.true19, label %cond.end.cond.end24_crit_edge

cond.end.cond.end24_crit_edge:                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end24

cond.true19:                                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  %call22 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %13, ptr noundef nonnull @trace_raw_output_btrfs_delayed_tree_ref.symbols.287) #23
  br label %cond.end24

cond.end24:                                       ; preds = %cond.true19, %cond.end.cond.end24_crit_edge
  %cond25 = phi ptr [ %call22, %cond.true19 ], [ @.str.173, %cond.end.cond.end24_crit_edge ]
  %level = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %1, i32 0, i32 7
  %16 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %level, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %1, i32 0, i32 8
  %18 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %type, align 4
  %call27 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %19, ptr noundef nonnull @trace_raw_output_btrfs_delayed_tree_ref.symbols.288) #23
  %seq28 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_tree_ref, ptr %1, i32 0, i32 9
  %20 = ptrtoint ptr %seq28 to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %seq28, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.281, ptr noundef %fsid, i64 noundef %3, i64 noundef %5, ptr noundef %call1, i64 noundef %9, ptr noundef %cond, i64 noundef %13, ptr noundef %cond25, i32 noundef %17, ptr noundef %call27, i64 noundef %21) #23
  %call29 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end24, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call29, %cond.end24 ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_delayed_data_ref(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %1, i32 0, i32 1
  %bytenr = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %bytenr to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %bytenr, align 8
  %num_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %num_bytes, align 8
  %action = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %action to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %action, align 8
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_btrfs_delayed_data_ref.symbols) #23
  %parent = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %parent to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %parent, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %9)
  %cmp3 = icmp ugt i64 %9, -10
  %10 = add i64 %9, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %10)
  %11 = icmp ult i64 %10, 8
  %or.cond = or i1 %cmp3, %11
  br i1 %or.cond, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call10 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %9, ptr noundef nonnull @trace_raw_output_btrfs_delayed_data_ref.symbols.296) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call10, %cond.true ], [ @.str.173, %if.end.cond.end_crit_edge ]
  %ref_root = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %ref_root to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %ref_root, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %13)
  %cmp12 = icmp ugt i64 %13, -10
  %14 = add i64 %13, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %14)
  %15 = icmp ult i64 %14, 8
  %or.cond62 = or i1 %cmp12, %15
  br i1 %or.cond62, label %cond.true19, label %cond.end.cond.end24_crit_edge

cond.end.cond.end24_crit_edge:                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end24

cond.true19:                                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  %call22 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %13, ptr noundef nonnull @trace_raw_output_btrfs_delayed_data_ref.symbols.297) #23
  br label %cond.end24

cond.end24:                                       ; preds = %cond.true19, %cond.end.cond.end24_crit_edge
  %cond25 = phi ptr [ %call22, %cond.true19 ], [ @.str.173, %cond.end.cond.end24_crit_edge ]
  %owner = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %1, i32 0, i32 7
  %16 = ptrtoint ptr %owner to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %owner, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %1, i32 0, i32 8
  %18 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %offset, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %1, i32 0, i32 9
  %20 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %type, align 8
  %call27 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %21, ptr noundef nonnull @trace_raw_output_btrfs_delayed_data_ref.symbols.298) #23
  %seq28 = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_data_ref, ptr %1, i32 0, i32 10
  %22 = ptrtoint ptr %seq28 to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %seq28, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.295, ptr noundef %fsid, i64 noundef %3, i64 noundef %5, ptr noundef %call1, i64 noundef %9, ptr noundef %cond, i64 noundef %13, ptr noundef %cond25, i64 noundef %17, i64 noundef %19, ptr noundef %call27, i64 noundef %23) #23
  %call29 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end24, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call29, %cond.end24 ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_delayed_ref_head(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_ref_head, ptr %1, i32 0, i32 1
  %bytenr = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_ref_head, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %bytenr to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %bytenr, align 8
  %num_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_ref_head, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %num_bytes, align 8
  %action = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_ref_head, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %action to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %action, align 8
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_btrfs_delayed_ref_head.symbols) #23
  %is_data = getelementptr inbounds %struct.trace_event_raw_btrfs_delayed_ref_head, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %is_data to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %is_data, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.300, ptr noundef %fsid, i64 noundef %3, i64 noundef %5, ptr noundef %call1, i32 noundef %9) #23
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs__chunk(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %1, i32 0, i32 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %root_objectid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %root_objectid, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %3)
  %cmp2 = icmp ugt i64 %3, -10
  %4 = add i64 %3, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %4)
  %5 = icmp ult i64 %4, 8
  %or.cond = or i1 %cmp2, %5
  br i1 %or.cond, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call8 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %3, ptr noundef nonnull @trace_raw_output_btrfs__chunk.symbols) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call8, %cond.true ], [ @.str.173, %if.end.cond.end_crit_edge ]
  %offset = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %offset, align 8
  %size = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %1, i32 0, i32 6
  %8 = ptrtoint ptr %size to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %size, align 8
  %num_stripes = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %1, i32 0, i32 2
  %10 = ptrtoint ptr %num_stripes to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %num_stripes, align 8
  %sub_stripes = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %1, i32 0, i32 4
  %12 = ptrtoint ptr %sub_stripes to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sub_stripes, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_btrfs__chunk, ptr %1, i32 0, i32 3
  %14 = ptrtoint ptr %type to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %type, align 8
  %conv = trunc i64 %15 to i32
  %call10 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_btrfs__chunk.__flags) #23
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.303, ptr noundef %fsid, i64 noundef %3, ptr noundef %cond, i64 noundef %7, i64 noundef %9, i32 noundef %11, i32 noundef %13, ptr noundef %call10) #23
  %call11 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call11, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_cow_block(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %1, i32 0, i32 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %root_objectid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %root_objectid, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %3)
  %cmp2 = icmp ugt i64 %3, -10
  %4 = add i64 %3, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %4)
  %5 = icmp ult i64 %4, 8
  %or.cond = or i1 %cmp2, %5
  br i1 %or.cond, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call8 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %3, ptr noundef nonnull @trace_raw_output_btrfs_cow_block.symbols) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call8, %cond.true ], [ @.str.173, %if.end.cond.end_crit_edge ]
  %refs = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %refs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %refs, align 8
  %buf_start = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %buf_start to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %buf_start, align 8
  %buf_level = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %buf_level to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %buf_level, align 8
  %cow_start = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %cow_start to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %cow_start, align 8
  %cow_level = getelementptr inbounds %struct.trace_event_raw_btrfs_cow_block, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %cow_level to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cow_level, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.308, ptr noundef %fsid, i64 noundef %3, ptr noundef %cond, i32 noundef %7, i64 noundef %9, i32 noundef %11, i64 noundef %13, i32 noundef %15) #23
  %call9 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call9, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #10

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_space_reservation(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_space_reservation, ptr %1, i32 0, i32 1
  %__data_loc_type = getelementptr inbounds %struct.trace_event_raw_btrfs_space_reservation, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %__data_loc_type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_type, align 8
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %val = getelementptr inbounds %struct.trace_event_raw_btrfs_space_reservation, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %val to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %val, align 8
  %reserve = getelementptr inbounds %struct.trace_event_raw_btrfs_space_reservation, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %reserve to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %reserve, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  %cond = select i1 %tobool.not, ptr @.str.315, ptr @.str.313
  %bytes = getelementptr inbounds %struct.trace_event_raw_btrfs_space_reservation, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %bytes to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %bytes, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.314, ptr noundef %fsid, ptr noundef %add.ptr, i64 noundef %5, ptr noundef nonnull %cond, i64 noundef %9) #23
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_trigger_flush(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_trigger_flush, ptr %1, i32 0, i32 1
  %__data_loc_reason = getelementptr inbounds %struct.trace_event_raw_btrfs_trigger_flush, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %__data_loc_reason to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_reason, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %flush = getelementptr inbounds %struct.trace_event_raw_btrfs_trigger_flush, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %flush to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flush, align 8
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_btrfs_trigger_flush.symbols) #23
  %flags3 = getelementptr inbounds %struct.trace_event_raw_btrfs_trigger_flush, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %flags3 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %flags3, align 8
  %conv = trunc i64 %7 to i32
  %call6 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_btrfs_trigger_flush.__flags) #23
  %bytes = getelementptr inbounds %struct.trace_event_raw_btrfs_trigger_flush, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %bytes to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %bytes, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.318, ptr noundef %fsid, ptr noundef %add.ptr, i32 noundef %5, ptr noundef %call2, i64 noundef %7, ptr noundef %call6, i64 noundef %9) #23
  %call7 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call7, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_flush_space(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_flush_space, ptr %1, i32 0, i32 1
  %state = getelementptr inbounds %struct.trace_event_raw_btrfs_flush_space, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %state, align 8
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %3, ptr noundef nonnull @trace_raw_output_btrfs_flush_space.symbols) #23
  %flags3 = getelementptr inbounds %struct.trace_event_raw_btrfs_flush_space, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %flags3 to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %flags3, align 8
  %conv = trunc i64 %5 to i32
  %call6 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_btrfs_flush_space.__flags) #23
  %num_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs_flush_space, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %num_bytes, align 8
  %ret7 = getelementptr inbounds %struct.trace_event_raw_btrfs_flush_space, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %ret7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ret7, align 4
  %for_preempt = getelementptr inbounds %struct.trace_event_raw_btrfs_flush_space, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %for_preempt to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %for_preempt, align 8, !range !2035
  %12 = zext i8 %11 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.323, ptr noundef %fsid, i32 noundef %3, ptr noundef %call2, i64 noundef %5, ptr noundef %call6, i64 noundef %7, i32 noundef %9, i32 noundef %12) #23
  %call9 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call9, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs__reserved_extent(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs__reserved_extent, ptr %1, i32 0, i32 1
  %call1 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef 2, ptr noundef nonnull @trace_raw_output_btrfs__reserved_extent.symbols) #23
  %start = getelementptr inbounds %struct.trace_event_raw_btrfs__reserved_extent, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %start, align 8
  %len = getelementptr inbounds %struct.trace_event_raw_btrfs__reserved_extent, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %len, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.325, ptr noundef %fsid, i64 noundef 2, ptr noundef %call1, i64 noundef %3, i64 noundef %5) #23
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_find_free_extent(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsid = getelementptr inbounds %struct.trace_event_raw_find_free_extent, ptr %1, i32 0, i32 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_find_free_extent, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %root_objectid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %root_objectid, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %3)
  %cmp2 = icmp ugt i64 %3, -10
  %4 = add i64 %3, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %4)
  %5 = icmp ult i64 %4, 8
  %or.cond = or i1 %cmp2, %5
  br i1 %or.cond, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call8 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %3, ptr noundef nonnull @trace_raw_output_find_free_extent.symbols) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call8, %cond.true ], [ @.str.173, %if.end.cond.end_crit_edge ]
  %num_bytes = getelementptr inbounds %struct.trace_event_raw_find_free_extent, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %num_bytes, align 8
  %empty_size = getelementptr inbounds %struct.trace_event_raw_find_free_extent, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %empty_size to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %empty_size, align 8
  %data = getelementptr inbounds %struct.trace_event_raw_find_free_extent, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %data to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %data, align 8
  %conv = trunc i64 %11 to i32
  %call11 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_find_free_extent.__flags) #23
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.328, ptr noundef %fsid, i64 noundef %3, ptr noundef %cond, i64 noundef %7, i64 noundef %9, i64 noundef %11, ptr noundef %call11) #23
  %call12 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call12, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs__reserve_extent(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs__reserve_extent, ptr %1, i32 0, i32 1
  %call1 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef 2, ptr noundef nonnull @trace_raw_output_btrfs__reserve_extent.symbols) #23
  %bg_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs__reserve_extent, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %bg_objectid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %bg_objectid, align 8
  %flags2 = getelementptr inbounds %struct.trace_event_raw_btrfs__reserve_extent, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %flags2 to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %flags2, align 8
  %conv = trunc i64 %5 to i32
  %call5 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_btrfs__reserve_extent.__flags) #23
  %start = getelementptr inbounds %struct.trace_event_raw_btrfs__reserve_extent, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %start, align 8
  %len = getelementptr inbounds %struct.trace_event_raw_btrfs__reserve_extent, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %len, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.330, ptr noundef %fsid, i64 noundef 2, ptr noundef %call1, i64 noundef %3, i64 noundef %5, ptr noundef %call5, i64 noundef %7, i64 noundef %9) #23
  %call6 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_find_cluster(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %1, i32 0, i32 1
  %bg_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %bg_objectid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %bg_objectid, align 8
  %flags1 = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %flags1 to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %flags1, align 8
  %conv = trunc i64 %5 to i32
  %call3 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_btrfs_find_cluster.__flags) #23
  %start = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %start, align 8
  %bytes = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %bytes to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %bytes, align 8
  %empty_size = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %empty_size to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %empty_size, align 8
  %min_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs_find_cluster, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %min_bytes to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %min_bytes, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.332, ptr noundef %fsid, i64 noundef %3, i64 noundef %5, ptr noundef %call3, i64 noundef %7, i64 noundef %9, i64 noundef %11, i64 noundef %13) #23
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_failed_cluster_setup(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_failed_cluster_setup, ptr %1, i32 0, i32 1
  %bg_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_failed_cluster_setup, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %bg_objectid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %bg_objectid, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.333, ptr noundef %fsid, i64 noundef %3) #23
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_setup_cluster(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %1, i32 0, i32 1
  %bg_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %bg_objectid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %bg_objectid, align 8
  %flags1 = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %flags1 to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %flags1, align 8
  %conv = trunc i64 %5 to i32
  %call3 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_btrfs_setup_cluster.__flags) #23
  %start = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %start, align 8
  %size = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %1, i32 0, i32 6
  %8 = ptrtoint ptr %size to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %size, align 8
  %max_size = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %max_size to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %max_size, align 8
  %bitmap = getelementptr inbounds %struct.trace_event_raw_btrfs_setup_cluster, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %bitmap to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %bitmap, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.336, ptr noundef %fsid, i64 noundef %3, i64 noundef %5, ptr noundef %call3, i64 noundef %7, i64 noundef %9, i64 noundef %11, i32 noundef %13) #23
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_alloc_extent_state(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %state = getelementptr inbounds %struct.trace_event_raw_alloc_extent_state, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %state, align 4
  %mask = getelementptr inbounds %struct.trace_event_raw_alloc_extent_state, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mask, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %if.end.cond.end_crit_edge, label %cond.true

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %5, ptr noundef nonnull @trace_raw_output_alloc_extent_state.__flags) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call2, %cond.true ], [ @.str.380, %if.end.cond.end_crit_edge ]
  %ip = getelementptr inbounds %struct.trace_event_raw_alloc_extent_state, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %ip to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ip, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.342, ptr noundef %3, ptr noundef %cond, ptr noundef %7) #23
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_free_extent_state(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %state = getelementptr inbounds %struct.trace_event_raw_free_extent_state, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %state, align 4
  %ip = getelementptr inbounds %struct.trace_event_raw_free_extent_state, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %ip to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ip, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.381, ptr noundef %3, ptr noundef %5) #23
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local ptr @btrfs_work_owner(ptr noundef) local_unnamed_addr #11

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs__work(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %1, i32 0, i32 1
  %work = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %work, align 4
  %normal_work = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %1, i32 0, i32 7
  %4 = ptrtoint ptr %normal_work to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %normal_work, align 4
  %wq = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %wq, align 4
  %func = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %func, align 4
  %ordered_func = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %ordered_func to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ordered_func, align 4
  %ordered_free = getelementptr inbounds %struct.trace_event_raw_btrfs__work, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %ordered_free to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ordered_free, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.390, ptr noundef %fsid, ptr noundef %3, ptr noundef %5, ptr noundef %7, ptr noundef %9, ptr noundef %11, ptr noundef %13) #23
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs__work__done(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs__work__done, ptr %1, i32 0, i32 1
  %wtag = getelementptr inbounds %struct.trace_event_raw_btrfs__work__done, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %wtag to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %wtag, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.391, ptr noundef %fsid, ptr noundef %3) #23
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local ptr @btrfs_workqueue_owner(ptr noundef) local_unnamed_addr #11

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs__workqueue(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs__workqueue, ptr %1, i32 0, i32 1
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_btrfs__workqueue, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %high = getelementptr inbounds %struct.trace_event_raw_btrfs__workqueue, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %high to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %high, align 4
  %call1 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.396, i32 noundef %5, ptr noundef nonnull @trace_raw_output_btrfs__workqueue.__flags) #23
  %wq = getelementptr inbounds %struct.trace_event_raw_btrfs__workqueue, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %wq, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.394, ptr noundef %fsid, ptr noundef %add.ptr, ptr noundef %call1, ptr noundef %7) #23
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs__workqueue_done(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs__workqueue_done, ptr %1, i32 0, i32 1
  %wq = getelementptr inbounds %struct.trace_event_raw_btrfs__workqueue_done, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %wq, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.397, ptr noundef %fsid, ptr noundef %3) #23
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs__qgroup_rsv_data(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %1, i32 0, i32 1
  %rootid = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %rootid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %rootid, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %ino, align 8
  %start = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %start, align 8
  %len = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %len, align 8
  %reserved = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %reserved to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %reserved, align 8
  %op = getelementptr inbounds %struct.trace_event_raw_btrfs__qgroup_rsv_data, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %op, align 8
  %call1 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.396, i32 noundef %13, ptr noundef nonnull @trace_raw_output_btrfs__qgroup_rsv_data.__flags) #23
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.401, ptr noundef %fsid, i64 noundef %3, i64 noundef %5, i64 noundef %7, i64 noundef %9, i64 noundef %11, ptr noundef %call1) #23
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_qgroup_extent(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_extent, ptr %1, i32 0, i32 1
  %bytenr = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_extent, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %bytenr to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %bytenr, align 8
  %num_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_extent, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %num_bytes, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.403, ptr noundef %fsid, i64 noundef %3, i64 noundef %5) #23
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_qgroup_num_dirty_extents(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_qgroup_num_dirty_extents, ptr %1, i32 0, i32 1
  %transid = getelementptr inbounds %struct.trace_event_raw_qgroup_num_dirty_extents, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %transid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %transid, align 8
  %num_dirty_extents = getelementptr inbounds %struct.trace_event_raw_qgroup_num_dirty_extents, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %num_dirty_extents to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %num_dirty_extents, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.406, ptr noundef %fsid, i64 noundef %3, i64 noundef %5) #23
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_qgroup_account_extent(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_account_extent, ptr %1, i32 0, i32 1
  %transid = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_account_extent, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %transid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %transid, align 8
  %bytenr = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_account_extent, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %bytenr to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %bytenr, align 8
  %num_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_account_extent, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %num_bytes to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %num_bytes, align 8
  %nr_old_roots = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_account_extent, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %nr_old_roots to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %nr_old_roots, align 8
  %nr_new_roots = getelementptr inbounds %struct.trace_event_raw_btrfs_qgroup_account_extent, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %nr_new_roots to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %nr_new_roots, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.409, ptr noundef %fsid, i64 noundef %3, i64 noundef %5, i64 noundef %7, i64 noundef %9, i64 noundef %11) #23
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_qgroup_update_counters(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_qgroup_update_counters, ptr %1, i32 0, i32 1
  %qgid = getelementptr inbounds %struct.trace_event_raw_qgroup_update_counters, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %qgid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %qgid, align 8
  %old_rfer = getelementptr inbounds %struct.trace_event_raw_qgroup_update_counters, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %old_rfer to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %old_rfer, align 8
  %old_excl = getelementptr inbounds %struct.trace_event_raw_qgroup_update_counters, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %old_excl to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %old_excl, align 8
  %cur_old_count = getelementptr inbounds %struct.trace_event_raw_qgroup_update_counters, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %cur_old_count to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %cur_old_count, align 8
  %cur_new_count = getelementptr inbounds %struct.trace_event_raw_qgroup_update_counters, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %cur_new_count to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %cur_new_count, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.415, ptr noundef %fsid, i64 noundef %3, i64 noundef %5, i64 noundef %7, i64 noundef %9, i64 noundef %11) #23
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_qgroup_update_reserve(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_qgroup_update_reserve, ptr %1, i32 0, i32 1
  %qgid = getelementptr inbounds %struct.trace_event_raw_qgroup_update_reserve, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %qgid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %qgid, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_qgroup_update_reserve, ptr %1, i32 0, i32 5
  %4 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %type, align 8
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_qgroup_update_reserve.symbols) #23
  %cur_reserved = getelementptr inbounds %struct.trace_event_raw_qgroup_update_reserve, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %cur_reserved to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %cur_reserved, align 8
  %diff = getelementptr inbounds %struct.trace_event_raw_qgroup_update_reserve, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %diff to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %diff, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.419, ptr noundef %fsid, i64 noundef %3, ptr noundef %call1, i64 noundef %7, i64 noundef %9) #23
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_qgroup_meta_reserve(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsid = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_reserve, ptr %1, i32 0, i32 1
  %refroot = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_reserve, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %refroot to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %refroot, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %3)
  %cmp2 = icmp ugt i64 %3, -10
  %4 = add i64 %3, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %4)
  %5 = icmp ult i64 %4, 8
  %or.cond = or i1 %cmp2, %5
  br i1 %or.cond, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call8 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %3, ptr noundef nonnull @trace_raw_output_qgroup_meta_reserve.symbols) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call8, %cond.true ], [ @.str.173, %if.end.cond.end_crit_edge ]
  %type = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_reserve, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type, align 8
  %call10 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_qgroup_meta_reserve.symbols.424) #23
  %diff = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_reserve, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %diff to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %diff, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.423, ptr noundef %fsid, i64 noundef %3, ptr noundef %cond, ptr noundef %call10, i64 noundef %9) #23
  %call11 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call11, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_qgroup_meta_convert(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsid = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_convert, ptr %1, i32 0, i32 1
  %refroot = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_convert, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %refroot to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %refroot, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %3)
  %cmp2 = icmp ugt i64 %3, -10
  %4 = add i64 %3, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %4)
  %5 = icmp ult i64 %4, 8
  %or.cond = or i1 %cmp2, %5
  br i1 %or.cond, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call8 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %3, ptr noundef nonnull @trace_raw_output_qgroup_meta_convert.symbols) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call8, %cond.true ], [ @.str.173, %if.end.cond.end_crit_edge ]
  %call10 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef 2, ptr noundef nonnull @trace_raw_output_qgroup_meta_convert.symbols.426) #23
  %call12 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef 1, ptr noundef nonnull @trace_raw_output_qgroup_meta_convert.symbols.427) #23
  %diff = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_convert, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %diff to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %diff, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.425, ptr noundef %fsid, i64 noundef %3, ptr noundef %cond, ptr noundef %call10, ptr noundef %call12, i64 noundef %7) #23
  %call13 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call13, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_qgroup_meta_free_all_pertrans(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsid = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_free_all_pertrans, ptr %1, i32 0, i32 1
  %refroot = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_free_all_pertrans, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %refroot to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %refroot, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %3)
  %cmp2 = icmp ugt i64 %3, -10
  %4 = add i64 %3, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %4)
  %5 = icmp ult i64 %4, 8
  %or.cond = or i1 %cmp2, %5
  br i1 %or.cond, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call8 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %3, ptr noundef nonnull @trace_raw_output_qgroup_meta_free_all_pertrans.symbols) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call8, %cond.true ], [ @.str.173, %if.end.cond.end_crit_edge ]
  %type = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_free_all_pertrans, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type, align 8
  %call10 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_qgroup_meta_free_all_pertrans.symbols.428) #23
  %diff = getelementptr inbounds %struct.trace_event_raw_qgroup_meta_free_all_pertrans, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %diff to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %diff, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.423, ptr noundef %fsid, i64 noundef %3, ptr noundef %cond, ptr noundef %call10, i64 noundef %9) #23
  %call11 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call11, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs__prelim_ref(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %1, i32 0, i32 1
  %root_id = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %root_id to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %root_id, align 8
  %objectid = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %objectid to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %objectid, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %type, align 8
  %conv = zext i8 %7 to i32
  %offset = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %offset, align 8
  %level = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %level, align 8
  %old_count = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %old_count to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %old_count, align 4
  %mod_count = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %1, i32 0, i32 10
  %14 = ptrtoint ptr %mod_count to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %mod_count, align 8
  %add = add i32 %15, %13
  %parent = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %parent to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %parent, align 8
  %bytenr = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %1, i32 0, i32 9
  %18 = ptrtoint ptr %bytenr to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %bytenr, align 8
  %tree_size = getelementptr inbounds %struct.trace_event_raw_btrfs__prelim_ref, ptr %1, i32 0, i32 11
  %20 = ptrtoint ptr %tree_size to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %tree_size, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.434, ptr noundef %fsid, i64 noundef %3, i64 noundef %5, i32 noundef %conv, i64 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %add, i64 noundef %17, i64 noundef %19, i64 noundef %21) #23
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_inode_mod_outstanding_extents(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_inode_mod_outstanding_extents, ptr %1, i32 0, i32 1
  %root_objectid = getelementptr inbounds %struct.trace_event_raw_btrfs_inode_mod_outstanding_extents, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %root_objectid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %root_objectid, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -10, i64 %3)
  %cmp2 = icmp ugt i64 %3, -10
  %4 = add i64 %3, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 8, i64 %4)
  %5 = icmp ult i64 %4, 8
  %or.cond = or i1 %cmp2, %5
  br i1 %or.cond, label %cond.true, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call8 = tail call ptr @trace_print_symbols_seq_u64(ptr noundef %tmp_seq, i64 noundef %3, ptr noundef nonnull @trace_raw_output_btrfs_inode_mod_outstanding_extents.symbols) #23
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call8, %cond.true ], [ @.str.173, %if.end.cond.end_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_inode_mod_outstanding_extents, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %ino, align 8
  %mod = getelementptr inbounds %struct.trace_event_raw_btrfs_inode_mod_outstanding_extents, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %mod to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mod, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.436, ptr noundef %fsid, i64 noundef %3, ptr noundef %cond, i64 noundef %7, i32 noundef %9) #23
  %call9 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call9, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs__block_group(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs__block_group, ptr %1, i32 0, i32 1
  %bytenr = getelementptr inbounds %struct.trace_event_raw_btrfs__block_group, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %bytenr to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %bytenr, align 8
  %len = getelementptr inbounds %struct.trace_event_raw_btrfs__block_group, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %len, align 8
  %used = getelementptr inbounds %struct.trace_event_raw_btrfs__block_group, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %used to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %used, align 8
  %flags1 = getelementptr inbounds %struct.trace_event_raw_btrfs__block_group, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %flags1 to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %flags1, align 8
  %conv = trunc i64 %9 to i32
  %call3 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_btrfs__block_group.__flags) #23
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.438, ptr noundef %fsid, i64 noundef %3, i64 noundef %5, i64 noundef %7, i64 noundef %9, ptr noundef %call3) #23
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_set_extent_bit(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %1, i32 0, i32 1
  %owner = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %owner, align 8
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %3, ptr noundef nonnull @trace_raw_output_btrfs_set_extent_bit.symbols) #23
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %ino, align 8
  %rootid = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %rootid to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %rootid, align 8
  %start = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %start, align 8
  %len = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %len, align 8
  %set_bits = getelementptr inbounds %struct.trace_event_raw_btrfs_set_extent_bit, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %set_bits to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %set_bits, align 8
  %call3 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %13, ptr noundef nonnull @trace_raw_output_btrfs_set_extent_bit.__flags) #23
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.441, ptr noundef %fsid, ptr noundef %call1, i64 noundef %5, i64 noundef %7, i64 noundef %9, i64 noundef %11, ptr noundef %call3) #23
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_clear_extent_bit(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %1, i32 0, i32 1
  %owner = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %owner, align 8
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %3, ptr noundef nonnull @trace_raw_output_btrfs_clear_extent_bit.symbols) #23
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %ino, align 8
  %rootid = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %rootid to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %rootid, align 8
  %start = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %start, align 8
  %len = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %len, align 8
  %clear_bits = getelementptr inbounds %struct.trace_event_raw_btrfs_clear_extent_bit, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %clear_bits to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %clear_bits, align 8
  %call3 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %13, ptr noundef nonnull @trace_raw_output_btrfs_clear_extent_bit.__flags) #23
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.468, ptr noundef %fsid, ptr noundef %call1, i64 noundef %5, i64 noundef %7, i64 noundef %9, i64 noundef %11, ptr noundef %call3) #23
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_convert_extent_bit(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %1, i32 0, i32 1
  %owner = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %owner, align 8
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %3, ptr noundef nonnull @trace_raw_output_btrfs_convert_extent_bit.symbols) #23
  %ino = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %ino, align 8
  %rootid = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %rootid to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %rootid, align 8
  %start = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %start, align 8
  %len = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %len, align 8
  %set_bits = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %set_bits to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %set_bits, align 8
  %call3 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %13, ptr noundef nonnull @trace_raw_output_btrfs_convert_extent_bit.__flags) #23
  %clear_bits = getelementptr inbounds %struct.trace_event_raw_btrfs_convert_extent_bit, ptr %1, i32 0, i32 8
  %14 = ptrtoint ptr %clear_bits to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %clear_bits, align 4
  %call5 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %15, ptr noundef nonnull @trace_raw_output_btrfs_convert_extent_bit.__flags.470) #23
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.469, ptr noundef %fsid, ptr noundef %call1, i64 noundef %5, i64 noundef %7, i64 noundef %9, i64 noundef %11, ptr noundef %call3, ptr noundef %call5) #23
  %call6 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @generic_atomic64_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @__percpu_counter_sum(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_dump_space_info(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %1, i32 0, i32 1
  %flags1 = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %flags1 to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %flags1, align 8
  %conv = trunc i64 %3 to i32
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_btrfs_dump_space_info.__flags) #23
  %total_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %total_bytes to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %total_bytes, align 8
  %bytes_used = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %bytes_used to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %bytes_used, align 8
  %bytes_pinned = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %bytes_pinned to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %bytes_pinned, align 8
  %bytes_reserved = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %bytes_reserved to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %bytes_reserved, align 8
  %bytes_may_use = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %bytes_may_use to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %bytes_may_use, align 8
  %bytes_readonly = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %1, i32 0, i32 8
  %14 = ptrtoint ptr %bytes_readonly to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %bytes_readonly, align 8
  %reclaim_size = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %1, i32 0, i32 9
  %16 = ptrtoint ptr %reclaim_size to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %reclaim_size, align 8
  %clamp = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %1, i32 0, i32 10
  %18 = ptrtoint ptr %clamp to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %clamp, align 8
  %global_reserved = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %1, i32 0, i32 11
  %20 = ptrtoint ptr %global_reserved to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %global_reserved, align 8
  %trans_reserved = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %1, i32 0, i32 12
  %22 = ptrtoint ptr %trans_reserved to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %trans_reserved, align 8
  %delayed_refs_reserved = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %1, i32 0, i32 13
  %24 = ptrtoint ptr %delayed_refs_reserved to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %delayed_refs_reserved, align 8
  %delayed_reserved = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %1, i32 0, i32 14
  %26 = ptrtoint ptr %delayed_reserved to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %delayed_reserved, align 8
  %free_chunk_space = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %1, i32 0, i32 15
  %28 = ptrtoint ptr %free_chunk_space to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %free_chunk_space, align 8
  %delalloc_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %1, i32 0, i32 16
  %30 = ptrtoint ptr %delalloc_bytes to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %delalloc_bytes, align 8
  %ordered_bytes = getelementptr inbounds %struct.trace_event_raw_btrfs_dump_space_info, ptr %1, i32 0, i32 17
  %32 = ptrtoint ptr %ordered_bytes to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %ordered_bytes, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.485, ptr noundef %fsid, ptr noundef %call2, i64 noundef %5, i64 noundef %7, i64 noundef %9, i64 noundef %11, i64 noundef %13, i64 noundef %15, i64 noundef %17, i32 noundef %19, i64 noundef %21, i64 noundef %23, i64 noundef %25, i64 noundef %27, i64 noundef %29, i64 noundef %31, i64 noundef %33) #23
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_reserve_ticket(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_reserve_ticket, ptr %1, i32 0, i32 1
  %flags1 = getelementptr inbounds %struct.trace_event_raw_btrfs_reserve_ticket, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %flags1 to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %flags1, align 8
  %conv = trunc i64 %3 to i32
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_btrfs_reserve_ticket.__flags) #23
  %bytes = getelementptr inbounds %struct.trace_event_raw_btrfs_reserve_ticket, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %bytes to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %bytes, align 8
  %start_ns = getelementptr inbounds %struct.trace_event_raw_btrfs_reserve_ticket, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %start_ns to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %start_ns, align 8
  %flush = getelementptr inbounds %struct.trace_event_raw_btrfs_reserve_ticket, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %flush to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flush, align 8
  %call4 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %9, ptr noundef nonnull @trace_raw_output_btrfs_reserve_ticket.symbols) #23
  %error = getelementptr inbounds %struct.trace_event_raw_btrfs_reserve_ticket, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %error, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.488, ptr noundef %fsid, ptr noundef %call2, i64 noundef %5, i64 noundef %7, ptr noundef %call4, i32 noundef %11) #23
  %call5 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.bswap.i64(i64) #12

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_sleep_tree_lock(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %1, i32 0, i32 1
  %block = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %block to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %block, align 8
  %generation = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %generation to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %generation, align 8
  %start_ns = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %start_ns to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %start_ns, align 8
  %end_ns = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %end_ns to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %end_ns, align 8
  %diff_ns = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %diff_ns to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %diff_ns, align 8
  %owner = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %owner to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %owner, align 8
  %is_log_tree = getelementptr inbounds %struct.trace_event_raw_btrfs_sleep_tree_lock, ptr %1, i32 0, i32 8
  %14 = ptrtoint ptr %is_log_tree to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %is_log_tree, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.493, ptr noundef %fsid, i64 noundef %3, i64 noundef %5, i64 noundef %7, i64 noundef %9, i64 noundef %11, i64 noundef %13, i32 noundef %15) #23
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs_locking_events(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs_locking_events, ptr %1, i32 0, i32 1
  %block = getelementptr inbounds %struct.trace_event_raw_btrfs_locking_events, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %block to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %block, align 8
  %generation = getelementptr inbounds %struct.trace_event_raw_btrfs_locking_events, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %generation to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %generation, align 8
  %owner = getelementptr inbounds %struct.trace_event_raw_btrfs_locking_events, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %owner to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %owner, align 8
  %is_log_tree = getelementptr inbounds %struct.trace_event_raw_btrfs_locking_events, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %is_log_tree to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %is_log_tree, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.494, ptr noundef %fsid, i64 noundef %3, i64 noundef %5, i64 noundef %7, i32 noundef %9) #23
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_btrfs__space_info_update(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsid = getelementptr inbounds %struct.trace_event_raw_btrfs__space_info_update, ptr %1, i32 0, i32 1
  %type = getelementptr inbounds %struct.trace_event_raw_btrfs__space_info_update, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %type to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %type, align 8
  %conv = trunc i64 %3 to i32
  %call1 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.203, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_btrfs__space_info_update.__flags) #23
  %old = getelementptr inbounds %struct.trace_event_raw_btrfs__space_info_update, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %old to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %old, align 8
  %diff = getelementptr inbounds %struct.trace_event_raw_btrfs__space_info_update, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %diff to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %diff, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.496, ptr noundef %fsid, ptr noundef %call1, i64 noundef %5, i64 noundef %7) #23
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #13

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #14

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #14

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run3(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run5(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run4(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run6(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kstrdup(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #15

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #16

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_get_32(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @btrfs_get_16(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__percpu_down_read(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_any_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcuwait_wake_up(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @misc_deregister(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @noop_llseek(ptr noundef, i64 noundef, i32 noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @btrfs_control_ioctl(ptr nocapture noundef readnone %file, i32 noundef %cmd, i32 noundef %arg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @capable(i32 noundef 21) #23
  br i1 %call, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = inttoptr i32 %arg to ptr
  %call1 = tail call ptr @memdup_user(ptr noundef %0, i32 noundef 4096) #23
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %1 = ptrtoint ptr %call1 to i32
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %name = getelementptr inbounds %struct.btrfs_ioctl_vol_args, ptr %call1, i32 0, i32 1
  %arrayidx = getelementptr %struct.btrfs_ioctl_vol_args, ptr %call1, i32 0, i32 1, i32 4087
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %arrayidx, align 1
  %3 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.651)
  switch i32 %cmd, label %if.end5.sw.epilog_crit_edge [
    i32 1342215172, label %sw.bb
    i32 1342215173, label %sw.bb9
    i32 -1879010265, label %sw.bb13
    i32 -2142727111, label %sw.bb22
  ]

if.end5.sw.epilog_crit_edge:                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @mutex_lock_nested(ptr noundef nonnull @uuid_mutex, i32 noundef 0) #23
  %call7 = tail call ptr @btrfs_scan_one_device(ptr noundef %name, i32 noundef 1, ptr noundef nonnull @btrfs_root_fs_type) #23
  %cmp.i.i = icmp ugt ptr %call7, inttoptr (i32 -4096 to ptr)
  %4 = ptrtoint ptr %call7 to i32
  %spec.select.i = select i1 %cmp.i.i, i32 %4, i32 0
  tail call void @mutex_unlock(ptr noundef nonnull @uuid_mutex) #23
  br label %sw.epilog

sw.bb9:                                           ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %call12 = tail call i32 @btrfs_forget_devices(ptr noundef %name) #23
  br label %sw.epilog

sw.bb13:                                          ; preds = %if.end5
  tail call void @mutex_lock_nested(ptr noundef nonnull @uuid_mutex, i32 noundef 0) #23
  %call16 = tail call ptr @btrfs_scan_one_device(ptr noundef %name, i32 noundef 1, ptr noundef nonnull @btrfs_root_fs_type) #23
  %cmp.i37 = icmp ugt ptr %call16, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i37, label %if.then18, label %if.end20

if.then18:                                        ; preds = %sw.bb13
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @mutex_unlock(ptr noundef nonnull @uuid_mutex) #23
  %5 = ptrtoint ptr %call16 to i32
  br label %sw.epilog

if.end20:                                         ; preds = %sw.bb13
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_device, ptr %call16, i32 0, i32 3
  %6 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %fs_devices, align 8
  %num_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %7, i32 0, i32 4
  %8 = ptrtoint ptr %num_devices to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %num_devices, align 8
  %total_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %7, i32 0, i32 9
  %10 = ptrtoint ptr %total_devices to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %total_devices, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %9, i64 %11)
  %cmp = icmp ne i64 %9, %11
  %lnot.ext = zext i1 %cmp to i32
  tail call void @mutex_unlock(ptr noundef nonnull @uuid_mutex) #23
  br label %sw.epilog

sw.bb22:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %call23 = tail call i32 @btrfs_ioctl_get_supported_features(ptr noundef %0) #23
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb22, %if.end20, %if.then18, %sw.bb9, %sw.bb, %if.end5.sw.epilog_crit_edge
  %ret.0 = phi i32 [ -25, %if.end5.sw.epilog_crit_edge ], [ %call23, %sw.bb22 ], [ %5, %if.then18 ], [ %lnot.ext, %if.end20 ], [ %call12, %sw.bb9 ], [ %spec.select.i, %sw.bb ]
  tail call void @kfree(ptr noundef %call1) #23
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %if.then3, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %1, %if.then3 ], [ %ret.0, %sw.epilog ], [ -1, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define internal i32 @btrfs_control_open(ptr nocapture noundef readnone %inode, ptr nocapture noundef writeonly %file) #17 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %private_data, align 4
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @capable(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @memdup_user(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_scan_one_device(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_forget_devices(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_ioctl_get_supported_features(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @btrfs_mount_root(ptr noundef %fs_type, i32 noundef %flags, ptr noundef %device_name, ptr noundef %data) #0 align 64 {
entry:
  %args.i = alloca [3 x %struct.substring_t], align 4
  %opts.i = alloca ptr, align 4
  %new_sec_opts = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %new_sec_opts) #23
  %0 = ptrtoint ptr %new_sec_opts to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %new_sec_opts, align 4
  %and = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %spec.select = select i1 %tobool.not, i32 3, i32 1
  %tobool1.not = icmp eq ptr %data, null
  br i1 %tobool1.not, label %entry.if.end7_crit_edge, label %if.then2

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end7

if.then2:                                         ; preds = %entry
  %call = call i32 @security_sb_eat_lsm_opts(ptr noundef nonnull %data, ptr noundef nonnull %new_sec_opts) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool3.not = icmp eq i32 %call, 0
  br i1 %tobool3.not, label %if.then2.if.end7_crit_edge, label %if.then4

if.then2.if.end7_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end7

if.then4:                                         ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #25
  %1 = inttoptr i32 %call to ptr
  br label %cleanup

if.end7:                                          ; preds = %if.then2.if.end7_crit_edge, %entry.if.end7_crit_edge
  %call.i.i = call noalias ptr @kvmalloc_node(i32 noundef 6056, i32 noundef 3520, i32 noundef -1) #34
  %tobool9.not = icmp eq ptr %call.i.i, null
  br i1 %tobool9.not, label %if.end7.error_sec_opts_crit_edge, label %if.end11

if.end7.error_sec_opts_crit_edge:                 ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #25
  br label %error_sec_opts

if.end11:                                         ; preds = %if.end7
  call void @btrfs_init_fs_info(ptr noundef nonnull %call.i.i) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12), align 4
  %call7.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 4096) #33
  %super_copy = getelementptr inbounds %struct.btrfs_fs_info, ptr %call.i.i, i32 0, i32 43
  %3 = ptrtoint ptr %super_copy to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %call7.i.i, ptr %super_copy, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12) to i32))
  %4 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12), align 4
  %call7.i.i128 = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %4, i32 noundef 3520, i32 noundef 4096) #33
  %super_for_commit = getelementptr inbounds %struct.btrfs_fs_info, ptr %call.i.i, i32 0, i32 44
  %5 = ptrtoint ptr %super_for_commit to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call7.i.i128, ptr %super_for_commit, align 4
  %6 = ptrtoint ptr %super_copy to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %super_copy, align 8
  %tobool15.not = icmp eq ptr %7, null
  %tobool17.not = icmp eq ptr %call7.i.i128, null
  %or.cond = select i1 %tobool15.not, i1 true, i1 %tobool17.not
  br i1 %or.cond, label %if.end11.error_fs_info_crit_edge, label %if.end19

if.end11.error_fs_info_crit_edge:                 ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #25
  br label %error_fs_info

if.end19:                                         ; preds = %if.end11
  call void @mutex_lock_nested(ptr noundef nonnull @uuid_mutex, i32 noundef 0) #23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %args.i) #23
  %8 = call ptr @memset(ptr %args.i, i32 255, i32 24)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %opts.i) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %9 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i = icmp eq i32 %9, 0
  br i1 %tobool.not.i, label %if.end19.if.end.i_crit_edge, label %land.rhs.i

if.end19.if.end.i_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

land.rhs.i:                                       ; preds = %if.end19
  %call.i.i129 = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @uuid_mutex, i32 0, i32 5), i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i129)
  %cmp.not.i = icmp eq i32 %call.i.i129, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !2020

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.65, i32 noundef 1063, i32 noundef 9, ptr noundef null) #23
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %if.end19.if.end.i_crit_edge
  br i1 %tobool1.not, label %btrfs_parse_device_options.exit.thread, label %if.end26.i

btrfs_parse_device_options.exit.thread:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %opts.i) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args.i) #23
  br label %if.end23

if.end26.i:                                       ; preds = %if.end.i
  %call27.i = call noalias ptr @kstrdup(ptr noundef nonnull %data, i32 noundef 3264) #23
  %10 = ptrtoint ptr %opts.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %call27.i, ptr %opts.i, align 4
  %tobool28.not.i = icmp eq ptr %call27.i, null
  br i1 %tobool28.not.i, label %btrfs_parse_device_options.exit.thread135, label %while.cond.preheader.i

btrfs_parse_device_options.exit.thread135:        ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %opts.i) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args.i) #23
  br label %if.then22

while.cond.preheader.i:                           ; preds = %if.end26.i
  %call3164.i = call ptr @strsep(ptr noundef nonnull %opts.i, ptr noundef nonnull @.str.84) #23
  %cmp32.not65.i = icmp eq ptr %call3164.i, null
  br i1 %cmp32.not65.i, label %while.cond.preheader.i.btrfs_parse_device_options.exit.thread139_crit_edge, label %while.cond.preheader.i.while.body.i_crit_edge

while.cond.preheader.i.while.body.i_crit_edge:    ; preds = %while.cond.preheader.i
  br label %while.body.i

while.cond.preheader.i.btrfs_parse_device_options.exit.thread139_crit_edge: ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_parse_device_options.exit.thread139

while.body.i:                                     ; preds = %cleanup.i.while.body.i_crit_edge, %while.cond.preheader.i.while.body.i_crit_edge
  %call3166.i = phi ptr [ %call31.i, %cleanup.i.while.body.i_crit_edge ], [ %call3164.i, %while.cond.preheader.i.while.body.i_crit_edge ]
  %11 = ptrtoint ptr %call3166.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %call3166.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool33.not.i = icmp eq i8 %12, 0
  br i1 %tobool33.not.i, label %while.body.i.cleanup.i_crit_edge, label %if.end35.i

while.body.i.cleanup.i_crit_edge:                 ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.i

if.end35.i:                                       ; preds = %while.body.i
  %call36.i = call i32 @match_token(ptr noundef nonnull %call3166.i, ptr noundef nonnull @tokens, ptr noundef nonnull %args.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %call36.i)
  %cmp37.i = icmp eq i32 %call36.i, 9
  br i1 %cmp37.i, label %if.then38.i, label %if.end35.i.cleanup.i_crit_edge

if.end35.i.cleanup.i_crit_edge:                   ; preds = %if.end35.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.i

if.then38.i:                                      ; preds = %if.end35.i
  %call39.i = call ptr @match_strdup(ptr noundef nonnull %args.i) #23
  %tobool40.not.i = icmp eq ptr %call39.i, null
  br i1 %tobool40.not.i, label %btrfs_parse_device_options.exit.thread142, label %if.end42.i

btrfs_parse_device_options.exit.thread142:        ; preds = %if.then38.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @kfree(ptr noundef nonnull %call27.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %opts.i) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args.i) #23
  br label %if.then22

if.end42.i:                                       ; preds = %if.then38.i
  %call43.i = call ptr @btrfs_scan_one_device(ptr noundef nonnull %call39.i, i32 noundef %spec.select, ptr noundef %fs_type) #23
  call void @kfree(ptr noundef nonnull %call39.i) #23
  %cmp.i.i = icmp ugt ptr %call43.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %btrfs_parse_device_options.exit, label %if.end42.i.cleanup.i_crit_edge

if.end42.i.cleanup.i_crit_edge:                   ; preds = %if.end42.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.end42.i.cleanup.i_crit_edge, %if.end35.i.cleanup.i_crit_edge, %while.body.i.cleanup.i_crit_edge
  %call31.i = call ptr @strsep(ptr noundef nonnull %opts.i, ptr noundef nonnull @.str.84) #23
  %cmp32.not.i = icmp eq ptr %call31.i, null
  br i1 %cmp32.not.i, label %cleanup.i.btrfs_parse_device_options.exit.thread139_crit_edge, label %cleanup.i.while.body.i_crit_edge

cleanup.i.while.body.i_crit_edge:                 ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body.i

cleanup.i.btrfs_parse_device_options.exit.thread139_crit_edge: ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_parse_device_options.exit.thread139

btrfs_parse_device_options.exit.thread139:        ; preds = %cleanup.i.btrfs_parse_device_options.exit.thread139_crit_edge, %while.cond.preheader.i.btrfs_parse_device_options.exit.thread139_crit_edge
  call void @kfree(ptr noundef nonnull %call27.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %opts.i) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args.i) #23
  br label %if.end23

btrfs_parse_device_options.exit:                  ; preds = %if.end42.i
  call void @__sanitizer_cov_trace_pc() #25
  %13 = ptrtoint ptr %call43.i to i32
  call void @kfree(ptr noundef nonnull %call27.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %opts.i) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args.i) #23
  br label %if.then22

if.then22:                                        ; preds = %btrfs_parse_device_options.exit, %btrfs_parse_device_options.exit.thread142, %btrfs_parse_device_options.exit.thread135
  %retval.0.i138 = phi i32 [ -12, %btrfs_parse_device_options.exit.thread135 ], [ %13, %btrfs_parse_device_options.exit ], [ -12, %btrfs_parse_device_options.exit.thread142 ]
  call void @mutex_unlock(ptr noundef nonnull @uuid_mutex) #23
  br label %error_fs_info

if.end23:                                         ; preds = %btrfs_parse_device_options.exit.thread139, %btrfs_parse_device_options.exit.thread
  %call24 = call ptr @btrfs_scan_one_device(ptr noundef %device_name, i32 noundef %spec.select, ptr noundef %fs_type) #23
  %cmp.i = icmp ugt ptr %call24, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #25
  call void @mutex_unlock(ptr noundef nonnull @uuid_mutex) #23
  %14 = ptrtoint ptr %call24 to i32
  br label %error_fs_info

if.end28:                                         ; preds = %if.end23
  %fs_devices29 = getelementptr inbounds %struct.btrfs_device, ptr %call24, i32 0, i32 3
  %15 = ptrtoint ptr %fs_devices29 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %fs_devices29, align 8
  %fs_devices30 = getelementptr inbounds %struct.btrfs_fs_info, ptr %call.i.i, i32 0, i32 100
  %17 = ptrtoint ptr %fs_devices30 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %16, ptr %fs_devices30, align 8
  %call31 = call i32 @btrfs_open_devices(ptr noundef %16, i32 noundef %spec.select, ptr noundef %fs_type) #23
  call void @mutex_unlock(ptr noundef nonnull @uuid_mutex) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.end34, label %if.end28.error_fs_info_crit_edge

if.end28.error_fs_info_crit_edge:                 ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #25
  br label %error_fs_info

if.end34:                                         ; preds = %if.end28
  br i1 %tobool.not, label %land.lhs.true, label %if.end34.if.end38_crit_edge

if.end34.if.end38_crit_edge:                      ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end38

land.lhs.true:                                    ; preds = %if.end34
  %rw_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %16, i32 0, i32 6
  %18 = ptrtoint ptr %rw_devices to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %rw_devices, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %19)
  %cmp = icmp eq i64 %19, 0
  br i1 %cmp, label %land.lhs.true.error_close_devices_crit_edge, label %land.lhs.true.if.end38_crit_edge

land.lhs.true.if.end38_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end38

land.lhs.true.error_close_devices_crit_edge:      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %error_close_devices

if.end38:                                         ; preds = %land.lhs.true.if.end38_crit_edge, %if.end34.if.end38_crit_edge
  %latest_dev = getelementptr inbounds %struct.btrfs_fs_devices, ptr %16, i32 0, i32 11
  %20 = ptrtoint ptr %latest_dev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %latest_dev, align 8
  %bdev39 = getelementptr inbounds %struct.btrfs_device, ptr %21, i32 0, i32 7
  %22 = ptrtoint ptr %bdev39 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %bdev39, align 8
  %or40 = or i32 %flags, 268435456
  %call41 = call ptr @sget(ptr noundef %fs_type, ptr noundef nonnull @btrfs_test_super, ptr noundef nonnull @btrfs_set_super, i32 noundef %or40, ptr noundef nonnull %call.i.i) #23
  %cmp.i130 = icmp ugt ptr %call41, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i130, label %if.then43, label %if.end45

if.then43:                                        ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #25
  %24 = ptrtoint ptr %call41 to i32
  br label %error_close_devices

if.end45:                                         ; preds = %if.end38
  %s_root = getelementptr inbounds %struct.super_block, ptr %call41, i32 0, i32 13
  %25 = ptrtoint ptr %s_root to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %s_root, align 64
  %tobool46.not = icmp eq ptr %26, null
  br i1 %tobool46.not, label %if.else, label %if.then47

if.then47:                                        ; preds = %if.end45
  call void @btrfs_close_devices(ptr noundef %16) #23
  call void @btrfs_free_fs_info(ptr noundef nonnull %call.i.i) #23
  %s_flags = getelementptr inbounds %struct.super_block, ptr %call41, i32 0, i32 10
  %27 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %s_flags, align 4
  %xor = xor i32 %28, %flags
  %and48 = and i32 %xor, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and48)
  %tobool49.not = icmp eq i32 %and48, 0
  br i1 %tobool49.not, label %if.then47.if.end65_crit_edge, label %if.then47.if.end65.thread_crit_edge

if.then47.if.end65.thread_crit_edge:              ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end65.thread

if.then47.if.end65_crit_edge:                     ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end65

if.else:                                          ; preds = %if.end45
  %s_id = getelementptr inbounds %struct.super_block, ptr %call41, i32 0, i32 39
  %call52 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %s_id, i32 noundef 32, ptr noundef nonnull @.str.584, ptr noundef %23)
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %call41, i32 0, i32 33
  %29 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %s_fs_info.i, align 16
  %bdev_holder = getelementptr inbounds %struct.btrfs_fs_info, ptr %30, i32 0, i32 122
  %31 = ptrtoint ptr %bdev_holder to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %fs_type, ptr %bdev_holder, align 4
  %call54 = call ptr @crc32c_impl() #23
  %call55 = call ptr @strstr(ptr noundef %call54, ptr noundef nonnull @.str.585)
  %tobool56.not = icmp eq ptr %call55, null
  br i1 %tobool56.not, label %if.then57, label %if.else.if.end61_crit_edge

if.else.if.end61_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end61

if.then57:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  %flags58 = getelementptr inbounds %struct.btrfs_fs_info, ptr %call.i.i, i32 0, i32 1
  call void @_set_bit(i32 noundef 15, ptr noundef %flags58) #23
  br label %if.end61

if.end61:                                         ; preds = %if.then57, %if.else.if.end61_crit_edge
  %call60 = call fastcc i32 @btrfs_fill_super(ptr noundef %call41, ptr noundef %16, ptr noundef %data)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool62.not = icmp eq i32 %call60, 0
  br i1 %tobool62.not, label %if.end61.if.end65_crit_edge, label %if.end61.if.end65.thread_crit_edge

if.end61.if.end65.thread_crit_edge:               ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end65.thread

if.end61.if.end65_crit_edge:                      ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end65

if.end65.thread:                                  ; preds = %if.end61.if.end65.thread_crit_edge, %if.then47.if.end65.thread_crit_edge
  %error.1.ph = phi i32 [ %call60, %if.end61.if.end65.thread_crit_edge ], [ -16, %if.then47.if.end65.thread_crit_edge ]
  call void @security_free_mnt_opts(ptr noundef nonnull %new_sec_opts) #23
  br label %if.then67

if.end65:                                         ; preds = %if.end61.if.end65_crit_edge, %if.then47.if.end65_crit_edge
  %32 = ptrtoint ptr %new_sec_opts to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %new_sec_opts, align 4
  %call64 = call i32 @security_sb_set_mnt_opts(ptr noundef %call41, ptr noundef %33, i32 noundef 0, ptr noundef null) #23
  call void @security_free_mnt_opts(ptr noundef nonnull %new_sec_opts) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call64)
  %tobool66.not = icmp eq i32 %call64, 0
  br i1 %tobool66.not, label %if.end69, label %if.end65.if.then67_crit_edge

if.end65.if.then67_crit_edge:                     ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then67

if.then67:                                        ; preds = %if.end65.if.then67_crit_edge, %if.end65.thread
  %error.1152 = phi i32 [ %error.1.ph, %if.end65.thread ], [ %call64, %if.end65.if.then67_crit_edge ]
  call void @deactivate_locked_super(ptr noundef %call41) #23
  %34 = inttoptr i32 %error.1152 to ptr
  br label %cleanup

if.end69:                                         ; preds = %if.end65
  %35 = ptrtoint ptr %s_root to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %s_root, align 64
  %tobool.not.i131 = icmp eq ptr %36, null
  br i1 %tobool.not.i131, label %if.end69.cleanup_crit_edge, label %if.then.i

if.end69.cleanup_crit_edge:                       ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then.i:                                        ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #25
  %d_lockref.i = getelementptr inbounds %struct.dentry, ptr %36, i32 0, i32 7
  call void @lockref_get(ptr noundef %d_lockref.i) #23
  br label %cleanup

error_close_devices:                              ; preds = %if.then43, %land.lhs.true.error_close_devices_crit_edge
  %error.2 = phi i32 [ %24, %if.then43 ], [ -13, %land.lhs.true.error_close_devices_crit_edge ]
  call void @btrfs_close_devices(ptr noundef %16) #23
  br label %error_fs_info

error_fs_info:                                    ; preds = %error_close_devices, %if.end28.error_fs_info_crit_edge, %if.then26, %if.then22, %if.end11.error_fs_info_crit_edge
  %error.3 = phi i32 [ %retval.0.i138, %if.then22 ], [ %14, %if.then26 ], [ %call31, %if.end28.error_fs_info_crit_edge ], [ %error.2, %error_close_devices ], [ -12, %if.end11.error_fs_info_crit_edge ]
  call void @btrfs_free_fs_info(ptr noundef nonnull %call.i.i) #23
  br label %error_sec_opts

error_sec_opts:                                   ; preds = %error_fs_info, %if.end7.error_sec_opts_crit_edge
  %error.4 = phi i32 [ %error.3, %error_fs_info ], [ -12, %if.end7.error_sec_opts_crit_edge ]
  call void @security_free_mnt_opts(ptr noundef nonnull %new_sec_opts) #23
  %37 = inttoptr i32 %error.4 to ptr
  br label %cleanup

cleanup:                                          ; preds = %error_sec_opts, %if.then.i, %if.end69.cleanup_crit_edge, %if.then67, %if.then4
  %retval.0 = phi ptr [ %1, %if.then4 ], [ %37, %error_sec_opts ], [ %34, %if.then67 ], [ null, %if.end69.cleanup_crit_edge ], [ %36, %if.then.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %new_sec_opts) #23
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @btrfs_kill_super(ptr noundef %sb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 33
  %0 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_fs_info.i, align 16
  tail call void @kill_anon_super(ptr noundef %sb) #23
  tail call void @btrfs_free_fs_info(ptr noundef %1) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_sb_eat_lsm_opts(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_init_fs_info(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_open_devices(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @sget(ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @btrfs_test_super(ptr nocapture noundef readonly %s, ptr nocapture noundef readonly %data) #18 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %s, i32 0, i32 33
  %0 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_fs_info.i, align 16
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 100
  %2 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %fs_devices, align 8
  %fs_devices1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %data, i32 0, i32 100
  %4 = ptrtoint ptr %fs_devices1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %fs_devices1, align 8
  %cmp = icmp eq ptr %3, %5
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @btrfs_set_super(ptr noundef %s, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @set_anon_super(ptr noundef %s, ptr noundef %data) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %s_fs_info = getelementptr inbounds %struct.super_block, ptr %s, i32 0, i32 33
  %0 = ptrtoint ptr %s_fs_info to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %data, ptr %s_fs_info, align 16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_close_devices(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_free_fs_info(ptr noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #19

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local ptr @strstr(ptr noundef, ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @crc32c_impl() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_fill_super(ptr noundef %sb, ptr noundef %fs_devices, ptr noundef %data) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 33
  %0 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_fs_info.i, align 16
  %s_maxbytes = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 4
  %2 = ptrtoint ptr %s_maxbytes to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 17592186040320, ptr %s_maxbytes, align 8
  %s_magic = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 12
  %3 = ptrtoint ptr %s_magic to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1859950530, ptr %s_magic, align 4
  %s_op = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 6
  %4 = ptrtoint ptr %s_op to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @btrfs_super_ops, ptr %s_op, align 4
  %s_d_op = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 45
  %5 = ptrtoint ptr %s_d_op to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr @btrfs_dentry_operations, ptr %s_d_op, align 8
  %s_export_op = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 9
  %6 = ptrtoint ptr %s_export_op to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr @btrfs_export_ops, ptr %s_export_op, align 16
  %s_vop = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 21
  %7 = ptrtoint ptr %s_vop to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @btrfs_verityops, ptr %s_vop, align 4
  %s_xattr = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 18
  %8 = ptrtoint ptr %s_xattr to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @btrfs_xattr_handlers, ptr %s_xattr, align 16
  %s_time_gran = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 34
  %9 = ptrtoint ptr %s_time_gran to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 1, ptr %s_time_gran, align 4
  %s_flags = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 10
  %10 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %s_flags, align 4
  %or2 = or i32 %11, 8454144
  store i32 %or2, ptr %s_flags, align 4
  %s_iflags = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 11
  %12 = ptrtoint ptr %s_iflags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %s_iflags, align 8
  %or3 = or i32 %13, 1
  store i32 %or3, ptr %s_iflags, align 8
  %call4 = tail call i32 @super_setup_bdi(ptr noundef %sb) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %1, ptr noundef nonnull @.str.586) #31
  br label %cleanup

if.end:                                           ; preds = %entry
  %call5 = tail call i32 @open_ctree(ptr noundef %sb, ptr noundef %fs_devices, ptr noundef %data) #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end8, label %if.then7

if.then7:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %1, ptr noundef nonnull @.str.587) #31
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %fs_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 5
  %14 = ptrtoint ptr %fs_root to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %fs_root, align 8
  %call9 = tail call ptr @btrfs_iget(ptr noundef %sb, i64 noundef 256, ptr noundef %15) #23
  %cmp.i = icmp ugt ptr %call9, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then11, label %if.end13

if.then11:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #25
  %16 = ptrtoint ptr %call9 to i32
  br label %fail_close

if.end13:                                         ; preds = %if.end8
  %call14 = tail call ptr @d_make_root(ptr noundef %call9) #23
  %s_root = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 13
  %17 = ptrtoint ptr %s_root to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %call14, ptr %s_root, align 64
  %tobool16.not = icmp eq ptr %call14, null
  br i1 %tobool16.not, label %if.end13.fail_close_crit_edge, label %if.end18

if.end13.fail_close_crit_edge:                    ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #25
  br label %fail_close

if.end18:                                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #25
  %18 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %s_flags, align 4
  %or20 = or i32 %19, 1073741824
  store i32 %or20, ptr %s_flags, align 4
  br label %cleanup

fail_close:                                       ; preds = %if.end13.fail_close_crit_edge, %if.then11
  %err.0 = phi i32 [ %16, %if.then11 ], [ -12, %if.end13.fail_close_crit_edge ]
  tail call void @close_ctree(ptr noundef %1) #30
  br label %cleanup

cleanup:                                          ; preds = %fail_close, %if.end18, %if.then7, %if.then
  %retval.0 = phi i32 [ %call4, %if.then ], [ %call5, %if.then7 ], [ %err.0, %fail_close ], [ 0, %if.end18 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_sb_set_mnt_opts(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @security_free_mnt_opts(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @deactivate_locked_super(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @kvmalloc_node(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #16

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @set_anon_super(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @super_setup_bdi(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @open_ctree(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_iget(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @d_make_root(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @close_ctree(ptr noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_alloc_inode(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_destroy_inode(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_free_inode(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_drop_inode(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_evict_inode(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @btrfs_put_super(ptr nocapture noundef readonly %sb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 33
  %0 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_fs_info.i, align 16
  tail call void @close_ctree(ptr noundef %1) #30
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @btrfs_freeze(ptr nocapture noundef readonly %sb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 33
  %0 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_fs_info.i, align 16
  %tree_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %tree_root to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tree_root, align 4
  %flags = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 1
  tail call void @_set_bit(i32 noundef 11, ptr noundef %flags) #23
  %call1 = tail call ptr @btrfs_attach_transaction_barrier(ptr noundef %3) #23
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %4 = ptrtoint ptr %call1 to i32
  %cmp = icmp eq ptr %call1, inttoptr (i32 -2 to ptr)
  %spec.select = select i1 %cmp, i32 0, i32 %4
  br label %cleanup

if.end6:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %call7 = tail call i32 @btrfs_commit_transaction(ptr noundef %call1) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.then
  %retval.0 = phi i32 [ %call7, %if.end6 ], [ %spec.select, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @btrfs_unfreeze(ptr nocapture noundef readonly %sb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 33
  %0 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_fs_info.i, align 16
  %flags = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 1
  tail call void @_clear_bit(i32 noundef 11, ptr noundef %flags) #23
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @btrfs_statfs(ptr nocapture noundef readonly %dentry, ptr nocapture noundef %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %d_sb = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 9
  %0 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 33
  %2 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_fs_info.i, align 16
  %super_copy = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 43
  %4 = ptrtoint ptr %super_copy to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %super_copy, align 8
  %sectorsize_bits = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 168
  %6 = ptrtoint ptr %sectorsize_bits to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sectorsize_bits, align 8
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 100
  %8 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %fs_devices, align 8
  %global_block_rsv = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 20
  %space_info = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 101
  %10 = ptrtoint ptr %space_info to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pn559 = load ptr, ptr %space_info, align 4
  %cmp.not561 = icmp eq ptr %.pn559, %space_info
  br i1 %cmp.not561, label %entry.for.end37_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end37_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end37

for.body:                                         ; preds = %if.end28.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn567 = phi ptr [ %.pn, %if.end28.for.body_crit_edge ], [ %.pn559, %entry.for.body_crit_edge ]
  %mixed.0566 = phi i32 [ %mixed.1, %if.end28.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %factor.0565 = phi i32 [ %factor.3, %if.end28.for.body_crit_edge ], [ 1, %entry.for.body_crit_edge ]
  %total_free_meta.0564 = phi i64 [ %total_free_meta.1, %if.end28.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %total_used.0563 = phi i64 [ %add30, %if.end28.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %total_free_data.0562 = phi i64 [ %total_free_data.1, %if.end28.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %flags = getelementptr i8, ptr %.pn567, i32 -8
  %11 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %flags, align 8
  %and = and i64 %12, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %for.body.if.end13_crit_edge, label %if.then

for.body.if.end13_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13

if.then:                                          ; preds = %for.body
  %found.0568 = getelementptr i8, ptr %.pn567, i32 -152
  %disk_total = getelementptr i8, ptr %.pn567, i32 -16
  %13 = ptrtoint ptr %disk_total to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %disk_total, align 8
  %disk_used = getelementptr i8, ptr %.pn567, i32 -24
  %15 = ptrtoint ptr %disk_used to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %disk_used, align 8
  %call3 = tail call i64 @btrfs_account_ro_block_groups_free_space(ptr noundef %found.0568) #23
  %17 = add i64 %16, %call3
  %block_groups = getelementptr i8, ptr %.pn567, i32 144
  %18 = ptrtoint ptr %block_groups to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %block_groups, align 4
  %cmp.i.not = icmp eq ptr %19, %block_groups
  br i1 %cmp.i.not, label %if.then.for.inc_crit_edge, label %if.then10

if.then.for.inc_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

if.then10:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_load8_noabort(i32 ptrtoint (ptr getelementptr inbounds ([9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 0, i32 10) to i32))
  %20 = load i64, ptr getelementptr inbounds ([9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 0, i32 10), align 8
  %call12 = tail call i32 @btrfs_bg_type_to_factor(i64 noundef %20) #23
  br label %for.inc

for.inc:                                          ; preds = %if.then10, %if.then.for.inc_crit_edge
  %factor.2 = phi i32 [ %factor.0565, %if.then.for.inc_crit_edge ], [ %call12, %if.then10 ]
  %arrayidx.1 = getelementptr i8, ptr %.pn567, i32 152
  %21 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile ptr, ptr %arrayidx.1, align 4
  %cmp.i.not.1 = icmp eq ptr %22, %arrayidx.1
  br i1 %cmp.i.not.1, label %for.inc.for.inc.1_crit_edge, label %if.then10.1

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.1

if.then10.1:                                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_load8_noabort(i32 ptrtoint (ptr getelementptr inbounds ([9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 1, i32 10) to i32))
  %23 = load i64, ptr getelementptr inbounds ([9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 1, i32 10), align 8
  %call12.1 = tail call i32 @btrfs_bg_type_to_factor(i64 noundef %23) #23
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then10.1, %for.inc.for.inc.1_crit_edge
  %factor.2.1 = phi i32 [ %factor.2, %for.inc.for.inc.1_crit_edge ], [ %call12.1, %if.then10.1 ]
  %arrayidx.2 = getelementptr i8, ptr %.pn567, i32 160
  %24 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile ptr, ptr %arrayidx.2, align 4
  %cmp.i.not.2 = icmp eq ptr %25, %arrayidx.2
  br i1 %cmp.i.not.2, label %for.inc.1.for.inc.2_crit_edge, label %if.then10.2

for.inc.1.for.inc.2_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.2

if.then10.2:                                      ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_load8_noabort(i32 ptrtoint (ptr getelementptr inbounds ([9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 2, i32 10) to i32))
  %26 = load i64, ptr getelementptr inbounds ([9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 2, i32 10), align 8
  %call12.2 = tail call i32 @btrfs_bg_type_to_factor(i64 noundef %26) #23
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then10.2, %for.inc.1.for.inc.2_crit_edge
  %factor.2.2 = phi i32 [ %factor.2.1, %for.inc.1.for.inc.2_crit_edge ], [ %call12.2, %if.then10.2 ]
  %arrayidx.3 = getelementptr i8, ptr %.pn567, i32 168
  %27 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile ptr, ptr %arrayidx.3, align 4
  %cmp.i.not.3 = icmp eq ptr %28, %arrayidx.3
  br i1 %cmp.i.not.3, label %for.inc.2.for.inc.3_crit_edge, label %if.then10.3

for.inc.2.for.inc.3_crit_edge:                    ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.3

if.then10.3:                                      ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_load8_noabort(i32 ptrtoint (ptr getelementptr inbounds ([9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 3, i32 10) to i32))
  %29 = load i64, ptr getelementptr inbounds ([9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 3, i32 10), align 8
  %call12.3 = tail call i32 @btrfs_bg_type_to_factor(i64 noundef %29) #23
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.then10.3, %for.inc.2.for.inc.3_crit_edge
  %factor.2.3 = phi i32 [ %factor.2.2, %for.inc.2.for.inc.3_crit_edge ], [ %call12.3, %if.then10.3 ]
  %arrayidx.4 = getelementptr i8, ptr %.pn567, i32 176
  %30 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile ptr, ptr %arrayidx.4, align 4
  %cmp.i.not.4 = icmp eq ptr %31, %arrayidx.4
  br i1 %cmp.i.not.4, label %for.inc.3.for.inc.4_crit_edge, label %if.then10.4

for.inc.3.for.inc.4_crit_edge:                    ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.4

if.then10.4:                                      ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_load8_noabort(i32 ptrtoint (ptr getelementptr inbounds ([9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 4, i32 10) to i32))
  %32 = load i64, ptr getelementptr inbounds ([9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 4, i32 10), align 8
  %call12.4 = tail call i32 @btrfs_bg_type_to_factor(i64 noundef %32) #23
  br label %for.inc.4

for.inc.4:                                        ; preds = %if.then10.4, %for.inc.3.for.inc.4_crit_edge
  %factor.2.4 = phi i32 [ %factor.2.3, %for.inc.3.for.inc.4_crit_edge ], [ %call12.4, %if.then10.4 ]
  %arrayidx.5 = getelementptr i8, ptr %.pn567, i32 184
  %33 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile ptr, ptr %arrayidx.5, align 4
  %cmp.i.not.5 = icmp eq ptr %34, %arrayidx.5
  br i1 %cmp.i.not.5, label %for.inc.4.for.inc.5_crit_edge, label %if.then10.5

for.inc.4.for.inc.5_crit_edge:                    ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.5

if.then10.5:                                      ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_load8_noabort(i32 ptrtoint (ptr getelementptr inbounds ([9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 5, i32 10) to i32))
  %35 = load i64, ptr getelementptr inbounds ([9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 5, i32 10), align 8
  %call12.5 = tail call i32 @btrfs_bg_type_to_factor(i64 noundef %35) #23
  br label %for.inc.5

for.inc.5:                                        ; preds = %if.then10.5, %for.inc.4.for.inc.5_crit_edge
  %factor.2.5 = phi i32 [ %factor.2.4, %for.inc.4.for.inc.5_crit_edge ], [ %call12.5, %if.then10.5 ]
  %arrayidx.6 = getelementptr i8, ptr %.pn567, i32 192
  %36 = ptrtoint ptr %arrayidx.6 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile ptr, ptr %arrayidx.6, align 4
  %cmp.i.not.6 = icmp eq ptr %37, %arrayidx.6
  br i1 %cmp.i.not.6, label %for.inc.5.for.inc.6_crit_edge, label %if.then10.6

for.inc.5.for.inc.6_crit_edge:                    ; preds = %for.inc.5
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.6

if.then10.6:                                      ; preds = %for.inc.5
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_load8_noabort(i32 ptrtoint (ptr getelementptr inbounds ([9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 6, i32 10) to i32))
  %38 = load i64, ptr getelementptr inbounds ([9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 6, i32 10), align 8
  %call12.6 = tail call i32 @btrfs_bg_type_to_factor(i64 noundef %38) #23
  br label %for.inc.6

for.inc.6:                                        ; preds = %if.then10.6, %for.inc.5.for.inc.6_crit_edge
  %factor.2.6 = phi i32 [ %factor.2.5, %for.inc.5.for.inc.6_crit_edge ], [ %call12.6, %if.then10.6 ]
  %arrayidx.7 = getelementptr i8, ptr %.pn567, i32 200
  %39 = ptrtoint ptr %arrayidx.7 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile ptr, ptr %arrayidx.7, align 4
  %cmp.i.not.7 = icmp eq ptr %40, %arrayidx.7
  br i1 %cmp.i.not.7, label %for.inc.6.for.inc.7_crit_edge, label %if.then10.7

for.inc.6.for.inc.7_crit_edge:                    ; preds = %for.inc.6
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.7

if.then10.7:                                      ; preds = %for.inc.6
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_load8_noabort(i32 ptrtoint (ptr getelementptr inbounds ([9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 7, i32 10) to i32))
  %41 = load i64, ptr getelementptr inbounds ([9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 7, i32 10), align 8
  %call12.7 = tail call i32 @btrfs_bg_type_to_factor(i64 noundef %41) #23
  br label %for.inc.7

for.inc.7:                                        ; preds = %if.then10.7, %for.inc.6.for.inc.7_crit_edge
  %factor.2.7 = phi i32 [ %factor.2.6, %for.inc.6.for.inc.7_crit_edge ], [ %call12.7, %if.then10.7 ]
  %arrayidx.8 = getelementptr i8, ptr %.pn567, i32 208
  %42 = ptrtoint ptr %arrayidx.8 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile ptr, ptr %arrayidx.8, align 4
  %cmp.i.not.8 = icmp eq ptr %43, %arrayidx.8
  br i1 %cmp.i.not.8, label %for.inc.7.for.inc.8_crit_edge, label %if.then10.8

for.inc.7.for.inc.8_crit_edge:                    ; preds = %for.inc.7
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.8

if.then10.8:                                      ; preds = %for.inc.7
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_load8_noabort(i32 ptrtoint (ptr getelementptr inbounds ([9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 8, i32 10) to i32))
  %44 = load i64, ptr getelementptr inbounds ([9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 8, i32 10), align 8
  %call12.8 = tail call i32 @btrfs_bg_type_to_factor(i64 noundef %44) #23
  br label %for.inc.8

for.inc.8:                                        ; preds = %if.then10.8, %for.inc.7.for.inc.8_crit_edge
  %factor.2.8 = phi i32 [ %factor.2.7, %for.inc.7.for.inc.8_crit_edge ], [ %call12.8, %if.then10.8 ]
  %.neg554 = add i64 %14, %total_free_data.0562
  %sub4 = sub i64 %.neg554, %17
  br label %if.end13

if.end13:                                         ; preds = %for.inc.8, %for.body.if.end13_crit_edge
  %total_free_data.1 = phi i64 [ %total_free_data.0562, %for.body.if.end13_crit_edge ], [ %sub4, %for.inc.8 ]
  %factor.3 = phi i32 [ %factor.0565, %for.body.if.end13_crit_edge ], [ %factor.2.8, %for.inc.8 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mixed.0566)
  %tobool14.not = icmp eq i32 %mixed.0566, 0
  br i1 %tobool14.not, label %land.lhs.true, label %if.end13.if.end28_crit_edge

if.end13.if.end28_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end28

land.lhs.true:                                    ; preds = %if.end13
  %45 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %flags, align 8
  %and16 = and i64 %46, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and16)
  %tobool17.not = icmp eq i64 %and16, 0
  br i1 %tobool17.not, label %land.lhs.true.if.end28_crit_edge, label %if.then18

land.lhs.true.if.end28_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end28

if.then18:                                        ; preds = %land.lhs.true
  %and20 = and i64 %46, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and20)
  %tobool21.not = icmp eq i64 %and20, 0
  br i1 %tobool21.not, label %if.else, label %if.then18.if.end28_crit_edge

if.then18.if.end28_crit_edge:                     ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end28

if.else:                                          ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #25
  %disk_total23 = getelementptr i8, ptr %.pn567, i32 -16
  %47 = ptrtoint ptr %disk_total23 to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %disk_total23, align 8
  %disk_used24 = getelementptr i8, ptr %.pn567, i32 -24
  %49 = ptrtoint ptr %disk_used24 to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %disk_used24, align 8
  %sub25 = add i64 %48, %total_free_meta.0564
  %add26 = sub i64 %sub25, %50
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then18.if.end28_crit_edge, %land.lhs.true.if.end28_crit_edge, %if.end13.if.end28_crit_edge
  %total_free_meta.1 = phi i64 [ %total_free_meta.0564, %if.end13.if.end28_crit_edge ], [ %add26, %if.else ], [ %total_free_meta.0564, %land.lhs.true.if.end28_crit_edge ], [ %total_free_meta.0564, %if.then18.if.end28_crit_edge ]
  %mixed.1 = phi i32 [ 1, %if.end13.if.end28_crit_edge ], [ 0, %if.else ], [ 0, %land.lhs.true.if.end28_crit_edge ], [ 1, %if.then18.if.end28_crit_edge ]
  %disk_used29 = getelementptr i8, ptr %.pn567, i32 -24
  %51 = ptrtoint ptr %disk_used29 to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %disk_used29, align 8
  %add30 = add i64 %52, %total_used.0563
  %53 = ptrtoint ptr %.pn567 to i32
  call void @__asan_load4_noabort(i32 %53)
  %.pn = load ptr, ptr %.pn567, align 4
  %cmp.not = icmp eq ptr %.pn, %space_info
  br i1 %cmp.not, label %if.end28.for.end37_crit_edge, label %if.end28.for.body_crit_edge

if.end28.for.body_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

if.end28.for.end37_crit_edge:                     ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end37

for.end37:                                        ; preds = %if.end28.for.end37_crit_edge, %entry.for.end37_crit_edge
  %total_free_data.0.lcssa = phi i64 [ 0, %entry.for.end37_crit_edge ], [ %total_free_data.1, %if.end28.for.end37_crit_edge ]
  %total_used.0.lcssa = phi i64 [ 0, %entry.for.end37_crit_edge ], [ %add30, %if.end28.for.end37_crit_edge ]
  %total_free_meta.0.lcssa = phi i64 [ 0, %entry.for.end37_crit_edge ], [ %total_free_meta.1, %if.end28.for.end37_crit_edge ]
  %factor.0.lcssa = phi i32 [ 1, %entry.for.end37_crit_edge ], [ %factor.3, %if.end28.for.end37_crit_edge ]
  %mixed.0.lcssa = phi i32 [ 0, %entry.for.end37_crit_edge ], [ %mixed.1, %if.end28.for.end37_crit_edge ]
  %total_bytes.i = getelementptr inbounds %struct.btrfs_super_block, ptr %5, i32 0, i32 10
  %54 = ptrtoint ptr %total_bytes.i to i32
  call void @__asan_loadN_noabort(i32 %54, i32 8)
  %55 = load i64, ptr %total_bytes.i, align 1
  %56 = tail call i64 @llvm.bswap.i64(i64 %55) #23
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %56)
  %cmp164.i.i = icmp ult i64 %56, 4294967296
  br i1 %cmp164.i.i, label %if.then168.i.i, label %if.else174.i.i, !prof !2019

if.then168.i.i:                                   ; preds = %for.end37
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i.i = trunc i64 %56 to i32
  %div172.i.i = udiv i32 %conv169.i.i, %factor.0.lcssa
  %conv173.i.i = zext i32 %div172.i.i to i64
  br label %if.else162.i.i291

if.else174.i.i:                                   ; preds = %for.end37
  call void @__sanitizer_cov_trace_pc() #25
  %57 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %factor.0.lcssa, i64 %56) #35, !srcloc !2036
  %asmresult1.i.i.i = extractvalue { i64, i64 } %57, 1
  br label %if.else162.i.i291

if.else162.i.i291:                                ; preds = %if.else174.i.i, %if.then168.i.i
  %dividend.addr.0.i.i = phi i64 [ %conv173.i.i, %if.then168.i.i ], [ %asmresult1.i.i.i, %if.else174.i.i ]
  %f_blocks = getelementptr inbounds %struct.kstatfs, ptr %buf, i32 0, i32 2
  %sh_prom = zext i32 %7 to i64
  %shr = lshr i64 %dividend.addr.0.i.i, %sh_prom
  %58 = ptrtoint ptr %f_blocks to i32
  call void @__asan_store8_noabort(i32 %58)
  store i64 %shr, ptr %f_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %total_used.0.lcssa)
  %cmp164.i.i290 = icmp ult i64 %total_used.0.lcssa, 4294967296
  br i1 %cmp164.i.i290, label %if.then168.i.i295, label %if.else174.i.i297, !prof !2019

if.then168.i.i295:                                ; preds = %if.else162.i.i291
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i.i292 = trunc i64 %total_used.0.lcssa to i32
  %div172.i.i293 = udiv i32 %conv169.i.i292, %factor.0.lcssa
  %conv173.i.i294 = zext i32 %div172.i.i293 to i64
  br label %div_u64.exit299

if.else174.i.i297:                                ; preds = %if.else162.i.i291
  call void @__sanitizer_cov_trace_pc() #25
  %59 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %factor.0.lcssa, i64 %total_used.0.lcssa) #35, !srcloc !2036
  %asmresult1.i.i.i296 = extractvalue { i64, i64 } %59, 1
  br label %div_u64.exit299

div_u64.exit299:                                  ; preds = %if.else174.i.i297, %if.then168.i.i295
  %dividend.addr.0.i.i298 = phi i64 [ %conv173.i.i294, %if.then168.i.i295 ], [ %asmresult1.i.i.i296, %if.else174.i.i297 ]
  %shr44 = lshr i64 %dividend.addr.0.i.i298, %sh_prom
  %sub45 = sub i64 %shr, %shr44
  %f_bfree = getelementptr inbounds %struct.kstatfs, ptr %buf, i32 0, i32 3
  %60 = ptrtoint ptr %f_bfree to i32
  call void @__asan_store8_noabort(i32 %60)
  store i64 %sub45, ptr %f_bfree, align 8
  %lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 20, i32 3
  tail call void @_raw_spin_lock(ptr noundef %lock) #23
  %61 = ptrtoint ptr %f_bfree to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %f_bfree, align 8
  %63 = ptrtoint ptr %global_block_rsv to i32
  call void @__asan_load8_noabort(i32 %63)
  %64 = load i64, ptr %global_block_rsv, align 8
  %shr48 = lshr i64 %64, %sh_prom
  %65 = tail call i64 @llvm.usub.sat.i64(i64 %62, i64 %shr48)
  %66 = ptrtoint ptr %f_bfree to i32
  call void @__asan_store8_noabort(i32 %66)
  store i64 %65, ptr %f_bfree, align 8
  tail call void @_raw_spin_unlock(ptr noundef %lock) #23
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %total_free_data.0.lcssa)
  %cmp164.i.i404 = icmp ult i64 %total_free_data.0.lcssa, 4294967296
  br i1 %cmp164.i.i404, label %if.then168.i.i409, label %if.else174.i.i411, !prof !2019

if.then168.i.i409:                                ; preds = %div_u64.exit299
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i.i406 = trunc i64 %total_free_data.0.lcssa to i32
  %div172.i.i407 = udiv i32 %conv169.i.i406, %factor.0.lcssa
  %conv173.i.i408 = zext i32 %div172.i.i407 to i64
  br label %div_u64.exit413

if.else174.i.i411:                                ; preds = %div_u64.exit299
  call void @__sanitizer_cov_trace_pc() #25
  %67 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %factor.0.lcssa, i64 %total_free_data.0.lcssa) #35, !srcloc !2036
  %asmresult1.i.i.i410 = extractvalue { i64, i64 } %67, 1
  br label %div_u64.exit413

div_u64.exit413:                                  ; preds = %if.else174.i.i411, %if.then168.i.i409
  %dividend.addr.0.i.i412 = phi i64 [ %conv173.i.i408, %if.then168.i.i409 ], [ %asmresult1.i.i.i410, %if.else174.i.i411 ]
  %f_bavail = getelementptr inbounds %struct.kstatfs, ptr %buf, i32 0, i32 4
  %68 = ptrtoint ptr %f_bavail to i32
  call void @__asan_store8_noabort(i32 %68)
  store i64 %dividend.addr.0.i.i412, ptr %f_bavail, align 8
  %69 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %fs_devices, align 8
  %open_devices.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %70, i32 0, i32 5
  %71 = ptrtoint ptr %open_devices.i to i32
  call void @__asan_load8_noabort(i32 %71)
  %72 = load i64, ptr %open_devices.i, align 8
  %conv.i414 = trunc i64 %72 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv.i414)
  %tobool.not.i = icmp eq i32 %conv.i414, 0
  br i1 %tobool.not.i, label %do.end.i, label %div_u64.exit413.if.end14.i_crit_edge

div_u64.exit413.if.end14.i_crit_edge:             ; preds = %div_u64.exit413
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end14.i

do.end.i:                                         ; preds = %div_u64.exit413
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !2037
  %73 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %fs_devices, align 8
  %open_devices7.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %74, i32 0, i32 5
  %75 = ptrtoint ptr %open_devices7.i to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %open_devices7.i, align 8
  %conv8.i = trunc i64 %76 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv8.i)
  %tobool9.not.i = icmp eq i32 %conv8.i, 0
  br i1 %tobool9.not.i, label %cond.false.i, label %do.end.i.if.end14.i_crit_edge, !prof !2020

do.end.i.if.end14.i_crit_edge:                    ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end14.i

cond.false.i:                                     ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail() #32
  unreachable

if.end14.i:                                       ; preds = %do.end.i.if.end14.i_crit_edge, %div_u64.exit413.if.end14.i_crit_edge
  %nr_devices.0.i = phi i32 [ %conv.i414, %div_u64.exit413.if.end14.i_crit_edge ], [ %conv8.i, %do.end.i.if.end14.i_crit_edge ]
  %77 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %nr_devices.0.i, i32 32) #23
  %78 = extractvalue { i32, i1 } %77, 1
  br i1 %78, label %if.end14.i.cleanup_crit_edge, label %if.end7.i.i, !prof !2020

if.end14.i.cleanup_crit_edge:                     ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end7.i.i:                                      ; preds = %if.end14.i
  %79 = extractvalue { i32, i1 } %77, 0
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %79, i32 noundef 3264) #34
  %tobool15.not.i = icmp eq ptr %call8.i.i, null
  br i1 %tobool15.not.i, label %if.end7.i.i.cleanup_crit_edge, label %if.end17.i

if.end7.i.i.cleanup_crit_edge:                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end17.i:                                       ; preds = %if.end7.i.i
  %call.i199.i = tail call i64 @btrfs_get_alloc_profile(ptr noundef %3, i64 noundef 1) #23
  %call19.i = tail call i32 @btrfs_bg_flags_to_raid_index(i64 noundef %call.i199.i) #29
  %and.i = and i64 %call.i199.i, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool20.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool20.not.i, label %if.else.i, label %if.end17.i.if.end41.i_crit_edge

if.end17.i.if.end41.i_crit_edge:                  ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end41.i

if.else.i:                                        ; preds = %if.end17.i
  %and22.i = and i64 %call.i199.i, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and22.i)
  %tobool23.not.i = icmp eq i64 %and22.i, 0
  br i1 %tobool23.not.i, label %if.else25.i, label %if.else.i.if.end41.i_crit_edge

if.else.i.if.end41.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end41.i

if.else25.i:                                      ; preds = %if.else.i
  %and26.i = and i64 %call.i199.i, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and26.i)
  %tobool27.not.i = icmp eq i64 %and26.i, 0
  br i1 %tobool27.not.i, label %if.else29.i, label %if.else25.i.if.end41.i_crit_edge

if.else25.i.if.end41.i_crit_edge:                 ; preds = %if.else25.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end41.i

if.else29.i:                                      ; preds = %if.else25.i
  %and30.i = and i64 %call.i199.i, 1024
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and30.i)
  %tobool31.not.i = icmp eq i64 %and30.i, 0
  br i1 %tobool31.not.i, label %if.else33.i, label %if.else29.i.if.end41.i_crit_edge

if.else29.i.if.end41.i_crit_edge:                 ; preds = %if.else29.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end41.i

if.else33.i:                                      ; preds = %if.else29.i
  call void @__sanitizer_cov_trace_pc() #25
  %and34.i = and i64 %call.i199.i, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and34.i)
  %tobool35.not.i = icmp eq i64 %and34.i, 0
  %spec.select.i = select i1 %tobool35.not.i, i32 1, i32 4
  br label %if.end41.i

if.end41.i:                                       ; preds = %if.else33.i, %if.else29.i.if.end41.i_crit_edge, %if.else25.i.if.end41.i_crit_edge, %if.else.i.if.end41.i_crit_edge, %if.end17.i.if.end41.i_crit_edge
  %num_stripes.0.i = phi i32 [ %nr_devices.0.i, %if.end17.i.if.end41.i_crit_edge ], [ 2, %if.else.i.if.end41.i_crit_edge ], [ 3, %if.else25.i.if.end41.i_crit_edge ], [ 4, %if.else29.i.if.end41.i_crit_edge ], [ %spec.select.i, %if.else33.i ]
  %dev_stripes.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %call19.i, i32 1
  %80 = ptrtoint ptr %dev_stripes.i to i32
  call void @__asan_load1_noabort(i32 %80)
  %81 = load i8, ptr %dev_stripes.i, align 1
  %conv42.i = zext i8 %81 to i32
  %mul.i = shl nuw nsw i32 %conv42.i, 16
  %82 = zext i32 %mul.i to i64
  %83 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i.i.i.i.i.i = and i32 %83, -16384
  %84 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %84, i32 0, i32 1
  %85 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %86, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !2038
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #23
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i.i, label %if.end41.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

if.end41.i.rcu_read_lock.exit.i_crit_edge:        ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %if.end41.i
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i415 = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i415, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i416

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit.i

if.then.i.i416:                                   ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.593, i32 noundef 696, ptr noundef nonnull @.str.594) #23
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i416, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %if.end41.i.rcu_read_lock.exit.i_crit_edge
  %call45.i = tail call i32 @rcu_read_lock_any_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45.i)
  %tobool46.not.i = icmp eq i32 %call45.i, 0
  br i1 %tobool46.not.i, label %land.lhs.true.i, label %rcu_read_lock.exit.i.do.end54.i_crit_edge

rcu_read_lock.exit.i.do.end54.i_crit_edge:        ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end54.i

land.lhs.true.i:                                  ; preds = %rcu_read_lock.exit.i
  %call47.i = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call47.i)
  %tobool48.not.i = icmp eq i32 %call47.i, 0
  br i1 %tobool48.not.i, label %land.lhs.true.i.do.end54.i_crit_edge, label %land.lhs.true49.i

land.lhs.true.i.do.end54.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end54.i

land.lhs.true49.i:                                ; preds = %land.lhs.true.i
  %.b196.i = load i1, ptr @btrfs_calc_avail_data_space.__warned, align 1
  br i1 %.b196.i, label %land.lhs.true49.i.do.end54.i_crit_edge, label %if.then51.i

land.lhs.true49.i.do.end54.i_crit_edge:           ; preds = %land.lhs.true49.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end54.i

if.then51.i:                                      ; preds = %land.lhs.true49.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @btrfs_calc_avail_data_space.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.65, i32 noundef 2158, ptr noundef nonnull @.str.589) #23
  br label %do.end54.i

do.end54.i:                                       ; preds = %if.then51.i, %land.lhs.true49.i.do.end54.i_crit_edge, %land.lhs.true.i.do.end54.i_crit_edge, %rcu_read_lock.exit.i.do.end54.i_crit_edge
  %devices.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %70, i32 0, i32 13
  %87 = ptrtoint ptr %devices.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %device.0216.i = load volatile ptr, ptr %devices.i, align 8
  %cmp.not217.i = icmp eq ptr %device.0216.i, %devices.i
  br i1 %cmp.not217.i, label %do.end54.i.for.end.i_crit_edge, label %for.body.lr.ph.i

do.end54.i.for.end.i_crit_edge:                   ; preds = %do.end54.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %do.end54.i
  %add.i = add nuw nsw i64 %82, 1048576
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %device.0219.i = phi ptr [ %device.0216.i, %for.body.lr.ph.i ], [ %device.0.i, %for.inc.i.for.body.i_crit_edge ]
  %i.0218.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %i.1.i, %for.inc.i.for.body.i_crit_edge ]
  %dev_state.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0219.i, i32 0, i32 10
  %88 = ptrtoint ptr %dev_state.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %dev_state.i, align 4
  %90 = and i32 %89, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %90)
  %tobool62.not.i = icmp eq i32 %90, 0
  br i1 %tobool62.not.i, label %for.body.i.for.inc.i_crit_edge, label %lor.lhs.false.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %bdev.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0219.i, i32 0, i32 7
  %91 = ptrtoint ptr %bdev.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %bdev.i, align 8
  %tobool63.not.i = icmp eq ptr %92, null
  br i1 %tobool63.not.i, label %lor.lhs.false.i.for.inc.i_crit_edge, label %lor.lhs.false64.i

lor.lhs.false.i.for.inc.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i

lor.lhs.false64.i:                                ; preds = %lor.lhs.false.i
  %93 = ptrtoint ptr %dev_state.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load volatile i32, ptr %dev_state.i, align 4
  %95 = and i32 %94, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %95)
  %tobool67.not.i = icmp eq i32 %95, 0
  br i1 %tobool67.not.i, label %if.end69.i, label %lor.lhs.false64.i.for.inc.i_crit_edge

lor.lhs.false64.i.for.inc.i_crit_edge:            ; preds = %lor.lhs.false64.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i

if.end69.i:                                       ; preds = %lor.lhs.false64.i
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0218.i, i32 %nr_devices.0.i)
  %cmp70.not.i = icmp slt i32 %i.0218.i, %nr_devices.0.i
  br i1 %cmp70.not.i, label %if.end73.i, label %if.end69.i.for.end.i_crit_edge

if.end69.i.for.end.i_crit_edge:                   ; preds = %if.end69.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end.i

if.end73.i:                                       ; preds = %if.end69.i
  %total_bytes.i417 = getelementptr inbounds %struct.btrfs_device, ptr %device.0219.i, i32 0, i32 14
  %96 = ptrtoint ptr %total_bytes.i417 to i32
  call void @__asan_load8_noabort(i32 %96)
  %97 = load i64, ptr %total_bytes.i417, align 8
  %bytes_used.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0219.i, i32 0, i32 16
  %98 = ptrtoint ptr %bytes_used.i to i32
  call void @__asan_load8_noabort(i32 %98)
  %99 = load i64, ptr %bytes_used.i, align 8
  %sub.i = sub i64 %97, %99
  %sub75.i = and i64 %sub.i, -65536
  call void @__sanitizer_cov_trace_cmp8(i64 %sub75.i, i64 %add.i)
  %cmp76.not.i = icmp ugt i64 %sub75.i, %add.i
  br i1 %cmp76.not.i, label %if.end79.i, label %if.end73.i.for.inc.i_crit_edge

if.end73.i.for.inc.i_crit_edge:                   ; preds = %if.end73.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i

if.end79.i:                                       ; preds = %if.end73.i
  call void @__sanitizer_cov_trace_pc() #25
  %sub80.i = add i64 %sub75.i, -1048576
  %arrayidx81.i = getelementptr %struct.btrfs_device_info, ptr %call8.i.i, i32 %i.0218.i
  %100 = ptrtoint ptr %arrayidx81.i to i32
  call void @__asan_store4_noabort(i32 %100)
  store ptr %device.0219.i, ptr %arrayidx81.i, align 32
  %max_avail.i = getelementptr %struct.btrfs_device_info, ptr %call8.i.i, i32 %i.0218.i, i32 2
  %101 = ptrtoint ptr %max_avail.i to i32
  call void @__asan_store8_noabort(i32 %101)
  store i64 %sub80.i, ptr %max_avail.i, align 16
  %inc.i = add nsw i32 %i.0218.i, 1
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end79.i, %if.end73.i.for.inc.i_crit_edge, %lor.lhs.false64.i.for.inc.i_crit_edge, %lor.lhs.false.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %i.1.i = phi i32 [ %i.0218.i, %lor.lhs.false64.i.for.inc.i_crit_edge ], [ %i.0218.i, %if.end73.i.for.inc.i_crit_edge ], [ %inc.i, %if.end79.i ], [ %i.0218.i, %lor.lhs.false.i.for.inc.i_crit_edge ], [ %i.0218.i, %for.body.i.for.inc.i_crit_edge ]
  %102 = ptrtoint ptr %device.0219.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %device.0.i = load volatile ptr, ptr %device.0219.i, align 8
  %cmp.not.i = icmp eq ptr %device.0.i, %devices.i
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end69.i.for.end.i_crit_edge, %do.end54.i.for.end.i_crit_edge
  %i.0.lcssa.i = phi i32 [ 0, %do.end54.i.for.end.i_crit_edge ], [ %i.1.i, %for.inc.i.for.end.i_crit_edge ], [ %i.0218.i, %if.end69.i.for.end.i_crit_edge ]
  %call.i200.i = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i200.i, label %for.end.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true.i203.i

for.end.i.rcu_read_unlock.exit.i_crit_edge:       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit.i

land.lhs.true.i203.i:                             ; preds = %for.end.i
  %call1.i201.i = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i201.i)
  %tobool.not.i202.i = icmp eq i32 %call1.i201.i, 0
  br i1 %tobool.not.i202.i, label %land.lhs.true.i203.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true2.i205.i

land.lhs.true.i203.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true.i203.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit.i

land.lhs.true2.i205.i:                            ; preds = %land.lhs.true.i203.i
  %.b4.i204.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i204.i, label %land.lhs.true2.i205.i.rcu_read_unlock.exit.i_crit_edge, label %if.then.i206.i

land.lhs.true2.i205.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true2.i205.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit.i

if.then.i206.i:                                   ; preds = %land.lhs.true2.i205.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.593, i32 noundef 724, ptr noundef nonnull @.str.595) #23
  br label %rcu_read_unlock.exit.i

rcu_read_unlock.exit.i:                           ; preds = %if.then.i206.i, %land.lhs.true2.i205.i.rcu_read_unlock.exit.i_crit_edge, %land.lhs.true.i203.i.rcu_read_unlock.exit.i_crit_edge, %for.end.i.rcu_read_unlock.exit.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !2039
  %103 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i.i.i.i.i207.i = and i32 %103, -16384
  %104 = inttoptr i32 %and.i.i.i.i.i207.i to ptr
  %preempt_count.i.i.i.i208.i = getelementptr inbounds %struct.thread_info, ptr %104, i32 0, i32 1
  %105 = ptrtoint ptr %preempt_count.i.i.i.i208.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load volatile i32, ptr %preempt_count.i.i.i.i208.i, align 4
  %sub.i.i.i.i = add i32 %106, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i208.i, align 4
  tail call void @rcu_read_unlock_strict() #23
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #23
  tail call void @sort(ptr noundef nonnull %call8.i.i, i32 noundef %i.0.lcssa.i, i32 noundef 32, ptr noundef nonnull @btrfs_cmp_device_free_bytes, ptr noundef null) #23
  %devs_min.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %call19.i, i32 3
  %107 = ptrtoint ptr %devs_min.i to i32
  call void @__asan_load1_noabort(i32 %107)
  %108 = load i8, ptr %devs_min.i, align 1
  %conv93.i = zext i8 %108 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0.lcssa.i, i32 %conv93.i)
  %cmp94.not224.i = icmp slt i32 %i.0.lcssa.i, %conv93.i
  br i1 %cmp94.not224.i, label %if.end64.thread, label %rcu_read_unlock.exit.i.while.body.i_crit_edge

rcu_read_unlock.exit.i.while.body.i_crit_edge:    ; preds = %rcu_read_unlock.exit.i
  br label %while.body.i

while.body.i:                                     ; preds = %if.end126.i.while.body.i_crit_edge, %rcu_read_unlock.exit.i.while.body.i_crit_edge
  %avail_space.0228.i = phi i64 [ %avail_space.1.i, %if.end126.i.while.body.i_crit_edge ], [ 0, %rcu_read_unlock.exit.i.while.body.i_crit_edge ]
  %num_stripes.1227.i = phi i32 [ %109, %if.end126.i.while.body.i_crit_edge ], [ %num_stripes.0.i, %rcu_read_unlock.exit.i.while.body.i_crit_edge ]
  %i.2.in226.i = phi i32 [ %i.2229.i, %if.end126.i.while.body.i_crit_edge ], [ %i.0.lcssa.i, %rcu_read_unlock.exit.i.while.body.i_crit_edge ]
  %i.2229.i = add nsw i32 %i.2.in226.i, -1
  %109 = tail call i32 @llvm.smin.i32(i32 %num_stripes.1227.i, i32 %i.2.in226.i) #23
  %max_avail103.i = getelementptr %struct.btrfs_device_info, ptr %call8.i.i, i32 %i.2229.i, i32 2
  %110 = ptrtoint ptr %max_avail103.i to i32
  call void @__asan_load8_noabort(i32 %110)
  %111 = load i64, ptr %max_avail103.i, align 16
  call void @__sanitizer_cov_trace_cmp8(i64 %111, i64 %82)
  %cmp104.not.i = icmp ult i64 %111, %82
  br i1 %cmp104.not.i, label %while.body.i.if.end126.i_crit_edge, label %if.then106.i

while.body.i.if.end126.i_crit_edge:               ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end126.i

if.then106.i:                                     ; preds = %while.body.i
  %conv109.i = sext i32 %109 to i64
  %mul110.i = mul i64 %111, %conv109.i
  %add111.i = add i64 %mul110.i, %avail_space.0228.i
  %sub115.i = sub i32 %i.2.in226.i, %109
  call void @__sanitizer_cov_trace_cmp4(i32 %sub115.i, i32 %i.2.in226.i)
  %cmp117.not221.not.i = icmp slt i32 %sub115.i, %i.2.in226.i
  br i1 %cmp117.not221.not.i, label %if.then106.i.for.body119.i_crit_edge, label %if.then106.i.if.end126.i_crit_edge

if.then106.i.if.end126.i_crit_edge:               ; preds = %if.then106.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end126.i

if.then106.i.for.body119.i_crit_edge:             ; preds = %if.then106.i
  br label %for.body119.i

for.body119.i:                                    ; preds = %for.body119.i.for.body119.i_crit_edge, %if.then106.i.for.body119.i_crit_edge
  %j.0222.i = phi i32 [ %inc124.i, %for.body119.i.for.body119.i_crit_edge ], [ %sub115.i, %if.then106.i.for.body119.i_crit_edge ]
  %max_avail121.i = getelementptr %struct.btrfs_device_info, ptr %call8.i.i, i32 %j.0222.i, i32 2
  %112 = ptrtoint ptr %max_avail121.i to i32
  call void @__asan_load8_noabort(i32 %112)
  %113 = load i64, ptr %max_avail121.i, align 16
  %sub122.i = sub i64 %113, %111
  store i64 %sub122.i, ptr %max_avail121.i, align 16
  %inc124.i = add nsw i32 %j.0222.i, 1
  %exitcond.not = icmp eq i32 %inc124.i, %i.2.in226.i
  br i1 %exitcond.not, label %for.body119.i.if.end126.i_crit_edge, label %for.body119.i.for.body119.i_crit_edge

for.body119.i.for.body119.i_crit_edge:            ; preds = %for.body119.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body119.i

for.body119.i.if.end126.i_crit_edge:              ; preds = %for.body119.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end126.i

if.end126.i:                                      ; preds = %for.body119.i.if.end126.i_crit_edge, %if.then106.i.if.end126.i_crit_edge, %while.body.i.if.end126.i_crit_edge
  %avail_space.1.i = phi i64 [ %avail_space.0228.i, %while.body.i.if.end126.i_crit_edge ], [ %add111.i, %if.then106.i.if.end126.i_crit_edge ], [ %add111.i, %for.body119.i.if.end126.i_crit_edge ]
  %cmp94.not.not.i = icmp sgt i32 %i.2.in226.i, %conv93.i
  br i1 %cmp94.not.not.i, label %if.end126.i.while.body.i_crit_edge, label %if.end64

if.end126.i.while.body.i_crit_edge:               ; preds = %if.end126.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body.i

if.end64:                                         ; preds = %if.end126.i
  tail call void @kfree(ptr noundef nonnull %call8.i.i) #23
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %avail_space.1.i)
  %cmp164.i.i522 = icmp ult i64 %avail_space.1.i, 4294967296
  %extract.t = trunc i64 %avail_space.1.i to i32
  br i1 %cmp164.i.i522, label %if.end64.if.then168.i.i527_crit_edge, label %if.else174.i.i529, !prof !2019

if.end64.if.then168.i.i527_crit_edge:             ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then168.i.i527

if.end64.thread:                                  ; preds = %rcu_read_unlock.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @kfree(ptr noundef nonnull %call8.i.i) #23
  br label %if.then168.i.i527

if.then168.i.i527:                                ; preds = %if.end64.thread, %if.end64.if.then168.i.i527_crit_edge
  %avail_space.0.lcssa.i550553.off0 = phi i32 [ %extract.t, %if.end64.if.then168.i.i527_crit_edge ], [ 0, %if.end64.thread ]
  %div172.i.i525 = udiv i32 %avail_space.0.lcssa.i550553.off0, %factor.0.lcssa
  %conv173.i.i526 = zext i32 %div172.i.i525 to i64
  br label %div_u64.exit531

if.else174.i.i529:                                ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #25
  %114 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %factor.0.lcssa, i64 %avail_space.1.i) #35, !srcloc !2036
  %asmresult1.i.i.i528 = extractvalue { i64, i64 } %114, 1
  br label %div_u64.exit531

div_u64.exit531:                                  ; preds = %if.else174.i.i529, %if.then168.i.i527
  %dividend.addr.0.i.i530 = phi i64 [ %conv173.i.i526, %if.then168.i.i527 ], [ %asmresult1.i.i.i528, %if.else174.i.i529 ]
  %115 = ptrtoint ptr %f_bavail to i32
  call void @__asan_load8_noabort(i32 %115)
  %116 = load i64, ptr %f_bavail, align 8
  %add67 = add i64 %116, %dividend.addr.0.i.i530
  %shr70 = lshr i64 %add67, %sh_prom
  store i64 %shr70, ptr %f_bavail, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mixed.0.lcssa)
  %tobool72.not = icmp eq i32 %mixed.0.lcssa, 0
  br i1 %tobool72.not, label %land.lhs.true73, label %div_u64.exit531.if.end82_crit_edge

div_u64.exit531.if.end82_crit_edge:               ; preds = %div_u64.exit531
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end82

land.lhs.true73:                                  ; preds = %div_u64.exit531
  %space_info74 = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 20, i32 2
  %117 = ptrtoint ptr %space_info74 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %space_info74, align 8
  %full = getelementptr inbounds %struct.btrfs_space_info, ptr %118, i32 0, i32 10
  %119 = ptrtoint ptr %full to i32
  call void @__asan_load1_noabort(i32 %119)
  %bf.load = load i8, ptr %full, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool75.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool75.not, label %land.lhs.true73.if.end82_crit_edge, label %land.lhs.true76

land.lhs.true73.if.end82_crit_edge:               ; preds = %land.lhs.true73
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end82

land.lhs.true76:                                  ; preds = %land.lhs.true73
  %sub77 = add i64 %total_free_meta.0.lcssa, -4194304
  %120 = ptrtoint ptr %global_block_rsv to i32
  call void @__asan_load8_noabort(i32 %120)
  %121 = load i64, ptr %global_block_rsv, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %sub77, i64 %121)
  %cmp79 = icmp ult i64 %sub77, %121
  br i1 %cmp79, label %if.then80, label %land.lhs.true76.if.end82_crit_edge

land.lhs.true76.if.end82_crit_edge:               ; preds = %land.lhs.true76
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end82

if.then80:                                        ; preds = %land.lhs.true76
  call void @__sanitizer_cov_trace_pc() #25
  %122 = ptrtoint ptr %f_bavail to i32
  call void @__asan_store8_noabort(i32 %122)
  store i64 0, ptr %f_bavail, align 8
  br label %if.end82

if.end82:                                         ; preds = %if.then80, %land.lhs.true76.if.end82_crit_edge, %land.lhs.true73.if.end82_crit_edge, %div_u64.exit531.if.end82_crit_edge
  %123 = ptrtoint ptr %buf to i32
  call void @__asan_store4_noabort(i32 %123)
  store i32 -1859950530, ptr %buf, align 8
  %124 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %d_sb, align 4
  %s_blocksize = getelementptr inbounds %struct.super_block, ptr %125, i32 0, i32 3
  %126 = ptrtoint ptr %s_blocksize to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %s_blocksize, align 16
  %f_bsize = getelementptr inbounds %struct.kstatfs, ptr %buf, i32 0, i32 1
  %128 = ptrtoint ptr %f_bsize to i32
  call void @__asan_store4_noabort(i32 %128)
  store i32 %127, ptr %f_bsize, align 4
  %f_namelen = getelementptr inbounds %struct.kstatfs, ptr %buf, i32 0, i32 8
  %129 = ptrtoint ptr %f_namelen to i32
  call void @__asan_store4_noabort(i32 %129)
  store i32 255, ptr %f_namelen, align 8
  %130 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %9, align 4
  %arrayidx85 = getelementptr i32, ptr %9, i32 2
  %132 = ptrtoint ptr %arrayidx85 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %arrayidx85, align 4
  %xor = xor i32 %133, %131
  %f_fsid = getelementptr inbounds %struct.kstatfs, ptr %buf, i32 0, i32 7
  %134 = ptrtoint ptr %f_fsid to i32
  call void @__asan_store4_noabort(i32 %134)
  store i32 %xor, ptr %f_fsid, align 8
  %arrayidx87 = getelementptr i32, ptr %9, i32 1
  %135 = ptrtoint ptr %arrayidx87 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %arrayidx87, align 4
  %arrayidx88 = getelementptr i32, ptr %9, i32 3
  %137 = ptrtoint ptr %arrayidx88 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %arrayidx88, align 4
  %xor89 = xor i32 %138, %136
  %arrayidx92 = getelementptr %struct.kstatfs, ptr %buf, i32 0, i32 7, i32 0, i32 1
  %139 = ptrtoint ptr %arrayidx92 to i32
  call void @__asan_store4_noabort(i32 %139)
  store i32 %xor89, ptr %arrayidx92, align 4
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %140 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %d_inode.i, align 8
  %add.ptr.i = getelementptr i8, ptr %141, i32 -864
  %142 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %add.ptr.i, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %143, i32 0, i32 7
  %144 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %144, i32 8)
  %145 = load i64, ptr %root_key, align 1
  %shr95 = lshr i64 %145, 32
  %146 = trunc i64 %shr95 to i32
  %conv100 = xor i32 %xor, %146
  store i32 %conv100, ptr %f_fsid, align 8
  %147 = load ptr, ptr %d_inode.i, align 8
  %add.ptr.i533 = getelementptr i8, ptr %147, i32 -864
  %148 = ptrtoint ptr %add.ptr.i533 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %add.ptr.i533, align 8
  %root_key104 = getelementptr inbounds %struct.btrfs_root, ptr %149, i32 0, i32 7
  %150 = ptrtoint ptr %root_key104 to i32
  call void @__asan_loadN_noabort(i32 %150, i32 8)
  %151 = load i64, ptr %root_key104, align 1
  %152 = trunc i64 %151 to i32
  %conv111 = xor i32 %xor89, %152
  store i32 %conv111, ptr %arrayidx92, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end82, %if.end7.i.i.cleanup_crit_edge, %if.end14.i.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end82 ], [ -12, %if.end7.i.i.cleanup_crit_edge ], [ -12, %if.end14.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @btrfs_remount(ptr noundef %sb, ptr nocapture noundef %flags, ptr noundef %data) #0 align 64 {
entry:
  %__wq_entry.i = alloca %struct.wait_queue_entry, align 4
  %new_sec_opts = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 33
  %0 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_fs_info.i, align 16
  %s_flags = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 10
  %2 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %s_flags, align 4
  %mount_opt = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 31
  %4 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mount_opt, align 8
  %compress_type = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 33
  %6 = ptrtoint ptr %compress_type to i32
  call void @__asan_load1_noabort(i32 %6)
  %bf.load = load i8, ptr %compress_type, align 8
  %bf.lshr = and i8 %bf.load, -16
  %max_inline = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 36
  %7 = ptrtoint ptr %max_inline to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %max_inline, align 8
  %thread_pool_size = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 91
  %9 = ptrtoint ptr %thread_pool_size to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %thread_pool_size, align 4
  %metadata_ratio = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 121
  %11 = ptrtoint ptr %metadata_ratio to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %metadata_ratio, align 8
  %call1 = tail call i32 @sync_filesystem(ptr noundef %sb) #23
  %fs_state = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 149
  tail call void @_set_bit(i32 noundef 1, ptr noundef %fs_state) #23
  %tobool.not = icmp eq ptr %data, null
  br i1 %tobool.not, label %entry.if.end9_crit_edge, label %if.then

entry.if.end9_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end9

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %new_sec_opts) #23
  %13 = ptrtoint ptr %new_sec_opts to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %new_sec_opts, align 4
  %call2 = call i32 @security_sb_eat_lsm_opts(ptr noundef nonnull %data, ptr noundef nonnull %new_sec_opts) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.end, label %if.end.thread

if.end.thread:                                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  call void @security_free_mnt_opts(ptr noundef nonnull %new_sec_opts) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %new_sec_opts) #23
  br label %restore

if.end:                                           ; preds = %if.then
  %14 = ptrtoint ptr %new_sec_opts to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %new_sec_opts, align 4
  %call5 = call i32 @security_sb_remount(ptr noundef %sb, ptr noundef %15) #23
  call void @security_free_mnt_opts(ptr noundef nonnull %new_sec_opts) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %new_sec_opts) #23
  br i1 %tobool6.not, label %if.end.if.end9_crit_edge, label %if.end.restore_crit_edge

if.end.restore_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %restore

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end9

if.end9:                                          ; preds = %if.end.if.end9_crit_edge, %entry.if.end9_crit_edge
  %16 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags, align 4
  %call10 = call i32 @btrfs_parse_options(ptr noundef %1, ptr noundef %data, i32 noundef %17)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.end13, label %if.end9.restore_crit_edge

if.end9.restore_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  br label %restore

if.end13:                                         ; preds = %if.end9
  %and.i = and i32 %5, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end13.btrfs_remount_begin.exit_crit_edge, label %land.lhs.true.i

if.end13.btrfs_remount_begin.exit_crit_edge:      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_remount_begin.exit

land.lhs.true.i:                                  ; preds = %if.end13
  %18 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags, align 4
  %20 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %mount_opt, align 8
  %and1.i197 = and i32 %21, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i197)
  %tobool2.not.i = icmp ne i32 %and1.i197, 0
  %and3.i = and i32 %19, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i)
  %tobool4.not.i = icmp eq i32 %and3.i, 0
  %or.cond.i = and i1 %tobool4.not.i, %tobool2.not.i
  br i1 %or.cond.i, label %land.lhs.true.i.btrfs_remount_begin.exit_crit_edge, label %do.body5.i

land.lhs.true.i.btrfs_remount_begin.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_remount_begin.exit

do.body5.i:                                       ; preds = %land.lhs.true.i
  call void @__might_sleep(ptr noundef nonnull @.str.65, i32 noundef 1855) #23
  %defrag_running.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 108
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %defrag_running.i, i32 noundef 4) #23
  %22 = ptrtoint ptr %defrag_running.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %defrag_running.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp.i = icmp eq i32 %23, 0
  br i1 %cmp.i, label %do.body5.i.do.end16.i_crit_edge, label %if.end.i

do.body5.i.do.end16.i_crit_edge:                  ; preds = %do.body5.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end16.i

if.end.i:                                         ; preds = %do.body5.i
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry.i) #23
  %24 = call ptr @memset(ptr %__wq_entry.i, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry.i, i32 noundef 0) #23
  %transaction_wait.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 39
  %call932.i = call i32 @prepare_to_wait_event(ptr noundef %transaction_wait.i, ptr noundef nonnull %__wq_entry.i, i32 noundef 2) #23
  %call.i.i2933.i = call zeroext i1 @__kasan_check_read(ptr noundef %defrag_running.i, i32 noundef 4) #23
  %25 = ptrtoint ptr %defrag_running.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %defrag_running.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp1234.i = icmp eq i32 %26, 0
  br i1 %cmp1234.i, label %if.end.i.for.end.i_crit_edge, label %if.end.i.cleanup.i_crit_edge

if.end.i.cleanup.i_crit_edge:                     ; preds = %if.end.i
  br label %cleanup.i

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end.i

cleanup.i:                                        ; preds = %cleanup.i.cleanup.i_crit_edge, %if.end.i.cleanup.i_crit_edge
  call void @schedule() #23
  %call9.i = call i32 @prepare_to_wait_event(ptr noundef %transaction_wait.i, ptr noundef nonnull %__wq_entry.i, i32 noundef 2) #23
  %call.i.i29.i = call zeroext i1 @__kasan_check_read(ptr noundef %defrag_running.i, i32 noundef 4) #23
  %27 = ptrtoint ptr %defrag_running.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %defrag_running.i, align 4
  %cmp12.i = icmp eq i32 %28, 0
  br i1 %cmp12.i, label %cleanup.i.for.end.i_crit_edge, label %cleanup.i.cleanup.i_crit_edge

cleanup.i.cleanup.i_crit_edge:                    ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.i

cleanup.i.for.end.i_crit_edge:                    ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end.i

for.end.i:                                        ; preds = %cleanup.i.for.end.i_crit_edge, %if.end.i.for.end.i_crit_edge
  call void @finish_wait(ptr noundef %transaction_wait.i, ptr noundef nonnull %__wq_entry.i) #23
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry.i) #23
  br label %do.end16.i

do.end16.i:                                       ; preds = %for.end.i, %do.body5.i.do.end16.i_crit_edge
  br i1 %tobool4.not.i, label %do.end16.i.btrfs_remount_begin.exit_crit_edge, label %if.then19.i

do.end16.i.btrfs_remount_begin.exit_crit_edge:    ; preds = %do.end16.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_remount_begin.exit

if.then19.i:                                      ; preds = %do.end16.i
  call void @__sanitizer_cov_trace_pc() #25
  %sb.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 45
  %29 = ptrtoint ptr %sb.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %sb.i, align 8
  %call20.i = call i32 @sync_filesystem(ptr noundef %30) #23
  br label %btrfs_remount_begin.exit

btrfs_remount_begin.exit:                         ; preds = %if.then19.i, %do.end16.i.btrfs_remount_begin.exit_crit_edge, %land.lhs.true.i.btrfs_remount_begin.exit_crit_edge, %if.end13.btrfs_remount_begin.exit_crit_edge
  %31 = ptrtoint ptr %thread_pool_size to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %thread_pool_size, align 4
  call fastcc void @btrfs_resize_thread_pool(ptr noundef %1, i32 noundef %32, i32 noundef %10)
  %33 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %mount_opt, align 8
  %super_copy.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 43
  %35 = ptrtoint ptr %super_copy.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %super_copy.i, align 8
  %compat_ro_flags.i.i = getelementptr inbounds %struct.btrfs_super_block, ptr %36, i32 0, i32 21
  %37 = ptrtoint ptr %compat_ro_flags.i.i to i32
  call void @__asan_loadN_noabort(i32 %37, i32 8)
  %38 = load i64, ptr %compat_ro_flags.i.i, align 1
  %39 = and i64 %38, 72057594037927936
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %39)
  %tobool18 = icmp eq i64 %39, 0
  %40 = and i32 %34, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %41 = icmp ne i32 %40, 0
  %cmp.not = xor i1 %41, %tobool18
  br i1 %cmp.not, label %btrfs_remount_begin.exit.if.end39_crit_edge, label %land.lhs.true

btrfs_remount_begin.exit.if.end39_crit_edge:      ; preds = %btrfs_remount_begin.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end39

land.lhs.true:                                    ; preds = %btrfs_remount_begin.exit
  %42 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %s_flags, align 4
  %and.i198 = and i32 %43, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i198)
  %tobool.i.not = icmp eq i32 %and.i198, 0
  br i1 %tobool.i.not, label %land.lhs.true.if.then24_crit_edge, label %lor.lhs.false

land.lhs.true.if.then24_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then24

lor.lhs.false:                                    ; preds = %land.lhs.true
  %44 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %flags, align 4
  %and22 = and i32 %45, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22)
  %tobool23.not = icmp eq i32 %and22, 0
  br i1 %tobool23.not, label %lor.lhs.false.if.end39_crit_edge, label %lor.lhs.false.if.then24_crit_edge

lor.lhs.false.if.then24_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then24

lor.lhs.false.if.end39_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end39

if.then24:                                        ; preds = %lor.lhs.false.if.then24_crit_edge, %land.lhs.true.if.then24_crit_edge
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %1, ptr noundef nonnull @.str.596) #31
  %46 = ptrtoint ptr %super_copy.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %super_copy.i, align 8
  %compat_ro_flags.i.i200 = getelementptr inbounds %struct.btrfs_super_block, ptr %47, i32 0, i32 21
  %48 = ptrtoint ptr %compat_ro_flags.i.i200 to i32
  call void @__asan_loadN_noabort(i32 %48, i32 8)
  %49 = load i64, ptr %compat_ro_flags.i.i200, align 1
  %50 = and i64 %49, 72057594037927936
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %50)
  %tobool26.not = icmp eq i64 %50, 0
  br i1 %tobool26.not, label %if.then24.if.end31_crit_edge, label %if.then27

if.then24.if.end31_crit_edge:                     ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end31

if.then27:                                        ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #25
  %51 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %mount_opt, align 8
  %or = and i32 %52, -33558529
  %and30 = or i32 %or, 33554432
  store i32 %and30, ptr %mount_opt, align 8
  br label %if.end31

if.end31:                                         ; preds = %if.then27, %if.then24.if.end31_crit_edge
  %call32 = call zeroext i1 @btrfs_free_space_cache_v1_active(ptr noundef %1) #23
  br i1 %call32, label %if.then33, label %if.end31.if.end39_crit_edge

if.end31.if.end39_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end39

if.then33:                                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #25
  %53 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %mount_opt, align 8
  %and35 = and i32 %54, -33558529
  %or37 = or i32 %and35, 4096
  store i32 %or37, ptr %mount_opt, align 8
  br label %if.end39

if.end39:                                         ; preds = %if.then33, %if.end31.if.end39_crit_edge, %lor.lhs.false.if.end39_crit_edge, %btrfs_remount_begin.exit.if.end39_crit_edge
  %55 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %flags, align 4
  %57 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %s_flags, align 4
  %and.i202 = and i32 %58, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i202)
  %tobool.i203 = icmp ne i32 %and.i202, 0
  %59 = and i32 %56, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %60 = icmp eq i32 %59, 0
  %cmp45 = xor i1 %60, %tobool.i203
  br i1 %cmp45, label %if.end39.out_crit_edge, label %if.end48

if.end39.out_crit_edge:                           ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end48:                                         ; preds = %if.end39
  br i1 %60, label %if.else, label %if.then51

if.then51:                                        ; preds = %if.end48
  %async_reclaim_work = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 156
  %call52 = call zeroext i1 @cancel_work_sync(ptr noundef %async_reclaim_work) #23
  %async_data_reclaim_work = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 157
  %call53 = call zeroext i1 @cancel_work_sync(ptr noundef %async_data_reclaim_work) #23
  call void @btrfs_discard_cleanup(ptr noundef %1) #23
  %uuid_tree_rescan_sem = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 155
  call void @down(ptr noundef %uuid_tree_rescan_sem) #23
  call void @up(ptr noundef %uuid_tree_rescan_sem) #23
  %61 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %s_flags, align 4
  %or.i = or i32 %62, 1
  store i32 %or.i, ptr %s_flags, align 4
  %63 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %s_fs_info.i, align 16
  %fs_state.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %64, i32 0, i32 149
  call void @_set_bit(i32 noundef 2, ptr noundef %fs_state.i) #23
  call void @btrfs_delete_unused_bgs(ptr noundef %1) #23
  %flags55 = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 1
  call void @__might_sleep(ptr noundef nonnull @.str.601, i32 noundef 73) #23
  %65 = ptrtoint ptr %flags55 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %flags55, align 4
  %67 = and i32 %66, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %67)
  %tobool.not.i205 = icmp eq i32 %67, 0
  br i1 %tobool.not.i205, label %if.then51.wait_on_bit.exit_crit_edge, label %if.end.i206

if.then51.wait_on_bit.exit_crit_edge:             ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #25
  br label %wait_on_bit.exit

if.end.i206:                                      ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #25
  %call3.i = call i32 @out_of_line_wait_on_bit(ptr noundef %flags55, i32 noundef 14, ptr noundef nonnull @bit_wait, i32 noundef 2) #23
  br label %wait_on_bit.exit

wait_on_bit.exit:                                 ; preds = %if.end.i206, %if.then51.wait_on_bit.exit_crit_edge
  call void @btrfs_run_delayed_iputs(ptr noundef %1) #23
  call void @btrfs_dev_replace_suspend_for_unmount(ptr noundef %1) #23
  %call57 = call i32 @btrfs_scrub_cancel(ptr noundef %1) #23
  %call58 = call i32 @btrfs_pause_balance(ptr noundef %1) #23
  %call59 = call i32 @btrfs_qgroup_wait_for_completion(ptr noundef %1, i1 noundef zeroext false) #23
  %call60 = call i32 @btrfs_commit_super(ptr noundef %1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %wait_on_bit.exit.out_crit_edge, label %wait_on_bit.exit.restore_crit_edge

wait_on_bit.exit.restore_crit_edge:               ; preds = %wait_on_bit.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %restore

wait_on_bit.exit.out_crit_edge:                   ; preds = %wait_on_bit.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.else:                                          ; preds = %if.end48
  %68 = ptrtoint ptr %fs_state to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile i32, ptr %fs_state, align 4
  %and1.i = and i32 %69, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool66.not = icmp eq i32 %and1.i, 0
  br i1 %tobool66.not, label %if.end70, label %if.then69, !prof !2019

if.then69:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %1, ptr noundef nonnull @.str.597) #31
  br label %restore

if.end70:                                         ; preds = %if.else
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 100
  %70 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %fs_devices, align 8
  %rw_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %71, i32 0, i32 6
  %72 = ptrtoint ptr %rw_devices to i32
  call void @__asan_load8_noabort(i32 %72)
  %73 = load i64, ptr %rw_devices, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %73)
  %cmp71 = icmp eq i64 %73, 0
  br i1 %cmp71, label %if.end70.restore_crit_edge, label %if.end74

if.end70.restore_crit_edge:                       ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #25
  br label %restore

if.end74:                                         ; preds = %if.end70
  %call75 = call zeroext i1 @btrfs_check_rw_degradable(ptr noundef %1, ptr noundef null) #23
  br i1 %call75, label %if.end77, label %if.then76

if.then76:                                        ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %1, ptr noundef nonnull @.str.598) #31
  br label %restore

if.end77:                                         ; preds = %if.end74
  %74 = ptrtoint ptr %super_copy.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %super_copy.i, align 8
  %log_root.i = getelementptr inbounds %struct.btrfs_super_block, ptr %75, i32 0, i32 8
  %76 = ptrtoint ptr %log_root.i to i32
  call void @__asan_loadN_noabort(i32 %76, i32 8)
  %77 = load i64, ptr %log_root.i, align 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %77)
  %cmp79.not = icmp eq i64 %77, 0
  br i1 %cmp79.not, label %if.end82, label %if.then81

if.then81:                                        ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %1, ptr noundef nonnull @.str.599) #31
  br label %restore

if.end82:                                         ; preds = %if.end77
  %call83 = call i32 @btrfs_start_pre_rw_mount(ptr noundef %1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call83)
  %tobool84.not = icmp eq i32 %call83, 0
  br i1 %tobool84.not, label %if.end86, label %if.end82.restore_crit_edge

if.end82.restore_crit_edge:                       ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #25
  br label %restore

if.end86:                                         ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #25
  %78 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %s_flags, align 4
  %and.i208 = and i32 %79, -2
  store i32 %and.i208, ptr %s_flags, align 4
  %80 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %s_fs_info.i, align 16
  %fs_state.i210 = getelementptr inbounds %struct.btrfs_fs_info, ptr %81, i32 0, i32 149
  call void @_clear_bit(i32 noundef 2, ptr noundef %fs_state.i210) #23
  %flags87 = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 1
  call void @_set_bit(i32 noundef 3, ptr noundef %flags87) #23
  br label %out

out:                                              ; preds = %if.end86, %wait_on_bit.exit.out_crit_edge, %if.end39.out_crit_edge
  %82 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %flags, align 4
  %or89 = or i32 %83, 8388608
  store i32 %or89, ptr %flags, align 4
  %transaction_kthread = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 89
  %84 = ptrtoint ptr %transaction_kthread to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %transaction_kthread, align 4
  %call90 = call i32 @wake_up_process(ptr noundef %85) #23
  %86 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %mount_opt, align 8
  %and.i212 = and i32 %87, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i212)
  %tobool.i213 = icmp ne i32 %and.i212, 0
  br i1 %tobool.not.i, label %out.if.end.i218_crit_edge, label %land.lhs.true.i216

out.if.end.i218_crit_edge:                        ; preds = %out
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i218

land.lhs.true.i216:                               ; preds = %out
  %and4.i = and i32 %87, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %land.lhs.true.i216.if.then.i_crit_edge, label %lor.lhs.false.i

land.lhs.true.i216.if.then.i_crit_edge:           ; preds = %land.lhs.true.i216
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %land.lhs.true.i216
  %sb.i217 = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 45
  %88 = ptrtoint ptr %sb.i217 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %sb.i217, align 8
  %s_flags.i.i = getelementptr inbounds %struct.super_block, ptr %89, i32 0, i32 10
  %90 = ptrtoint ptr %s_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %s_flags.i.i, align 4
  %and.i.i = and i32 %91, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %lor.lhs.false.i.if.end.i218_crit_edge, label %lor.lhs.false.i.if.then.i_crit_edge

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i

lor.lhs.false.i.if.end.i218_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i218

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %land.lhs.true.i216.if.then.i_crit_edge
  call void @btrfs_cleanup_defrag_inodes(ptr noundef %1) #23
  br label %if.end.i218

if.end.i218:                                      ; preds = %if.then.i, %lor.lhs.false.i.if.end.i218_crit_edge, %out.if.end.i218_crit_edge
  %and6.i = and i32 %5, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i)
  %tobool7.not.i = icmp eq i32 %and6.i, 0
  %92 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %mount_opt, align 8
  %and10.i = and i32 %93, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10.i)
  %tobool11.not.i = icmp eq i32 %and10.i, 0
  br i1 %tobool7.not.i, label %land.lhs.true8.i, label %land.lhs.true15.critedge.i

land.lhs.true8.i:                                 ; preds = %if.end.i218
  br i1 %tobool11.not.i, label %land.lhs.true8.i.if.end21.i_crit_edge, label %if.then12.i

land.lhs.true8.i.if.end21.i_crit_edge:            ; preds = %land.lhs.true8.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end21.i

if.then12.i:                                      ; preds = %land.lhs.true8.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @btrfs_discard_resume(ptr noundef %1) #23
  br label %if.end21.i

land.lhs.true15.critedge.i:                       ; preds = %if.end.i218
  br i1 %tobool11.not.i, label %if.then19.i219, label %land.lhs.true15.critedge.i.if.end21.i_crit_edge

land.lhs.true15.critedge.i.if.end21.i_crit_edge:  ; preds = %land.lhs.true15.critedge.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end21.i

if.then19.i219:                                   ; preds = %land.lhs.true15.critedge.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @btrfs_discard_cleanup(ptr noundef %1) #23
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.then19.i219, %land.lhs.true15.critedge.i.if.end21.i_crit_edge, %if.then12.i, %land.lhs.true8.i.if.end21.i_crit_edge
  %and.lobit.i = lshr exact i32 %and.i212, 12
  %call23.i = call zeroext i1 @btrfs_free_space_cache_v1_active(ptr noundef %1) #23
  %conv24.i = zext i1 %call23.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %and.lobit.i, i32 %conv24.i)
  %cmp.not.i = icmp eq i32 %and.lobit.i, %conv24.i
  br i1 %cmp.not.i, label %if.end21.i.btrfs_remount_cleanup.exit_crit_edge, label %if.then26.i

if.end21.i.btrfs_remount_cleanup.exit_crit_edge:  ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_remount_cleanup.exit

if.then26.i:                                      ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #25
  %call28.i = call i32 @btrfs_set_free_space_cache_v1_active(ptr noundef %1, i1 noundef zeroext %tobool.i213) #23
  br label %btrfs_remount_cleanup.exit

btrfs_remount_cleanup.exit:                       ; preds = %if.then26.i, %if.end21.i.btrfs_remount_cleanup.exit_crit_edge
  call void @btrfs_clear_oneshot_options(ptr noundef %1) #23
  br label %cleanup109

restore:                                          ; preds = %if.end82.restore_crit_edge, %if.then81, %if.then76, %if.end70.restore_crit_edge, %if.then69, %wait_on_bit.exit.restore_crit_edge, %if.end9.restore_crit_edge, %if.end.restore_crit_edge, %if.end.thread
  %ret.1 = phi i32 [ %call5, %if.end.restore_crit_edge ], [ %call10, %if.end9.restore_crit_edge ], [ %call60, %wait_on_bit.exit.restore_crit_edge ], [ -22, %if.then69 ], [ -22, %if.then81 ], [ %call83, %if.end82.restore_crit_edge ], [ -13, %if.then76 ], [ -13, %if.end70.restore_crit_edge ], [ %call2, %if.end.thread ]
  %94 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %s_flags, align 4
  %and.i221 = and i32 %95, 1
  %96 = or i32 %and.i221, %3
  %and96 = and i32 %96, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and96)
  %tobool97.not = icmp eq i32 %and96, 0
  br i1 %tobool97.not, label %if.then98, label %restore.if.end100_crit_edge

restore.if.end100_crit_edge:                      ; preds = %restore
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end100

if.then98:                                        ; preds = %restore
  call void @__sanitizer_cov_trace_pc() #25
  call void @_clear_bit(i32 noundef 2, ptr noundef %fs_state) #23
  br label %if.end100

if.end100:                                        ; preds = %if.then98, %restore.if.end100_crit_edge
  %97 = ptrtoint ptr %s_flags to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 %96, ptr %s_flags, align 4
  %98 = ptrtoint ptr %mount_opt to i32
  call void @__asan_store4_noabort(i32 %98)
  store i32 %5, ptr %mount_opt, align 8
  %99 = ptrtoint ptr %compress_type to i32
  call void @__asan_load1_noabort(i32 %99)
  %bf.load104 = load i8, ptr %compress_type, align 8
  %bf.clear = and i8 %bf.load104, 15
  %bf.set = or i8 %bf.clear, %bf.lshr
  store i8 %bf.set, ptr %compress_type, align 8
  %100 = ptrtoint ptr %max_inline to i32
  call void @__asan_store8_noabort(i32 %100)
  store i64 %8, ptr %max_inline, align 8
  %101 = ptrtoint ptr %thread_pool_size to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %thread_pool_size, align 4
  call fastcc void @btrfs_resize_thread_pool(ptr noundef %1, i32 noundef %10, i32 noundef %102)
  %103 = ptrtoint ptr %metadata_ratio to i32
  call void @__asan_store4_noabort(i32 %103)
  store i32 %12, ptr %metadata_ratio, align 8
  %104 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %mount_opt, align 8
  %and.i224 = and i32 %105, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i224)
  %tobool.i225 = icmp ne i32 %and.i224, 0
  %and1.i226 = and i32 %5, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i226)
  %tobool2.not.i227 = icmp eq i32 %and1.i226, 0
  br i1 %tobool2.not.i227, label %if.end100.if.end.i241_crit_edge, label %land.lhs.true.i230

if.end100.if.end.i241_crit_edge:                  ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i241

land.lhs.true.i230:                               ; preds = %if.end100
  %and4.i228 = and i32 %105, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i228)
  %tobool5.not.i229 = icmp eq i32 %and4.i228, 0
  br i1 %tobool5.not.i229, label %land.lhs.true.i230.if.then.i236_crit_edge, label %lor.lhs.false.i235

land.lhs.true.i230.if.then.i236_crit_edge:        ; preds = %land.lhs.true.i230
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i236

lor.lhs.false.i235:                               ; preds = %land.lhs.true.i230
  %sb.i231 = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 45
  %106 = ptrtoint ptr %sb.i231 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %sb.i231, align 8
  %s_flags.i.i232 = getelementptr inbounds %struct.super_block, ptr %107, i32 0, i32 10
  %108 = ptrtoint ptr %s_flags.i.i232 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %s_flags.i.i232, align 4
  %and.i.i233 = and i32 %109, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i233)
  %tobool.i.not.i234 = icmp eq i32 %and.i.i233, 0
  br i1 %tobool.i.not.i234, label %lor.lhs.false.i235.if.end.i241_crit_edge, label %lor.lhs.false.i235.if.then.i236_crit_edge

lor.lhs.false.i235.if.then.i236_crit_edge:        ; preds = %lor.lhs.false.i235
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i236

lor.lhs.false.i235.if.end.i241_crit_edge:         ; preds = %lor.lhs.false.i235
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i241

if.then.i236:                                     ; preds = %lor.lhs.false.i235.if.then.i236_crit_edge, %land.lhs.true.i230.if.then.i236_crit_edge
  call void @btrfs_cleanup_defrag_inodes(ptr noundef %1) #23
  br label %if.end.i241

if.end.i241:                                      ; preds = %if.then.i236, %lor.lhs.false.i235.if.end.i241_crit_edge, %if.end100.if.end.i241_crit_edge
  %and6.i237 = and i32 %5, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i237)
  %tobool7.not.i238 = icmp eq i32 %and6.i237, 0
  %110 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %mount_opt, align 8
  %and10.i239 = and i32 %111, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10.i239)
  %tobool11.not.i240 = icmp eq i32 %and10.i239, 0
  br i1 %tobool7.not.i238, label %land.lhs.true8.i242, label %land.lhs.true15.critedge.i244

land.lhs.true8.i242:                              ; preds = %if.end.i241
  br i1 %tobool11.not.i240, label %land.lhs.true8.i242.if.end21.i250_crit_edge, label %if.then12.i243

land.lhs.true8.i242.if.end21.i250_crit_edge:      ; preds = %land.lhs.true8.i242
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end21.i250

if.then12.i243:                                   ; preds = %land.lhs.true8.i242
  call void @__sanitizer_cov_trace_pc() #25
  call void @btrfs_discard_resume(ptr noundef %1) #23
  br label %if.end21.i250

land.lhs.true15.critedge.i244:                    ; preds = %if.end.i241
  br i1 %tobool11.not.i240, label %if.then19.i245, label %land.lhs.true15.critedge.i244.if.end21.i250_crit_edge

land.lhs.true15.critedge.i244.if.end21.i250_crit_edge: ; preds = %land.lhs.true15.critedge.i244
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end21.i250

if.then19.i245:                                   ; preds = %land.lhs.true15.critedge.i244
  call void @__sanitizer_cov_trace_pc() #25
  call void @btrfs_discard_cleanup(ptr noundef %1) #23
  br label %if.end21.i250

if.end21.i250:                                    ; preds = %if.then19.i245, %land.lhs.true15.critedge.i244.if.end21.i250_crit_edge, %if.then12.i243, %land.lhs.true8.i242.if.end21.i250_crit_edge
  %and.lobit.i246 = lshr exact i32 %and.i224, 12
  %call23.i247 = call zeroext i1 @btrfs_free_space_cache_v1_active(ptr noundef %1) #23
  %conv24.i248 = zext i1 %call23.i247 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %and.lobit.i246, i32 %conv24.i248)
  %cmp.not.i249 = icmp eq i32 %and.lobit.i246, %conv24.i248
  br i1 %cmp.not.i249, label %if.end21.i250.cleanup109_crit_edge, label %if.then26.i252

if.end21.i250.cleanup109_crit_edge:               ; preds = %if.end21.i250
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup109

if.then26.i252:                                   ; preds = %if.end21.i250
  call void @__sanitizer_cov_trace_pc() #25
  %call28.i251 = call i32 @btrfs_set_free_space_cache_v1_active(ptr noundef %1, i1 noundef zeroext %tobool.i225) #23
  br label %cleanup109

cleanup109:                                       ; preds = %if.then26.i252, %if.end21.i250.cleanup109_crit_edge, %btrfs_remount_cleanup.exit
  %retval.0 = phi i32 [ 0, %btrfs_remount_cleanup.exit ], [ %ret.1, %if.end21.i250.cleanup109_crit_edge ], [ %ret.1, %if.then26.i252 ]
  call void @_clear_bit(i32 noundef 1, ptr noundef %fs_state) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @btrfs_show_options(ptr noundef %seq, ptr nocapture noundef readonly %dentry) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %d_sb = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 9
  %0 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 33
  %2 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_fs_info.i, align 16
  %mount_opt = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 31
  %4 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mount_opt, align 8
  %and = and i32 %5, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.602) #23
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %6 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mount_opt, align 8
  %and2 = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %if.end.if.end5_crit_edge, label %if.then4

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end5

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.603) #23
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end.if.end5_crit_edge
  %8 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mount_opt, align 8
  %and7 = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8.not = icmp eq i32 %and7, 0
  br i1 %tobool8.not, label %if.end5.if.end10_crit_edge, label %if.then9

if.end5.if.end10_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end10

if.then9:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.604) #23
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %if.end5.if.end10_crit_edge
  %10 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %mount_opt, align 8
  %and12 = and i32 %11, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12)
  %tobool13.not = icmp eq i32 %and12, 0
  br i1 %tobool13.not, label %if.end10.if.end15_crit_edge, label %if.then14

if.end10.if.end15_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end15

if.then14:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.605) #23
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %if.end10.if.end15_crit_edge
  %max_inline = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 36
  %12 = ptrtoint ptr %max_inline to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %max_inline, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 2048, i64 %13)
  %cmp.not = icmp eq i64 %13, 2048
  br i1 %cmp.not, label %if.end15.if.end18_crit_edge, label %if.then16

if.end15.if.end18_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end18

if.then16:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.606, i64 noundef %13) #23
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end15.if.end18_crit_edge
  %thread_pool_size = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 91
  %14 = ptrtoint ptr %thread_pool_size to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %thread_pool_size, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @__num_online_cpus, i32 noundef 4) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__num_online_cpus to i32))
  %16 = load volatile i32, ptr @__num_online_cpus, align 4
  %add = add i32 %16, 2
  %17 = tail call i32 @llvm.umin.i32(i32 %add, i32 8)
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %17)
  %cmp21.not = icmp eq i32 %15, %17
  br i1 %cmp21.not, label %if.end18.if.end24_crit_edge, label %if.then22

if.end18.if.end24_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end24

if.then22:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #25
  %18 = ptrtoint ptr %thread_pool_size to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %thread_pool_size, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.607, i32 noundef %19) #23
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %if.end18.if.end24_crit_edge
  %20 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %mount_opt, align 8
  %and26 = and i32 %21, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26)
  %tobool27.not = icmp eq i32 %and26, 0
  br i1 %tobool27.not, label %if.end24.if.end40_crit_edge, label %if.then28

if.end24.if.end40_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end40

if.then28:                                        ; preds = %if.end24
  %compress_type29 = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 33
  %22 = ptrtoint ptr %compress_type29 to i32
  call void @__asan_load1_noabort(i32 %22)
  %bf.load = load i8, ptr %compress_type29, align 8
  %bf.lshr = lshr i8 %bf.load, 4
  %bf.cast = zext i8 %bf.lshr to i32
  %call30 = tail call ptr @btrfs_compress_type2str(i32 noundef %bf.cast) #23
  %23 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %mount_opt, align 8
  %and32 = and i32 %24, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp eq i32 %and32, 0
  %.str.609..str.608 = select i1 %tobool33.not, ptr @.str.609, ptr @.str.608
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull %.str.609..str.608, ptr noundef %call30) #23
  %compress_level = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 34
  %25 = ptrtoint ptr %compress_level to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %compress_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool36.not = icmp eq i32 %26, 0
  br i1 %tobool36.not, label %if.then28.if.end40_crit_edge, label %if.then37

if.then28.if.end40_crit_edge:                     ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end40

if.then37:                                        ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.610, i32 noundef %26) #23
  br label %if.end40

if.end40:                                         ; preds = %if.then37, %if.then28.if.end40_crit_edge, %if.end24.if.end40_crit_edge
  %27 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %mount_opt, align 8
  %and42 = and i32 %28, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and42)
  %tobool43.not = icmp eq i32 %and42, 0
  br i1 %tobool43.not, label %if.end40.if.end45_crit_edge, label %if.then44

if.end40.if.end45_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end45

if.then44:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.611) #23
  br label %if.end45

if.end45:                                         ; preds = %if.then44, %if.end40.if.end45_crit_edge
  %29 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %mount_opt, align 8
  %and47 = and i32 %30, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47)
  %tobool48.not = icmp eq i32 %and47, 0
  br i1 %tobool48.not, label %if.else50, label %if.end45.if.end56.sink.split_crit_edge

if.end45.if.end56.sink.split_crit_edge:           ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end56.sink.split

if.else50:                                        ; preds = %if.end45
  %and52 = and i32 %30, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and52)
  %tobool53.not = icmp eq i32 %and52, 0
  br i1 %tobool53.not, label %if.else50.if.end56_crit_edge, label %if.else50.if.end56.sink.split_crit_edge

if.else50.if.end56.sink.split_crit_edge:          ; preds = %if.else50
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end56.sink.split

if.else50.if.end56_crit_edge:                     ; preds = %if.else50
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end56

if.end56.sink.split:                              ; preds = %if.else50.if.end56.sink.split_crit_edge, %if.end45.if.end56.sink.split_crit_edge
  %.str.613.sink = phi ptr [ @.str.612, %if.end45.if.end56.sink.split_crit_edge ], [ @.str.613, %if.else50.if.end56.sink.split_crit_edge ]
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull %.str.613.sink) #23
  br label %if.end56

if.end56:                                         ; preds = %if.end56.sink.split, %if.else50.if.end56_crit_edge
  %31 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %mount_opt, align 8
  %and58 = and i32 %32, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and58)
  %tobool59.not = icmp eq i32 %and58, 0
  br i1 %tobool59.not, label %if.end56.if.end61_crit_edge, label %if.then60

if.end56.if.end61_crit_edge:                      ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end61

if.then60:                                        ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.614) #23
  br label %if.end61

if.end61:                                         ; preds = %if.then60, %if.end56.if.end61_crit_edge
  %33 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %mount_opt, align 8
  %and63 = and i32 %34, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and63)
  %tobool64.not = icmp eq i32 %and63, 0
  br i1 %tobool64.not, label %if.end61.if.end66_crit_edge, label %if.then65

if.end61.if.end66_crit_edge:                      ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end66

if.then65:                                        ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.640, ptr noundef nonnull @.str.641, ptr noundef nonnull @.str.148) #23
  br label %if.end66

if.end66:                                         ; preds = %if.then65, %if.end61.if.end66_crit_edge
  %printed.0 = phi i8 [ 0, %if.end61.if.end66_crit_edge ], [ 1, %if.then65 ]
  %35 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %mount_opt, align 8
  %and68 = and i32 %36, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and68)
  %tobool69.not = icmp eq i32 %and68, 0
  br i1 %tobool69.not, label %if.end66.if.end71_crit_edge, label %if.then70

if.end66.if.end71_crit_edge:                      ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end71

if.then70:                                        ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #25
  %cond.i292 = select i1 %tobool64.not, ptr @.str.641, ptr @.str.568
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.640, ptr noundef nonnull %cond.i292, ptr noundef nonnull @.str.134) #23
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %if.end66.if.end71_crit_edge
  %printed.1 = phi i8 [ %printed.0, %if.end66.if.end71_crit_edge ], [ 1, %if.then70 ]
  %37 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %mount_opt, align 8
  %and73 = and i32 %38, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and73)
  %tobool74.not = icmp eq i32 %and73, 0
  br i1 %tobool74.not, label %if.end71.if.end76_crit_edge, label %if.then75

if.end71.if.end76_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end76

if.then75:                                        ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #25
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %printed.1)
  %tobool.not.i293 = icmp eq i8 %printed.1, 0
  %cond.i294 = select i1 %tobool.not.i293, ptr @.str.641, ptr @.str.568
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.640, ptr noundef nonnull %cond.i294, ptr noundef nonnull @.str.149) #23
  br label %if.end76

if.end76:                                         ; preds = %if.then75, %if.end71.if.end76_crit_edge
  %printed.2 = phi i8 [ %printed.1, %if.end71.if.end76_crit_edge ], [ 1, %if.then75 ]
  %39 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %mount_opt, align 8
  %and78 = and i32 %40, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and78)
  %tobool79.not = icmp eq i32 %and78, 0
  br i1 %tobool79.not, label %if.end76.if.end81_crit_edge, label %if.then80

if.end76.if.end81_crit_edge:                      ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end81

if.then80:                                        ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #25
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %printed.2)
  %tobool.not.i295 = icmp eq i8 %printed.2, 0
  %cond.i296 = select i1 %tobool.not.i295, ptr @.str.641, ptr @.str.568
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.640, ptr noundef nonnull %cond.i296, ptr noundef nonnull @.str.150) #23
  br label %if.end81

if.end81:                                         ; preds = %if.then80, %if.end76.if.end81_crit_edge
  %41 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %mount_opt, align 8
  %and83 = and i32 %42, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and83)
  %tobool84.not = icmp eq i32 %and83, 0
  br i1 %tobool84.not, label %if.end81.if.end86_crit_edge, label %if.then85

if.end81.if.end86_crit_edge:                      ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end86

if.then85:                                        ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.615) #23
  br label %if.end86

if.end86:                                         ; preds = %if.then85, %if.end81.if.end86_crit_edge
  %43 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %mount_opt, align 8
  %and88 = and i32 %44, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and88)
  %tobool89.not = icmp eq i32 %and88, 0
  br i1 %tobool89.not, label %if.end86.if.end91_crit_edge, label %if.then90

if.end86.if.end91_crit_edge:                      ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end91

if.then90:                                        ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.616) #23
  br label %if.end91

if.end91:                                         ; preds = %if.then90, %if.end86.if.end91_crit_edge
  %45 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %mount_opt, align 8
  %and93 = and i32 %46, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and93)
  %tobool94.not = icmp eq i32 %and93, 0
  br i1 %tobool94.not, label %if.end91.if.end96_crit_edge, label %if.then95

if.end91.if.end96_crit_edge:                      ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end96

if.then95:                                        ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.617) #23
  br label %if.end96

if.end96:                                         ; preds = %if.then95, %if.end91.if.end96_crit_edge
  %sb = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 45
  %47 = ptrtoint ptr %sb to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %sb, align 8
  %s_flags = getelementptr inbounds %struct.super_block, ptr %48, i32 0, i32 10
  %49 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %s_flags, align 4
  %and97 = and i32 %50, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and97)
  %tobool98.not = icmp eq i32 %and97, 0
  br i1 %tobool98.not, label %if.then99, label %if.end96.if.end100_crit_edge

if.end96.if.end100_crit_edge:                     ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end100

if.then99:                                        ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.618) #23
  br label %if.end100

if.end100:                                        ; preds = %if.then99, %if.end96.if.end100_crit_edge
  %call101 = tail call zeroext i1 @btrfs_free_space_cache_v1_active(ptr noundef %3) #23
  br i1 %call101, label %if.end100.if.end109_crit_edge, label %if.else103

if.end100.if.end109_crit_edge:                    ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end109

if.else103:                                       ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #25
  %super_copy.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 43
  %51 = ptrtoint ptr %super_copy.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %super_copy.i, align 8
  %compat_ro_flags.i.i = getelementptr inbounds %struct.btrfs_super_block, ptr %52, i32 0, i32 21
  %53 = ptrtoint ptr %compat_ro_flags.i.i to i32
  call void @__asan_loadN_noabort(i32 %53, i32 8)
  %54 = load i64, ptr %compat_ro_flags.i.i, align 1
  %55 = and i64 %54, 72057594037927936
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %55)
  %tobool105.not = icmp eq i64 %55, 0
  %.str.621..str.620 = select i1 %tobool105.not, ptr @.str.621, ptr @.str.620
  br label %if.end109

if.end109:                                        ; preds = %if.else103, %if.end100.if.end109_crit_edge
  %.str.620.sink = phi ptr [ @.str.619, %if.end100.if.end109_crit_edge ], [ %.str.621..str.620, %if.else103 ]
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull %.str.620.sink) #23
  %56 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %mount_opt, align 8
  %and111 = and i32 %57, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and111)
  %tobool112.not = icmp eq i32 %and111, 0
  br i1 %tobool112.not, label %if.end109.if.end114_crit_edge, label %if.then113

if.end109.if.end114_crit_edge:                    ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end114

if.then113:                                       ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.622) #23
  br label %if.end114

if.end114:                                        ; preds = %if.then113, %if.end109.if.end114_crit_edge
  %58 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %mount_opt, align 8
  %and116 = and i32 %59, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and116)
  %tobool117.not = icmp eq i32 %and116, 0
  br i1 %tobool117.not, label %if.end114.if.end119_crit_edge, label %if.then118

if.end114.if.end119_crit_edge:                    ; preds = %if.end114
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end119

if.then118:                                       ; preds = %if.end114
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.623) #23
  br label %if.end119

if.end119:                                        ; preds = %if.then118, %if.end114.if.end119_crit_edge
  %60 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %mount_opt, align 8
  %and121 = and i32 %61, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and121)
  %tobool122.not = icmp eq i32 %and121, 0
  br i1 %tobool122.not, label %if.end119.if.end124_crit_edge, label %if.then123

if.end119.if.end124_crit_edge:                    ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end124

if.then123:                                       ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.624) #23
  br label %if.end124

if.end124:                                        ; preds = %if.then123, %if.end119.if.end124_crit_edge
  %62 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %mount_opt, align 8
  %and126 = and i32 %63, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and126)
  %tobool127.not = icmp eq i32 %and126, 0
  br i1 %tobool127.not, label %if.end124.if.end129_crit_edge, label %if.then128

if.end124.if.end129_crit_edge:                    ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end129

if.then128:                                       ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.625) #23
  br label %if.end129

if.end129:                                        ; preds = %if.then128, %if.end124.if.end129_crit_edge
  %64 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %mount_opt, align 8
  %and131 = and i32 %65, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and131)
  %tobool132.not = icmp eq i32 %and131, 0
  br i1 %tobool132.not, label %if.end129.if.end134_crit_edge, label %if.then133

if.end129.if.end134_crit_edge:                    ; preds = %if.end129
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end134

if.then133:                                       ; preds = %if.end129
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.626) #23
  br label %if.end134

if.end134:                                        ; preds = %if.then133, %if.end129.if.end134_crit_edge
  %66 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %mount_opt, align 8
  %and136 = and i32 %67, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and136)
  %tobool137.not = icmp eq i32 %and136, 0
  br i1 %tobool137.not, label %if.end134.if.end139_crit_edge, label %if.then138

if.end134.if.end139_crit_edge:                    ; preds = %if.end134
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end139

if.then138:                                       ; preds = %if.end134
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.627) #23
  br label %if.end139

if.end139:                                        ; preds = %if.then138, %if.end134.if.end139_crit_edge
  %68 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %mount_opt, align 8
  %and141 = and i32 %69, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and141)
  %tobool142.not = icmp eq i32 %and141, 0
  br i1 %tobool142.not, label %if.else144, label %if.end139.if.end150.sink.split_crit_edge

if.end139.if.end150.sink.split_crit_edge:         ; preds = %if.end139
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end150.sink.split

if.else144:                                       ; preds = %if.end139
  %and146 = and i32 %69, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and146)
  %tobool147.not = icmp eq i32 %and146, 0
  br i1 %tobool147.not, label %if.else144.if.end150_crit_edge, label %if.else144.if.end150.sink.split_crit_edge

if.else144.if.end150.sink.split_crit_edge:        ; preds = %if.else144
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end150.sink.split

if.else144.if.end150_crit_edge:                   ; preds = %if.else144
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end150

if.end150.sink.split:                             ; preds = %if.else144.if.end150.sink.split_crit_edge, %if.end139.if.end150.sink.split_crit_edge
  %.str.629.sink = phi ptr [ @.str.628, %if.end139.if.end150.sink.split_crit_edge ], [ @.str.629, %if.else144.if.end150.sink.split_crit_edge ]
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull %.str.629.sink) #23
  br label %if.end150

if.end150:                                        ; preds = %if.end150.sink.split, %if.else144.if.end150_crit_edge
  %check_integrity_print_mask = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 135
  %70 = ptrtoint ptr %check_integrity_print_mask to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %check_integrity_print_mask, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %tobool151.not = icmp eq i32 %71, 0
  br i1 %tobool151.not, label %if.end150.if.end154_crit_edge, label %if.then152

if.end150.if.end154_crit_edge:                    ; preds = %if.end150
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end154

if.then152:                                       ; preds = %if.end150
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.630, i32 noundef %71) #23
  br label %if.end154

if.end154:                                        ; preds = %if.then152, %if.end150.if.end154_crit_edge
  %metadata_ratio = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 121
  %72 = ptrtoint ptr %metadata_ratio to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %metadata_ratio, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %73)
  %tobool155.not = icmp eq i32 %73, 0
  br i1 %tobool155.not, label %if.end154.if.end158_crit_edge, label %if.then156

if.end154.if.end158_crit_edge:                    ; preds = %if.end154
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end158

if.then156:                                       ; preds = %if.end154
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.631, i32 noundef %73) #23
  br label %if.end158

if.end158:                                        ; preds = %if.then156, %if.end154.if.end158_crit_edge
  %74 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %mount_opt, align 8
  %and160 = and i32 %75, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and160)
  %tobool161.not = icmp eq i32 %and160, 0
  br i1 %tobool161.not, label %if.end158.if.end163_crit_edge, label %if.then162

if.end158.if.end163_crit_edge:                    ; preds = %if.end158
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end163

if.then162:                                       ; preds = %if.end158
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.632) #23
  br label %if.end163

if.end163:                                        ; preds = %if.then162, %if.end158.if.end163_crit_edge
  %commit_interval = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 35
  %76 = ptrtoint ptr %commit_interval to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %commit_interval, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 30, i32 %77)
  %cmp164.not = icmp eq i32 %77, 30
  br i1 %cmp164.not, label %if.end163.if.end167_crit_edge, label %if.then165

if.end163.if.end167_crit_edge:                    ; preds = %if.end163
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end167

if.then165:                                       ; preds = %if.end163
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.633, i32 noundef %77) #23
  br label %if.end167

if.end167:                                        ; preds = %if.then165, %if.end163.if.end167_crit_edge
  %78 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %mount_opt, align 8
  %and169 = and i32 %79, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and169)
  %tobool170.not = icmp eq i32 %and169, 0
  br i1 %tobool170.not, label %if.end167.if.end172_crit_edge, label %if.then171

if.end167.if.end172_crit_edge:                    ; preds = %if.end167
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end172

if.then171:                                       ; preds = %if.end167
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.634) #23
  br label %if.end172

if.end172:                                        ; preds = %if.then171, %if.end167.if.end172_crit_edge
  %80 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %mount_opt, align 8
  %and174 = and i32 %81, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and174)
  %tobool175.not = icmp eq i32 %and174, 0
  br i1 %tobool175.not, label %if.end172.if.end177_crit_edge, label %if.then176

if.end172.if.end177_crit_edge:                    ; preds = %if.end172
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end177

if.then176:                                       ; preds = %if.end172
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.635) #23
  br label %if.end177

if.end177:                                        ; preds = %if.then176, %if.end172.if.end177_crit_edge
  %82 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %mount_opt, align 8
  %and179 = and i32 %83, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and179)
  %tobool180.not = icmp eq i32 %and179, 0
  br i1 %tobool180.not, label %if.end177.if.end182_crit_edge, label %if.then181

if.end177.if.end182_crit_edge:                    ; preds = %if.end177
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end182

if.then181:                                       ; preds = %if.end177
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.636) #23
  br label %if.end182

if.end182:                                        ; preds = %if.then181, %if.end177.if.end182_crit_edge
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %84 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %d_inode.i, align 8
  %add.ptr.i = getelementptr i8, ptr %85, i32 -864
  %86 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %add.ptr.i, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %87, i32 0, i32 7
  %88 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %88, i32 8)
  %89 = load i64, ptr %root_key, align 1
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.637, i64 noundef %89) #23
  %90 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %d_inode.i, align 8
  %add.ptr.i298 = getelementptr i8, ptr %91, i32 -864
  %92 = ptrtoint ptr %add.ptr.i298 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %add.ptr.i298, align 8
  %root_key188 = getelementptr inbounds %struct.btrfs_root, ptr %93, i32 0, i32 7
  %94 = ptrtoint ptr %root_key188 to i32
  call void @__asan_loadN_noabort(i32 %94, i32 8)
  %95 = load i64, ptr %root_key188, align 1
  %call190 = tail call ptr @btrfs_get_subvol_name_from_objectid(ptr noundef %3, i64 noundef %95)
  %cmp.i = icmp ugt ptr %call190, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end182.if.end193_crit_edge, label %if.then192

if.end182.if.end193_crit_edge:                    ; preds = %if.end182
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end193

if.then192:                                       ; preds = %if.end182
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.638) #23
  %call.i.i = tail call i32 @strlen(ptr noundef %call190) #26
  tail call void @seq_escape_mem(ptr noundef %seq, ptr noundef %call190, i32 noundef %call.i.i, i32 noundef 8, ptr noundef nonnull @.str.639) #23
  tail call void @kfree(ptr noundef %call190) #23
  br label %if.end193

if.end193:                                        ; preds = %if.then192, %if.end182.if.end193_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @btrfs_show_devname(ptr noundef %m, ptr nocapture noundef readonly %root) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %d_sb = getelementptr inbounds %struct.dentry, ptr %root, i32 0, i32 9
  %0 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 33
  %2 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_fs_info.i, align 16
  %4 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i.i.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %7, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !2038
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #23
  %call.i = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.593, i32 noundef 696, ptr noundef nonnull @.str.594) #23
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 100
  %8 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %fs_devices, align 8
  %latest_dev = getelementptr inbounds %struct.btrfs_fs_devices, ptr %9, i32 0, i32 11
  %10 = ptrtoint ptr %latest_dev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %latest_dev, align 8
  %name = getelementptr inbounds %struct.btrfs_device, ptr %11, i32 0, i32 5
  %12 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %name, align 8
  %call2 = tail call i32 @rcu_read_lock_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end8_crit_edge

rcu_read_lock.exit.do.end8_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end8

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call3 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true.do.end8_crit_edge, label %land.lhs.true5

land.lhs.true.do.end8_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end8

land.lhs.true5:                                   ; preds = %land.lhs.true
  %.b11 = load i1, ptr @btrfs_show_devname.__warned, align 1
  br i1 %.b11, label %land.lhs.true5.do.end8_crit_edge, label %if.then

land.lhs.true5.do.end8_crit_edge:                 ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end8

if.then:                                          ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @btrfs_show_devname.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.65, i32 noundef 2470, ptr noundef nonnull @.str.578) #23
  br label %do.end8

do.end8:                                          ; preds = %if.then, %land.lhs.true5.do.end8_crit_edge, %land.lhs.true.do.end8_crit_edge, %rcu_read_lock.exit.do.end8_crit_edge
  %str = getelementptr inbounds %struct.rcu_string, ptr %13, i32 0, i32 1
  %call.i.i = tail call i32 @strlen(ptr noundef %str) #26
  tail call void @seq_escape_mem(ptr noundef %m, ptr noundef %str, i32 noundef %call.i.i, i32 noundef 8, ptr noundef nonnull @.str.639) #23
  %call.i12 = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i12, label %do.end8.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i15

do.end8.rcu_read_unlock.exit_crit_edge:           ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

land.lhs.true.i15:                                ; preds = %do.end8
  %call1.i13 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i13)
  %tobool.not.i14 = icmp eq i32 %call1.i13, 0
  br i1 %tobool.not.i14, label %land.lhs.true.i15.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i17

land.lhs.true.i15.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i15
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

land.lhs.true2.i17:                               ; preds = %land.lhs.true.i15
  %.b4.i16 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i16, label %land.lhs.true2.i17.rcu_read_unlock.exit_crit_edge, label %if.then.i18

land.lhs.true2.i17.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i17
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

if.then.i18:                                      ; preds = %land.lhs.true2.i17
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.593, i32 noundef 724, ptr noundef nonnull @.str.595) #23
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i18, %land.lhs.true2.i17.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i15.rcu_read_unlock.exit_crit_edge, %do.end8.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !2039
  %14 = tail call i32 @llvm.read_register.i32(metadata !2009) #23
  %and.i.i.i.i.i19 = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i.i.i19 to ptr
  %preempt_count.i.i.i.i20 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i.i.i20 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i.i.i20, align 4
  %sub.i.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i20, align 4
  tail call void @rcu_read_unlock_strict() #23
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #23
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @btrfs_account_ro_block_groups_free_space(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_bg_type_to_factor(i64 noundef) local_unnamed_addr #2

; Function Attrs: cold inlinehint noreturn nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @assertfail() unnamed_addr #20 align 64 {
entry:
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.590, ptr noundef nonnull @.str.588, ptr noundef nonnull @.str.65, i32 noundef 2127) #30
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/ctree.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3492, 0\0A.popsection", ""() #23, !srcloc !2040
  unreachable
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid readnone willreturn
declare dso_local i32 @btrfs_bg_flags_to_raid_index(i64 noundef) local_unnamed_addr #21

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #12

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @btrfs_get_alloc_profile(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sort(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @btrfs_cmp_device_free_bytes(ptr nocapture noundef readonly %a, ptr nocapture noundef readonly %b) #22 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %max_avail = getelementptr inbounds %struct.btrfs_device_info, ptr %a, i32 0, i32 2
  %0 = ptrtoint ptr %max_avail to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %max_avail, align 8
  %max_avail1 = getelementptr inbounds %struct.btrfs_device_info, ptr %b, i32 0, i32 2
  %2 = ptrtoint ptr %max_avail1 to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %max_avail1, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %1, i64 %3)
  %cmp = icmp ugt i64 %1, %3
  call void @__sanitizer_cov_trace_cmp8(i64 %1, i64 %3)
  %cmp4 = icmp ult i64 %1, %3
  %. = zext i1 %cmp4 to i32
  %retval.0 = select i1 %cmp, i32 -1, i32 %.
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sync_filesystem(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_sb_remount(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @btrfs_resize_thread_pool(ptr noundef %fs_info, i32 noundef %new_pool_size, i32 noundef %old_pool_size) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_cmp4(i32 %new_pool_size, i32 %old_pool_size)
  %cmp = icmp eq i32 %new_pool_size, %old_pool_size
  br i1 %cmp, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %thread_pool_size = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 91
  %0 = ptrtoint ptr %thread_pool_size to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %new_pool_size, ptr %thread_pool_size, align 4
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.600, i32 noundef %old_pool_size, i32 noundef %new_pool_size) #31
  %workers = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 76
  %1 = ptrtoint ptr %workers to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %workers, align 8
  tail call void @btrfs_workqueue_set_max(ptr noundef %2, i32 noundef %new_pool_size) #23
  %delalloc_workers = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 77
  %3 = ptrtoint ptr %delalloc_workers to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %delalloc_workers, align 4
  tail call void @btrfs_workqueue_set_max(ptr noundef %4, i32 noundef %new_pool_size) #23
  %caching_workers = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 86
  %5 = ptrtoint ptr %caching_workers to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %caching_workers, align 8
  tail call void @btrfs_workqueue_set_max(ptr noundef %6, i32 noundef %new_pool_size) #23
  %endio_workers = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 79
  %7 = ptrtoint ptr %endio_workers to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %endio_workers, align 4
  tail call void @btrfs_workqueue_set_max(ptr noundef %8, i32 noundef %new_pool_size) #23
  %endio_meta_workers = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 80
  %9 = ptrtoint ptr %endio_meta_workers to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %endio_meta_workers, align 8
  tail call void @btrfs_workqueue_set_max(ptr noundef %10, i32 noundef %new_pool_size) #23
  %endio_meta_write_workers = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 83
  %11 = ptrtoint ptr %endio_meta_write_workers to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %endio_meta_write_workers, align 4
  tail call void @btrfs_workqueue_set_max(ptr noundef %12, i32 noundef %new_pool_size) #23
  %endio_write_workers = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 84
  %13 = ptrtoint ptr %endio_write_workers to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %endio_write_workers, align 8
  tail call void @btrfs_workqueue_set_max(ptr noundef %14, i32 noundef %new_pool_size) #23
  %endio_freespace_worker = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 85
  %15 = ptrtoint ptr %endio_freespace_worker to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %endio_freespace_worker, align 4
  tail call void @btrfs_workqueue_set_max(ptr noundef %16, i32 noundef %new_pool_size) #23
  %delayed_workers = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 88
  %17 = ptrtoint ptr %delayed_workers to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %delayed_workers, align 8
  tail call void @btrfs_workqueue_set_max(ptr noundef %18, i32 noundef %new_pool_size) #23
  %scrub_wr_completion_workers = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 131
  %19 = ptrtoint ptr %scrub_wr_completion_workers to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %scrub_wr_completion_workers, align 8
  tail call void @btrfs_workqueue_set_max(ptr noundef %20, i32 noundef %new_pool_size) #23
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_work_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_discard_cleanup(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @down(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_delete_unused_bgs(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_run_delayed_iputs(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_dev_replace_suspend_for_unmount(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_scrub_cancel(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_pause_balance(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_qgroup_wait_for_completion(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_commit_super(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @btrfs_check_rw_degradable(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_start_pre_rw_mount(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wake_up_process(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_clear_oneshot_options(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_wait_entry(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prepare_to_wait_event(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_workqueue_set_max(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @out_of_line_wait_on_bit(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bit_wait(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_cleanup_defrag_inodes(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_discard_resume(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_set_free_space_cache_v1_active(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_puts(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_compress_type2str(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_escape_mem(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockref_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kill_anon_super(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @btrfs_mount(ptr nocapture noundef readnone %fs_type, i32 noundef %flags, ptr noundef %device_name, ptr noundef %data) #0 align 64 {
entry:
  %disk_key.i.i.i = alloca %struct.btrfs_disk_key, align 8
  %args.i = alloca [3 x %struct.substring_t], align 4
  %opts.i = alloca ptr, align 4
  %subvolid.i = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %flags.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %flags, ptr %flags.addr, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %args.i) #23
  %1 = call ptr @memset(ptr %args.i, i32 255, i32 24)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %opts.i) #23
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %subvolid.i) #23
  %2 = ptrtoint ptr %subvolid.i to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 -1, ptr %subvolid.i, align 8, !annotation !2021
  %tobool.not.i = icmp eq ptr %data, null
  br i1 %tobool.not.i, label %btrfs_parse_subvol_options.exit.thread, label %if.end.i

btrfs_parse_subvol_options.exit.thread:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %subvolid.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %opts.i) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args.i) #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %call.i = tail call noalias ptr @kstrdup(ptr noundef nonnull %data, i32 noundef 3264) #23
  %3 = ptrtoint ptr %opts.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %call.i, ptr %opts.i, align 4
  %tobool1.not.i = icmp eq ptr %call.i, null
  br i1 %tobool1.not.i, label %btrfs_parse_subvol_options.exit.thread69, label %while.cond.preheader.i

btrfs_parse_subvol_options.exit.thread69:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %subvolid.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %opts.i) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args.i) #23
  br label %if.then

while.cond.preheader.i:                           ; preds = %if.end.i
  %call435.i = call ptr @strsep(ptr noundef nonnull %opts.i, ptr noundef nonnull @.str.84) #23
  %cmp.not36.i = icmp eq ptr %call435.i, null
  br i1 %cmp.not36.i, label %while.cond.preheader.i.btrfs_parse_subvol_options.exit.thread76_crit_edge, label %while.cond.preheader.i.while.body.i_crit_edge

while.cond.preheader.i.while.body.i_crit_edge:    ; preds = %while.cond.preheader.i
  br label %while.body.i

while.cond.preheader.i.btrfs_parse_subvol_options.exit.thread76_crit_edge: ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_parse_subvol_options.exit.thread76

while.body.i:                                     ; preds = %cleanup.i.while.body.i_crit_edge, %while.cond.preheader.i.while.body.i_crit_edge
  %subvol_name.0 = phi ptr [ %subvol_name.1, %cleanup.i.while.body.i_crit_edge ], [ null, %while.cond.preheader.i.while.body.i_crit_edge ]
  %subvol_objectid.0 = phi i64 [ %subvol_objectid.1, %cleanup.i.while.body.i_crit_edge ], [ 0, %while.cond.preheader.i.while.body.i_crit_edge ]
  %call437.i = phi ptr [ %call4.i, %cleanup.i.while.body.i_crit_edge ], [ %call435.i, %while.cond.preheader.i.while.body.i_crit_edge ]
  %4 = ptrtoint ptr %call437.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call437.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool5.not.i = icmp eq i8 %5, 0
  br i1 %tobool5.not.i, label %while.body.i.cleanup.i_crit_edge, label %if.end7.i

while.body.i.cleanup.i_crit_edge:                 ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.i

if.end7.i:                                        ; preds = %while.body.i
  %call8.i = call i32 @match_token(ptr noundef nonnull %call437.i, ptr noundef nonnull @tokens, ptr noundef nonnull %args.i) #23
  %6 = zext i32 %call8.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.652)
  switch i32 %call8.i, label %if.end7.i.cleanup.i_crit_edge [
    i32 36, label %sw.bb.i
    i32 38, label %sw.bb13.i
  ]

if.end7.i.cleanup.i_crit_edge:                    ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.i

sw.bb.i:                                          ; preds = %if.end7.i
  call void @kfree(ptr noundef %subvol_name.0) #23
  %call9.i = call ptr @match_strdup(ptr noundef nonnull %args.i) #23
  %tobool10.not.i = icmp eq ptr %call9.i, null
  br i1 %tobool10.not.i, label %sw.bb.i.btrfs_parse_subvol_options.exit_crit_edge, label %sw.bb.i.cleanup.i_crit_edge

sw.bb.i.cleanup.i_crit_edge:                      ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.i

sw.bb.i.btrfs_parse_subvol_options.exit_crit_edge: ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_parse_subvol_options.exit

sw.bb13.i:                                        ; preds = %if.end7.i
  %call15.i = call i32 @match_u64(ptr noundef nonnull %args.i, ptr noundef nonnull %subvolid.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15.i)
  %tobool16.not.i = icmp eq i32 %call15.i, 0
  br i1 %tobool16.not.i, label %if.end18.i, label %sw.bb13.i.btrfs_parse_subvol_options.exit_crit_edge

sw.bb13.i.btrfs_parse_subvol_options.exit_crit_edge: ; preds = %sw.bb13.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_parse_subvol_options.exit

if.end18.i:                                       ; preds = %sw.bb13.i
  %7 = ptrtoint ptr %subvolid.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %subvolid.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %8)
  %cmp19.i = icmp eq i64 %8, 0
  br i1 %cmp19.i, label %if.then20.i, label %if.end18.i.if.end21.i_crit_edge

if.end18.i.if.end21.i_crit_edge:                  ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end21.i

if.then20.i:                                      ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #25
  %9 = ptrtoint ptr %subvolid.i to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 5, ptr %subvolid.i, align 8
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.then20.i, %if.end18.i.if.end21.i_crit_edge
  %10 = ptrtoint ptr %subvolid.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %subvolid.i, align 8
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.end21.i, %sw.bb.i.cleanup.i_crit_edge, %if.end7.i.cleanup.i_crit_edge, %while.body.i.cleanup.i_crit_edge
  %subvol_name.1 = phi ptr [ %subvol_name.0, %while.body.i.cleanup.i_crit_edge ], [ %subvol_name.0, %if.end7.i.cleanup.i_crit_edge ], [ %subvol_name.0, %if.end21.i ], [ %call9.i, %sw.bb.i.cleanup.i_crit_edge ]
  %subvol_objectid.1 = phi i64 [ %subvol_objectid.0, %while.body.i.cleanup.i_crit_edge ], [ %subvol_objectid.0, %if.end7.i.cleanup.i_crit_edge ], [ %11, %if.end21.i ], [ %subvol_objectid.0, %sw.bb.i.cleanup.i_crit_edge ]
  %call4.i = call ptr @strsep(ptr noundef nonnull %opts.i, ptr noundef nonnull @.str.84) #23
  %cmp.not.i = icmp eq ptr %call4.i, null
  br i1 %cmp.not.i, label %cleanup.i.btrfs_parse_subvol_options.exit.thread76_crit_edge, label %cleanup.i.while.body.i_crit_edge

cleanup.i.while.body.i_crit_edge:                 ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body.i

cleanup.i.btrfs_parse_subvol_options.exit.thread76_crit_edge: ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_parse_subvol_options.exit.thread76

btrfs_parse_subvol_options.exit.thread76:         ; preds = %cleanup.i.btrfs_parse_subvol_options.exit.thread76_crit_edge, %while.cond.preheader.i.btrfs_parse_subvol_options.exit.thread76_crit_edge
  %subvol_name.2.ph = phi ptr [ null, %while.cond.preheader.i.btrfs_parse_subvol_options.exit.thread76_crit_edge ], [ %subvol_name.1, %cleanup.i.btrfs_parse_subvol_options.exit.thread76_crit_edge ]
  %subvol_objectid.2.ph = phi i64 [ 0, %while.cond.preheader.i.btrfs_parse_subvol_options.exit.thread76_crit_edge ], [ %subvol_objectid.1, %cleanup.i.btrfs_parse_subvol_options.exit.thread76_crit_edge ]
  call void @kfree(ptr noundef nonnull %call.i) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %subvolid.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %opts.i) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args.i) #23
  br label %if.end

btrfs_parse_subvol_options.exit:                  ; preds = %sw.bb13.i.btrfs_parse_subvol_options.exit_crit_edge, %sw.bb.i.btrfs_parse_subvol_options.exit_crit_edge
  %subvol_name.2 = phi ptr [ %subvol_name.0, %sw.bb13.i.btrfs_parse_subvol_options.exit_crit_edge ], [ null, %sw.bb.i.btrfs_parse_subvol_options.exit_crit_edge ]
  %error.3.i = phi i32 [ %call15.i, %sw.bb13.i.btrfs_parse_subvol_options.exit_crit_edge ], [ -12, %sw.bb.i.btrfs_parse_subvol_options.exit_crit_edge ]
  call void @kfree(ptr noundef nonnull %call.i) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %subvolid.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %opts.i) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args.i) #23
  br label %if.then

if.then:                                          ; preds = %btrfs_parse_subvol_options.exit, %btrfs_parse_subvol_options.exit.thread69
  %retval.0.i75 = phi i32 [ -12, %btrfs_parse_subvol_options.exit.thread69 ], [ %error.3.i, %btrfs_parse_subvol_options.exit ]
  %subvol_name.374 = phi ptr [ null, %btrfs_parse_subvol_options.exit.thread69 ], [ %subvol_name.2, %btrfs_parse_subvol_options.exit ]
  call void @kfree(ptr noundef %subvol_name.374) #23
  %12 = inttoptr i32 %retval.0.i75 to ptr
  br label %cleanup

if.end:                                           ; preds = %btrfs_parse_subvol_options.exit.thread76, %btrfs_parse_subvol_options.exit.thread
  %subvol_objectid.368 = phi i64 [ 0, %btrfs_parse_subvol_options.exit.thread ], [ %subvol_objectid.2.ph, %btrfs_parse_subvol_options.exit.thread76 ]
  %subvol_name.366 = phi ptr [ null, %btrfs_parse_subvol_options.exit.thread ], [ %subvol_name.2.ph, %btrfs_parse_subvol_options.exit.thread76 ]
  %call2 = call ptr @vfs_kern_mount(ptr noundef nonnull @btrfs_root_fs_type, i32 noundef %flags, ptr noundef %device_name, ptr noundef %data) #23
  %cmp81 = icmp eq ptr %call2, inttoptr (i32 -16 to ptr)
  br i1 %cmp81, label %if.then4, label %if.end.if.end23_crit_edge

if.end.if.end23_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end23

if.then4:                                         ; preds = %if.end
  %and = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool5.not = icmp eq i32 %and, 0
  br i1 %tobool5.not, label %if.else, label %if.then6

if.then6:                                         ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #25
  %and7 = and i32 %flags, -2
  %call8 = call ptr @vfs_kern_mount(ptr noundef nonnull @btrfs_root_fs_type, i32 noundef %and7, ptr noundef %device_name, ptr noundef %data) #23
  br label %if.end23

if.else:                                          ; preds = %if.then4
  %or = or i32 %flags, 1
  %call9 = call ptr @vfs_kern_mount(ptr noundef nonnull @btrfs_root_fs_type, i32 noundef %or, ptr noundef %device_name, ptr noundef %data) #23
  %cmp.i = icmp ugt ptr %call9, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then11, label %if.end13

if.then11:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  call void @kfree(ptr noundef %subvol_name.366) #23
  br label %cleanup

if.end13:                                         ; preds = %if.else
  %mnt_sb = getelementptr inbounds %struct.vfsmount, ptr %call9, i32 0, i32 1
  %13 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %mnt_sb, align 4
  %s_umount = getelementptr inbounds %struct.super_block, ptr %14, i32 0, i32 14
  call void @down_write(ptr noundef %s_umount) #23
  %15 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mnt_sb, align 4
  %call15 = call i32 @btrfs_remount(ptr noundef %16, ptr noundef nonnull %flags.addr, ptr noundef null)
  %17 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %mnt_sb, align 4
  %s_umount17 = getelementptr inbounds %struct.super_block, ptr %18, i32 0, i32 14
  call void @up_write(ptr noundef %s_umount17) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %cmp18 = icmp slt i32 %call15, 0
  br i1 %cmp18, label %if.then19, label %if.end13.if.end23_crit_edge

if.end13.if.end23_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end23

if.then19:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #25
  %19 = inttoptr i32 %call15 to ptr
  call void @mntput(ptr noundef %call9) #23
  call void @kfree(ptr noundef %subvol_name.366) #23
  br label %cleanup

if.end23:                                         ; preds = %if.end13.if.end23_crit_edge, %if.then6, %if.end.if.end23_crit_edge
  %mnt_root.0 = phi ptr [ %call8, %if.then6 ], [ %call9, %if.end13.if.end23_crit_edge ], [ %call2, %if.end.if.end23_crit_edge ]
  %cmp.i50 = icmp ugt ptr %mnt_root.0, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i50, label %if.then25, label %if.end27

if.then25:                                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #25
  call void @kfree(ptr noundef %subvol_name.366) #23
  br label %cleanup

if.end27:                                         ; preds = %if.end23
  %tobool.not.i51 = icmp eq ptr %subvol_name.366, null
  br i1 %tobool.not.i51, label %if.then.i, label %if.end27.if.end15.i_crit_edge

if.end27.if.end15.i_crit_edge:                    ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end15.i

if.then.i:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %subvol_objectid.368)
  %tobool1.not.i52 = icmp eq i64 %subvol_objectid.368, 0
  br i1 %tobool1.not.i52, label %if.then2.i, label %if.then.i.if.end7.i54_crit_edge

if.then.i.if.end7.i54_crit_edge:                  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end7.i54

if.then2.i:                                       ; preds = %if.then.i
  %mnt_sb.i = getelementptr inbounds %struct.vfsmount, ptr %mnt_root.0, i32 0, i32 1
  %20 = ptrtoint ptr %mnt_sb.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %mnt_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 33
  %22 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %s_fs_info.i.i, align 16
  %tree_root.i.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %tree_root.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %tree_root.i.i, align 4
  %call.i.i = call ptr @btrfs_alloc_path() #23
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.then2.i.mount_subvol.exit_crit_edge, label %if.end.i.i

if.then2.i.mount_subvol.exit_crit_edge:           ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %mount_subvol.exit

if.end.i.i:                                       ; preds = %if.then2.i
  %super_copy.i.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %23, i32 0, i32 43
  %26 = ptrtoint ptr %super_copy.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %super_copy.i.i, align 8
  %root_dir_objectid.i.i.i = getelementptr inbounds %struct.btrfs_super_block, ptr %27, i32 0, i32 12
  %28 = ptrtoint ptr %root_dir_objectid.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %28, i32 8)
  %29 = load i64, ptr %root_dir_objectid.i.i.i, align 1
  %30 = call i64 @llvm.bswap.i64(i64 %29) #23
  %call2.i.i = call ptr @btrfs_lookup_dir_item(ptr noundef null, ptr noundef %25, ptr noundef nonnull %call.i.i, i64 noundef %30, ptr noundef nonnull @.str.644, i32 noundef 7, i32 noundef 0) #23
  %cmp.i.i.i = icmp ugt ptr %call2.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %get_default_subvol_objectid.exit.i, label %if.end6.i.i

if.end6.i.i:                                      ; preds = %if.end.i.i
  %tobool7.not.i.i = icmp eq ptr %call2.i.i, null
  br i1 %tobool7.not.i.i, label %if.end6.i.i.if.end7.i54.sink.split_crit_edge, label %if.end9.i.i

if.end6.i.i.if.end7.i54.sink.split_crit_edge:     ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end7.i54.sink.split

if.end9.i.i:                                      ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %31 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %call.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i.i.i) #23
  %33 = ptrtoint ptr %call2.i.i to i32
  %34 = call ptr @memset(ptr %disk_key.i.i.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %32, ptr noundef nonnull %disk_key.i.i.i, i32 noundef %33, i32 noundef 17) #23
  %35 = ptrtoint ptr %disk_key.i.i.i to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %disk_key.i.i.i, align 8
  %37 = call i64 @llvm.bswap.i64(i64 %36) #23
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i.i.i) #23
  br label %if.end7.i54.sink.split

get_default_subvol_objectid.exit.i:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @btrfs_free_path(ptr noundef nonnull %call.i.i) #23
  br label %mount_subvol.exit

if.end7.i54.sink.split:                           ; preds = %if.end9.i.i, %if.end6.i.i.if.end7.i54.sink.split_crit_edge
  %subvol_objectid.addr.1.i.ph = phi i64 [ %37, %if.end9.i.i ], [ 5, %if.end6.i.i.if.end7.i54.sink.split_crit_edge ]
  call void @btrfs_free_path(ptr noundef nonnull %call.i.i) #23
  br label %if.end7.i54

if.end7.i54:                                      ; preds = %if.end7.i54.sink.split, %if.then.i.if.end7.i54_crit_edge
  %subvol_objectid.addr.1.i = phi i64 [ %subvol_objectid.368, %if.then.i.if.end7.i54_crit_edge ], [ %subvol_objectid.addr.1.i.ph, %if.end7.i54.sink.split ]
  %mnt_sb8.i = getelementptr inbounds %struct.vfsmount, ptr %mnt_root.0, i32 0, i32 1
  %38 = ptrtoint ptr %mnt_sb8.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %mnt_sb8.i, align 4
  %s_fs_info.i54.i = getelementptr inbounds %struct.super_block, ptr %39, i32 0, i32 33
  %40 = ptrtoint ptr %s_fs_info.i54.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %s_fs_info.i54.i, align 16
  %call10.i = call ptr @btrfs_get_subvol_name_from_objectid(ptr noundef %41, i64 noundef %subvol_objectid.addr.1.i) #23
  %cmp.i.i53 = icmp ugt ptr %call10.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i53, label %if.end7.i54.mount_subvol.exit_crit_edge, label %if.end7.i54.if.end15.i_crit_edge

if.end7.i54.if.end15.i_crit_edge:                 ; preds = %if.end7.i54
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end15.i

if.end7.i54.mount_subvol.exit_crit_edge:          ; preds = %if.end7.i54
  call void @__sanitizer_cov_trace_pc() #25
  br label %mount_subvol.exit

if.end15.i:                                       ; preds = %if.end7.i54.if.end15.i_crit_edge, %if.end27.if.end15.i_crit_edge
  %subvol_objectid.addr.2.i = phi i64 [ %subvol_objectid.addr.1.i, %if.end7.i54.if.end15.i_crit_edge ], [ %subvol_objectid.368, %if.end27.if.end15.i_crit_edge ]
  %subvol_name.addr.0.i = phi ptr [ %call10.i, %if.end7.i54.if.end15.i_crit_edge ], [ %subvol_name.366, %if.end27.if.end15.i_crit_edge ]
  %call16.i = call ptr @mount_subtree(ptr noundef %mnt_root.0, ptr noundef %subvol_name.addr.0.i) #23
  %cmp.i55.i = icmp ugt ptr %call16.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i55.i, label %if.end15.i.mount_subvol.exit_crit_edge, label %if.then18.i

if.end15.i.mount_subvol.exit_crit_edge:           ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %mount_subvol.exit

if.then18.i:                                      ; preds = %if.end15.i
  %d_sb.i = getelementptr inbounds %struct.dentry, ptr %call16.i, i32 0, i32 9
  %42 = ptrtoint ptr %d_sb.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %d_sb.i, align 4
  %s_fs_info.i56.i = getelementptr inbounds %struct.super_block, ptr %43, i32 0, i32 33
  %44 = ptrtoint ptr %s_fs_info.i56.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %s_fs_info.i56.i, align 16
  %d_inode.i.i = getelementptr inbounds %struct.dentry, ptr %call16.i, i32 0, i32 5
  %46 = ptrtoint ptr %d_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %d_inode.i.i, align 8
  %add.ptr.i.i = getelementptr i8, ptr %47, i32 -864
  %48 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %add.ptr.i.i, align 8
  %root_key.i = getelementptr inbounds %struct.btrfs_root, ptr %49, i32 0, i32 7
  %50 = ptrtoint ptr %root_key.i to i32
  call void @__asan_loadN_noabort(i32 %50, i32 8)
  %51 = load i64, ptr %root_key.i, align 1
  %tobool.not.i57.i = icmp eq ptr %47, null
  br i1 %tobool.not.i57.i, label %if.then18.i.if.end26.thread.i_crit_edge, label %land.lhs.true.i.i

if.then18.i.if.end26.thread.i_crit_edge:          ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26.thread.i

land.lhs.true.i.i:                                ; preds = %if.then18.i
  %i_ino.i.i = getelementptr inbounds %struct.inode, ptr %47, i32 0, i32 11
  %52 = ptrtoint ptr %i_ino.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %i_ino.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %53)
  %cmp.i58.i = icmp eq i32 %53, 256
  br i1 %cmp.i58.i, label %if.end26.i, label %land.lhs.true.i.i.if.end26.thread.i_crit_edge

land.lhs.true.i.i.if.end26.thread.i_crit_edge:    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26.thread.i

if.end26.i:                                       ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %subvol_objectid.addr.2.i)
  %tobool27.not.i = icmp eq i64 %subvol_objectid.addr.2.i, 0
  call void @__sanitizer_cov_trace_cmp8(i64 %51, i64 %subvol_objectid.addr.2.i)
  %cmp.not.i55 = icmp eq i64 %51, %subvol_objectid.addr.2.i
  %or.cond.i = select i1 %tobool27.not.i, i1 true, i1 %cmp.not.i55
  br i1 %or.cond.i, label %if.end26.i.mount_subvol.exit_crit_edge, label %if.end26.i.if.end29.thread.i_crit_edge

if.end26.i.if.end29.thread.i_crit_edge:           ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end29.thread.i

if.end26.i.mount_subvol.exit_crit_edge:           ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %mount_subvol.exit

if.end26.thread.i:                                ; preds = %land.lhs.true.i.i.if.end26.thread.i_crit_edge, %if.then18.i.if.end26.thread.i_crit_edge
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %45, ptr noundef nonnull @.str.642, ptr noundef %subvol_name.addr.0.i) #30
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %subvol_objectid.addr.2.i)
  %tobool27.not77.i = icmp eq i64 %subvol_objectid.addr.2.i, 0
  call void @__sanitizer_cov_trace_cmp8(i64 %51, i64 %subvol_objectid.addr.2.i)
  %cmp.not78.i = icmp eq i64 %51, %subvol_objectid.addr.2.i
  %or.cond79.i = select i1 %tobool27.not77.i, i1 true, i1 %cmp.not78.i
  br i1 %or.cond79.i, label %if.end26.thread.i.if.then31.i_crit_edge, label %if.end26.thread.i.if.end29.thread.i_crit_edge

if.end26.thread.i.if.end29.thread.i_crit_edge:    ; preds = %if.end26.thread.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end29.thread.i

if.end26.thread.i.if.then31.i_crit_edge:          ; preds = %if.end26.thread.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then31.i

if.end29.thread.i:                                ; preds = %if.end26.thread.i.if.end29.thread.i_crit_edge, %if.end26.i.if.end29.thread.i_crit_edge
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %45, ptr noundef nonnull @.str.643, ptr noundef %subvol_name.addr.0.i, i64 noundef %subvol_objectid.addr.2.i) #30
  br label %if.then31.i

if.then31.i:                                      ; preds = %if.end29.thread.i, %if.end26.thread.i.if.then31.i_crit_edge
  call void @dput(ptr noundef %call16.i) #23
  call void @deactivate_locked_super(ptr noundef %43) #23
  br label %mount_subvol.exit

mount_subvol.exit:                                ; preds = %if.then31.i, %if.end26.i.mount_subvol.exit_crit_edge, %if.end15.i.mount_subvol.exit_crit_edge, %if.end7.i54.mount_subvol.exit_crit_edge, %get_default_subvol_objectid.exit.i, %if.then2.i.mount_subvol.exit_crit_edge
  %mnt.addr.0.i = phi ptr [ null, %if.end15.i.mount_subvol.exit_crit_edge ], [ null, %if.then31.i ], [ %mnt_root.0, %if.end7.i54.mount_subvol.exit_crit_edge ], [ %mnt_root.0, %get_default_subvol_objectid.exit.i ], [ %mnt_root.0, %if.then2.i.mount_subvol.exit_crit_edge ], [ null, %if.end26.i.mount_subvol.exit_crit_edge ]
  %root.1.i = phi ptr [ %call16.i, %if.end15.i.mount_subvol.exit_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then31.i ], [ %call10.i, %if.end7.i54.mount_subvol.exit_crit_edge ], [ %call2.i.i, %get_default_subvol_objectid.exit.i ], [ inttoptr (i32 -12 to ptr), %if.then2.i.mount_subvol.exit_crit_edge ], [ %call16.i, %if.end26.i.mount_subvol.exit_crit_edge ]
  %subvol_name.addr.1.i = phi ptr [ %subvol_name.addr.0.i, %if.end15.i.mount_subvol.exit_crit_edge ], [ %subvol_name.addr.0.i, %if.then31.i ], [ null, %if.end7.i54.mount_subvol.exit_crit_edge ], [ null, %get_default_subvol_objectid.exit.i ], [ null, %if.then2.i.mount_subvol.exit_crit_edge ], [ %subvol_name.addr.0.i, %if.end26.i.mount_subvol.exit_crit_edge ]
  call void @mntput(ptr noundef %mnt.addr.0.i) #23
  call void @kfree(ptr noundef %subvol_name.addr.1.i) #23
  br label %cleanup

cleanup:                                          ; preds = %mount_subvol.exit, %if.then25, %if.then19, %if.then11, %if.then
  %retval.0 = phi ptr [ %12, %if.then ], [ %mnt_root.0, %if.then25 ], [ %root.1.i, %mount_subvol.exit ], [ %call9, %if.then11 ], [ %19, %if.then19 ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @vfs_kern_mount(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mntput(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @match_u64(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mount_subtree(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dput(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_lookup_dir_item(ptr noundef, ptr noundef, ptr noundef, i64 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @btrfs_props_init() local_unnamed_addr #6 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @btrfs_init_sysfs() local_unnamed_addr #6 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @btrfs_init_compress() local_unnamed_addr #6 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @btrfs_init_cachep() local_unnamed_addr #6 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @extent_io_init() local_unnamed_addr #6 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @extent_state_cache_init() local_unnamed_addr #6 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @extent_map_init() local_unnamed_addr #6 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @ordered_data_init() local_unnamed_addr #6 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @btrfs_delayed_inode_init() local_unnamed_addr #6 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @btrfs_auto_defrag_init() local_unnamed_addr #6 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @btrfs_delayed_ref_init() local_unnamed_addr #6 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @btrfs_prelim_ref_init() local_unnamed_addr #6 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @btrfs_end_io_wq_init() local_unnamed_addr #6 section ".init.text"

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @btrfs_print_mod_info() unnamed_addr #4 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @crc32c_impl() #23
  %call1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.645, ptr noundef %call, ptr noundef nonnull @btrfs_print_mod_info.options) #30
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_run_sanity_tests() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_filesystem(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @misc_register(ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umin.i64(i64, i64) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.usub.sat.i64(i64, i64) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.smax.i64(i64, i64) #12

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #23

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memmove(ptr, ptr, i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_handle_no_return()

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #24 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 946)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #24 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 946)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { nocallback nofree nosync nounwind willreturn }
attributes #6 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { cold noreturn null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #13 = { nounwind readonly }
attributes #14 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #15 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #18 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #19 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { cold inlinehint noreturn nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #21 = { mustprogress nofree nosync nounwind null_pointer_is_valid readnone willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #23 = { nounwind }
attributes #24 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #25 = { nomerge }
attributes #26 = { nobuiltin nounwind }
attributes #27 = { nobuiltin }
attributes #28 = { nounwind readonly willreturn }
attributes #29 = { nounwind readnone willreturn }
attributes #30 = { cold nounwind }
attributes #31 = { cold }
attributes #32 = { cold noreturn nounwind }
attributes #33 = { nounwind allocsize(2) }
attributes #34 = { nounwind allocsize(0) }
attributes #35 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !10, !11, !12, !14, !15, !16, !18, !19, !20, !22, !23, !24, !26, !27, !28, !30, !31, !32, !34, !35, !36, !38, !39, !40, !42, !43, !44, !46, !47, !48, !50, !51, !52, !54, !55, !56, !58, !59, !60, !62, !63, !64, !66, !67, !68, !70, !71, !72, !74, !75, !76, !78, !79, !80, !82, !83, !84, !86, !87, !88, !90, !91, !92, !94, !95, !96, !98, !99, !100, !102, !103, !104, !106, !107, !108, !110, !111, !112, !114, !115, !116, !118, !119, !120, !122, !123, !124, !126, !127, !128, !130, !131, !132, !134, !135, !136, !138, !139, !140, !142, !143, !144, !146, !147, !148, !150, !151, !152, !154, !155, !156, !158, !159, !160, !162, !163, !164, !166, !167, !168, !170, !171, !172, !174, !175, !176, !178, !179, !180, !182, !183, !184, !186, !187, !188, !190, !191, !192, !194, !195, !196, !198, !199, !200, !202, !203, !204, !206, !207, !208, !210, !211, !212, !214, !215, !216, !218, !219, !220, !222, !223, !224, !226, !227, !228, !230, !231, !232, !234, !235, !236, !238, !239, !240, !242, !243, !244, !246, !247, !248, !250, !251, !252, !254, !255, !256, !258, !259, !260, !262, !263, !264, !266, !267, !268, !270, !271, !272, !274, !275, !276, !278, !279, !280, !282, !283, !284, !286, !287, !288, !290, !291, !292, !294, !295, !296, !298, !299, !300, !302, !303, !304, !306, !307, !308, !310, !311, !312, !314, !315, !316, !318, !319, !320, !322, !323, !324, !326, !327, !328, !330, !331, !332, !334, !335, !336, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !366, !367, !368, !369, !370, !371, !372, !373, !374, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !418, !419, !420, !421, !422, !423, !424, !425, !426, !428, !429, !430, !431, !432, !433, !434, !435, !436, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !523, !525, !526, !527, !528, !529, !530, !531, !532, !533, !535, !536, !537, !538, !539, !540, !541, !542, !543, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !561, !562, !563, !564, !565, !567, !568, !569, !570, !571, !573, !574, !575, !576, !577, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !597, !598, !599, !600, !601, !602, !603, !604, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !627, !629, !630, !631, !632, !633, !634, !635, !636, !637, !639, !640, !641, !643, !644, !645, !647, !648, !649, !650, !651, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !680, !681, !682, !683, !684, !685, !686, !687, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !710, !711, !712, !713, !714, !715, !716, !717, !719, !720, !721, !722, !723, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !833, !835, !837, !839, !841, !843, !845, !847, !849, !851, !853, !854, !855, !856, !857, !859, !860, !861, !863, !865, !867, !868, !869, !871, !872, !873, !875, !877, !879, !881, !883, !885, !887, !889, !891, !893, !895, !897, !899, !901, !903, !905, !907, !909, !911, !913, !915, !917, !919, !921, !923, !925, !926, !927, !929, !931, !933, !935, !937, !939, !941, !943, !945, !947, !949, !951, !953, !955, !957, !959, !961, !963, !965, !967, !969, !971, !973, !975, !977, !979, !981, !983, !985, !987, !989, !990, !991, !993, !995, !997, !999, !1001, !1003, !1005, !1007, !1009, !1011, !1013, !1015, !1017, !1019, !1021, !1023, !1025, !1027, !1029, !1031, !1033, !1035, !1037, !1039, !1041, !1042, !1044, !1046, !1048, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1685, !1687, !1689, !1691, !1693, !1695, !1697, !1699, !1701, !1703, !1705, !1707, !1709, !1711, !1713, !1715, !1717, !1719, !1721, !1723, !1725, !1727, !1729, !1731, !1733, !1735, !1737, !1739, !1741, !1743, !1745, !1747, !1749, !1751, !1753, !1755, !1757, !1759, !1761, !1763, !1765, !1767, !1769, !1771, !1773, !1775, !1777, !1779, !1781, !1783, !1785, !1787, !1789, !1791, !1793, !1795, !1797, !1799, !1801, !1803, !1805, !1807, !1809, !1811, !1813, !1815, !1817, !1819, !1821, !1823, !1825, !1827, !1829, !1831, !1833, !1835, !1837, !1839, !1841, !1843, !1845, !1847, !1849, !1851, !1852, !1853, !1854, !1855, !1857, !1858, !1860, !1861, !1862, !1864, !1866, !1868, !1870, !1872, !1874, !1876, !1878, !1880, !1882, !1884, !1886, !1887, !1889, !1890, !1891, !1892, !1893, !1895, !1896, !1897, !1899, !1900, !1902, !1904, !1906, !1908, !1910, !1912, !1914, !1916, !1918, !1920, !1922, !1924, !1926, !1928, !1930, !1932, !1934, !1936, !1938, !1940, !1942, !1944, !1946, !1948, !1950, !1952, !1954, !1956, !1958, !1960, !1962, !1964, !1966, !1968, !1970, !1972, !1974, !1976, !1978, !1980, !1982, !1984, !1986, !1988, !1990, !1992, !1994, !1996, !1998, !2000, !2002, !2004, !2006, !2007, !2008}
!llvm.named.register.sp = !{!2009}
!llvm.module.flags = !{!2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017}
!llvm.ident = !{!2018}

!0 = !{ptr @__tracepoint_btrfs_transaction_commit, !1, !"__tracepoint_btrfs_transaction_commit", i1 false, i1 false}
!1 = !{!"../include/trace/events/btrfs.h", i32 183, i32 1}
!2 = !{ptr @__tracepoint_ptr_btrfs_transaction_commit, !1, !"__tracepoint_ptr_btrfs_transaction_commit", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_btrfs_transaction_commit, !1, !"__SCK__tp_func_btrfs_transaction_commit", i1 false, i1 false}
!4 = !{ptr @__tracepoint_btrfs_inode_new, !5, !"__tracepoint_btrfs_inode_new", i1 false, i1 false}
!5 = !{!"../include/trace/events/btrfs.h", i32 242, i32 1}
!6 = !{ptr @__tracepoint_ptr_btrfs_inode_new, !5, !"__tracepoint_ptr_btrfs_inode_new", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_btrfs_inode_new, !5, !"__SCK__tp_func_btrfs_inode_new", i1 false, i1 false}
!8 = !{ptr @__tracepoint_btrfs_inode_request, !9, !"__tracepoint_btrfs_inode_request", i1 false, i1 false}
!9 = !{!"../include/trace/events/btrfs.h", i32 249, i32 1}
!10 = !{ptr @__tracepoint_ptr_btrfs_inode_request, !9, !"__tracepoint_ptr_btrfs_inode_request", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_btrfs_inode_request, !9, !"__SCK__tp_func_btrfs_inode_request", i1 false, i1 false}
!12 = !{ptr @__tracepoint_btrfs_inode_evict, !13, !"__tracepoint_btrfs_inode_evict", i1 false, i1 false}
!13 = !{!"../include/trace/events/btrfs.h", i32 256, i32 1}
!14 = !{ptr @__tracepoint_ptr_btrfs_inode_evict, !13, !"__tracepoint_ptr_btrfs_inode_evict", i1 false, i1 false}
!15 = !{ptr @__SCK__tp_func_btrfs_inode_evict, !13, !"__SCK__tp_func_btrfs_inode_evict", i1 false, i1 false}
!16 = !{ptr @__tracepoint_btrfs_get_extent, !17, !"__tracepoint_btrfs_get_extent", i1 false, i1 false}
!17 = !{!"../include/trace/events/btrfs.h", i32 282, i32 1}
!18 = !{ptr @__tracepoint_ptr_btrfs_get_extent, !17, !"__tracepoint_ptr_btrfs_get_extent", i1 false, i1 false}
!19 = !{ptr @__SCK__tp_func_btrfs_get_extent, !17, !"__SCK__tp_func_btrfs_get_extent", i1 false, i1 false}
!20 = !{ptr @__tracepoint_btrfs_handle_em_exist, !21, !"__tracepoint_btrfs_handle_em_exist", i1 false, i1 false}
!21 = !{!"../include/trace/events/btrfs.h", i32 332, i32 1}
!22 = !{ptr @__tracepoint_ptr_btrfs_handle_em_exist, !21, !"__tracepoint_ptr_btrfs_handle_em_exist", i1 false, i1 false}
!23 = !{ptr @__SCK__tp_func_btrfs_handle_em_exist, !21, !"__SCK__tp_func_btrfs_handle_em_exist", i1 false, i1 false}
!24 = !{ptr @__tracepoint_btrfs_get_extent_show_fi_regular, !25, !"__tracepoint_btrfs_get_extent_show_fi_regular", i1 false, i1 false}
!25 = !{!"../include/trace/events/btrfs.h", i32 465, i32 1}
!26 = !{ptr @__tracepoint_ptr_btrfs_get_extent_show_fi_regular, !25, !"__tracepoint_ptr_btrfs_get_extent_show_fi_regular", i1 false, i1 false}
!27 = !{ptr @__SCK__tp_func_btrfs_get_extent_show_fi_regular, !25, !"__SCK__tp_func_btrfs_get_extent_show_fi_regular", i1 false, i1 false}
!28 = !{ptr @__tracepoint_btrfs_truncate_show_fi_regular, !29, !"__tracepoint_btrfs_truncate_show_fi_regular", i1 false, i1 false}
!29 = !{!"../include/trace/events/btrfs.h", i32 474, i32 1}
!30 = !{ptr @__tracepoint_ptr_btrfs_truncate_show_fi_regular, !29, !"__tracepoint_ptr_btrfs_truncate_show_fi_regular", i1 false, i1 false}
!31 = !{ptr @__SCK__tp_func_btrfs_truncate_show_fi_regular, !29, !"__SCK__tp_func_btrfs_truncate_show_fi_regular", i1 false, i1 false}
!32 = !{ptr @__tracepoint_btrfs_get_extent_show_fi_inline, !33, !"__tracepoint_btrfs_get_extent_show_fi_inline", i1 false, i1 false}
!33 = !{!"../include/trace/events/btrfs.h", i32 483, i32 1}
!34 = !{ptr @__tracepoint_ptr_btrfs_get_extent_show_fi_inline, !33, !"__tracepoint_ptr_btrfs_get_extent_show_fi_inline", i1 false, i1 false}
!35 = !{ptr @__SCK__tp_func_btrfs_get_extent_show_fi_inline, !33, !"__SCK__tp_func_btrfs_get_extent_show_fi_inline", i1 false, i1 false}
!36 = !{ptr @__tracepoint_btrfs_truncate_show_fi_inline, !37, !"__tracepoint_btrfs_truncate_show_fi_inline", i1 false, i1 false}
!37 = !{!"../include/trace/events/btrfs.h", i32 492, i32 1}
!38 = !{ptr @__tracepoint_ptr_btrfs_truncate_show_fi_inline, !37, !"__tracepoint_ptr_btrfs_truncate_show_fi_inline", i1 false, i1 false}
!39 = !{ptr @__SCK__tp_func_btrfs_truncate_show_fi_inline, !37, !"__SCK__tp_func_btrfs_truncate_show_fi_inline", i1 false, i1 false}
!40 = !{ptr @__tracepoint_btrfs_ordered_extent_add, !41, !"__tracepoint_btrfs_ordered_extent_add", i1 false, i1 false}
!41 = !{!"../include/trace/events/btrfs.h", i32 566, i32 1}
!42 = !{ptr @__tracepoint_ptr_btrfs_ordered_extent_add, !41, !"__tracepoint_ptr_btrfs_ordered_extent_add", i1 false, i1 false}
!43 = !{ptr @__SCK__tp_func_btrfs_ordered_extent_add, !41, !"__SCK__tp_func_btrfs_ordered_extent_add", i1 false, i1 false}
!44 = !{ptr @__tracepoint_btrfs_ordered_extent_remove, !45, !"__tracepoint_btrfs_ordered_extent_remove", i1 false, i1 false}
!45 = !{!"../include/trace/events/btrfs.h", i32 574, i32 1}
!46 = !{ptr @__tracepoint_ptr_btrfs_ordered_extent_remove, !45, !"__tracepoint_ptr_btrfs_ordered_extent_remove", i1 false, i1 false}
!47 = !{ptr @__SCK__tp_func_btrfs_ordered_extent_remove, !45, !"__SCK__tp_func_btrfs_ordered_extent_remove", i1 false, i1 false}
!48 = !{ptr @__tracepoint_btrfs_ordered_extent_start, !49, !"__tracepoint_btrfs_ordered_extent_start", i1 false, i1 false}
!49 = !{!"../include/trace/events/btrfs.h", i32 582, i32 1}
!50 = !{ptr @__tracepoint_ptr_btrfs_ordered_extent_start, !49, !"__tracepoint_ptr_btrfs_ordered_extent_start", i1 false, i1 false}
!51 = !{ptr @__SCK__tp_func_btrfs_ordered_extent_start, !49, !"__SCK__tp_func_btrfs_ordered_extent_start", i1 false, i1 false}
!52 = !{ptr @__tracepoint_btrfs_ordered_extent_put, !53, !"__tracepoint_btrfs_ordered_extent_put", i1 false, i1 false}
!53 = !{!"../include/trace/events/btrfs.h", i32 590, i32 1}
!54 = !{ptr @__tracepoint_ptr_btrfs_ordered_extent_put, !53, !"__tracepoint_ptr_btrfs_ordered_extent_put", i1 false, i1 false}
!55 = !{ptr @__SCK__tp_func_btrfs_ordered_extent_put, !53, !"__SCK__tp_func_btrfs_ordered_extent_put", i1 false, i1 false}
!56 = !{ptr @__tracepoint___extent_writepage, !57, !"__tracepoint___extent_writepage", i1 false, i1 false}
!57 = !{!"../include/trace/events/btrfs.h", i32 647, i32 1}
!58 = !{ptr @__tracepoint_ptr___extent_writepage, !57, !"__tracepoint_ptr___extent_writepage", i1 false, i1 false}
!59 = !{ptr @__SCK__tp_func___extent_writepage, !57, !"__SCK__tp_func___extent_writepage", i1 false, i1 false}
!60 = !{ptr @__tracepoint_btrfs_writepage_end_io_hook, !61, !"__tracepoint_btrfs_writepage_end_io_hook", i1 false, i1 false}
!61 = !{!"../include/trace/events/btrfs.h", i32 655, i32 1}
!62 = !{ptr @__tracepoint_ptr_btrfs_writepage_end_io_hook, !61, !"__tracepoint_ptr_btrfs_writepage_end_io_hook", i1 false, i1 false}
!63 = !{ptr @__SCK__tp_func_btrfs_writepage_end_io_hook, !61, !"__SCK__tp_func_btrfs_writepage_end_io_hook", i1 false, i1 false}
!64 = !{ptr @__tracepoint_btrfs_sync_file, !65, !"__tracepoint_btrfs_sync_file", i1 false, i1 false}
!65 = !{!"../include/trace/events/btrfs.h", i32 684, i32 1}
!66 = !{ptr @__tracepoint_ptr_btrfs_sync_file, !65, !"__tracepoint_ptr_btrfs_sync_file", i1 false, i1 false}
!67 = !{ptr @__SCK__tp_func_btrfs_sync_file, !65, !"__SCK__tp_func_btrfs_sync_file", i1 false, i1 false}
!68 = !{ptr @__tracepoint_btrfs_sync_fs, !69, !"__tracepoint_btrfs_sync_fs", i1 false, i1 false}
!69 = !{!"../include/trace/events/btrfs.h", i32 716, i32 1}
!70 = !{ptr @__tracepoint_ptr_btrfs_sync_fs, !69, !"__tracepoint_ptr_btrfs_sync_fs", i1 false, i1 false}
!71 = !{ptr @__SCK__tp_func_btrfs_sync_fs, !69, !"__SCK__tp_func_btrfs_sync_fs", i1 false, i1 false}
!72 = !{ptr @__tracepoint_btrfs_add_block_group, !73, !"__tracepoint_btrfs_add_block_group", i1 false, i1 false}
!73 = !{!"../include/trace/events/btrfs.h", i32 733, i32 1}
!74 = !{ptr @__tracepoint_ptr_btrfs_add_block_group, !73, !"__tracepoint_ptr_btrfs_add_block_group", i1 false, i1 false}
!75 = !{ptr @__SCK__tp_func_btrfs_add_block_group, !73, !"__SCK__tp_func_btrfs_add_block_group", i1 false, i1 false}
!76 = !{ptr @__tracepoint_add_delayed_tree_ref, !77, !"__tracepoint_add_delayed_tree_ref", i1 false, i1 false}
!77 = !{!"../include/trace/events/btrfs.h", i32 821, i32 1}
!78 = !{ptr @__tracepoint_ptr_add_delayed_tree_ref, !77, !"__tracepoint_ptr_add_delayed_tree_ref", i1 false, i1 false}
!79 = !{ptr @__SCK__tp_func_add_delayed_tree_ref, !77, !"__SCK__tp_func_add_delayed_tree_ref", i1 false, i1 false}
!80 = !{ptr @__tracepoint_run_delayed_tree_ref, !81, !"__tracepoint_run_delayed_tree_ref", i1 false, i1 false}
!81 = !{!"../include/trace/events/btrfs.h", i32 831, i32 1}
!82 = !{ptr @__tracepoint_ptr_run_delayed_tree_ref, !81, !"__tracepoint_ptr_run_delayed_tree_ref", i1 false, i1 false}
!83 = !{ptr @__SCK__tp_func_run_delayed_tree_ref, !81, !"__SCK__tp_func_run_delayed_tree_ref", i1 false, i1 false}
!84 = !{ptr @__tracepoint_add_delayed_data_ref, !85, !"__tracepoint_add_delayed_data_ref", i1 false, i1 false}
!85 = !{!"../include/trace/events/btrfs.h", i32 888, i32 1}
!86 = !{ptr @__tracepoint_ptr_add_delayed_data_ref, !85, !"__tracepoint_ptr_add_delayed_data_ref", i1 false, i1 false}
!87 = !{ptr @__SCK__tp_func_add_delayed_data_ref, !85, !"__SCK__tp_func_add_delayed_data_ref", i1 false, i1 false}
!88 = !{ptr @__tracepoint_run_delayed_data_ref, !89, !"__tracepoint_run_delayed_data_ref", i1 false, i1 false}
!89 = !{!"../include/trace/events/btrfs.h", i32 898, i32 1}
!90 = !{ptr @__tracepoint_ptr_run_delayed_data_ref, !89, !"__tracepoint_ptr_run_delayed_data_ref", i1 false, i1 false}
!91 = !{ptr @__SCK__tp_func_run_delayed_data_ref, !89, !"__SCK__tp_func_run_delayed_data_ref", i1 false, i1 false}
!92 = !{ptr @__tracepoint_add_delayed_ref_head, !93, !"__tracepoint_add_delayed_ref_head", i1 false, i1 false}
!93 = !{!"../include/trace/events/btrfs.h", i32 937, i32 1}
!94 = !{ptr @__tracepoint_ptr_add_delayed_ref_head, !93, !"__tracepoint_ptr_add_delayed_ref_head", i1 false, i1 false}
!95 = !{ptr @__SCK__tp_func_add_delayed_ref_head, !93, !"__SCK__tp_func_add_delayed_ref_head", i1 false, i1 false}
!96 = !{ptr @__tracepoint_run_delayed_ref_head, !97, !"__tracepoint_run_delayed_ref_head", i1 false, i1 false}
!97 = !{!"../include/trace/events/btrfs.h", i32 946, i32 1}
!98 = !{ptr @__tracepoint_ptr_run_delayed_ref_head, !97, !"__tracepoint_ptr_run_delayed_ref_head", i1 false, i1 false}
!99 = !{ptr @__SCK__tp_func_run_delayed_ref_head, !97, !"__SCK__tp_func_run_delayed_ref_head", i1 false, i1 false}
!100 = !{ptr @__tracepoint_btrfs_chunk_alloc, !101, !"__tracepoint_btrfs_chunk_alloc", i1 false, i1 false}
!101 = !{!"../include/trace/events/btrfs.h", i32 1001, i32 1}
!102 = !{ptr @__tracepoint_ptr_btrfs_chunk_alloc, !101, !"__tracepoint_ptr_btrfs_chunk_alloc", i1 false, i1 false}
!103 = !{ptr @__SCK__tp_func_btrfs_chunk_alloc, !101, !"__SCK__tp_func_btrfs_chunk_alloc", i1 false, i1 false}
!104 = !{ptr @__tracepoint_btrfs_chunk_free, !105, !"__tracepoint_btrfs_chunk_free", i1 false, i1 false}
!105 = !{!"../include/trace/events/btrfs.h", i32 1009, i32 1}
!106 = !{ptr @__tracepoint_ptr_btrfs_chunk_free, !105, !"__tracepoint_ptr_btrfs_chunk_free", i1 false, i1 false}
!107 = !{ptr @__SCK__tp_func_btrfs_chunk_free, !105, !"__SCK__tp_func_btrfs_chunk_free", i1 false, i1 false}
!108 = !{ptr @__tracepoint_btrfs_cow_block, !109, !"__tracepoint_btrfs_cow_block", i1 false, i1 false}
!109 = !{!"../include/trace/events/btrfs.h", i32 1017, i32 1}
!110 = !{ptr @__tracepoint_ptr_btrfs_cow_block, !109, !"__tracepoint_ptr_btrfs_cow_block", i1 false, i1 false}
!111 = !{ptr @__SCK__tp_func_btrfs_cow_block, !109, !"__SCK__tp_func_btrfs_cow_block", i1 false, i1 false}
!112 = !{ptr @__tracepoint_btrfs_space_reservation, !113, !"__tracepoint_btrfs_space_reservation", i1 false, i1 false}
!113 = !{!"../include/trace/events/btrfs.h", i32 1052, i32 1}
!114 = !{ptr @__tracepoint_ptr_btrfs_space_reservation, !113, !"__tracepoint_ptr_btrfs_space_reservation", i1 false, i1 false}
!115 = !{ptr @__SCK__tp_func_btrfs_space_reservation, !113, !"__SCK__tp_func_btrfs_space_reservation", i1 false, i1 false}
!116 = !{ptr @__tracepoint_btrfs_trigger_flush, !117, !"__tracepoint_btrfs_trigger_flush", i1 false, i1 false}
!117 = !{!"../include/trace/events/btrfs.h", i32 1078, i32 1}
!118 = !{ptr @__tracepoint_ptr_btrfs_trigger_flush, !117, !"__tracepoint_ptr_btrfs_trigger_flush", i1 false, i1 false}
!119 = !{ptr @__SCK__tp_func_btrfs_trigger_flush, !117, !"__SCK__tp_func_btrfs_trigger_flush", i1 false, i1 false}
!120 = !{ptr @__tracepoint_btrfs_flush_space, !121, !"__tracepoint_btrfs_flush_space", i1 false, i1 false}
!121 = !{!"../include/trace/events/btrfs.h", i32 1109, i32 1}
!122 = !{ptr @__tracepoint_ptr_btrfs_flush_space, !121, !"__tracepoint_ptr_btrfs_flush_space", i1 false, i1 false}
!123 = !{ptr @__SCK__tp_func_btrfs_flush_space, !121, !"__SCK__tp_func_btrfs_flush_space", i1 false, i1 false}
!124 = !{ptr @__tracepoint_btrfs_reserved_extent_alloc, !125, !"__tracepoint_btrfs_reserved_extent_alloc", i1 false, i1 false}
!125 = !{!"../include/trace/events/btrfs.h", i32 1163, i32 1}
!126 = !{ptr @__tracepoint_ptr_btrfs_reserved_extent_alloc, !125, !"__tracepoint_ptr_btrfs_reserved_extent_alloc", i1 false, i1 false}
!127 = !{ptr @__SCK__tp_func_btrfs_reserved_extent_alloc, !125, !"__SCK__tp_func_btrfs_reserved_extent_alloc", i1 false, i1 false}
!128 = !{ptr @__tracepoint_btrfs_reserved_extent_free, !129, !"__tracepoint_btrfs_reserved_extent_free", i1 false, i1 false}
!129 = !{!"../include/trace/events/btrfs.h", i32 1170, i32 1}
!130 = !{ptr @__tracepoint_ptr_btrfs_reserved_extent_free, !129, !"__tracepoint_ptr_btrfs_reserved_extent_free", i1 false, i1 false}
!131 = !{ptr @__SCK__tp_func_btrfs_reserved_extent_free, !129, !"__SCK__tp_func_btrfs_reserved_extent_free", i1 false, i1 false}
!132 = !{ptr @__tracepoint_find_free_extent, !133, !"__tracepoint_find_free_extent", i1 false, i1 false}
!133 = !{!"../include/trace/events/btrfs.h", i32 1177, i32 1}
!134 = !{ptr @__tracepoint_ptr_find_free_extent, !133, !"__tracepoint_ptr_find_free_extent", i1 false, i1 false}
!135 = !{ptr @__SCK__tp_func_find_free_extent, !133, !"__SCK__tp_func_find_free_extent", i1 false, i1 false}
!136 = !{ptr @__tracepoint_btrfs_reserve_extent, !137, !"__tracepoint_btrfs_reserve_extent", i1 false, i1 false}
!137 = !{!"../include/trace/events/btrfs.h", i32 1235, i32 1}
!138 = !{ptr @__tracepoint_ptr_btrfs_reserve_extent, !137, !"__tracepoint_ptr_btrfs_reserve_extent", i1 false, i1 false}
!139 = !{ptr @__SCK__tp_func_btrfs_reserve_extent, !137, !"__SCK__tp_func_btrfs_reserve_extent", i1 false, i1 false}
!140 = !{ptr @__tracepoint_btrfs_reserve_extent_cluster, !141, !"__tracepoint_btrfs_reserve_extent_cluster", i1 false, i1 false}
!141 = !{!"../include/trace/events/btrfs.h", i32 1243, i32 1}
!142 = !{ptr @__tracepoint_ptr_btrfs_reserve_extent_cluster, !141, !"__tracepoint_ptr_btrfs_reserve_extent_cluster", i1 false, i1 false}
!143 = !{ptr @__SCK__tp_func_btrfs_reserve_extent_cluster, !141, !"__SCK__tp_func_btrfs_reserve_extent_cluster", i1 false, i1 false}
!144 = !{ptr @__tracepoint_btrfs_find_cluster, !145, !"__tracepoint_btrfs_find_cluster", i1 false, i1 false}
!145 = !{!"../include/trace/events/btrfs.h", i32 1251, i32 1}
!146 = !{ptr @__tracepoint_ptr_btrfs_find_cluster, !145, !"__tracepoint_ptr_btrfs_find_cluster", i1 false, i1 false}
!147 = !{ptr @__SCK__tp_func_btrfs_find_cluster, !145, !"__SCK__tp_func_btrfs_find_cluster", i1 false, i1 false}
!148 = !{ptr @__tracepoint_btrfs_failed_cluster_setup, !149, !"__tracepoint_btrfs_failed_cluster_setup", i1 false, i1 false}
!149 = !{!"../include/trace/events/btrfs.h", i32 1284, i32 1}
!150 = !{ptr @__tracepoint_ptr_btrfs_failed_cluster_setup, !149, !"__tracepoint_ptr_btrfs_failed_cluster_setup", i1 false, i1 false}
!151 = !{ptr @__SCK__tp_func_btrfs_failed_cluster_setup, !149, !"__SCK__tp_func_btrfs_failed_cluster_setup", i1 false, i1 false}
!152 = !{ptr @__tracepoint_btrfs_setup_cluster, !153, !"__tracepoint_btrfs_setup_cluster", i1 false, i1 false}
!153 = !{!"../include/trace/events/btrfs.h", i32 1301, i32 1}
!154 = !{ptr @__tracepoint_ptr_btrfs_setup_cluster, !153, !"__tracepoint_ptr_btrfs_setup_cluster", i1 false, i1 false}
!155 = !{ptr @__SCK__tp_func_btrfs_setup_cluster, !153, !"__SCK__tp_func_btrfs_setup_cluster", i1 false, i1 false}
!156 = !{ptr @__tracepoint_alloc_extent_state, !157, !"__tracepoint_alloc_extent_state", i1 false, i1 false}
!157 = !{!"../include/trace/events/btrfs.h", i32 1337, i32 1}
!158 = !{ptr @__tracepoint_ptr_alloc_extent_state, !157, !"__tracepoint_ptr_alloc_extent_state", i1 false, i1 false}
!159 = !{ptr @__SCK__tp_func_alloc_extent_state, !157, !"__SCK__tp_func_alloc_extent_state", i1 false, i1 false}
!160 = !{ptr @__tracepoint_free_extent_state, !161, !"__tracepoint_free_extent_state", i1 false, i1 false}
!161 = !{!"../include/trace/events/btrfs.h", i32 1360, i32 1}
!162 = !{ptr @__tracepoint_ptr_free_extent_state, !161, !"__tracepoint_ptr_free_extent_state", i1 false, i1 false}
!163 = !{ptr @__SCK__tp_func_free_extent_state, !161, !"__SCK__tp_func_free_extent_state", i1 false, i1 false}
!164 = !{ptr @__tracepoint_btrfs_work_queued, !165, !"__tracepoint_btrfs_work_queued", i1 false, i1 false}
!165 = !{!"../include/trace/events/btrfs.h", i32 1431, i32 1}
!166 = !{ptr @__tracepoint_ptr_btrfs_work_queued, !165, !"__tracepoint_ptr_btrfs_work_queued", i1 false, i1 false}
!167 = !{ptr @__SCK__tp_func_btrfs_work_queued, !165, !"__SCK__tp_func_btrfs_work_queued", i1 false, i1 false}
!168 = !{ptr @__tracepoint_btrfs_work_sched, !169, !"__tracepoint_btrfs_work_sched", i1 false, i1 false}
!169 = !{!"../include/trace/events/btrfs.h", i32 1438, i32 1}
!170 = !{ptr @__tracepoint_ptr_btrfs_work_sched, !169, !"__tracepoint_ptr_btrfs_work_sched", i1 false, i1 false}
!171 = !{ptr @__SCK__tp_func_btrfs_work_sched, !169, !"__SCK__tp_func_btrfs_work_sched", i1 false, i1 false}
!172 = !{ptr @__tracepoint_btrfs_all_work_done, !173, !"__tracepoint_btrfs_all_work_done", i1 false, i1 false}
!173 = !{!"../include/trace/events/btrfs.h", i32 1445, i32 1}
!174 = !{ptr @__tracepoint_ptr_btrfs_all_work_done, !173, !"__tracepoint_ptr_btrfs_all_work_done", i1 false, i1 false}
!175 = !{ptr @__SCK__tp_func_btrfs_all_work_done, !173, !"__SCK__tp_func_btrfs_all_work_done", i1 false, i1 false}
!176 = !{ptr @__tracepoint_btrfs_ordered_sched, !177, !"__tracepoint_btrfs_ordered_sched", i1 false, i1 false}
!177 = !{!"../include/trace/events/btrfs.h", i32 1452, i32 1}
!178 = !{ptr @__tracepoint_ptr_btrfs_ordered_sched, !177, !"__tracepoint_ptr_btrfs_ordered_sched", i1 false, i1 false}
!179 = !{ptr @__SCK__tp_func_btrfs_ordered_sched, !177, !"__SCK__tp_func_btrfs_ordered_sched", i1 false, i1 false}
!180 = !{ptr @__tracepoint_btrfs_workqueue_alloc, !181, !"__tracepoint_btrfs_workqueue_alloc", i1 false, i1 false}
!181 = !{!"../include/trace/events/btrfs.h", i32 1484, i32 1}
!182 = !{ptr @__tracepoint_ptr_btrfs_workqueue_alloc, !181, !"__tracepoint_ptr_btrfs_workqueue_alloc", i1 false, i1 false}
!183 = !{ptr @__SCK__tp_func_btrfs_workqueue_alloc, !181, !"__SCK__tp_func_btrfs_workqueue_alloc", i1 false, i1 false}
!184 = !{ptr @__tracepoint_btrfs_workqueue_destroy, !185, !"__tracepoint_btrfs_workqueue_destroy", i1 false, i1 false}
!185 = !{!"../include/trace/events/btrfs.h", i32 1509, i32 1}
!186 = !{ptr @__tracepoint_ptr_btrfs_workqueue_destroy, !185, !"__tracepoint_ptr_btrfs_workqueue_destroy", i1 false, i1 false}
!187 = !{ptr @__SCK__tp_func_btrfs_workqueue_destroy, !185, !"__SCK__tp_func_btrfs_workqueue_destroy", i1 false, i1 false}
!188 = !{ptr @__tracepoint_btrfs_qgroup_reserve_data, !189, !"__tracepoint_btrfs_qgroup_reserve_data", i1 false, i1 false}
!189 = !{!"../include/trace/events/btrfs.h", i32 1555, i32 1}
!190 = !{ptr @__tracepoint_ptr_btrfs_qgroup_reserve_data, !189, !"__tracepoint_ptr_btrfs_qgroup_reserve_data", i1 false, i1 false}
!191 = !{ptr @__SCK__tp_func_btrfs_qgroup_reserve_data, !189, !"__SCK__tp_func_btrfs_qgroup_reserve_data", i1 false, i1 false}
!192 = !{ptr @__tracepoint_btrfs_qgroup_release_data, !193, !"__tracepoint_btrfs_qgroup_release_data", i1 false, i1 false}
!193 = !{!"../include/trace/events/btrfs.h", i32 1563, i32 1}
!194 = !{ptr @__tracepoint_ptr_btrfs_qgroup_release_data, !193, !"__tracepoint_ptr_btrfs_qgroup_release_data", i1 false, i1 false}
!195 = !{ptr @__SCK__tp_func_btrfs_qgroup_release_data, !193, !"__SCK__tp_func_btrfs_qgroup_release_data", i1 false, i1 false}
!196 = !{ptr @__tracepoint_btrfs_qgroup_account_extents, !197, !"__tracepoint_btrfs_qgroup_account_extents", i1 false, i1 false}
!197 = !{!"../include/trace/events/btrfs.h", i32 1591, i32 1}
!198 = !{ptr @__tracepoint_ptr_btrfs_qgroup_account_extents, !197, !"__tracepoint_ptr_btrfs_qgroup_account_extents", i1 false, i1 false}
!199 = !{ptr @__SCK__tp_func_btrfs_qgroup_account_extents, !197, !"__SCK__tp_func_btrfs_qgroup_account_extents", i1 false, i1 false}
!200 = !{ptr @__tracepoint_btrfs_qgroup_trace_extent, !201, !"__tracepoint_btrfs_qgroup_trace_extent", i1 false, i1 false}
!201 = !{!"../include/trace/events/btrfs.h", i32 1599, i32 1}
!202 = !{ptr @__tracepoint_ptr_btrfs_qgroup_trace_extent, !201, !"__tracepoint_ptr_btrfs_qgroup_trace_extent", i1 false, i1 false}
!203 = !{ptr @__SCK__tp_func_btrfs_qgroup_trace_extent, !201, !"__SCK__tp_func_btrfs_qgroup_trace_extent", i1 false, i1 false}
!204 = !{ptr @__tracepoint_qgroup_num_dirty_extents, !205, !"__tracepoint_qgroup_num_dirty_extents", i1 false, i1 false}
!205 = !{!"../include/trace/events/btrfs.h", i32 1607, i32 1}
!206 = !{ptr @__tracepoint_ptr_qgroup_num_dirty_extents, !205, !"__tracepoint_ptr_qgroup_num_dirty_extents", i1 false, i1 false}
!207 = !{ptr @__SCK__tp_func_qgroup_num_dirty_extents, !205, !"__SCK__tp_func_qgroup_num_dirty_extents", i1 false, i1 false}
!208 = !{ptr @__tracepoint_btrfs_qgroup_account_extent, !209, !"__tracepoint_btrfs_qgroup_account_extent", i1 false, i1 false}
!209 = !{!"../include/trace/events/btrfs.h", i32 1628, i32 1}
!210 = !{ptr @__tracepoint_ptr_btrfs_qgroup_account_extent, !209, !"__tracepoint_ptr_btrfs_qgroup_account_extent", i1 false, i1 false}
!211 = !{ptr @__SCK__tp_func_btrfs_qgroup_account_extent, !209, !"__SCK__tp_func_btrfs_qgroup_account_extent", i1 false, i1 false}
!212 = !{ptr @__tracepoint_qgroup_update_counters, !213, !"__tracepoint_qgroup_update_counters", i1 false, i1 false}
!213 = !{!"../include/trace/events/btrfs.h", i32 1661, i32 1}
!214 = !{ptr @__tracepoint_ptr_qgroup_update_counters, !213, !"__tracepoint_ptr_qgroup_update_counters", i1 false, i1 false}
!215 = !{ptr @__SCK__tp_func_qgroup_update_counters, !213, !"__SCK__tp_func_qgroup_update_counters", i1 false, i1 false}
!216 = !{ptr @__tracepoint_qgroup_update_reserve, !217, !"__tracepoint_qgroup_update_reserve", i1 false, i1 false}
!217 = !{!"../include/trace/events/btrfs.h", i32 1690, i32 1}
!218 = !{ptr @__tracepoint_ptr_qgroup_update_reserve, !217, !"__tracepoint_ptr_qgroup_update_reserve", i1 false, i1 false}
!219 = !{ptr @__SCK__tp_func_qgroup_update_reserve, !217, !"__SCK__tp_func_qgroup_update_reserve", i1 false, i1 false}
!220 = !{ptr @__tracepoint_qgroup_meta_reserve, !221, !"__tracepoint_qgroup_meta_reserve", i1 false, i1 false}
!221 = !{!"../include/trace/events/btrfs.h", i32 1716, i32 1}
!222 = !{ptr @__tracepoint_ptr_qgroup_meta_reserve, !221, !"__tracepoint_ptr_qgroup_meta_reserve", i1 false, i1 false}
!223 = !{ptr @__SCK__tp_func_qgroup_meta_reserve, !221, !"__SCK__tp_func_qgroup_meta_reserve", i1 false, i1 false}
!224 = !{ptr @__tracepoint_qgroup_meta_convert, !225, !"__tracepoint_qgroup_meta_convert", i1 false, i1 false}
!225 = !{!"../include/trace/events/btrfs.h", i32 1739, i32 1}
!226 = !{ptr @__tracepoint_ptr_qgroup_meta_convert, !225, !"__tracepoint_ptr_qgroup_meta_convert", i1 false, i1 false}
!227 = !{ptr @__SCK__tp_func_qgroup_meta_convert, !225, !"__SCK__tp_func_qgroup_meta_convert", i1 false, i1 false}
!228 = !{ptr @__tracepoint_qgroup_meta_free_all_pertrans, !229, !"__tracepoint_qgroup_meta_free_all_pertrans", i1 false, i1 false}
!229 = !{!"../include/trace/events/btrfs.h", i32 1762, i32 1}
!230 = !{ptr @__tracepoint_ptr_qgroup_meta_free_all_pertrans, !229, !"__tracepoint_ptr_qgroup_meta_free_all_pertrans", i1 false, i1 false}
!231 = !{ptr @__SCK__tp_func_qgroup_meta_free_all_pertrans, !229, !"__SCK__tp_func_qgroup_meta_free_all_pertrans", i1 false, i1 false}
!232 = !{ptr @__tracepoint_btrfs_prelim_ref_merge, !233, !"__tracepoint_btrfs_prelim_ref_merge", i1 false, i1 false}
!233 = !{!"../include/trace/events/btrfs.h", i32 1830, i32 1}
!234 = !{ptr @__tracepoint_ptr_btrfs_prelim_ref_merge, !233, !"__tracepoint_ptr_btrfs_prelim_ref_merge", i1 false, i1 false}
!235 = !{ptr @__SCK__tp_func_btrfs_prelim_ref_merge, !233, !"__SCK__tp_func_btrfs_prelim_ref_merge", i1 false, i1 false}
!236 = !{ptr @__tracepoint_btrfs_prelim_ref_insert, !237, !"__tracepoint_btrfs_prelim_ref_insert", i1 false, i1 false}
!237 = !{!"../include/trace/events/btrfs.h", i32 1837, i32 1}
!238 = !{ptr @__tracepoint_ptr_btrfs_prelim_ref_insert, !237, !"__tracepoint_ptr_btrfs_prelim_ref_insert", i1 false, i1 false}
!239 = !{ptr @__SCK__tp_func_btrfs_prelim_ref_insert, !237, !"__SCK__tp_func_btrfs_prelim_ref_insert", i1 false, i1 false}
!240 = !{ptr @__tracepoint_btrfs_inode_mod_outstanding_extents, !241, !"__tracepoint_btrfs_inode_mod_outstanding_extents", i1 false, i1 false}
!241 = !{!"../include/trace/events/btrfs.h", i32 1844, i32 1}
!242 = !{ptr @__tracepoint_ptr_btrfs_inode_mod_outstanding_extents, !241, !"__tracepoint_ptr_btrfs_inode_mod_outstanding_extents", i1 false, i1 false}
!243 = !{ptr @__SCK__tp_func_btrfs_inode_mod_outstanding_extents, !241, !"__SCK__tp_func_btrfs_inode_mod_outstanding_extents", i1 false, i1 false}
!244 = !{ptr @__tracepoint_btrfs_remove_block_group, !245, !"__tracepoint_btrfs_remove_block_group", i1 false, i1 false}
!245 = !{!"../include/trace/events/btrfs.h", i32 1890, i32 1}
!246 = !{ptr @__tracepoint_ptr_btrfs_remove_block_group, !245, !"__tracepoint_ptr_btrfs_remove_block_group", i1 false, i1 false}
!247 = !{ptr @__SCK__tp_func_btrfs_remove_block_group, !245, !"__SCK__tp_func_btrfs_remove_block_group", i1 false, i1 false}
!248 = !{ptr @__tracepoint_btrfs_add_unused_block_group, !249, !"__tracepoint_btrfs_add_unused_block_group", i1 false, i1 false}
!249 = !{!"../include/trace/events/btrfs.h", i32 1896, i32 1}
!250 = !{ptr @__tracepoint_ptr_btrfs_add_unused_block_group, !249, !"__tracepoint_ptr_btrfs_add_unused_block_group", i1 false, i1 false}
!251 = !{ptr @__SCK__tp_func_btrfs_add_unused_block_group, !249, !"__SCK__tp_func_btrfs_add_unused_block_group", i1 false, i1 false}
!252 = !{ptr @__tracepoint_btrfs_add_reclaim_block_group, !253, !"__tracepoint_btrfs_add_reclaim_block_group", i1 false, i1 false}
!253 = !{!"../include/trace/events/btrfs.h", i32 1902, i32 1}
!254 = !{ptr @__tracepoint_ptr_btrfs_add_reclaim_block_group, !253, !"__tracepoint_ptr_btrfs_add_reclaim_block_group", i1 false, i1 false}
!255 = !{ptr @__SCK__tp_func_btrfs_add_reclaim_block_group, !253, !"__SCK__tp_func_btrfs_add_reclaim_block_group", i1 false, i1 false}
!256 = !{ptr @__tracepoint_btrfs_reclaim_block_group, !257, !"__tracepoint_btrfs_reclaim_block_group", i1 false, i1 false}
!257 = !{!"../include/trace/events/btrfs.h", i32 1908, i32 1}
!258 = !{ptr @__tracepoint_ptr_btrfs_reclaim_block_group, !257, !"__tracepoint_ptr_btrfs_reclaim_block_group", i1 false, i1 false}
!259 = !{ptr @__SCK__tp_func_btrfs_reclaim_block_group, !257, !"__SCK__tp_func_btrfs_reclaim_block_group", i1 false, i1 false}
!260 = !{ptr @__tracepoint_btrfs_skip_unused_block_group, !261, !"__tracepoint_btrfs_skip_unused_block_group", i1 false, i1 false}
!261 = !{!"../include/trace/events/btrfs.h", i32 1914, i32 1}
!262 = !{ptr @__tracepoint_ptr_btrfs_skip_unused_block_group, !261, !"__tracepoint_ptr_btrfs_skip_unused_block_group", i1 false, i1 false}
!263 = !{ptr @__SCK__tp_func_btrfs_skip_unused_block_group, !261, !"__SCK__tp_func_btrfs_skip_unused_block_group", i1 false, i1 false}
!264 = !{ptr @__tracepoint_btrfs_set_extent_bit, !265, !"__tracepoint_btrfs_set_extent_bit", i1 false, i1 false}
!265 = !{!"../include/trace/events/btrfs.h", i32 1920, i32 1}
!266 = !{ptr @__tracepoint_ptr_btrfs_set_extent_bit, !265, !"__tracepoint_ptr_btrfs_set_extent_bit", i1 false, i1 false}
!267 = !{ptr @__SCK__tp_func_btrfs_set_extent_bit, !265, !"__SCK__tp_func_btrfs_set_extent_bit", i1 false, i1 false}
!268 = !{ptr @__tracepoint_btrfs_clear_extent_bit, !269, !"__tracepoint_btrfs_clear_extent_bit", i1 false, i1 false}
!269 = !{!"../include/trace/events/btrfs.h", i32 1959, i32 1}
!270 = !{ptr @__tracepoint_ptr_btrfs_clear_extent_bit, !269, !"__tracepoint_ptr_btrfs_clear_extent_bit", i1 false, i1 false}
!271 = !{ptr @__SCK__tp_func_btrfs_clear_extent_bit, !269, !"__SCK__tp_func_btrfs_clear_extent_bit", i1 false, i1 false}
!272 = !{ptr @__tracepoint_btrfs_convert_extent_bit, !273, !"__tracepoint_btrfs_convert_extent_bit", i1 false, i1 false}
!273 = !{!"../include/trace/events/btrfs.h", i32 1998, i32 1}
!274 = !{ptr @__tracepoint_ptr_btrfs_convert_extent_bit, !273, !"__tracepoint_ptr_btrfs_convert_extent_bit", i1 false, i1 false}
!275 = !{ptr @__SCK__tp_func_btrfs_convert_extent_bit, !273, !"__SCK__tp_func_btrfs_convert_extent_bit", i1 false, i1 false}
!276 = !{ptr @__tracepoint_btrfs_done_preemptive_reclaim, !277, !"__tracepoint_btrfs_done_preemptive_reclaim", i1 false, i1 false}
!277 = !{!"../include/trace/events/btrfs.h", i32 2102, i32 1}
!278 = !{ptr @__tracepoint_ptr_btrfs_done_preemptive_reclaim, !277, !"__tracepoint_ptr_btrfs_done_preemptive_reclaim", i1 false, i1 false}
!279 = !{ptr @__SCK__tp_func_btrfs_done_preemptive_reclaim, !277, !"__SCK__tp_func_btrfs_done_preemptive_reclaim", i1 false, i1 false}
!280 = !{ptr @__tracepoint_btrfs_fail_all_tickets, !281, !"__tracepoint_btrfs_fail_all_tickets", i1 false, i1 false}
!281 = !{!"../include/trace/events/btrfs.h", i32 2108, i32 1}
!282 = !{ptr @__tracepoint_ptr_btrfs_fail_all_tickets, !281, !"__tracepoint_ptr_btrfs_fail_all_tickets", i1 false, i1 false}
!283 = !{ptr @__SCK__tp_func_btrfs_fail_all_tickets, !281, !"__SCK__tp_func_btrfs_fail_all_tickets", i1 false, i1 false}
!284 = !{ptr @__tracepoint_btrfs_reserve_ticket, !285, !"__tracepoint_btrfs_reserve_ticket", i1 false, i1 false}
!285 = !{!"../include/trace/events/btrfs.h", i32 2114, i32 1}
!286 = !{ptr @__tracepoint_ptr_btrfs_reserve_ticket, !285, !"__tracepoint_ptr_btrfs_reserve_ticket", i1 false, i1 false}
!287 = !{ptr @__SCK__tp_func_btrfs_reserve_ticket, !285, !"__SCK__tp_func_btrfs_reserve_ticket", i1 false, i1 false}
!288 = !{ptr @__tracepoint_btrfs_tree_read_lock, !289, !"__tracepoint_btrfs_tree_read_lock", i1 false, i1 false}
!289 = !{!"../include/trace/events/btrfs.h", i32 2175, i32 1}
!290 = !{ptr @__tracepoint_ptr_btrfs_tree_read_lock, !289, !"__tracepoint_ptr_btrfs_tree_read_lock", i1 false, i1 false}
!291 = !{ptr @__SCK__tp_func_btrfs_tree_read_lock, !289, !"__SCK__tp_func_btrfs_tree_read_lock", i1 false, i1 false}
!292 = !{ptr @__tracepoint_btrfs_tree_lock, !293, !"__tracepoint_btrfs_tree_lock", i1 false, i1 false}
!293 = !{!"../include/trace/events/btrfs.h", i32 2181, i32 1}
!294 = !{ptr @__tracepoint_ptr_btrfs_tree_lock, !293, !"__tracepoint_ptr_btrfs_tree_lock", i1 false, i1 false}
!295 = !{ptr @__SCK__tp_func_btrfs_tree_lock, !293, !"__SCK__tp_func_btrfs_tree_lock", i1 false, i1 false}
!296 = !{ptr @__tracepoint_btrfs_tree_unlock, !297, !"__tracepoint_btrfs_tree_unlock", i1 false, i1 false}
!297 = !{!"../include/trace/events/btrfs.h", i32 2218, i32 1}
!298 = !{ptr @__tracepoint_ptr_btrfs_tree_unlock, !297, !"__tracepoint_ptr_btrfs_tree_unlock", i1 false, i1 false}
!299 = !{ptr @__SCK__tp_func_btrfs_tree_unlock, !297, !"__SCK__tp_func_btrfs_tree_unlock", i1 false, i1 false}
!300 = !{ptr @__tracepoint_btrfs_tree_read_unlock, !301, !"__tracepoint_btrfs_tree_read_unlock", i1 false, i1 false}
!301 = !{!"../include/trace/events/btrfs.h", i32 2219, i32 1}
!302 = !{ptr @__tracepoint_ptr_btrfs_tree_read_unlock, !301, !"__tracepoint_ptr_btrfs_tree_read_unlock", i1 false, i1 false}
!303 = !{ptr @__SCK__tp_func_btrfs_tree_read_unlock, !301, !"__SCK__tp_func_btrfs_tree_read_unlock", i1 false, i1 false}
!304 = !{ptr @__tracepoint_btrfs_tree_read_unlock_blocking, !305, !"__tracepoint_btrfs_tree_read_unlock_blocking", i1 false, i1 false}
!305 = !{!"../include/trace/events/btrfs.h", i32 2220, i32 1}
!306 = !{ptr @__tracepoint_ptr_btrfs_tree_read_unlock_blocking, !305, !"__tracepoint_ptr_btrfs_tree_read_unlock_blocking", i1 false, i1 false}
!307 = !{ptr @__SCK__tp_func_btrfs_tree_read_unlock_blocking, !305, !"__SCK__tp_func_btrfs_tree_read_unlock_blocking", i1 false, i1 false}
!308 = !{ptr @__tracepoint_btrfs_set_lock_blocking_read, !309, !"__tracepoint_btrfs_set_lock_blocking_read", i1 false, i1 false}
!309 = !{!"../include/trace/events/btrfs.h", i32 2221, i32 1}
!310 = !{ptr @__tracepoint_ptr_btrfs_set_lock_blocking_read, !309, !"__tracepoint_ptr_btrfs_set_lock_blocking_read", i1 false, i1 false}
!311 = !{ptr @__SCK__tp_func_btrfs_set_lock_blocking_read, !309, !"__SCK__tp_func_btrfs_set_lock_blocking_read", i1 false, i1 false}
!312 = !{ptr @__tracepoint_btrfs_set_lock_blocking_write, !313, !"__tracepoint_btrfs_set_lock_blocking_write", i1 false, i1 false}
!313 = !{!"../include/trace/events/btrfs.h", i32 2222, i32 1}
!314 = !{ptr @__tracepoint_ptr_btrfs_set_lock_blocking_write, !313, !"__tracepoint_ptr_btrfs_set_lock_blocking_write", i1 false, i1 false}
!315 = !{ptr @__SCK__tp_func_btrfs_set_lock_blocking_write, !313, !"__SCK__tp_func_btrfs_set_lock_blocking_write", i1 false, i1 false}
!316 = !{ptr @__tracepoint_btrfs_try_tree_read_lock, !317, !"__tracepoint_btrfs_try_tree_read_lock", i1 false, i1 false}
!317 = !{!"../include/trace/events/btrfs.h", i32 2223, i32 1}
!318 = !{ptr @__tracepoint_ptr_btrfs_try_tree_read_lock, !317, !"__tracepoint_ptr_btrfs_try_tree_read_lock", i1 false, i1 false}
!319 = !{ptr @__SCK__tp_func_btrfs_try_tree_read_lock, !317, !"__SCK__tp_func_btrfs_try_tree_read_lock", i1 false, i1 false}
!320 = !{ptr @__tracepoint_btrfs_try_tree_write_lock, !321, !"__tracepoint_btrfs_try_tree_write_lock", i1 false, i1 false}
!321 = !{!"../include/trace/events/btrfs.h", i32 2224, i32 1}
!322 = !{ptr @__tracepoint_ptr_btrfs_try_tree_write_lock, !321, !"__tracepoint_ptr_btrfs_try_tree_write_lock", i1 false, i1 false}
!323 = !{ptr @__SCK__tp_func_btrfs_try_tree_write_lock, !321, !"__SCK__tp_func_btrfs_try_tree_write_lock", i1 false, i1 false}
!324 = !{ptr @__tracepoint_btrfs_tree_read_lock_atomic, !325, !"__tracepoint_btrfs_tree_read_lock_atomic", i1 false, i1 false}
!325 = !{!"../include/trace/events/btrfs.h", i32 2225, i32 1}
!326 = !{ptr @__tracepoint_ptr_btrfs_tree_read_lock_atomic, !325, !"__tracepoint_ptr_btrfs_tree_read_lock_atomic", i1 false, i1 false}
!327 = !{ptr @__SCK__tp_func_btrfs_tree_read_lock_atomic, !325, !"__SCK__tp_func_btrfs_tree_read_lock_atomic", i1 false, i1 false}
!328 = !{ptr @__tracepoint_update_bytes_may_use, !329, !"__tracepoint_update_bytes_may_use", i1 false, i1 false}
!329 = !{!"../include/trace/events/btrfs.h", i32 2250, i32 1}
!330 = !{ptr @__tracepoint_ptr_update_bytes_may_use, !329, !"__tracepoint_ptr_update_bytes_may_use", i1 false, i1 false}
!331 = !{ptr @__SCK__tp_func_update_bytes_may_use, !329, !"__SCK__tp_func_update_bytes_may_use", i1 false, i1 false}
!332 = !{ptr @__tracepoint_update_bytes_pinned, !333, !"__tracepoint_update_bytes_pinned", i1 false, i1 false}
!333 = !{!"../include/trace/events/btrfs.h", i32 2258, i32 1}
!334 = !{ptr @__tracepoint_ptr_update_bytes_pinned, !333, !"__tracepoint_ptr_update_bytes_pinned", i1 false, i1 false}
!335 = !{ptr @__SCK__tp_func_update_bytes_pinned, !333, !"__SCK__tp_func_update_bytes_pinned", i1 false, i1 false}
!336 = !{ptr @.str, !337, !"<string literal>", i1 false, i1 false}
!337 = !{!"../include/trace/events/mmflags.h", i32 274, i32 1}
!338 = !{ptr @__TRACE_SYSTEM_COMPACT_SKIPPED, !337, !"__TRACE_SYSTEM_COMPACT_SKIPPED", i1 false, i1 false}
!339 = !{ptr @TRACE_SYSTEM_COMPACT_SKIPPED, !337, !"TRACE_SYSTEM_COMPACT_SKIPPED", i1 false, i1 false}
!340 = !{ptr @.str.1, !337, !"<string literal>", i1 false, i1 false}
!341 = !{ptr @__TRACE_SYSTEM_COMPACT_DEFERRED, !337, !"__TRACE_SYSTEM_COMPACT_DEFERRED", i1 false, i1 false}
!342 = !{ptr @TRACE_SYSTEM_COMPACT_DEFERRED, !337, !"TRACE_SYSTEM_COMPACT_DEFERRED", i1 false, i1 false}
!343 = !{ptr @.str.2, !337, !"<string literal>", i1 false, i1 false}
!344 = !{ptr @__TRACE_SYSTEM_COMPACT_CONTINUE, !337, !"__TRACE_SYSTEM_COMPACT_CONTINUE", i1 false, i1 false}
!345 = !{ptr @TRACE_SYSTEM_COMPACT_CONTINUE, !337, !"TRACE_SYSTEM_COMPACT_CONTINUE", i1 false, i1 false}
!346 = !{ptr @.str.3, !337, !"<string literal>", i1 false, i1 false}
!347 = !{ptr @__TRACE_SYSTEM_COMPACT_SUCCESS, !337, !"__TRACE_SYSTEM_COMPACT_SUCCESS", i1 false, i1 false}
!348 = !{ptr @TRACE_SYSTEM_COMPACT_SUCCESS, !337, !"TRACE_SYSTEM_COMPACT_SUCCESS", i1 false, i1 false}
!349 = !{ptr @.str.4, !337, !"<string literal>", i1 false, i1 false}
!350 = !{ptr @__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, !337, !"__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED", i1 false, i1 false}
!351 = !{ptr @TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, !337, !"TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED", i1 false, i1 false}
!352 = !{ptr @.str.5, !337, !"<string literal>", i1 false, i1 false}
!353 = !{ptr @__TRACE_SYSTEM_COMPACT_COMPLETE, !337, !"__TRACE_SYSTEM_COMPACT_COMPLETE", i1 false, i1 false}
!354 = !{ptr @TRACE_SYSTEM_COMPACT_COMPLETE, !337, !"TRACE_SYSTEM_COMPACT_COMPLETE", i1 false, i1 false}
!355 = !{ptr @.str.6, !337, !"<string literal>", i1 false, i1 false}
!356 = !{ptr @__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, !337, !"__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE", i1 false, i1 false}
!357 = !{ptr @TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, !337, !"TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE", i1 false, i1 false}
!358 = !{ptr @.str.7, !337, !"<string literal>", i1 false, i1 false}
!359 = !{ptr @__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, !337, !"__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE", i1 false, i1 false}
!360 = !{ptr @TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, !337, !"TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE", i1 false, i1 false}
!361 = !{ptr @.str.8, !337, !"<string literal>", i1 false, i1 false}
!362 = !{ptr @__TRACE_SYSTEM_COMPACT_CONTENDED, !337, !"__TRACE_SYSTEM_COMPACT_CONTENDED", i1 false, i1 false}
!363 = !{ptr @TRACE_SYSTEM_COMPACT_CONTENDED, !337, !"TRACE_SYSTEM_COMPACT_CONTENDED", i1 false, i1 false}
!364 = !{ptr @.str.9, !365, !"<string literal>", i1 false, i1 false}
!365 = !{!"../include/trace/events/mmflags.h", i32 275, i32 1}
!366 = !{ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, !365, !"__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL", i1 false, i1 false}
!367 = !{ptr @TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, !365, !"TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL", i1 false, i1 false}
!368 = !{ptr @.str.10, !365, !"<string literal>", i1 false, i1 false}
!369 = !{ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, !365, !"__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT", i1 false, i1 false}
!370 = !{ptr @TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, !365, !"TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT", i1 false, i1 false}
!371 = !{ptr @.str.11, !365, !"<string literal>", i1 false, i1 false}
!372 = !{ptr @__TRACE_SYSTEM_COMPACT_PRIO_ASYNC, !365, !"__TRACE_SYSTEM_COMPACT_PRIO_ASYNC", i1 false, i1 false}
!373 = !{ptr @TRACE_SYSTEM_COMPACT_PRIO_ASYNC, !365, !"TRACE_SYSTEM_COMPACT_PRIO_ASYNC", i1 false, i1 false}
!374 = !{ptr @.str.12, !375, !"<string literal>", i1 false, i1 false}
!375 = !{!"../include/trace/events/mmflags.h", i32 277, i32 1}
!376 = !{ptr @__TRACE_SYSTEM_ZONE_DMA, !375, !"__TRACE_SYSTEM_ZONE_DMA", i1 false, i1 false}
!377 = !{ptr @TRACE_SYSTEM_ZONE_DMA, !375, !"TRACE_SYSTEM_ZONE_DMA", i1 false, i1 false}
!378 = !{ptr @.str.13, !375, !"<string literal>", i1 false, i1 false}
!379 = !{ptr @__TRACE_SYSTEM_ZONE_NORMAL, !375, !"__TRACE_SYSTEM_ZONE_NORMAL", i1 false, i1 false}
!380 = !{ptr @TRACE_SYSTEM_ZONE_NORMAL, !375, !"TRACE_SYSTEM_ZONE_NORMAL", i1 false, i1 false}
!381 = !{ptr @.str.14, !375, !"<string literal>", i1 false, i1 false}
!382 = !{ptr @__TRACE_SYSTEM_ZONE_HIGHMEM, !375, !"__TRACE_SYSTEM_ZONE_HIGHMEM", i1 false, i1 false}
!383 = !{ptr @TRACE_SYSTEM_ZONE_HIGHMEM, !375, !"TRACE_SYSTEM_ZONE_HIGHMEM", i1 false, i1 false}
!384 = !{ptr @.str.15, !375, !"<string literal>", i1 false, i1 false}
!385 = !{ptr @__TRACE_SYSTEM_ZONE_MOVABLE, !375, !"__TRACE_SYSTEM_ZONE_MOVABLE", i1 false, i1 false}
!386 = !{ptr @TRACE_SYSTEM_ZONE_MOVABLE, !375, !"TRACE_SYSTEM_ZONE_MOVABLE", i1 false, i1 false}
!387 = !{ptr @.str.16, !388, !"<string literal>", i1 false, i1 false}
!388 = !{!"../include/trace/events/mmflags.h", i32 278, i32 1}
!389 = !{ptr @__TRACE_SYSTEM_LRU_INACTIVE_ANON, !388, !"__TRACE_SYSTEM_LRU_INACTIVE_ANON", i1 false, i1 false}
!390 = !{ptr @TRACE_SYSTEM_LRU_INACTIVE_ANON, !388, !"TRACE_SYSTEM_LRU_INACTIVE_ANON", i1 false, i1 false}
!391 = !{ptr @.str.17, !388, !"<string literal>", i1 false, i1 false}
!392 = !{ptr @__TRACE_SYSTEM_LRU_ACTIVE_ANON, !388, !"__TRACE_SYSTEM_LRU_ACTIVE_ANON", i1 false, i1 false}
!393 = !{ptr @TRACE_SYSTEM_LRU_ACTIVE_ANON, !388, !"TRACE_SYSTEM_LRU_ACTIVE_ANON", i1 false, i1 false}
!394 = !{ptr @.str.18, !388, !"<string literal>", i1 false, i1 false}
!395 = !{ptr @__TRACE_SYSTEM_LRU_INACTIVE_FILE, !388, !"__TRACE_SYSTEM_LRU_INACTIVE_FILE", i1 false, i1 false}
!396 = !{ptr @TRACE_SYSTEM_LRU_INACTIVE_FILE, !388, !"TRACE_SYSTEM_LRU_INACTIVE_FILE", i1 false, i1 false}
!397 = !{ptr @.str.19, !388, !"<string literal>", i1 false, i1 false}
!398 = !{ptr @__TRACE_SYSTEM_LRU_ACTIVE_FILE, !388, !"__TRACE_SYSTEM_LRU_ACTIVE_FILE", i1 false, i1 false}
!399 = !{ptr @TRACE_SYSTEM_LRU_ACTIVE_FILE, !388, !"TRACE_SYSTEM_LRU_ACTIVE_FILE", i1 false, i1 false}
!400 = !{ptr @.str.20, !388, !"<string literal>", i1 false, i1 false}
!401 = !{ptr @__TRACE_SYSTEM_LRU_UNEVICTABLE, !388, !"__TRACE_SYSTEM_LRU_UNEVICTABLE", i1 false, i1 false}
!402 = !{ptr @TRACE_SYSTEM_LRU_UNEVICTABLE, !388, !"TRACE_SYSTEM_LRU_UNEVICTABLE", i1 false, i1 false}
!403 = !{ptr @.str.21, !404, !"<string literal>", i1 false, i1 false}
!404 = !{!"../include/trace/events/btrfs.h", i32 115, i32 1}
!405 = !{ptr @__TRACE_SYSTEM_BTRFS_RESERVE_NO_FLUSH, !404, !"__TRACE_SYSTEM_BTRFS_RESERVE_NO_FLUSH", i1 false, i1 false}
!406 = !{ptr @TRACE_SYSTEM_BTRFS_RESERVE_NO_FLUSH, !404, !"TRACE_SYSTEM_BTRFS_RESERVE_NO_FLUSH", i1 false, i1 false}
!407 = !{ptr @.str.22, !404, !"<string literal>", i1 false, i1 false}
!408 = !{ptr @__TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_LIMIT, !404, !"__TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_LIMIT", i1 false, i1 false}
!409 = !{ptr @TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_LIMIT, !404, !"TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_LIMIT", i1 false, i1 false}
!410 = !{ptr @.str.23, !404, !"<string literal>", i1 false, i1 false}
!411 = !{ptr @__TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_ALL, !404, !"__TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_ALL", i1 false, i1 false}
!412 = !{ptr @TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_ALL, !404, !"TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_ALL", i1 false, i1 false}
!413 = !{ptr @.str.24, !404, !"<string literal>", i1 false, i1 false}
!414 = !{ptr @__TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_ALL_STEAL, !404, !"__TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_ALL_STEAL", i1 false, i1 false}
!415 = !{ptr @TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_ALL_STEAL, !404, !"TRACE_SYSTEM_BTRFS_RESERVE_FLUSH_ALL_STEAL", i1 false, i1 false}
!416 = !{ptr @.str.25, !417, !"<string literal>", i1 false, i1 false}
!417 = !{!"../include/trace/events/btrfs.h", i32 116, i32 1}
!418 = !{ptr @__TRACE_SYSTEM_BTRFS_FILE_EXTENT_INLINE, !417, !"__TRACE_SYSTEM_BTRFS_FILE_EXTENT_INLINE", i1 false, i1 false}
!419 = !{ptr @TRACE_SYSTEM_BTRFS_FILE_EXTENT_INLINE, !417, !"TRACE_SYSTEM_BTRFS_FILE_EXTENT_INLINE", i1 false, i1 false}
!420 = !{ptr @.str.26, !417, !"<string literal>", i1 false, i1 false}
!421 = !{ptr @__TRACE_SYSTEM_BTRFS_FILE_EXTENT_REG, !417, !"__TRACE_SYSTEM_BTRFS_FILE_EXTENT_REG", i1 false, i1 false}
!422 = !{ptr @TRACE_SYSTEM_BTRFS_FILE_EXTENT_REG, !417, !"TRACE_SYSTEM_BTRFS_FILE_EXTENT_REG", i1 false, i1 false}
!423 = !{ptr @.str.27, !417, !"<string literal>", i1 false, i1 false}
!424 = !{ptr @__TRACE_SYSTEM_BTRFS_FILE_EXTENT_PREALLOC, !417, !"__TRACE_SYSTEM_BTRFS_FILE_EXTENT_PREALLOC", i1 false, i1 false}
!425 = !{ptr @TRACE_SYSTEM_BTRFS_FILE_EXTENT_PREALLOC, !417, !"TRACE_SYSTEM_BTRFS_FILE_EXTENT_PREALLOC", i1 false, i1 false}
!426 = !{ptr @.str.28, !427, !"<string literal>", i1 false, i1 false}
!427 = !{!"../include/trace/events/btrfs.h", i32 117, i32 1}
!428 = !{ptr @__TRACE_SYSTEM_BTRFS_QGROUP_RSV_DATA, !427, !"__TRACE_SYSTEM_BTRFS_QGROUP_RSV_DATA", i1 false, i1 false}
!429 = !{ptr @TRACE_SYSTEM_BTRFS_QGROUP_RSV_DATA, !427, !"TRACE_SYSTEM_BTRFS_QGROUP_RSV_DATA", i1 false, i1 false}
!430 = !{ptr @.str.29, !427, !"<string literal>", i1 false, i1 false}
!431 = !{ptr @__TRACE_SYSTEM_BTRFS_QGROUP_RSV_META_PERTRANS, !427, !"__TRACE_SYSTEM_BTRFS_QGROUP_RSV_META_PERTRANS", i1 false, i1 false}
!432 = !{ptr @TRACE_SYSTEM_BTRFS_QGROUP_RSV_META_PERTRANS, !427, !"TRACE_SYSTEM_BTRFS_QGROUP_RSV_META_PERTRANS", i1 false, i1 false}
!433 = !{ptr @.str.30, !427, !"<string literal>", i1 false, i1 false}
!434 = !{ptr @__TRACE_SYSTEM_BTRFS_QGROUP_RSV_META_PREALLOC, !427, !"__TRACE_SYSTEM_BTRFS_QGROUP_RSV_META_PREALLOC", i1 false, i1 false}
!435 = !{ptr @TRACE_SYSTEM_BTRFS_QGROUP_RSV_META_PREALLOC, !427, !"TRACE_SYSTEM_BTRFS_QGROUP_RSV_META_PREALLOC", i1 false, i1 false}
!436 = !{ptr @.str.31, !437, !"<string literal>", i1 false, i1 false}
!437 = !{!"../include/trace/events/btrfs.h", i32 118, i32 1}
!438 = !{ptr @__TRACE_SYSTEM_IO_TREE_FS_PINNED_EXTENTS, !437, !"__TRACE_SYSTEM_IO_TREE_FS_PINNED_EXTENTS", i1 false, i1 false}
!439 = !{ptr @TRACE_SYSTEM_IO_TREE_FS_PINNED_EXTENTS, !437, !"TRACE_SYSTEM_IO_TREE_FS_PINNED_EXTENTS", i1 false, i1 false}
!440 = !{ptr @.str.32, !437, !"<string literal>", i1 false, i1 false}
!441 = !{ptr @__TRACE_SYSTEM_IO_TREE_FS_EXCLUDED_EXTENTS, !437, !"__TRACE_SYSTEM_IO_TREE_FS_EXCLUDED_EXTENTS", i1 false, i1 false}
!442 = !{ptr @TRACE_SYSTEM_IO_TREE_FS_EXCLUDED_EXTENTS, !437, !"TRACE_SYSTEM_IO_TREE_FS_EXCLUDED_EXTENTS", i1 false, i1 false}
!443 = !{ptr @.str.33, !437, !"<string literal>", i1 false, i1 false}
!444 = !{ptr @__TRACE_SYSTEM_IO_TREE_BTREE_INODE_IO, !437, !"__TRACE_SYSTEM_IO_TREE_BTREE_INODE_IO", i1 false, i1 false}
!445 = !{ptr @TRACE_SYSTEM_IO_TREE_BTREE_INODE_IO, !437, !"TRACE_SYSTEM_IO_TREE_BTREE_INODE_IO", i1 false, i1 false}
!446 = !{ptr @.str.34, !437, !"<string literal>", i1 false, i1 false}
!447 = !{ptr @__TRACE_SYSTEM_IO_TREE_INODE_IO, !437, !"__TRACE_SYSTEM_IO_TREE_INODE_IO", i1 false, i1 false}
!448 = !{ptr @TRACE_SYSTEM_IO_TREE_INODE_IO, !437, !"TRACE_SYSTEM_IO_TREE_INODE_IO", i1 false, i1 false}
!449 = !{ptr @.str.35, !437, !"<string literal>", i1 false, i1 false}
!450 = !{ptr @__TRACE_SYSTEM_IO_TREE_INODE_IO_FAILURE, !437, !"__TRACE_SYSTEM_IO_TREE_INODE_IO_FAILURE", i1 false, i1 false}
!451 = !{ptr @TRACE_SYSTEM_IO_TREE_INODE_IO_FAILURE, !437, !"TRACE_SYSTEM_IO_TREE_INODE_IO_FAILURE", i1 false, i1 false}
!452 = !{ptr @.str.36, !437, !"<string literal>", i1 false, i1 false}
!453 = !{ptr @__TRACE_SYSTEM_IO_TREE_RELOC_BLOCKS, !437, !"__TRACE_SYSTEM_IO_TREE_RELOC_BLOCKS", i1 false, i1 false}
!454 = !{ptr @TRACE_SYSTEM_IO_TREE_RELOC_BLOCKS, !437, !"TRACE_SYSTEM_IO_TREE_RELOC_BLOCKS", i1 false, i1 false}
!455 = !{ptr @.str.37, !437, !"<string literal>", i1 false, i1 false}
!456 = !{ptr @__TRACE_SYSTEM_IO_TREE_TRANS_DIRTY_PAGES, !437, !"__TRACE_SYSTEM_IO_TREE_TRANS_DIRTY_PAGES", i1 false, i1 false}
!457 = !{ptr @TRACE_SYSTEM_IO_TREE_TRANS_DIRTY_PAGES, !437, !"TRACE_SYSTEM_IO_TREE_TRANS_DIRTY_PAGES", i1 false, i1 false}
!458 = !{ptr @.str.38, !437, !"<string literal>", i1 false, i1 false}
!459 = !{ptr @__TRACE_SYSTEM_IO_TREE_ROOT_DIRTY_LOG_PAGES, !437, !"__TRACE_SYSTEM_IO_TREE_ROOT_DIRTY_LOG_PAGES", i1 false, i1 false}
!460 = !{ptr @TRACE_SYSTEM_IO_TREE_ROOT_DIRTY_LOG_PAGES, !437, !"TRACE_SYSTEM_IO_TREE_ROOT_DIRTY_LOG_PAGES", i1 false, i1 false}
!461 = !{ptr @.str.39, !437, !"<string literal>", i1 false, i1 false}
!462 = !{ptr @__TRACE_SYSTEM_IO_TREE_INODE_FILE_EXTENT, !437, !"__TRACE_SYSTEM_IO_TREE_INODE_FILE_EXTENT", i1 false, i1 false}
!463 = !{ptr @TRACE_SYSTEM_IO_TREE_INODE_FILE_EXTENT, !437, !"TRACE_SYSTEM_IO_TREE_INODE_FILE_EXTENT", i1 false, i1 false}
!464 = !{ptr @.str.40, !437, !"<string literal>", i1 false, i1 false}
!465 = !{ptr @__TRACE_SYSTEM_IO_TREE_LOG_CSUM_RANGE, !437, !"__TRACE_SYSTEM_IO_TREE_LOG_CSUM_RANGE", i1 false, i1 false}
!466 = !{ptr @TRACE_SYSTEM_IO_TREE_LOG_CSUM_RANGE, !437, !"TRACE_SYSTEM_IO_TREE_LOG_CSUM_RANGE", i1 false, i1 false}
!467 = !{ptr @.str.41, !437, !"<string literal>", i1 false, i1 false}
!468 = !{ptr @__TRACE_SYSTEM_IO_TREE_SELFTEST, !437, !"__TRACE_SYSTEM_IO_TREE_SELFTEST", i1 false, i1 false}
!469 = !{ptr @TRACE_SYSTEM_IO_TREE_SELFTEST, !437, !"TRACE_SYSTEM_IO_TREE_SELFTEST", i1 false, i1 false}
!470 = !{ptr @.str.42, !471, !"<string literal>", i1 false, i1 false}
!471 = !{!"../include/trace/events/btrfs.h", i32 119, i32 1}
!472 = !{ptr @__TRACE_SYSTEM_FLUSH_DELAYED_ITEMS_NR, !471, !"__TRACE_SYSTEM_FLUSH_DELAYED_ITEMS_NR", i1 false, i1 false}
!473 = !{ptr @TRACE_SYSTEM_FLUSH_DELAYED_ITEMS_NR, !471, !"TRACE_SYSTEM_FLUSH_DELAYED_ITEMS_NR", i1 false, i1 false}
!474 = !{ptr @.str.43, !471, !"<string literal>", i1 false, i1 false}
!475 = !{ptr @__TRACE_SYSTEM_FLUSH_DELAYED_ITEMS, !471, !"__TRACE_SYSTEM_FLUSH_DELAYED_ITEMS", i1 false, i1 false}
!476 = !{ptr @TRACE_SYSTEM_FLUSH_DELAYED_ITEMS, !471, !"TRACE_SYSTEM_FLUSH_DELAYED_ITEMS", i1 false, i1 false}
!477 = !{ptr @.str.44, !471, !"<string literal>", i1 false, i1 false}
!478 = !{ptr @__TRACE_SYSTEM_FLUSH_DELALLOC, !471, !"__TRACE_SYSTEM_FLUSH_DELALLOC", i1 false, i1 false}
!479 = !{ptr @TRACE_SYSTEM_FLUSH_DELALLOC, !471, !"TRACE_SYSTEM_FLUSH_DELALLOC", i1 false, i1 false}
!480 = !{ptr @.str.45, !471, !"<string literal>", i1 false, i1 false}
!481 = !{ptr @__TRACE_SYSTEM_FLUSH_DELALLOC_WAIT, !471, !"__TRACE_SYSTEM_FLUSH_DELALLOC_WAIT", i1 false, i1 false}
!482 = !{ptr @TRACE_SYSTEM_FLUSH_DELALLOC_WAIT, !471, !"TRACE_SYSTEM_FLUSH_DELALLOC_WAIT", i1 false, i1 false}
!483 = !{ptr @.str.46, !471, !"<string literal>", i1 false, i1 false}
!484 = !{ptr @__TRACE_SYSTEM_FLUSH_DELALLOC_FULL, !471, !"__TRACE_SYSTEM_FLUSH_DELALLOC_FULL", i1 false, i1 false}
!485 = !{ptr @TRACE_SYSTEM_FLUSH_DELALLOC_FULL, !471, !"TRACE_SYSTEM_FLUSH_DELALLOC_FULL", i1 false, i1 false}
!486 = !{ptr @.str.47, !471, !"<string literal>", i1 false, i1 false}
!487 = !{ptr @__TRACE_SYSTEM_FLUSH_DELAYED_REFS_NR, !471, !"__TRACE_SYSTEM_FLUSH_DELAYED_REFS_NR", i1 false, i1 false}
!488 = !{ptr @TRACE_SYSTEM_FLUSH_DELAYED_REFS_NR, !471, !"TRACE_SYSTEM_FLUSH_DELAYED_REFS_NR", i1 false, i1 false}
!489 = !{ptr @.str.48, !471, !"<string literal>", i1 false, i1 false}
!490 = !{ptr @__TRACE_SYSTEM_FLUSH_DELAYED_REFS, !471, !"__TRACE_SYSTEM_FLUSH_DELAYED_REFS", i1 false, i1 false}
!491 = !{ptr @TRACE_SYSTEM_FLUSH_DELAYED_REFS, !471, !"TRACE_SYSTEM_FLUSH_DELAYED_REFS", i1 false, i1 false}
!492 = !{ptr @.str.49, !471, !"<string literal>", i1 false, i1 false}
!493 = !{ptr @__TRACE_SYSTEM_ALLOC_CHUNK, !471, !"__TRACE_SYSTEM_ALLOC_CHUNK", i1 false, i1 false}
!494 = !{ptr @TRACE_SYSTEM_ALLOC_CHUNK, !471, !"TRACE_SYSTEM_ALLOC_CHUNK", i1 false, i1 false}
!495 = !{ptr @.str.50, !471, !"<string literal>", i1 false, i1 false}
!496 = !{ptr @__TRACE_SYSTEM_ALLOC_CHUNK_FORCE, !471, !"__TRACE_SYSTEM_ALLOC_CHUNK_FORCE", i1 false, i1 false}
!497 = !{ptr @TRACE_SYSTEM_ALLOC_CHUNK_FORCE, !471, !"TRACE_SYSTEM_ALLOC_CHUNK_FORCE", i1 false, i1 false}
!498 = !{ptr @.str.51, !471, !"<string literal>", i1 false, i1 false}
!499 = !{ptr @__TRACE_SYSTEM_RUN_DELAYED_IPUTS, !471, !"__TRACE_SYSTEM_RUN_DELAYED_IPUTS", i1 false, i1 false}
!500 = !{ptr @TRACE_SYSTEM_RUN_DELAYED_IPUTS, !471, !"TRACE_SYSTEM_RUN_DELAYED_IPUTS", i1 false, i1 false}
!501 = !{ptr @.str.52, !471, !"<string literal>", i1 false, i1 false}
!502 = !{ptr @__TRACE_SYSTEM_COMMIT_TRANS, !471, !"__TRACE_SYSTEM_COMMIT_TRANS", i1 false, i1 false}
!503 = !{ptr @TRACE_SYSTEM_COMMIT_TRANS, !471, !"TRACE_SYSTEM_COMMIT_TRANS", i1 false, i1 false}
!504 = !{ptr @event_class_btrfs_transaction_commit, !1, !"event_class_btrfs_transaction_commit", i1 false, i1 false}
!505 = !{ptr @event_btrfs_transaction_commit, !1, !"event_btrfs_transaction_commit", i1 false, i1 false}
!506 = !{ptr @__event_btrfs_transaction_commit, !1, !"__event_btrfs_transaction_commit", i1 false, i1 false}
!507 = !{ptr @event_class_btrfs__inode, !508, !"event_class_btrfs__inode", i1 false, i1 false}
!508 = !{!"../include/trace/events/btrfs.h", i32 204, i32 1}
!509 = !{ptr @event_btrfs_inode_new, !5, !"event_btrfs_inode_new", i1 false, i1 false}
!510 = !{ptr @__event_btrfs_inode_new, !5, !"__event_btrfs_inode_new", i1 false, i1 false}
!511 = !{ptr @event_btrfs_inode_request, !9, !"event_btrfs_inode_request", i1 false, i1 false}
!512 = !{ptr @__event_btrfs_inode_request, !9, !"__event_btrfs_inode_request", i1 false, i1 false}
!513 = !{ptr @event_btrfs_inode_evict, !13, !"event_btrfs_inode_evict", i1 false, i1 false}
!514 = !{ptr @__event_btrfs_inode_evict, !13, !"__event_btrfs_inode_evict", i1 false, i1 false}
!515 = !{ptr @event_class_btrfs_get_extent, !17, !"event_class_btrfs_get_extent", i1 false, i1 false}
!516 = !{ptr @event_btrfs_get_extent, !17, !"event_btrfs_get_extent", i1 false, i1 false}
!517 = !{ptr @__event_btrfs_get_extent, !17, !"__event_btrfs_get_extent", i1 false, i1 false}
!518 = !{ptr @event_class_btrfs_handle_em_exist, !21, !"event_class_btrfs_handle_em_exist", i1 false, i1 false}
!519 = !{ptr @event_btrfs_handle_em_exist, !21, !"event_btrfs_handle_em_exist", i1 false, i1 false}
!520 = !{ptr @__event_btrfs_handle_em_exist, !21, !"__event_btrfs_handle_em_exist", i1 false, i1 false}
!521 = !{ptr @event_class_btrfs__file_extent_item_regular, !522, !"event_class_btrfs__file_extent_item_regular", i1 false, i1 false}
!522 = !{!"../include/trace/events/btrfs.h", i32 370, i32 1}
!523 = !{ptr @event_class_btrfs__file_extent_item_inline, !524, !"event_class_btrfs__file_extent_item_inline", i1 false, i1 false}
!524 = !{!"../include/trace/events/btrfs.h", i32 424, i32 1}
!525 = !{ptr @event_btrfs_get_extent_show_fi_regular, !25, !"event_btrfs_get_extent_show_fi_regular", i1 false, i1 false}
!526 = !{ptr @__event_btrfs_get_extent_show_fi_regular, !25, !"__event_btrfs_get_extent_show_fi_regular", i1 false, i1 false}
!527 = !{ptr @event_btrfs_truncate_show_fi_regular, !29, !"event_btrfs_truncate_show_fi_regular", i1 false, i1 false}
!528 = !{ptr @__event_btrfs_truncate_show_fi_regular, !29, !"__event_btrfs_truncate_show_fi_regular", i1 false, i1 false}
!529 = !{ptr @event_btrfs_get_extent_show_fi_inline, !33, !"event_btrfs_get_extent_show_fi_inline", i1 false, i1 false}
!530 = !{ptr @__event_btrfs_get_extent_show_fi_inline, !33, !"__event_btrfs_get_extent_show_fi_inline", i1 false, i1 false}
!531 = !{ptr @event_btrfs_truncate_show_fi_inline, !37, !"event_btrfs_truncate_show_fi_inline", i1 false, i1 false}
!532 = !{ptr @__event_btrfs_truncate_show_fi_inline, !37, !"__event_btrfs_truncate_show_fi_inline", i1 false, i1 false}
!533 = !{ptr @event_class_btrfs__ordered_extent, !534, !"event_class_btrfs__ordered_extent", i1 false, i1 false}
!534 = !{!"../include/trace/events/btrfs.h", i32 514, i32 1}
!535 = !{ptr @event_btrfs_ordered_extent_add, !41, !"event_btrfs_ordered_extent_add", i1 false, i1 false}
!536 = !{ptr @__event_btrfs_ordered_extent_add, !41, !"__event_btrfs_ordered_extent_add", i1 false, i1 false}
!537 = !{ptr @event_btrfs_ordered_extent_remove, !45, !"event_btrfs_ordered_extent_remove", i1 false, i1 false}
!538 = !{ptr @__event_btrfs_ordered_extent_remove, !45, !"__event_btrfs_ordered_extent_remove", i1 false, i1 false}
!539 = !{ptr @event_btrfs_ordered_extent_start, !49, !"event_btrfs_ordered_extent_start", i1 false, i1 false}
!540 = !{ptr @__event_btrfs_ordered_extent_start, !49, !"__event_btrfs_ordered_extent_start", i1 false, i1 false}
!541 = !{ptr @event_btrfs_ordered_extent_put, !53, !"event_btrfs_ordered_extent_put", i1 false, i1 false}
!542 = !{ptr @__event_btrfs_ordered_extent_put, !53, !"__event_btrfs_ordered_extent_put", i1 false, i1 false}
!543 = !{ptr @event_class_btrfs__writepage, !544, !"event_class_btrfs__writepage", i1 false, i1 false}
!544 = !{!"../include/trace/events/btrfs.h", i32 598, i32 1}
!545 = !{ptr @event___extent_writepage, !57, !"event___extent_writepage", i1 false, i1 false}
!546 = !{ptr @__event___extent_writepage, !57, !"__event___extent_writepage", i1 false, i1 false}
!547 = !{ptr @event_class_btrfs_writepage_end_io_hook, !61, !"event_class_btrfs_writepage_end_io_hook", i1 false, i1 false}
!548 = !{ptr @event_btrfs_writepage_end_io_hook, !61, !"event_btrfs_writepage_end_io_hook", i1 false, i1 false}
!549 = !{ptr @__event_btrfs_writepage_end_io_hook, !61, !"__event_btrfs_writepage_end_io_hook", i1 false, i1 false}
!550 = !{ptr @event_class_btrfs_sync_file, !65, !"event_class_btrfs_sync_file", i1 false, i1 false}
!551 = !{ptr @event_btrfs_sync_file, !65, !"event_btrfs_sync_file", i1 false, i1 false}
!552 = !{ptr @__event_btrfs_sync_file, !65, !"__event_btrfs_sync_file", i1 false, i1 false}
!553 = !{ptr @event_class_btrfs_sync_fs, !69, !"event_class_btrfs_sync_fs", i1 false, i1 false}
!554 = !{ptr @event_btrfs_sync_fs, !69, !"event_btrfs_sync_fs", i1 false, i1 false}
!555 = !{ptr @__event_btrfs_sync_fs, !69, !"__event_btrfs_sync_fs", i1 false, i1 false}
!556 = !{ptr @event_class_btrfs_add_block_group, !73, !"event_class_btrfs_add_block_group", i1 false, i1 false}
!557 = !{ptr @event_btrfs_add_block_group, !73, !"event_btrfs_add_block_group", i1 false, i1 false}
!558 = !{ptr @__event_btrfs_add_block_group, !73, !"__event_btrfs_add_block_group", i1 false, i1 false}
!559 = !{ptr @event_class_btrfs_delayed_tree_ref, !560, !"event_class_btrfs_delayed_tree_ref", i1 false, i1 false}
!560 = !{!"../include/trace/events/btrfs.h", i32 778, i32 1}
!561 = !{ptr @event_add_delayed_tree_ref, !77, !"event_add_delayed_tree_ref", i1 false, i1 false}
!562 = !{ptr @__event_add_delayed_tree_ref, !77, !"__event_add_delayed_tree_ref", i1 false, i1 false}
!563 = !{ptr @event_run_delayed_tree_ref, !81, !"event_run_delayed_tree_ref", i1 false, i1 false}
!564 = !{ptr @__event_run_delayed_tree_ref, !81, !"__event_run_delayed_tree_ref", i1 false, i1 false}
!565 = !{ptr @event_class_btrfs_delayed_data_ref, !566, !"event_class_btrfs_delayed_data_ref", i1 false, i1 false}
!566 = !{!"../include/trace/events/btrfs.h", i32 841, i32 1}
!567 = !{ptr @event_add_delayed_data_ref, !85, !"event_add_delayed_data_ref", i1 false, i1 false}
!568 = !{ptr @__event_add_delayed_data_ref, !85, !"__event_add_delayed_data_ref", i1 false, i1 false}
!569 = !{ptr @event_run_delayed_data_ref, !89, !"event_run_delayed_data_ref", i1 false, i1 false}
!570 = !{ptr @__event_run_delayed_data_ref, !89, !"__event_run_delayed_data_ref", i1 false, i1 false}
!571 = !{ptr @event_class_btrfs_delayed_ref_head, !572, !"event_class_btrfs_delayed_ref_head", i1 false, i1 false}
!572 = !{!"../include/trace/events/btrfs.h", i32 908, i32 1}
!573 = !{ptr @event_add_delayed_ref_head, !93, !"event_add_delayed_ref_head", i1 false, i1 false}
!574 = !{ptr @__event_add_delayed_ref_head, !93, !"__event_add_delayed_ref_head", i1 false, i1 false}
!575 = !{ptr @event_run_delayed_ref_head, !97, !"event_run_delayed_ref_head", i1 false, i1 false}
!576 = !{ptr @__event_run_delayed_ref_head, !97, !"__event_run_delayed_ref_head", i1 false, i1 false}
!577 = !{ptr @event_class_btrfs__chunk, !578, !"event_class_btrfs__chunk", i1 false, i1 false}
!578 = !{!"../include/trace/events/btrfs.h", i32 967, i32 1}
!579 = !{ptr @event_btrfs_chunk_alloc, !101, !"event_btrfs_chunk_alloc", i1 false, i1 false}
!580 = !{ptr @__event_btrfs_chunk_alloc, !101, !"__event_btrfs_chunk_alloc", i1 false, i1 false}
!581 = !{ptr @event_btrfs_chunk_free, !105, !"event_btrfs_chunk_free", i1 false, i1 false}
!582 = !{ptr @__event_btrfs_chunk_free, !105, !"__event_btrfs_chunk_free", i1 false, i1 false}
!583 = !{ptr @event_class_btrfs_cow_block, !109, !"event_class_btrfs_cow_block", i1 false, i1 false}
!584 = !{ptr @event_btrfs_cow_block, !109, !"event_btrfs_cow_block", i1 false, i1 false}
!585 = !{ptr @__event_btrfs_cow_block, !109, !"__event_btrfs_cow_block", i1 false, i1 false}
!586 = !{ptr @event_class_btrfs_space_reservation, !113, !"event_class_btrfs_space_reservation", i1 false, i1 false}
!587 = !{ptr @event_btrfs_space_reservation, !113, !"event_btrfs_space_reservation", i1 false, i1 false}
!588 = !{ptr @__event_btrfs_space_reservation, !113, !"__event_btrfs_space_reservation", i1 false, i1 false}
!589 = !{ptr @event_class_btrfs_trigger_flush, !117, !"event_class_btrfs_trigger_flush", i1 false, i1 false}
!590 = !{ptr @event_btrfs_trigger_flush, !117, !"event_btrfs_trigger_flush", i1 false, i1 false}
!591 = !{ptr @__event_btrfs_trigger_flush, !117, !"__event_btrfs_trigger_flush", i1 false, i1 false}
!592 = !{ptr @event_class_btrfs_flush_space, !121, !"event_class_btrfs_flush_space", i1 false, i1 false}
!593 = !{ptr @event_btrfs_flush_space, !121, !"event_btrfs_flush_space", i1 false, i1 false}
!594 = !{ptr @__event_btrfs_flush_space, !121, !"__event_btrfs_flush_space", i1 false, i1 false}
!595 = !{ptr @event_class_btrfs__reserved_extent, !596, !"event_class_btrfs__reserved_extent", i1 false, i1 false}
!596 = !{!"../include/trace/events/btrfs.h", i32 1141, i32 1}
!597 = !{ptr @event_btrfs_reserved_extent_alloc, !125, !"event_btrfs_reserved_extent_alloc", i1 false, i1 false}
!598 = !{ptr @__event_btrfs_reserved_extent_alloc, !125, !"__event_btrfs_reserved_extent_alloc", i1 false, i1 false}
!599 = !{ptr @event_btrfs_reserved_extent_free, !129, !"event_btrfs_reserved_extent_free", i1 false, i1 false}
!600 = !{ptr @__event_btrfs_reserved_extent_free, !129, !"__event_btrfs_reserved_extent_free", i1 false, i1 false}
!601 = !{ptr @event_class_find_free_extent, !133, !"event_class_find_free_extent", i1 false, i1 false}
!602 = !{ptr @event_find_free_extent, !133, !"event_find_free_extent", i1 false, i1 false}
!603 = !{ptr @__event_find_free_extent, !133, !"__event_find_free_extent", i1 false, i1 false}
!604 = !{ptr @event_class_btrfs__reserve_extent, !605, !"event_class_btrfs__reserve_extent", i1 false, i1 false}
!605 = !{!"../include/trace/events/btrfs.h", i32 1205, i32 1}
!606 = !{ptr @event_btrfs_reserve_extent, !137, !"event_btrfs_reserve_extent", i1 false, i1 false}
!607 = !{ptr @__event_btrfs_reserve_extent, !137, !"__event_btrfs_reserve_extent", i1 false, i1 false}
!608 = !{ptr @event_btrfs_reserve_extent_cluster, !141, !"event_btrfs_reserve_extent_cluster", i1 false, i1 false}
!609 = !{ptr @__event_btrfs_reserve_extent_cluster, !141, !"__event_btrfs_reserve_extent_cluster", i1 false, i1 false}
!610 = !{ptr @event_class_btrfs_find_cluster, !145, !"event_class_btrfs_find_cluster", i1 false, i1 false}
!611 = !{ptr @event_btrfs_find_cluster, !145, !"event_btrfs_find_cluster", i1 false, i1 false}
!612 = !{ptr @__event_btrfs_find_cluster, !145, !"__event_btrfs_find_cluster", i1 false, i1 false}
!613 = !{ptr @event_class_btrfs_failed_cluster_setup, !149, !"event_class_btrfs_failed_cluster_setup", i1 false, i1 false}
!614 = !{ptr @event_btrfs_failed_cluster_setup, !149, !"event_btrfs_failed_cluster_setup", i1 false, i1 false}
!615 = !{ptr @__event_btrfs_failed_cluster_setup, !149, !"__event_btrfs_failed_cluster_setup", i1 false, i1 false}
!616 = !{ptr @event_class_btrfs_setup_cluster, !153, !"event_class_btrfs_setup_cluster", i1 false, i1 false}
!617 = !{ptr @event_btrfs_setup_cluster, !153, !"event_btrfs_setup_cluster", i1 false, i1 false}
!618 = !{ptr @__event_btrfs_setup_cluster, !153, !"__event_btrfs_setup_cluster", i1 false, i1 false}
!619 = !{ptr @event_class_alloc_extent_state, !157, !"event_class_alloc_extent_state", i1 false, i1 false}
!620 = !{ptr @event_alloc_extent_state, !157, !"event_alloc_extent_state", i1 false, i1 false}
!621 = !{ptr @__event_alloc_extent_state, !157, !"__event_alloc_extent_state", i1 false, i1 false}
!622 = !{ptr @event_class_free_extent_state, !161, !"event_class_free_extent_state", i1 false, i1 false}
!623 = !{ptr @event_free_extent_state, !161, !"event_free_extent_state", i1 false, i1 false}
!624 = !{ptr @__event_free_extent_state, !161, !"__event_free_extent_state", i1 false, i1 false}
!625 = !{ptr @event_class_btrfs__work, !626, !"event_class_btrfs__work", i1 false, i1 false}
!626 = !{!"../include/trace/events/btrfs.h", i32 1379, i32 1}
!627 = !{ptr @event_class_btrfs__work__done, !628, !"event_class_btrfs__work__done", i1 false, i1 false}
!628 = !{!"../include/trace/events/btrfs.h", i32 1414, i32 1}
!629 = !{ptr @event_btrfs_work_queued, !165, !"event_btrfs_work_queued", i1 false, i1 false}
!630 = !{ptr @__event_btrfs_work_queued, !165, !"__event_btrfs_work_queued", i1 false, i1 false}
!631 = !{ptr @event_btrfs_work_sched, !169, !"event_btrfs_work_sched", i1 false, i1 false}
!632 = !{ptr @__event_btrfs_work_sched, !169, !"__event_btrfs_work_sched", i1 false, i1 false}
!633 = !{ptr @event_btrfs_all_work_done, !173, !"event_btrfs_all_work_done", i1 false, i1 false}
!634 = !{ptr @__event_btrfs_all_work_done, !173, !"__event_btrfs_all_work_done", i1 false, i1 false}
!635 = !{ptr @event_btrfs_ordered_sched, !177, !"event_btrfs_ordered_sched", i1 false, i1 false}
!636 = !{ptr @__event_btrfs_ordered_sched, !177, !"__event_btrfs_ordered_sched", i1 false, i1 false}
!637 = !{ptr @event_class_btrfs__workqueue, !638, !"event_class_btrfs__workqueue", i1 false, i1 false}
!638 = !{!"../include/trace/events/btrfs.h", i32 1459, i32 1}
!639 = !{ptr @event_btrfs_workqueue_alloc, !181, !"event_btrfs_workqueue_alloc", i1 false, i1 false}
!640 = !{ptr @__event_btrfs_workqueue_alloc, !181, !"__event_btrfs_workqueue_alloc", i1 false, i1 false}
!641 = !{ptr @event_class_btrfs__workqueue_done, !642, !"event_class_btrfs__workqueue_done", i1 false, i1 false}
!642 = !{!"../include/trace/events/btrfs.h", i32 1492, i32 1}
!643 = !{ptr @event_btrfs_workqueue_destroy, !185, !"event_btrfs_workqueue_destroy", i1 false, i1 false}
!644 = !{ptr @__event_btrfs_workqueue_destroy, !185, !"__event_btrfs_workqueue_destroy", i1 false, i1 false}
!645 = !{ptr @event_class_btrfs__qgroup_rsv_data, !646, !"event_class_btrfs__qgroup_rsv_data", i1 false, i1 false}
!646 = !{!"../include/trace/events/btrfs.h", i32 1521, i32 1}
!647 = !{ptr @event_btrfs_qgroup_reserve_data, !189, !"event_btrfs_qgroup_reserve_data", i1 false, i1 false}
!648 = !{ptr @__event_btrfs_qgroup_reserve_data, !189, !"__event_btrfs_qgroup_reserve_data", i1 false, i1 false}
!649 = !{ptr @event_btrfs_qgroup_release_data, !193, !"event_btrfs_qgroup_release_data", i1 false, i1 false}
!650 = !{ptr @__event_btrfs_qgroup_release_data, !193, !"__event_btrfs_qgroup_release_data", i1 false, i1 false}
!651 = !{ptr @event_class_btrfs_qgroup_extent, !652, !"event_class_btrfs_qgroup_extent", i1 false, i1 false}
!652 = !{!"../include/trace/events/btrfs.h", i32 1571, i32 1}
!653 = !{ptr @event_btrfs_qgroup_account_extents, !197, !"event_btrfs_qgroup_account_extents", i1 false, i1 false}
!654 = !{ptr @__event_btrfs_qgroup_account_extents, !197, !"__event_btrfs_qgroup_account_extents", i1 false, i1 false}
!655 = !{ptr @event_btrfs_qgroup_trace_extent, !201, !"event_btrfs_qgroup_trace_extent", i1 false, i1 false}
!656 = !{ptr @__event_btrfs_qgroup_trace_extent, !201, !"__event_btrfs_qgroup_trace_extent", i1 false, i1 false}
!657 = !{ptr @event_class_qgroup_num_dirty_extents, !205, !"event_class_qgroup_num_dirty_extents", i1 false, i1 false}
!658 = !{ptr @event_qgroup_num_dirty_extents, !205, !"event_qgroup_num_dirty_extents", i1 false, i1 false}
!659 = !{ptr @__event_qgroup_num_dirty_extents, !205, !"__event_qgroup_num_dirty_extents", i1 false, i1 false}
!660 = !{ptr @event_class_btrfs_qgroup_account_extent, !209, !"event_class_btrfs_qgroup_account_extent", i1 false, i1 false}
!661 = !{ptr @event_btrfs_qgroup_account_extent, !209, !"event_btrfs_qgroup_account_extent", i1 false, i1 false}
!662 = !{ptr @__event_btrfs_qgroup_account_extent, !209, !"__event_btrfs_qgroup_account_extent", i1 false, i1 false}
!663 = !{ptr @event_class_qgroup_update_counters, !213, !"event_class_qgroup_update_counters", i1 false, i1 false}
!664 = !{ptr @event_qgroup_update_counters, !213, !"event_qgroup_update_counters", i1 false, i1 false}
!665 = !{ptr @__event_qgroup_update_counters, !213, !"__event_qgroup_update_counters", i1 false, i1 false}
!666 = !{ptr @event_class_qgroup_update_reserve, !217, !"event_class_qgroup_update_reserve", i1 false, i1 false}
!667 = !{ptr @event_qgroup_update_reserve, !217, !"event_qgroup_update_reserve", i1 false, i1 false}
!668 = !{ptr @__event_qgroup_update_reserve, !217, !"__event_qgroup_update_reserve", i1 false, i1 false}
!669 = !{ptr @event_class_qgroup_meta_reserve, !221, !"event_class_qgroup_meta_reserve", i1 false, i1 false}
!670 = !{ptr @event_qgroup_meta_reserve, !221, !"event_qgroup_meta_reserve", i1 false, i1 false}
!671 = !{ptr @__event_qgroup_meta_reserve, !221, !"__event_qgroup_meta_reserve", i1 false, i1 false}
!672 = !{ptr @event_class_qgroup_meta_convert, !225, !"event_class_qgroup_meta_convert", i1 false, i1 false}
!673 = !{ptr @event_qgroup_meta_convert, !225, !"event_qgroup_meta_convert", i1 false, i1 false}
!674 = !{ptr @__event_qgroup_meta_convert, !225, !"__event_qgroup_meta_convert", i1 false, i1 false}
!675 = !{ptr @event_class_qgroup_meta_free_all_pertrans, !229, !"event_class_qgroup_meta_free_all_pertrans", i1 false, i1 false}
!676 = !{ptr @event_qgroup_meta_free_all_pertrans, !229, !"event_qgroup_meta_free_all_pertrans", i1 false, i1 false}
!677 = !{ptr @__event_qgroup_meta_free_all_pertrans, !229, !"__event_qgroup_meta_free_all_pertrans", i1 false, i1 false}
!678 = !{ptr @event_class_btrfs__prelim_ref, !679, !"event_class_btrfs__prelim_ref", i1 false, i1 false}
!679 = !{!"../include/trace/events/btrfs.h", i32 1787, i32 1}
!680 = !{ptr @event_btrfs_prelim_ref_merge, !233, !"event_btrfs_prelim_ref_merge", i1 false, i1 false}
!681 = !{ptr @__event_btrfs_prelim_ref_merge, !233, !"__event_btrfs_prelim_ref_merge", i1 false, i1 false}
!682 = !{ptr @event_btrfs_prelim_ref_insert, !237, !"event_btrfs_prelim_ref_insert", i1 false, i1 false}
!683 = !{ptr @__event_btrfs_prelim_ref_insert, !237, !"__event_btrfs_prelim_ref_insert", i1 false, i1 false}
!684 = !{ptr @event_class_btrfs_inode_mod_outstanding_extents, !241, !"event_class_btrfs_inode_mod_outstanding_extents", i1 false, i1 false}
!685 = !{ptr @event_btrfs_inode_mod_outstanding_extents, !241, !"event_btrfs_inode_mod_outstanding_extents", i1 false, i1 false}
!686 = !{ptr @__event_btrfs_inode_mod_outstanding_extents, !241, !"__event_btrfs_inode_mod_outstanding_extents", i1 false, i1 false}
!687 = !{ptr @event_class_btrfs__block_group, !688, !"event_class_btrfs__block_group", i1 false, i1 false}
!688 = !{!"../include/trace/events/btrfs.h", i32 1866, i32 1}
!689 = !{ptr @event_btrfs_remove_block_group, !245, !"event_btrfs_remove_block_group", i1 false, i1 false}
!690 = !{ptr @__event_btrfs_remove_block_group, !245, !"__event_btrfs_remove_block_group", i1 false, i1 false}
!691 = !{ptr @event_btrfs_add_unused_block_group, !249, !"event_btrfs_add_unused_block_group", i1 false, i1 false}
!692 = !{ptr @__event_btrfs_add_unused_block_group, !249, !"__event_btrfs_add_unused_block_group", i1 false, i1 false}
!693 = !{ptr @event_btrfs_add_reclaim_block_group, !253, !"event_btrfs_add_reclaim_block_group", i1 false, i1 false}
!694 = !{ptr @__event_btrfs_add_reclaim_block_group, !253, !"__event_btrfs_add_reclaim_block_group", i1 false, i1 false}
!695 = !{ptr @event_btrfs_reclaim_block_group, !257, !"event_btrfs_reclaim_block_group", i1 false, i1 false}
!696 = !{ptr @__event_btrfs_reclaim_block_group, !257, !"__event_btrfs_reclaim_block_group", i1 false, i1 false}
!697 = !{ptr @event_btrfs_skip_unused_block_group, !261, !"event_btrfs_skip_unused_block_group", i1 false, i1 false}
!698 = !{ptr @__event_btrfs_skip_unused_block_group, !261, !"__event_btrfs_skip_unused_block_group", i1 false, i1 false}
!699 = !{ptr @event_class_btrfs_set_extent_bit, !265, !"event_class_btrfs_set_extent_bit", i1 false, i1 false}
!700 = !{ptr @event_btrfs_set_extent_bit, !265, !"event_btrfs_set_extent_bit", i1 false, i1 false}
!701 = !{ptr @__event_btrfs_set_extent_bit, !265, !"__event_btrfs_set_extent_bit", i1 false, i1 false}
!702 = !{ptr @event_class_btrfs_clear_extent_bit, !269, !"event_class_btrfs_clear_extent_bit", i1 false, i1 false}
!703 = !{ptr @event_btrfs_clear_extent_bit, !269, !"event_btrfs_clear_extent_bit", i1 false, i1 false}
!704 = !{ptr @__event_btrfs_clear_extent_bit, !269, !"__event_btrfs_clear_extent_bit", i1 false, i1 false}
!705 = !{ptr @event_class_btrfs_convert_extent_bit, !273, !"event_class_btrfs_convert_extent_bit", i1 false, i1 false}
!706 = !{ptr @event_btrfs_convert_extent_bit, !273, !"event_btrfs_convert_extent_bit", i1 false, i1 false}
!707 = !{ptr @__event_btrfs_convert_extent_bit, !273, !"__event_btrfs_convert_extent_bit", i1 false, i1 false}
!708 = !{ptr @event_class_btrfs_dump_space_info, !709, !"event_class_btrfs_dump_space_info", i1 false, i1 false}
!709 = !{!"../include/trace/events/btrfs.h", i32 2040, i32 1}
!710 = !{ptr @event_btrfs_done_preemptive_reclaim, !277, !"event_btrfs_done_preemptive_reclaim", i1 false, i1 false}
!711 = !{ptr @__event_btrfs_done_preemptive_reclaim, !277, !"__event_btrfs_done_preemptive_reclaim", i1 false, i1 false}
!712 = !{ptr @event_btrfs_fail_all_tickets, !281, !"event_btrfs_fail_all_tickets", i1 false, i1 false}
!713 = !{ptr @__event_btrfs_fail_all_tickets, !281, !"__event_btrfs_fail_all_tickets", i1 false, i1 false}
!714 = !{ptr @event_class_btrfs_reserve_ticket, !285, !"event_class_btrfs_reserve_ticket", i1 false, i1 false}
!715 = !{ptr @event_btrfs_reserve_ticket, !285, !"event_btrfs_reserve_ticket", i1 false, i1 false}
!716 = !{ptr @__event_btrfs_reserve_ticket, !285, !"__event_btrfs_reserve_ticket", i1 false, i1 false}
!717 = !{ptr @event_class_btrfs_sleep_tree_lock, !718, !"event_class_btrfs_sleep_tree_lock", i1 false, i1 false}
!718 = !{!"../include/trace/events/btrfs.h", i32 2143, i32 1}
!719 = !{ptr @event_btrfs_tree_read_lock, !289, !"event_btrfs_tree_read_lock", i1 false, i1 false}
!720 = !{ptr @__event_btrfs_tree_read_lock, !289, !"__event_btrfs_tree_read_lock", i1 false, i1 false}
!721 = !{ptr @event_btrfs_tree_lock, !293, !"event_btrfs_tree_lock", i1 false, i1 false}
!722 = !{ptr @__event_btrfs_tree_lock, !293, !"__event_btrfs_tree_lock", i1 false, i1 false}
!723 = !{ptr @event_class_btrfs_locking_events, !724, !"event_class_btrfs_locking_events", i1 false, i1 false}
!724 = !{!"../include/trace/events/btrfs.h", i32 2187, i32 1}
!725 = !{ptr @event_btrfs_tree_unlock, !297, !"event_btrfs_tree_unlock", i1 false, i1 false}
!726 = !{ptr @__event_btrfs_tree_unlock, !297, !"__event_btrfs_tree_unlock", i1 false, i1 false}
!727 = !{ptr @event_btrfs_tree_read_unlock, !301, !"event_btrfs_tree_read_unlock", i1 false, i1 false}
!728 = !{ptr @__event_btrfs_tree_read_unlock, !301, !"__event_btrfs_tree_read_unlock", i1 false, i1 false}
!729 = !{ptr @event_btrfs_tree_read_unlock_blocking, !305, !"event_btrfs_tree_read_unlock_blocking", i1 false, i1 false}
!730 = !{ptr @__event_btrfs_tree_read_unlock_blocking, !305, !"__event_btrfs_tree_read_unlock_blocking", i1 false, i1 false}
!731 = !{ptr @event_btrfs_set_lock_blocking_read, !309, !"event_btrfs_set_lock_blocking_read", i1 false, i1 false}
!732 = !{ptr @__event_btrfs_set_lock_blocking_read, !309, !"__event_btrfs_set_lock_blocking_read", i1 false, i1 false}
!733 = !{ptr @event_btrfs_set_lock_blocking_write, !313, !"event_btrfs_set_lock_blocking_write", i1 false, i1 false}
!734 = !{ptr @__event_btrfs_set_lock_blocking_write, !313, !"__event_btrfs_set_lock_blocking_write", i1 false, i1 false}
!735 = !{ptr @event_btrfs_try_tree_read_lock, !317, !"event_btrfs_try_tree_read_lock", i1 false, i1 false}
!736 = !{ptr @__event_btrfs_try_tree_read_lock, !317, !"__event_btrfs_try_tree_read_lock", i1 false, i1 false}
!737 = !{ptr @event_btrfs_try_tree_write_lock, !321, !"event_btrfs_try_tree_write_lock", i1 false, i1 false}
!738 = !{ptr @__event_btrfs_try_tree_write_lock, !321, !"__event_btrfs_try_tree_write_lock", i1 false, i1 false}
!739 = !{ptr @event_btrfs_tree_read_lock_atomic, !325, !"event_btrfs_tree_read_lock_atomic", i1 false, i1 false}
!740 = !{ptr @__event_btrfs_tree_read_lock_atomic, !325, !"__event_btrfs_tree_read_lock_atomic", i1 false, i1 false}
!741 = !{ptr @event_class_btrfs__space_info_update, !742, !"event_class_btrfs__space_info_update", i1 false, i1 false}
!742 = !{!"../include/trace/events/btrfs.h", i32 2227, i32 1}
!743 = !{ptr @event_update_bytes_may_use, !329, !"event_update_bytes_may_use", i1 false, i1 false}
!744 = !{ptr @__event_update_bytes_may_use, !329, !"__event_update_bytes_may_use", i1 false, i1 false}
!745 = !{ptr @event_update_bytes_pinned, !333, !"event_update_bytes_pinned", i1 false, i1 false}
!746 = !{ptr @__event_update_bytes_pinned, !333, !"__event_update_bytes_pinned", i1 false, i1 false}
!747 = !{ptr @__bpf_trace_tp_map_btrfs_transaction_commit, !1, !"__bpf_trace_tp_map_btrfs_transaction_commit", i1 false, i1 false}
!748 = !{ptr @__bpf_trace_tp_map_btrfs_inode_new, !5, !"__bpf_trace_tp_map_btrfs_inode_new", i1 false, i1 false}
!749 = !{ptr @__bpf_trace_tp_map_btrfs_inode_request, !9, !"__bpf_trace_tp_map_btrfs_inode_request", i1 false, i1 false}
!750 = !{ptr @__bpf_trace_tp_map_btrfs_inode_evict, !13, !"__bpf_trace_tp_map_btrfs_inode_evict", i1 false, i1 false}
!751 = !{ptr @__bpf_trace_tp_map_btrfs_get_extent, !17, !"__bpf_trace_tp_map_btrfs_get_extent", i1 false, i1 false}
!752 = !{ptr @__bpf_trace_tp_map_btrfs_handle_em_exist, !21, !"__bpf_trace_tp_map_btrfs_handle_em_exist", i1 false, i1 false}
!753 = !{ptr @__bpf_trace_tp_map_btrfs_get_extent_show_fi_regular, !25, !"__bpf_trace_tp_map_btrfs_get_extent_show_fi_regular", i1 false, i1 false}
!754 = !{ptr @__bpf_trace_tp_map_btrfs_truncate_show_fi_regular, !29, !"__bpf_trace_tp_map_btrfs_truncate_show_fi_regular", i1 false, i1 false}
!755 = !{ptr @__bpf_trace_tp_map_btrfs_get_extent_show_fi_inline, !33, !"__bpf_trace_tp_map_btrfs_get_extent_show_fi_inline", i1 false, i1 false}
!756 = !{ptr @__bpf_trace_tp_map_btrfs_truncate_show_fi_inline, !37, !"__bpf_trace_tp_map_btrfs_truncate_show_fi_inline", i1 false, i1 false}
!757 = !{ptr @__bpf_trace_tp_map_btrfs_ordered_extent_add, !41, !"__bpf_trace_tp_map_btrfs_ordered_extent_add", i1 false, i1 false}
!758 = !{ptr @__bpf_trace_tp_map_btrfs_ordered_extent_remove, !45, !"__bpf_trace_tp_map_btrfs_ordered_extent_remove", i1 false, i1 false}
!759 = !{ptr @__bpf_trace_tp_map_btrfs_ordered_extent_start, !49, !"__bpf_trace_tp_map_btrfs_ordered_extent_start", i1 false, i1 false}
!760 = !{ptr @__bpf_trace_tp_map_btrfs_ordered_extent_put, !53, !"__bpf_trace_tp_map_btrfs_ordered_extent_put", i1 false, i1 false}
!761 = !{ptr @__bpf_trace_tp_map___extent_writepage, !57, !"__bpf_trace_tp_map___extent_writepage", i1 false, i1 false}
!762 = !{ptr @__bpf_trace_tp_map_btrfs_writepage_end_io_hook, !61, !"__bpf_trace_tp_map_btrfs_writepage_end_io_hook", i1 false, i1 false}
!763 = !{ptr @__bpf_trace_tp_map_btrfs_sync_file, !65, !"__bpf_trace_tp_map_btrfs_sync_file", i1 false, i1 false}
!764 = !{ptr @__bpf_trace_tp_map_btrfs_sync_fs, !69, !"__bpf_trace_tp_map_btrfs_sync_fs", i1 false, i1 false}
!765 = !{ptr @__bpf_trace_tp_map_btrfs_add_block_group, !73, !"__bpf_trace_tp_map_btrfs_add_block_group", i1 false, i1 false}
!766 = !{ptr @__bpf_trace_tp_map_add_delayed_tree_ref, !77, !"__bpf_trace_tp_map_add_delayed_tree_ref", i1 false, i1 false}
!767 = !{ptr @__bpf_trace_tp_map_run_delayed_tree_ref, !81, !"__bpf_trace_tp_map_run_delayed_tree_ref", i1 false, i1 false}
!768 = !{ptr @__bpf_trace_tp_map_add_delayed_data_ref, !85, !"__bpf_trace_tp_map_add_delayed_data_ref", i1 false, i1 false}
!769 = !{ptr @__bpf_trace_tp_map_run_delayed_data_ref, !89, !"__bpf_trace_tp_map_run_delayed_data_ref", i1 false, i1 false}
!770 = !{ptr @__bpf_trace_tp_map_add_delayed_ref_head, !93, !"__bpf_trace_tp_map_add_delayed_ref_head", i1 false, i1 false}
!771 = !{ptr @__bpf_trace_tp_map_run_delayed_ref_head, !97, !"__bpf_trace_tp_map_run_delayed_ref_head", i1 false, i1 false}
!772 = !{ptr @__bpf_trace_tp_map_btrfs_chunk_alloc, !101, !"__bpf_trace_tp_map_btrfs_chunk_alloc", i1 false, i1 false}
!773 = !{ptr @__bpf_trace_tp_map_btrfs_chunk_free, !105, !"__bpf_trace_tp_map_btrfs_chunk_free", i1 false, i1 false}
!774 = !{ptr @__bpf_trace_tp_map_btrfs_cow_block, !109, !"__bpf_trace_tp_map_btrfs_cow_block", i1 false, i1 false}
!775 = !{ptr @__bpf_trace_tp_map_btrfs_space_reservation, !113, !"__bpf_trace_tp_map_btrfs_space_reservation", i1 false, i1 false}
!776 = !{ptr @__bpf_trace_tp_map_btrfs_trigger_flush, !117, !"__bpf_trace_tp_map_btrfs_trigger_flush", i1 false, i1 false}
!777 = !{ptr @__bpf_trace_tp_map_btrfs_flush_space, !121, !"__bpf_trace_tp_map_btrfs_flush_space", i1 false, i1 false}
!778 = !{ptr @__bpf_trace_tp_map_btrfs_reserved_extent_alloc, !125, !"__bpf_trace_tp_map_btrfs_reserved_extent_alloc", i1 false, i1 false}
!779 = !{ptr @__bpf_trace_tp_map_btrfs_reserved_extent_free, !129, !"__bpf_trace_tp_map_btrfs_reserved_extent_free", i1 false, i1 false}
!780 = !{ptr @__bpf_trace_tp_map_find_free_extent, !133, !"__bpf_trace_tp_map_find_free_extent", i1 false, i1 false}
!781 = !{ptr @__bpf_trace_tp_map_btrfs_reserve_extent, !137, !"__bpf_trace_tp_map_btrfs_reserve_extent", i1 false, i1 false}
!782 = !{ptr @__bpf_trace_tp_map_btrfs_reserve_extent_cluster, !141, !"__bpf_trace_tp_map_btrfs_reserve_extent_cluster", i1 false, i1 false}
!783 = !{ptr @__bpf_trace_tp_map_btrfs_find_cluster, !145, !"__bpf_trace_tp_map_btrfs_find_cluster", i1 false, i1 false}
!784 = !{ptr @__bpf_trace_tp_map_btrfs_failed_cluster_setup, !149, !"__bpf_trace_tp_map_btrfs_failed_cluster_setup", i1 false, i1 false}
!785 = !{ptr @__bpf_trace_tp_map_btrfs_setup_cluster, !153, !"__bpf_trace_tp_map_btrfs_setup_cluster", i1 false, i1 false}
!786 = !{ptr @__bpf_trace_tp_map_alloc_extent_state, !157, !"__bpf_trace_tp_map_alloc_extent_state", i1 false, i1 false}
!787 = !{ptr @__bpf_trace_tp_map_free_extent_state, !161, !"__bpf_trace_tp_map_free_extent_state", i1 false, i1 false}
!788 = !{ptr @__bpf_trace_tp_map_btrfs_work_queued, !165, !"__bpf_trace_tp_map_btrfs_work_queued", i1 false, i1 false}
!789 = !{ptr @__bpf_trace_tp_map_btrfs_work_sched, !169, !"__bpf_trace_tp_map_btrfs_work_sched", i1 false, i1 false}
!790 = !{ptr @__bpf_trace_tp_map_btrfs_all_work_done, !173, !"__bpf_trace_tp_map_btrfs_all_work_done", i1 false, i1 false}
!791 = !{ptr @__bpf_trace_tp_map_btrfs_ordered_sched, !177, !"__bpf_trace_tp_map_btrfs_ordered_sched", i1 false, i1 false}
!792 = !{ptr @__bpf_trace_tp_map_btrfs_workqueue_alloc, !181, !"__bpf_trace_tp_map_btrfs_workqueue_alloc", i1 false, i1 false}
!793 = !{ptr @__bpf_trace_tp_map_btrfs_workqueue_destroy, !185, !"__bpf_trace_tp_map_btrfs_workqueue_destroy", i1 false, i1 false}
!794 = !{ptr @__bpf_trace_tp_map_btrfs_qgroup_reserve_data, !189, !"__bpf_trace_tp_map_btrfs_qgroup_reserve_data", i1 false, i1 false}
!795 = !{ptr @__bpf_trace_tp_map_btrfs_qgroup_release_data, !193, !"__bpf_trace_tp_map_btrfs_qgroup_release_data", i1 false, i1 false}
!796 = !{ptr @__bpf_trace_tp_map_btrfs_qgroup_account_extents, !197, !"__bpf_trace_tp_map_btrfs_qgroup_account_extents", i1 false, i1 false}
!797 = !{ptr @__bpf_trace_tp_map_btrfs_qgroup_trace_extent, !201, !"__bpf_trace_tp_map_btrfs_qgroup_trace_extent", i1 false, i1 false}
!798 = !{ptr @__bpf_trace_tp_map_qgroup_num_dirty_extents, !205, !"__bpf_trace_tp_map_qgroup_num_dirty_extents", i1 false, i1 false}
!799 = !{ptr @__bpf_trace_tp_map_btrfs_qgroup_account_extent, !209, !"__bpf_trace_tp_map_btrfs_qgroup_account_extent", i1 false, i1 false}
!800 = !{ptr @__bpf_trace_tp_map_qgroup_update_counters, !213, !"__bpf_trace_tp_map_qgroup_update_counters", i1 false, i1 false}
!801 = !{ptr @__bpf_trace_tp_map_qgroup_update_reserve, !217, !"__bpf_trace_tp_map_qgroup_update_reserve", i1 false, i1 false}
!802 = !{ptr @__bpf_trace_tp_map_qgroup_meta_reserve, !221, !"__bpf_trace_tp_map_qgroup_meta_reserve", i1 false, i1 false}
!803 = !{ptr @__bpf_trace_tp_map_qgroup_meta_convert, !225, !"__bpf_trace_tp_map_qgroup_meta_convert", i1 false, i1 false}
!804 = !{ptr @__bpf_trace_tp_map_qgroup_meta_free_all_pertrans, !229, !"__bpf_trace_tp_map_qgroup_meta_free_all_pertrans", i1 false, i1 false}
!805 = !{ptr @__bpf_trace_tp_map_btrfs_prelim_ref_merge, !233, !"__bpf_trace_tp_map_btrfs_prelim_ref_merge", i1 false, i1 false}
!806 = !{ptr @__bpf_trace_tp_map_btrfs_prelim_ref_insert, !237, !"__bpf_trace_tp_map_btrfs_prelim_ref_insert", i1 false, i1 false}
!807 = !{ptr @__bpf_trace_tp_map_btrfs_inode_mod_outstanding_extents, !241, !"__bpf_trace_tp_map_btrfs_inode_mod_outstanding_extents", i1 false, i1 false}
!808 = !{ptr @__bpf_trace_tp_map_btrfs_remove_block_group, !245, !"__bpf_trace_tp_map_btrfs_remove_block_group", i1 false, i1 false}
!809 = !{ptr @__bpf_trace_tp_map_btrfs_add_unused_block_group, !249, !"__bpf_trace_tp_map_btrfs_add_unused_block_group", i1 false, i1 false}
!810 = !{ptr @__bpf_trace_tp_map_btrfs_add_reclaim_block_group, !253, !"__bpf_trace_tp_map_btrfs_add_reclaim_block_group", i1 false, i1 false}
!811 = !{ptr @__bpf_trace_tp_map_btrfs_reclaim_block_group, !257, !"__bpf_trace_tp_map_btrfs_reclaim_block_group", i1 false, i1 false}
!812 = !{ptr @__bpf_trace_tp_map_btrfs_skip_unused_block_group, !261, !"__bpf_trace_tp_map_btrfs_skip_unused_block_group", i1 false, i1 false}
!813 = !{ptr @__bpf_trace_tp_map_btrfs_set_extent_bit, !265, !"__bpf_trace_tp_map_btrfs_set_extent_bit", i1 false, i1 false}
!814 = !{ptr @__bpf_trace_tp_map_btrfs_clear_extent_bit, !269, !"__bpf_trace_tp_map_btrfs_clear_extent_bit", i1 false, i1 false}
!815 = !{ptr @__bpf_trace_tp_map_btrfs_convert_extent_bit, !273, !"__bpf_trace_tp_map_btrfs_convert_extent_bit", i1 false, i1 false}
!816 = !{ptr @__bpf_trace_tp_map_btrfs_done_preemptive_reclaim, !277, !"__bpf_trace_tp_map_btrfs_done_preemptive_reclaim", i1 false, i1 false}
!817 = !{ptr @__bpf_trace_tp_map_btrfs_fail_all_tickets, !281, !"__bpf_trace_tp_map_btrfs_fail_all_tickets", i1 false, i1 false}
!818 = !{ptr @__bpf_trace_tp_map_btrfs_reserve_ticket, !285, !"__bpf_trace_tp_map_btrfs_reserve_ticket", i1 false, i1 false}
!819 = !{ptr @__bpf_trace_tp_map_btrfs_tree_read_lock, !289, !"__bpf_trace_tp_map_btrfs_tree_read_lock", i1 false, i1 false}
!820 = !{ptr @__bpf_trace_tp_map_btrfs_tree_lock, !293, !"__bpf_trace_tp_map_btrfs_tree_lock", i1 false, i1 false}
!821 = !{ptr @__bpf_trace_tp_map_btrfs_tree_unlock, !297, !"__bpf_trace_tp_map_btrfs_tree_unlock", i1 false, i1 false}
!822 = !{ptr @__bpf_trace_tp_map_btrfs_tree_read_unlock, !301, !"__bpf_trace_tp_map_btrfs_tree_read_unlock", i1 false, i1 false}
!823 = !{ptr @__bpf_trace_tp_map_btrfs_tree_read_unlock_blocking, !305, !"__bpf_trace_tp_map_btrfs_tree_read_unlock_blocking", i1 false, i1 false}
!824 = !{ptr @__bpf_trace_tp_map_btrfs_set_lock_blocking_read, !309, !"__bpf_trace_tp_map_btrfs_set_lock_blocking_read", i1 false, i1 false}
!825 = !{ptr @__bpf_trace_tp_map_btrfs_set_lock_blocking_write, !313, !"__bpf_trace_tp_map_btrfs_set_lock_blocking_write", i1 false, i1 false}
!826 = !{ptr @__bpf_trace_tp_map_btrfs_try_tree_read_lock, !317, !"__bpf_trace_tp_map_btrfs_try_tree_read_lock", i1 false, i1 false}
!827 = !{ptr @__bpf_trace_tp_map_btrfs_try_tree_write_lock, !321, !"__bpf_trace_tp_map_btrfs_try_tree_write_lock", i1 false, i1 false}
!828 = !{ptr @__bpf_trace_tp_map_btrfs_tree_read_lock_atomic, !325, !"__bpf_trace_tp_map_btrfs_tree_read_lock_atomic", i1 false, i1 false}
!829 = !{ptr @__bpf_trace_tp_map_update_bytes_may_use, !329, !"__bpf_trace_tp_map_update_bytes_may_use", i1 false, i1 false}
!830 = !{ptr @__bpf_trace_tp_map_update_bytes_pinned, !333, !"__bpf_trace_tp_map_update_bytes_pinned", i1 false, i1 false}
!831 = !{ptr @.str.53, !832, !"<string literal>", i1 false, i1 false}
!832 = !{!"../fs/btrfs/super.c", i32 86, i32 17}
!833 = !{ptr @.str.54, !834, !"<string literal>", i1 false, i1 false}
!834 = !{!"../fs/btrfs/super.c", i32 90, i32 12}
!835 = !{ptr @.str.55, !836, !"<string literal>", i1 false, i1 false}
!836 = !{!"../fs/btrfs/super.c", i32 93, i32 12}
!837 = !{ptr @.str.56, !838, !"<string literal>", i1 false, i1 false}
!838 = !{!"../fs/btrfs/super.c", i32 96, i32 12}
!839 = !{ptr @.str.57, !840, !"<string literal>", i1 false, i1 false}
!840 = !{!"../fs/btrfs/super.c", i32 99, i32 12}
!841 = !{ptr @.str.58, !842, !"<string literal>", i1 false, i1 false}
!842 = !{!"../fs/btrfs/super.c", i32 102, i32 12}
!843 = !{ptr @.str.59, !844, !"<string literal>", i1 false, i1 false}
!844 = !{!"../fs/btrfs/super.c", i32 105, i32 12}
!845 = !{ptr @.str.60, !846, !"<string literal>", i1 false, i1 false}
!846 = !{!"../fs/btrfs/super.c", i32 108, i32 12}
!847 = !{ptr @.str.61, !848, !"<string literal>", i1 false, i1 false}
!848 = !{!"../fs/btrfs/super.c", i32 111, i32 12}
!849 = !{ptr @.str.62, !850, !"<string literal>", i1 false, i1 false}
!850 = !{!"../fs/btrfs/super.c", i32 114, i32 12}
!851 = !{ptr @.str.63, !852, !"<string literal>", i1 false, i1 false}
!852 = !{!"../fs/btrfs/super.c", i32 151, i32 3}
!853 = !{ptr @.str.64, !852, !"<string literal>", i1 false, i1 false}
!854 = !{ptr @.str.65, !852, !"<string literal>", i1 false, i1 false}
!855 = !{ptr @__btrfs_handle_fs_error._entry, !852, !"_entry", i1 false, i1 false}
!856 = !{ptr @__btrfs_handle_fs_error._entry_ptr, !852, !"_entry_ptr", i1 false, i1 false}
!857 = !{ptr @.str.67, !858, !"<string literal>", i1 false, i1 false}
!858 = !{!"../fs/btrfs/super.c", i32 155, i32 3}
!859 = !{ptr @__btrfs_handle_fs_error._entry.66, !858, !"_entry", i1 false, i1 false}
!860 = !{ptr @__btrfs_handle_fs_error._entry_ptr.68, !858, !"_entry_ptr", i1 false, i1 false}
!861 = !{ptr @.str.69, !862, !"<string literal>", i1 false, i1 false}
!862 = !{!"../fs/btrfs/super.c", i32 177, i32 2}
!863 = !{ptr @__func__.btrfs_printk, !864, !"<string literal>", i1 false, i1 false}
!864 = !{!"../fs/btrfs/super.c", i32 242, i32 6}
!865 = !{ptr @.str.70, !866, !"<string literal>", i1 false, i1 false}
!866 = !{!"../fs/btrfs/super.c", i32 244, i32 4}
!867 = !{ptr @btrfs_printk._entry, !866, !"_entry", i1 false, i1 false}
!868 = !{ptr @btrfs_printk._entry_ptr, !866, !"_entry_ptr", i1 false, i1 false}
!869 = !{ptr @.str.72, !870, !"<string literal>", i1 false, i1 false}
!870 = !{!"../fs/btrfs/super.c", i32 247, i32 4}
!871 = !{ptr @btrfs_printk._entry.71, !870, !"_entry", i1 false, i1 false}
!872 = !{ptr @btrfs_printk._entry_ptr.73, !870, !"_entry_ptr", i1 false, i1 false}
!873 = !{ptr @.str.74, !874, !"<string literal>", i1 false, i1 false}
!874 = !{!"../fs/btrfs/super.c", i32 258, i32 3}
!875 = !{ptr @.str.75, !876, !"<string literal>", i1 false, i1 false}
!876 = !{!"../fs/btrfs/super.c", i32 259, i32 3}
!877 = !{ptr @.str.76, !878, !"<string literal>", i1 false, i1 false}
!878 = !{!"../fs/btrfs/super.c", i32 262, i32 3}
!879 = !{ptr @.str.77, !880, !"<string literal>", i1 false, i1 false}
!880 = !{!"../fs/btrfs/super.c", i32 270, i32 3}
!881 = !{ptr @.str.78, !882, !"<string literal>", i1 false, i1 false}
!882 = !{!"../fs/btrfs/super.c", i32 271, i32 3}
!883 = !{ptr @.str.79, !884, !"<string literal>", i1 false, i1 false}
!884 = !{!"../fs/btrfs/super.c", i32 274, i32 3}
!885 = !{ptr @.str.80, !886, !"<string literal>", i1 false, i1 false}
!886 = !{!"../fs/btrfs/super.c", i32 315, i32 15}
!887 = !{ptr @.str.81, !888, !"<string literal>", i1 false, i1 false}
!888 = !{!"../fs/btrfs/super.c", i32 328, i32 9}
!889 = !{ptr @.str.82, !890, !"<string literal>", i1 false, i1 false}
!890 = !{!"../fs/btrfs/super.c", i32 331, i32 2}
!891 = !{ptr @.str.83, !892, !"<string literal>", i1 false, i1 false}
!892 = !{!"../fs/btrfs/super.c", i32 581, i32 4}
!893 = !{ptr @.str.84, !894, !"<string literal>", i1 false, i1 false}
!894 = !{!"../fs/btrfs/super.c", i32 596, i32 31}
!895 = !{ptr @.str.85, !896, !"<string literal>", i1 false, i1 false}
!896 = !{!"../fs/btrfs/super.c", i32 604, i32 4}
!897 = !{ptr @.str.86, !898, !"<string literal>", i1 false, i1 false}
!898 = !{!"../fs/btrfs/super.c", i32 617, i32 4}
!899 = !{ptr @.str.87, !900, !"<string literal>", i1 false, i1 false}
!900 = !{!"../fs/btrfs/super.c", i32 623, i32 6}
!901 = !{ptr @.str.88, !902, !"<string literal>", i1 false, i1 false}
!902 = !{!"../fs/btrfs/super.c", i32 626, i32 6}
!903 = !{ptr @.str.89, !904, !"<string literal>", i1 false, i1 false}
!904 = !{!"../fs/btrfs/super.c", i32 635, i32 6}
!905 = !{ptr @.str.90, !906, !"<string literal>", i1 false, i1 false}
!906 = !{!"../fs/btrfs/super.c", i32 638, i32 6}
!907 = !{ptr @.str.91, !908, !"<string literal>", i1 false, i1 false}
!908 = !{!"../fs/btrfs/super.c", i32 647, i32 4}
!909 = !{ptr @.str.92, !910, !"<string literal>", i1 false, i1 false}
!910 = !{!"../fs/btrfs/super.c", i32 664, i32 30}
!911 = !{ptr @.str.93, !912, !"<string literal>", i1 false, i1 false}
!912 = !{!"../fs/btrfs/super.c", i32 684, i32 37}
!913 = !{ptr @.str.94, !914, !"<string literal>", i1 false, i1 false}
!914 = !{!"../fs/btrfs/super.c", i32 691, i32 5}
!915 = !{ptr @.str.95, !916, !"<string literal>", i1 false, i1 false}
!916 = !{!"../fs/btrfs/super.c", i32 693, i32 37}
!917 = !{ptr @.str.96, !918, !"<string literal>", i1 false, i1 false}
!918 = !{!"../fs/btrfs/super.c", i32 703, i32 5}
!919 = !{ptr @.str.97, !920, !"<string literal>", i1 false, i1 false}
!920 = !{!"../fs/btrfs/super.c", i32 705, i32 37}
!921 = !{ptr @.str.98, !922, !"<string literal>", i1 false, i1 false}
!922 = !{!"../fs/btrfs/super.c", i32 730, i32 5}
!923 = !{ptr @.str.99, !924, !"<string literal>", i1 false, i1 false}
!924 = !{!"../fs/btrfs/super.c", i32 734, i32 5}
!925 = !{ptr @.str.100, !924, !"<string literal>", i1 false, i1 false}
!926 = !{ptr @.str.101, !924, !"<string literal>", i1 false, i1 false}
!927 = !{ptr @.str.102, !928, !"<string literal>", i1 false, i1 false}
!928 = !{!"../fs/btrfs/super.c", i32 741, i32 4}
!929 = !{ptr @.str.103, !930, !"<string literal>", i1 false, i1 false}
!930 = !{!"../fs/btrfs/super.c", i32 748, i32 4}
!931 = !{ptr @.str.104, !932, !"<string literal>", i1 false, i1 false}
!932 = !{!"../fs/btrfs/super.c", i32 754, i32 4}
!933 = !{ptr @.str.105, !934, !"<string literal>", i1 false, i1 false}
!934 = !{!"../fs/btrfs/super.c", i32 758, i32 4}
!935 = !{ptr @.str.106, !936, !"<string literal>", i1 false, i1 false}
!936 = !{!"../fs/btrfs/super.c", i32 762, i32 4}
!937 = !{ptr @.str.107, !938, !"<string literal>", i1 false, i1 false}
!938 = !{!"../fs/btrfs/super.c", i32 766, i32 4}
!939 = !{ptr @.str.108, !940, !"<string literal>", i1 false, i1 false}
!940 = !{!"../fs/btrfs/super.c", i32 790, i32 5}
!941 = !{ptr @.str.109, !942, !"<string literal>", i1 false, i1 false}
!942 = !{!"../fs/btrfs/super.c", i32 810, i32 4}
!943 = !{ptr @.str.110, !944, !"<string literal>", i1 false, i1 false}
!944 = !{!"../fs/btrfs/super.c", i32 814, i32 4}
!945 = !{ptr @.str.111, !946, !"<string literal>", i1 false, i1 false}
!946 = !{!"../fs/btrfs/super.c", i32 819, i32 4}
!947 = !{ptr @.str.112, !948, !"<string literal>", i1 false, i1 false}
!948 = !{!"../fs/btrfs/super.c", i32 821, i32 4}
!949 = !{ptr @.str.113, !950, !"<string literal>", i1 false, i1 false}
!950 = !{!"../fs/btrfs/super.c", i32 825, i32 4}
!951 = !{ptr @.str.114, !952, !"<string literal>", i1 false, i1 false}
!952 = !{!"../fs/btrfs/super.c", i32 829, i32 4}
!953 = !{ptr @.str.115, !954, !"<string literal>", i1 false, i1 false}
!954 = !{!"../fs/btrfs/super.c", i32 837, i32 4}
!955 = !{ptr @.str.116, !956, !"<string literal>", i1 false, i1 false}
!956 = !{!"../fs/btrfs/super.c", i32 843, i32 29}
!957 = !{ptr @.str.117, !958, !"<string literal>", i1 false, i1 false}
!958 = !{!"../fs/btrfs/super.c", i32 845, i32 5}
!959 = !{ptr @.str.118, !960, !"<string literal>", i1 false, i1 false}
!960 = !{!"../fs/btrfs/super.c", i32 847, i32 36}
!961 = !{ptr @.str.119, !962, !"<string literal>", i1 false, i1 false}
!962 = !{!"../fs/btrfs/super.c", i32 849, i32 5}
!963 = !{ptr @.str.120, !964, !"<string literal>", i1 false, i1 false}
!964 = !{!"../fs/btrfs/super.c", i32 857, i32 4}
!965 = !{ptr @.str.121, !966, !"<string literal>", i1 false, i1 false}
!966 = !{!"../fs/btrfs/super.c", i32 859, i32 4}
!967 = !{ptr @.str.122, !968, !"<string literal>", i1 false, i1 false}
!968 = !{!"../fs/btrfs/super.c", i32 865, i32 29}
!969 = !{ptr @.str.123, !970, !"<string literal>", i1 false, i1 false}
!970 = !{!"../fs/btrfs/super.c", i32 868, i32 5}
!971 = !{ptr @.str.124, !972, !"<string literal>", i1 false, i1 false}
!972 = !{!"../fs/btrfs/super.c", i32 870, i32 36}
!973 = !{ptr @.str.125, !974, !"<string literal>", i1 false, i1 false}
!974 = !{!"../fs/btrfs/super.c", i32 873, i32 5}
!975 = !{ptr @.str.126, !976, !"<string literal>", i1 false, i1 false}
!976 = !{!"../fs/btrfs/super.c", i32 885, i32 5}
!977 = !{ptr @.str.127, !978, !"<string literal>", i1 false, i1 false}
!978 = !{!"../fs/btrfs/super.c", i32 889, i32 5}
!979 = !{ptr @.str.128, !980, !"<string literal>", i1 false, i1 false}
!980 = !{!"../fs/btrfs/super.c", i32 895, i32 4}
!981 = !{ptr @.str.129, !982, !"<string literal>", i1 false, i1 false}
!982 = !{!"../fs/btrfs/super.c", i32 899, i32 4}
!983 = !{ptr @.str.130, !984, !"<string literal>", i1 false, i1 false}
!984 = !{!"../fs/btrfs/super.c", i32 912, i32 4}
!985 = !{ptr @.str.131, !986, !"<string literal>", i1 false, i1 false}
!986 = !{!"../fs/btrfs/super.c", i32 916, i32 4}
!987 = !{ptr @.str.132, !988, !"<string literal>", i1 false, i1 false}
!988 = !{!"../fs/btrfs/super.c", i32 921, i32 4}
!989 = !{ptr @.str.133, !988, !"<string literal>", i1 false, i1 false}
!990 = !{ptr @.str.134, !988, !"<string literal>", i1 false, i1 false}
!991 = !{ptr @.str.135, !992, !"<string literal>", i1 false, i1 false}
!992 = !{!"../fs/btrfs/super.c", i32 925, i32 4}
!993 = !{ptr @.str.136, !994, !"<string literal>", i1 false, i1 false}
!994 = !{!"../fs/btrfs/super.c", i32 934, i32 4}
!995 = !{ptr @.str.137, !996, !"<string literal>", i1 false, i1 false}
!996 = !{!"../fs/btrfs/super.c", i32 940, i32 4}
!997 = !{ptr @.str.138, !998, !"<string literal>", i1 false, i1 false}
!998 = !{!"../fs/btrfs/super.c", i32 948, i32 4}
!999 = !{ptr @.str.139, !1000, !"<string literal>", i1 false, i1 false}
!1000 = !{!"../fs/btrfs/super.c", i32 961, i32 29}
!1001 = !{ptr @.str.140, !1002, !"<string literal>", i1 false, i1 false}
!1002 = !{!"../fs/btrfs/super.c", i32 964, i32 34}
!1003 = !{ptr @.str.141, !1004, !"<string literal>", i1 false, i1 false}
!1004 = !{!"../fs/btrfs/super.c", i32 978, i32 5}
!1005 = !{ptr @.str.142, !1006, !"<string literal>", i1 false, i1 false}
!1006 = !{!"../fs/btrfs/super.c", i32 983, i32 5}
!1007 = !{ptr @.str.143, !1008, !"<string literal>", i1 false, i1 false}
!1008 = !{!"../fs/btrfs/super.c", i32 995, i32 4}
!1009 = !{ptr @.str.144, !1010, !"<string literal>", i1 false, i1 false}
!1010 = !{!"../fs/btrfs/super.c", i32 1000, i32 4}
!1011 = !{ptr @.str.145, !1012, !"<string literal>", i1 false, i1 false}
!1012 = !{!"../fs/btrfs/super.c", i32 1005, i32 4}
!1013 = !{ptr @.str.146, !1014, !"<string literal>", i1 false, i1 false}
!1014 = !{!"../fs/btrfs/super.c", i32 1011, i32 4}
!1015 = !{ptr @.str.147, !1016, !"<string literal>", i1 false, i1 false}
!1016 = !{!"../fs/btrfs/super.c", i32 1016, i32 4}
!1017 = !{ptr @.str.148, !1018, !"<string literal>", i1 false, i1 false}
!1018 = !{!"../fs/btrfs/super.c", i32 1028, i32 53}
!1019 = !{ptr @.str.149, !1020, !"<string literal>", i1 false, i1 false}
!1020 = !{!"../fs/btrfs/super.c", i32 1029, i32 56}
!1021 = !{ptr @.str.150, !1022, !"<string literal>", i1 false, i1 false}
!1022 = !{!"../fs/btrfs/super.c", i32 1030, i32 57}
!1023 = !{ptr @.str.151, !1024, !"<string literal>", i1 false, i1 false}
!1024 = !{!"../fs/btrfs/super.c", i32 1036, i32 3}
!1025 = !{ptr @.str.152, !1026, !"<string literal>", i1 false, i1 false}
!1026 = !{!"../fs/btrfs/super.c", i32 1043, i32 3}
!1027 = !{ptr @.str.153, !1028, !"<string literal>", i1 false, i1 false}
!1028 = !{!"../fs/btrfs/super.c", i32 1045, i32 3}
!1029 = !{ptr @__UNIQUE_ID_alias1199, !1030, !"__UNIQUE_ID_alias1199", i1 false, i1 false}
!1030 = !{!"../fs/btrfs/super.c", i32 2365, i32 1}
!1031 = !{ptr @__UNIQUE_ID_alias1202, !1032, !"__UNIQUE_ID_alias1202", i1 false, i1 false}
!1032 = !{!"../fs/btrfs/super.c", i32 2506, i32 1}
!1033 = !{ptr @__UNIQUE_ID_alias1203, !1034, !"__UNIQUE_ID_alias1203", i1 false, i1 false}
!1034 = !{!"../fs/btrfs/super.c", i32 2507, i32 1}
!1035 = !{ptr @__initcall__kmod_btrfs__1204_2664_init_btrfs_fs7, !1036, !"__initcall__kmod_btrfs__1204_2664_init_btrfs_fs7", i1 false, i1 false}
!1036 = !{!"../fs/btrfs/super.c", i32 2664, i32 1}
!1037 = !{ptr @__exitcall_exit_btrfs_fs, !1038, !"__exitcall_exit_btrfs_fs", i1 false, i1 false}
!1038 = !{!"../fs/btrfs/super.c", i32 2665, i32 1}
!1039 = !{ptr @__UNIQUE_ID_file1205, !1040, !"__UNIQUE_ID_file1205", i1 false, i1 false}
!1040 = !{!"../fs/btrfs/super.c", i32 2667, i32 1}
!1041 = !{ptr @__UNIQUE_ID_license1206, !1040, !"__UNIQUE_ID_license1206", i1 false, i1 false}
!1042 = !{ptr @__UNIQUE_ID_softdep1207, !1043, !"__UNIQUE_ID_softdep1207", i1 false, i1 false}
!1043 = !{!"../fs/btrfs/super.c", i32 2668, i32 1}
!1044 = !{ptr @__UNIQUE_ID_softdep1208, !1045, !"__UNIQUE_ID_softdep1208", i1 false, i1 false}
!1045 = !{!"../fs/btrfs/super.c", i32 2669, i32 1}
!1046 = !{ptr @__UNIQUE_ID_softdep1209, !1047, !"__UNIQUE_ID_softdep1209", i1 false, i1 false}
!1047 = !{!"../fs/btrfs/super.c", i32 2670, i32 1}
!1048 = !{ptr @__UNIQUE_ID_softdep1210, !1049, !"__UNIQUE_ID_softdep1210", i1 false, i1 false}
!1049 = !{!"../fs/btrfs/super.c", i32 2671, i32 1}
!1050 = !{ptr @__tpstrtab_btrfs_transaction_commit, !1, !"__tpstrtab_btrfs_transaction_commit", i1 false, i1 false}
!1051 = !{ptr @__tpstrtab_btrfs_inode_new, !5, !"__tpstrtab_btrfs_inode_new", i1 false, i1 false}
!1052 = !{ptr @__tpstrtab_btrfs_inode_request, !9, !"__tpstrtab_btrfs_inode_request", i1 false, i1 false}
!1053 = !{ptr @__tpstrtab_btrfs_inode_evict, !13, !"__tpstrtab_btrfs_inode_evict", i1 false, i1 false}
!1054 = !{ptr @__tpstrtab_btrfs_get_extent, !17, !"__tpstrtab_btrfs_get_extent", i1 false, i1 false}
!1055 = !{ptr @__tpstrtab_btrfs_handle_em_exist, !21, !"__tpstrtab_btrfs_handle_em_exist", i1 false, i1 false}
!1056 = !{ptr @__tpstrtab_btrfs_get_extent_show_fi_regular, !25, !"__tpstrtab_btrfs_get_extent_show_fi_regular", i1 false, i1 false}
!1057 = !{ptr @__tpstrtab_btrfs_truncate_show_fi_regular, !29, !"__tpstrtab_btrfs_truncate_show_fi_regular", i1 false, i1 false}
!1058 = !{ptr @__tpstrtab_btrfs_get_extent_show_fi_inline, !33, !"__tpstrtab_btrfs_get_extent_show_fi_inline", i1 false, i1 false}
!1059 = !{ptr @__tpstrtab_btrfs_truncate_show_fi_inline, !37, !"__tpstrtab_btrfs_truncate_show_fi_inline", i1 false, i1 false}
!1060 = !{ptr @__tpstrtab_btrfs_ordered_extent_add, !41, !"__tpstrtab_btrfs_ordered_extent_add", i1 false, i1 false}
!1061 = !{ptr @__tpstrtab_btrfs_ordered_extent_remove, !45, !"__tpstrtab_btrfs_ordered_extent_remove", i1 false, i1 false}
!1062 = !{ptr @__tpstrtab_btrfs_ordered_extent_start, !49, !"__tpstrtab_btrfs_ordered_extent_start", i1 false, i1 false}
!1063 = !{ptr @__tpstrtab_btrfs_ordered_extent_put, !53, !"__tpstrtab_btrfs_ordered_extent_put", i1 false, i1 false}
!1064 = !{ptr @__tpstrtab___extent_writepage, !57, !"__tpstrtab___extent_writepage", i1 false, i1 false}
!1065 = !{ptr @__tpstrtab_btrfs_writepage_end_io_hook, !61, !"__tpstrtab_btrfs_writepage_end_io_hook", i1 false, i1 false}
!1066 = !{ptr @__tpstrtab_btrfs_sync_file, !65, !"__tpstrtab_btrfs_sync_file", i1 false, i1 false}
!1067 = !{ptr @__tpstrtab_btrfs_sync_fs, !69, !"__tpstrtab_btrfs_sync_fs", i1 false, i1 false}
!1068 = !{ptr @__tpstrtab_btrfs_add_block_group, !73, !"__tpstrtab_btrfs_add_block_group", i1 false, i1 false}
!1069 = !{ptr @__tpstrtab_add_delayed_tree_ref, !77, !"__tpstrtab_add_delayed_tree_ref", i1 false, i1 false}
!1070 = !{ptr @__tpstrtab_run_delayed_tree_ref, !81, !"__tpstrtab_run_delayed_tree_ref", i1 false, i1 false}
!1071 = !{ptr @__tpstrtab_add_delayed_data_ref, !85, !"__tpstrtab_add_delayed_data_ref", i1 false, i1 false}
!1072 = !{ptr @__tpstrtab_run_delayed_data_ref, !89, !"__tpstrtab_run_delayed_data_ref", i1 false, i1 false}
!1073 = !{ptr @__tpstrtab_add_delayed_ref_head, !93, !"__tpstrtab_add_delayed_ref_head", i1 false, i1 false}
!1074 = !{ptr @__tpstrtab_run_delayed_ref_head, !97, !"__tpstrtab_run_delayed_ref_head", i1 false, i1 false}
!1075 = !{ptr @__tpstrtab_btrfs_chunk_alloc, !101, !"__tpstrtab_btrfs_chunk_alloc", i1 false, i1 false}
!1076 = !{ptr @__tpstrtab_btrfs_chunk_free, !105, !"__tpstrtab_btrfs_chunk_free", i1 false, i1 false}
!1077 = !{ptr @__tpstrtab_btrfs_cow_block, !109, !"__tpstrtab_btrfs_cow_block", i1 false, i1 false}
!1078 = !{ptr @__tpstrtab_btrfs_space_reservation, !113, !"__tpstrtab_btrfs_space_reservation", i1 false, i1 false}
!1079 = !{ptr @__tpstrtab_btrfs_trigger_flush, !117, !"__tpstrtab_btrfs_trigger_flush", i1 false, i1 false}
!1080 = !{ptr @__tpstrtab_btrfs_flush_space, !121, !"__tpstrtab_btrfs_flush_space", i1 false, i1 false}
!1081 = !{ptr @__tpstrtab_btrfs_reserved_extent_alloc, !125, !"__tpstrtab_btrfs_reserved_extent_alloc", i1 false, i1 false}
!1082 = !{ptr @__tpstrtab_btrfs_reserved_extent_free, !129, !"__tpstrtab_btrfs_reserved_extent_free", i1 false, i1 false}
!1083 = !{ptr @__tpstrtab_find_free_extent, !133, !"__tpstrtab_find_free_extent", i1 false, i1 false}
!1084 = !{ptr @__tpstrtab_btrfs_reserve_extent, !137, !"__tpstrtab_btrfs_reserve_extent", i1 false, i1 false}
!1085 = !{ptr @__tpstrtab_btrfs_reserve_extent_cluster, !141, !"__tpstrtab_btrfs_reserve_extent_cluster", i1 false, i1 false}
!1086 = !{ptr @__tpstrtab_btrfs_find_cluster, !145, !"__tpstrtab_btrfs_find_cluster", i1 false, i1 false}
!1087 = !{ptr @__tpstrtab_btrfs_failed_cluster_setup, !149, !"__tpstrtab_btrfs_failed_cluster_setup", i1 false, i1 false}
!1088 = !{ptr @__tpstrtab_btrfs_setup_cluster, !153, !"__tpstrtab_btrfs_setup_cluster", i1 false, i1 false}
!1089 = !{ptr @__tpstrtab_alloc_extent_state, !157, !"__tpstrtab_alloc_extent_state", i1 false, i1 false}
!1090 = !{ptr @__tpstrtab_free_extent_state, !161, !"__tpstrtab_free_extent_state", i1 false, i1 false}
!1091 = !{ptr @__tpstrtab_btrfs_work_queued, !165, !"__tpstrtab_btrfs_work_queued", i1 false, i1 false}
!1092 = !{ptr @__tpstrtab_btrfs_work_sched, !169, !"__tpstrtab_btrfs_work_sched", i1 false, i1 false}
!1093 = !{ptr @__tpstrtab_btrfs_all_work_done, !173, !"__tpstrtab_btrfs_all_work_done", i1 false, i1 false}
!1094 = !{ptr @__tpstrtab_btrfs_ordered_sched, !177, !"__tpstrtab_btrfs_ordered_sched", i1 false, i1 false}
!1095 = !{ptr @__tpstrtab_btrfs_workqueue_alloc, !181, !"__tpstrtab_btrfs_workqueue_alloc", i1 false, i1 false}
!1096 = !{ptr @__tpstrtab_btrfs_workqueue_destroy, !185, !"__tpstrtab_btrfs_workqueue_destroy", i1 false, i1 false}
!1097 = !{ptr @__tpstrtab_btrfs_qgroup_reserve_data, !189, !"__tpstrtab_btrfs_qgroup_reserve_data", i1 false, i1 false}
!1098 = !{ptr @__tpstrtab_btrfs_qgroup_release_data, !193, !"__tpstrtab_btrfs_qgroup_release_data", i1 false, i1 false}
!1099 = !{ptr @__tpstrtab_btrfs_qgroup_account_extents, !197, !"__tpstrtab_btrfs_qgroup_account_extents", i1 false, i1 false}
!1100 = !{ptr @__tpstrtab_btrfs_qgroup_trace_extent, !201, !"__tpstrtab_btrfs_qgroup_trace_extent", i1 false, i1 false}
!1101 = !{ptr @__tpstrtab_qgroup_num_dirty_extents, !205, !"__tpstrtab_qgroup_num_dirty_extents", i1 false, i1 false}
!1102 = !{ptr @__tpstrtab_btrfs_qgroup_account_extent, !209, !"__tpstrtab_btrfs_qgroup_account_extent", i1 false, i1 false}
!1103 = !{ptr @__tpstrtab_qgroup_update_counters, !213, !"__tpstrtab_qgroup_update_counters", i1 false, i1 false}
!1104 = !{ptr @__tpstrtab_qgroup_update_reserve, !217, !"__tpstrtab_qgroup_update_reserve", i1 false, i1 false}
!1105 = !{ptr @__tpstrtab_qgroup_meta_reserve, !221, !"__tpstrtab_qgroup_meta_reserve", i1 false, i1 false}
!1106 = !{ptr @__tpstrtab_qgroup_meta_convert, !225, !"__tpstrtab_qgroup_meta_convert", i1 false, i1 false}
!1107 = !{ptr @__tpstrtab_qgroup_meta_free_all_pertrans, !229, !"__tpstrtab_qgroup_meta_free_all_pertrans", i1 false, i1 false}
!1108 = !{ptr @__tpstrtab_btrfs_prelim_ref_merge, !233, !"__tpstrtab_btrfs_prelim_ref_merge", i1 false, i1 false}
!1109 = !{ptr @__tpstrtab_btrfs_prelim_ref_insert, !237, !"__tpstrtab_btrfs_prelim_ref_insert", i1 false, i1 false}
!1110 = !{ptr @__tpstrtab_btrfs_inode_mod_outstanding_extents, !241, !"__tpstrtab_btrfs_inode_mod_outstanding_extents", i1 false, i1 false}
!1111 = !{ptr @__tpstrtab_btrfs_remove_block_group, !245, !"__tpstrtab_btrfs_remove_block_group", i1 false, i1 false}
!1112 = !{ptr @__tpstrtab_btrfs_add_unused_block_group, !249, !"__tpstrtab_btrfs_add_unused_block_group", i1 false, i1 false}
!1113 = !{ptr @__tpstrtab_btrfs_add_reclaim_block_group, !253, !"__tpstrtab_btrfs_add_reclaim_block_group", i1 false, i1 false}
!1114 = !{ptr @__tpstrtab_btrfs_reclaim_block_group, !257, !"__tpstrtab_btrfs_reclaim_block_group", i1 false, i1 false}
!1115 = !{ptr @__tpstrtab_btrfs_skip_unused_block_group, !261, !"__tpstrtab_btrfs_skip_unused_block_group", i1 false, i1 false}
!1116 = !{ptr @__tpstrtab_btrfs_set_extent_bit, !265, !"__tpstrtab_btrfs_set_extent_bit", i1 false, i1 false}
!1117 = !{ptr @__tpstrtab_btrfs_clear_extent_bit, !269, !"__tpstrtab_btrfs_clear_extent_bit", i1 false, i1 false}
!1118 = !{ptr @__tpstrtab_btrfs_convert_extent_bit, !273, !"__tpstrtab_btrfs_convert_extent_bit", i1 false, i1 false}
!1119 = !{ptr @__tpstrtab_btrfs_done_preemptive_reclaim, !277, !"__tpstrtab_btrfs_done_preemptive_reclaim", i1 false, i1 false}
!1120 = !{ptr @__tpstrtab_btrfs_fail_all_tickets, !281, !"__tpstrtab_btrfs_fail_all_tickets", i1 false, i1 false}
!1121 = !{ptr @__tpstrtab_btrfs_reserve_ticket, !285, !"__tpstrtab_btrfs_reserve_ticket", i1 false, i1 false}
!1122 = !{ptr @__tpstrtab_btrfs_tree_read_lock, !289, !"__tpstrtab_btrfs_tree_read_lock", i1 false, i1 false}
!1123 = !{ptr @__tpstrtab_btrfs_tree_lock, !293, !"__tpstrtab_btrfs_tree_lock", i1 false, i1 false}
!1124 = !{ptr @__tpstrtab_btrfs_tree_unlock, !297, !"__tpstrtab_btrfs_tree_unlock", i1 false, i1 false}
!1125 = !{ptr @__tpstrtab_btrfs_tree_read_unlock, !301, !"__tpstrtab_btrfs_tree_read_unlock", i1 false, i1 false}
!1126 = !{ptr @__tpstrtab_btrfs_tree_read_unlock_blocking, !305, !"__tpstrtab_btrfs_tree_read_unlock_blocking", i1 false, i1 false}
!1127 = !{ptr @__tpstrtab_btrfs_set_lock_blocking_read, !309, !"__tpstrtab_btrfs_set_lock_blocking_read", i1 false, i1 false}
!1128 = !{ptr @__tpstrtab_btrfs_set_lock_blocking_write, !313, !"__tpstrtab_btrfs_set_lock_blocking_write", i1 false, i1 false}
!1129 = !{ptr @__tpstrtab_btrfs_try_tree_read_lock, !317, !"__tpstrtab_btrfs_try_tree_read_lock", i1 false, i1 false}
!1130 = !{ptr @__tpstrtab_btrfs_try_tree_write_lock, !321, !"__tpstrtab_btrfs_try_tree_write_lock", i1 false, i1 false}
!1131 = !{ptr @__tpstrtab_btrfs_tree_read_lock_atomic, !325, !"__tpstrtab_btrfs_tree_read_lock_atomic", i1 false, i1 false}
!1132 = !{ptr @__tpstrtab_update_bytes_may_use, !329, !"__tpstrtab_update_bytes_may_use", i1 false, i1 false}
!1133 = !{ptr @__tpstrtab_update_bytes_pinned, !333, !"__tpstrtab_update_bytes_pinned", i1 false, i1 false}
!1134 = !{ptr @str__btrfs__trace_system_name, !1135, !"str__btrfs__trace_system_name", i1 false, i1 false}
!1135 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!1136 = !{ptr @.str.154, !1, !"<string literal>", i1 false, i1 false}
!1137 = !{ptr @.str.155, !1, !"<string literal>", i1 false, i1 false}
!1138 = !{ptr @.str.156, !1, !"<string literal>", i1 false, i1 false}
!1139 = !{ptr @.str.157, !1, !"<string literal>", i1 false, i1 false}
!1140 = !{ptr @.str.158, !1, !"<string literal>", i1 false, i1 false}
!1141 = !{ptr @trace_event_fields_btrfs_transaction_commit, !1, !"trace_event_fields_btrfs_transaction_commit", i1 false, i1 false}
!1142 = !{ptr @trace_event_type_funcs_btrfs_transaction_commit, !1, !"trace_event_type_funcs_btrfs_transaction_commit", i1 false, i1 false}
!1143 = !{ptr @.str.159, !1, !"<string literal>", i1 false, i1 false}
!1144 = !{ptr @.str.160, !1, !"<string literal>", i1 false, i1 false}
!1145 = !{ptr @.str.161, !1, !"<string literal>", i1 false, i1 false}
!1146 = !{ptr @.str.162, !1, !"<string literal>", i1 false, i1 false}
!1147 = !{ptr @.str.163, !1, !"<string literal>", i1 false, i1 false}
!1148 = !{ptr @.str.164, !1, !"<string literal>", i1 false, i1 false}
!1149 = !{ptr @.str.165, !1, !"<string literal>", i1 false, i1 false}
!1150 = !{ptr @.str.166, !1, !"<string literal>", i1 false, i1 false}
!1151 = !{ptr @.str.167, !1, !"<string literal>", i1 false, i1 false}
!1152 = !{ptr @.str.168, !1, !"<string literal>", i1 false, i1 false}
!1153 = !{ptr @.str.169, !1, !"<string literal>", i1 false, i1 false}
!1154 = !{ptr @.str.170, !1, !"<string literal>", i1 false, i1 false}
!1155 = !{ptr @.str.171, !1, !"<string literal>", i1 false, i1 false}
!1156 = !{ptr @.str.172, !1, !"<string literal>", i1 false, i1 false}
!1157 = !{ptr @trace_raw_output_btrfs_transaction_commit.symbols, !1, !"symbols", i1 false, i1 false}
!1158 = !{ptr @.str.173, !1, !"<string literal>", i1 false, i1 false}
!1159 = !{ptr @print_fmt_btrfs_transaction_commit, !1, !"print_fmt_btrfs_transaction_commit", i1 false, i1 false}
!1160 = !{ptr @.str.174, !508, !"<string literal>", i1 false, i1 false}
!1161 = !{ptr @.str.175, !508, !"<string literal>", i1 false, i1 false}
!1162 = !{ptr @.str.176, !508, !"<string literal>", i1 false, i1 false}
!1163 = !{ptr @.str.177, !508, !"<string literal>", i1 false, i1 false}
!1164 = !{ptr @.str.178, !508, !"<string literal>", i1 false, i1 false}
!1165 = !{ptr @trace_event_fields_btrfs__inode, !508, !"trace_event_fields_btrfs__inode", i1 false, i1 false}
!1166 = !{ptr @trace_event_type_funcs_btrfs__inode, !508, !"trace_event_type_funcs_btrfs__inode", i1 false, i1 false}
!1167 = !{ptr @.str.179, !508, !"<string literal>", i1 false, i1 false}
!1168 = !{ptr @trace_raw_output_btrfs__inode.symbols, !508, !"symbols", i1 false, i1 false}
!1169 = !{ptr @print_fmt_btrfs__inode, !508, !"print_fmt_btrfs__inode", i1 false, i1 false}
!1170 = !{ptr @.str.180, !17, !"<string literal>", i1 false, i1 false}
!1171 = !{ptr @.str.181, !17, !"<string literal>", i1 false, i1 false}
!1172 = !{ptr @.str.182, !17, !"<string literal>", i1 false, i1 false}
!1173 = !{ptr @.str.183, !17, !"<string literal>", i1 false, i1 false}
!1174 = !{ptr @.str.184, !17, !"<string literal>", i1 false, i1 false}
!1175 = !{ptr @.str.185, !17, !"<string literal>", i1 false, i1 false}
!1176 = !{ptr @.str.186, !17, !"<string literal>", i1 false, i1 false}
!1177 = !{ptr @.str.187, !17, !"<string literal>", i1 false, i1 false}
!1178 = !{ptr @.str.188, !17, !"<string literal>", i1 false, i1 false}
!1179 = !{ptr @.str.189, !17, !"<string literal>", i1 false, i1 false}
!1180 = !{ptr @.str.190, !17, !"<string literal>", i1 false, i1 false}
!1181 = !{ptr @trace_event_fields_btrfs_get_extent, !17, !"trace_event_fields_btrfs_get_extent", i1 false, i1 false}
!1182 = !{ptr @trace_event_type_funcs_btrfs_get_extent, !17, !"trace_event_type_funcs_btrfs_get_extent", i1 false, i1 false}
!1183 = !{ptr @.str.191, !17, !"<string literal>", i1 false, i1 false}
!1184 = !{ptr @trace_raw_output_btrfs_get_extent.symbols, !17, !"symbols", i1 false, i1 false}
!1185 = !{ptr @.str.193, !17, !"<string literal>", i1 false, i1 false}
!1186 = !{ptr @.str.194, !17, !"<string literal>", i1 false, i1 false}
!1187 = !{ptr @.str.195, !17, !"<string literal>", i1 false, i1 false}
!1188 = !{ptr @.str.196, !17, !"<string literal>", i1 false, i1 false}
!1189 = !{ptr @trace_raw_output_btrfs_get_extent.symbols.192, !17, !"symbols", i1 false, i1 false}
!1190 = !{ptr @.str.197, !17, !"<string literal>", i1 false, i1 false}
!1191 = !{ptr @.str.198, !17, !"<string literal>", i1 false, i1 false}
!1192 = !{ptr @.str.199, !17, !"<string literal>", i1 false, i1 false}
!1193 = !{ptr @.str.200, !17, !"<string literal>", i1 false, i1 false}
!1194 = !{ptr @.str.201, !17, !"<string literal>", i1 false, i1 false}
!1195 = !{ptr @.str.202, !17, !"<string literal>", i1 false, i1 false}
!1196 = !{ptr @trace_raw_output_btrfs_get_extent.__flags, !17, !"__flags", i1 false, i1 false}
!1197 = !{ptr @.str.203, !17, !"<string literal>", i1 false, i1 false}
!1198 = !{ptr @print_fmt_btrfs_get_extent, !17, !"print_fmt_btrfs_get_extent", i1 false, i1 false}
!1199 = !{ptr @.str.204, !21, !"<string literal>", i1 false, i1 false}
!1200 = !{ptr @.str.205, !21, !"<string literal>", i1 false, i1 false}
!1201 = !{ptr @.str.206, !21, !"<string literal>", i1 false, i1 false}
!1202 = !{ptr @.str.207, !21, !"<string literal>", i1 false, i1 false}
!1203 = !{ptr @trace_event_fields_btrfs_handle_em_exist, !21, !"trace_event_fields_btrfs_handle_em_exist", i1 false, i1 false}
!1204 = !{ptr @trace_event_type_funcs_btrfs_handle_em_exist, !21, !"trace_event_type_funcs_btrfs_handle_em_exist", i1 false, i1 false}
!1205 = !{ptr @.str.208, !21, !"<string literal>", i1 false, i1 false}
!1206 = !{ptr @print_fmt_btrfs_handle_em_exist, !21, !"print_fmt_btrfs_handle_em_exist", i1 false, i1 false}
!1207 = !{ptr @.str.209, !522, !"<string literal>", i1 false, i1 false}
!1208 = !{ptr @.str.210, !522, !"<string literal>", i1 false, i1 false}
!1209 = !{ptr @.str.211, !522, !"<string literal>", i1 false, i1 false}
!1210 = !{ptr @.str.212, !522, !"<string literal>", i1 false, i1 false}
!1211 = !{ptr @.str.213, !522, !"<string literal>", i1 false, i1 false}
!1212 = !{ptr @.str.214, !522, !"<string literal>", i1 false, i1 false}
!1213 = !{ptr @.str.215, !522, !"<string literal>", i1 false, i1 false}
!1214 = !{ptr @.str.216, !522, !"<string literal>", i1 false, i1 false}
!1215 = !{ptr @.str.217, !522, !"<string literal>", i1 false, i1 false}
!1216 = !{ptr @.str.218, !522, !"<string literal>", i1 false, i1 false}
!1217 = !{ptr @.str.219, !522, !"<string literal>", i1 false, i1 false}
!1218 = !{ptr @.str.220, !522, !"<string literal>", i1 false, i1 false}
!1219 = !{ptr @.str.221, !522, !"<string literal>", i1 false, i1 false}
!1220 = !{ptr @.str.222, !522, !"<string literal>", i1 false, i1 false}
!1221 = !{ptr @trace_event_fields_btrfs__file_extent_item_regular, !522, !"trace_event_fields_btrfs__file_extent_item_regular", i1 false, i1 false}
!1222 = !{ptr @trace_event_fields_btrfs__file_extent_item_inline, !524, !"trace_event_fields_btrfs__file_extent_item_inline", i1 false, i1 false}
!1223 = !{ptr @trace_event_type_funcs_btrfs__file_extent_item_regular, !522, !"trace_event_type_funcs_btrfs__file_extent_item_regular", i1 false, i1 false}
!1224 = !{ptr @.str.223, !522, !"<string literal>", i1 false, i1 false}
!1225 = !{ptr @trace_raw_output_btrfs__file_extent_item_regular.symbols, !522, !"symbols", i1 false, i1 false}
!1226 = !{ptr @.str.225, !522, !"<string literal>", i1 false, i1 false}
!1227 = !{ptr @trace_raw_output_btrfs__file_extent_item_regular.symbols.224, !522, !"symbols", i1 false, i1 false}
!1228 = !{ptr @print_fmt_btrfs__file_extent_item_regular, !522, !"print_fmt_btrfs__file_extent_item_regular", i1 false, i1 false}
!1229 = !{ptr @trace_event_type_funcs_btrfs__file_extent_item_inline, !524, !"trace_event_type_funcs_btrfs__file_extent_item_inline", i1 false, i1 false}
!1230 = !{ptr @.str.226, !524, !"<string literal>", i1 false, i1 false}
!1231 = !{ptr @trace_raw_output_btrfs__file_extent_item_inline.symbols, !524, !"symbols", i1 false, i1 false}
!1232 = !{ptr @trace_raw_output_btrfs__file_extent_item_inline.symbols.227, !524, !"symbols", i1 false, i1 false}
!1233 = !{ptr @print_fmt_btrfs__file_extent_item_inline, !524, !"print_fmt_btrfs__file_extent_item_inline", i1 false, i1 false}
!1234 = !{ptr @.str.228, !534, !"<string literal>", i1 false, i1 false}
!1235 = !{ptr @.str.229, !534, !"<string literal>", i1 false, i1 false}
!1236 = !{ptr @.str.230, !534, !"<string literal>", i1 false, i1 false}
!1237 = !{ptr @.str.231, !534, !"<string literal>", i1 false, i1 false}
!1238 = !{ptr @trace_event_fields_btrfs__ordered_extent, !534, !"trace_event_fields_btrfs__ordered_extent", i1 false, i1 false}
!1239 = !{ptr @trace_event_type_funcs_btrfs__ordered_extent, !534, !"trace_event_type_funcs_btrfs__ordered_extent", i1 false, i1 false}
!1240 = !{ptr @.str.232, !534, !"<string literal>", i1 false, i1 false}
!1241 = !{ptr @trace_raw_output_btrfs__ordered_extent.symbols, !534, !"symbols", i1 false, i1 false}
!1242 = !{ptr @.str.233, !534, !"<string literal>", i1 false, i1 false}
!1243 = !{ptr @.str.234, !534, !"<string literal>", i1 false, i1 false}
!1244 = !{ptr @.str.235, !534, !"<string literal>", i1 false, i1 false}
!1245 = !{ptr @.str.236, !534, !"<string literal>", i1 false, i1 false}
!1246 = !{ptr @.str.237, !534, !"<string literal>", i1 false, i1 false}
!1247 = !{ptr @.str.238, !534, !"<string literal>", i1 false, i1 false}
!1248 = !{ptr @.str.239, !534, !"<string literal>", i1 false, i1 false}
!1249 = !{ptr @trace_raw_output_btrfs__ordered_extent.__flags, !534, !"__flags", i1 false, i1 false}
!1250 = !{ptr @print_fmt_btrfs__ordered_extent, !534, !"print_fmt_btrfs__ordered_extent", i1 false, i1 false}
!1251 = !{ptr @.str.240, !544, !"<string literal>", i1 false, i1 false}
!1252 = !{ptr @.str.241, !544, !"<string literal>", i1 false, i1 false}
!1253 = !{ptr @.str.242, !544, !"<string literal>", i1 false, i1 false}
!1254 = !{ptr @.str.243, !544, !"<string literal>", i1 false, i1 false}
!1255 = !{ptr @.str.244, !544, !"<string literal>", i1 false, i1 false}
!1256 = !{ptr @.str.245, !544, !"<string literal>", i1 false, i1 false}
!1257 = !{ptr @.str.246, !544, !"<string literal>", i1 false, i1 false}
!1258 = !{ptr @.str.247, !544, !"<string literal>", i1 false, i1 false}
!1259 = !{ptr @.str.248, !544, !"<string literal>", i1 false, i1 false}
!1260 = !{ptr @.str.249, !544, !"<string literal>", i1 false, i1 false}
!1261 = !{ptr @.str.250, !544, !"<string literal>", i1 false, i1 false}
!1262 = !{ptr @trace_event_fields_btrfs__writepage, !544, !"trace_event_fields_btrfs__writepage", i1 false, i1 false}
!1263 = !{ptr @trace_event_type_funcs_btrfs__writepage, !544, !"trace_event_type_funcs_btrfs__writepage", i1 false, i1 false}
!1264 = !{ptr @.str.251, !544, !"<string literal>", i1 false, i1 false}
!1265 = !{ptr @trace_raw_output_btrfs__writepage.symbols, !544, !"symbols", i1 false, i1 false}
!1266 = !{ptr @print_fmt_btrfs__writepage, !544, !"print_fmt_btrfs__writepage", i1 false, i1 false}
!1267 = !{ptr @.str.252, !61, !"<string literal>", i1 false, i1 false}
!1268 = !{ptr @.str.253, !61, !"<string literal>", i1 false, i1 false}
!1269 = !{ptr @trace_event_fields_btrfs_writepage_end_io_hook, !61, !"trace_event_fields_btrfs_writepage_end_io_hook", i1 false, i1 false}
!1270 = !{ptr @trace_event_type_funcs_btrfs_writepage_end_io_hook, !61, !"trace_event_type_funcs_btrfs_writepage_end_io_hook", i1 false, i1 false}
!1271 = !{ptr @.str.254, !61, !"<string literal>", i1 false, i1 false}
!1272 = !{ptr @trace_raw_output_btrfs_writepage_end_io_hook.symbols, !61, !"symbols", i1 false, i1 false}
!1273 = !{ptr @print_fmt_btrfs_writepage_end_io_hook, !61, !"print_fmt_btrfs_writepage_end_io_hook", i1 false, i1 false}
!1274 = !{ptr @.str.255, !65, !"<string literal>", i1 false, i1 false}
!1275 = !{ptr @.str.256, !65, !"<string literal>", i1 false, i1 false}
!1276 = !{ptr @trace_event_fields_btrfs_sync_file, !65, !"trace_event_fields_btrfs_sync_file", i1 false, i1 false}
!1277 = !{ptr @trace_event_type_funcs_btrfs_sync_file, !65, !"trace_event_type_funcs_btrfs_sync_file", i1 false, i1 false}
!1278 = !{ptr @.str.257, !65, !"<string literal>", i1 false, i1 false}
!1279 = !{ptr @trace_raw_output_btrfs_sync_file.symbols, !65, !"symbols", i1 false, i1 false}
!1280 = !{ptr @print_fmt_btrfs_sync_file, !65, !"print_fmt_btrfs_sync_file", i1 false, i1 false}
!1281 = !{ptr @.str.258, !69, !"<string literal>", i1 false, i1 false}
!1282 = !{ptr @trace_event_fields_btrfs_sync_fs, !69, !"trace_event_fields_btrfs_sync_fs", i1 false, i1 false}
!1283 = !{ptr @trace_event_type_funcs_btrfs_sync_fs, !69, !"trace_event_type_funcs_btrfs_sync_fs", i1 false, i1 false}
!1284 = !{ptr @.str.259, !69, !"<string literal>", i1 false, i1 false}
!1285 = !{ptr @print_fmt_btrfs_sync_fs, !69, !"print_fmt_btrfs_sync_fs", i1 false, i1 false}
!1286 = !{ptr @.str.260, !73, !"<string literal>", i1 false, i1 false}
!1287 = !{ptr @.str.261, !73, !"<string literal>", i1 false, i1 false}
!1288 = !{ptr @.str.262, !73, !"<string literal>", i1 false, i1 false}
!1289 = !{ptr @.str.263, !73, !"<string literal>", i1 false, i1 false}
!1290 = !{ptr @.str.264, !73, !"<string literal>", i1 false, i1 false}
!1291 = !{ptr @trace_event_fields_btrfs_add_block_group, !73, !"trace_event_fields_btrfs_add_block_group", i1 false, i1 false}
!1292 = !{ptr @trace_event_type_funcs_btrfs_add_block_group, !73, !"trace_event_type_funcs_btrfs_add_block_group", i1 false, i1 false}
!1293 = !{ptr @.str.265, !73, !"<string literal>", i1 false, i1 false}
!1294 = !{ptr @.str.266, !73, !"<string literal>", i1 false, i1 false}
!1295 = !{ptr @.str.267, !73, !"<string literal>", i1 false, i1 false}
!1296 = !{ptr @.str.268, !73, !"<string literal>", i1 false, i1 false}
!1297 = !{ptr @.str.269, !73, !"<string literal>", i1 false, i1 false}
!1298 = !{ptr @.str.270, !73, !"<string literal>", i1 false, i1 false}
!1299 = !{ptr @.str.271, !73, !"<string literal>", i1 false, i1 false}
!1300 = !{ptr @.str.272, !73, !"<string literal>", i1 false, i1 false}
!1301 = !{ptr @.str.273, !73, !"<string literal>", i1 false, i1 false}
!1302 = !{ptr @.str.274, !73, !"<string literal>", i1 false, i1 false}
!1303 = !{ptr @trace_raw_output_btrfs_add_block_group.__flags, !73, !"__flags", i1 false, i1 false}
!1304 = !{ptr @print_fmt_btrfs_add_block_group, !73, !"print_fmt_btrfs_add_block_group", i1 false, i1 false}
!1305 = !{ptr @.str.275, !560, !"<string literal>", i1 false, i1 false}
!1306 = !{ptr @.str.276, !560, !"<string literal>", i1 false, i1 false}
!1307 = !{ptr @.str.277, !560, !"<string literal>", i1 false, i1 false}
!1308 = !{ptr @.str.278, !560, !"<string literal>", i1 false, i1 false}
!1309 = !{ptr @.str.279, !560, !"<string literal>", i1 false, i1 false}
!1310 = !{ptr @.str.280, !560, !"<string literal>", i1 false, i1 false}
!1311 = !{ptr @trace_event_fields_btrfs_delayed_tree_ref, !560, !"trace_event_fields_btrfs_delayed_tree_ref", i1 false, i1 false}
!1312 = !{ptr @trace_event_type_funcs_btrfs_delayed_tree_ref, !560, !"trace_event_type_funcs_btrfs_delayed_tree_ref", i1 false, i1 false}
!1313 = !{ptr @.str.281, !560, !"<string literal>", i1 false, i1 false}
!1314 = !{ptr @.str.282, !560, !"<string literal>", i1 false, i1 false}
!1315 = !{ptr @.str.283, !560, !"<string literal>", i1 false, i1 false}
!1316 = !{ptr @.str.284, !560, !"<string literal>", i1 false, i1 false}
!1317 = !{ptr @.str.285, !560, !"<string literal>", i1 false, i1 false}
!1318 = !{ptr @trace_raw_output_btrfs_delayed_tree_ref.symbols, !560, !"symbols", i1 false, i1 false}
!1319 = !{ptr @trace_raw_output_btrfs_delayed_tree_ref.symbols.286, !560, !"symbols", i1 false, i1 false}
!1320 = !{ptr @trace_raw_output_btrfs_delayed_tree_ref.symbols.287, !560, !"symbols", i1 false, i1 false}
!1321 = !{ptr @.str.289, !560, !"<string literal>", i1 false, i1 false}
!1322 = !{ptr @.str.290, !560, !"<string literal>", i1 false, i1 false}
!1323 = !{ptr @.str.291, !560, !"<string literal>", i1 false, i1 false}
!1324 = !{ptr @.str.292, !560, !"<string literal>", i1 false, i1 false}
!1325 = !{ptr @.str.293, !560, !"<string literal>", i1 false, i1 false}
!1326 = !{ptr @trace_raw_output_btrfs_delayed_tree_ref.symbols.288, !560, !"symbols", i1 false, i1 false}
!1327 = !{ptr @print_fmt_btrfs_delayed_tree_ref, !560, !"print_fmt_btrfs_delayed_tree_ref", i1 false, i1 false}
!1328 = !{ptr @.str.294, !566, !"<string literal>", i1 false, i1 false}
!1329 = !{ptr @trace_event_fields_btrfs_delayed_data_ref, !566, !"trace_event_fields_btrfs_delayed_data_ref", i1 false, i1 false}
!1330 = !{ptr @trace_event_type_funcs_btrfs_delayed_data_ref, !566, !"trace_event_type_funcs_btrfs_delayed_data_ref", i1 false, i1 false}
!1331 = !{ptr @.str.295, !566, !"<string literal>", i1 false, i1 false}
!1332 = !{ptr @trace_raw_output_btrfs_delayed_data_ref.symbols, !566, !"symbols", i1 false, i1 false}
!1333 = !{ptr @trace_raw_output_btrfs_delayed_data_ref.symbols.296, !566, !"symbols", i1 false, i1 false}
!1334 = !{ptr @trace_raw_output_btrfs_delayed_data_ref.symbols.297, !566, !"symbols", i1 false, i1 false}
!1335 = !{ptr @trace_raw_output_btrfs_delayed_data_ref.symbols.298, !566, !"symbols", i1 false, i1 false}
!1336 = !{ptr @print_fmt_btrfs_delayed_data_ref, !566, !"print_fmt_btrfs_delayed_data_ref", i1 false, i1 false}
!1337 = !{ptr @.str.299, !572, !"<string literal>", i1 false, i1 false}
!1338 = !{ptr @trace_event_fields_btrfs_delayed_ref_head, !572, !"trace_event_fields_btrfs_delayed_ref_head", i1 false, i1 false}
!1339 = !{ptr @trace_event_type_funcs_btrfs_delayed_ref_head, !572, !"trace_event_type_funcs_btrfs_delayed_ref_head", i1 false, i1 false}
!1340 = !{ptr @.str.300, !572, !"<string literal>", i1 false, i1 false}
!1341 = !{ptr @trace_raw_output_btrfs_delayed_ref_head.symbols, !572, !"symbols", i1 false, i1 false}
!1342 = !{ptr @print_fmt_btrfs_delayed_ref_head, !572, !"print_fmt_btrfs_delayed_ref_head", i1 false, i1 false}
!1343 = !{ptr @.str.301, !578, !"<string literal>", i1 false, i1 false}
!1344 = !{ptr @.str.302, !578, !"<string literal>", i1 false, i1 false}
!1345 = !{ptr @trace_event_fields_btrfs__chunk, !578, !"trace_event_fields_btrfs__chunk", i1 false, i1 false}
!1346 = !{ptr @trace_event_type_funcs_btrfs__chunk, !578, !"trace_event_type_funcs_btrfs__chunk", i1 false, i1 false}
!1347 = !{ptr @.str.303, !578, !"<string literal>", i1 false, i1 false}
!1348 = !{ptr @trace_raw_output_btrfs__chunk.symbols, !578, !"symbols", i1 false, i1 false}
!1349 = !{ptr @trace_raw_output_btrfs__chunk.__flags, !578, !"__flags", i1 false, i1 false}
!1350 = !{ptr @print_fmt_btrfs__chunk, !578, !"print_fmt_btrfs__chunk", i1 false, i1 false}
!1351 = !{ptr @.str.304, !109, !"<string literal>", i1 false, i1 false}
!1352 = !{ptr @.str.305, !109, !"<string literal>", i1 false, i1 false}
!1353 = !{ptr @.str.306, !109, !"<string literal>", i1 false, i1 false}
!1354 = !{ptr @.str.307, !109, !"<string literal>", i1 false, i1 false}
!1355 = !{ptr @trace_event_fields_btrfs_cow_block, !109, !"trace_event_fields_btrfs_cow_block", i1 false, i1 false}
!1356 = !{ptr @trace_event_type_funcs_btrfs_cow_block, !109, !"trace_event_type_funcs_btrfs_cow_block", i1 false, i1 false}
!1357 = !{ptr @.str.308, !109, !"<string literal>", i1 false, i1 false}
!1358 = !{ptr @trace_raw_output_btrfs_cow_block.symbols, !109, !"symbols", i1 false, i1 false}
!1359 = !{ptr @print_fmt_btrfs_cow_block, !109, !"print_fmt_btrfs_cow_block", i1 false, i1 false}
!1360 = !{ptr @.str.309, !113, !"<string literal>", i1 false, i1 false}
!1361 = !{ptr @.str.310, !113, !"<string literal>", i1 false, i1 false}
!1362 = !{ptr @.str.311, !113, !"<string literal>", i1 false, i1 false}
!1363 = !{ptr @.str.312, !113, !"<string literal>", i1 false, i1 false}
!1364 = !{ptr @.str.313, !113, !"<string literal>", i1 false, i1 false}
!1365 = !{ptr @trace_event_fields_btrfs_space_reservation, !113, !"trace_event_fields_btrfs_space_reservation", i1 false, i1 false}
!1366 = !{ptr @trace_event_type_funcs_btrfs_space_reservation, !113, !"trace_event_type_funcs_btrfs_space_reservation", i1 false, i1 false}
!1367 = !{ptr @.str.314, !113, !"<string literal>", i1 false, i1 false}
!1368 = !{ptr @.str.315, !113, !"<string literal>", i1 false, i1 false}
!1369 = !{ptr @print_fmt_btrfs_space_reservation, !113, !"print_fmt_btrfs_space_reservation", i1 false, i1 false}
!1370 = !{ptr @.str.316, !117, !"<string literal>", i1 false, i1 false}
!1371 = !{ptr @.str.317, !117, !"<string literal>", i1 false, i1 false}
!1372 = !{ptr @trace_event_fields_btrfs_trigger_flush, !117, !"trace_event_fields_btrfs_trigger_flush", i1 false, i1 false}
!1373 = !{ptr @trace_event_type_funcs_btrfs_trigger_flush, !117, !"trace_event_type_funcs_btrfs_trigger_flush", i1 false, i1 false}
!1374 = !{ptr @.str.318, !117, !"<string literal>", i1 false, i1 false}
!1375 = !{ptr @trace_raw_output_btrfs_trigger_flush.symbols, !117, !"symbols", i1 false, i1 false}
!1376 = !{ptr @trace_raw_output_btrfs_trigger_flush.__flags, !117, !"__flags", i1 false, i1 false}
!1377 = !{ptr @print_fmt_btrfs_trigger_flush, !117, !"print_fmt_btrfs_trigger_flush", i1 false, i1 false}
!1378 = !{ptr @.str.319, !121, !"<string literal>", i1 false, i1 false}
!1379 = !{ptr @.str.320, !121, !"<string literal>", i1 false, i1 false}
!1380 = !{ptr @.str.321, !121, !"<string literal>", i1 false, i1 false}
!1381 = !{ptr @.str.322, !121, !"<string literal>", i1 false, i1 false}
!1382 = !{ptr @trace_event_fields_btrfs_flush_space, !121, !"trace_event_fields_btrfs_flush_space", i1 false, i1 false}
!1383 = !{ptr @trace_event_type_funcs_btrfs_flush_space, !121, !"trace_event_type_funcs_btrfs_flush_space", i1 false, i1 false}
!1384 = !{ptr @.str.323, !121, !"<string literal>", i1 false, i1 false}
!1385 = !{ptr @.str.324, !121, !"<string literal>", i1 false, i1 false}
!1386 = !{ptr @trace_raw_output_btrfs_flush_space.symbols, !121, !"symbols", i1 false, i1 false}
!1387 = !{ptr @trace_raw_output_btrfs_flush_space.__flags, !121, !"__flags", i1 false, i1 false}
!1388 = !{ptr @print_fmt_btrfs_flush_space, !121, !"print_fmt_btrfs_flush_space", i1 false, i1 false}
!1389 = !{ptr @trace_event_fields_btrfs__reserved_extent, !596, !"trace_event_fields_btrfs__reserved_extent", i1 false, i1 false}
!1390 = !{ptr @trace_event_type_funcs_btrfs__reserved_extent, !596, !"trace_event_type_funcs_btrfs__reserved_extent", i1 false, i1 false}
!1391 = !{ptr @.str.325, !596, !"<string literal>", i1 false, i1 false}
!1392 = !{ptr @trace_raw_output_btrfs__reserved_extent.symbols, !596, !"symbols", i1 false, i1 false}
!1393 = !{ptr @print_fmt_btrfs__reserved_extent, !596, !"print_fmt_btrfs__reserved_extent", i1 false, i1 false}
!1394 = !{ptr @.str.326, !133, !"<string literal>", i1 false, i1 false}
!1395 = !{ptr @.str.327, !133, !"<string literal>", i1 false, i1 false}
!1396 = !{ptr @trace_event_fields_find_free_extent, !133, !"trace_event_fields_find_free_extent", i1 false, i1 false}
!1397 = !{ptr @trace_event_type_funcs_find_free_extent, !133, !"trace_event_type_funcs_find_free_extent", i1 false, i1 false}
!1398 = !{ptr @.str.328, !133, !"<string literal>", i1 false, i1 false}
!1399 = !{ptr @trace_raw_output_find_free_extent.symbols, !133, !"symbols", i1 false, i1 false}
!1400 = !{ptr @trace_raw_output_find_free_extent.__flags, !133, !"__flags", i1 false, i1 false}
!1401 = !{ptr @print_fmt_find_free_extent, !133, !"print_fmt_find_free_extent", i1 false, i1 false}
!1402 = !{ptr @.str.329, !605, !"<string literal>", i1 false, i1 false}
!1403 = !{ptr @trace_event_fields_btrfs__reserve_extent, !605, !"trace_event_fields_btrfs__reserve_extent", i1 false, i1 false}
!1404 = !{ptr @trace_event_type_funcs_btrfs__reserve_extent, !605, !"trace_event_type_funcs_btrfs__reserve_extent", i1 false, i1 false}
!1405 = !{ptr @.str.330, !605, !"<string literal>", i1 false, i1 false}
!1406 = !{ptr @trace_raw_output_btrfs__reserve_extent.symbols, !605, !"symbols", i1 false, i1 false}
!1407 = !{ptr @trace_raw_output_btrfs__reserve_extent.__flags, !605, !"__flags", i1 false, i1 false}
!1408 = !{ptr @print_fmt_btrfs__reserve_extent, !605, !"print_fmt_btrfs__reserve_extent", i1 false, i1 false}
!1409 = !{ptr @.str.331, !145, !"<string literal>", i1 false, i1 false}
!1410 = !{ptr @trace_event_fields_btrfs_find_cluster, !145, !"trace_event_fields_btrfs_find_cluster", i1 false, i1 false}
!1411 = !{ptr @trace_event_type_funcs_btrfs_find_cluster, !145, !"trace_event_type_funcs_btrfs_find_cluster", i1 false, i1 false}
!1412 = !{ptr @.str.332, !145, !"<string literal>", i1 false, i1 false}
!1413 = !{ptr @trace_raw_output_btrfs_find_cluster.__flags, !145, !"__flags", i1 false, i1 false}
!1414 = !{ptr @print_fmt_btrfs_find_cluster, !145, !"print_fmt_btrfs_find_cluster", i1 false, i1 false}
!1415 = !{ptr @trace_event_fields_btrfs_failed_cluster_setup, !149, !"trace_event_fields_btrfs_failed_cluster_setup", i1 false, i1 false}
!1416 = !{ptr @trace_event_type_funcs_btrfs_failed_cluster_setup, !149, !"trace_event_type_funcs_btrfs_failed_cluster_setup", i1 false, i1 false}
!1417 = !{ptr @.str.333, !149, !"<string literal>", i1 false, i1 false}
!1418 = !{ptr @print_fmt_btrfs_failed_cluster_setup, !149, !"print_fmt_btrfs_failed_cluster_setup", i1 false, i1 false}
!1419 = !{ptr @.str.334, !153, !"<string literal>", i1 false, i1 false}
!1420 = !{ptr @.str.335, !153, !"<string literal>", i1 false, i1 false}
!1421 = !{ptr @trace_event_fields_btrfs_setup_cluster, !153, !"trace_event_fields_btrfs_setup_cluster", i1 false, i1 false}
!1422 = !{ptr @trace_event_type_funcs_btrfs_setup_cluster, !153, !"trace_event_type_funcs_btrfs_setup_cluster", i1 false, i1 false}
!1423 = !{ptr @.str.336, !153, !"<string literal>", i1 false, i1 false}
!1424 = !{ptr @trace_raw_output_btrfs_setup_cluster.__flags, !153, !"__flags", i1 false, i1 false}
!1425 = !{ptr @print_fmt_btrfs_setup_cluster, !153, !"print_fmt_btrfs_setup_cluster", i1 false, i1 false}
!1426 = !{ptr @.str.337, !157, !"<string literal>", i1 false, i1 false}
!1427 = !{ptr @.str.338, !157, !"<string literal>", i1 false, i1 false}
!1428 = !{ptr @.str.339, !157, !"<string literal>", i1 false, i1 false}
!1429 = !{ptr @.str.340, !157, !"<string literal>", i1 false, i1 false}
!1430 = !{ptr @.str.341, !157, !"<string literal>", i1 false, i1 false}
!1431 = !{ptr @trace_event_fields_alloc_extent_state, !157, !"trace_event_fields_alloc_extent_state", i1 false, i1 false}
!1432 = !{ptr @trace_event_type_funcs_alloc_extent_state, !157, !"trace_event_type_funcs_alloc_extent_state", i1 false, i1 false}
!1433 = !{ptr @.str.342, !157, !"<string literal>", i1 false, i1 false}
!1434 = !{ptr @.str.343, !157, !"<string literal>", i1 false, i1 false}
!1435 = !{ptr @.str.344, !157, !"<string literal>", i1 false, i1 false}
!1436 = !{ptr @.str.345, !157, !"<string literal>", i1 false, i1 false}
!1437 = !{ptr @.str.346, !157, !"<string literal>", i1 false, i1 false}
!1438 = !{ptr @.str.347, !157, !"<string literal>", i1 false, i1 false}
!1439 = !{ptr @.str.348, !157, !"<string literal>", i1 false, i1 false}
!1440 = !{ptr @.str.349, !157, !"<string literal>", i1 false, i1 false}
!1441 = !{ptr @.str.350, !157, !"<string literal>", i1 false, i1 false}
!1442 = !{ptr @.str.351, !157, !"<string literal>", i1 false, i1 false}
!1443 = !{ptr @.str.352, !157, !"<string literal>", i1 false, i1 false}
!1444 = !{ptr @.str.353, !157, !"<string literal>", i1 false, i1 false}
!1445 = !{ptr @.str.354, !157, !"<string literal>", i1 false, i1 false}
!1446 = !{ptr @.str.355, !157, !"<string literal>", i1 false, i1 false}
!1447 = !{ptr @.str.356, !157, !"<string literal>", i1 false, i1 false}
!1448 = !{ptr @.str.357, !157, !"<string literal>", i1 false, i1 false}
!1449 = !{ptr @.str.358, !157, !"<string literal>", i1 false, i1 false}
!1450 = !{ptr @.str.359, !157, !"<string literal>", i1 false, i1 false}
!1451 = !{ptr @.str.360, !157, !"<string literal>", i1 false, i1 false}
!1452 = !{ptr @.str.361, !157, !"<string literal>", i1 false, i1 false}
!1453 = !{ptr @.str.362, !157, !"<string literal>", i1 false, i1 false}
!1454 = !{ptr @.str.363, !157, !"<string literal>", i1 false, i1 false}
!1455 = !{ptr @.str.364, !157, !"<string literal>", i1 false, i1 false}
!1456 = !{ptr @.str.365, !157, !"<string literal>", i1 false, i1 false}
!1457 = !{ptr @.str.366, !157, !"<string literal>", i1 false, i1 false}
!1458 = !{ptr @.str.367, !157, !"<string literal>", i1 false, i1 false}
!1459 = !{ptr @.str.368, !157, !"<string literal>", i1 false, i1 false}
!1460 = !{ptr @.str.369, !157, !"<string literal>", i1 false, i1 false}
!1461 = !{ptr @.str.370, !157, !"<string literal>", i1 false, i1 false}
!1462 = !{ptr @.str.371, !157, !"<string literal>", i1 false, i1 false}
!1463 = !{ptr @.str.372, !157, !"<string literal>", i1 false, i1 false}
!1464 = !{ptr @.str.373, !157, !"<string literal>", i1 false, i1 false}
!1465 = !{ptr @.str.374, !157, !"<string literal>", i1 false, i1 false}
!1466 = !{ptr @.str.375, !157, !"<string literal>", i1 false, i1 false}
!1467 = !{ptr @.str.376, !157, !"<string literal>", i1 false, i1 false}
!1468 = !{ptr @.str.377, !157, !"<string literal>", i1 false, i1 false}
!1469 = !{ptr @.str.378, !157, !"<string literal>", i1 false, i1 false}
!1470 = !{ptr @.str.379, !157, !"<string literal>", i1 false, i1 false}
!1471 = !{ptr @trace_raw_output_alloc_extent_state.__flags, !157, !"__flags", i1 false, i1 false}
!1472 = !{ptr @.str.380, !157, !"<string literal>", i1 false, i1 false}
!1473 = !{ptr @print_fmt_alloc_extent_state, !157, !"print_fmt_alloc_extent_state", i1 false, i1 false}
!1474 = !{ptr @trace_event_fields_free_extent_state, !161, !"trace_event_fields_free_extent_state", i1 false, i1 false}
!1475 = !{ptr @trace_event_type_funcs_free_extent_state, !161, !"trace_event_type_funcs_free_extent_state", i1 false, i1 false}
!1476 = !{ptr @.str.381, !161, !"<string literal>", i1 false, i1 false}
!1477 = !{ptr @print_fmt_free_extent_state, !161, !"print_fmt_free_extent_state", i1 false, i1 false}
!1478 = !{ptr @.str.382, !626, !"<string literal>", i1 false, i1 false}
!1479 = !{ptr @.str.383, !626, !"<string literal>", i1 false, i1 false}
!1480 = !{ptr @.str.384, !626, !"<string literal>", i1 false, i1 false}
!1481 = !{ptr @.str.385, !626, !"<string literal>", i1 false, i1 false}
!1482 = !{ptr @.str.386, !626, !"<string literal>", i1 false, i1 false}
!1483 = !{ptr @.str.387, !626, !"<string literal>", i1 false, i1 false}
!1484 = !{ptr @.str.388, !626, !"<string literal>", i1 false, i1 false}
!1485 = !{ptr @trace_event_fields_btrfs__work, !626, !"trace_event_fields_btrfs__work", i1 false, i1 false}
!1486 = !{ptr @.str.389, !628, !"<string literal>", i1 false, i1 false}
!1487 = !{ptr @trace_event_fields_btrfs__work__done, !628, !"trace_event_fields_btrfs__work__done", i1 false, i1 false}
!1488 = !{ptr @trace_event_type_funcs_btrfs__work, !626, !"trace_event_type_funcs_btrfs__work", i1 false, i1 false}
!1489 = !{ptr @.str.390, !626, !"<string literal>", i1 false, i1 false}
!1490 = !{ptr @print_fmt_btrfs__work, !626, !"print_fmt_btrfs__work", i1 false, i1 false}
!1491 = !{ptr @trace_event_type_funcs_btrfs__work__done, !628, !"trace_event_type_funcs_btrfs__work__done", i1 false, i1 false}
!1492 = !{ptr @.str.391, !628, !"<string literal>", i1 false, i1 false}
!1493 = !{ptr @print_fmt_btrfs__work__done, !628, !"print_fmt_btrfs__work__done", i1 false, i1 false}
!1494 = !{ptr @.str.392, !638, !"<string literal>", i1 false, i1 false}
!1495 = !{ptr @.str.393, !638, !"<string literal>", i1 false, i1 false}
!1496 = !{ptr @trace_event_fields_btrfs__workqueue, !638, !"trace_event_fields_btrfs__workqueue", i1 false, i1 false}
!1497 = !{ptr @trace_event_type_funcs_btrfs__workqueue, !638, !"trace_event_type_funcs_btrfs__workqueue", i1 false, i1 false}
!1498 = !{ptr @.str.394, !638, !"<string literal>", i1 false, i1 false}
!1499 = !{ptr @.str.395, !638, !"<string literal>", i1 false, i1 false}
!1500 = !{ptr @trace_raw_output_btrfs__workqueue.__flags, !638, !"__flags", i1 false, i1 false}
!1501 = !{ptr @.str.396, !638, !"<string literal>", i1 false, i1 false}
!1502 = !{ptr @print_fmt_btrfs__workqueue, !638, !"print_fmt_btrfs__workqueue", i1 false, i1 false}
!1503 = !{ptr @trace_event_fields_btrfs__workqueue_done, !642, !"trace_event_fields_btrfs__workqueue_done", i1 false, i1 false}
!1504 = !{ptr @trace_event_type_funcs_btrfs__workqueue_done, !642, !"trace_event_type_funcs_btrfs__workqueue_done", i1 false, i1 false}
!1505 = !{ptr @.str.397, !642, !"<string literal>", i1 false, i1 false}
!1506 = !{ptr @print_fmt_btrfs__workqueue_done, !642, !"print_fmt_btrfs__workqueue_done", i1 false, i1 false}
!1507 = !{ptr @.str.398, !646, !"<string literal>", i1 false, i1 false}
!1508 = !{ptr @.str.399, !646, !"<string literal>", i1 false, i1 false}
!1509 = !{ptr @.str.400, !646, !"<string literal>", i1 false, i1 false}
!1510 = !{ptr @trace_event_fields_btrfs__qgroup_rsv_data, !646, !"trace_event_fields_btrfs__qgroup_rsv_data", i1 false, i1 false}
!1511 = !{ptr @trace_event_type_funcs_btrfs__qgroup_rsv_data, !646, !"trace_event_type_funcs_btrfs__qgroup_rsv_data", i1 false, i1 false}
!1512 = !{ptr @.str.401, !646, !"<string literal>", i1 false, i1 false}
!1513 = !{ptr @.str.402, !646, !"<string literal>", i1 false, i1 false}
!1514 = !{ptr @trace_raw_output_btrfs__qgroup_rsv_data.__flags, !646, !"__flags", i1 false, i1 false}
!1515 = !{ptr @print_fmt_btrfs__qgroup_rsv_data, !646, !"print_fmt_btrfs__qgroup_rsv_data", i1 false, i1 false}
!1516 = !{ptr @trace_event_fields_btrfs_qgroup_extent, !652, !"trace_event_fields_btrfs_qgroup_extent", i1 false, i1 false}
!1517 = !{ptr @trace_event_type_funcs_btrfs_qgroup_extent, !652, !"trace_event_type_funcs_btrfs_qgroup_extent", i1 false, i1 false}
!1518 = !{ptr @.str.403, !652, !"<string literal>", i1 false, i1 false}
!1519 = !{ptr @print_fmt_btrfs_qgroup_extent, !652, !"print_fmt_btrfs_qgroup_extent", i1 false, i1 false}
!1520 = !{ptr @.str.404, !205, !"<string literal>", i1 false, i1 false}
!1521 = !{ptr @.str.405, !205, !"<string literal>", i1 false, i1 false}
!1522 = !{ptr @trace_event_fields_qgroup_num_dirty_extents, !205, !"trace_event_fields_qgroup_num_dirty_extents", i1 false, i1 false}
!1523 = !{ptr @trace_event_type_funcs_qgroup_num_dirty_extents, !205, !"trace_event_type_funcs_qgroup_num_dirty_extents", i1 false, i1 false}
!1524 = !{ptr @.str.406, !205, !"<string literal>", i1 false, i1 false}
!1525 = !{ptr @print_fmt_qgroup_num_dirty_extents, !205, !"print_fmt_qgroup_num_dirty_extents", i1 false, i1 false}
!1526 = !{ptr @.str.407, !209, !"<string literal>", i1 false, i1 false}
!1527 = !{ptr @.str.408, !209, !"<string literal>", i1 false, i1 false}
!1528 = !{ptr @trace_event_fields_btrfs_qgroup_account_extent, !209, !"trace_event_fields_btrfs_qgroup_account_extent", i1 false, i1 false}
!1529 = !{ptr @trace_event_type_funcs_btrfs_qgroup_account_extent, !209, !"trace_event_type_funcs_btrfs_qgroup_account_extent", i1 false, i1 false}
!1530 = !{ptr @.str.409, !209, !"<string literal>", i1 false, i1 false}
!1531 = !{ptr @print_fmt_btrfs_qgroup_account_extent, !209, !"print_fmt_btrfs_qgroup_account_extent", i1 false, i1 false}
!1532 = !{ptr @.str.410, !213, !"<string literal>", i1 false, i1 false}
!1533 = !{ptr @.str.411, !213, !"<string literal>", i1 false, i1 false}
!1534 = !{ptr @.str.412, !213, !"<string literal>", i1 false, i1 false}
!1535 = !{ptr @.str.413, !213, !"<string literal>", i1 false, i1 false}
!1536 = !{ptr @.str.414, !213, !"<string literal>", i1 false, i1 false}
!1537 = !{ptr @trace_event_fields_qgroup_update_counters, !213, !"trace_event_fields_qgroup_update_counters", i1 false, i1 false}
!1538 = !{ptr @trace_event_type_funcs_qgroup_update_counters, !213, !"trace_event_type_funcs_qgroup_update_counters", i1 false, i1 false}
!1539 = !{ptr @.str.415, !213, !"<string literal>", i1 false, i1 false}
!1540 = !{ptr @print_fmt_qgroup_update_counters, !213, !"print_fmt_qgroup_update_counters", i1 false, i1 false}
!1541 = !{ptr @.str.416, !217, !"<string literal>", i1 false, i1 false}
!1542 = !{ptr @.str.417, !217, !"<string literal>", i1 false, i1 false}
!1543 = !{ptr @.str.418, !217, !"<string literal>", i1 false, i1 false}
!1544 = !{ptr @trace_event_fields_qgroup_update_reserve, !217, !"trace_event_fields_qgroup_update_reserve", i1 false, i1 false}
!1545 = !{ptr @trace_event_type_funcs_qgroup_update_reserve, !217, !"trace_event_type_funcs_qgroup_update_reserve", i1 false, i1 false}
!1546 = !{ptr @.str.419, !217, !"<string literal>", i1 false, i1 false}
!1547 = !{ptr @.str.420, !217, !"<string literal>", i1 false, i1 false}
!1548 = !{ptr @.str.421, !217, !"<string literal>", i1 false, i1 false}
!1549 = !{ptr @trace_raw_output_qgroup_update_reserve.symbols, !217, !"symbols", i1 false, i1 false}
!1550 = !{ptr @print_fmt_qgroup_update_reserve, !217, !"print_fmt_qgroup_update_reserve", i1 false, i1 false}
!1551 = !{ptr @.str.422, !221, !"<string literal>", i1 false, i1 false}
!1552 = !{ptr @trace_event_fields_qgroup_meta_reserve, !221, !"trace_event_fields_qgroup_meta_reserve", i1 false, i1 false}
!1553 = !{ptr @trace_event_type_funcs_qgroup_meta_reserve, !221, !"trace_event_type_funcs_qgroup_meta_reserve", i1 false, i1 false}
!1554 = !{ptr @.str.423, !221, !"<string literal>", i1 false, i1 false}
!1555 = !{ptr @trace_raw_output_qgroup_meta_reserve.symbols, !221, !"symbols", i1 false, i1 false}
!1556 = !{ptr @trace_raw_output_qgroup_meta_reserve.symbols.424, !221, !"symbols", i1 false, i1 false}
!1557 = !{ptr @print_fmt_qgroup_meta_reserve, !221, !"print_fmt_qgroup_meta_reserve", i1 false, i1 false}
!1558 = !{ptr @trace_event_fields_qgroup_meta_convert, !225, !"trace_event_fields_qgroup_meta_convert", i1 false, i1 false}
!1559 = !{ptr @trace_event_type_funcs_qgroup_meta_convert, !225, !"trace_event_type_funcs_qgroup_meta_convert", i1 false, i1 false}
!1560 = !{ptr @.str.425, !225, !"<string literal>", i1 false, i1 false}
!1561 = !{ptr @trace_raw_output_qgroup_meta_convert.symbols, !225, !"symbols", i1 false, i1 false}
!1562 = !{ptr @trace_raw_output_qgroup_meta_convert.symbols.426, !225, !"symbols", i1 false, i1 false}
!1563 = !{ptr @trace_raw_output_qgroup_meta_convert.symbols.427, !225, !"symbols", i1 false, i1 false}
!1564 = !{ptr @print_fmt_qgroup_meta_convert, !225, !"print_fmt_qgroup_meta_convert", i1 false, i1 false}
!1565 = !{ptr @trace_event_fields_qgroup_meta_free_all_pertrans, !229, !"trace_event_fields_qgroup_meta_free_all_pertrans", i1 false, i1 false}
!1566 = !{ptr @trace_event_type_funcs_qgroup_meta_free_all_pertrans, !229, !"trace_event_type_funcs_qgroup_meta_free_all_pertrans", i1 false, i1 false}
!1567 = !{ptr @trace_raw_output_qgroup_meta_free_all_pertrans.symbols, !229, !"symbols", i1 false, i1 false}
!1568 = !{ptr @trace_raw_output_qgroup_meta_free_all_pertrans.symbols.428, !229, !"symbols", i1 false, i1 false}
!1569 = !{ptr @print_fmt_qgroup_meta_free_all_pertrans, !229, !"print_fmt_qgroup_meta_free_all_pertrans", i1 false, i1 false}
!1570 = !{ptr @.str.429, !679, !"<string literal>", i1 false, i1 false}
!1571 = !{ptr @.str.430, !679, !"<string literal>", i1 false, i1 false}
!1572 = !{ptr @.str.431, !679, !"<string literal>", i1 false, i1 false}
!1573 = !{ptr @.str.432, !679, !"<string literal>", i1 false, i1 false}
!1574 = !{ptr @.str.433, !679, !"<string literal>", i1 false, i1 false}
!1575 = !{ptr @trace_event_fields_btrfs__prelim_ref, !679, !"trace_event_fields_btrfs__prelim_ref", i1 false, i1 false}
!1576 = !{ptr @trace_event_type_funcs_btrfs__prelim_ref, !679, !"trace_event_type_funcs_btrfs__prelim_ref", i1 false, i1 false}
!1577 = !{ptr @.str.434, !679, !"<string literal>", i1 false, i1 false}
!1578 = !{ptr @print_fmt_btrfs__prelim_ref, !679, !"print_fmt_btrfs__prelim_ref", i1 false, i1 false}
!1579 = !{ptr @.str.435, !241, !"<string literal>", i1 false, i1 false}
!1580 = !{ptr @trace_event_fields_btrfs_inode_mod_outstanding_extents, !241, !"trace_event_fields_btrfs_inode_mod_outstanding_extents", i1 false, i1 false}
!1581 = !{ptr @trace_event_type_funcs_btrfs_inode_mod_outstanding_extents, !241, !"trace_event_type_funcs_btrfs_inode_mod_outstanding_extents", i1 false, i1 false}
!1582 = !{ptr @.str.436, !241, !"<string literal>", i1 false, i1 false}
!1583 = !{ptr @trace_raw_output_btrfs_inode_mod_outstanding_extents.symbols, !241, !"symbols", i1 false, i1 false}
!1584 = !{ptr @print_fmt_btrfs_inode_mod_outstanding_extents, !241, !"print_fmt_btrfs_inode_mod_outstanding_extents", i1 false, i1 false}
!1585 = !{ptr @.str.437, !688, !"<string literal>", i1 false, i1 false}
!1586 = !{ptr @trace_event_fields_btrfs__block_group, !688, !"trace_event_fields_btrfs__block_group", i1 false, i1 false}
!1587 = !{ptr @trace_event_type_funcs_btrfs__block_group, !688, !"trace_event_type_funcs_btrfs__block_group", i1 false, i1 false}
!1588 = !{ptr @.str.438, !688, !"<string literal>", i1 false, i1 false}
!1589 = !{ptr @trace_raw_output_btrfs__block_group.__flags, !688, !"__flags", i1 false, i1 false}
!1590 = !{ptr @print_fmt_btrfs__block_group, !688, !"print_fmt_btrfs__block_group", i1 false, i1 false}
!1591 = !{ptr @.str.439, !265, !"<string literal>", i1 false, i1 false}
!1592 = !{ptr @.str.440, !265, !"<string literal>", i1 false, i1 false}
!1593 = !{ptr @trace_event_fields_btrfs_set_extent_bit, !265, !"trace_event_fields_btrfs_set_extent_bit", i1 false, i1 false}
!1594 = !{ptr @trace_event_type_funcs_btrfs_set_extent_bit, !265, !"trace_event_type_funcs_btrfs_set_extent_bit", i1 false, i1 false}
!1595 = !{ptr @.str.441, !265, !"<string literal>", i1 false, i1 false}
!1596 = !{ptr @.str.442, !265, !"<string literal>", i1 false, i1 false}
!1597 = !{ptr @.str.443, !265, !"<string literal>", i1 false, i1 false}
!1598 = !{ptr @.str.444, !265, !"<string literal>", i1 false, i1 false}
!1599 = !{ptr @.str.445, !265, !"<string literal>", i1 false, i1 false}
!1600 = !{ptr @.str.446, !265, !"<string literal>", i1 false, i1 false}
!1601 = !{ptr @.str.447, !265, !"<string literal>", i1 false, i1 false}
!1602 = !{ptr @.str.448, !265, !"<string literal>", i1 false, i1 false}
!1603 = !{ptr @.str.449, !265, !"<string literal>", i1 false, i1 false}
!1604 = !{ptr @.str.450, !265, !"<string literal>", i1 false, i1 false}
!1605 = !{ptr @.str.451, !265, !"<string literal>", i1 false, i1 false}
!1606 = !{ptr @.str.452, !265, !"<string literal>", i1 false, i1 false}
!1607 = !{ptr @trace_raw_output_btrfs_set_extent_bit.symbols, !265, !"symbols", i1 false, i1 false}
!1608 = !{ptr @.str.453, !265, !"<string literal>", i1 false, i1 false}
!1609 = !{ptr @.str.454, !265, !"<string literal>", i1 false, i1 false}
!1610 = !{ptr @.str.455, !265, !"<string literal>", i1 false, i1 false}
!1611 = !{ptr @.str.456, !265, !"<string literal>", i1 false, i1 false}
!1612 = !{ptr @.str.457, !265, !"<string literal>", i1 false, i1 false}
!1613 = !{ptr @.str.458, !265, !"<string literal>", i1 false, i1 false}
!1614 = !{ptr @.str.459, !265, !"<string literal>", i1 false, i1 false}
!1615 = !{ptr @.str.460, !265, !"<string literal>", i1 false, i1 false}
!1616 = !{ptr @.str.461, !265, !"<string literal>", i1 false, i1 false}
!1617 = !{ptr @.str.462, !265, !"<string literal>", i1 false, i1 false}
!1618 = !{ptr @.str.463, !265, !"<string literal>", i1 false, i1 false}
!1619 = !{ptr @.str.464, !265, !"<string literal>", i1 false, i1 false}
!1620 = !{ptr @.str.465, !265, !"<string literal>", i1 false, i1 false}
!1621 = !{ptr @.str.466, !265, !"<string literal>", i1 false, i1 false}
!1622 = !{ptr @trace_raw_output_btrfs_set_extent_bit.__flags, !265, !"__flags", i1 false, i1 false}
!1623 = !{ptr @print_fmt_btrfs_set_extent_bit, !265, !"print_fmt_btrfs_set_extent_bit", i1 false, i1 false}
!1624 = !{ptr @.str.467, !269, !"<string literal>", i1 false, i1 false}
!1625 = !{ptr @trace_event_fields_btrfs_clear_extent_bit, !269, !"trace_event_fields_btrfs_clear_extent_bit", i1 false, i1 false}
!1626 = !{ptr @trace_event_type_funcs_btrfs_clear_extent_bit, !269, !"trace_event_type_funcs_btrfs_clear_extent_bit", i1 false, i1 false}
!1627 = !{ptr @.str.468, !269, !"<string literal>", i1 false, i1 false}
!1628 = !{ptr @trace_raw_output_btrfs_clear_extent_bit.symbols, !269, !"symbols", i1 false, i1 false}
!1629 = !{ptr @trace_raw_output_btrfs_clear_extent_bit.__flags, !269, !"__flags", i1 false, i1 false}
!1630 = !{ptr @print_fmt_btrfs_clear_extent_bit, !269, !"print_fmt_btrfs_clear_extent_bit", i1 false, i1 false}
!1631 = !{ptr @trace_event_fields_btrfs_convert_extent_bit, !273, !"trace_event_fields_btrfs_convert_extent_bit", i1 false, i1 false}
!1632 = !{ptr @trace_event_type_funcs_btrfs_convert_extent_bit, !273, !"trace_event_type_funcs_btrfs_convert_extent_bit", i1 false, i1 false}
!1633 = !{ptr @.str.469, !273, !"<string literal>", i1 false, i1 false}
!1634 = !{ptr @trace_raw_output_btrfs_convert_extent_bit.symbols, !273, !"symbols", i1 false, i1 false}
!1635 = !{ptr @trace_raw_output_btrfs_convert_extent_bit.__flags, !273, !"__flags", i1 false, i1 false}
!1636 = !{ptr @trace_raw_output_btrfs_convert_extent_bit.__flags.470, !273, !"__flags", i1 false, i1 false}
!1637 = !{ptr @print_fmt_btrfs_convert_extent_bit, !273, !"print_fmt_btrfs_convert_extent_bit", i1 false, i1 false}
!1638 = !{ptr @.str.471, !709, !"<string literal>", i1 false, i1 false}
!1639 = !{ptr @.str.472, !709, !"<string literal>", i1 false, i1 false}
!1640 = !{ptr @.str.473, !709, !"<string literal>", i1 false, i1 false}
!1641 = !{ptr @.str.474, !709, !"<string literal>", i1 false, i1 false}
!1642 = !{ptr @.str.475, !709, !"<string literal>", i1 false, i1 false}
!1643 = !{ptr @.str.476, !709, !"<string literal>", i1 false, i1 false}
!1644 = !{ptr @.str.477, !709, !"<string literal>", i1 false, i1 false}
!1645 = !{ptr @.str.478, !709, !"<string literal>", i1 false, i1 false}
!1646 = !{ptr @.str.479, !709, !"<string literal>", i1 false, i1 false}
!1647 = !{ptr @.str.480, !709, !"<string literal>", i1 false, i1 false}
!1648 = !{ptr @.str.481, !709, !"<string literal>", i1 false, i1 false}
!1649 = !{ptr @.str.482, !709, !"<string literal>", i1 false, i1 false}
!1650 = !{ptr @.str.483, !709, !"<string literal>", i1 false, i1 false}
!1651 = !{ptr @.str.484, !709, !"<string literal>", i1 false, i1 false}
!1652 = !{ptr @trace_event_fields_btrfs_dump_space_info, !709, !"trace_event_fields_btrfs_dump_space_info", i1 false, i1 false}
!1653 = !{ptr @trace_event_type_funcs_btrfs_dump_space_info, !709, !"trace_event_type_funcs_btrfs_dump_space_info", i1 false, i1 false}
!1654 = !{ptr @.str.485, !709, !"<string literal>", i1 false, i1 false}
!1655 = !{ptr @trace_raw_output_btrfs_dump_space_info.__flags, !709, !"__flags", i1 false, i1 false}
!1656 = !{ptr @print_fmt_btrfs_dump_space_info, !709, !"print_fmt_btrfs_dump_space_info", i1 false, i1 false}
!1657 = !{ptr @.str.486, !285, !"<string literal>", i1 false, i1 false}
!1658 = !{ptr @.str.487, !285, !"<string literal>", i1 false, i1 false}
!1659 = !{ptr @trace_event_fields_btrfs_reserve_ticket, !285, !"trace_event_fields_btrfs_reserve_ticket", i1 false, i1 false}
!1660 = !{ptr @trace_event_type_funcs_btrfs_reserve_ticket, !285, !"trace_event_type_funcs_btrfs_reserve_ticket", i1 false, i1 false}
!1661 = !{ptr @.str.488, !285, !"<string literal>", i1 false, i1 false}
!1662 = !{ptr @trace_raw_output_btrfs_reserve_ticket.__flags, !285, !"__flags", i1 false, i1 false}
!1663 = !{ptr @trace_raw_output_btrfs_reserve_ticket.symbols, !285, !"symbols", i1 false, i1 false}
!1664 = !{ptr @print_fmt_btrfs_reserve_ticket, !285, !"print_fmt_btrfs_reserve_ticket", i1 false, i1 false}
!1665 = !{ptr @.str.489, !718, !"<string literal>", i1 false, i1 false}
!1666 = !{ptr @.str.490, !718, !"<string literal>", i1 false, i1 false}
!1667 = !{ptr @.str.491, !718, !"<string literal>", i1 false, i1 false}
!1668 = !{ptr @.str.492, !718, !"<string literal>", i1 false, i1 false}
!1669 = !{ptr @trace_event_fields_btrfs_sleep_tree_lock, !718, !"trace_event_fields_btrfs_sleep_tree_lock", i1 false, i1 false}
!1670 = !{ptr @trace_event_type_funcs_btrfs_sleep_tree_lock, !718, !"trace_event_type_funcs_btrfs_sleep_tree_lock", i1 false, i1 false}
!1671 = !{ptr @.str.493, !718, !"<string literal>", i1 false, i1 false}
!1672 = !{ptr @print_fmt_btrfs_sleep_tree_lock, !718, !"print_fmt_btrfs_sleep_tree_lock", i1 false, i1 false}
!1673 = !{ptr @trace_event_fields_btrfs_locking_events, !724, !"trace_event_fields_btrfs_locking_events", i1 false, i1 false}
!1674 = !{ptr @trace_event_type_funcs_btrfs_locking_events, !724, !"trace_event_type_funcs_btrfs_locking_events", i1 false, i1 false}
!1675 = !{ptr @.str.494, !724, !"<string literal>", i1 false, i1 false}
!1676 = !{ptr @print_fmt_btrfs_locking_events, !724, !"print_fmt_btrfs_locking_events", i1 false, i1 false}
!1677 = !{ptr @.str.495, !742, !"<string literal>", i1 false, i1 false}
!1678 = !{ptr @trace_event_fields_btrfs__space_info_update, !742, !"trace_event_fields_btrfs__space_info_update", i1 false, i1 false}
!1679 = !{ptr @trace_event_type_funcs_btrfs__space_info_update, !742, !"trace_event_type_funcs_btrfs__space_info_update", i1 false, i1 false}
!1680 = !{ptr @.str.496, !742, !"<string literal>", i1 false, i1 false}
!1681 = !{ptr @trace_raw_output_btrfs__space_info_update.__flags, !742, !"__flags", i1 false, i1 false}
!1682 = !{ptr @print_fmt_btrfs__space_info_update, !742, !"print_fmt_btrfs__space_info_update", i1 false, i1 false}
!1683 = !{ptr @.str.497, !1684, !"<string literal>", i1 false, i1 false}
!1684 = !{!"../fs/btrfs/super.c", i32 190, i32 2}
!1685 = !{ptr @.str.498, !1686, !"<string literal>", i1 false, i1 false}
!1686 = !{!"../fs/btrfs/super.c", i32 191, i32 2}
!1687 = !{ptr @.str.499, !1688, !"<string literal>", i1 false, i1 false}
!1688 = !{!"../fs/btrfs/super.c", i32 192, i32 2}
!1689 = !{ptr @.str.500, !1690, !"<string literal>", i1 false, i1 false}
!1690 = !{!"../fs/btrfs/super.c", i32 194, i32 2}
!1691 = !{ptr @.str.501, !1692, !"<string literal>", i1 false, i1 false}
!1692 = !{!"../fs/btrfs/super.c", i32 195, i32 2}
!1693 = !{ptr @.str.502, !1694, !"<string literal>", i1 false, i1 false}
!1694 = !{!"../fs/btrfs/super.c", i32 196, i32 2}
!1695 = !{ptr @.str.503, !1696, !"<string literal>", i1 false, i1 false}
!1696 = !{!"../fs/btrfs/super.c", i32 197, i32 2}
!1697 = !{ptr @logtypes, !1698, !"logtypes", i1 false, i1 false}
!1698 = !{!"../fs/btrfs/super.c", i32 189, i32 27}
!1699 = !{ptr @.str.504, !1700, !"<string literal>", i1 false, i1 false}
!1700 = !{!"../fs/btrfs/super.c", i32 206, i32 2}
!1701 = !{ptr @.str.505, !1702, !"<string literal>", i1 false, i1 false}
!1702 = !{!"../fs/btrfs/super.c", i32 207, i32 2}
!1703 = !{ptr @.str.506, !1704, !"<string literal>", i1 false, i1 false}
!1704 = !{!"../fs/btrfs/super.c", i32 208, i32 2}
!1705 = !{ptr @.str.507, !1706, !"<string literal>", i1 false, i1 false}
!1706 = !{!"../fs/btrfs/super.c", i32 209, i32 2}
!1707 = !{ptr @.str.508, !1708, !"<string literal>", i1 false, i1 false}
!1708 = !{!"../fs/btrfs/super.c", i32 210, i32 2}
!1709 = !{ptr @.str.509, !1710, !"<string literal>", i1 false, i1 false}
!1710 = !{!"../fs/btrfs/super.c", i32 211, i32 2}
!1711 = !{ptr @.str.510, !1712, !"<string literal>", i1 false, i1 false}
!1712 = !{!"../fs/btrfs/super.c", i32 212, i32 2}
!1713 = !{ptr @.str.511, !1714, !"<string literal>", i1 false, i1 false}
!1714 = !{!"../fs/btrfs/super.c", i32 213, i32 2}
!1715 = !{ptr @printk_limits, !1716, !"printk_limits", i1 false, i1 false}
!1716 = !{!"../fs/btrfs/super.c", i32 205, i32 31}
!1717 = !{ptr @.str.512, !1718, !"<string literal>", i1 false, i1 false}
!1718 = !{!"../fs/btrfs/super.c", i32 403, i32 12}
!1719 = !{ptr @.str.513, !1720, !"<string literal>", i1 false, i1 false}
!1720 = !{!"../fs/btrfs/super.c", i32 404, i32 14}
!1721 = !{ptr @.str.514, !1722, !"<string literal>", i1 false, i1 false}
!1722 = !{!"../fs/btrfs/super.c", i32 405, i32 20}
!1723 = !{ptr @.str.515, !1724, !"<string literal>", i1 false, i1 false}
!1724 = !{!"../fs/btrfs/super.c", i32 406, i32 24}
!1725 = !{ptr @.str.516, !1726, !"<string literal>", i1 false, i1 false}
!1726 = !{!"../fs/btrfs/super.c", i32 407, i32 17}
!1727 = !{ptr @.str.517, !1728, !"<string literal>", i1 false, i1 false}
!1728 = !{!"../fs/btrfs/super.c", i32 408, i32 22}
!1729 = !{ptr @.str.518, !1730, !"<string literal>", i1 false, i1 false}
!1730 = !{!"../fs/btrfs/super.c", i32 409, i32 23}
!1731 = !{ptr @.str.519, !1732, !"<string literal>", i1 false, i1 false}
!1732 = !{!"../fs/btrfs/super.c", i32 410, i32 28}
!1733 = !{ptr @.str.520, !1734, !"<string literal>", i1 false, i1 false}
!1734 = !{!"../fs/btrfs/super.c", i32 411, i32 17}
!1735 = !{ptr @.str.521, !1736, !"<string literal>", i1 false, i1 false}
!1736 = !{!"../fs/btrfs/super.c", i32 412, i32 15}
!1737 = !{ptr @.str.522, !1738, !"<string literal>", i1 false, i1 false}
!1738 = !{!"../fs/btrfs/super.c", i32 413, i32 21}
!1739 = !{ptr @.str.523, !1740, !"<string literal>", i1 false, i1 false}
!1740 = !{!"../fs/btrfs/super.c", i32 414, i32 22}
!1741 = !{ptr @.str.524, !1742, !"<string literal>", i1 false, i1 false}
!1742 = !{!"../fs/btrfs/super.c", i32 415, i32 24}
!1743 = !{ptr @.str.525, !1744, !"<string literal>", i1 false, i1 false}
!1744 = !{!"../fs/btrfs/super.c", i32 416, i32 20}
!1745 = !{ptr @.str.526, !1746, !"<string literal>", i1 false, i1 false}
!1746 = !{!"../fs/btrfs/super.c", i32 417, i32 22}
!1747 = !{ptr @.str.527, !1748, !"<string literal>", i1 false, i1 false}
!1748 = !{!"../fs/btrfs/super.c", i32 418, i32 19}
!1749 = !{ptr @.str.528, !1750, !"<string literal>", i1 false, i1 false}
!1750 = !{!"../fs/btrfs/super.c", i32 419, i32 16}
!1751 = !{ptr @.str.529, !1752, !"<string literal>", i1 false, i1 false}
!1752 = !{!"../fs/btrfs/super.c", i32 420, i32 18}
!1753 = !{ptr @.str.530, !1754, !"<string literal>", i1 false, i1 false}
!1754 = !{!"../fs/btrfs/super.c", i32 421, i32 16}
!1755 = !{ptr @.str.531, !1756, !"<string literal>", i1 false, i1 false}
!1756 = !{!"../fs/btrfs/super.c", i32 422, i32 18}
!1757 = !{ptr @.str.532, !1758, !"<string literal>", i1 false, i1 false}
!1758 = !{!"../fs/btrfs/super.c", i32 423, i32 16}
!1759 = !{ptr @.str.533, !1760, !"<string literal>", i1 false, i1 false}
!1760 = !{!"../fs/btrfs/super.c", i32 424, i32 18}
!1761 = !{ptr @.str.534, !1762, !"<string literal>", i1 false, i1 false}
!1762 = !{!"../fs/btrfs/super.c", i32 425, i32 15}
!1763 = !{ptr @.str.535, !1764, !"<string literal>", i1 false, i1 false}
!1764 = !{!"../fs/btrfs/super.c", i32 426, i32 17}
!1765 = !{ptr @.str.536, !1766, !"<string literal>", i1 false, i1 false}
!1766 = !{!"../fs/btrfs/super.c", i32 427, i32 16}
!1767 = !{ptr @.str.537, !1768, !"<string literal>", i1 false, i1 false}
!1768 = !{!"../fs/btrfs/super.c", i32 428, i32 21}
!1769 = !{ptr @.str.538, !1770, !"<string literal>", i1 false, i1 false}
!1770 = !{!"../fs/btrfs/super.c", i32 429, i32 18}
!1771 = !{ptr @.str.539, !1772, !"<string literal>", i1 false, i1 false}
!1772 = !{!"../fs/btrfs/super.c", i32 430, i32 19}
!1773 = !{ptr @.str.540, !1774, !"<string literal>", i1 false, i1 false}
!1774 = !{!"../fs/btrfs/super.c", i32 431, i32 14}
!1775 = !{ptr @.str.541, !1776, !"<string literal>", i1 false, i1 false}
!1776 = !{!"../fs/btrfs/super.c", i32 432, i32 25}
!1777 = !{ptr @.str.542, !1778, !"<string literal>", i1 false, i1 false}
!1778 = !{!"../fs/btrfs/super.c", i32 433, i32 21}
!1779 = !{ptr @.str.543, !1780, !"<string literal>", i1 false, i1 false}
!1780 = !{!"../fs/btrfs/super.c", i32 434, i32 20}
!1781 = !{ptr @.str.544, !1782, !"<string literal>", i1 false, i1 false}
!1782 = !{!"../fs/btrfs/super.c", i32 435, i32 23}
!1783 = !{ptr @.str.545, !1784, !"<string literal>", i1 false, i1 false}
!1784 = !{!"../fs/btrfs/super.c", i32 436, i32 28}
!1785 = !{ptr @.str.546, !1786, !"<string literal>", i1 false, i1 false}
!1786 = !{!"../fs/btrfs/super.c", i32 437, i32 12}
!1787 = !{ptr @.str.547, !1788, !"<string literal>", i1 false, i1 false}
!1788 = !{!"../fs/btrfs/super.c", i32 438, i32 14}
!1789 = !{ptr @.str.548, !1790, !"<string literal>", i1 false, i1 false}
!1790 = !{!"../fs/btrfs/super.c", i32 439, i32 19}
!1791 = !{ptr @.str.549, !1792, !"<string literal>", i1 false, i1 false}
!1792 = !{!"../fs/btrfs/super.c", i32 440, i32 21}
!1793 = !{ptr @.str.550, !1794, !"<string literal>", i1 false, i1 false}
!1794 = !{!"../fs/btrfs/super.c", i32 441, i32 15}
!1795 = !{ptr @.str.551, !1796, !"<string literal>", i1 false, i1 false}
!1796 = !{!"../fs/btrfs/super.c", i32 442, i32 21}
!1797 = !{ptr @.str.552, !1798, !"<string literal>", i1 false, i1 false}
!1798 = !{!"../fs/btrfs/super.c", i32 443, i32 17}
!1799 = !{ptr @.str.553, !1800, !"<string literal>", i1 false, i1 false}
!1800 = !{!"../fs/btrfs/super.c", i32 444, i32 20}
!1801 = !{ptr @.str.554, !1802, !"<string literal>", i1 false, i1 false}
!1802 = !{!"../fs/btrfs/super.c", i32 445, i32 16}
!1803 = !{ptr @.str.555, !1804, !"<string literal>", i1 false, i1 false}
!1804 = !{!"../fs/btrfs/super.c", i32 446, i32 18}
!1805 = !{ptr @.str.556, !1806, !"<string literal>", i1 false, i1 false}
!1806 = !{!"../fs/btrfs/super.c", i32 447, i32 31}
!1807 = !{ptr @.str.557, !1808, !"<string literal>", i1 false, i1 false}
!1808 = !{!"../fs/btrfs/super.c", i32 450, i32 15}
!1809 = !{ptr @.str.558, !1810, !"<string literal>", i1 false, i1 false}
!1810 = !{!"../fs/btrfs/super.c", i32 460, i32 24}
!1811 = !{ptr @.str.559, !1812, !"<string literal>", i1 false, i1 false}
!1812 = !{!"../fs/btrfs/super.c", i32 461, i32 46}
!1813 = !{ptr @.str.560, !1814, !"<string literal>", i1 false, i1 false}
!1814 = !{!"../fs/btrfs/super.c", i32 462, i32 35}
!1815 = !{ptr @.str.561, !1816, !"<string literal>", i1 false, i1 false}
!1816 = !{!"../fs/btrfs/super.c", i32 463, i32 21}
!1817 = !{ptr @.str.562, !1818, !"<string literal>", i1 false, i1 false}
!1818 = !{!"../fs/btrfs/super.c", i32 464, i32 23}
!1819 = !{ptr @.str.563, !1820, !"<string literal>", i1 false, i1 false}
!1820 = !{!"../fs/btrfs/super.c", i32 466, i32 22}
!1821 = !{ptr @.str.564, !1822, !"<string literal>", i1 false, i1 false}
!1822 = !{!"../fs/btrfs/super.c", i32 467, i32 26}
!1823 = !{ptr @.str.565, !1824, !"<string literal>", i1 false, i1 false}
!1824 = !{!"../fs/btrfs/super.c", i32 468, i32 21}
!1825 = !{ptr @.str.566, !1826, !"<string literal>", i1 false, i1 false}
!1826 = !{!"../fs/btrfs/super.c", i32 471, i32 19}
!1827 = !{ptr @tokens, !1828, !"tokens", i1 false, i1 false}
!1828 = !{!"../fs/btrfs/super.c", i32 402, i32 28}
!1829 = !{ptr @.str.567, !1830, !"<string literal>", i1 false, i1 false}
!1830 = !{!"../fs/btrfs/ctree.h", i32 3648, i32 4}
!1831 = !{ptr @.str.568, !1832, !"<string literal>", i1 false, i1 false}
!1832 = !{!"../fs/btrfs/super.c", i32 511, i32 28}
!1833 = !{ptr @.str.569, !1834, !"<string literal>", i1 false, i1 false}
!1834 = !{!"../fs/btrfs/super.c", i32 528, i32 4}
!1835 = !{ptr @.str.570, !1836, !"<string literal>", i1 false, i1 false}
!1836 = !{!"../fs/btrfs/super.c", i32 532, i32 4}
!1837 = !{ptr @.str.571, !1838, !"<string literal>", i1 false, i1 false}
!1838 = !{!"../fs/btrfs/super.c", i32 536, i32 4}
!1839 = !{ptr @.str.572, !1840, !"<string literal>", i1 false, i1 false}
!1840 = !{!"../fs/btrfs/super.c", i32 545, i32 4}
!1841 = !{ptr @.str.573, !1842, !"<string literal>", i1 false, i1 false}
!1842 = !{!"../fs/btrfs/super.c", i32 480, i32 23}
!1843 = !{ptr @.str.574, !1844, !"<string literal>", i1 false, i1 false}
!1844 = !{!"../fs/btrfs/super.c", i32 482, i32 24}
!1845 = !{ptr @.str.575, !1846, !"<string literal>", i1 false, i1 false}
!1846 = !{!"../fs/btrfs/super.c", i32 483, i32 19}
!1847 = !{ptr @rescue_tokens, !1848, !"rescue_tokens", i1 false, i1 false}
!1848 = !{!"../fs/btrfs/super.c", i32 476, i32 28}
!1849 = !{ptr @.str.576, !1850, !"<string literal>", i1 false, i1 false}
!1850 = !{!"../fs/btrfs/super.c", i32 491, i32 3}
!1851 = distinct !{null, !69, !"__already_done", i1 false, i1 false}
!1852 = !{ptr @.str.577, !69, !"<string literal>", i1 false, i1 false}
!1853 = distinct !{null, !69, !"__warned", i1 false, i1 false}
!1854 = !{ptr @.str.578, !69, !"<string literal>", i1 false, i1 false}
!1855 = distinct !{null, !1856, !"__already_done", i1 false, i1 false}
!1856 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!1857 = !{ptr @.str.579, !1856, !"<string literal>", i1 false, i1 false}
!1858 = distinct !{null, !1859, !"__warned", i1 false, i1 false}
!1859 = !{!"../include/linux/rcu_sync.h", i32 34, i32 2}
!1860 = !{ptr @.str.580, !1859, !"<string literal>", i1 false, i1 false}
!1861 = !{ptr @.str.581, !1859, !"<string literal>", i1 false, i1 false}
!1862 = !{ptr @.str.582, !1863, !"<string literal>", i1 false, i1 false}
!1863 = !{!"../fs/btrfs/super.c", i32 2502, i32 11}
!1864 = !{ptr @btrfs_misc, !1865, !"btrfs_misc", i1 false, i1 false}
!1865 = !{!"../fs/btrfs/super.c", i32 2500, i32 26}
!1866 = !{ptr @btrfs_ctl_fops, !1867, !"btrfs_ctl_fops", i1 false, i1 false}
!1867 = !{!"../fs/btrfs/super.c", i32 2492, i32 37}
!1868 = !{ptr @.str.583, !1869, !"<string literal>", i1 false, i1 false}
!1869 = !{!"../fs/btrfs/super.c", i32 2359, i32 11}
!1870 = !{ptr @btrfs_root_fs_type, !1871, !"btrfs_root_fs_type", i1 false, i1 false}
!1871 = !{!"../fs/btrfs/super.c", i32 2357, i32 32}
!1872 = !{ptr @.str.584, !1873, !"<string literal>", i1 false, i1 false}
!1873 = !{!"../fs/btrfs/super.c", i32 1720, i32 38}
!1874 = !{ptr @.str.585, !1875, !"<string literal>", i1 false, i1 false}
!1875 = !{!"../fs/btrfs/super.c", i32 1722, i32 30}
!1876 = !{ptr @.str.586, !1877, !"<string literal>", i1 false, i1 false}
!1877 = !{!"../fs/btrfs/super.c", i32 1354, i32 3}
!1878 = !{ptr @.str.587, !1879, !"<string literal>", i1 false, i1 false}
!1879 = !{!"../fs/btrfs/super.c", i32 1360, i32 3}
!1880 = !{ptr @btrfs_super_ops, !1881, !"btrfs_super_ops", i1 false, i1 false}
!1881 = !{!"../fs/btrfs/super.c", i32 2476, i32 38}
!1882 = !{ptr @.str.588, !1883, !"<string literal>", i1 false, i1 false}
!1883 = !{!"../fs/btrfs/super.c", i32 2127, i32 3}
!1884 = distinct !{null, !1885, !"__warned", i1 false, i1 false}
!1885 = !{!"../fs/btrfs/super.c", i32 2158, i32 2}
!1886 = !{ptr @.str.589, !1885, !"<string literal>", i1 false, i1 false}
!1887 = !{ptr @.str.590, !1888, !"<string literal>", i1 false, i1 false}
!1888 = !{!"../fs/btrfs/ctree.h", i32 3491, i32 2}
!1889 = !{ptr @.str.591, !1888, !"<string literal>", i1 false, i1 false}
!1890 = !{ptr @.str.592, !1888, !"<string literal>", i1 false, i1 false}
!1891 = !{ptr @assertfail._entry, !1888, !"_entry", i1 false, i1 false}
!1892 = !{ptr @assertfail._entry_ptr, !1888, !"_entry_ptr", i1 false, i1 false}
!1893 = distinct !{null, !1894, !"__warned", i1 false, i1 false}
!1894 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!1895 = !{ptr @.str.593, !1894, !"<string literal>", i1 false, i1 false}
!1896 = !{ptr @.str.594, !1894, !"<string literal>", i1 false, i1 false}
!1897 = distinct !{null, !1898, !"__warned", i1 false, i1 false}
!1898 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!1899 = !{ptr @.str.595, !1898, !"<string literal>", i1 false, i1 false}
!1900 = !{ptr @.str.596, !1901, !"<string literal>", i1 false, i1 false}
!1901 = !{!"../fs/btrfs/super.c", i32 1924, i32 3}
!1902 = !{ptr @.str.597, !1903, !"<string literal>", i1 false, i1 false}
!1903 = !{!"../fs/btrfs/super.c", i32 2007, i32 4}
!1904 = !{ptr @.str.598, !1905, !"<string literal>", i1 false, i1 false}
!1905 = !{!"../fs/btrfs/super.c", i32 2018, i32 4}
!1906 = !{ptr @.str.599, !1907, !"<string literal>", i1 false, i1 false}
!1907 = !{!"../fs/btrfs/super.c", i32 2025, i32 4}
!1908 = !{ptr @.str.600, !1909, !"<string literal>", i1 false, i1 false}
!1909 = !{!"../fs/btrfs/super.c", i32 1830, i32 2}
!1910 = !{ptr @.str.601, !1911, !"<string literal>", i1 false, i1 false}
!1911 = !{!"../include/linux/wait_bit.h", i32 73, i32 2}
!1912 = !{ptr @.str.602, !1913, !"<string literal>", i1 false, i1 false}
!1913 = !{!"../fs/btrfs/super.c", i32 1441, i32 17}
!1914 = !{ptr @.str.603, !1915, !"<string literal>", i1 false, i1 false}
!1915 = !{!"../fs/btrfs/super.c", i32 1443, i32 17}
!1916 = !{ptr @.str.604, !1917, !"<string literal>", i1 false, i1 false}
!1917 = !{!"../fs/btrfs/super.c", i32 1445, i32 17}
!1918 = !{ptr @.str.605, !1919, !"<string literal>", i1 false, i1 false}
!1919 = !{!"../fs/btrfs/super.c", i32 1447, i32 17}
!1920 = !{ptr @.str.606, !1921, !"<string literal>", i1 false, i1 false}
!1921 = !{!"../fs/btrfs/super.c", i32 1449, i32 19}
!1922 = !{ptr @.str.607, !1923, !"<string literal>", i1 false, i1 false}
!1923 = !{!"../fs/btrfs/super.c", i32 1452, i32 19}
!1924 = !{ptr @.str.608, !1925, !"<string literal>", i1 false, i1 false}
!1925 = !{!"../fs/btrfs/super.c", i32 1456, i32 20}
!1926 = !{ptr @.str.609, !1927, !"<string literal>", i1 false, i1 false}
!1927 = !{!"../fs/btrfs/super.c", i32 1458, i32 20}
!1928 = !{ptr @.str.610, !1929, !"<string literal>", i1 false, i1 false}
!1929 = !{!"../fs/btrfs/super.c", i32 1460, i32 20}
!1930 = !{ptr @.str.611, !1931, !"<string literal>", i1 false, i1 false}
!1931 = !{!"../fs/btrfs/super.c", i32 1463, i32 17}
!1932 = !{ptr @.str.612, !1933, !"<string literal>", i1 false, i1 false}
!1933 = !{!"../fs/btrfs/super.c", i32 1465, i32 17}
!1934 = !{ptr @.str.613, !1935, !"<string literal>", i1 false, i1 false}
!1935 = !{!"../fs/btrfs/super.c", i32 1467, i32 17}
!1936 = !{ptr @.str.614, !1937, !"<string literal>", i1 false, i1 false}
!1937 = !{!"../fs/btrfs/super.c", i32 1469, i32 17}
!1938 = !{ptr @.str.615, !1939, !"<string literal>", i1 false, i1 false}
!1939 = !{!"../fs/btrfs/super.c", i32 1479, i32 17}
!1940 = !{ptr @.str.616, !1941, !"<string literal>", i1 false, i1 false}
!1941 = !{!"../fs/btrfs/super.c", i32 1481, i32 17}
!1942 = !{ptr @.str.617, !1943, !"<string literal>", i1 false, i1 false}
!1943 = !{!"../fs/btrfs/super.c", i32 1483, i32 17}
!1944 = !{ptr @.str.618, !1945, !"<string literal>", i1 false, i1 false}
!1945 = !{!"../fs/btrfs/super.c", i32 1485, i32 17}
!1946 = !{ptr @.str.619, !1947, !"<string literal>", i1 false, i1 false}
!1947 = !{!"../fs/btrfs/super.c", i32 1487, i32 17}
!1948 = !{ptr @.str.620, !1949, !"<string literal>", i1 false, i1 false}
!1949 = !{!"../fs/btrfs/super.c", i32 1489, i32 17}
!1950 = !{ptr @.str.621, !1951, !"<string literal>", i1 false, i1 false}
!1951 = !{!"../fs/btrfs/super.c", i32 1491, i32 17}
!1952 = !{ptr @.str.622, !1953, !"<string literal>", i1 false, i1 false}
!1953 = !{!"../fs/btrfs/super.c", i32 1493, i32 17}
!1954 = !{ptr @.str.623, !1955, !"<string literal>", i1 false, i1 false}
!1955 = !{!"../fs/btrfs/super.c", i32 1495, i32 17}
!1956 = !{ptr @.str.624, !1957, !"<string literal>", i1 false, i1 false}
!1957 = !{!"../fs/btrfs/super.c", i32 1497, i32 17}
!1958 = !{ptr @.str.625, !1959, !"<string literal>", i1 false, i1 false}
!1959 = !{!"../fs/btrfs/super.c", i32 1499, i32 17}
!1960 = !{ptr @.str.626, !1961, !"<string literal>", i1 false, i1 false}
!1961 = !{!"../fs/btrfs/super.c", i32 1501, i32 17}
!1962 = !{ptr @.str.627, !1963, !"<string literal>", i1 false, i1 false}
!1963 = !{!"../fs/btrfs/super.c", i32 1503, i32 17}
!1964 = !{ptr @.str.628, !1965, !"<string literal>", i1 false, i1 false}
!1965 = !{!"../fs/btrfs/super.c", i32 1506, i32 17}
!1966 = !{ptr @.str.629, !1967, !"<string literal>", i1 false, i1 false}
!1967 = !{!"../fs/btrfs/super.c", i32 1508, i32 17}
!1968 = !{ptr @.str.630, !1969, !"<string literal>", i1 false, i1 false}
!1969 = !{!"../fs/btrfs/super.c", i32 1510, i32 19}
!1970 = !{ptr @.str.631, !1971, !"<string literal>", i1 false, i1 false}
!1971 = !{!"../fs/btrfs/super.c", i32 1514, i32 19}
!1972 = !{ptr @.str.632, !1973, !"<string literal>", i1 false, i1 false}
!1973 = !{!"../fs/btrfs/super.c", i32 1516, i32 17}
!1974 = !{ptr @.str.633, !1975, !"<string literal>", i1 false, i1 false}
!1975 = !{!"../fs/btrfs/super.c", i32 1518, i32 19}
!1976 = !{ptr @.str.634, !1977, !"<string literal>", i1 false, i1 false}
!1977 = !{!"../fs/btrfs/super.c", i32 1521, i32 17}
!1978 = !{ptr @.str.635, !1979, !"<string literal>", i1 false, i1 false}
!1979 = !{!"../fs/btrfs/super.c", i32 1523, i32 17}
!1980 = !{ptr @.str.636, !1981, !"<string literal>", i1 false, i1 false}
!1981 = !{!"../fs/btrfs/super.c", i32 1526, i32 17}
!1982 = !{ptr @.str.637, !1983, !"<string literal>", i1 false, i1 false}
!1983 = !{!"../fs/btrfs/super.c", i32 1527, i32 18}
!1984 = !{ptr @.str.638, !1985, !"<string literal>", i1 false, i1 false}
!1985 = !{!"../fs/btrfs/super.c", i32 1532, i32 17}
!1986 = !{ptr @.str.639, !1987, !"<string literal>", i1 false, i1 false}
!1987 = !{!"../fs/btrfs/super.c", i32 1533, i32 32}
!1988 = !{ptr @.str.640, !1989, !"<string literal>", i1 false, i1 false}
!1989 = !{!"../fs/btrfs/super.c", i32 1429, i32 18}
!1990 = !{ptr @.str.641, !1991, !"<string literal>", i1 false, i1 false}
!1991 = !{!"../fs/btrfs/super.c", i32 1429, i32 45}
!1992 = distinct !{null, !1993, !"__warned", i1 false, i1 false}
!1993 = !{!"../fs/btrfs/super.c", i32 2470, i32 16}
!1994 = !{ptr @btrfs_fs_type, !1995, !"btrfs_fs_type", i1 false, i1 false}
!1995 = !{!"../fs/btrfs/super.c", i32 2349, i32 32}
!1996 = !{ptr @.str.642, !1997, !"<string literal>", i1 false, i1 false}
!1997 = !{!"../fs/btrfs/super.c", i32 1602, i32 4}
!1998 = !{ptr @.str.643, !1999, !"<string literal>", i1 false, i1 false}
!1999 = !{!"../fs/btrfs/super.c", i32 1612, i32 4}
!2000 = !{ptr @.str.644, !2001, !"<string literal>", i1 false, i1 false}
!2001 = !{!"../fs/btrfs/super.c", i32 1306, i32 55}
!2002 = !{ptr @btrfs_print_mod_info.options, !2003, !"options", i1 false, i1 false}
!2003 = !{!"../fs/btrfs/super.c", i32 2521, i32 20}
!2004 = !{ptr @.str.645, !2005, !"<string literal>", i1 false, i1 false}
!2005 = !{!"../fs/btrfs/super.c", i32 2545, i32 2}
!2006 = !{ptr @.str.646, !2005, !"<string literal>", i1 false, i1 false}
!2007 = !{ptr @btrfs_print_mod_info._entry, !2005, !"_entry", i1 false, i1 false}
!2008 = !{ptr @btrfs_print_mod_info._entry_ptr, !2005, !"_entry_ptr", i1 false, i1 false}
!2009 = !{!"sp"}
!2010 = !{i32 1, !"wchar_size", i32 2}
!2011 = !{i32 1, !"min_enum_size", i32 4}
!2012 = !{i32 8, !"branch-target-enforcement", i32 0}
!2013 = !{i32 8, !"sign-return-address", i32 0}
!2014 = !{i32 8, !"sign-return-address-all", i32 0}
!2015 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!2016 = !{i32 7, !"uwtable", i32 1}
!2017 = !{i32 7, !"frame-pointer", i32 2}
!2018 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!2019 = !{!"branch_weights", i32 2000, i32 1}
!2020 = !{!"branch_weights", i32 1, i32 2000}
!2021 = !{!"auto-init"}
!2022 = !{i64 2152503057}
!2023 = !{i64 924692, i64 924753}
!2024 = !{i64 927424}
!2025 = !{i64 927709}
!2026 = !{i64 2152511907}
!2027 = !{i64 2152512649}
!2028 = !{i64 2152522144}
!2029 = !{i64 2152531621}
!2030 = !{i64 2148343827, i64 2148343832, i64 2148343845, i64 2148343889, i64 2148343923, i64 2148343944}
!2031 = !{i64 2155585584}
!2032 = !{i64 2155585799}
!2033 = !{i64 2149366507}
!2034 = !{i64 2149367543}
!2035 = !{i8 0, i8 2}
!2036 = !{i64 2148369014, i64 2148369294, i64 2148369628, i64 2148369962}
!2037 = !{i64 2164942113}
!2038 = !{i64 2149357948}
!2039 = !{i64 2149358214}
!2040 = !{i64 2158365476, i64 2158365958, i64 2158365513, i64 2158365569, i64 2158365603, i64 2158365627, i64 2158365668, i64 2158365689, i64 2158365717, i64 2158365751}
