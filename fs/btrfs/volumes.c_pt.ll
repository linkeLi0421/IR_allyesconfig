; ModuleID = '/llk/IR_all_yes/fs/btrfs/volumes.c_pt.bc'
source_filename = "../fs/btrfs/volumes.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.btrfs_raid_attr = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], i64 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.atomic_t = type { i32 }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon }
%union.anon = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.lock_class_key = type { %union.anon.0 }
%union.anon.0 = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t, %union.anon.57 }
%union.anon.57 = type { i32 }
%struct.cpumask = type { [1 x i32] }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.btrfs_device = type { %struct.list_head, %struct.list_head, %struct.list_head, ptr, ptr, ptr, i64, ptr, ptr, i32, i32, i8, %struct.seqcount, i64, i64, i64, i64, i32, i32, i64, i32, [16 x i8], i64, i64, ptr, %struct.completion, ptr, i32, %struct.atomic_t, [5 x %struct.atomic_t], %struct.extent_io_tree, %struct.completion, %struct.kobject, i64 }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.extent_io_tree = type { %struct.rb_root, ptr, ptr, i64, i8, i8, %struct.spinlock }
%struct.rb_root = type { ptr }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.btrfs_fs_devices = type { [16 x i8], [16 x i8], i8, %struct.list_head, i64, i64, i64, i64, i64, i64, i64, ptr, %struct.mutex, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32, i8, ptr, %struct.kobject, ptr, ptr, %struct.completion, i32, i32 }
%struct.rcu_string = type { %struct.callback_head, [0 x i8] }
%struct.callback_head = type { ptr, ptr }
%struct.btrfs_super_block = type <{ [32 x i8], [16 x i8], i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i64, i64, i64, i16, i8, i8, i8, %struct.btrfs_dev_item, [256 x i8], i64, i64, [16 x i8], [28 x i64], [2048 x i8], [4 x %struct.btrfs_root_backup], [565 x i8] }>
%struct.btrfs_dev_item = type <{ i64, i64, i64, i32, i32, i32, i64, i64, i64, i32, i8, i8, [16 x i8], [16 x i8] }>
%struct.btrfs_root_backup = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [4 x i64], i8, i8, i8, i8, i8, i8, [10 x i8] }
%struct.block_device = type { i64, i64, ptr, i32, i8, i32, i32, ptr, ptr, ptr, %struct.device, ptr, i32, i8, ptr, i8, %struct.spinlock, ptr, ptr, i32, %struct.mutex, ptr, ptr, i8 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.xarray, ptr, ptr, ptr, ptr, i32, i32, %struct.mutex, i32, ptr, ptr, %struct.list_head, ptr, %struct.atomic_t, ptr, %struct.kobject, ptr, i32, ptr, %struct.lockdep_map, i64 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.request_queue = type { ptr, ptr, %struct.percpu_ref, ptr, ptr, ptr, ptr, i32, ptr, i32, ptr, i32, %struct.atomic_t, i32, %struct.spinlock, ptr, %struct.kobject, ptr, %struct.blk_integrity, ptr, i32, i32, i32, i32, ptr, i32, i32, ptr, ptr, %struct.timer_list, %struct.work_struct, %struct.atomic_t, ptr, %struct.list_head, [1 x i32], ptr, %struct.list_head, %struct.queue_limits, i32, i32, ptr, ptr, i32, i32, i32, %struct.mutex, ptr, ptr, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, ptr, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, i32, ptr, %struct.list_head, %struct.bio_set, ptr, ptr, ptr, i8, [5 x i64], ptr, [0 x %struct.srcu_struct] }
%struct.percpu_ref = type { i32, ptr }
%struct.blk_integrity = type { ptr, i8, i8, i8, i8 }
%struct.queue_limits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.bio_set = type { ptr, i32, ptr, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, i32, %struct.spinlock, %struct.bio_list, %struct.work_struct, ptr, %struct.hlist_node }
%struct.mempool_s = type { %struct.spinlock, i32, i32, ptr, ptr, ptr, ptr, %struct.wait_queue_head }
%struct.bio_list = type { ptr, ptr }
%struct.srcu_struct = type { [3 x %struct.srcu_node], [3 x ptr], %struct.mutex, %struct.spinlock, %struct.mutex, i32, i32, i32, i32, i32, ptr, i32, %struct.mutex, %struct.completion, %struct.atomic_t, %struct.delayed_work, %struct.lockdep_map }
%struct.srcu_node = type { %struct.spinlock, [4 x i32], [4 x i32], i32, ptr, i32, i32 }
%struct.page = type { i32, %union.anon.2, %union.anon.75, %struct.atomic_t, i32 }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.75 = type { %struct.atomic_t }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.76, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.77, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.78, ptr, %struct.address_space, %struct.list_head, %union.anon.79, i32, i32, ptr, ptr, ptr, ptr }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%union.anon.76 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%union.anon.77 = type { %struct.callback_head }
%struct.atomic64_t = type { i64 }
%union.anon.78 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%union.anon.79 = type { ptr }
%struct.btrfs_dev_lookup_args = type { i64, ptr, ptr, i8 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.47, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.10 }
%struct.llist_node = type { ptr }
%union.anon.10 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.12 }
%union.anon.12 = type { %struct.anon.13 }
%struct.anon.13 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.tlbflush_unmap_batch = type {}
%union.anon.47 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.btrfs_disk_key = type <{ i64, i8, i64 }>
%struct.btrfs_key = type <{ i64, i8, i64 }>
%struct.btrfs_fs_info = type { [16 x i8], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.rwlock_t, %struct.rb_root, %struct.spinlock, %struct.xarray, %struct.spinlock, i64, %struct.rb_root, %struct.atomic64_t, %struct.extent_io_tree, %struct.extent_map_tree, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, i64, i64, i64, i64, i64, i32, i32, i8, i32, i32, i64, ptr, %struct.wait_queue_head, %struct.wait_queue_head, %struct.wait_queue_head, %struct.wait_queue_head, %struct.spinlock, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.mutex, %struct.mutex, %struct.mutex, ptr, %struct.mutex, %struct.rw_semaphore, %struct.rw_semaphore, %struct.rw_semaphore, %struct.spinlock, %struct.mutex, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.list_head, %struct.atomic_t, %struct.wait_queue_head, %struct.atomic64_t, %struct.rwlock_t, %struct.rb_root, %struct.list_head, %struct.atomic_t, %struct.spinlock, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, %struct.percpu_counter, %struct.percpu_counter, %struct.percpu_counter, i32, i32, %struct.list_head, ptr, %struct.list_head, ptr, ptr, %struct.btrfs_free_cluster, %struct.btrfs_free_cluster, %struct.spinlock, %struct.rb_root, %struct.atomic_t, %struct.seqlock_t, i64, i64, i64, %struct.spinlock, %struct.mutex, %struct.atomic_t, %struct.atomic_t, ptr, %struct.wait_queue_head, %struct.atomic_t, i32, i32, ptr, %struct.mutex, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.wait_queue_head, %struct.refcount_struct, ptr, ptr, ptr, ptr, %struct.btrfs_discard_ctl, i32, i64, %struct.rb_root, %struct.spinlock, ptr, %struct.mutex, %struct.list_head, i64, %struct.mutex, %struct.btrfs_key, ptr, %struct.completion, %struct.btrfs_work, i8, i32, ptr, %struct.spinlock, %struct.xarray, i32, %struct.btrfs_dev_replace, %struct.semaphore, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.list_head, i32, %struct.spinlock, %struct.list_head, %struct.mutex, %struct.mutex, i32, i32, i32, i32, i32, i32, %struct.spinlock, %struct.rb_root, ptr, i32, %union.anon.84, %struct.mutex, %struct.spinlock, i64, %struct.spinlock, i64, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.rb_root, ptr, ptr, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.extent_map_tree = type { %struct.rb_root_cached, %struct.list_head, %struct.rwlock_t }
%struct.btrfs_block_rsv = type { i64, i64, ptr, %struct.spinlock, i16, i16, i16, i64, i64 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.btrfs_free_cluster = type { %struct.spinlock, %struct.spinlock, %struct.rb_root, i64, i64, i8, ptr, %struct.list_head }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.btrfs_discard_ctl = type { ptr, %struct.delayed_work, %struct.spinlock, ptr, [3 x %struct.list_head], i64, i64, %struct.atomic_t, %struct.atomic64_t, i64, i64, i32, i32, i64, i64, %struct.atomic64_t }
%struct.btrfs_work = type { ptr, ptr, ptr, %struct.work_struct, %struct.list_head, ptr, i32 }
%struct.btrfs_dev_replace = type { i64, i64, i64, %struct.atomic64_t, %struct.atomic64_t, i64, i64, i64, i64, i64, i32, i32, ptr, ptr, %struct.mutex, %struct.rw_semaphore, %struct.btrfs_scrub_progress, %struct.percpu_counter, %struct.wait_queue_head }
%struct.btrfs_scrub_progress = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%union.anon.84 = type { i64 }
%struct.btrfs_path = type { [8 x ptr], [8 x i32], [8 x i8], i8, i8, i8 }
%struct.extent_buffer = type { i64, i32, i32, ptr, %struct.spinlock, %struct.atomic_t, %struct.atomic_t, i32, %struct.callback_head, i32, i8, %struct.rw_semaphore, [16 x ptr], %struct.list_head, %struct.list_head }
%struct.btrfs_header = type <{ [32 x i8], [16 x i8], i64, i64, [16 x i8], i64, i64, i32, i8 }>
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, i16, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [24 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [24 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.hlist_head = type { ptr }
%struct.list_lru = type { ptr, %struct.list_head, i32, i8 }
%struct.path = type { ptr, ptr }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, ptr, %struct.qstr, ptr, [36 x i8], %struct.lockref, ptr, ptr, i32, ptr, %union.anon.59, %struct.list_head, %struct.list_head, %union.anon.60 }
%struct.hlist_bl_node = type { ptr, ptr }
%struct.qstr = type { %union.anon.5, ptr }
%union.anon.5 = type { i64 }
%struct.lockref = type { %union.anon.7 }
%union.anon.7 = type { %struct.anon.8 }
%struct.anon.8 = type { %struct.spinlock, i32 }
%union.anon.59 = type { %struct.list_head }
%union.anon.60 = type { %struct.hlist_node }
%struct.btrfs_swapfile_pin = type { %struct.rb_node, ptr, ptr, i8, i32 }
%struct.btrfs_trans_handle = type { i64, i64, i64, i32, ptr, ptr, ptr, ptr, %struct.refcount_struct, i32, i16, i8, i8, i8, i8, i8, ptr, %struct.list_head }
%struct.btrfs_transaction = type { i64, %struct.atomic_t, %struct.atomic_t, %struct.refcount_struct, i32, i32, i32, %struct.list_head, %struct.extent_io_tree, i64, %struct.wait_queue_head, %struct.wait_queue_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.extent_io_tree, %struct.mutex, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.btrfs_delayed_ref_root, ptr, %struct.atomic_t, %struct.wait_queue_head, %struct.spinlock, %struct.list_head }
%struct.btrfs_delayed_ref_root = type { %struct.rb_root_cached, %struct.rb_root, %struct.spinlock, %struct.atomic_t, i32, i32, i64, i32, i64, i64 }
%struct.btrfs_item_batch = type { ptr, ptr, i32, i32 }
%struct.extent_map = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, ptr, %struct.refcount_struct, i32, %struct.list_head }
%struct.map_lookup = type { i64, i32, i32, i64, i32, i32, i32, [0 x %struct.btrfs_io_stripe] }
%struct.btrfs_io_stripe = type { ptr, i64, i64 }
%struct.alloc_chunk_ctl = type { i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, i64, i32 }
%struct.btrfs_device_info = type { ptr, i64, i64, i64 }
%struct.btrfs_block_group = type { ptr, ptr, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.rw_semaphore, i32, i32, i8, i32, i32, ptr, i64, ptr, ptr, %struct.rb_node, %struct.list_head, %struct.refcount_struct, %struct.list_head, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.list_head, i32, i64, i64, i32, %struct.list_head, %struct.list_head, %struct.btrfs_io_ctl, %struct.atomic_t, %struct.atomic_t, %struct.mutex, i32, i8, i32, %struct.btrfs_full_stripe_locks_tree, i64, i64, i64, i64, ptr, %struct.list_head }
%struct.btrfs_io_ctl = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32 }
%struct.btrfs_full_stripe_locks_tree = type { %struct.rb_root, %struct.mutex }
%struct.btrfs_chunk = type { i64, i64, i64, i64, i32, i32, i32, i16, i16, %struct.btrfs_stripe }
%struct.btrfs_stripe = type { i64, i64, [16 x i8] }
%struct.btrfs_root = type { %struct.rb_node, ptr, ptr, ptr, ptr, i32, %struct.btrfs_root_item, %struct.btrfs_key, ptr, %struct.extent_io_tree, %struct.mutex, %struct.spinlock, ptr, %struct.mutex, %struct.wait_queue_head, [2 x %struct.wait_queue_head], [2 x %struct.list_head], %struct.atomic_t, [2 x %struct.atomic_t], %struct.atomic_t, i32, i32, i32, i32, i64, i32, i64, %struct.btrfs_key, %struct.btrfs_key, %struct.list_head, %struct.list_head, [2 x %struct.spinlock], [2 x %struct.list_head], %struct.spinlock, %struct.rb_root, %struct.xarray, i32, %struct.spinlock, %struct.refcount_struct, %struct.mutex, %struct.spinlock, %struct.list_head, %struct.list_head, i64, %struct.mutex, %struct.spinlock, %struct.list_head, %struct.list_head, i64, %struct.list_head, i32, i32, %struct.btrfs_drew_lock, %struct.atomic_t, %struct.spinlock, i64, i64, %struct.wait_queue_head, %struct.atomic_t, %struct.btrfs_qgroup_swapped_blocks, %struct.extent_io_tree, i64, %struct.list_head }
%struct.btrfs_root_item = type <{ %struct.btrfs_inode_item, i64, i64, i64, i64, i64, i64, i64, i32, %struct.btrfs_disk_key, i8, i8, i64, [16 x i8], [16 x i8], [16 x i8], i64, i64, i64, i64, %struct.btrfs_timespec, %struct.btrfs_timespec, %struct.btrfs_timespec, %struct.btrfs_timespec, [8 x i64] }>
%struct.btrfs_inode_item = type { i64, i64, i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, [4 x i64], %struct.btrfs_timespec, %struct.btrfs_timespec, %struct.btrfs_timespec, %struct.btrfs_timespec }
%struct.btrfs_timespec = type <{ i64, i32 }>
%struct.btrfs_drew_lock = type { %struct.atomic_t, %struct.percpu_counter, %struct.wait_queue_head, %struct.wait_queue_head }
%struct.btrfs_qgroup_swapped_blocks = type { %struct.spinlock, i8, [8 x %struct.rb_root] }
%struct.btrfs_balance_control = type { %struct.btrfs_balance_args, %struct.btrfs_balance_args, %struct.btrfs_balance_args, i64, %struct.btrfs_balance_progress }
%struct.btrfs_balance_args = type { i64, %union.anon.80, i64, i64, i64, i64, i64, i64, i64, %union.anon.82, i32, i32, [6 x i64] }
%union.anon.80 = type { i64 }
%union.anon.82 = type { i64 }
%struct.btrfs_balance_progress = type { i64, i64, i64 }
%struct.btrfs_disk_balance_args = type { i64, %union.anon.88, i64, i64, i64, i64, i64, i64, i64, %union.anon.90, i32, i32, [6 x i64] }
%union.anon.88 = type { i64 }
%union.anon.90 = type { i64 }
%struct.anon.81 = type { i32, i32 }
%struct.anon.83 = type { i32, i32 }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.btrfs_space_info = type { %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i32, i8, i32, i64, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i64, i64, %struct.rw_semaphore, [9 x %struct.list_head], %struct.kobject, [9 x ptr] }
%struct.btrfs_io_geometry = type { i64, i64, i64, i64, i64, i64 }
%struct.btrfs_io_context = type { %struct.refcount_struct, %struct.atomic_t, ptr, i64, ptr, ptr, ptr, %struct.atomic_t, i32, i32, i32, i32, ptr, ptr, [0 x %struct.btrfs_io_stripe] }
%struct.bio = type { ptr, ptr, i32, i16, i16, i16, i8, %struct.atomic_t, %struct.bvec_iter, i32, ptr, ptr, ptr, %struct.bio_issue, i64, ptr, %union.anon.30, i16, i16, %struct.atomic_t, ptr, ptr, [0 x %struct.bio_vec] }
%struct.bvec_iter = type <{ i64, i32, i32, i32 }>
%struct.bio_issue = type { i64 }
%union.anon.30 = type { ptr }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.btrfs_zoned_device_info = type { i64, i8, i32, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, [6 x %struct.blk_zone] }
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.btrfs_ioctl_get_dev_stats = type { i64, i64, i64, [5 x i64], [121 x i64] }

@btrfs_raid_array = dso_local constant { [9 x %struct.btrfs_raid_attr], [64 x i8] } { [9 x %struct.btrfs_raid_attr] [%struct.btrfs_raid_attr { i8 2, i8 1, i8 0, i8 2, i8 1, i8 2, i8 2, i8 0, i8 2, [8 x i8] c"raid10\00\00", i64 64 }, %struct.btrfs_raid_attr { i8 1, i8 1, i8 2, i8 2, i8 1, i8 2, i8 2, i8 0, i8 1, [8 x i8] c"raid1\00\00\00", i64 16 }, %struct.btrfs_raid_attr { i8 1, i8 2, i8 1, i8 1, i8 0, i8 1, i8 2, i8 0, i8 0, [8 x i8] c"dup\00\00\00\00\00", i64 32 }, %struct.btrfs_raid_attr { i8 1, i8 1, i8 0, i8 1, i8 0, i8 1, i8 1, i8 0, i8 0, [8 x i8] c"raid0\00\00\00", i64 8 }, %struct.btrfs_raid_attr { i8 1, i8 1, i8 1, i8 1, i8 0, i8 1, i8 1, i8 0, i8 0, [8 x i8] c"single\00\00", i64 0 }, %struct.btrfs_raid_attr { i8 1, i8 1, i8 0, i8 2, i8 1, i8 1, i8 1, i8 1, i8 3, [8 x i8] c"raid5\00\00\00", i64 128 }, %struct.btrfs_raid_attr { i8 1, i8 1, i8 0, i8 3, i8 2, i8 1, i8 1, i8 2, i8 4, [8 x i8] c"raid6\00\00\00", i64 256 }, %struct.btrfs_raid_attr { i8 1, i8 1, i8 3, i8 3, i8 2, i8 3, i8 3, i8 0, i8 9, [8 x i8] c"raid1c3\00", i64 512 }, %struct.btrfs_raid_attr { i8 1, i8 1, i8 4, i8 4, i8 3, i8 4, i8 4, i8 0, i8 10, [8 x i8] c"raid1c4\00", i64 1024 }], [64 x i8] zeroinitializer }, align 32
@.str = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"NONE\00", [27 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%s|\00", [28 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"data\00", [27 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"system\00", [25 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"metadata\00", [23 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"single\00", [25 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"0x%llx|\00", [24 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"uuid_mutex.wait_lock\00", [43 x i8] zeroinitializer }, align 32
@uuid_mutex = dso_local global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.7, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @uuid_mutex, i64 52), ptr getelementptr (i8, ptr @uuid_mutex, i64 52) }, ptr @uuid_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.8, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"uuid_mutex\00", [21 x i8] zeroinitializer }, align 32
@fs_uuids = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @fs_uuids, ptr @fs_uuids }, [24 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"fs/btrfs/volumes.c\00", [45 x i8] zeroinitializer }, align 32
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@.str.10 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"next_device\00", [20 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\014error clearing superblock number %d (%d)\00", [53 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\014cannot remove device %s (devid %llu) due to active swapfile\00", [34 x i8] zeroinitializer }, align 32
@btrfs_rm_device.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.13 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"cur_devices->opened == 1\00", [39 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"fs_devices->seeding\00", [44 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"missing\00", [24 x i8] zeroinitializer }, align 32
@btrfs_init_new_device.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.17 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RCU-list traversed in non-reader section!\00", [54 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\017BTRFS: Transaction aborted (error %d)\0A\00", [55 x i8] zeroinitializer }, align 32
@btrfs_init_new_device.__UNIQUE_ID_ddebug961 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.20, ptr @.str.9, ptr @.str.21, i8 2, i8 -92, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.19 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"btrfs\00", [26 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"btrfs_init_new_device\00", [42 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Transaction aborted (error %d)\00", [33 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\017Transaction aborted (error %d)\00", [63 x i8] zeroinitializer }, align 32
@btrfs_init_new_device.__UNIQUE_ID_ddebug962 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.20, ptr @.str.9, ptr @.str.21, i8 2, i8 -78, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@btrfs_init_new_device.__UNIQUE_ID_ddebug963 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.20, ptr @.str.9, ptr @.str.21, i8 2, i8 -77, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@btrfs_init_new_device.__UNIQUE_ID_ddebug964 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.20, ptr @.str.9, ptr @.str.21, i8 2, i8 -75, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.23 = internal constant { [112 x i8], [48 x i8] } { [112 x i8] c"Failed to relocate sys chunks after device initialization. This can be fixed using the \22btrfs balance\22 command.\00", [48 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\012unable to find logical %llu length %llu\00", [54 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\012found a bad mapping, wanted %llu-%llu, found %llu-%llu\00", [39 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"0\00", [30 x i8] zeroinitializer }, align 32
@btrfs_remove_chunk.__UNIQUE_ID_ddebug965 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.27, ptr @.str.9, ptr @.str.21, i8 3, i8 14, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.27 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"btrfs_remove_chunk\00", [45 x i8] zeroinitializer }, align 32
@btrfs_remove_chunk.__UNIQUE_ID_ddebug966 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.27, ptr @.str.9, ptr @.str.21, i8 3, i8 29, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@btrfs_remove_chunk.__UNIQUE_ID_ddebug967 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.27, ptr @.str.9, ptr @.str.21, i8 3, i8 31, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@btrfs_remove_chunk.__UNIQUE_ID_ddebug968 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.27, ptr @.str.9, ptr @.str.21, i8 3, i8 32, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@btrfs_remove_chunk.__UNIQUE_ID_ddebug969 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.27, ptr @.str.9, ptr @.str.21, i8 3, i8 33, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@btrfs_remove_chunk.__UNIQUE_ID_ddebug970 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.27, ptr @.str.9, ptr @.str.21, i8 3, i8 36, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@btrfs_remove_chunk.__UNIQUE_ID_ddebug971 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.27, ptr @.str.9, ptr @.str.21, i8 3, i8 40, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.28 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\016failed to reset zone %llu after relocation\00", [51 x i8] zeroinitializer }, align 32
@__func__.btrfs_relocate_chunk = private unnamed_addr constant [21 x i8] c"btrfs_relocate_chunk\00", align 1
@.str.29 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"\013balance: mixed groups data and metadata options must be the same\00", [61 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\016balance: force reducing metadata redundancy\00", [50 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"\013balance: reduces metadata redundancy, use --force if you want this\00", [59 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\014balance: metadata profile %s has lower redundancy than data profile %s\00", [55 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"!test_bit(BTRFS_FS_BALANCE_RUNNING, &fs_info->flags)\00", [43 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"\016balance: paused\00", [46 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"\016balance: canceled\00", [44 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\016balance: ended with status: %d\00", [63 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"\016balance: resume skipped\00", [38 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"fs_info->exclusive_operation == BTRFS_EXCLOP_BALANCE_PAUSED\00", [36 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"btrfs-balance\00", [18 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\014balance: cannot set exclusive op status, resume manually\00", [37 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"\014uuid_tree_add failed %d\00", [38 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\014btrfs_uuid_scan_kthread failed %d\00", [60 x i8] zeroinitializer }, align 32
@btrfs_create_uuid_tree.__UNIQUE_ID_ddebug972 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.43, ptr @.str.9, ptr @.str.21, i8 4, i8 -82, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.43 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"btrfs_create_uuid_tree\00", [41 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"btrfs-uuid\00", [21 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\014failed to start uuid_scan task\00", [63 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\014could not shrink block group %llu due to active swapfile\00", [37 x i8] zeroinitializer }, align 32
@btrfs_shrink_device.__UNIQUE_ID_ddebug973 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.47, ptr @.str.9, ptr @.str.21, i8 4, i8 -32, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.47 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"btrfs_shrink_device\00", [44 x i8] zeroinitializer }, align 32
@btrfs_create_chunk.__UNIQUE_ID_ddebug990 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.48, ptr @.str.9, ptr @.str.49, i8 5, i8 94, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.48 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"btrfs_create_chunk\00", [45 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%s: no writable device\00", [41 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"\017%s: no writable device\00", [39 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\013invalid chunk type 0x%llx requested\00", [58 x i8] zeroinitializer }, align 32
@btrfs_chunk_alloc_add_chunk_item.__UNIQUE_ID_ddebug991 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.52, ptr @.str.9, ptr @.str.21, i8 5, i8 115, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.52 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"btrfs_chunk_alloc_add_chunk_item\00", [63 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"op != BTRFS_MAP_DISCARD\00", [40 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [101 x i8], [59 x i8] } { [101 x i8] c"\012stripe math has gone wrong, stripe_offset=%llu offset=%llu start=%llu logical=%llu stripe_len=%llu\00", [59 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\012mapping failed logical %llu bio len %llu len %llu\00", [44 x i8] zeroinitializer }, align 32
@btrfs_alloc_device.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.56 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"&dev->data_seqcount\00", [44 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"BTRFS_SUPER_INFO_SIZE <= fs_info->nodesize\00", [53 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\013unexpected item type %u in sys_array at offset %u\00", [44 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\013invalid number of stripes %u in sys_array at offset %u\00", [39 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\013invalid chunk type %llu in sys_array at offset %u\00", [44 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\013sys_array too short to read %u bytes at offset %u\00", [44 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\014chunk %llu missing %d devices, max tolerance is %d for writable mount\00", [56 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"!test_bit(BTRFS_FS_OPEN, &fs_info->flags)\00", [54 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"\013super_num_devices %llu mismatch with num_devices %llu found here\00", [61 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\013super_total_bytes %llu mismatch with fs_devices total_rw_bytes %llu\00", [58 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\014get dev_stats failed, device not found\00", [55 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\014get dev_stats failed, not yet valid\00", [58 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\016device stats zeroed by %s (%d)\00", [63 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"trans->state == TRANS_STATE_COMMIT_DOING\00", [55 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [87 x i8], [41 x i8] } { [87 x i8] c"\013dev extent devid %llu physical offset %llu overlap with previous dev extent end %llu\00", [41 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"btrfs-relocating-repair\00", [40 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"!test_bit(BTRFS_DEV_STATE_FLUSH_SENT, &device->dev_state)\00", [38 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"!test_bit(BTRFS_DEV_STATE_REPLACE_TGT, &device->dev_state)\00", [37 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"list_empty(&device->dev_alloc_list)\00", [60 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"list_empty(&device->post_commit_list)\00", [58 x i8] zeroinitializer }, align 32
@btrfs_open_one_device._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.76, ptr @.str.77, ptr @.str.9, i32 646, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013BTRFS: Invalid seeding and uuid-changed device detected\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"btrfs_open_one_device\00", [42 x i8] zeroinitializer }, align 32
@btrfs_open_one_device._entry_ptr = internal global ptr @btrfs_open_one_device._entry, section ".printk_index", align 4
@.str.78 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"VM_BUG_ON_PAGE(page_ref_count(page) == 0)\00", [54 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod_and_test = external dso_local global %struct.tracepoint, align 4
@device_path_matched.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@device_list_add._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.79, ptr @.str.80, ptr @.str.9, i32 882, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\016BTRFS: device label %s devid %llu transid %llu %s scanned by %s (%d)\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"device_list_add\00", [16 x i8] zeroinitializer }, align 32
@device_list_add._entry_ptr = internal global ptr @device_list_add._entry, section ".printk_index", align 4
@device_list_add._entry.81 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.82, ptr @.str.80, ptr @.str.9, i32 887, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\016BTRFS: device fsid %pU devid %llu transid %llu %s scanned by %s (%d)\0A\00", [56 x i8] zeroinitializer }, align 32
@device_list_add._entry_ptr.83 = internal global ptr @device_list_add._entry.81, section ".printk_index", align 4
@.str.84 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\014duplicate device %s devid %llu generation %llu scanned by %s (%d)\00", [60 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\016devid %llu device path %s changed to %s scanned by %s (%d)\00", [35 x i8] zeroinitializer }, align 32
@device_list_add.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.86 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"fsid\00", [27 x i8] zeroinitializer }, align 32
@alloc_fs_devices.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.87 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"&fs_devs->device_list_mutex\00", [36 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"IS_ALIGNED(*hole_start, zone_size)\00", [61 x i8] zeroinitializer }, align 32
@assertfail._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.90, ptr @.str.91, i32 3491, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\013assertion failed: %s, in %s:%d\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"assertfail\00", [21 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"fs/btrfs/ctree.h\00", [47 x i8] zeroinitializer }, align 32
@assertfail._entry_ptr = internal global ptr @assertfail._entry, section ".printk_index", align 4
@.str.92 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/pagemap.h\00", [40 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"VM_BUG_ON_PAGE(PageTail(page))\00", [33 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"num_devices > 1\00", [16 x i8] zeroinitializer }, align 32
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.96 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.98 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@btrfs_rm_dev_item.__UNIQUE_ID_ddebug952 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.99, ptr @.str.9, ptr @.str.21, i8 1, i8 -26, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.99 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"btrfs_rm_dev_item\00", [46 x i8] zeroinitializer }, align 32
@btrfs_rm_dev_item.__UNIQUE_ID_ddebug953 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.99, ptr @.str.9, ptr @.str.21, i8 1, i8 -25, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@btrfs_init_sprout.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.100 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"&seed_devices->device_list_mutex\00", [63 x i8] zeroinitializer }, align 32
@__seqprop_assert.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@lockdep_recursion = external dso_local global i32, section ".data..percpu", align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@hardirqs_enabled = external dso_local global i32, section ".data..percpu", align 4
@.str.101 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/seqlock.h\00", [40 x i8] zeroinitializer }, align 32
@__func__.btrfs_free_chunk = private unnamed_addr constant [17 x i8] c"btrfs_free_chunk\00", align 1
@.str.102 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Failed lookup while freeing chunk.\00", [61 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Failed to delete chunk item.\00", [35 x i8] zeroinitializer }, align 32
@__tracepoint_btrfs_chunk_free = external dso_local global %struct.tracepoint, align 4
@.str.104 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"include/trace/events/btrfs.h\00", [35 x i8] zeroinitializer }, align 32
@trace_btrfs_chunk_free.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.105 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"\013RAID56 is not yet supported for sectorsize %u with page size %lu\00", [61 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\013balance: invalid convert %s profile %s\00", [55 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"-d%s \00", [26 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"-m%s \00", [26 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"-s%s \00", [26 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"\016balance: %s %s\00", [47 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"resume\00", [25 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"start\00", [26 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"convert=%s,\00", [20 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"soft,\00", [26 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"profiles=%s,\00", [19 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"usage=%llu,\00", [20 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"usage=%u..%u,\00", [18 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"devid=%llu,\00", [20 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"drange=%llu..%llu,\00", [45 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"vrange=%llu..%llu,\00", [45 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"limit=%llu,\00", [20 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"limit=%u..%u,\00", [18 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"stripes=%u..%u,\00", [16 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\016skipping relocation of block group %llu due to active swapfile\00", [63 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\016%d enospc errors during balance\00", [62 x i8] zeroinitializer }, align 32
@__func__.reset_balance_state = private unnamed_addr constant [20 x i8] c"reset_balance_state\00", align 1
@.str.129 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"cache\00", [26 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\013BTRFS: read-only device in alloc_list\0A\00", [55 x i8] zeroinitializer }, align 32
@gather_device_info.__UNIQUE_ID_ddebug984 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.131, ptr @.str.9, ptr @.str.132, i8 5, i8 31, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.131 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"gather_device_info\00", [45 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"%s: devid %llu has no free space, have=%llu want=%llu\00", [42 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\017%s: devid %llu has no free space, have=%llu want=%llu\00", [40 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%s: found more than %llu devices\0A\00", [62 x i8] zeroinitializer }, align 32
@decide_stripe_size.__UNIQUE_ID_ddebug987 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.135, ptr @.str.9, ptr @.str.136, i8 5, i8 61, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.135 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"decide_stripe_size\00", [45 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"%s: not enough devices with free space: have=%d minimum required=%d\00", [60 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\017%s: not enough devices with free space: have=%d minimum required=%d\00", [58 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"devices_info[ctl->ndevs - 1].max_avail == ctl->dev_extent_min\00", [34 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"ctl->stripe_size * data_stripes <= ctl->max_chunk_size\00", [41 x i8] zeroinitializer }, align 32
@__tracepoint_btrfs_chunk_alloc = external dso_local global %struct.tracepoint, align 4
@trace_btrfs_chunk_alloc.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.140 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"RAID56\00", [25 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\016setting incompat feature flag for %s (0x%llx)\00", [48 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"RAID1C34\00", [23 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"bioc_ret\00", [23 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"!IS_ERR(em)\00", [20 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [77 x i8], [51 x i8] } { [77 x i8] c"\012stripe index math went horribly wrong, got stripe_index=%u, num_stripes=%u\00", [51 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"bioc == NULL\00", [19 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"found\00", [26 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"(map->type & (BTRFS_BLOCK_GROUP_RAID1_MASK | BTRFS_BLOCK_GROUP_RAID10))\00", [56 x i8] zeroinitializer }, align 32
@find_live_mirror._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.149, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"_rs.lock\00", [23 x i8] zeroinitializer }, align 32
@__func__.find_live_mirror = private unnamed_addr constant [17 x i8] c"find_live_mirror\00", align 1
@.str.150 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\014unknown read_policy type %u, reset to pid\00", [52 x i8] zeroinitializer }, align 32
@btrfs_op.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.151 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"fs/btrfs/volumes.h\00", [45 x i8] zeroinitializer }, align 32
@submit_stripe_bio.__UNIQUE_ID_ddebug999 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.19, ptr @.str.152, ptr @.str.9, ptr @.str.153, i8 6, i8 -104, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.152 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"submit_stripe_bio\00", [46 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"btrfs_map_bio: rw %d 0x%x, sector=%llu, dev=%lu (%s id %llu), size=%u\00", [58 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\017btrfs_map_bio: rw %d 0x%x, sector=%llu, dev=%lu (%s id %llu), size=%u\00", [56 x i8] zeroinitializer }, align 32
@submit_stripe_bio.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.155 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"dev->bdev\00", [22 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"(args->devid != (u64)-1) || args->missing\00", [54 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\013corrupted chunk tree devid -1 matched\00", [56 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\013failed to init missing dev %llu: %ld\00", [57 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\013failed to add chunk map, start=%llu len=%llu: %d\00", [45 x i8] zeroinitializer }, align 32
@btrfs_report_missing_device._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.149, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@__func__.btrfs_report_missing_device = private unnamed_addr constant [28 x i8] c"btrfs_report_missing_device\00", align 1
@.str.160 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\013devid %llu uuid %pU is missing\00", [63 x i8] zeroinitializer }, align 32
@btrfs_report_missing_device._rs.161 = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.149, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\014devid %llu uuid %pU is missing\00", [63 x i8] zeroinitializer }, align 32
@__const.read_one_dev.args = private unnamed_addr constant { i64, ptr, ptr, i8, [7 x i8] } { i64 -1, ptr null, ptr null, i8 0, [7 x i8] zeroinitializer }, align 8
@.str.163 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\013failed to add missing dev %llu: %ld\00", [58 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"test_bit(BTRFS_DEV_STATE_MISSING, &device->dev_state)\00", [42 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013device total_bytes should be at most %llu but found %llu\00", [37 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\016bdev %s errs: wr %u, rd %u, flush %u, corrupt %u, gen %u\00", [37 x i8] zeroinitializer }, align 32
@btrfs_dev_stat_print_on_load.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.167 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\014error %d while searching for dev_stats item for device %s\00", [36 x i8] zeroinitializer }, align 32
@update_dev_stat_item.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.168 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\014delete too small dev_stats item for device %s failed %d\00", [38 x i8] zeroinitializer }, align 32
@update_dev_stat_item.__warned.169 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.170 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\014insert dev_stats item for device %s failed %d\00", [48 x i8] zeroinitializer }, align 32
@update_dev_stat_item.__warned.171 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@btrfs_dev_stat_print_on_error._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.149, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@__func__.btrfs_dev_stat_print_on_error = private unnamed_addr constant [30 x i8] c"btrfs_dev_stat_print_on_error\00", align 1
@.str.172 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013bdev %s errs: wr %u, rd %u, flush %u, corrupt %u, gen %u\00", [37 x i8] zeroinitializer }, align 32
@btrfs_dev_stat_print_on_error.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.173 = internal constant { [81 x i8], [47 x i8] } { [81 x i8] c"\013dev extent physical offset %llu on devid %llu doesn't have corresponding chunk\00", [47 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [103 x i8], [57 x i8] } { [103 x i8] c"\013dev extent physical offset %llu on devid %llu length doesn't match chunk %llu, have %llu expect %llu\00", [57 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\013too many dev extents for chunk %llu found\00", [52 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\013dev extent physical offset %llu devid %llu has no corresponding chunk\00", [56 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\013failed to find devid %llu\00", [36 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [85 x i8], [43 x i8] } { [85 x i8] c"\013dev extent devid %llu physical offset %llu len %llu is beyond device boundary %llu\00", [43 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [91 x i8], [37 x i8] } { [91 x i8] c"\013zoned: dev extent devid %llu physical offset %llu len %llu is not aligned to device zone\00", [37 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\013chunk %llu has missing dev extent, have %d expect %d\00", [41 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\016zoned: skip relocating block group %llu to repair: EBUSY\00", [37 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\016zoned: relocating block group %llu to repair IO failure\00", [38 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.183 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 4294967268, i64 4294967270]
@__sancov_gen_cov_switch_values.184 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.185 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.186 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.187 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.188 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.189 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.190 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.191 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967268]
@__sancov_gen_cov_switch_values.192 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.193 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967268]
@__sancov_gen_cov_switch_values.194 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.195 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.196 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.197 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.198 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.199 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.200 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.201 = internal global [4 x i64] [i64 2, i64 3, i64 0, i64 5]
@__sancov_gen_cov_switch_values.202 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967279]
@__sancov_gen_cov_switch_values.203 = internal global [4 x i64] [i64 2, i64 32, i64 4294967171, i64 4294967292]
@__sancov_gen_cov_switch_values.204 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 4294967171, i64 4294967268]
@__sancov_gen_cov_switch_values.205 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 4294967268, i64 4294967270]
@__sancov_gen_cov_switch_values.206 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.207 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967268]
@__sancov_gen_cov_switch_values.208 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.209 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 3]
@__sancov_gen_cov_switch_values.210 = internal global [6 x i64] [i64 4, i64 8, i64 0, i64 1, i64 3, i64 13]
@__sancov_gen_cov_switch_values.211 = internal global [6 x i64] [i64 4, i64 8, i64 0, i64 1, i64 3, i64 13]
@__sancov_gen_cov_switch_values.212 = internal global [6 x i64] [i64 4, i64 8, i64 0, i64 1, i64 3, i64 13]
@__sancov_gen_cov_switch_values.213 = internal global [6 x i64] [i64 4, i64 8, i64 0, i64 1, i64 3, i64 13]
@__sancov_gen_cov_switch_values.214 = internal global [4 x i64] [i64 2, i64 8, i64 216, i64 228]
@__sancov_gen_cov_switch_values.215 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.216 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.217 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967262]
@__sancov_gen_cov_switch_values.218 = internal global [4 x i64] [i64 2, i64 8, i64 5, i64 10]
@__sancov_gen_cov_switch_values.219 = internal global [6 x i64] [i64 4, i64 8, i64 0, i64 1, i64 3, i64 13]
@___asan_gen_.220 = private unnamed_addr constant [17 x i8] c"btrfs_raid_array\00", align 1
@___asan_gen_.222 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 41, i32 30 }
@___asan_gen_.225 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 210, i32 14 }
@___asan_gen_.231 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 226, i32 2 }
@___asan_gen_.234 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 227, i32 2 }
@___asan_gen_.237 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 228, i32 2 }
@___asan_gen_.240 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 230, i32 2 }
@___asan_gen_.243 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 237, i32 31 }
@___asan_gen_.247 = private unnamed_addr constant [11 x i8] c"uuid_mutex\00", align 1
@___asan_gen_.252 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 361, i32 1 }
@___asan_gen_.253 = private unnamed_addr constant [9 x i8] c"fs_uuids\00", align 1
@___asan_gen_.255 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 362, i32 8 }
@___asan_gen_.258 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 405, i32 2 }
@___asan_gen_.261 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 2022, i32 2 }
@___asan_gen_.264 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 2081, i32 4 }
@___asan_gen_.270 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 2126, i32 3 }
@___asan_gen_.273 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 2240, i32 3 }
@___asan_gen_.276 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 2304, i32 3 }
@___asan_gen_.279 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 2368, i32 20 }
@___asan_gen_.282 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 2646, i32 2 }
@___asan_gen_.297 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 2705, i32 4 }
@___asan_gen_.300 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 2797, i32 4 }
@___asan_gen_.303 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 3049, i32 3 }
@___asan_gen_.306 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 3055, i32 3 }
@___asan_gen_.309 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 3105, i32 3 }
@___asan_gen_.312 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 3128, i32 4 }
@___asan_gen_.315 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 3291, i32 4 }
@___asan_gen_.318 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4288, i32 4 }
@___asan_gen_.321 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4350, i32 4 }
@___asan_gen_.324 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4353, i32 4 }
@___asan_gen_.327 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4362, i32 3 }
@___asan_gen_.330 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4385, i32 2 }
@___asan_gen_.333 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4394, i32 3 }
@___asan_gen_.336 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4413, i32 3 }
@___asan_gen_.339 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4415, i32 3 }
@___asan_gen_.342 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4468, i32 3 }
@___asan_gen_.345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4473, i32 2 }
@___asan_gen_.348 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4485, i32 8 }
@___asan_gen_.351 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4545, i32 3 }
@___asan_gen_.354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4721, i32 5 }
@___asan_gen_.357 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4768, i32 3 }
@___asan_gen_.360 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4794, i32 3 }
@___asan_gen_.363 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4806, i32 9 }
@___asan_gen_.366 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4809, i32 3 }
@___asan_gen_.369 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4948, i32 5 }
@___asan_gen_.372 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4992, i32 3 }
@___asan_gen_.381 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 5496, i32 4 }
@___asan_gen_.384 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 5501, i32 3 }
@___asan_gen_.387 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 5583, i32 3 }
@___asan_gen_.390 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 6333, i32 2 }
@___asan_gen_.393 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 6345, i32 3 }
@___asan_gen_.396 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 6824, i32 3 }
@___asan_gen_.402 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 6980, i32 2 }
@___asan_gen_.405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7391, i32 2 }
@___asan_gen_.408 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7437, i32 4 }
@___asan_gen_.411 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7455, i32 4 }
@___asan_gen_.414 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7464, i32 4 }
@___asan_gen_.417 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7488, i32 2 }
@___asan_gen_.420 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7541, i32 5 }
@___asan_gen_.423 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7609, i32 2 }
@___asan_gen_.426 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7677, i32 3 }
@___asan_gen_.429 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7686, i32 3 }
@___asan_gen_.432 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7978, i32 3 }
@___asan_gen_.435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7981, i32 3 }
@___asan_gen_.438 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7991, i32 3 }
@___asan_gen_.441 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 8014, i32 2 }
@___asan_gen_.444 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 8238, i32 4 }
@___asan_gen_.447 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 8361, i32 2 }
@___asan_gen_.450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 1165, i32 2 }
@___asan_gen_.453 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 1166, i32 2 }
@___asan_gen_.456 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 1167, i32 2 }
@___asan_gen_.459 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 1168, i32 2 }
@___asan_gen_.468 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 645, i32 4 }
@___asan_gen_.470 = private unnamed_addr constant [22 x i8] c"../include/linux/mm.h\00", align 1
@___asan_gen_.471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.470, i32 717, i32 2 }
@___asan_gen_.480 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 879, i32 4 }
@___asan_gen_.486 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 884, i32 4 }
@___asan_gen_.489 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 950, i32 5 }
@___asan_gen_.492 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 957, i32 4 }
@___asan_gen_.495 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 443, i32 2 }
@___asan_gen_.501 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 386, i32 2 }
@___asan_gen_.504 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 1457, i32 2 }
@___asan_gen_.505 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.516 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 3491, i32 2 }
@___asan_gen_.518 = private unnamed_addr constant [27 x i8] c"../include/linux/pagemap.h\00", align 1
@___asan_gen_.519 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.518, i32 788, i32 2 }
@___asan_gen_.521 = private unnamed_addr constant [30 x i8] c"../include/linux/page-flags.h\00", align 1
@___asan_gen_.522 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.521, i32 260, i32 2 }
@___asan_gen_.525 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 2042, i32 3 }
@___asan_gen_.531 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.533, i32 695, i32 2 }
@___asan_gen_.533 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.534 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.533, i32 723, i32 2 }
@___asan_gen_.537 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 1944, i32 3 }
@___asan_gen_.538 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.543 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 2470, i32 2 }
@___asan_gen_.545 = private unnamed_addr constant [27 x i8] c"../include/linux/seqlock.h\00", align 1
@___asan_gen_.546 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.545, i32 271, i32 2 }
@___asan_gen_.549 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 2969, i32 3 }
@___asan_gen_.552 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 2977, i32 3 }
@___asan_gen_.554 = private unnamed_addr constant [32 x i8] c"../include/trace/events/btrfs.h\00", align 1
@___asan_gen_.555 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.554, i32 1009, i32 1 }
@___asan_gen_.557 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.558 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.557, i32 108, i32 2 }
@___asan_gen_.561 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4083, i32 3 }
@___asan_gen_.564 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4093, i32 2 }
@___asan_gen_.567 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4226, i32 3 }
@___asan_gen_.570 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4231, i32 3 }
@___asan_gen_.573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4236, i32 3 }
@___asan_gen_.582 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4245, i32 2 }
@___asan_gen_.585 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4143, i32 3 }
@___asan_gen_.588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4147, i32 3 }
@___asan_gen_.591 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4152, i32 3 }
@___asan_gen_.594 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4156, i32 3 }
@___asan_gen_.597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4159, i32 3 }
@___asan_gen_.600 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4163, i32 3 }
@___asan_gen_.603 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4166, i32 3 }
@___asan_gen_.606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4170, i32 3 }
@___asan_gen_.609 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4174, i32 3 }
@___asan_gen_.612 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4177, i32 3 }
@___asan_gen_.615 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4181, i32 3 }
@___asan_gen_.618 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4005, i32 4 }
@___asan_gen_.621 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 4030, i32 3 }
@___asan_gen_.624 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 3400, i32 2 }
@___asan_gen_.627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 5214, i32 4 }
@___asan_gen_.636 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 5243, i32 5 }
@___asan_gen_.639 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 5251, i32 4 }
@___asan_gen_.648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 5363, i32 4 }
@___asan_gen_.651 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 5327, i32 2 }
@___asan_gen_.654 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 5340, i32 3 }
@___asan_gen_.657 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 5061, i32 2 }
@___asan_gen_.659 = private unnamed_addr constant [20 x i8] c"../fs/btrfs/ctree.h\00", align 1
@___asan_gen_.660 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 3648, i32 4 }
@___asan_gen_.663 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 5069, i32 2 }
@___asan_gen_.666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 5984, i32 2 }
@___asan_gen_.669 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 6430, i32 2 }
@___asan_gen_.672 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 6554, i32 3 }
@___asan_gen_.675 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 6133, i32 3 }
@___asan_gen_.678 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 6172, i32 2 }
@___asan_gen_.681 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 5842, i32 2 }
@___asan_gen_.690 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 5853, i32 3 }
@___asan_gen_.692 = private unnamed_addr constant [22 x i8] c"../fs/btrfs/volumes.h\00", align 1
@___asan_gen_.693 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.692, i32 479, i32 3 }
@___asan_gen_.702 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 6749, i32 2 }
@___asan_gen_.705 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 6682, i32 4 }
@___asan_gen_.708 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 6864, i32 2 }
@___asan_gen_.711 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 1815, i32 3 }
@___asan_gen_.714 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7162, i32 5 }
@___asan_gen_.717 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7178, i32 3 }
@___asan_gen_.723 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7009, i32 3 }
@___asan_gen_.729 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7012, i32 3 }
@___asan_gen_.732 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7300, i32 4 }
@___asan_gen_.735 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7331, i32 4 }
@___asan_gen_.738 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7357, i32 4 }
@___asan_gen_.741 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7954, i32 2 }
@___asan_gen_.744 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7840, i32 3 }
@___asan_gen_.747 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7851, i32 4 }
@___asan_gen_.750 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7865, i32 4 }
@___asan_gen_.751 = private unnamed_addr constant [4 x i8] c"_rs\00", align 1
@___asan_gen_.756 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 7934, i32 2 }
@___asan_gen_.759 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 8065, i32 3 }
@___asan_gen_.762 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 8075, i32 3 }
@___asan_gen_.765 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 8088, i32 5 }
@___asan_gen_.768 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 8099, i32 3 }
@___asan_gen_.771 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 8108, i32 3 }
@___asan_gen_.774 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 8114, i32 3 }
@___asan_gen_.777 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 8127, i32 4 }
@___asan_gen_.780 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 8152, i32 4 }
@___asan_gen_.783 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 8303, i32 3 }
@___asan_gen_.784 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.785 = private constant [22 x i8] c"../fs/btrfs/volumes.c\00", align 1
@___asan_gen_.786 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.785, i32 8323, i32 2 }
@llvm.compiler.used = appending global [194 x ptr] [ptr @assertfail._entry, ptr @assertfail._entry_ptr, ptr @btrfs_cleanup_fs_uuids, ptr @btrfs_open_one_device._entry, ptr @btrfs_open_one_device._entry_ptr, ptr @device_list_add._entry, ptr @device_list_add._entry.81, ptr @device_list_add._entry_ptr, ptr @device_list_add._entry_ptr.83, ptr @btrfs_raid_array, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @uuid_mutex, ptr @.str.8, ptr @fs_uuids, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @btrfs_alloc_device.__key, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.82, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @alloc_fs_devices.__key, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @btrfs_init_sprout.__key, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @find_live_mirror._rs, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @btrfs_report_missing_device._rs, ptr @.str.160, ptr @btrfs_report_missing_device._rs.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.170, ptr @btrfs_dev_stat_print_on_error._rs, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.182], section "llvm.metadata"
@0 = internal global [189 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_raid_array to i32), i32 288, i32 352, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.222 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.225 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.234 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.240 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.252 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uuid_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.252 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.252 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fs_uuids to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.261 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.276 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.279 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 112, i32 160, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.300 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.303 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.309 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.312 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.321 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.327 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.333 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.342 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.357 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.366 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.369 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 101, i32 160, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_alloc_device.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.408 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 87, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_open_one_device._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @device_list_add._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @device_list_add._entry.81 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.486 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.486 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alloc_fs_devices.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @assertfail._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.537 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_init_sprout.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.555 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.609 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.615 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.663 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 77, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.678 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @find_live_mirror._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.702 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.702 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.702 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.708 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.717 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_report_missing_device._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_report_missing_device._rs.161 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.732 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.738 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.744 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.747 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_dev_stat_print_on_error._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 81, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 103, i32 160, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.762 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.768 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 85, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 91, i32 128, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.780 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.786 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @btrfs_bg_flags_to_raid_index(i64 noundef %flags) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i64 %flags, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.else, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %return

if.else:                                          ; preds = %entry
  %and1 = and i64 %flags, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1)
  %tobool2.not = icmp eq i64 %and1, 0
  br i1 %tobool2.not, label %if.else4, label %if.else.return_crit_edge

if.else.return_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %return

if.else4:                                         ; preds = %if.else
  %and5 = and i64 %flags, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5)
  %tobool6.not = icmp eq i64 %and5, 0
  br i1 %tobool6.not, label %if.else8, label %if.else4.return_crit_edge

if.else4.return_crit_edge:                        ; preds = %if.else4
  call void @__sanitizer_cov_trace_pc() #25
  br label %return

if.else8:                                         ; preds = %if.else4
  %and9 = and i64 %flags, 1024
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and9)
  %tobool10.not = icmp eq i64 %and9, 0
  br i1 %tobool10.not, label %if.else12, label %if.else8.return_crit_edge

if.else8.return_crit_edge:                        ; preds = %if.else8
  call void @__sanitizer_cov_trace_pc() #25
  br label %return

if.else12:                                        ; preds = %if.else8
  %and13 = and i64 %flags, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and13)
  %tobool14.not = icmp eq i64 %and13, 0
  br i1 %tobool14.not, label %if.else16, label %if.else12.return_crit_edge

if.else12.return_crit_edge:                       ; preds = %if.else12
  call void @__sanitizer_cov_trace_pc() #25
  br label %return

if.else16:                                        ; preds = %if.else12
  %and17 = and i64 %flags, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and17)
  %tobool18.not = icmp eq i64 %and17, 0
  br i1 %tobool18.not, label %if.else20, label %if.else16.return_crit_edge

if.else16.return_crit_edge:                       ; preds = %if.else16
  call void @__sanitizer_cov_trace_pc() #25
  br label %return

if.else20:                                        ; preds = %if.else16
  %and21 = and i64 %flags, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and21)
  %tobool22.not = icmp eq i64 %and21, 0
  br i1 %tobool22.not, label %if.else24, label %if.else20.return_crit_edge

if.else20.return_crit_edge:                       ; preds = %if.else20
  call void @__sanitizer_cov_trace_pc() #25
  br label %return

if.else24:                                        ; preds = %if.else20
  call void @__sanitizer_cov_trace_pc() #25
  %and25 = and i64 %flags, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and25)
  %tobool26.not = icmp eq i64 %and25, 0
  %. = select i1 %tobool26.not, i32 4, i32 6
  br label %return

return:                                           ; preds = %if.else24, %if.else20.return_crit_edge, %if.else16.return_crit_edge, %if.else12.return_crit_edge, %if.else8.return_crit_edge, %if.else4.return_crit_edge, %if.else.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %entry.return_crit_edge ], [ 1, %if.else.return_crit_edge ], [ 7, %if.else4.return_crit_edge ], [ 8, %if.else8.return_crit_edge ], [ 2, %if.else12.return_crit_edge ], [ 3, %if.else16.return_crit_edge ], [ 5, %if.else20.return_crit_edge ], [ %., %if.else24 ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local nonnull ptr @btrfs_bg_type_to_raid_name(i64 noundef %flags) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %and.i = and i64 %flags, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %if.else.i, label %entry.btrfs_bg_flags_to_raid_index.exit_crit_edge

entry.btrfs_bg_flags_to_raid_index.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit

if.else.i:                                        ; preds = %entry
  %and1.i = and i64 %flags, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i)
  %tobool2.not.i = icmp eq i64 %and1.i, 0
  br i1 %tobool2.not.i, label %if.else4.i, label %if.else.i.btrfs_bg_flags_to_raid_index.exit_crit_edge

if.else.i.btrfs_bg_flags_to_raid_index.exit_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit

if.else4.i:                                       ; preds = %if.else.i
  %and5.i = and i64 %flags, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5.i)
  %tobool6.not.i = icmp eq i64 %and5.i, 0
  br i1 %tobool6.not.i, label %if.else8.i, label %if.else4.i.btrfs_bg_flags_to_raid_index.exit_crit_edge

if.else4.i.btrfs_bg_flags_to_raid_index.exit_crit_edge: ; preds = %if.else4.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit

if.else8.i:                                       ; preds = %if.else4.i
  %and9.i = and i64 %flags, 1024
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and9.i)
  %tobool10.not.i = icmp eq i64 %and9.i, 0
  br i1 %tobool10.not.i, label %if.else12.i, label %if.else8.i.btrfs_bg_flags_to_raid_index.exit_crit_edge

if.else8.i.btrfs_bg_flags_to_raid_index.exit_crit_edge: ; preds = %if.else8.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit

if.else12.i:                                      ; preds = %if.else8.i
  %and13.i = and i64 %flags, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and13.i)
  %tobool14.not.i = icmp eq i64 %and13.i, 0
  br i1 %tobool14.not.i, label %if.else16.i, label %if.else12.i.btrfs_bg_flags_to_raid_index.exit_crit_edge

if.else12.i.btrfs_bg_flags_to_raid_index.exit_crit_edge: ; preds = %if.else12.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit

if.else16.i:                                      ; preds = %if.else12.i
  %and17.i = and i64 %flags, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and17.i)
  %tobool18.not.i = icmp eq i64 %and17.i, 0
  br i1 %tobool18.not.i, label %if.else20.i, label %if.else16.i.btrfs_bg_flags_to_raid_index.exit_crit_edge

if.else16.i.btrfs_bg_flags_to_raid_index.exit_crit_edge: ; preds = %if.else16.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit

if.else20.i:                                      ; preds = %if.else16.i
  %and21.i = and i64 %flags, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and21.i)
  %tobool22.not.i = icmp eq i64 %and21.i, 0
  br i1 %tobool22.not.i, label %if.else24.i, label %if.else20.i.btrfs_bg_flags_to_raid_index.exit_crit_edge

if.else20.i.btrfs_bg_flags_to_raid_index.exit_crit_edge: ; preds = %if.else20.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit

if.else24.i:                                      ; preds = %if.else20.i
  call void @__sanitizer_cov_trace_pc() #25
  %and25.i = and i64 %flags, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and25.i)
  %tobool26.not.i = icmp eq i64 %and25.i, 0
  %..i = select i1 %tobool26.not.i, i32 4, i32 6
  br label %btrfs_bg_flags_to_raid_index.exit

btrfs_bg_flags_to_raid_index.exit:                ; preds = %if.else24.i, %if.else20.i.btrfs_bg_flags_to_raid_index.exit_crit_edge, %if.else16.i.btrfs_bg_flags_to_raid_index.exit_crit_edge, %if.else12.i.btrfs_bg_flags_to_raid_index.exit_crit_edge, %if.else8.i.btrfs_bg_flags_to_raid_index.exit_crit_edge, %if.else4.i.btrfs_bg_flags_to_raid_index.exit_crit_edge, %if.else.i.btrfs_bg_flags_to_raid_index.exit_crit_edge, %entry.btrfs_bg_flags_to_raid_index.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %entry.btrfs_bg_flags_to_raid_index.exit_crit_edge ], [ 1, %if.else.i.btrfs_bg_flags_to_raid_index.exit_crit_edge ], [ 7, %if.else4.i.btrfs_bg_flags_to_raid_index.exit_crit_edge ], [ 8, %if.else8.i.btrfs_bg_flags_to_raid_index.exit_crit_edge ], [ 2, %if.else12.i.btrfs_bg_flags_to_raid_index.exit_crit_edge ], [ 3, %if.else16.i.btrfs_bg_flags_to_raid_index.exit_crit_edge ], [ 5, %if.else20.i.btrfs_bg_flags_to_raid_index.exit_crit_edge ], [ %..i, %if.else24.i ]
  %raid_name = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i, i32 9
  ret ptr %raid_name
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_describe_block_groups(i64 noundef %bg_flags, ptr nocapture noundef writeonly %buf, i32 noundef %size_buf) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %bg_flags)
  %tobool.not = icmp eq i64 %bg_flags, 0
  br i1 %tobool.not, label %if.then, label %do.body

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %0 = call ptr @memcpy(ptr %buf, ptr @.str, i32 5)
  br label %cleanup

do.body:                                          ; preds = %entry
  %and = and i64 %bg_flags, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool1.not = icmp eq i64 %and, 0
  br i1 %tobool1.not, label %do.body.do.body9_crit_edge, label %if.then2

do.body.do.body9_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body9

if.then2:                                         ; preds = %do.body
  %call3 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %buf, i32 noundef %size_buf, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call3)
  %cmp = icmp sgt i32 %call3, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %call3, i32 %size_buf)
  %cmp4.not = icmp ult i32 %call3, %size_buf
  %or.cond = and i1 %cmp, %cmp4.not
  br i1 %or.cond, label %if.end6, label %if.then2.cleanup_crit_edge

if.then2.cleanup_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end6:                                          ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #25
  %sub = sub i32 %size_buf, %call3
  %add.ptr = getelementptr i8, ptr %buf, i32 %call3
  %and7 = and i64 %bg_flags, -2
  br label %do.body9

do.body9:                                         ; preds = %if.end6, %do.body.do.body9_crit_edge
  %bp.0 = phi ptr [ %add.ptr, %if.end6 ], [ %buf, %do.body.do.body9_crit_edge ]
  %flags.0 = phi i64 [ %and7, %if.end6 ], [ %bg_flags, %do.body.do.body9_crit_edge ]
  %size_bp.0 = phi i32 [ %sub, %if.end6 ], [ %size_buf, %do.body.do.body9_crit_edge ]
  %and10 = and i64 %flags.0, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and10)
  %tobool11.not = icmp eq i64 %and10, 0
  br i1 %tobool11.not, label %do.body9.do.body25_crit_edge, label %if.then12

do.body9.do.body25_crit_edge:                     ; preds = %do.body9
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body25

if.then12:                                        ; preds = %do.body9
  %call13 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %bp.0, i32 noundef %size_bp.0, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call13)
  %cmp14 = icmp sgt i32 %call13, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %size_bp.0, i32 %call13)
  %cmp16.not = icmp ugt i32 %size_bp.0, %call13
  %or.cond160 = and i1 %cmp14, %cmp16.not
  br i1 %or.cond160, label %if.end18, label %if.then12.cleanup_crit_edge

if.then12.cleanup_crit_edge:                      ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end18:                                         ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #25
  %sub19 = sub i32 %size_bp.0, %call13
  %add.ptr20 = getelementptr i8, ptr %bp.0, i32 %call13
  %and21 = and i64 %flags.0, -3
  br label %do.body25

do.body25:                                        ; preds = %if.end18, %do.body9.do.body25_crit_edge
  %bp.1 = phi ptr [ %add.ptr20, %if.end18 ], [ %bp.0, %do.body9.do.body25_crit_edge ]
  %flags.1 = phi i64 [ %and21, %if.end18 ], [ %flags.0, %do.body9.do.body25_crit_edge ]
  %size_bp.1 = phi i32 [ %sub19, %if.end18 ], [ %size_bp.0, %do.body9.do.body25_crit_edge ]
  %and26 = and i64 %flags.1, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and26)
  %tobool27.not = icmp eq i64 %and26, 0
  br i1 %tobool27.not, label %do.body25.do.body41_crit_edge, label %if.then28

do.body25.do.body41_crit_edge:                    ; preds = %do.body25
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body41

if.then28:                                        ; preds = %do.body25
  %call29 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %bp.1, i32 noundef %size_bp.1, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call29)
  %cmp30 = icmp sgt i32 %call29, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %size_bp.1, i32 %call29)
  %cmp32.not = icmp ugt i32 %size_bp.1, %call29
  %or.cond161 = and i1 %cmp30, %cmp32.not
  br i1 %or.cond161, label %if.end34, label %if.then28.cleanup_crit_edge

if.then28.cleanup_crit_edge:                      ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end34:                                         ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #25
  %sub35 = sub i32 %size_bp.1, %call29
  %add.ptr36 = getelementptr i8, ptr %bp.1, i32 %call29
  %and37 = and i64 %flags.1, -5
  br label %do.body41

do.body41:                                        ; preds = %if.end34, %do.body25.do.body41_crit_edge
  %bp.2 = phi ptr [ %add.ptr36, %if.end34 ], [ %bp.1, %do.body25.do.body41_crit_edge ]
  %flags.2 = phi i64 [ %and37, %if.end34 ], [ %flags.1, %do.body25.do.body41_crit_edge ]
  %size_bp.2 = phi i32 [ %sub35, %if.end34 ], [ %size_bp.1, %do.body25.do.body41_crit_edge ]
  %and42 = and i64 %flags.2, 281474976710656
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and42)
  %tobool43.not = icmp eq i64 %and42, 0
  br i1 %tobool43.not, label %do.body41.do.body58.preheader_crit_edge, label %if.then44

do.body41.do.body58.preheader_crit_edge:          ; preds = %do.body41
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body58.preheader

if.then44:                                        ; preds = %do.body41
  %call45 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %bp.2, i32 noundef %size_bp.2, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.5)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call45)
  %cmp46 = icmp sgt i32 %call45, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %size_bp.2, i32 %call45)
  %cmp48.not = icmp ugt i32 %size_bp.2, %call45
  %or.cond162 = and i1 %cmp46, %cmp48.not
  br i1 %or.cond162, label %if.end50, label %if.then44.cleanup_crit_edge

if.then44.cleanup_crit_edge:                      ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end50:                                         ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #25
  %sub51 = sub i32 %size_bp.2, %call45
  %add.ptr52 = getelementptr i8, ptr %bp.2, i32 %call45
  %and53 = and i64 %flags.2, -281474976710657
  br label %do.body58.preheader

do.body58.preheader:                              ; preds = %if.end50, %do.body41.do.body58.preheader_crit_edge
  %size_bp.4171.ph = phi i32 [ %size_bp.2, %do.body41.do.body58.preheader_crit_edge ], [ %sub51, %if.end50 ]
  %flags.4170.ph = phi i64 [ %flags.2, %do.body41.do.body58.preheader_crit_edge ], [ %and53, %if.end50 ]
  %bp.4169.ph = phi ptr [ %bp.2, %do.body41.do.body58.preheader_crit_edge ], [ %add.ptr52, %if.end50 ]
  br label %do.body58

do.body58:                                        ; preds = %for.inc.do.body58_crit_edge, %do.body58.preheader
  %size_bp.4171 = phi i32 [ %size_bp.5, %for.inc.do.body58_crit_edge ], [ %size_bp.4171.ph, %do.body58.preheader ]
  %flags.4170 = phi i64 [ %flags.5, %for.inc.do.body58_crit_edge ], [ %flags.4170.ph, %do.body58.preheader ]
  %bp.4169 = phi ptr [ %bp.5, %for.inc.do.body58_crit_edge ], [ %bp.4169.ph, %do.body58.preheader ]
  %i.0167 = phi i32 [ %inc, %for.inc.do.body58_crit_edge ], [ 0, %do.body58.preheader ]
  %bg_flag = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %i.0167, i32 10
  %1 = ptrtoint ptr %bg_flag to i32
  call void @__asan_load8_noabort(i32 %1)
  %2 = load i64, ptr %bg_flag, align 8
  %and59 = and i64 %2, %flags.4170
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and59)
  %tobool60.not = icmp eq i64 %and59, 0
  br i1 %tobool60.not, label %do.body58.for.inc_crit_edge, label %if.then61

do.body58.for.inc_crit_edge:                      ; preds = %do.body58
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

if.then61:                                        ; preds = %do.body58
  %raid_name = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %i.0167, i32 9
  %call63 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %bp.4169, i32 noundef %size_bp.4171, ptr noundef nonnull @.str.1, ptr noundef %raid_name)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call63)
  %cmp64 = icmp sgt i32 %call63, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %size_bp.4171, i32 %call63)
  %cmp66.not = icmp ugt i32 %size_bp.4171, %call63
  %or.cond163 = select i1 %cmp64, i1 %cmp66.not, i1 false
  br i1 %or.cond163, label %if.end68, label %if.then61.cleanup_crit_edge

if.then61.cleanup_crit_edge:                      ; preds = %if.then61
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end68:                                         ; preds = %if.then61
  call void @__sanitizer_cov_trace_pc() #25
  %sub69 = sub i32 %size_bp.4171, %call63
  %add.ptr70 = getelementptr i8, ptr %bp.4169, i32 %call63
  %neg = xor i64 %2, -1
  %and73 = and i64 %flags.4170, %neg
  br label %for.inc

for.inc:                                          ; preds = %if.end68, %do.body58.for.inc_crit_edge
  %bp.5 = phi ptr [ %add.ptr70, %if.end68 ], [ %bp.4169, %do.body58.for.inc_crit_edge ]
  %flags.5 = phi i64 [ %and73, %if.end68 ], [ %flags.4170, %do.body58.for.inc_crit_edge ]
  %size_bp.5 = phi i32 [ %sub69, %if.end68 ], [ %size_bp.4171, %do.body58.for.inc_crit_edge ]
  %inc = add nuw nsw i32 %i.0167, 1
  %exitcond.not = icmp eq i32 %inc, 9
  br i1 %exitcond.not, label %for.end, label %for.inc.do.body58_crit_edge

for.inc.do.body58_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body58

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %flags.5)
  %tobool77.not = icmp eq i64 %flags.5, 0
  br i1 %tobool77.not, label %for.end.if.end81_crit_edge, label %if.then78

for.end.if.end81_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end81

if.then78:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  %call79 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %bp.5, i32 noundef %size_bp.5, ptr noundef nonnull @.str.6, i64 noundef %flags.5)
  %sub80 = sub i32 %size_bp.5, %call79
  br label %if.end81

if.end81:                                         ; preds = %if.then78, %for.end.if.end81_crit_edge
  %size_bp.6 = phi i32 [ %sub80, %if.then78 ], [ %size_bp.5, %for.end.if.end81_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %size_bp.6, i32 %size_buf)
  %cmp82 = icmp ult i32 %size_bp.6, %size_buf
  br i1 %cmp82, label %if.then83, label %if.end81.cleanup_crit_edge

if.end81.cleanup_crit_edge:                       ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then83:                                        ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #25
  %3 = xor i32 %size_bp.6, -1
  %sub85 = add i32 %3, %size_buf
  %arrayidx86 = getelementptr i8, ptr %buf, i32 %sub85
  %4 = ptrtoint ptr %arrayidx86 to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %arrayidx86, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.then83, %if.end81.cleanup_crit_edge, %if.then61.cleanup_crit_edge, %if.then44.cleanup_crit_edge, %if.then28.cleanup_crit_edge, %if.then12.cleanup_crit_edge, %if.then2.cleanup_crit_edge, %if.then
  ret void
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local nonnull ptr @btrfs_get_fs_uuids() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  ret ptr @fs_uuids
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_free_device(ptr noundef %device) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %post_commit_list = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 2
  %0 = ptrtoint ptr %post_commit_list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %post_commit_list, align 4
  %cmp.i.not = icmp eq ptr %1, %post_commit_list
  br i1 %cmp.i.not, label %entry.if.end_crit_edge, label %do.end, !prof !423

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 405, i32 noundef 9, ptr noundef null) #23
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %name = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 5
  %2 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %name, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %if.end.rcu_string_free.exit_crit_edge, label %do.end.i

if.end.rcu_string_free.exit_crit_edge:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_string_free.exit

do.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @kvfree_call_rcu(ptr noundef nonnull %3, ptr noundef null) #23
  br label %rcu_string_free.exit

rcu_string_free.exit:                             ; preds = %do.end.i, %if.end.rcu_string_free.exit_crit_edge
  %alloc_state = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 30
  tail call void @extent_io_tree_release(ptr noundef %alloc_state) #23
  %flush_bio = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 24
  %4 = ptrtoint ptr %flush_bio to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %flush_bio, align 8
  tail call void @bio_put(ptr noundef %5) #23
  tail call void @btrfs_destroy_dev_zone_info(ptr noundef %device) #23
  tail call void @kfree(ptr noundef %device) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @extent_io_tree_release(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_put(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_destroy_dev_zone_info(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #5

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_cleanup_fs_uuids() #6 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = load volatile ptr, ptr @fs_uuids, align 4
  %cmp.i.not2 = icmp eq ptr %0, @fs_uuids
  br i1 %cmp.i.not2, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

while.body:                                       ; preds = %list_del.exit.while.body_crit_edge, %entry.while.body_crit_edge
  %1 = phi ptr [ %10, %list_del.exit.while.body_crit_edge ], [ %0, %entry.while.body_crit_edge ]
  %add.ptr = getelementptr i8, ptr %1, i32 -36
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %1) #23
  br i1 %call.i.i, label %if.end.i.i, label %while.body.list_del.exit_crit_edge

while.body.list_del.exit_crit_edge:               ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del.exit

if.end.i.i:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prev.i.i, align 4
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %1, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %3, ptr %prev1.i.i.i, align 4
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %5, ptr %3, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %while.body.list_del.exit_crit_edge
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr inttoptr (i32 256 to ptr), ptr %1, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %9 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call fastcc void @free_fs_devices(ptr noundef %add.ptr)
  %10 = load volatile ptr, ptr @fs_uuids, align 4
  %cmp.i.not = icmp eq ptr %10, @fs_uuids
  br i1 %cmp.i.not, label %list_del.exit.while.end_crit_edge, label %list_del.exit.while.body_crit_edge

list_del.exit.while.body_crit_edge:               ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body

list_del.exit.while.end_crit_edge:                ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

while.end:                                        ; preds = %list_del.exit.while.end_crit_edge, %entry.while.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @free_fs_devices(ptr noundef %fs_devices) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %opened = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 17
  %0 = ptrtoint ptr %opened to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %opened, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end, !prof !423

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 416, i32 noundef 9, ptr noundef null) #23
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 13
  %2 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %devices, align 4
  %cmp.i.not30 = icmp eq ptr %3, %devices
  br i1 %cmp.i.not30, label %if.end.while.end_crit_edge, label %if.end.while.body_crit_edge

if.end.while.body_crit_edge:                      ; preds = %if.end
  br label %while.body

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

while.body:                                       ; preds = %list_del.exit.while.body_crit_edge, %if.end.while.body_crit_edge
  %4 = phi ptr [ %14, %list_del.exit.while.body_crit_edge ], [ %3, %if.end.while.body_crit_edge ]
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %4) #23
  br i1 %call.i.i, label %if.end.i.i, label %while.body.list_del.exit_crit_edge

while.body.list_del.exit_crit_edge:               ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del.exit

if.end.i.i:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %prev.i.i, align 4
  %7 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %4, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %6, ptr %prev1.i.i.i, align 4
  %10 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %8, ptr %6, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %while.body.list_del.exit_crit_edge
  %11 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr inttoptr (i32 256 to ptr), ptr %4, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %12 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @btrfs_free_device(ptr noundef %4)
  %13 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %devices, align 4
  %cmp.i.not = icmp eq ptr %14, %devices
  br i1 %cmp.i.not, label %list_del.exit.while.end_crit_edge, label %list_del.exit.while.body_crit_edge

list_del.exit.while.body_crit_edge:               ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body

list_del.exit.while.end_crit_edge:                ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

while.end:                                        ; preds = %list_del.exit.while.end_crit_edge, %if.end.while.end_crit_edge
  tail call void @kfree(ptr noundef %fs_devices) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_free_extra_devids(ptr noundef %fs_devices) local_unnamed_addr #4 align 64 {
entry:
  %latest_dev = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %latest_dev) #23
  %0 = ptrtoint ptr %latest_dev to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %latest_dev, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @uuid_mutex, i32 noundef 0) #23
  call fastcc void @__btrfs_free_extra_devids(ptr noundef %fs_devices, ptr noundef nonnull %latest_dev)
  %seed_list = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 15
  %1 = ptrtoint ptr %seed_list to i32
  call void @__asan_load4_noabort(i32 %1)
  %.pn14 = load ptr, ptr %seed_list, align 8
  %cmp.not15 = icmp eq ptr %.pn14, %seed_list
  br i1 %cmp.not15, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn16 = phi ptr [ %.pn, %for.body.for.body_crit_edge ], [ %.pn14, %entry.for.body_crit_edge ]
  %seed_dev.0 = getelementptr i8, ptr %.pn16, i32 -216
  call fastcc void @__btrfs_free_extra_devids(ptr noundef %seed_dev.0, ptr noundef nonnull %latest_dev)
  %2 = ptrtoint ptr %.pn16 to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn = load ptr, ptr %.pn16, align 8
  %cmp.not = icmp eq ptr %.pn, %seed_list
  br i1 %cmp.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  %3 = ptrtoint ptr %latest_dev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %latest_dev, align 4
  %latest_dev8 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 11
  %5 = ptrtoint ptr %latest_dev8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %4, ptr %latest_dev8, align 8
  tail call void @mutex_unlock(ptr noundef nonnull @uuid_mutex) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %latest_dev) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__btrfs_free_extra_devids(ptr noundef %fs_devices, ptr nocapture noundef %latest_dev) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 13
  %0 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %devices, align 8
  %cmp.not78 = icmp eq ptr %1, %devices
  br i1 %cmp.not78, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %open_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 5
  %rw_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 6
  %num_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %device.079 = phi ptr [ %1, %for.body.lr.ph ], [ %next.083, %for.inc.for.body_crit_edge ]
  %2 = ptrtoint ptr %device.079 to i32
  call void @__asan_load4_noabort(i32 %2)
  %next.083 = load ptr, ptr %device.079, align 8
  %dev_state = getelementptr inbounds %struct.btrfs_device, ptr %device.079, i32 0, i32 10
  %3 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %dev_state, align 4
  %5 = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %if.end19, label %if.then

if.then:                                          ; preds = %for.body
  %6 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %dev_state, align 4
  %8 = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool10.not = icmp eq i32 %8, 0
  br i1 %tobool10.not, label %land.lhs.true, label %if.then.for.inc_crit_edge

if.then.for.inc_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

land.lhs.true:                                    ; preds = %if.then
  %9 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %dev_state, align 4
  %11 = and i32 %10, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool13.not = icmp eq i32 %11, 0
  br i1 %tobool13.not, label %land.lhs.true14, label %land.lhs.true.for.inc_crit_edge

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

land.lhs.true14:                                  ; preds = %land.lhs.true
  %12 = ptrtoint ptr %latest_dev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %latest_dev, align 4
  %tobool15.not = icmp eq ptr %13, null
  br i1 %tobool15.not, label %land.lhs.true14.if.then18_crit_edge, label %lor.lhs.false

land.lhs.true14.if.then18_crit_edge:              ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then18

lor.lhs.false:                                    ; preds = %land.lhs.true14
  %generation = getelementptr inbounds %struct.btrfs_device, ptr %device.079, i32 0, i32 6
  %14 = ptrtoint ptr %generation to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %generation, align 8
  %generation16 = getelementptr inbounds %struct.btrfs_device, ptr %13, i32 0, i32 6
  %16 = ptrtoint ptr %generation16 to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %generation16, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %15, i64 %17)
  %cmp17 = icmp ugt i64 %15, %17
  br i1 %cmp17, label %lor.lhs.false.if.then18_crit_edge, label %lor.lhs.false.for.inc_crit_edge

lor.lhs.false.for.inc_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

lor.lhs.false.if.then18_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then18

if.then18:                                        ; preds = %lor.lhs.false.if.then18_crit_edge, %land.lhs.true14.if.then18_crit_edge
  %18 = ptrtoint ptr %latest_dev to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %device.079, ptr %latest_dev, align 4
  br label %for.inc

if.end19:                                         ; preds = %for.body
  %devid = getelementptr inbounds %struct.btrfs_device, ptr %device.079, i32 0, i32 13
  %19 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %devid, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %20)
  %cmp20 = icmp eq i64 %20, 0
  br i1 %cmp20, label %if.end19.for.inc_crit_edge, label %if.end22

if.end19.for.inc_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

if.end22:                                         ; preds = %if.end19
  %bdev = getelementptr inbounds %struct.btrfs_device, ptr %device.079, i32 0, i32 7
  %21 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %bdev, align 8
  %tobool23.not = icmp eq ptr %22, null
  br i1 %tobool23.not, label %if.end22.if.end27_crit_edge, label %if.then24

if.end22.if.end27_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end27

if.then24:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #25
  %mode = getelementptr inbounds %struct.btrfs_device, ptr %device.079, i32 0, i32 9
  %23 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %mode, align 8
  tail call void @blkdev_put(ptr noundef nonnull %22, i32 noundef %24) #23
  %25 = ptrtoint ptr %bdev to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %bdev, align 8
  %26 = ptrtoint ptr %open_devices to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %open_devices, align 8
  %dec = add i64 %27, -1
  store i64 %dec, ptr %open_devices, align 8
  br label %if.end27

if.end27:                                         ; preds = %if.then24, %if.end22.if.end27_crit_edge
  %28 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %dev_state, align 4
  %and1.i70 = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i70)
  %tobool30.not = icmp eq i32 %and1.i70, 0
  br i1 %tobool30.not, label %if.end27.if.end34_crit_edge, label %if.then31

if.end27.if.end34_crit_edge:                      ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end34

if.then31:                                        ; preds = %if.end27
  %dev_alloc_list = getelementptr inbounds %struct.btrfs_device, ptr %device.079, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %dev_alloc_list) #23
  br i1 %call.i.i, label %if.end.i.i, label %if.then31.list_del_init.exit_crit_edge

if.then31.list_del_init.exit_crit_edge:           ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.079, i32 0, i32 1, i32 1
  %30 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %prev.i.i, align 4
  %32 = ptrtoint ptr %dev_alloc_list to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %dev_alloc_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %31, ptr %prev1.i.i.i, align 4
  %35 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile ptr %33, ptr %31, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %if.then31.list_del_init.exit_crit_edge
  %36 = ptrtoint ptr %dev_alloc_list to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %dev_alloc_list, ptr %dev_alloc_list, align 4
  %prev.i3.i = getelementptr inbounds %struct.btrfs_device, ptr %device.079, i32 0, i32 1, i32 1
  %37 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %dev_alloc_list, ptr %prev.i3.i, align 4
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %dev_state) #23
  %38 = ptrtoint ptr %rw_devices to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %rw_devices, align 8
  %dec33 = add i64 %39, -1
  store i64 %dec33, ptr %rw_devices, align 8
  br label %if.end34

if.end34:                                         ; preds = %list_del_init.exit, %if.end27.if.end34_crit_edge
  %call.i.i71 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %device.079) #23
  br i1 %call.i.i71, label %if.end.i.i74, label %if.end34.list_del_init.exit76_crit_edge

if.end34.list_del_init.exit76_crit_edge:          ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del_init.exit76

if.end.i.i74:                                     ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i72 = getelementptr inbounds %struct.list_head, ptr %device.079, i32 0, i32 1
  %40 = ptrtoint ptr %prev.i.i72 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %prev.i.i72, align 4
  %42 = ptrtoint ptr %device.079 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %device.079, align 4
  %prev1.i.i.i73 = getelementptr inbounds %struct.list_head, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %prev1.i.i.i73 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %41, ptr %prev1.i.i.i73, align 4
  %45 = ptrtoint ptr %41 to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %43, ptr %41, align 4
  br label %list_del_init.exit76

list_del_init.exit76:                             ; preds = %if.end.i.i74, %if.end34.list_del_init.exit76_crit_edge
  %46 = ptrtoint ptr %device.079 to i32
  call void @__asan_store4_noabort(i32 %46)
  store volatile ptr %device.079, ptr %device.079, align 4
  %prev.i3.i75 = getelementptr inbounds %struct.list_head, ptr %device.079, i32 0, i32 1
  %47 = ptrtoint ptr %prev.i3.i75 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %device.079, ptr %prev.i3.i75, align 4
  %48 = ptrtoint ptr %num_devices to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %num_devices, align 8
  %dec36 = add i64 %49, -1
  store i64 %dec36, ptr %num_devices, align 8
  tail call void @btrfs_free_device(ptr noundef %device.079)
  br label %for.inc

for.inc:                                          ; preds = %list_del_init.exit76, %if.end19.for.inc_crit_edge, %if.then18, %lor.lhs.false.for.inc_crit_edge, %land.lhs.true.for.inc_crit_edge, %if.then.for.inc_crit_edge
  %cmp.not = icmp eq ptr %next.083, %devices
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_close_devices(ptr noundef %fs_devices) local_unnamed_addr #4 align 64 {
entry:
  %list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %list) #23
  %0 = getelementptr inbounds %struct.list_head, ptr %list, i32 0, i32 1
  %1 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %list, ptr %list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %list, ptr %0, align 4
  call void @mutex_lock_nested(ptr noundef nonnull @uuid_mutex, i32 noundef 0) #23
  call fastcc void @close_fs_devices(ptr noundef %fs_devices)
  %opened = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 17
  %3 = ptrtoint ptr %opened to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %opened, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %entry
  %seed_list = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 15
  %5 = ptrtoint ptr %seed_list to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %seed_list, align 4
  %cmp.i.not.i = icmp eq ptr %6, %seed_list
  br i1 %cmp.i.not.i, label %if.then.if.end_crit_edge, label %if.then.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  %7 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %list, align 4
  %prev2.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 15, i32 1
  %9 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prev2.i.i, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %11 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %list, ptr %prev3.i.i, align 4
  store ptr %6, ptr %list, align 4
  %12 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %8, ptr %10, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  %13 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %prev6.i.i, align 4
  %14 = ptrtoint ptr %seed_list to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %seed_list, ptr %seed_list, align 4
  store ptr %seed_list, ptr %prev2.i.i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.i, %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  %15 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %list, align 4
  %cmp.not26 = icmp eq ptr %16, %list
  br i1 %cmp.not26, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.body:                                         ; preds = %free_fs_devices.exit.for.body_crit_edge, %if.end.for.body_crit_edge
  %.pn.in27 = phi ptr [ %.pn, %free_fs_devices.exit.for.body_crit_edge ], [ %16, %if.end.for.body_crit_edge ]
  %fs_devices.addr.0 = getelementptr i8, ptr %.pn.in27, i32 -216
  %17 = ptrtoint ptr %.pn.in27 to i32
  call void @__asan_load4_noabort(i32 %17)
  %.pn = load ptr, ptr %.pn.in27, align 8
  call fastcc void @close_fs_devices(ptr noundef %fs_devices.addr.0)
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in27) #23
  br i1 %call.i.i, label %if.end.i.i, label %for.body.list_del.exit_crit_edge

for.body.list_del.exit_crit_edge:                 ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del.exit

if.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in27, i32 0, i32 1
  %18 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %prev.i.i, align 4
  %20 = ptrtoint ptr %.pn.in27 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %.pn.in27, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %19, ptr %prev1.i.i.i, align 4
  %23 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %21, ptr %19, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %for.body.list_del.exit_crit_edge
  %24 = ptrtoint ptr %.pn.in27 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in27, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %.pn.in27, i32 0, i32 1
  %25 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %opened.i = getelementptr i8, ptr %.pn.in27, i32 12
  %26 = ptrtoint ptr %opened.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %opened.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.not.i = icmp eq i32 %27, 0
  br i1 %tobool.not.i, label %list_del.exit.if.end.i_crit_edge, label %do.end.i, !prof !423

list_del.exit.if.end.i_crit_edge:                 ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

do.end.i:                                         ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 416, i32 noundef 9, ptr noundef null) #23
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %list_del.exit.if.end.i_crit_edge
  %devices.i = getelementptr i8, ptr %.pn.in27, i32 -16
  %28 = ptrtoint ptr %devices.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile ptr, ptr %devices.i, align 4
  %cmp.i.not30.i = icmp eq ptr %29, %devices.i
  br i1 %cmp.i.not30.i, label %if.end.i.free_fs_devices.exit_crit_edge, label %if.end.i.while.body.i_crit_edge

if.end.i.while.body.i_crit_edge:                  ; preds = %if.end.i
  br label %while.body.i

if.end.i.free_fs_devices.exit_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_fs_devices.exit

while.body.i:                                     ; preds = %list_del.exit.i.while.body.i_crit_edge, %if.end.i.while.body.i_crit_edge
  %30 = phi ptr [ %40, %list_del.exit.i.while.body.i_crit_edge ], [ %29, %if.end.i.while.body.i_crit_edge ]
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %30) #23
  br i1 %call.i.i.i, label %if.end.i.i.i, label %while.body.i.list_del.exit.i_crit_edge

while.body.i.list_del.exit.i_crit_edge:           ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %prev.i.i.i, align 4
  %33 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %30, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %32, ptr %prev1.i.i.i.i, align 4
  %36 = ptrtoint ptr %32 to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %34, ptr %32, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %while.body.i.list_del.exit.i_crit_edge
  %37 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr inttoptr (i32 256 to ptr), ptr %30, align 4
  %prev.i.i24 = getelementptr inbounds %struct.list_head, ptr %30, i32 0, i32 1
  %38 = ptrtoint ptr %prev.i.i24 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i24, align 4
  call void @btrfs_free_device(ptr noundef %30) #23
  %39 = ptrtoint ptr %devices.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile ptr, ptr %devices.i, align 4
  %cmp.i.not.i25 = icmp eq ptr %40, %devices.i
  br i1 %cmp.i.not.i25, label %list_del.exit.i.free_fs_devices.exit_crit_edge, label %list_del.exit.i.while.body.i_crit_edge

list_del.exit.i.while.body.i_crit_edge:           ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body.i

list_del.exit.i.free_fs_devices.exit_crit_edge:   ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_fs_devices.exit

free_fs_devices.exit:                             ; preds = %list_del.exit.i.free_fs_devices.exit_crit_edge, %if.end.i.free_fs_devices.exit_crit_edge
  call void @kfree(ptr noundef %fs_devices.addr.0) #23
  %cmp.not = icmp eq ptr %.pn, %list
  br i1 %cmp.not, label %free_fs_devices.exit.for.end_crit_edge, label %free_fs_devices.exit.for.body_crit_edge

free_fs_devices.exit.for.body_crit_edge:          ; preds = %free_fs_devices.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

free_fs_devices.exit.for.end_crit_edge:           ; preds = %free_fs_devices.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.end:                                          ; preds = %free_fs_devices.exit.for.end_crit_edge, %if.end.for.end_crit_edge
  call void @mutex_unlock(ptr noundef nonnull @uuid_mutex) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %list) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @close_fs_devices(ptr noundef %fs_devices) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @uuid_mutex, i32 0, i32 5), i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !424

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 1175, i32 noundef 9, ptr noundef null) #23
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %opened = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 17
  %1 = ptrtoint ptr %opened to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %opened, align 4
  %dec = add i32 %2, -1
  store i32 %dec, ptr %opened, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %cmp25 = icmp sgt i32 %dec, 0
  br i1 %cmp25, label %if.end.cleanup_crit_edge, label %if.end27

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end27:                                         ; preds = %if.end
  %devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 13
  %3 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %devices, align 8
  br label %for.cond

for.cond:                                         ; preds = %cond.end51.i.for.cond_crit_edge, %if.end27
  %device.0 = phi ptr [ %4, %if.end27 ], [ %tmp.0, %cond.end51.i.for.cond_crit_edge ]
  %cmp35.not = icmp eq ptr %device.0, %devices
  br i1 %cmp35.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %5 = ptrtoint ptr %device.0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %tmp.0 = load ptr, ptr %device.0, align 8
  %fs_devices1.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0, i32 0, i32 3
  %6 = ptrtoint ptr %fs_devices1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %fs_devices1.i, align 8
  %dev_state.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0, i32 0, i32 10
  %8 = ptrtoint ptr %dev_state.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %dev_state.i, align 4
  %and1.i.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i, label %for.body.if.end.i_crit_edge, label %land.lhs.true.i

for.body.if.end.i_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %for.body
  %devid.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0, i32 0, i32 13
  %10 = ptrtoint ptr %devid.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %devid.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %11)
  %cmp.not.i = icmp eq i64 %11, 0
  br i1 %cmp.not.i, label %land.lhs.true.i.if.end.i_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %dev_alloc_list.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0, i32 0, i32 1
  %call.i.i90.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %dev_alloc_list.i) #23
  br i1 %call.i.i90.i, label %if.end.i.i.i, label %if.then.i.list_del_init.exit.i_crit_edge

if.then.i.list_del_init.exit.i_crit_edge:         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del_init.exit.i

if.end.i.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0, i32 0, i32 1, i32 1
  %12 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %prev.i.i.i, align 4
  %14 = ptrtoint ptr %dev_alloc_list.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %dev_alloc_list.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %13, ptr %prev1.i.i.i.i, align 4
  %17 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %15, ptr %13, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i, %if.then.i.list_del_init.exit.i_crit_edge
  %18 = ptrtoint ptr %dev_alloc_list.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %dev_alloc_list.i, ptr %dev_alloc_list.i, align 4
  %prev.i3.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0, i32 0, i32 1, i32 1
  %19 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %dev_alloc_list.i, ptr %prev.i3.i.i, align 4
  %rw_devices.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %7, i32 0, i32 6
  %20 = ptrtoint ptr %rw_devices.i to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %rw_devices.i, align 8
  %dec.i = add i64 %21, -1
  store i64 %dec.i, ptr %rw_devices.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %list_del_init.exit.i, %land.lhs.true.i.if.end.i_crit_edge, %for.body.if.end.i_crit_edge
  %devid2.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0, i32 0, i32 13
  %22 = ptrtoint ptr %devid2.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %devid2.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %23)
  %cmp3.i = icmp eq i64 %23, 0
  br i1 %cmp3.i, label %if.then4.i, label %if.end.i.if.end6.i_crit_edge

if.end.i.if.end6.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end6.i

if.then4.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %dev_state.i) #23
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.then4.i, %if.end.i.if.end6.i_crit_edge
  %24 = ptrtoint ptr %dev_state.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %dev_state.i, align 4
  %26 = and i32 %25, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool9.not.i = icmp eq i32 %26, 0
  br i1 %tobool9.not.i, label %if.end6.i.if.end13.i_crit_edge, label %if.then10.i

if.end6.i.if.end13.i_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13.i

if.then10.i:                                      ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %dev_state.i) #23
  %missing_devices.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %7, i32 0, i32 7
  %27 = ptrtoint ptr %missing_devices.i to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %missing_devices.i, align 8
  %dec12.i = add i64 %28, -1
  store i64 %dec12.i, ptr %missing_devices.i, align 8
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.then10.i, %if.end6.i.if.end13.i_crit_edge
  %bdev.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0, i32 0, i32 7
  %29 = ptrtoint ptr %bdev.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %bdev.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %30, null
  br i1 %tobool.not.i.i, label %if.end13.i.if.end18.i_crit_edge, label %if.end.i.i

if.end13.i.if.end18.i_crit_edge:                  ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end18.i

if.end.i.i:                                       ; preds = %if.end13.i
  %31 = ptrtoint ptr %dev_state.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %dev_state.i, align 4
  %and1.i.i.i = and i32 %32, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool1.not.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool1.not.i.i, label %if.end.i.i.btrfs_close_bdev.exit.i_crit_edge, label %if.then2.i.i

if.end.i.i.btrfs_close_bdev.exit.i_crit_edge:     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_close_bdev.exit.i

if.then2.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %call4.i.i = tail call i32 @sync_blockdev(ptr noundef nonnull %30) #23
  %33 = ptrtoint ptr %bdev.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %bdev.i.i, align 8
  tail call void @invalidate_bdev(ptr noundef %34) #23
  br label %btrfs_close_bdev.exit.i

btrfs_close_bdev.exit.i:                          ; preds = %if.then2.i.i, %if.end.i.i.btrfs_close_bdev.exit.i_crit_edge
  %35 = ptrtoint ptr %bdev.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %bdev.i.i, align 8
  %mode.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0, i32 0, i32 9
  %37 = ptrtoint ptr %mode.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %mode.i.i, align 8
  tail call void @blkdev_put(ptr noundef %36, i32 noundef %38) #23
  %39 = ptrtoint ptr %bdev.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %.pr.i = load ptr, ptr %bdev.i.i, align 8
  %tobool14.not.i = icmp eq ptr %.pr.i, null
  br i1 %tobool14.not.i, label %btrfs_close_bdev.exit.i.if.end18.i_crit_edge, label %if.then15.i

btrfs_close_bdev.exit.i.if.end18.i_crit_edge:     ; preds = %btrfs_close_bdev.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end18.i

if.then15.i:                                      ; preds = %btrfs_close_bdev.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %open_devices.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %7, i32 0, i32 5
  %40 = ptrtoint ptr %open_devices.i to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %open_devices.i, align 8
  %dec16.i = add i64 %41, -1
  store i64 %dec16.i, ptr %open_devices.i, align 8
  %42 = ptrtoint ptr %bdev.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr null, ptr %bdev.i.i, align 8
  br label %if.end18.i

if.end18.i:                                       ; preds = %if.then15.i, %btrfs_close_bdev.exit.i.if.end18.i_crit_edge, %if.end13.i.if.end18.i_crit_edge
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %dev_state.i) #23
  tail call void @btrfs_destroy_dev_zone_info(ptr noundef %device.0) #23
  %fs_info.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0, i32 0, i32 4
  %43 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr null, ptr %fs_info.i, align 4
  %dev_stats_ccnt.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0, i32 0, i32 28
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dev_stats_ccnt.i, i32 noundef 4) #23
  %44 = ptrtoint ptr %dev_stats_ccnt.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store volatile i32 0, ptr %dev_stats_ccnt.i, align 4
  %alloc_state.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0, i32 0, i32 30
  tail call void @extent_io_tree_release(ptr noundef %alloc_state.i) #23
  %last_flush_error.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0, i32 0, i32 11
  %45 = ptrtoint ptr %last_flush_error.i to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 0, ptr %last_flush_error.i, align 8
  %46 = ptrtoint ptr %dev_state.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %dev_state.i, align 4
  %48 = and i32 %47, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool22.not.i = icmp eq i32 %48, 0
  br i1 %tobool22.not.i, label %cond.end.i, label %cond.false.i, !prof !423

cond.false.i:                                     ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.72, i32 noundef 1165) #26
  unreachable

cond.end.i:                                       ; preds = %if.end18.i
  %49 = ptrtoint ptr %dev_state.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %dev_state.i, align 4
  %51 = and i32 %50, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool28.not.i = icmp eq i32 %51, 0
  br i1 %tobool28.not.i, label %cond.end39.i, label %cond.false38.i, !prof !423

cond.false38.i:                                   ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.73, i32 noundef 1166) #26
  unreachable

cond.end39.i:                                     ; preds = %cond.end.i
  %dev_alloc_list40.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0, i32 0, i32 1
  %52 = ptrtoint ptr %dev_alloc_list40.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile ptr, ptr %dev_alloc_list40.i, align 4
  %cmp.i.not.i = icmp eq ptr %53, %dev_alloc_list40.i
  br i1 %cmp.i.not.i, label %cond.end51.i, label %cond.false50.i, !prof !423

cond.false50.i:                                   ; preds = %cond.end39.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.74, i32 noundef 1167) #26
  unreachable

cond.end51.i:                                     ; preds = %cond.end39.i
  %post_commit_list.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0, i32 0, i32 2
  %54 = ptrtoint ptr %post_commit_list.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile ptr, ptr %post_commit_list.i, align 4
  %cmp.i91.not.i = icmp eq ptr %55, %post_commit_list.i
  br i1 %cmp.i91.not.i, label %cond.end51.i.for.cond_crit_edge, label %cond.false61.i, !prof !423

cond.end51.i.for.cond_crit_edge:                  ; preds = %cond.end51.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.cond

cond.false61.i:                                   ; preds = %cond.end51.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.75, i32 noundef 1168) #26
  unreachable

for.end:                                          ; preds = %for.cond
  %open_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 5
  %56 = ptrtoint ptr %open_devices to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %open_devices, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %57)
  %tobool44.not = icmp eq i64 %57, 0
  br i1 %tobool44.not, label %for.end.if.end66_crit_edge, label %do.end60, !prof !423

for.end.if.end66_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end66

do.end60:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 1183, i32 noundef 9, ptr noundef null) #23
  br label %if.end66

if.end66:                                         ; preds = %do.end60, %for.end.if.end66_crit_edge
  %rw_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 6
  %58 = ptrtoint ptr %rw_devices to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %rw_devices, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %59)
  %tobool75.not = icmp eq i64 %59, 0
  br i1 %tobool75.not, label %if.end66.if.end97_crit_edge, label %do.end91, !prof !423

if.end66.if.end97_crit_edge:                      ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end97

do.end91:                                         ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 1184, i32 noundef 9, ptr noundef null) #23
  br label %if.end97

if.end97:                                         ; preds = %do.end91, %if.end66.if.end97_crit_edge
  %60 = ptrtoint ptr %opened to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 0, ptr %opened, align 4
  %seeding = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 16
  %61 = ptrtoint ptr %seeding to i32
  call void @__asan_store1_noabort(i32 %61)
  store i8 0, ptr %seeding, align 8
  %fs_info = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 19
  %62 = ptrtoint ptr %fs_info to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr null, ptr %fs_info, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end97, %if.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_open_devices(ptr noundef %fs_devices, i32 noundef %flags, ptr noundef %holder) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @uuid_mutex, i32 0, i32 5), i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !424

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 1263, i32 noundef 9, ptr noundef null) #23
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %opened = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 17
  %1 = ptrtoint ptr %opened to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %opened, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool24.not = icmp eq i32 %2, 0
  br i1 %tobool24.not, label %if.else, label %if.then25

if.then25:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %inc = add i32 %2, 1
  %3 = ptrtoint ptr %opened to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %inc, ptr %opened, align 4
  br label %if.end28

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 13
  tail call void @list_sort(ptr noundef null, ptr noundef %devices, ptr noundef nonnull @devid_cmp) #23
  %call27 = tail call fastcc i32 @open_fs_devices(ptr noundef %fs_devices, i32 noundef %flags, ptr noundef %holder)
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then25
  %ret.0 = phi i32 [ 0, %if.then25 ], [ %call27, %if.else ]
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @list_sort(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @devid_cmp(ptr nocapture noundef readnone %priv, ptr nocapture noundef readonly %a, ptr nocapture noundef readonly %b) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %devid = getelementptr inbounds %struct.btrfs_device, ptr %a, i32 0, i32 13
  %0 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %devid, align 8
  %devid4 = getelementptr inbounds %struct.btrfs_device, ptr %b, i32 0, i32 13
  %2 = ptrtoint ptr %devid4 to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %devid4, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %1, i64 %3)
  %cmp = icmp ult i64 %1, %3
  call void @__sanitizer_cov_trace_cmp8(i64 %1, i64 %3)
  %cmp7 = icmp ugt i64 %1, %3
  %. = zext i1 %cmp7 to i32
  %retval.0 = select i1 %cmp, i32 -1, i32 %.
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @open_fs_devices(ptr noundef %fs_devices, i32 noundef %flags, ptr noundef %holder) unnamed_addr #4 align 64 {
entry:
  %bdev.i = alloca ptr, align 4
  %disk_super.i = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %or = or i32 %flags, 128
  %devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 13
  %0 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %devices, align 8
  %cmp.not51 = icmp eq ptr %1, %devices
  br i1 %cmp.not51, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %num_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 4
  %seeding.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 16
  %rotating.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 18
  %open_devices.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 5
  %rw_devices.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 6
  %alloc_list.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 14
  %prev.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 14, i32 1
  br label %for.body

for.body:                                         ; preds = %if.end13.for.body_crit_edge, %for.body.lr.ph
  %device.054 = phi ptr [ %1, %for.body.lr.ph ], [ %tmp_device.056, %if.end13.for.body_crit_edge ]
  %latest_dev.052 = phi ptr [ null, %for.body.lr.ph ], [ %latest_dev.1, %if.end13.for.body_crit_edge ]
  %2 = ptrtoint ptr %device.054 to i32
  call void @__asan_load4_noabort(i32 %2)
  %tmp_device.056 = load ptr, ptr %device.054, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %bdev.i) #23
  %3 = ptrtoint ptr %bdev.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr inttoptr (i32 -1 to ptr), ptr %bdev.i, align 4, !annotation !425
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %disk_super.i) #23
  %4 = ptrtoint ptr %disk_super.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr inttoptr (i32 -1 to ptr), ptr %disk_super.i, align 4, !annotation !425
  %bdev1.i = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 7
  %5 = ptrtoint ptr %bdev1.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %bdev1.i, align 8
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %if.end.i, label %for.body.btrfs_open_one_device.exit.thread_crit_edge

for.body.btrfs_open_one_device.exit.thread_crit_edge: ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_open_one_device.exit.thread

if.end.i:                                         ; preds = %for.body
  %name.i = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 5
  %7 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %name.i, align 8
  %tobool2.not.i = icmp eq ptr %8, null
  br i1 %tobool2.not.i, label %if.end.i.btrfs_open_one_device.exit.thread_crit_edge, label %if.end4.i

if.end.i.btrfs_open_one_device.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_open_one_device.exit.thread

if.end4.i:                                        ; preds = %if.end.i
  %str.i = getelementptr inbounds %struct.rcu_string, ptr %8, i32 0, i32 1
  %call.i = call fastcc i32 @btrfs_get_bdev_and_sb(ptr noundef %str.i, i32 noundef %or, ptr noundef %holder, i32 noundef 1, ptr noundef nonnull %bdev.i, ptr noundef nonnull %disk_super.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool6.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %btrfs_open_one_device.exit

if.end8.i:                                        ; preds = %if.end4.i
  %9 = ptrtoint ptr %disk_super.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %disk_super.i, align 4
  %dev_item.i = getelementptr inbounds %struct.btrfs_super_block, ptr %10, i32 0, i32 27
  %11 = ptrtoint ptr %dev_item.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %12 = load i64, ptr %dev_item.i, align 1
  %13 = tail call i64 @llvm.bswap.i64(i64 %12) #23
  %devid10.i = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 13
  %14 = ptrtoint ptr %devid10.i to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %devid10.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %13, i64 %15)
  %cmp.not.i = icmp eq i64 %13, %15
  br i1 %cmp.not.i, label %if.end12.i, label %if.end8.i.error_free_page.i_crit_edge

if.end8.i.error_free_page.i_crit_edge:            ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %error_free_page.i

if.end12.i:                                       ; preds = %if.end8.i
  %uuid.i = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 21
  %uuid15.i = getelementptr inbounds %struct.btrfs_super_block, ptr %10, i32 0, i32 27, i32 12
  %bcmp.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %uuid.i, ptr noundef dereferenceable(16) %uuid15.i, i32 16) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %tobool18.not.i = icmp eq i32 %bcmp.i, 0
  br i1 %tobool18.not.i, label %if.end20.i, label %if.end12.i.error_free_page.i_crit_edge

if.end12.i.error_free_page.i_crit_edge:           ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %error_free_page.i

if.end20.i:                                       ; preds = %if.end12.i
  %generation.i.i = getelementptr inbounds %struct.btrfs_super_block, ptr %10, i32 0, i32 5
  %16 = ptrtoint ptr %generation.i.i to i32
  call void @__asan_loadN_noabort(i32 %16, i32 8)
  %17 = load i64, ptr %generation.i.i, align 1
  %18 = tail call i64 @llvm.bswap.i64(i64 %17) #23
  %generation.i = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 6
  %19 = ptrtoint ptr %generation.i to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %18, ptr %generation.i, align 8
  %flags.i.i = getelementptr inbounds %struct.btrfs_super_block, ptr %10, i32 0, i32 3
  %20 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_loadN_noabort(i32 %20, i32 8)
  %21 = load i64, ptr %flags.i.i, align 1
  %22 = and i64 %21, 16777216
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %22)
  %tobool23.not.i = icmp eq i64 %22, 0
  br i1 %tobool23.not.i, label %if.else.i, label %if.then24.i

if.then24.i:                                      ; preds = %if.end20.i
  %incompat_flags.i.i = getelementptr inbounds %struct.btrfs_super_block, ptr %10, i32 0, i32 22
  %23 = ptrtoint ptr %incompat_flags.i.i to i32
  call void @__asan_loadN_noabort(i32 %23, i32 8)
  %24 = load i64, ptr %incompat_flags.i.i, align 1
  %25 = and i64 %24, 1125899906842624
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %25)
  %tobool27.not.i = icmp eq i64 %25, 0
  br i1 %tobool27.not.i, label %if.end30.i, label %do.end.i

do.end.i:                                         ; preds = %if.then24.i
  call void @__sanitizer_cov_trace_pc() #25
  %call29.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.76) #28
  br label %error_free_page.i

if.end30.i:                                       ; preds = %if.then24.i
  call void @__sanitizer_cov_trace_pc() #25
  %dev_state.i = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 10
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %dev_state.i) #23
  %26 = ptrtoint ptr %seeding.i to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 1, ptr %seeding.i, align 8
  br label %if.end38.i

if.else.i:                                        ; preds = %if.end20.i
  %27 = ptrtoint ptr %bdev.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %bdev.i, align 4
  %bd_read_only.i.i = getelementptr inbounds %struct.block_device, ptr %28, i32 0, i32 4
  %29 = ptrtoint ptr %bd_read_only.i.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %bd_read_only.i.i, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool.not.i.i = icmp eq i8 %30, 0
  br i1 %tobool.not.i.i, label %lor.rhs.i.i, label %if.else.i.if.then33.i_crit_edge

if.else.i.if.then33.i_crit_edge:                  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then33.i

lor.rhs.i.i:                                      ; preds = %if.else.i
  %bd_disk.i.i = getelementptr inbounds %struct.block_device, ptr %28, i32 0, i32 17
  %31 = ptrtoint ptr %bd_disk.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %bd_disk.i.i, align 8
  %part0.i.i.i = getelementptr inbounds %struct.gendisk, ptr %32, i32 0, i32 7
  %33 = ptrtoint ptr %part0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %part0.i.i.i, align 4
  %bd_read_only.i.i.i = getelementptr inbounds %struct.block_device, ptr %34, i32 0, i32 4
  %35 = ptrtoint ptr %bd_read_only.i.i.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %bd_read_only.i.i.i, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool.not.i.i.i = icmp eq i8 %36, 0
  br i1 %tobool.not.i.i.i, label %bdev_read_only.exit.i, label %lor.rhs.i.i.if.then33.i_crit_edge

lor.rhs.i.i.if.then33.i_crit_edge:                ; preds = %lor.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then33.i

bdev_read_only.exit.i:                            ; preds = %lor.rhs.i.i
  %state.i.i.i = getelementptr inbounds %struct.gendisk, ptr %32, i32 0, i32 12
  %37 = ptrtoint ptr %state.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %state.i.i.i, align 4
  %39 = and i32 %38, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool32.not.i = icmp eq i32 %39, 0
  br i1 %tobool32.not.i, label %if.else35.i, label %bdev_read_only.exit.i.if.then33.i_crit_edge

bdev_read_only.exit.i.if.then33.i_crit_edge:      ; preds = %bdev_read_only.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then33.i

if.then33.i:                                      ; preds = %bdev_read_only.exit.i.if.then33.i_crit_edge, %lor.rhs.i.i.if.then33.i_crit_edge, %if.else.i.if.then33.i_crit_edge
  %dev_state34.i = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 10
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %dev_state34.i) #23
  br label %if.end38.i

if.else35.i:                                      ; preds = %bdev_read_only.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %dev_state36.i = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 10
  tail call void @_set_bit(i32 noundef 0, ptr noundef %dev_state36.i) #23
  br label %if.end38.i

if.end38.i:                                       ; preds = %if.else35.i, %if.then33.i, %if.end30.i
  %40 = ptrtoint ptr %bdev.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %bdev.i, align 4
  %bd_queue.i.i = getelementptr inbounds %struct.block_device, ptr %41, i32 0, i32 18
  %42 = ptrtoint ptr %bd_queue.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %bd_queue.i.i, align 4
  %queue_flags.i = getelementptr inbounds %struct.request_queue, ptr %43, i32 0, i32 11
  %44 = ptrtoint ptr %queue_flags.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %queue_flags.i, align 4
  %46 = and i32 %45, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool41.not.i = icmp eq i32 %46, 0
  br i1 %tobool41.not.i, label %if.then42.i, label %if.end38.i.if.end43.i_crit_edge

if.end38.i.if.end43.i_crit_edge:                  ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end43.i

if.then42.i:                                      ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #25
  %47 = ptrtoint ptr %rotating.i to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 1, ptr %rotating.i, align 8
  br label %if.end43.i

if.end43.i:                                       ; preds = %if.then42.i, %if.end38.i.if.end43.i_crit_edge
  %48 = ptrtoint ptr %bdev1.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %41, ptr %bdev1.i, align 8
  %dev_state45.i = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 10
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %dev_state45.i) #23
  %mode.i = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 9
  %49 = ptrtoint ptr %mode.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %or, ptr %mode.i, align 8
  %50 = ptrtoint ptr %open_devices.i to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %open_devices.i, align 8
  %inc.i = add i64 %51, 1
  store i64 %inc.i, ptr %open_devices.i, align 8
  %52 = ptrtoint ptr %dev_state45.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %dev_state45.i, align 4
  %and1.i79.i = and i32 %53, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i79.i)
  %tobool48.not.i = icmp eq i32 %and1.i79.i, 0
  br i1 %tobool48.not.i, label %if.end43.i.btrfs_open_one_device.exit.thread47_crit_edge, label %land.lhs.true.i

if.end43.i.btrfs_open_one_device.exit.thread47_crit_edge: ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_open_one_device.exit.thread47

land.lhs.true.i:                                  ; preds = %if.end43.i
  %54 = ptrtoint ptr %devid10.i to i32
  call void @__asan_load8_noabort(i32 %54)
  %55 = load i64, ptr %devid10.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %55)
  %cmp50.not.i = icmp eq i64 %55, 0
  br i1 %cmp50.not.i, label %land.lhs.true.i.btrfs_open_one_device.exit.thread47_crit_edge, label %if.then51.i

land.lhs.true.i.btrfs_open_one_device.exit.thread47_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_open_one_device.exit.thread47

if.then51.i:                                      ; preds = %land.lhs.true.i
  %56 = ptrtoint ptr %rw_devices.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %rw_devices.i, align 8
  %inc52.i = add i64 %57, 1
  store i64 %inc52.i, ptr %rw_devices.i, align 8
  %dev_alloc_list.i = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 1
  %58 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %dev_alloc_list.i, ptr noundef %59, ptr noundef %alloc_list.i) #23
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then51.i.btrfs_open_one_device.exit.thread47_crit_edge

if.then51.i.btrfs_open_one_device.exit.thread47_crit_edge: ; preds = %if.then51.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_open_one_device.exit.thread47

if.end.i.i.i:                                     ; preds = %if.then51.i
  call void @__sanitizer_cov_trace_pc() #25
  %60 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %dev_alloc_list.i, ptr %prev.i.i, align 4
  %61 = ptrtoint ptr %dev_alloc_list.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %alloc_list.i, ptr %dev_alloc_list.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 1, i32 1
  %62 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %59, ptr %prev3.i.i.i, align 4
  %63 = ptrtoint ptr %59 to i32
  call void @__asan_store4_noabort(i32 %63)
  store volatile ptr %dev_alloc_list.i, ptr %59, align 4
  br label %btrfs_open_one_device.exit.thread47

btrfs_open_one_device.exit.thread47:              ; preds = %if.end.i.i.i, %if.then51.i.btrfs_open_one_device.exit.thread47_crit_edge, %land.lhs.true.i.btrfs_open_one_device.exit.thread47_crit_edge, %if.end43.i.btrfs_open_one_device.exit.thread47_crit_edge
  tail call void @btrfs_release_disk_super(ptr noundef %10) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %disk_super.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %bdev.i) #23
  %tobool.not = icmp eq ptr %latest_dev.052, null
  br i1 %tobool.not, label %btrfs_open_one_device.exit.thread47.if.end13_crit_edge, label %lor.lhs.false

btrfs_open_one_device.exit.thread47.if.end13_crit_edge: ; preds = %btrfs_open_one_device.exit.thread47
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13

error_free_page.i:                                ; preds = %do.end.i, %if.end12.i.error_free_page.i_crit_edge, %if.end8.i.error_free_page.i_crit_edge
  tail call void @btrfs_release_disk_super(ptr noundef %10) #23
  %64 = ptrtoint ptr %bdev.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %bdev.i, align 4
  tail call void @blkdev_put(ptr noundef %65, i32 noundef %or) #23
  br label %btrfs_open_one_device.exit.thread

btrfs_open_one_device.exit.thread:                ; preds = %error_free_page.i, %if.end.i.btrfs_open_one_device.exit.thread_crit_edge, %for.body.btrfs_open_one_device.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %disk_super.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %bdev.i) #23
  br label %if.end13

btrfs_open_one_device.exit:                       ; preds = %if.end4.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %disk_super.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %bdev.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 -61, i32 %call.i)
  %cond = icmp eq i32 %call.i, -61
  br i1 %cond, label %if.then11, label %btrfs_open_one_device.exit.if.end13_crit_edge

btrfs_open_one_device.exit.if.end13_crit_edge:    ; preds = %btrfs_open_one_device.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13

lor.lhs.false:                                    ; preds = %btrfs_open_one_device.exit.thread47
  call void @__sanitizer_cov_trace_pc() #25
  %66 = ptrtoint ptr %generation.i to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %generation.i, align 8
  %generation8 = getelementptr inbounds %struct.btrfs_device, ptr %latest_dev.052, i32 0, i32 6
  %68 = ptrtoint ptr %generation8 to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %generation8, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %67, i64 %69)
  %cmp9 = icmp ugt i64 %67, %69
  %spec.select = select i1 %cmp9, ptr %device.054, ptr %latest_dev.052
  br label %if.end13

if.then11:                                        ; preds = %btrfs_open_one_device.exit
  %70 = ptrtoint ptr %num_devices to i32
  call void @__asan_load8_noabort(i32 %70)
  %71 = load i64, ptr %num_devices, align 8
  %dec = add i64 %71, -1
  store i64 %dec, ptr %num_devices, align 8
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %device.054) #23
  br i1 %call.i.i, label %if.end.i.i, label %if.then11.list_del.exit_crit_edge

if.then11.list_del.exit_crit_edge:                ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i45 = getelementptr inbounds %struct.list_head, ptr %device.054, i32 0, i32 1
  %72 = ptrtoint ptr %prev.i.i45 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %prev.i.i45, align 4
  %74 = ptrtoint ptr %device.054 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %device.054, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %75, i32 0, i32 1
  %76 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr %73, ptr %prev1.i.i.i, align 4
  %77 = ptrtoint ptr %73 to i32
  call void @__asan_store4_noabort(i32 %77)
  store volatile ptr %75, ptr %73, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then11.list_del.exit_crit_edge
  %78 = ptrtoint ptr %device.054 to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr inttoptr (i32 256 to ptr), ptr %device.054, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %device.054, i32 0, i32 1
  %79 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @btrfs_free_device(ptr noundef %device.054)
  br label %if.end13

if.end13:                                         ; preds = %list_del.exit, %lor.lhs.false, %btrfs_open_one_device.exit.if.end13_crit_edge, %btrfs_open_one_device.exit.thread, %btrfs_open_one_device.exit.thread47.if.end13_crit_edge
  %latest_dev.1 = phi ptr [ %latest_dev.052, %list_del.exit ], [ %device.054, %btrfs_open_one_device.exit.thread47.if.end13_crit_edge ], [ %latest_dev.052, %btrfs_open_one_device.exit.if.end13_crit_edge ], [ %latest_dev.052, %btrfs_open_one_device.exit.thread ], [ %spec.select, %lor.lhs.false ]
  %cmp.not = icmp eq ptr %tmp_device.056, %devices
  br i1 %cmp.not, label %if.end13.for.end_crit_edge, label %if.end13.for.body_crit_edge

if.end13.for.body_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

if.end13.for.end_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.end:                                          ; preds = %if.end13.for.end_crit_edge, %entry.for.end_crit_edge
  %latest_dev.0.lcssa = phi ptr [ null, %entry.for.end_crit_edge ], [ %latest_dev.1, %if.end13.for.end_crit_edge ]
  %open_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 5
  %80 = ptrtoint ptr %open_devices to i32
  call void @__asan_load8_noabort(i32 %80)
  %81 = load i64, ptr %open_devices, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %81)
  %cmp19 = icmp eq i64 %81, 0
  br i1 %cmp19, label %for.end.cleanup_crit_edge, label %if.end21

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end21:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  %opened = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 17
  %82 = ptrtoint ptr %opened to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 1, ptr %opened, align 4
  %latest_dev22 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 11
  %83 = ptrtoint ptr %latest_dev22 to i32
  call void @__asan_store4_noabort(i32 %83)
  store ptr %latest_dev.0.lcssa, ptr %latest_dev22, align 8
  %total_rw_bytes = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 8
  %84 = ptrtoint ptr %total_rw_bytes to i32
  call void @__asan_store8_noabort(i32 %84)
  store i64 0, ptr %total_rw_bytes, align 8
  %chunk_alloc_policy = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 24
  %85 = ptrtoint ptr %chunk_alloc_policy to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 0, ptr %chunk_alloc_policy, align 8
  %read_policy = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 25
  %86 = ptrtoint ptr %read_policy to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 0, ptr %read_policy, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end21, %for.end.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end21 ], [ -22, %for.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_release_disk_super(ptr noundef %super) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %0 = load ptr, ptr @mem_map, align 4
  %1 = ptrtoint ptr %super to i32
  %sub = add i32 %1, 1073741824
  %shr = lshr i32 %sub, 12
  %2 = getelementptr %struct.page, ptr %0, i32 %shr, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %2, align 4
  %and.i.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !423

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %sub.i.i = add i32 %4, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %add.ptr = getelementptr %struct.page, ptr %0, i32 %shr
  %5 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %5, %if.end.i.i ]
  %6 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %6, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #23
  %7 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp.i.i.i.i = icmp eq i32 %8, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !424

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @dump_page(ptr noundef %6, ptr noundef nonnull @.str.78) #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #23, !srcloc !427
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !428
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #23
  %9 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #23, !srcloc !429
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %9, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !430
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@btrfs_release_disk_super, %if.then.i.i.i.i.i)) #23
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !431

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %6, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #23
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.put_page.exit_crit_edge

folio_put_testzero.exit.i.i.put_page.exit_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %put_page.exit

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @__put_page(ptr noundef %6) #23
  br label %put_page.exit

put_page.exit:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.put_page.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_forget_devices(ptr noundef %path) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @uuid_mutex, i32 noundef 0) #23
  %0 = ptrtoint ptr %path to i32
  call void @__asan_load1_noabort(i32 %0)
  %char0 = load i8, ptr %path, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %char0)
  %tobool.not = icmp eq i8 %char0, 0
  %spec.select = select i1 %tobool.not, ptr null, ptr %path
  %call1 = tail call fastcc i32 @btrfs_free_stale_devices(ptr noundef %spec.select, ptr noundef null)
  tail call void @mutex_unlock(ptr noundef nonnull @uuid_mutex) #23
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_free_stale_devices(ptr noundef readonly %path, ptr noundef readnone %skip_device) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @uuid_mutex, i32 0, i32 5), i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !424

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 566, i32 noundef 9, ptr noundef null) #23
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool24.not = icmp eq ptr %path, null
  %spec.select = select i1 %tobool24.not, i32 0, i32 -2
  %1 = load ptr, ptr @fs_uuids, align 4
  %cmp32.not140 = icmp eq ptr %1, @fs_uuids
  br i1 %cmp32.not140, label %if.end.for.end90_crit_edge, label %for.body.lr.ph

if.end.for.end90_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end90

for.body.lr.ph:                                   ; preds = %if.end
  %tobool50.not = icmp ne ptr %skip_device, null
  br label %for.body

for.body:                                         ; preds = %for.inc84.for.body_crit_edge, %for.body.lr.ph
  %.pn.in142 = phi ptr [ %1, %for.body.lr.ph ], [ %.pn144, %for.inc84.for.body_crit_edge ]
  %ret.1141 = phi i32 [ %spec.select, %for.body.lr.ph ], [ %ret.4, %for.inc84.for.body_crit_edge ]
  %fs_devices.0143 = getelementptr i8, ptr %.pn.in142, i32 -36
  %2 = ptrtoint ptr %.pn.in142 to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn144 = load ptr, ptr %.pn.in142, align 4
  %device_list_mutex = getelementptr i8, ptr %.pn.in142, i32 72
  tail call void @mutex_lock_nested(ptr noundef %device_list_mutex, i32 noundef 0) #23
  %devices = getelementptr i8, ptr %.pn.in142, i32 164
  %3 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %devices, align 8
  %cmp46.not132 = icmp eq ptr %4, %devices
  br i1 %cmp46.not132, label %for.body.for.end_crit_edge, label %for.body49.lr.ph

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.body49.lr.ph:                                 ; preds = %for.body
  %opened128 = getelementptr i8, ptr %.pn.in142, i32 192
  %num_devices = getelementptr i8, ptr %.pn.in142, i32 12
  br label %for.body49

for.body49:                                       ; preds = %for.inc.for.body49_crit_edge, %for.body49.lr.ph
  %device.0134 = phi ptr [ %4, %for.body49.lr.ph ], [ %tmp_device.0136, %for.inc.for.body49_crit_edge ]
  %ret.2133 = phi i32 [ %ret.1141, %for.body49.lr.ph ], [ %ret.3, %for.inc.for.body49_crit_edge ]
  %5 = ptrtoint ptr %device.0134 to i32
  call void @__asan_load4_noabort(i32 %5)
  %tmp_device.0136 = load ptr, ptr %device.0134, align 8
  %cmp51 = icmp eq ptr %device.0134, %skip_device
  %or.cond = and i1 %tobool50.not, %cmp51
  br i1 %or.cond, label %for.body49.for.inc_crit_edge, label %if.end53

for.body49.for.inc_crit_edge:                     ; preds = %for.body49
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

if.end53:                                         ; preds = %for.body49
  br i1 %tobool24.not, label %if.end63, label %land.lhs.true55

land.lhs.true55:                                  ; preds = %if.end53
  %name = getelementptr inbounds %struct.btrfs_device, ptr %device.0134, i32 0, i32 5
  %6 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %name, align 8
  %tobool56.not = icmp eq ptr %7, null
  br i1 %tobool56.not, label %land.lhs.true55.for.inc_crit_edge, label %land.lhs.true60.critedge

land.lhs.true55.for.inc_crit_edge:                ; preds = %land.lhs.true55
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

land.lhs.true60.critedge:                         ; preds = %land.lhs.true55
  %8 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %11, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !432
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #23
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i.i, label %land.lhs.true60.critedge.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

land.lhs.true60.critedge.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true60.critedge
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %land.lhs.true60.critedge
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 696, ptr noundef nonnull @.str.97) #23
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true60.critedge.rcu_read_lock.exit.i_crit_edge
  %12 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %name, align 8
  %call.i118 = tail call i32 @rcu_read_lock_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i118)
  %tobool.not.i = icmp eq i32 %call.i118, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %rcu_read_lock.exit.i.do.end7.i_crit_edge

rcu_read_lock.exit.i.do.end7.i_crit_edge:         ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end7.i

land.lhs.true.i:                                  ; preds = %rcu_read_lock.exit.i
  %call2.i = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.do.end7.i_crit_edge, label %land.lhs.true4.i

land.lhs.true.i.do.end7.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end7.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  %.b11.i = load i1, ptr @device_path_matched.__warned, align 1
  br i1 %.b11.i, label %land.lhs.true4.i.do.end7.i_crit_edge, label %if.then.i

land.lhs.true4.i.do.end7.i_crit_edge:             ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end7.i

if.then.i:                                        ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @device_path_matched.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.9, i32 noundef 542, ptr noundef nonnull @.str.13) #23
  br label %do.end7.i

do.end7.i:                                        ; preds = %if.then.i, %land.lhs.true4.i.do.end7.i_crit_edge, %land.lhs.true.i.do.end7.i_crit_edge, %rcu_read_lock.exit.i.do.end7.i_crit_edge
  %str.i = getelementptr inbounds %struct.rcu_string, ptr %13, i32 0, i32 1
  %call10.i = tail call i32 @strcmp(ptr noundef %str.i, ptr noundef nonnull %path) #27
  %call.i12.i = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i12.i, label %do.end7.i.device_path_matched.exit_crit_edge, label %land.lhs.true.i15.i

do.end7.i.device_path_matched.exit_crit_edge:     ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %device_path_matched.exit

land.lhs.true.i15.i:                              ; preds = %do.end7.i
  %call1.i13.i = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i13.i)
  %tobool.not.i14.i = icmp eq i32 %call1.i13.i, 0
  br i1 %tobool.not.i14.i, label %land.lhs.true.i15.i.device_path_matched.exit_crit_edge, label %land.lhs.true2.i17.i

land.lhs.true.i15.i.device_path_matched.exit_crit_edge: ; preds = %land.lhs.true.i15.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %device_path_matched.exit

land.lhs.true2.i17.i:                             ; preds = %land.lhs.true.i15.i
  %.b4.i16.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i16.i, label %land.lhs.true2.i17.i.device_path_matched.exit_crit_edge, label %if.then.i18.i

land.lhs.true2.i17.i.device_path_matched.exit_crit_edge: ; preds = %land.lhs.true2.i17.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %device_path_matched.exit

if.then.i18.i:                                    ; preds = %land.lhs.true2.i17.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 724, ptr noundef nonnull @.str.98) #23
  br label %device_path_matched.exit

device_path_matched.exit:                         ; preds = %if.then.i18.i, %land.lhs.true2.i17.i.device_path_matched.exit_crit_edge, %land.lhs.true.i15.i.device_path_matched.exit_crit_edge, %do.end7.i.device_path_matched.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !433
  %14 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i.i19.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i.i.i19.i to ptr
  %preempt_count.i.i.i.i20.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i.i.i20.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i.i.i20.i, align 4
  %sub.i.i.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i20.i, align 4
  tail call void @rcu_read_unlock_strict() #23
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %cmp.i = icmp eq i32 %call10.i, 0
  br i1 %cmp.i, label %if.end63.thread, label %device_path_matched.exit.for.inc_crit_edge

device_path_matched.exit.for.inc_crit_edge:       ; preds = %device_path_matched.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

if.end63:                                         ; preds = %if.end53
  %18 = ptrtoint ptr %opened128 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %opened128, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool64.not = icmp eq i32 %19, 0
  br i1 %tobool64.not, label %if.end63.if.end71_crit_edge, label %if.end63.for.end_crit_edge

if.end63.for.end_crit_edge:                       ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

if.end63.if.end71_crit_edge:                      ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end71

if.end63.thread:                                  ; preds = %device_path_matched.exit
  %20 = ptrtoint ptr %opened128 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %opened128, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool64.not129 = icmp eq i32 %21, 0
  br i1 %tobool64.not129, label %if.end63.thread.if.end71_crit_edge, label %land.lhs.true67

if.end63.thread.if.end71_crit_edge:               ; preds = %if.end63.thread
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end71

land.lhs.true67:                                  ; preds = %if.end63.thread
  call void @__sanitizer_cov_trace_pc() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.2133)
  %cmp68.not = icmp eq i32 %ret.2133, 0
  %spec.store.select = select i1 %cmp68.not, i32 0, i32 -16
  br label %for.end

if.end71:                                         ; preds = %if.end63.thread.if.end71_crit_edge, %if.end63.if.end71_crit_edge
  %22 = ptrtoint ptr %num_devices to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %num_devices, align 8
  %dec = add i64 %23, -1
  store i64 %dec, ptr %num_devices, align 8
  %call.i.i119 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %device.0134) #23
  br i1 %call.i.i119, label %if.end.i.i, label %if.end71.list_del.exit_crit_edge

if.end71.list_del.exit_crit_edge:                 ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %device.0134, i32 0, i32 1
  %24 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %prev.i.i, align 4
  %26 = ptrtoint ptr %device.0134 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %device.0134, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %25, ptr %prev1.i.i.i, align 4
  %29 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile ptr %27, ptr %25, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.end71.list_del.exit_crit_edge
  %30 = ptrtoint ptr %device.0134 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr inttoptr (i32 256 to ptr), ptr %device.0134, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %device.0134, i32 0, i32 1
  %31 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @btrfs_free_device(ptr noundef %device.0134)
  br label %for.inc

for.inc:                                          ; preds = %list_del.exit, %device_path_matched.exit.for.inc_crit_edge, %land.lhs.true55.for.inc_crit_edge, %for.body49.for.inc_crit_edge
  %ret.3 = phi i32 [ 0, %list_del.exit ], [ %ret.2133, %device_path_matched.exit.for.inc_crit_edge ], [ %ret.2133, %land.lhs.true55.for.inc_crit_edge ], [ %ret.2133, %for.body49.for.inc_crit_edge ]
  %cmp46.not = icmp eq ptr %tmp_device.0136, %devices
  br i1 %cmp46.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body49_crit_edge

for.inc.for.body49_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body49

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %land.lhs.true67, %if.end63.for.end_crit_edge, %for.body.for.end_crit_edge
  %ret.4 = phi i32 [ %spec.store.select, %land.lhs.true67 ], [ %ret.1141, %for.body.for.end_crit_edge ], [ %ret.3, %for.inc.for.end_crit_edge ], [ %ret.2133, %if.end63.for.end_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %device_list_mutex) #23
  %num_devices79 = getelementptr i8, ptr %.pn.in142, i32 12
  %32 = ptrtoint ptr %num_devices79 to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %num_devices79, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %33)
  %cmp80 = icmp eq i64 %33, 0
  br i1 %cmp80, label %if.then81, label %for.end.for.inc84_crit_edge

for.end.for.inc84_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc84

if.then81:                                        ; preds = %for.end
  tail call void @btrfs_sysfs_remove_fsid(ptr noundef %fs_devices.0143) #23
  %call.i.i120 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in142) #23
  br i1 %call.i.i120, label %if.end.i.i123, label %if.then81.list_del.exit125_crit_edge

if.then81.list_del.exit125_crit_edge:             ; preds = %if.then81
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del.exit125

if.end.i.i123:                                    ; preds = %if.then81
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i121 = getelementptr inbounds %struct.list_head, ptr %.pn.in142, i32 0, i32 1
  %34 = ptrtoint ptr %prev.i.i121 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %prev.i.i121, align 4
  %36 = ptrtoint ptr %.pn.in142 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %.pn.in142, align 4
  %prev1.i.i.i122 = getelementptr inbounds %struct.list_head, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %prev1.i.i.i122 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %35, ptr %prev1.i.i.i122, align 4
  %39 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %37, ptr %35, align 4
  br label %list_del.exit125

list_del.exit125:                                 ; preds = %if.end.i.i123, %if.then81.list_del.exit125_crit_edge
  %40 = ptrtoint ptr %.pn.in142 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in142, align 4
  %prev.i124 = getelementptr inbounds %struct.list_head, ptr %.pn.in142, i32 0, i32 1
  %41 = ptrtoint ptr %prev.i124 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i124, align 4
  %opened.i = getelementptr i8, ptr %.pn.in142, i32 192
  %42 = ptrtoint ptr %opened.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %opened.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool.not.i126 = icmp eq i32 %43, 0
  br i1 %tobool.not.i126, label %list_del.exit125.if.end.i_crit_edge, label %do.end.i, !prof !423

list_del.exit125.if.end.i_crit_edge:              ; preds = %list_del.exit125
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

do.end.i:                                         ; preds = %list_del.exit125
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 416, i32 noundef 9, ptr noundef null) #23
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %list_del.exit125.if.end.i_crit_edge
  %44 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile ptr, ptr %devices, align 4
  %cmp.i.not30.i = icmp eq ptr %45, %devices
  br i1 %cmp.i.not30.i, label %if.end.i.free_fs_devices.exit_crit_edge, label %if.end.i.while.body.i_crit_edge

if.end.i.while.body.i_crit_edge:                  ; preds = %if.end.i
  br label %while.body.i

if.end.i.free_fs_devices.exit_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_fs_devices.exit

while.body.i:                                     ; preds = %list_del.exit.i.while.body.i_crit_edge, %if.end.i.while.body.i_crit_edge
  %46 = phi ptr [ %56, %list_del.exit.i.while.body.i_crit_edge ], [ %45, %if.end.i.while.body.i_crit_edge ]
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %46) #23
  br i1 %call.i.i.i, label %if.end.i.i.i, label %while.body.i.list_del.exit.i_crit_edge

while.body.i.list_del.exit.i_crit_edge:           ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %46, i32 0, i32 1
  %47 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %prev.i.i.i, align 4
  %49 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %46, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %50, i32 0, i32 1
  %51 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %48, ptr %prev1.i.i.i.i, align 4
  %52 = ptrtoint ptr %48 to i32
  call void @__asan_store4_noabort(i32 %52)
  store volatile ptr %50, ptr %48, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %while.body.i.list_del.exit.i_crit_edge
  %53 = ptrtoint ptr %46 to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr inttoptr (i32 256 to ptr), ptr %46, align 4
  %prev.i.i127 = getelementptr inbounds %struct.list_head, ptr %46, i32 0, i32 1
  %54 = ptrtoint ptr %prev.i.i127 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i127, align 4
  tail call void @btrfs_free_device(ptr noundef %46) #23
  %55 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile ptr, ptr %devices, align 4
  %cmp.i.not.i = icmp eq ptr %56, %devices
  br i1 %cmp.i.not.i, label %list_del.exit.i.free_fs_devices.exit_crit_edge, label %list_del.exit.i.while.body.i_crit_edge

list_del.exit.i.while.body.i_crit_edge:           ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body.i

list_del.exit.i.free_fs_devices.exit_crit_edge:   ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_fs_devices.exit

free_fs_devices.exit:                             ; preds = %list_del.exit.i.free_fs_devices.exit_crit_edge, %if.end.i.free_fs_devices.exit_crit_edge
  tail call void @kfree(ptr noundef %fs_devices.0143) #23
  br label %for.inc84

for.inc84:                                        ; preds = %free_fs_devices.exit, %for.end.for.inc84_crit_edge
  %cmp32.not = icmp eq ptr %.pn144, @fs_uuids
  br i1 %cmp32.not, label %for.inc84.for.end90_crit_edge, label %for.inc84.for.body_crit_edge

for.inc84.for.body_crit_edge:                     ; preds = %for.inc84
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

for.inc84.for.end90_crit_edge:                    ; preds = %for.inc84
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end90

for.end90:                                        ; preds = %for.inc84.for.end90_crit_edge, %if.end.for.end90_crit_edge
  %ret.1.lcssa = phi i32 [ %spec.select, %if.end.for.end90_crit_edge ], [ %ret.4, %for.inc84.for.end90_crit_edge ]
  ret i32 %ret.1.lcssa
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @btrfs_scan_one_device(ptr noundef %path, i32 noundef %flags, ptr noundef %holder) local_unnamed_addr #4 align 64 {
entry:
  %new_device_added = alloca i8, align 1
  %bytenr = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %new_device_added) #23
  %0 = ptrtoint ptr %new_device_added to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 0, ptr %new_device_added, align 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %bytenr) #23
  %1 = ptrtoint ptr %bytenr to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 -1, ptr %bytenr, align 8, !annotation !425
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @uuid_mutex, i32 0, i32 5), i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !424

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 1360, i32 noundef 9, ptr noundef null) #23
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %or = or i32 %flags, 128
  %call24 = tail call ptr @blkdev_get_by_path(ptr noundef %path, i32 noundef %or, ptr noundef %holder) #23
  %cmp.i = icmp ugt ptr %call24, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end.cleanup_crit_edge, label %if.end28

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end28:                                         ; preds = %if.end
  %call30 = call i32 @btrfs_sb_log_location_bdev(ptr noundef %call24, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %bytenr) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30)
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %if.end34, label %if.then32

if.then32:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #25
  %3 = inttoptr i32 %call30 to ptr
  br label %error_bdev_put

if.end34:                                         ; preds = %if.end28
  %4 = ptrtoint ptr %bytenr to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %bytenr, align 8
  %add.i = add i64 %5, 4096
  %bd_nr_sectors.i.i.i = getelementptr inbounds %struct.block_device, ptr %call24, i32 0, i32 1
  %6 = ptrtoint ptr %bd_nr_sectors.i.i.i to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %bd_nr_sectors.i.i.i, align 8
  %shl.i.i = shl i64 %7, 9
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i, i64 %shl.i.i)
  %cmp.not.i = icmp ult i64 %add.i, %shl.i.i
  br i1 %cmp.not.i, label %if.end.i, label %if.end34.error_bdev_put_crit_edge

if.end34.error_bdev_put_crit_edge:                ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #25
  br label %error_bdev_put

if.end.i:                                         ; preds = %if.end34
  %shr.i = lshr i64 %5, 12
  %sub.i = add i64 %5, 4095
  %shr3.i = lshr i64 %sub.i, 12
  %conv4.i = and i64 %shr.i, 4294967295
  call void @__sanitizer_cov_trace_cmp8(i64 %shr3.i, i64 %conv4.i)
  %cmp5.not.i = icmp eq i64 %shr3.i, %conv4.i
  br i1 %cmp5.not.i, label %if.end9.i, label %if.end.i.error_bdev_put_crit_edge

if.end.i.error_bdev_put_crit_edge:                ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %error_bdev_put

if.end9.i:                                        ; preds = %if.end.i
  %conv.i = trunc i64 %shr.i to i32
  %bd_inode.i = getelementptr inbounds %struct.block_device, ptr %call24, i32 0, i32 7
  %8 = ptrtoint ptr %bd_inode.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %bd_inode.i, align 4
  %i_mapping.i = getelementptr inbounds %struct.inode, ptr %9, i32 0, i32 9
  %10 = ptrtoint ptr %i_mapping.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %i_mapping.i, align 8
  %call10.i = call ptr @read_cache_page_gfp(ptr noundef %11, i32 noundef %conv.i, i32 noundef 3264) #23
  %cmp.i.i = icmp ugt ptr %call10.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.end9.i.btrfs_read_disk_super.exit_crit_edge, label %if.end14.i

if.end9.i.btrfs_read_disk_super.exit_crit_edge:   ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_read_disk_super.exit

if.end14.i:                                       ; preds = %if.end9.i
  %call15.i = call ptr @page_address(ptr noundef %call10.i) #23
  %conv16.i = trunc i64 %5 to i32
  %and.i = and i32 %conv16.i, 4095
  %add.ptr.i = getelementptr i8, ptr %call15.i, i32 %and.i
  %bytenr.i.i = getelementptr inbounds %struct.btrfs_super_block, ptr %add.ptr.i, i32 0, i32 2
  %12 = ptrtoint ptr %bytenr.i.i to i32
  call void @__asan_loadN_noabort(i32 %12, i32 8)
  %13 = load i64, ptr %bytenr.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 1099511627776, i64 %13)
  %cmp18.not.i = icmp eq i64 %13, 1099511627776
  br i1 %cmp18.not.i, label %lor.lhs.false.i, label %if.end14.i.if.then23.i_crit_edge

if.end14.i.if.then23.i_crit_edge:                 ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then23.i

lor.lhs.false.i:                                  ; preds = %if.end14.i
  %magic.i.i = getelementptr inbounds %struct.btrfs_super_block, ptr %add.ptr.i, i32 0, i32 4
  %14 = ptrtoint ptr %magic.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 8)
  %15 = load i64, ptr %magic.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 6864128300807315277, i64 %15)
  %cmp21.not.i = icmp eq i64 %15, 6864128300807315277
  br i1 %cmp21.not.i, label %if.end25.i, label %lor.lhs.false.i.if.then23.i_crit_edge

lor.lhs.false.i.if.then23.i_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then23.i

if.then23.i:                                      ; preds = %lor.lhs.false.i.if.then23.i_crit_edge, %if.end14.i.if.then23.i_crit_edge
  call void @btrfs_release_disk_super(ptr noundef %call15.i) #23
  br label %error_bdev_put

if.end25.i:                                       ; preds = %lor.lhs.false.i
  %label.i = getelementptr inbounds %struct.btrfs_super_block, ptr %add.ptr.i, i32 0, i32 28
  %16 = ptrtoint ptr %label.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %label.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool.not.i = icmp eq i8 %17, 0
  br i1 %tobool.not.i, label %if.end25.i.btrfs_read_disk_super.exit_crit_edge, label %land.lhs.true.i

if.end25.i.btrfs_read_disk_super.exit_crit_edge:  ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_read_disk_super.exit

land.lhs.true.i:                                  ; preds = %if.end25.i
  %arrayidx28.i = getelementptr [256 x i8], ptr %label.i, i32 0, i32 255
  %18 = ptrtoint ptr %arrayidx28.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx28.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool30.not.i = icmp eq i8 %19, 0
  br i1 %tobool30.not.i, label %land.lhs.true.i.btrfs_read_disk_super.exit_crit_edge, label %if.then31.i

land.lhs.true.i.btrfs_read_disk_super.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_read_disk_super.exit

if.then31.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  %20 = ptrtoint ptr %arrayidx28.i to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 0, ptr %arrayidx28.i, align 1
  br label %btrfs_read_disk_super.exit

btrfs_read_disk_super.exit:                       ; preds = %if.then31.i, %land.lhs.true.i.btrfs_read_disk_super.exit_crit_edge, %if.end25.i.btrfs_read_disk_super.exit_crit_edge, %if.end9.i.btrfs_read_disk_super.exit_crit_edge
  %retval.0.i = phi ptr [ %add.ptr.i, %if.then31.i ], [ %add.ptr.i, %land.lhs.true.i.btrfs_read_disk_super.exit_crit_edge ], [ %add.ptr.i, %if.end25.i.btrfs_read_disk_super.exit_crit_edge ], [ %call10.i, %if.end9.i.btrfs_read_disk_super.exit_crit_edge ]
  %cmp.i69 = icmp ugt ptr %retval.0.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i69, label %btrfs_read_disk_super.exit.error_bdev_put_crit_edge, label %if.end39

btrfs_read_disk_super.exit.error_bdev_put_crit_edge: ; preds = %btrfs_read_disk_super.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %error_bdev_put

if.end39:                                         ; preds = %btrfs_read_disk_super.exit
  %call40 = call fastcc ptr @device_list_add(ptr noundef %path, ptr noundef %retval.0.i, ptr noundef nonnull %new_device_added)
  %cmp.i70 = icmp ugt ptr %call40, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i70, label %if.end39.if.end47_crit_edge, label %if.then42

if.end39.if.end47_crit_edge:                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end47

if.then42:                                        ; preds = %if.end39
  %21 = ptrtoint ptr %new_device_added to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %new_device_added, align 1, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool43.not = icmp eq i8 %22, 0
  br i1 %tobool43.not, label %if.then42.if.end47_crit_edge, label %if.then44

if.then42.if.end47_crit_edge:                     ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end47

if.then44:                                        ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #25
  %call45 = call fastcc i32 @btrfs_free_stale_devices(ptr noundef %path, ptr noundef %call40)
  br label %if.end47

if.end47:                                         ; preds = %if.then44, %if.then42.if.end47_crit_edge, %if.end39.if.end47_crit_edge
  call void @btrfs_release_disk_super(ptr noundef %retval.0.i)
  br label %error_bdev_put

error_bdev_put:                                   ; preds = %if.end47, %btrfs_read_disk_super.exit.error_bdev_put_crit_edge, %if.then23.i, %if.end.i.error_bdev_put_crit_edge, %if.end34.error_bdev_put_crit_edge, %if.then32
  %device.0 = phi ptr [ %3, %if.then32 ], [ %call40, %if.end47 ], [ %retval.0.i, %btrfs_read_disk_super.exit.error_bdev_put_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then23.i ], [ inttoptr (i32 -22 to ptr), %if.end34.error_bdev_put_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end.i.error_bdev_put_crit_edge ]
  call void @blkdev_put(ptr noundef %call24, i32 noundef %or) #23
  br label %cleanup

cleanup:                                          ; preds = %error_bdev_put, %if.end.cleanup_crit_edge
  %retval.0 = phi ptr [ %device.0, %error_bdev_put ], [ %call24, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %bytenr) #23
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %new_device_added) #23
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @blkdev_get_by_path(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_sb_log_location_bdev(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @device_list_add(ptr noundef %path, ptr noundef %disk_super, ptr nocapture noundef writeonly %new_device_added) unnamed_addr #9 align 64 {
entry:
  %devid = alloca i64, align 8
  %args = alloca %struct.btrfs_dev_lookup_args, align 8
  %path_dev = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %generation.i = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 5
  %0 = ptrtoint ptr %generation.i to i32
  call void @__asan_loadN_noabort(i32 %0, i32 8)
  %1 = load i64, ptr %generation.i, align 1
  %2 = tail call i64 @llvm.bswap.i64(i64 %1) #23
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %devid) #23
  %dev_item = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 27
  %3 = ptrtoint ptr %dev_item to i32
  call void @__asan_loadN_noabort(i32 %3, i32 8)
  %4 = load i64, ptr %dev_item, align 1
  %5 = tail call i64 @llvm.bswap.i64(i64 %4) #23
  %6 = ptrtoint ptr %devid to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 %5, ptr %devid, align 8
  %incompat_flags.i = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 22
  %7 = ptrtoint ptr %incompat_flags.i to i32
  call void @__asan_loadN_noabort(i32 %7, i32 8)
  %8 = load i64, ptr %incompat_flags.i, align 1
  %9 = and i64 %8, 1125899906842624
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %9)
  %tobool.not = icmp eq i64 %9, 0
  %flags.i = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 3
  %10 = ptrtoint ptr %flags.i to i32
  call void @__asan_loadN_noabort(i32 %10, i32 8)
  %11 = load i64, ptr %flags.i, align 1
  %12 = shl i64 %11, 8
  %and4 = and i64 %12, 68719476736
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and4)
  %tobool5.not = icmp eq i64 %and4, 0
  %and4.lobit = lshr exact i64 %and4, 36
  %13 = trunc i64 %and4.lobit to i8
  br i1 %tobool5.not, label %if.else12, label %if.then

if.then:                                          ; preds = %entry
  br i1 %tobool.not, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.then
  %.pn26.i = load ptr, ptr @fs_uuids, align 4
  %cmp.not28.i = icmp eq ptr %.pn26.i, @fs_uuids
  br i1 %cmp.not28.i, label %if.then9.for.end.i_crit_edge, label %for.body.lr.ph.i

if.then9.for.end.i_crit_edge:                     ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.then9
  %fsid5.i = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %.pn29.i = phi ptr [ %.pn26.i, %for.body.lr.ph.i ], [ %.pn.i, %for.inc.i.for.body.i_crit_edge ]
  %fs_devices.030.i = getelementptr i8, ptr %.pn29.i, i32 -36
  %metadata_uuid.i = getelementptr i8, ptr %.pn29.i, i32 -20
  %bcmp.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %metadata_uuid.i, ptr noundef dereferenceable(16) %fs_devices.030.i, i32 16) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %cmp2.not.i = icmp eq i32 %bcmp.i, 0
  br i1 %cmp2.not.i, label %for.body.i.for.inc.i_crit_edge, label %land.lhs.true.i415

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i

land.lhs.true.i415:                               ; preds = %for.body.i
  %bcmp24.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %metadata_uuid.i, ptr noundef dereferenceable(16) %fsid5.i, i32 16) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp24.i)
  %cmp8.i = icmp eq i32 %bcmp24.i, 0
  br i1 %cmp8.i, label %land.lhs.true9.i, label %land.lhs.true.i415.for.inc.i_crit_edge

land.lhs.true.i415.for.inc.i_crit_edge:           ; preds = %land.lhs.true.i415
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i

land.lhs.true9.i:                                 ; preds = %land.lhs.true.i415
  %fsid_change.i = getelementptr i8, ptr %.pn29.i, i32 -4
  %14 = ptrtoint ptr %fsid_change.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %fsid_change.i, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.not.i416 = icmp eq i8 %15, 0
  br i1 %tobool.not.i416, label %land.lhs.true9.i.if.end23_crit_edge, label %land.lhs.true9.i.for.inc.i_crit_edge

land.lhs.true9.i.for.inc.i_crit_edge:             ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i

land.lhs.true9.i.if.end23_crit_edge:              ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end23

for.inc.i:                                        ; preds = %land.lhs.true9.i.for.inc.i_crit_edge, %land.lhs.true.i415.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %16 = ptrtoint ptr %.pn29.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn.i = load ptr, ptr %.pn29.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, @fs_uuids
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.then9.for.end.i_crit_edge
  %fsid14.i = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 1
  %call16.i = tail call fastcc ptr @find_fsid(ptr noundef %fsid14.i, ptr noundef null) #23
  br label %if.end23

if.else:                                          ; preds = %if.then
  %fsid12.i = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 1
  %metadata_uuid25.i = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 31
  %.pn51.i = load ptr, ptr @fs_uuids, align 4
  %cmp.not53.i = icmp eq ptr %.pn51.i, @fs_uuids
  br i1 %cmp.not53.i, label %if.else.if.then27_crit_edge, label %if.else.for.body.i420_crit_edge

if.else.for.body.i420_crit_edge:                  ; preds = %if.else
  br label %for.body.i420

if.else.if.then27_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then27

for.body.i420:                                    ; preds = %for.inc.i426.for.body.i420_crit_edge, %if.else.for.body.i420_crit_edge
  %.pn54.i = phi ptr [ %.pn.i424, %for.inc.i426.for.body.i420_crit_edge ], [ %.pn51.i, %if.else.for.body.i420_crit_edge ]
  %fs_devices.055.i = getelementptr i8, ptr %.pn54.i, i32 -36
  %metadata_uuid.i417 = getelementptr i8, ptr %.pn54.i, i32 -20
  %bcmp.i418 = tail call i32 @bcmp(ptr noundef dereferenceable(16) %metadata_uuid.i417, ptr noundef dereferenceable(16) %fs_devices.055.i, i32 16) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i418)
  %cmp2.not.i419 = icmp eq i32 %bcmp.i418, 0
  br i1 %cmp2.not.i419, label %land.lhs.true22.i, label %land.lhs.true.i422

land.lhs.true.i422:                               ; preds = %for.body.i420
  %bcmp49.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %metadata_uuid.i417, ptr noundef dereferenceable(16) %metadata_uuid25.i, i32 16) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp49.i)
  %cmp8.i421 = icmp eq i32 %bcmp49.i, 0
  br i1 %cmp8.i421, label %land.lhs.true9.i423, label %land.lhs.true.i422.for.inc.i426_crit_edge

land.lhs.true.i422.for.inc.i426_crit_edge:        ; preds = %land.lhs.true.i422
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i426

land.lhs.true9.i423:                              ; preds = %land.lhs.true.i422
  %bcmp50.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %fs_devices.055.i, ptr noundef dereferenceable(16) %fsid12.i, i32 16) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp50.i)
  %cmp15.not.i = icmp eq i32 %bcmp50.i, 0
  br i1 %cmp15.not.i, label %land.lhs.true9.i423.for.inc.i426_crit_edge, label %land.lhs.true9.i423.if.end23_crit_edge

land.lhs.true9.i423.if.end23_crit_edge:           ; preds = %land.lhs.true9.i423
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end23

land.lhs.true9.i423.for.inc.i426_crit_edge:       ; preds = %land.lhs.true9.i423
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i426

land.lhs.true22.i:                                ; preds = %for.body.i420
  %bcmp48.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %fs_devices.055.i, ptr noundef dereferenceable(16) %metadata_uuid25.i, i32 16) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp48.i)
  %cmp28.i = icmp eq i32 %bcmp48.i, 0
  br i1 %cmp28.i, label %land.lhs.true22.i.if.end23_crit_edge, label %land.lhs.true22.i.for.inc.i426_crit_edge

land.lhs.true22.i.for.inc.i426_crit_edge:         ; preds = %land.lhs.true22.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i426

land.lhs.true22.i.if.end23_crit_edge:             ; preds = %land.lhs.true22.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end23

for.inc.i426:                                     ; preds = %land.lhs.true22.i.for.inc.i426_crit_edge, %land.lhs.true9.i423.for.inc.i426_crit_edge, %land.lhs.true.i422.for.inc.i426_crit_edge
  %17 = ptrtoint ptr %.pn54.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %.pn.i424 = load ptr, ptr %.pn54.i, align 4
  %cmp.not.i425 = icmp eq ptr %.pn.i424, @fs_uuids
  br i1 %cmp.not.i425, label %for.inc.i426.if.then25_crit_edge, label %for.inc.i426.for.body.i420_crit_edge

for.inc.i426.for.body.i420_crit_edge:             ; preds = %for.inc.i426
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body.i420

for.inc.i426.if.then25_crit_edge:                 ; preds = %for.inc.i426
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then25

if.else12:                                        ; preds = %entry
  %.pn21.i = load ptr, ptr @fs_uuids, align 4
  %cmp.not23.i = icmp eq ptr %.pn21.i, @fs_uuids
  br i1 %tobool.not, label %if.else16, label %if.then14

if.then14:                                        ; preds = %if.else12
  br i1 %cmp.not23.i, label %if.then14.for.end46.i_crit_edge, label %for.body.lr.ph.i429

if.then14.for.end46.i_crit_edge:                  ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end46.i

for.body.lr.ph.i429:                              ; preds = %if.then14
  %metadata_uuid.i428 = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 31
  br label %for.body.i432

for.body.i432:                                    ; preds = %for.inc.i436.for.body.i432_crit_edge, %for.body.lr.ph.i429
  %.pn78.i = phi ptr [ %.pn21.i, %for.body.lr.ph.i429 ], [ %.pn.i434, %for.inc.i436.for.body.i432_crit_edge ]
  %fs_devices.079.i = getelementptr i8, ptr %.pn78.i, i32 -36
  %fsid_change.i430 = getelementptr i8, ptr %.pn78.i, i32 -4
  %18 = ptrtoint ptr %fsid_change.i430 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %fsid_change.i430, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool.not.i431 = icmp eq i8 %19, 0
  br i1 %tobool.not.i431, label %for.body.i432.for.inc.i436_crit_edge, label %land.lhs.true.i433

for.body.i432.for.inc.i436_crit_edge:             ; preds = %for.body.i432
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i436

land.lhs.true.i433:                               ; preds = %for.body.i432
  %bcmp70.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %metadata_uuid.i428, ptr noundef dereferenceable(16) %fs_devices.079.i, i32 16) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp70.i)
  %cmp2.i = icmp eq i32 %bcmp70.i, 0
  br i1 %cmp2.i, label %land.lhs.true3.i, label %land.lhs.true.i433.for.inc.i436_crit_edge

land.lhs.true.i433.for.inc.i436_crit_edge:        ; preds = %land.lhs.true.i433
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i436

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i433
  %metadata_uuid6.i = getelementptr i8, ptr %.pn78.i, i32 -20
  %bcmp71.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %fs_devices.079.i, ptr noundef dereferenceable(16) %metadata_uuid6.i, i32 16) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp71.i)
  %cmp9.i = icmp eq i32 %bcmp71.i, 0
  br i1 %cmp9.i, label %land.lhs.true3.i.if.end23_crit_edge, label %land.lhs.true3.i.for.inc.i436_crit_edge

land.lhs.true3.i.for.inc.i436_crit_edge:          ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i436

land.lhs.true3.i.if.end23_crit_edge:              ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end23

for.inc.i436:                                     ; preds = %land.lhs.true3.i.for.inc.i436_crit_edge, %land.lhs.true.i433.for.inc.i436_crit_edge, %for.body.i432.for.inc.i436_crit_edge
  %20 = ptrtoint ptr %.pn78.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %.pn.i434 = load ptr, ptr %.pn78.i, align 4
  %cmp.not.i435 = icmp eq ptr %.pn.i434, @fs_uuids
  br i1 %cmp.not.i435, label %for.inc.i436.for.body21.i_crit_edge, label %for.inc.i436.for.body.i432_crit_edge

for.inc.i436.for.body.i432_crit_edge:             ; preds = %for.inc.i436
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body.i432

for.inc.i436.for.body21.i_crit_edge:              ; preds = %for.inc.i436
  br label %for.body21.i

for.body21.i:                                     ; preds = %for.inc40.i.for.body21.i_crit_edge, %for.inc.i436.for.body21.i_crit_edge
  %.pn6883.i = phi ptr [ %.pn68.i, %for.inc40.i.for.body21.i_crit_edge ], [ %.pn21.i, %for.inc.i436.for.body21.i_crit_edge ]
  %fs_devices.184.i = getelementptr i8, ptr %.pn6883.i, i32 -36
  %fsid_change22.i = getelementptr i8, ptr %.pn6883.i, i32 -4
  %21 = ptrtoint ptr %fsid_change22.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %fsid_change22.i, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool23.not.i = icmp eq i8 %22, 0
  br i1 %tobool23.not.i, label %for.body21.i.for.inc40.i_crit_edge, label %land.lhs.true24.i

for.body21.i.for.inc40.i_crit_edge:               ; preds = %for.body21.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc40.i

land.lhs.true24.i:                                ; preds = %for.body21.i
  %metadata_uuid25.i437 = getelementptr i8, ptr %.pn6883.i, i32 -20
  %bcmp.i438 = tail call i32 @bcmp(ptr noundef dereferenceable(16) %metadata_uuid25.i437, ptr noundef dereferenceable(16) %fs_devices.184.i, i32 16) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i438)
  %cmp30.not.i = icmp eq i32 %bcmp.i438, 0
  br i1 %cmp30.not.i, label %land.lhs.true24.i.for.inc40.i_crit_edge, label %land.lhs.true31.i

land.lhs.true24.i.for.inc40.i_crit_edge:          ; preds = %land.lhs.true24.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc40.i

land.lhs.true31.i:                                ; preds = %land.lhs.true24.i
  %bcmp69.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %metadata_uuid.i428, ptr noundef dereferenceable(16) %metadata_uuid25.i437, i32 16) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp69.i)
  %cmp37.i = icmp eq i32 %bcmp69.i, 0
  br i1 %cmp37.i, label %land.lhs.true31.i.if.end23_crit_edge, label %land.lhs.true31.i.for.inc40.i_crit_edge

land.lhs.true31.i.for.inc40.i_crit_edge:          ; preds = %land.lhs.true31.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc40.i

land.lhs.true31.i.if.end23_crit_edge:             ; preds = %land.lhs.true31.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end23

for.inc40.i:                                      ; preds = %land.lhs.true31.i.for.inc40.i_crit_edge, %land.lhs.true24.i.for.inc40.i_crit_edge, %for.body21.i.for.inc40.i_crit_edge
  %23 = ptrtoint ptr %.pn6883.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %.pn68.i = load ptr, ptr %.pn6883.i, align 4
  %cmp19.not.i = icmp eq ptr %.pn68.i, @fs_uuids
  br i1 %cmp19.not.i, label %for.inc40.i.for.end46.i_crit_edge, label %for.inc40.i.for.body21.i_crit_edge

for.inc40.i.for.body21.i_crit_edge:               ; preds = %for.inc40.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body21.i

for.inc40.i.for.end46.i_crit_edge:                ; preds = %for.inc40.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end46.i

for.end46.i:                                      ; preds = %for.inc40.i.for.end46.i_crit_edge, %if.then14.for.end46.i_crit_edge
  %fsid47.i = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 1
  %metadata_uuid49.i = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 31
  %call51.i = tail call fastcc ptr @find_fsid(ptr noundef %fsid47.i, ptr noundef %metadata_uuid49.i) #23
  br label %if.end23

if.else16:                                        ; preds = %if.else12
  br i1 %cmp.not23.i, label %if.else16.if.then19_crit_edge, label %for.body.lr.ph.i441

if.else16.if.then19_crit_edge:                    ; preds = %if.else16
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then19

for.body.lr.ph.i441:                              ; preds = %if.else16
  %fsid5.i440 = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 1
  br label %for.body.i445

for.body.i445:                                    ; preds = %for.inc.i453.for.body.i445_crit_edge, %for.body.lr.ph.i441
  %.pn24.i = phi ptr [ %.pn21.i, %for.body.lr.ph.i441 ], [ %.pn.i451, %for.inc.i453.for.body.i445_crit_edge ]
  %fs_devices.025.i = getelementptr i8, ptr %.pn24.i, i32 -36
  %metadata_uuid.i442 = getelementptr i8, ptr %.pn24.i, i32 -20
  %bcmp.i443 = tail call i32 @bcmp(ptr noundef dereferenceable(16) %fs_devices.025.i, ptr noundef dereferenceable(16) %metadata_uuid.i442, i32 16) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i443)
  %cmp2.not.i444 = icmp eq i32 %bcmp.i443, 0
  br i1 %cmp2.not.i444, label %for.body.i445.for.inc.i453_crit_edge, label %land.lhs.true.i447

for.body.i445.for.inc.i453_crit_edge:             ; preds = %for.body.i445
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i453

land.lhs.true.i447:                               ; preds = %for.body.i445
  %bcmp20.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %metadata_uuid.i442, ptr noundef dereferenceable(16) %fsid5.i440, i32 16) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp20.i)
  %cmp8.i446 = icmp eq i32 %bcmp20.i, 0
  br i1 %cmp8.i446, label %land.lhs.true9.i450, label %land.lhs.true.i447.for.inc.i453_crit_edge

land.lhs.true.i447.for.inc.i453_crit_edge:        ; preds = %land.lhs.true.i447
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i453

land.lhs.true9.i450:                              ; preds = %land.lhs.true.i447
  %fsid_change.i448 = getelementptr i8, ptr %.pn24.i, i32 -4
  %24 = ptrtoint ptr %fsid_change.i448 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %fsid_change.i448, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool.not.i449 = icmp eq i8 %25, 0
  br i1 %tobool.not.i449, label %land.lhs.true9.i450.for.inc.i453_crit_edge, label %find_fsid_reverted_metadata.exit

land.lhs.true9.i450.for.inc.i453_crit_edge:       ; preds = %land.lhs.true9.i450
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i453

for.inc.i453:                                     ; preds = %land.lhs.true9.i450.for.inc.i453_crit_edge, %land.lhs.true.i447.for.inc.i453_crit_edge, %for.body.i445.for.inc.i453_crit_edge
  %26 = ptrtoint ptr %.pn24.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %.pn.i451 = load ptr, ptr %.pn24.i, align 4
  %cmp.not.i452 = icmp eq ptr %.pn.i451, @fs_uuids
  br i1 %cmp.not.i452, label %for.inc.i453.if.then19_crit_edge, label %for.inc.i453.for.body.i445_crit_edge

for.inc.i453.for.body.i445_crit_edge:             ; preds = %for.inc.i453
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body.i445

for.inc.i453.if.then19_crit_edge:                 ; preds = %for.inc.i453
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then19

find_fsid_reverted_metadata.exit:                 ; preds = %land.lhs.true9.i450
  %tobool18.not = icmp eq ptr %fs_devices.025.i, null
  br i1 %tobool18.not, label %find_fsid_reverted_metadata.exit.if.then19_crit_edge, label %find_fsid_reverted_metadata.exit.if.else43_crit_edge

find_fsid_reverted_metadata.exit.if.else43_crit_edge: ; preds = %find_fsid_reverted_metadata.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else43

find_fsid_reverted_metadata.exit.if.then19_crit_edge: ; preds = %find_fsid_reverted_metadata.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then19

if.then19:                                        ; preds = %find_fsid_reverted_metadata.exit.if.then19_crit_edge, %for.inc.i453.if.then19_crit_edge, %if.else16.if.then19_crit_edge
  %fsid = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 1
  %call20 = tail call fastcc ptr @find_fsid(ptr noundef %fsid, ptr noundef null)
  br label %if.end23

if.end23:                                         ; preds = %if.then19, %for.end46.i, %land.lhs.true31.i.if.end23_crit_edge, %land.lhs.true3.i.if.end23_crit_edge, %land.lhs.true22.i.if.end23_crit_edge, %land.lhs.true9.i423.if.end23_crit_edge, %for.end.i, %land.lhs.true9.i.if.end23_crit_edge
  %fs_devices.0 = phi ptr [ %call20, %if.then19 ], [ %call16.i, %for.end.i ], [ %call51.i, %for.end46.i ], [ %fs_devices.184.i, %land.lhs.true31.i.if.end23_crit_edge ], [ %fs_devices.079.i, %land.lhs.true3.i.if.end23_crit_edge ], [ %fs_devices.030.i, %land.lhs.true9.i.if.end23_crit_edge ], [ %fs_devices.055.i, %land.lhs.true9.i423.if.end23_crit_edge ], [ %fs_devices.055.i, %land.lhs.true22.i.if.end23_crit_edge ]
  %tobool24.not = icmp eq ptr %fs_devices.0, null
  br i1 %tobool24.not, label %if.end23.if.then25_crit_edge, label %if.end23.if.else43_crit_edge

if.end23.if.else43_crit_edge:                     ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else43

if.end23.if.then25_crit_edge:                     ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then25

if.then25:                                        ; preds = %if.end23.if.then25_crit_edge, %for.inc.i426.if.then25_crit_edge
  br i1 %tobool.not, label %if.else32, label %if.then25.if.then27_crit_edge

if.then25.if.then27_crit_edge:                    ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then27

if.then27:                                        ; preds = %if.then25.if.then27_crit_edge, %if.else.if.then27_crit_edge
  %fsid28 = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 1
  %metadata_uuid = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 31
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %27 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %27, i32 noundef 3520, i32 noundef 448) #29
  %tobool.not.i455 = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i455, label %if.then27.cleanup300_crit_edge, label %do.body.i

if.then27.cleanup300_crit_edge:                   ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup300

do.body.i:                                        ; preds = %if.then27
  %device_list_mutex.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 12
  tail call void @__mutex_init(ptr noundef %device_list_mutex.i, ptr noundef nonnull @.str.87, ptr noundef nonnull @alloc_fs_devices.__key) #23
  %devices.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 13
  %28 = ptrtoint ptr %devices.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %devices.i, ptr %devices.i, align 8
  %prev.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 13, i32 1
  %29 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %devices.i, ptr %prev.i.i, align 4
  %alloc_list.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 14
  %30 = ptrtoint ptr %alloc_list.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %alloc_list.i, ptr %alloc_list.i, align 8
  %prev.i28.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 14, i32 1
  %31 = ptrtoint ptr %prev.i28.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %alloc_list.i, ptr %prev.i28.i, align 4
  %fs_list.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 3
  %32 = ptrtoint ptr %fs_list.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile ptr %fs_list.i, ptr %fs_list.i, align 4
  %prev.i29.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 3, i32 1
  %33 = ptrtoint ptr %prev.i29.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %fs_list.i, ptr %prev.i29.i, align 8
  %seed_list.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 15
  %34 = ptrtoint ptr %seed_list.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %seed_list.i, ptr %seed_list.i, align 8
  %prev.i30.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 15, i32 1
  %35 = ptrtoint ptr %prev.i30.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %seed_list.i, ptr %prev.i30.i, align 4
  %tobool2.not.i = icmp eq ptr %fsid28, null
  br i1 %tobool2.not.i, label %if.end5.i, label %if.end5.thread.i

if.end5.i:                                        ; preds = %do.body.i
  %tobool6.not.i = icmp eq ptr %metadata_uuid, null
  br i1 %tobool6.not.i, label %if.end5.i.if.end36_crit_edge, label %if.end5.i.if.end36.sink.split_crit_edge

if.end5.i.if.end36.sink.split_crit_edge:          ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end36.sink.split

if.end5.i.if.end36_crit_edge:                     ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end36

if.end5.thread.i:                                 ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #25
  %36 = call ptr @memcpy(ptr %call7.i.i.i, ptr %fsid28, i32 16)
  %tobool6.not31.i = icmp eq ptr %metadata_uuid, null
  %spec.select.i = select i1 %tobool6.not31.i, ptr %fsid28, ptr %metadata_uuid
  br label %if.end36.sink.split

if.else32:                                        ; preds = %if.then25
  %fsid33 = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %37 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i.i458 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %37, i32 noundef 3520, i32 noundef 448) #29
  %tobool.not.i459 = icmp eq ptr %call7.i.i.i458, null
  br i1 %tobool.not.i459, label %if.else32.cleanup300_crit_edge, label %do.body.i470

if.else32.cleanup300_crit_edge:                   ; preds = %if.else32
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup300

do.body.i470:                                     ; preds = %if.else32
  %device_list_mutex.i460 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i458, i32 0, i32 12
  tail call void @__mutex_init(ptr noundef %device_list_mutex.i460, ptr noundef nonnull @.str.87, ptr noundef nonnull @alloc_fs_devices.__key) #23
  %devices.i461 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i458, i32 0, i32 13
  %38 = ptrtoint ptr %devices.i461 to i32
  call void @__asan_store4_noabort(i32 %38)
  store volatile ptr %devices.i461, ptr %devices.i461, align 8
  %prev.i.i462 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i458, i32 0, i32 13, i32 1
  %39 = ptrtoint ptr %prev.i.i462 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %devices.i461, ptr %prev.i.i462, align 4
  %alloc_list.i463 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i458, i32 0, i32 14
  %40 = ptrtoint ptr %alloc_list.i463 to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile ptr %alloc_list.i463, ptr %alloc_list.i463, align 8
  %prev.i28.i464 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i458, i32 0, i32 14, i32 1
  %41 = ptrtoint ptr %prev.i28.i464 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %alloc_list.i463, ptr %prev.i28.i464, align 4
  %fs_list.i465 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i458, i32 0, i32 3
  %42 = ptrtoint ptr %fs_list.i465 to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile ptr %fs_list.i465, ptr %fs_list.i465, align 4
  %prev.i29.i466 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i458, i32 0, i32 3, i32 1
  %43 = ptrtoint ptr %prev.i29.i466 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %fs_list.i465, ptr %prev.i29.i466, align 8
  %seed_list.i467 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i458, i32 0, i32 15
  %44 = ptrtoint ptr %seed_list.i467 to i32
  call void @__asan_store4_noabort(i32 %44)
  store volatile ptr %seed_list.i467, ptr %seed_list.i467, align 8
  %prev.i30.i468 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i458, i32 0, i32 15, i32 1
  %45 = ptrtoint ptr %prev.i30.i468 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %seed_list.i467, ptr %prev.i30.i468, align 4
  %tobool2.not.i469 = icmp eq ptr %fsid33, null
  br i1 %tobool2.not.i469, label %do.body.i470.if.end36_crit_edge, label %if.end5.thread.i472

do.body.i470.if.end36_crit_edge:                  ; preds = %do.body.i470
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end36

if.end5.thread.i472:                              ; preds = %do.body.i470
  call void @__sanitizer_cov_trace_pc() #25
  %46 = call ptr @memcpy(ptr %call7.i.i.i458, ptr %fsid33, i32 16)
  br label %if.end36.sink.split

if.end36.sink.split:                              ; preds = %if.end5.thread.i472, %if.end5.thread.i, %if.end5.i.if.end36.sink.split_crit_edge
  %call7.i.i.i458.sink = phi ptr [ %call7.i.i.i458, %if.end5.thread.i472 ], [ %call7.i.i.i, %if.end5.thread.i ], [ %call7.i.i.i, %if.end5.i.if.end36.sink.split_crit_edge ]
  %fsid33.sink = phi ptr [ %fsid33, %if.end5.thread.i472 ], [ %spec.select.i, %if.end5.thread.i ], [ %metadata_uuid, %if.end5.i.if.end36.sink.split_crit_edge ]
  %metadata_uuid.i474 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i458.sink, i32 0, i32 1
  %47 = call ptr @memcpy(ptr %metadata_uuid.i474, ptr %fsid33.sink, i32 16)
  br label %if.end36

if.end36:                                         ; preds = %if.end36.sink.split, %do.body.i470.if.end36_crit_edge, %if.end5.i.if.end36_crit_edge
  %fs_devices.1 = phi ptr [ %call7.i.i.i, %if.end5.i.if.end36_crit_edge ], [ %call7.i.i.i458, %do.body.i470.if.end36_crit_edge ], [ %call7.i.i.i458.sink, %if.end36.sink.split ]
  %cmp.i = icmp ugt ptr %fs_devices.1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end36.cleanup300_crit_edge, label %if.end40

if.end36.cleanup300_crit_edge:                    ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup300

if.end40:                                         ; preds = %if.end36
  %fsid_change = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.1, i32 0, i32 2
  %48 = ptrtoint ptr %fsid_change to i32
  call void @__asan_store1_noabort(i32 %48)
  store i8 %13, ptr %fsid_change, align 8
  %device_list_mutex = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.1, i32 0, i32 12
  tail call void @mutex_lock_nested(ptr noundef %device_list_mutex, i32 noundef 0) #23
  %fs_list = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.1, i32 0, i32 3
  %49 = load ptr, ptr @fs_uuids, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %fs_list, ptr noundef nonnull @fs_uuids, ptr noundef %49) #23
  br i1 %call.i.i, label %if.end.i.i, label %if.end40.if.then74_crit_edge

if.end40.if.then74_crit_edge:                     ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then74

if.end.i.i:                                       ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #25
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %fs_list, ptr %prev1.i.i, align 4
  %51 = ptrtoint ptr %fs_list to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %49, ptr %fs_list, align 4
  %prev3.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.1, i32 0, i32 3, i32 1
  %52 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr @fs_uuids, ptr %prev3.i.i, align 8
  store volatile ptr %fs_list, ptr @fs_uuids, align 4
  br label %if.then74

if.else43:                                        ; preds = %if.end23.if.else43_crit_edge, %find_fsid_reverted_metadata.exit.if.else43_crit_edge
  %fs_devices.0535 = phi ptr [ %fs_devices.0, %if.end23.if.else43_crit_edge ], [ %fs_devices.025.i, %find_fsid_reverted_metadata.exit.if.else43_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %args) #23
  %53 = getelementptr inbounds i8, ptr %args, i32 16
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 -1, ptr %53, align 8
  %55 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %devid, align 8
  %57 = ptrtoint ptr %args to i32
  call void @__asan_store8_noabort(i32 %57)
  store i64 %56, ptr %args, align 8
  %uuid = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 1
  %uuid46 = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 27, i32 12
  %58 = ptrtoint ptr %uuid to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %uuid46, ptr %uuid, align 8
  %fsid48 = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 2
  %59 = ptrtoint ptr %fsid48 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr null, ptr %fsid48, align 4
  %missing = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 3
  %60 = ptrtoint ptr %missing to i32
  call void @__asan_store1_noabort(i32 %60)
  store i8 0, ptr %missing, align 8
  %device_list_mutex49 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.0535, i32 0, i32 12
  tail call void @mutex_lock_nested(ptr noundef %device_list_mutex49, i32 noundef 0) #23
  %call50 = call ptr @btrfs_find_device(ptr noundef nonnull %fs_devices.0535, ptr noundef nonnull %args)
  %fsid_change51 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.0535, i32 0, i32 2
  %61 = ptrtoint ptr %fsid_change51 to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %fsid_change51, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %62)
  %tobool52.not = icmp eq i8 %62, 0
  br i1 %tobool52.not, label %if.else43.if.end72_crit_edge, label %land.lhs.true

if.else43.if.end72_crit_edge:                     ; preds = %if.else43
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end72

land.lhs.true:                                    ; preds = %if.else43
  %latest_generation = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.0535, i32 0, i32 10
  %63 = ptrtoint ptr %latest_generation to i32
  call void @__asan_load8_noabort(i32 %63)
  %64 = load i64, ptr %latest_generation, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %2, i64 %64)
  %cmp = icmp ugt i64 %2, %64
  br i1 %cmp, label %if.then53, label %land.lhs.true.if.end72_crit_edge

land.lhs.true.if.end72_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end72

if.then53:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  %fsid56 = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 1
  %65 = call ptr @memcpy(ptr %fs_devices.0535, ptr %fsid56, i32 16)
  %metadata_uuid65 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.0535, i32 0, i32 1
  %metadata_uuid62 = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 31
  %fsid56.sink = select i1 %tobool.not, ptr %fsid56, ptr %metadata_uuid62
  %66 = call ptr @memcpy(ptr %metadata_uuid65, ptr %fsid56.sink, i32 16)
  %67 = ptrtoint ptr %fsid_change51 to i32
  call void @__asan_store1_noabort(i32 %67)
  store i8 0, ptr %fsid_change51, align 8
  br label %if.end72

if.end72:                                         ; preds = %if.then53, %land.lhs.true.if.end72_crit_edge, %if.else43.if.end72_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args) #23
  %tobool73.not = icmp eq ptr %call50, null
  br i1 %tobool73.not, label %if.end72.if.then74_crit_edge, label %if.else161

if.end72.if.then74_crit_edge:                     ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then74

if.then74:                                        ; preds = %if.end72.if.then74_crit_edge, %if.end.i.i, %if.end40.if.then74_crit_edge
  %fs_devices.2545 = phi ptr [ %fs_devices.0535, %if.end72.if.then74_crit_edge ], [ %fs_devices.1, %if.end40.if.then74_crit_edge ], [ %fs_devices.1, %if.end.i.i ]
  %opened = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.2545, i32 0, i32 17
  %68 = ptrtoint ptr %opened to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %opened, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %69)
  %tobool75.not = icmp eq i32 %69, 0
  br i1 %tobool75.not, label %if.end79, label %if.then76

if.then76:                                        ; preds = %if.then74
  call void @__sanitizer_cov_trace_pc() #25
  %device_list_mutex77 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.2545, i32 0, i32 12
  tail call void @mutex_unlock(ptr noundef %device_list_mutex77) #23
  br label %cleanup300

if.end79:                                         ; preds = %if.then74
  %uuid81 = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 27, i32 12
  %call83 = call ptr @btrfs_alloc_device(ptr noundef null, ptr noundef nonnull %devid, ptr noundef %uuid81)
  %cmp.i478 = icmp ugt ptr %call83, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i478, label %if.then85, label %if.end87

if.then85:                                        ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #25
  %device_list_mutex86 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.2545, i32 0, i32 12
  call void @mutex_unlock(ptr noundef %device_list_mutex86) #23
  br label %cleanup300

if.end87:                                         ; preds = %if.end79
  %call.i479 = call i32 @strlen(ptr noundef %path) #27
  %add1.i = add i32 %call.i479, 9
  %call9.i.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %add1.i, i32 noundef 3392) #30
  %tobool.not.i481 = icmp eq ptr %call9.i.i.i, null
  br i1 %tobool.not.i481, label %if.then90, label %do.body

if.then90:                                        ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #25
  call void @btrfs_free_device(ptr noundef %call83)
  %device_list_mutex91 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.2545, i32 0, i32 12
  call void @mutex_unlock(ptr noundef %device_list_mutex91) #23
  br label %cleanup300

do.body:                                          ; preds = %if.end87
  %add.i = add i32 %call.i479, 1
  %str.i = getelementptr inbounds %struct.rcu_string, ptr %call9.i.i.i, i32 0, i32 1
  %call3.i = call ptr @strncpy(ptr noundef %str.i, ptr noundef %path, i32 noundef %add.i) #23
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !434
  %name119 = getelementptr inbounds %struct.btrfs_device, ptr %call83, i32 0, i32 5
  %70 = ptrtoint ptr %name119 to i32
  call void @__asan_store4_noabort(i32 %70)
  store volatile ptr %call9.i.i.i, ptr %name119, align 8
  %devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.2545, i32 0, i32 13
  call fastcc void @list_add_rcu(ptr noundef %call83, ptr noundef %devices)
  %num_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.2545, i32 0, i32 4
  %71 = ptrtoint ptr %num_devices to i32
  call void @__asan_load8_noabort(i32 %71)
  %72 = load i64, ptr %num_devices, align 8
  %inc = add i64 %72, 1
  store i64 %inc, ptr %num_devices, align 8
  %fs_devices131 = getelementptr inbounds %struct.btrfs_device, ptr %call83, i32 0, i32 3
  %73 = ptrtoint ptr %fs_devices131 to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr %fs_devices.2545, ptr %fs_devices131, align 8
  %74 = ptrtoint ptr %new_device_added to i32
  call void @__asan_store1_noabort(i32 %74)
  store i8 1, ptr %new_device_added, align 1
  %label = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 28
  %75 = ptrtoint ptr %label to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %label, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %76)
  %tobool132.not = icmp eq i8 %76, 0
  br i1 %tobool132.not, label %do.end148, label %do.end136

do.end136:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #25
  %77 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %77)
  %78 = load i64, ptr %devid, align 8
  %79 = call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i = and i32 %79, -16384
  %80 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %80, i32 0, i32 2
  %81 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %82, i32 0, i32 101
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %82, i32 0, i32 68
  %83 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %pid.i, align 8
  %call144 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.79, ptr noundef %label, i64 noundef %78, i64 noundef %2, ptr noundef %path, ptr noundef %comm, i32 noundef %84) #28
  br label %if.end288

do.end148:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #25
  %fsid150 = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 1
  %85 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %85)
  %86 = load i64, ptr %devid, align 8
  %87 = call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i482 = and i32 %87, -16384
  %88 = inttoptr i32 %and.i482 to ptr
  %task153 = getelementptr inbounds %struct.thread_info, ptr %88, i32 0, i32 2
  %89 = ptrtoint ptr %task153 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %task153, align 8
  %comm154 = getelementptr inbounds %struct.task_struct, ptr %90, i32 0, i32 101
  %pid.i483 = getelementptr inbounds %struct.task_struct, ptr %90, i32 0, i32 68
  %91 = ptrtoint ptr %pid.i483 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %pid.i483, align 8
  %call159 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.82, ptr noundef %fsid150, i64 noundef %86, i64 noundef %2, ptr noundef %path, ptr noundef %comm154, i32 noundef %92) #28
  br label %if.end288

if.else161:                                       ; preds = %if.end72
  %name162 = getelementptr inbounds %struct.btrfs_device, ptr %call50, i32 0, i32 5
  %93 = ptrtoint ptr %name162 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %name162, align 8
  %tobool163.not = icmp eq ptr %94, null
  br i1 %tobool163.not, label %if.else161.if.then168_crit_edge, label %lor.lhs.false

if.else161.if.then168_crit_edge:                  ; preds = %if.else161
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then168

lor.lhs.false:                                    ; preds = %if.else161
  %str = getelementptr inbounds %struct.rcu_string, ptr %94, i32 0, i32 1
  %call166 = tail call i32 @strcmp(ptr noundef %str, ptr noundef %path) #31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call166)
  %tobool167.not = icmp eq i32 %call166, 0
  br i1 %tobool167.not, label %lor.lhs.false.if.end288_crit_edge, label %lor.lhs.false.if.then168_crit_edge

lor.lhs.false.if.then168_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then168

lor.lhs.false.if.end288_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end288

if.then168:                                       ; preds = %lor.lhs.false.if.then168_crit_edge, %if.else161.if.then168_crit_edge
  %opened169 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.0535, i32 0, i32 17
  %95 = ptrtoint ptr %opened169 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %opened169, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %96)
  %tobool170.not = icmp eq i32 %96, 0
  br i1 %tobool170.not, label %land.lhs.true171, label %if.then168.if.end176_crit_edge

if.then168.if.end176_crit_edge:                   ; preds = %if.then168
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end176

land.lhs.true171:                                 ; preds = %if.then168
  %generation = getelementptr inbounds %struct.btrfs_device, ptr %call50, i32 0, i32 6
  %97 = ptrtoint ptr %generation to i32
  call void @__asan_load8_noabort(i32 %97)
  %98 = load i64, ptr %generation, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %2, i64 %98)
  %cmp172 = icmp ult i64 %2, %98
  br i1 %cmp172, label %if.then173, label %land.lhs.true171.if.end176_crit_edge

land.lhs.true171.if.end176_crit_edge:             ; preds = %land.lhs.true171
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end176

if.then173:                                       ; preds = %land.lhs.true171
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @mutex_unlock(ptr noundef %device_list_mutex49) #23
  br label %cleanup300

if.end176:                                        ; preds = %land.lhs.true171.if.end176_crit_edge, %if.then168.if.end176_crit_edge
  %bdev = getelementptr inbounds %struct.btrfs_device, ptr %call50, i32 0, i32 7
  %99 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %bdev, align 8
  %tobool177.not = icmp eq ptr %100, null
  br i1 %tobool177.not, label %if.end176.if.end233_crit_edge, label %if.then178

if.end176.if.end233_crit_edge:                    ; preds = %if.end176
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end233

if.then178:                                       ; preds = %if.end176
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %path_dev) #23
  %101 = ptrtoint ptr %path_dev to i32
  call void @__asan_store4_noabort(i32 %101)
  store i32 -1, ptr %path_dev, align 4, !annotation !425
  %call179 = call i32 @lookup_bdev(ptr noundef %path, ptr noundef nonnull %path_dev) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call179)
  %tobool180.not = icmp eq i32 %call179, 0
  br i1 %tobool180.not, label %if.end184, label %if.then181

if.then181:                                       ; preds = %if.then178
  call void @__sanitizer_cov_trace_pc() #25
  call void @mutex_unlock(ptr noundef %device_list_mutex49) #23
  %102 = inttoptr i32 %call179 to ptr
  br label %cleanup.thread

if.end184:                                        ; preds = %if.then178
  %103 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %bdev, align 8
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %104, i32 0, i32 5
  %105 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %bd_dev, align 4
  %107 = ptrtoint ptr %path_dev to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %path_dev, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %106, i32 %108)
  %cmp186.not = icmp eq i32 %106, %108
  br i1 %cmp186.not, label %do.body201, label %if.then187

if.then187:                                       ; preds = %if.end184
  call void @mutex_unlock(ptr noundef %device_list_mutex49) #23
  %109 = call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i.i = and i32 %109, -16384
  %110 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %110, i32 0, i32 1
  %111 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %112, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !432
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #23
  %call.i = call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i, label %if.then187.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then187.rcu_read_lock.exit_crit_edge:          ; preds = %if.then187
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then187
  %call1.i = call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 696, ptr noundef nonnull @.str.97) #23
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then187.rcu_read_lock.exit_crit_edge
  %113 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %113)
  %114 = load i64, ptr %devid, align 8
  %115 = call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i484 = and i32 %115, -16384
  %116 = inttoptr i32 %and.i484 to ptr
  %task191 = getelementptr inbounds %struct.thread_info, ptr %116, i32 0, i32 2
  %117 = ptrtoint ptr %task191 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %task191, align 8
  %comm192 = getelementptr inbounds %struct.task_struct, ptr %118, i32 0, i32 101
  %pid.i485 = getelementptr inbounds %struct.task_struct, ptr %118, i32 0, i32 68
  %119 = ptrtoint ptr %pid.i485 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %pid.i485, align 8
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef null, ptr noundef nonnull @.str.84, ptr noundef %path, i64 noundef %114, i64 noundef %2, ptr noundef %comm192, i32 noundef %120) #28
  call fastcc void @rcu_read_unlock()
  br label %cleanup.thread

do.body201:                                       ; preds = %if.end184
  %121 = call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i.i404 = and i32 %121, -16384
  %122 = inttoptr i32 %and.i.i.i.i.i404 to ptr
  %preempt_count.i.i.i.i405 = getelementptr inbounds %struct.thread_info, ptr %122, i32 0, i32 1
  %123 = ptrtoint ptr %preempt_count.i.i.i.i405 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load volatile i32, ptr %preempt_count.i.i.i.i405, align 4
  %add.i.i.i406 = add i32 %124, 1
  store volatile i32 %add.i.i.i406, ptr %preempt_count.i.i.i.i405, align 4
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !432
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #23
  %call.i407 = call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i407, label %do.body201.rcu_read_lock.exit414_crit_edge, label %land.lhs.true.i410

do.body201.rcu_read_lock.exit414_crit_edge:       ; preds = %do.body201
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit414

land.lhs.true.i410:                               ; preds = %do.body201
  %call1.i408 = call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i408)
  %tobool.not.i409 = icmp eq i32 %call1.i408, 0
  br i1 %tobool.not.i409, label %land.lhs.true.i410.rcu_read_lock.exit414_crit_edge, label %land.lhs.true2.i412

land.lhs.true.i410.rcu_read_lock.exit414_crit_edge: ; preds = %land.lhs.true.i410
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit414

land.lhs.true2.i412:                              ; preds = %land.lhs.true.i410
  %.b4.i411 = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i411, label %land.lhs.true2.i412.rcu_read_lock.exit414_crit_edge, label %if.then.i413

land.lhs.true2.i412.rcu_read_lock.exit414_crit_edge: ; preds = %land.lhs.true2.i412
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit414

if.then.i413:                                     ; preds = %land.lhs.true2.i412
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 696, ptr noundef nonnull @.str.97) #23
  br label %rcu_read_lock.exit414

rcu_read_lock.exit414:                            ; preds = %if.then.i413, %land.lhs.true2.i412.rcu_read_lock.exit414_crit_edge, %land.lhs.true.i410.rcu_read_lock.exit414_crit_edge, %do.body201.rcu_read_lock.exit414_crit_edge
  %fs_info = getelementptr inbounds %struct.btrfs_device, ptr %call50, i32 0, i32 4
  %125 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %fs_info, align 4
  %127 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %127)
  %128 = load i64, ptr %devid, align 8
  %129 = ptrtoint ptr %name162 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load volatile ptr, ptr %name162, align 8
  %call208 = call i32 @rcu_read_lock_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call208)
  %tobool209.not = icmp eq i32 %call208, 0
  br i1 %tobool209.not, label %land.lhs.true210, label %rcu_read_lock.exit414.cleanup_crit_edge

rcu_read_lock.exit414.cleanup_crit_edge:          ; preds = %rcu_read_lock.exit414
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

land.lhs.true210:                                 ; preds = %rcu_read_lock.exit414
  %call211 = call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call211)
  %tobool212.not = icmp eq i32 %call211, 0
  br i1 %tobool212.not, label %land.lhs.true210.cleanup_crit_edge, label %land.lhs.true213

land.lhs.true210.cleanup_crit_edge:               ; preds = %land.lhs.true210
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

land.lhs.true213:                                 ; preds = %land.lhs.true210
  %.b403 = load i1, ptr @device_list_add.__warned, align 1
  br i1 %.b403, label %land.lhs.true213.cleanup_crit_edge, label %if.then215

land.lhs.true213.cleanup_crit_edge:               ; preds = %land.lhs.true213
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then215:                                       ; preds = %land.lhs.true213
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @device_list_add.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.9, i32 noundef 961, ptr noundef nonnull @.str.13) #23
  br label %cleanup

cleanup.thread:                                   ; preds = %rcu_read_lock.exit, %if.then181
  %retval.0.ph = phi ptr [ %102, %if.then181 ], [ inttoptr (i32 -17 to ptr), %rcu_read_lock.exit ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %path_dev) #23
  br label %cleanup300

cleanup:                                          ; preds = %if.then215, %land.lhs.true213.cleanup_crit_edge, %land.lhs.true210.cleanup_crit_edge, %rcu_read_lock.exit414.cleanup_crit_edge
  %str221 = getelementptr inbounds %struct.rcu_string, ptr %130, i32 0, i32 1
  %131 = call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i486 = and i32 %131, -16384
  %132 = inttoptr i32 %and.i486 to ptr
  %task224 = getelementptr inbounds %struct.thread_info, ptr %132, i32 0, i32 2
  %133 = ptrtoint ptr %task224 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %task224, align 8
  %comm225 = getelementptr inbounds %struct.task_struct, ptr %134, i32 0, i32 101
  %pid.i487 = getelementptr inbounds %struct.task_struct, ptr %134, i32 0, i32 68
  %135 = ptrtoint ptr %pid.i487 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %pid.i487, align 8
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %126, ptr noundef nonnull @.str.85, i64 noundef %128, ptr noundef %str221, ptr noundef %path, ptr noundef %comm225, i32 noundef %136) #28
  call fastcc void @rcu_read_unlock()
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %path_dev) #23
  br label %if.end233

if.end233:                                        ; preds = %cleanup, %if.end176.if.end233_crit_edge
  %call.i488 = call i32 @strlen(ptr noundef %path) #27
  %add1.i489 = add i32 %call.i488, 9
  %call9.i.i.i515 = call noalias align 128 ptr @__kmalloc(i32 noundef %add1.i489, i32 noundef 3392) #30
  %tobool.not.i518 = icmp eq ptr %call9.i.i.i515, null
  br i1 %tobool.not.i518, label %if.then236, label %if.end239

if.then236:                                       ; preds = %if.end233
  call void @__sanitizer_cov_trace_pc() #25
  call void @mutex_unlock(ptr noundef %device_list_mutex49) #23
  br label %cleanup300

if.end239:                                        ; preds = %if.end233
  %add.i521 = add i32 %call.i488, 1
  %str.i522 = getelementptr inbounds %struct.rcu_string, ptr %call9.i.i.i515, i32 0, i32 1
  %call3.i523 = call ptr @strncpy(ptr noundef %str.i522, ptr noundef %path, i32 noundef %add.i521) #23
  %137 = ptrtoint ptr %name162 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %name162, align 8
  %tobool.not.i527 = icmp eq ptr %138, null
  br i1 %tobool.not.i527, label %if.end239.rcu_string_free.exit_crit_edge, label %do.end.i

if.end239.rcu_string_free.exit_crit_edge:         ; preds = %if.end239
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_string_free.exit

do.end.i:                                         ; preds = %if.end239
  call void @__sanitizer_cov_trace_pc() #25
  call void @kvfree_call_rcu(ptr noundef nonnull %138, ptr noundef null) #23
  br label %rcu_string_free.exit

rcu_string_free.exit:                             ; preds = %do.end.i, %if.end239.rcu_string_free.exit_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !435
  %139 = ptrtoint ptr %name162 to i32
  call void @__asan_store4_noabort(i32 %139)
  store volatile ptr %call9.i.i.i515, ptr %name162, align 8
  %dev_state = getelementptr inbounds %struct.btrfs_device, ptr %call50, i32 0, i32 10
  %140 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load volatile i32, ptr %dev_state, align 4
  %142 = and i32 %141, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %142)
  %tobool283.not = icmp eq i32 %142, 0
  br i1 %tobool283.not, label %rcu_string_free.exit.if.end288_crit_edge, label %if.then284

rcu_string_free.exit.if.end288_crit_edge:         ; preds = %rcu_string_free.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end288

if.then284:                                       ; preds = %rcu_string_free.exit
  call void @__sanitizer_cov_trace_pc() #25
  %missing_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.0535, i32 0, i32 7
  %143 = ptrtoint ptr %missing_devices to i32
  call void @__asan_load8_noabort(i32 %143)
  %144 = load i64, ptr %missing_devices, align 8
  %dec = add i64 %144, -1
  store i64 %dec, ptr %missing_devices, align 8
  call void @_clear_bit(i32 noundef 2, ptr noundef %dev_state) #23
  br label %if.end288

if.end288:                                        ; preds = %if.then284, %rcu_string_free.exit.if.end288_crit_edge, %lor.lhs.false.if.end288_crit_edge, %do.end148, %do.end136
  %fs_devices.2544 = phi ptr [ %fs_devices.0535, %if.then284 ], [ %fs_devices.0535, %rcu_string_free.exit.if.end288_crit_edge ], [ %fs_devices.0535, %lor.lhs.false.if.end288_crit_edge ], [ %fs_devices.2545, %do.end136 ], [ %fs_devices.2545, %do.end148 ]
  %device.1 = phi ptr [ %call50, %if.then284 ], [ %call50, %rcu_string_free.exit.if.end288_crit_edge ], [ %call50, %lor.lhs.false.if.end288_crit_edge ], [ %call83, %do.end136 ], [ %call83, %do.end148 ]
  %opened289 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.2544, i32 0, i32 17
  %145 = ptrtoint ptr %opened289 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %opened289, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %146)
  %tobool290.not = icmp eq i32 %146, 0
  br i1 %tobool290.not, label %if.then291, label %if.end288.if.end297_crit_edge

if.end288.if.end297_crit_edge:                    ; preds = %if.end288
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end297

if.then291:                                       ; preds = %if.end288
  call void @__sanitizer_cov_trace_pc() #25
  %generation292 = getelementptr inbounds %struct.btrfs_device, ptr %device.1, i32 0, i32 6
  %147 = ptrtoint ptr %generation292 to i32
  call void @__asan_store8_noabort(i32 %147)
  store i64 %2, ptr %generation292, align 8
  %latest_generation293 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.2544, i32 0, i32 10
  %148 = ptrtoint ptr %latest_generation293 to i32
  call void @__asan_load8_noabort(i32 %148)
  %149 = load i64, ptr %latest_generation293, align 8
  %150 = call i64 @llvm.umax.i64(i64 %2, i64 %149)
  %151 = ptrtoint ptr %latest_generation293 to i32
  call void @__asan_store8_noabort(i32 %151)
  store i64 %150, ptr %latest_generation293, align 8
  br label %if.end297

if.end297:                                        ; preds = %if.then291, %if.end288.if.end297_crit_edge
  %num_devices.i = getelementptr inbounds %struct.btrfs_super_block, ptr %disk_super, i32 0, i32 13
  %152 = ptrtoint ptr %num_devices.i to i32
  call void @__asan_loadN_noabort(i32 %152, i32 8)
  %153 = load i64, ptr %num_devices.i, align 1
  %154 = call i64 @llvm.bswap.i64(i64 %153) #23
  %total_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.2544, i32 0, i32 9
  %155 = ptrtoint ptr %total_devices to i32
  call void @__asan_store8_noabort(i32 %155)
  store i64 %154, ptr %total_devices, align 8
  %device_list_mutex299 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.2544, i32 0, i32 12
  call void @mutex_unlock(ptr noundef %device_list_mutex299) #23
  br label %cleanup300

cleanup300:                                       ; preds = %if.end297, %if.then236, %cleanup.thread, %if.then173, %if.then90, %if.then85, %if.then76, %if.end36.cleanup300_crit_edge, %if.else32.cleanup300_crit_edge, %if.then27.cleanup300_crit_edge
  %retval.1 = phi ptr [ %device.1, %if.end297 ], [ inttoptr (i32 -12 to ptr), %if.then236 ], [ inttoptr (i32 -17 to ptr), %if.then173 ], [ inttoptr (i32 -16 to ptr), %if.then76 ], [ %call83, %if.then85 ], [ inttoptr (i32 -12 to ptr), %if.then90 ], [ %fs_devices.1, %if.end36.cleanup300_crit_edge ], [ %retval.0.ph, %cleanup.thread ], [ inttoptr (i32 -12 to ptr), %if.then27.cleanup300_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.else32.cleanup300_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %devid) #23
  ret ptr %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @blkdev_put(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @find_free_dev_extent(ptr noundef %device, i64 noundef %num_bytes, ptr nocapture noundef writeonly %start, ptr noundef writeonly %len) local_unnamed_addr #4 align 64 {
entry:
  %disk_key.i.i = alloca %struct.btrfs_disk_key, align 8
  %search_start.addr.i = alloca i64, align 8
  %key.i = alloca %struct.btrfs_key, align 8
  %hole_size.i = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %search_start.addr.i)
  %fs_info1.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 4
  %0 = ptrtoint ptr %fs_info1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info1.i, align 4
  %dev_root.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %dev_root.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev_root.i, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key.i) #23
  %4 = getelementptr inbounds %struct.btrfs_key, ptr %key.i, i32 0, i32 1
  %5 = getelementptr inbounds %struct.btrfs_key, ptr %key.i, i32 0, i32 2
  %6 = call ptr @memset(ptr %key.i, i32 255, i32 17)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %hole_size.i) #23
  %total_bytes.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 14
  %7 = ptrtoint ptr %total_bytes.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %total_bytes.i, align 8
  %fs_devices.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 3
  %9 = ptrtoint ptr %fs_devices.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %fs_devices.i.i, align 8
  %chunk_alloc_policy.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %10, i32 0, i32 24
  %11 = ptrtoint ptr %chunk_alloc_policy.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %chunk_alloc_policy.i.i, align 8
  %13 = zext i32 %12 to i64
  call void @__sanitizer_cov_trace_switch(i64 %13, ptr @__sancov_gen_cov_switch_values)
  switch i32 %12, label %do.body.i.i [
    i32 0, label %entry.dev_extent_search_start.exit.i_crit_edge
    i32 1, label %sw.bb1.i.i
  ]

entry.dev_extent_search_start.exit.i_crit_edge:   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %dev_extent_search_start.exit.i

sw.bb1.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %dev_extent_search_start.exit.i

do.body.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1444, 0\0A.popsection", ""() #23, !srcloc !436
  unreachable

dev_extent_search_start.exit.i:                   ; preds = %sw.bb1.i.i, %entry.dev_extent_search_start.exit.i_crit_edge
  %retval.0.i.i = phi i64 [ 0, %sw.bb1.i.i ], [ 1048576, %entry.dev_extent_search_start.exit.i_crit_edge ]
  %14 = ptrtoint ptr %search_start.addr.i to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %retval.0.i.i, ptr %search_start.addr.i, align 8
  %zone_info.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 8
  %15 = ptrtoint ptr %zone_info.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %zone_info.i, align 4
  %tobool.not.i = icmp eq ptr %16, null
  br i1 %tobool.not.i, label %dev_extent_search_start.exit.i.if.end.i_crit_edge, label %land.rhs.i

dev_extent_search_start.exit.i.if.end.i_crit_edge: ; preds = %dev_extent_search_start.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

land.rhs.i:                                       ; preds = %dev_extent_search_start.exit.i
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %16, align 8
  %sub.i = add i64 %18, -1
  %and.i = and i64 %sub.i, %num_bytes
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %cmp.not.i = icmp eq i64 %and.i, 0
  br i1 %cmp.not.i, label %land.rhs.i.if.end.i_crit_edge, label %do.end.i, !prof !423

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 1594, i32 noundef 9, ptr noundef null) #23
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %dev_extent_search_start.exit.i.if.end.i_crit_edge
  %call23.i = tail call ptr @btrfs_alloc_path() #23
  %tobool24.not.i = icmp eq ptr %call23.i, null
  br i1 %tobool24.not.i, label %if.end.i.find_free_dev_extent_start.exit_crit_edge, label %again.preheader.i

if.end.i.find_free_dev_extent_start.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %find_free_dev_extent_start.exit

again.preheader.i:                                ; preds = %if.end.i
  call void @__sanitizer_cov_trace_cmp8(i64 %retval.0.i.i, i64 %8)
  %cmp27.not18.i = icmp ult i64 %retval.0.i.i, %8
  br i1 %cmp27.not18.i, label %lor.lhs.false.lr.ph.i, label %again.preheader.i.out.i_crit_edge

again.preheader.i.out.i_crit_edge:                ; preds = %again.preheader.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out.i

lor.lhs.false.lr.ph.i:                            ; preds = %again.preheader.i
  %dev_state.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 10
  %reada.i = getelementptr inbounds %struct.btrfs_path, ptr %call23.i, i32 0, i32 3
  %search_commit_root.i = getelementptr inbounds %struct.btrfs_path, ptr %call23.i, i32 0, i32 5
  %devid.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 13
  %slots.i = getelementptr inbounds %struct.btrfs_path, ptr %call23.i, i32 0, i32 1
  %19 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i.i, i32 0, i32 1
  %20 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i.i, i32 0, i32 2
  br label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.then99.i.lor.lhs.false.i_crit_edge, %lor.lhs.false.lr.ph.i
  %21 = phi i64 [ %retval.0.i.i, %lor.lhs.false.lr.ph.i ], [ %78, %if.then99.i.lor.lhs.false.i_crit_edge ]
  %max_hole_size.020.i = phi i64 [ 0, %lor.lhs.false.lr.ph.i ], [ %max_hole_size.1.ph.i, %if.then99.i.lor.lhs.false.i_crit_edge ]
  %max_hole_start.019.i = phi i64 [ %retval.0.i.i, %lor.lhs.false.lr.ph.i ], [ %max_hole_start.1.ph.i, %if.then99.i.lor.lhs.false.i_crit_edge ]
  %22 = ptrtoint ptr %dev_state.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %dev_state.i, align 4
  %24 = and i32 %23, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool29.not.i = icmp eq i32 %24, 0
  br i1 %tobool29.not.i, label %if.end31.i, label %lor.lhs.false.i.out.i_crit_edge

lor.lhs.false.i.out.i_crit_edge:                  ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out.i

if.end31.i:                                       ; preds = %lor.lhs.false.i
  %25 = ptrtoint ptr %reada.i to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 2, ptr %reada.i, align 4
  %26 = ptrtoint ptr %search_commit_root.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %bf.load.i = load i8, ptr %search_commit_root.i, align 2
  %bf.set34.i = or i8 %bf.load.i, 48
  store i8 %bf.set34.i, ptr %search_commit_root.i, align 2
  %27 = ptrtoint ptr %devid.i to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %devid.i, align 8
  %29 = ptrtoint ptr %key.i to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %key.i, align 8
  %30 = ptrtoint ptr %5 to i32
  call void @__asan_storeN_noabort(i32 %30, i32 8)
  store i64 %21, ptr %5, align 1
  %31 = ptrtoint ptr %4 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 -52, ptr %4, align 8
  %call35.i = call i32 @btrfs_search_backwards(ptr noundef %3, ptr noundef nonnull %key.i, ptr noundef nonnull %call23.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35.i)
  %cmp36.i = icmp slt i32 %call35.i, 0
  br i1 %cmp36.i, label %if.end31.i.out.i_crit_edge, label %if.end31.i.while.cond.outer.i_crit_edge

if.end31.i.while.cond.outer.i_crit_edge:          ; preds = %if.end31.i
  br label %while.cond.outer.i

if.end31.i.out.i_crit_edge:                       ; preds = %if.end31.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out.i

while.cond.outer.i:                               ; preds = %next.i, %if.end31.i.while.cond.outer.i_crit_edge
  %max_hole_start.1.ph.i = phi i64 [ %max_hole_start.4.i, %next.i ], [ %max_hole_start.019.i, %if.end31.i.while.cond.outer.i_crit_edge ]
  %max_hole_size.1.ph.i = phi i64 [ %max_hole_size.4.i, %next.i ], [ %max_hole_size.020.i, %if.end31.i.while.cond.outer.i_crit_edge ]
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.then42.i.while.cond.i_crit_edge, %while.cond.outer.i
  %32 = ptrtoint ptr %call23.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %call23.i, align 4
  %34 = ptrtoint ptr %slots.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %slots.i, align 4
  %pages.i.i = getelementptr inbounds %struct.extent_buffer, ptr %33, i32 0, i32 12
  %36 = ptrtoint ptr %pages.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %pages.i.i, align 4
  %call.i.i = call ptr @page_address(ptr noundef %37) #23
  %38 = ptrtoint ptr %33 to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %33, align 8
  %conv.i.i = trunc i64 %39 to i32
  %and.i1.i = and i32 %conv.i.i, 4095
  %add.ptr.i.i = getelementptr i8, ptr %call.i.i, i32 %and.i1.i
  %nritems.i.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i.i, i32 0, i32 7
  %40 = ptrtoint ptr %nritems.i.i to i32
  call void @__asan_loadN_noabort(i32 %40, i32 4)
  %41 = load i32, ptr %nritems.i.i, align 1
  %42 = call i32 @llvm.bswap.i32(i32 %41) #23
  call void @__sanitizer_cov_trace_cmp4(i32 %35, i32 %42)
  %cmp41.not.i = icmp ult i32 %35, %42
  br i1 %cmp41.not.i, label %if.end50.i, label %if.then42.i

if.then42.i:                                      ; preds = %while.cond.i
  %call.i2.i = call i32 @btrfs_next_old_leaf(ptr noundef %3, ptr noundef nonnull %call23.i, i64 noundef 0) #23
  %cmp44.i = icmp eq i32 %call.i2.i, 0
  br i1 %cmp44.i, label %if.then42.i.while.cond.i_crit_edge, label %if.end46.i

if.then42.i.while.cond.i_crit_edge:               ; preds = %if.then42.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.cond.i

if.end46.i:                                       ; preds = %if.then42.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i2.i)
  %cmp47.i = icmp slt i32 %call.i2.i, 0
  br i1 %cmp47.i, label %if.end46.i.out.i_crit_edge, label %if.end46.i.while.end.i_crit_edge

if.end46.i.while.end.i_crit_edge:                 ; preds = %if.end46.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end.i

if.end46.i.out.i_crit_edge:                       ; preds = %if.end46.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out.i

if.end50.i:                                       ; preds = %while.cond.i
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i.i) #23
  %mul.i.i.i.i.i = mul i32 %35, 25
  %add.i.i.i.i.i = add i32 %mul.i.i.i.i.i, 101
  %43 = call ptr @memset(ptr %disk_key.i.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %33, ptr noundef nonnull %disk_key.i.i, i32 noundef %add.i.i.i.i.i, i32 noundef 17) #23
  %44 = ptrtoint ptr %20 to i32
  call void @__asan_loadN_noabort(i32 %44, i32 8)
  %45 = load i64, ptr %20, align 1
  %46 = call i64 @llvm.bswap.i64(i64 %45) #23
  %47 = ptrtoint ptr %5 to i32
  call void @__asan_storeN_noabort(i32 %47, i32 8)
  store i64 %46, ptr %5, align 1
  %48 = ptrtoint ptr %19 to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %19, align 8
  %50 = ptrtoint ptr %4 to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 %49, ptr %4, align 8
  %51 = ptrtoint ptr %disk_key.i.i to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %disk_key.i.i, align 8
  %53 = call i64 @llvm.bswap.i64(i64 %52) #23
  %54 = ptrtoint ptr %key.i to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 %53, ptr %key.i, align 8
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i.i) #23
  %55 = ptrtoint ptr %devid.i to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %devid.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %53, i64 %56)
  %cmp53.i = icmp ult i64 %53, %56
  br i1 %cmp53.i, label %if.end50.i.next.i_crit_edge, label %if.end55.i

if.end50.i.next.i_crit_edge:                      ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %next.i

if.end55.i:                                       ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_cmp8(i64 %53, i64 %56)
  %cmp58.i = icmp ugt i64 %53, %56
  br i1 %cmp58.i, label %if.end55.i.while.end.i_crit_edge, label %if.end60.i

if.end55.i.while.end.i_crit_edge:                 ; preds = %if.end55.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end.i

if.end60.i:                                       ; preds = %if.end55.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 -52, i8 %49)
  %cmp62.not.i = icmp eq i8 %49, -52
  br i1 %cmp62.not.i, label %if.end65.i, label %if.end60.i.next.i_crit_edge

if.end60.i.next.i_crit_edge:                      ; preds = %if.end60.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %next.i

if.end65.i:                                       ; preds = %if.end60.i
  %57 = ptrtoint ptr %search_start.addr.i to i32
  call void @__asan_load8_noabort(i32 %57)
  %58 = load i64, ptr %search_start.addr.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %46, i64 %58)
  %cmp67.i = icmp ugt i64 %46, %58
  br i1 %cmp67.i, label %if.then69.i, label %if.end65.i.if.end81.i_crit_edge

if.end65.i.if.end81.i_crit_edge:                  ; preds = %if.end65.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end81.i

if.then69.i:                                      ; preds = %if.end65.i
  %sub71.i = sub i64 %46, %58
  %59 = ptrtoint ptr %hole_size.i to i32
  call void @__asan_store8_noabort(i32 %59)
  store i64 %sub71.i, ptr %hole_size.i, align 8
  %call72.i = call fastcc zeroext i1 @dev_extent_hole_check(ptr noundef %device, ptr noundef nonnull %search_start.addr.i, ptr noundef nonnull %hole_size.i, i64 noundef %num_bytes) #23
  %60 = ptrtoint ptr %hole_size.i to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %hole_size.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %61, i64 %max_hole_size.1.ph.i)
  %cmp73.i = icmp ugt i64 %61, %max_hole_size.1.ph.i
  br i1 %cmp73.i, label %if.then75.i, label %if.then69.i.if.end76.i_crit_edge

if.then69.i.if.end76.i_crit_edge:                 ; preds = %if.then69.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end76.i

if.then75.i:                                      ; preds = %if.then69.i
  call void @__sanitizer_cov_trace_pc() #25
  %62 = ptrtoint ptr %search_start.addr.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %search_start.addr.i, align 8
  br label %if.end76.i

if.end76.i:                                       ; preds = %if.then75.i, %if.then69.i.if.end76.i_crit_edge
  %max_hole_start.2.i = phi i64 [ %63, %if.then75.i ], [ %max_hole_start.1.ph.i, %if.then69.i.if.end76.i_crit_edge ]
  %max_hole_size.2.i = phi i64 [ %61, %if.then75.i ], [ %max_hole_size.1.ph.i, %if.then69.i.if.end76.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp8(i64 %61, i64 %num_bytes)
  %cmp77.not.i = icmp ult i64 %61, %num_bytes
  br i1 %cmp77.not.i, label %if.end76.i.if.end81.i_crit_edge, label %if.end76.i.out.i_crit_edge

if.end76.i.out.i_crit_edge:                       ; preds = %if.end76.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out.i

if.end76.i.if.end81.i_crit_edge:                  ; preds = %if.end76.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.end76.i.if.end81.i_crit_edge, %if.end65.i.if.end81.i_crit_edge
  %max_hole_start.3.i = phi i64 [ %max_hole_start.2.i, %if.end76.i.if.end81.i_crit_edge ], [ %max_hole_start.1.ph.i, %if.end65.i.if.end81.i_crit_edge ]
  %max_hole_size.3.i = phi i64 [ %max_hole_size.2.i, %if.end76.i.if.end81.i_crit_edge ], [ %max_hole_size.1.ph.i, %if.end65.i.if.end81.i_crit_edge ]
  %64 = inttoptr i32 %add.i.i.i.i.i to ptr
  %call.i.i.i = call i32 @btrfs_get_32(ptr noundef %33, ptr noundef %64, i32 noundef 17) #23
  %add.i = add i32 %call.i.i.i, 101
  %65 = inttoptr i32 %add.i to ptr
  %66 = ptrtoint ptr %5 to i32
  call void @__asan_loadN_noabort(i32 %66, i32 8)
  %67 = load i64, ptr %5, align 1
  %call.i3.i = call i64 @btrfs_get_64(ptr noundef %33, ptr noundef %65, i32 noundef 24) #23
  %add85.i = add i64 %call.i3.i, %67
  %68 = ptrtoint ptr %search_start.addr.i to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %search_start.addr.i, align 8
  %70 = call i64 @llvm.umax.i64(i64 %add85.i, i64 %69) #23
  %71 = ptrtoint ptr %search_start.addr.i to i32
  call void @__asan_store8_noabort(i32 %71)
  store i64 %70, ptr %search_start.addr.i, align 8
  br label %next.i

next.i:                                           ; preds = %if.end81.i, %if.end60.i.next.i_crit_edge, %if.end50.i.next.i_crit_edge
  %max_hole_start.4.i = phi i64 [ %max_hole_start.1.ph.i, %if.end50.i.next.i_crit_edge ], [ %max_hole_start.1.ph.i, %if.end60.i.next.i_crit_edge ], [ %max_hole_start.3.i, %if.end81.i ]
  %max_hole_size.4.i = phi i64 [ %max_hole_size.1.ph.i, %if.end50.i.next.i_crit_edge ], [ %max_hole_size.1.ph.i, %if.end60.i.next.i_crit_edge ], [ %max_hole_size.3.i, %if.end81.i ]
  %72 = ptrtoint ptr %slots.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %slots.i, align 4
  %inc.i = add i32 %73, 1
  store i32 %inc.i, ptr %slots.i, align 4
  call void @__might_resched(ptr noundef nonnull @.str.9, i32 noundef 1677, i32 noundef 0) #23
  %call.i4.i = call i32 @__cond_resched() #23
  br label %while.cond.outer.i

while.end.i:                                      ; preds = %if.end55.i.while.end.i_crit_edge, %if.end46.i.while.end.i_crit_edge
  %74 = ptrtoint ptr %search_start.addr.i to i32
  call void @__asan_load8_noabort(i32 %74)
  %75 = load i64, ptr %search_start.addr.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %8, i64 %75)
  %cmp94.i = icmp ugt i64 %8, %75
  br i1 %cmp94.i, label %if.then96.i, label %while.end.i.if.end105.i_crit_edge

while.end.i.if.end105.i_crit_edge:                ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end105.i

if.then96.i:                                      ; preds = %while.end.i
  %sub97.i = sub i64 %8, %75
  %76 = ptrtoint ptr %hole_size.i to i32
  call void @__asan_store8_noabort(i32 %76)
  store i64 %sub97.i, ptr %hole_size.i, align 8
  %call98.i = call fastcc zeroext i1 @dev_extent_hole_check(ptr noundef %device, ptr noundef nonnull %search_start.addr.i, ptr noundef nonnull %hole_size.i, i64 noundef %num_bytes) #23
  br i1 %call98.i, label %if.then99.i, label %if.end100.i

if.then99.i:                                      ; preds = %if.then96.i
  call void @btrfs_release_path(ptr noundef nonnull %call23.i) #23
  %77 = ptrtoint ptr %search_start.addr.i to i32
  call void @__asan_load8_noabort(i32 %77)
  %78 = load i64, ptr %search_start.addr.i, align 8
  %cmp27.not.i = icmp ult i64 %78, %8
  br i1 %cmp27.not.i, label %if.then99.i.lor.lhs.false.i_crit_edge, label %if.then99.i.out.i_crit_edge

if.then99.i.out.i_crit_edge:                      ; preds = %if.then99.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out.i

if.then99.i.lor.lhs.false.i_crit_edge:            ; preds = %if.then99.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false.i

if.end100.i:                                      ; preds = %if.then96.i
  %79 = ptrtoint ptr %hole_size.i to i32
  call void @__asan_load8_noabort(i32 %79)
  %80 = load i64, ptr %hole_size.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %80, i64 %max_hole_size.1.ph.i)
  %cmp101.i = icmp ugt i64 %80, %max_hole_size.1.ph.i
  br i1 %cmp101.i, label %if.then103.i, label %if.end100.i.if.end105.i_crit_edge

if.end100.i.if.end105.i_crit_edge:                ; preds = %if.end100.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end105.i

if.then103.i:                                     ; preds = %if.end100.i
  call void @__sanitizer_cov_trace_pc() #25
  %81 = ptrtoint ptr %search_start.addr.i to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load i64, ptr %search_start.addr.i, align 8
  br label %if.end105.i

if.end105.i:                                      ; preds = %if.then103.i, %if.end100.i.if.end105.i_crit_edge, %while.end.i.if.end105.i_crit_edge
  %max_hole_start.5.i = phi i64 [ %82, %if.then103.i ], [ %max_hole_start.1.ph.i, %if.end100.i.if.end105.i_crit_edge ], [ %max_hole_start.1.ph.i, %while.end.i.if.end105.i_crit_edge ]
  %max_hole_size.5.i = phi i64 [ %80, %if.then103.i ], [ %max_hole_size.1.ph.i, %if.end100.i.if.end105.i_crit_edge ], [ %max_hole_size.1.ph.i, %while.end.i.if.end105.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp8(i64 %max_hole_size.5.i, i64 %num_bytes)
  %cmp106.i = icmp ult i64 %max_hole_size.5.i, %num_bytes
  %..i = select i1 %cmp106.i, i32 -28, i32 0
  br label %out.i

out.i:                                            ; preds = %if.end105.i, %if.then99.i.out.i_crit_edge, %if.end76.i.out.i_crit_edge, %if.end46.i.out.i_crit_edge, %if.end31.i.out.i_crit_edge, %lor.lhs.false.i.out.i_crit_edge, %again.preheader.i.out.i_crit_edge
  %max_hole_start.6.i = phi i64 [ %max_hole_start.5.i, %if.end105.i ], [ %retval.0.i.i, %again.preheader.i.out.i_crit_edge ], [ %max_hole_start.2.i, %if.end76.i.out.i_crit_edge ], [ %max_hole_start.1.ph.i, %if.then99.i.out.i_crit_edge ], [ %max_hole_start.019.i, %lor.lhs.false.i.out.i_crit_edge ], [ %max_hole_start.1.ph.i, %if.end46.i.out.i_crit_edge ], [ %max_hole_start.019.i, %if.end31.i.out.i_crit_edge ]
  %max_hole_size.6.i = phi i64 [ %max_hole_size.5.i, %if.end105.i ], [ 0, %again.preheader.i.out.i_crit_edge ], [ %max_hole_size.2.i, %if.end76.i.out.i_crit_edge ], [ %max_hole_size.1.ph.i, %if.then99.i.out.i_crit_edge ], [ %max_hole_size.020.i, %lor.lhs.false.i.out.i_crit_edge ], [ %max_hole_size.1.ph.i, %if.end46.i.out.i_crit_edge ], [ %max_hole_size.020.i, %if.end31.i.out.i_crit_edge ]
  %ret.0.i = phi i32 [ %..i, %if.end105.i ], [ -28, %again.preheader.i.out.i_crit_edge ], [ 0, %if.end76.i.out.i_crit_edge ], [ -28, %if.then99.i.out.i_crit_edge ], [ -28, %lor.lhs.false.i.out.i_crit_edge ], [ %call.i2.i, %if.end46.i.out.i_crit_edge ], [ %call35.i, %if.end31.i.out.i_crit_edge ]
  call void @btrfs_free_path(ptr noundef nonnull %call23.i) #23
  %83 = ptrtoint ptr %start to i32
  call void @__asan_store8_noabort(i32 %83)
  store i64 %max_hole_start.6.i, ptr %start, align 8
  %tobool110.not.i = icmp eq ptr %len, null
  br i1 %tobool110.not.i, label %out.i.find_free_dev_extent_start.exit_crit_edge, label %if.then111.i

out.i.find_free_dev_extent_start.exit_crit_edge:  ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %find_free_dev_extent_start.exit

if.then111.i:                                     ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #25
  %84 = ptrtoint ptr %len to i32
  call void @__asan_store8_noabort(i32 %84)
  store i64 %max_hole_size.6.i, ptr %len, align 8
  br label %find_free_dev_extent_start.exit

find_free_dev_extent_start.exit:                  ; preds = %if.then111.i, %out.i.find_free_dev_extent_start.exit_crit_edge, %if.end.i.find_free_dev_extent_start.exit_crit_edge
  %retval.0.i = phi i32 [ -12, %if.end.i.find_free_dev_extent_start.exit_crit_edge ], [ %ret.0.i, %if.then111.i ], [ %ret.0.i, %out.i.find_free_dev_extent_start.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %hole_size.i) #23
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key.i) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %search_start.addr.i)
  ret i32 %retval.0.i
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_assign_next_active_device(ptr noundef readonly %device, ptr noundef %next_device) local_unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info1 = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 4
  %0 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info1, align 4
  %tobool.not = icmp eq ptr %next_device, null
  br i1 %tobool.not, label %if.then, label %entry.cond.end_crit_edge

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

if.then:                                          ; preds = %entry
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 100
  %2 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %fs_devices, align 8
  %devices.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %devices.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %next_device.016.i = load ptr, ptr %devices.i, align 8
  %cmp.not17.i = icmp eq ptr %next_device.016.i, %devices.i
  br i1 %cmp.not17.i, label %if.then.cond.false_crit_edge, label %if.then.for.body.i_crit_edge

if.then.for.body.i_crit_edge:                     ; preds = %if.then
  br label %for.body.i

if.then.cond.false_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.false

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then.for.body.i_crit_edge
  %next_device.018.i = phi ptr [ %next_device.0.i, %for.inc.i.for.body.i_crit_edge ], [ %next_device.016.i, %if.then.for.body.i_crit_edge ]
  %cmp2.not.i = icmp eq ptr %next_device.018.i, %device
  br i1 %cmp2.not.i, label %for.body.i.for.inc.i_crit_edge, label %land.lhs.true.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %dev_state.i = getelementptr inbounds %struct.btrfs_device, ptr %next_device.018.i, i32 0, i32 10
  %5 = ptrtoint ptr %dev_state.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %dev_state.i, align 4
  %7 = and i32 %6, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not.i = icmp eq i32 %7, 0
  br i1 %tobool.not.i, label %land.lhs.true3.i, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i
  %bdev.i = getelementptr inbounds %struct.btrfs_device, ptr %next_device.018.i, i32 0, i32 7
  %8 = ptrtoint ptr %bdev.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %bdev.i, align 8
  %tobool4.not.i = icmp eq ptr %9, null
  br i1 %tobool4.not.i, label %land.lhs.true3.i.for.inc.i_crit_edge, label %if.end

land.lhs.true3.i.for.inc.i_crit_edge:             ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true3.i.for.inc.i_crit_edge, %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %10 = ptrtoint ptr %next_device.018.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %next_device.0.i = load ptr, ptr %next_device.018.i, align 8
  %cmp.not.i = icmp eq ptr %next_device.0.i, %devices.i
  br i1 %cmp.not.i, label %for.inc.i.cond.false_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body.i

for.inc.i.cond.false_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.false

if.end:                                           ; preds = %land.lhs.true3.i
  %tobool2.not = icmp eq ptr %next_device.018.i, null
  br i1 %tobool2.not, label %if.end.cond.false_crit_edge, label %if.end.cond.end_crit_edge, !prof !424

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.end

if.end.cond.false_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.false

cond.false:                                       ; preds = %if.end.cond.false_crit_edge, %for.inc.i.cond.false_crit_edge, %if.then.cond.false_crit_edge
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.10, i32 noundef 2022) #32
  unreachable

cond.end:                                         ; preds = %if.end.cond.end_crit_edge, %entry.cond.end_crit_edge
  %next_device.addr.037 = phi ptr [ %next_device.018.i, %if.end.cond.end_crit_edge ], [ %next_device, %entry.cond.end_crit_edge ]
  %sb = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 45
  %11 = ptrtoint ptr %sb to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %sb, align 8
  %s_bdev = getelementptr inbounds %struct.super_block, ptr %12, i32 0, i32 26
  %13 = ptrtoint ptr %s_bdev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %s_bdev, align 4
  %tobool5.not = icmp eq ptr %14, null
  br i1 %tobool5.not, label %cond.end.if.end12_crit_edge, label %land.lhs.true

cond.end.if.end12_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end12

land.lhs.true:                                    ; preds = %cond.end
  %bdev = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 7
  %15 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %bdev, align 8
  %cmp = icmp eq ptr %14, %16
  br i1 %cmp, label %if.then8, label %land.lhs.true.if.end12_crit_edge

land.lhs.true.if.end12_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end12

if.then8:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  %bdev9 = getelementptr inbounds %struct.btrfs_device, ptr %next_device.addr.037, i32 0, i32 7
  %17 = ptrtoint ptr %bdev9 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %bdev9, align 8
  %19 = ptrtoint ptr %s_bdev to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %18, ptr %s_bdev, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.then8, %land.lhs.true.if.end12_crit_edge, %cond.end.if.end12_crit_edge
  %fs_devices13 = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 100
  %20 = ptrtoint ptr %fs_devices13 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %fs_devices13, align 8
  %latest_dev = getelementptr inbounds %struct.btrfs_fs_devices, ptr %21, i32 0, i32 11
  %22 = ptrtoint ptr %latest_dev to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %latest_dev, align 8
  %bdev14 = getelementptr inbounds %struct.btrfs_device, ptr %23, i32 0, i32 7
  %24 = ptrtoint ptr %bdev14 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %bdev14, align 8
  %bdev15 = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 7
  %26 = ptrtoint ptr %bdev15 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %bdev15, align 8
  %cmp16 = icmp eq ptr %25, %27
  br i1 %cmp16, label %if.then17, label %if.end12.if.end20_crit_edge

if.end12.if.end20_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end20

if.then17:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #25
  %28 = ptrtoint ptr %latest_dev to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %next_device.addr.037, ptr %latest_dev, align 8
  br label %if.end20

if.end20:                                         ; preds = %if.then17, %if.end12.if.end20_crit_edge
  ret void
}

; Function Attrs: cold inlinehint noreturn nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @assertfail(ptr noundef %expr, i32 noundef %line) unnamed_addr #10 align 64 {
entry:
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89, ptr noundef %expr, ptr noundef nonnull @.str.9, i32 noundef %line) #28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/ctree.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3492, 0\0A.popsection", ""() #23, !srcloc !437
  unreachable
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_scratch_superblocks(ptr noundef %fs_info, ptr noundef %bdev, ptr noundef %device_path) local_unnamed_addr #4 align 64 {
entry:
  %path.i = alloca %struct.path, align 4
  %now.i = alloca %struct.timespec64, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %bdev, null
  br i1 %tobool.not, label %entry.cleanup15_crit_edge, label %for.cond.preheader

entry.cleanup15_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup15

for.cond.preheader:                               ; preds = %entry
  %bd_queue.i.i = getelementptr inbounds %struct.block_device, ptr %bdev, i32 0, i32 18
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %for.cond.preheader
  %copy_num.043 = phi i32 [ 0, %for.cond.preheader ], [ %inc, %cleanup.for.body_crit_edge ]
  %call = tail call ptr @btrfs_read_dev_one_super(ptr noundef nonnull %bdev, i32 noundef %copy_num.043) #23
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %for.body.cleanup_crit_edge, label %if.end3

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end3:                                          ; preds = %for.body
  %0 = ptrtoint ptr %bd_queue.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bd_queue.i.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.end3.if.end7_crit_edge, label %bdev_is_zoned.exit

if.end3.if.end7_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end7

bdev_is_zoned.exit:                               ; preds = %if.end3
  %zoned.i.i.i = getelementptr inbounds %struct.request_queue, ptr %1, i32 0, i32 37, i32 27
  %2 = ptrtoint ptr %zoned.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %zoned.i.i.i, align 4
  %call.off.i.i = add i32 %3, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call.off.i.i)
  %switch.i.i = icmp ult i32 %call.off.i.i, 2
  br i1 %switch.i.i, label %if.then5, label %bdev_is_zoned.exit.if.end7_crit_edge

bdev_is_zoned.exit.if.end7_crit_edge:             ; preds = %bdev_is_zoned.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end7

if.then5:                                         ; preds = %bdev_is_zoned.exit
  call void @__sanitizer_cov_trace_pc() #25
  %call6 = tail call i32 @btrfs_reset_sb_log_zones(ptr noundef nonnull %bdev, i32 noundef %copy_num.043) #23
  br label %cleanup

if.end7:                                          ; preds = %bdev_is_zoned.exit.if.end7_crit_edge, %if.end3.if.end7_crit_edge
  %magic = getelementptr inbounds %struct.btrfs_super_block, ptr %call, i32 0, i32 4
  %4 = ptrtoint ptr %magic to i32
  call void @__asan_storeN_noabort(i32 %4, i32 8)
  store i64 0, ptr %magic, align 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %5 = load ptr, ptr @mem_map, align 4
  %6 = ptrtoint ptr %call to i32
  %sub = add i32 %6, 1073741824
  %shr = lshr i32 %sub, 12
  %add.ptr = getelementptr %struct.page, ptr %5, i32 %shr
  %call9 = tail call zeroext i1 @set_page_dirty(ptr noundef %add.ptr) #23
  tail call void @__might_sleep(ptr noundef nonnull @.str.92, i32 noundef 788) #23
  %7 = getelementptr %struct.page, ptr %5, i32 %shr, i32 1
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %7, align 4
  %and.i.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !423

if.then.i.i:                                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #25
  %sub.i.i = add i32 %9, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #25
  %10 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %10, %if.end.i.i ]
  %11 = inttoptr i32 %retval.0.i.i to ptr
  %12 = getelementptr inbounds %struct.page, ptr %11, i32 0, i32 1
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 4
  %and.i.i.i.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %folio_flags.exit.i.i, label %if.then.i.i.i, !prof !423

if.then.i.i.i:                                    ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %15 = inttoptr i32 %retval.0.i.i to ptr
  tail call void @dump_page(ptr noundef %15, ptr noundef nonnull @.str.93) #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #23, !srcloc !438
  unreachable

folio_flags.exit.i.i:                             ; preds = %_compound_head.exit.i
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %11, i32 noundef 4) #23
  %16 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %11, align 4
  %and.i.i4.i.i = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i4.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %folio_trylock.exit.i, label %folio_flags.exit.i.i.if.then.i33_crit_edge

folio_flags.exit.i.i.if.then.i33_crit_edge:       ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i33

folio_trylock.exit.i:                             ; preds = %folio_flags.exit.i.i
  tail call void @llvm.prefetch.p0(ptr %11, i32 1, i32 3, i32 1) #23
  %18 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %11, ptr %11, i32 1, ptr elementtype(i32) %11) #23, !srcloc !439
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %18, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !440
  %and1.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %phi.cmp.i.i.i = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %phi.cmp.i.i.i, label %folio_trylock.exit.i.lock_page.exit_crit_edge, label %folio_trylock.exit.i.if.then.i33_crit_edge

folio_trylock.exit.i.if.then.i33_crit_edge:       ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then.i33

folio_trylock.exit.i.lock_page.exit_crit_edge:    ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %lock_page.exit

if.then.i33:                                      ; preds = %folio_trylock.exit.i.if.then.i33_crit_edge, %folio_flags.exit.i.i.if.then.i33_crit_edge
  tail call void @__folio_lock(ptr noundef %11) #23
  br label %lock_page.exit

lock_page.exit:                                   ; preds = %if.then.i33, %folio_trylock.exit.i.lock_page.exit_crit_edge
  %19 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %7, align 4
  %and.i.i34 = and i32 %20, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i34)
  %tobool.not.i.i35 = icmp eq i32 %and.i.i34, 0
  br i1 %tobool.not.i.i35, label %if.end.i.i38, label %if.then.i.i37, !prof !423

if.then.i.i37:                                    ; preds = %lock_page.exit
  call void @__sanitizer_cov_trace_pc() #25
  %sub.i.i36 = add i32 %20, -1
  br label %write_one_page.exit

if.end.i.i38:                                     ; preds = %lock_page.exit
  call void @__sanitizer_cov_trace_pc() #25
  %21 = ptrtoint ptr %add.ptr to i32
  br label %write_one_page.exit

write_one_page.exit:                              ; preds = %if.end.i.i38, %if.then.i.i37
  %retval.0.i.i39 = phi i32 [ %sub.i.i36, %if.then.i.i37 ], [ %21, %if.end.i.i38 ]
  %22 = inttoptr i32 %retval.0.i.i39 to ptr
  %call1.i = tail call i32 @folio_write_one(ptr noundef %22) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool11.not = icmp eq i32 %call1.i, 0
  br i1 %tobool11.not, label %write_one_page.exit.if.end13_crit_edge, label %if.then12

write_one_page.exit.if.end13_crit_edge:           ; preds = %write_one_page.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13

if.then12:                                        ; preds = %write_one_page.exit
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.11, i32 noundef %copy_num.043, i32 noundef %call1.i) #28
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %write_one_page.exit.if.end13_crit_edge
  tail call void @btrfs_release_disk_super(ptr noundef %call)
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.then5, %for.body.cleanup_crit_edge
  %inc = add nuw nsw i32 %copy_num.043, 1
  %exitcond.not = icmp eq i32 %inc, 3
  br i1 %exitcond.not, label %for.end, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

for.end:                                          ; preds = %cleanup
  tail call void @btrfs_kobject_uevent(ptr noundef nonnull %bdev, i32 noundef 2) #23
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path.i) #23
  %23 = ptrtoint ptr %path.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr inttoptr (i32 -1 to ptr), ptr %path.i, align 4, !annotation !425
  %24 = getelementptr inbounds %struct.path, ptr %path.i, i32 0, i32 1
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr inttoptr (i32 -1 to ptr), ptr %24, align 4, !annotation !425
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %now.i) #23
  %26 = call ptr @memset(ptr %now.i, i32 255, i32 16)
  %call.i = call i32 @kern_path(ptr noundef %device_path, i32 noundef 1, ptr noundef nonnull %path.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i41 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i41, label %if.end.i, label %for.end.update_dev_time.exit_crit_edge

for.end.update_dev_time.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %update_dev_time.exit

if.end.i:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  %27 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %24, align 4
  %d_inode.i.i = getelementptr inbounds %struct.dentry, ptr %28, i32 0, i32 5
  %29 = ptrtoint ptr %d_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %d_inode.i.i, align 8
  call void @current_time(ptr nonnull sret(%struct.timespec64) align 8 %now.i, ptr noundef %30) #23
  %31 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %24, align 4
  %d_inode.i7.i = getelementptr inbounds %struct.dentry, ptr %32, i32 0, i32 5
  %33 = ptrtoint ptr %d_inode.i7.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %d_inode.i7.i, align 8
  %call4.i = call i32 @inode_update_time(ptr noundef %34, ptr noundef nonnull %now.i, i32 noundef 6) #23
  call void @path_put(ptr noundef nonnull %path.i) #23
  br label %update_dev_time.exit

update_dev_time.exit:                             ; preds = %if.end.i, %for.end.update_dev_time.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %now.i) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path.i) #23
  br label %cleanup15

cleanup15:                                        ; preds = %update_dev_time.exit, %entry.cleanup15_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_read_dev_one_super(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_reset_sb_log_zones(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @set_page_dirty(ptr noundef) local_unnamed_addr #5

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @btrfs_printk(ptr noundef, ptr noundef, ...) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_kobject_uevent(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @update_dev_time(ptr noundef %device_path) unnamed_addr #4 align 64 {
entry:
  %path = alloca %struct.path, align 4
  %now = alloca %struct.timespec64, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path) #23
  %0 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %path, align 4, !annotation !425
  %1 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !425
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %now) #23
  %3 = call ptr @memset(ptr %now, i32 255, i32 16)
  %call = call i32 @kern_path(ptr noundef %device_path, i32 noundef 1, ptr noundef nonnull %path) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %1, align 4
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %5, i32 0, i32 5
  %6 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %d_inode.i, align 8
  call void @current_time(ptr nonnull sret(%struct.timespec64) align 8 %now, ptr noundef %7) #23
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %1, align 4
  %d_inode.i7 = getelementptr inbounds %struct.dentry, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %d_inode.i7 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %d_inode.i7, align 8
  %call4 = call i32 @inode_update_time(ptr noundef %11, ptr noundef nonnull %now, i32 noundef 6) #23
  call void @path_put(ptr noundef nonnull %path) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %now) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_rm_device(ptr noundef %fs_info, ptr nocapture noundef readonly %args, ptr nocapture noundef writeonly %bdev, ptr nocapture noundef writeonly %mode) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_devices1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %0 = ptrtoint ptr %fs_devices1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_devices1, align 8
  %num_devices1.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %num_devices1.i to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %num_devices1.i, align 8
  %dev_replace.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 154
  %rwsem.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 154, i32 15
  tail call void @down_read(ptr noundef %rwsem.i) #23
  %call.i190 = tail call i32 @btrfs_dev_replace_is_ongoing(ptr noundef %dev_replace.i) #33
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i190)
  %tobool.not.i191 = icmp eq i32 %call.i190, 0
  br i1 %tobool.not.i191, label %entry.btrfs_num_devices.exit_crit_edge, label %if.then.i192

entry.btrfs_num_devices.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_num_devices.exit

if.then.i192:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %3)
  %cmp.i = icmp ugt i64 %3, 1
  br i1 %cmp.i, label %cond.end.i, label %cond.false.i, !prof !423

cond.false.i:                                     ; preds = %if.then.i192
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.95, i32 noundef 2042) #26
  unreachable

cond.end.i:                                       ; preds = %if.then.i192
  call void @__sanitizer_cov_trace_pc() #25
  %dec.i = add i64 %3, -1
  br label %btrfs_num_devices.exit

btrfs_num_devices.exit:                           ; preds = %cond.end.i, %entry.btrfs_num_devices.exit_crit_edge
  %num_devices.0.i = phi i64 [ %dec.i, %cond.end.i ], [ %3, %entry.btrfs_num_devices.exit_crit_edge ]
  tail call void @up_read(ptr noundef %rwsem.i) #23
  %profiles_lock.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 109
  %avail_data_alloc_bits.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 110
  %avail_system_alloc_bits.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 112
  %avail_metadata_alloc_bits.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 111
  br label %do.body.i

do.body.i:                                        ; preds = %read_seqbegin.exit.i.do.body.i_crit_edge, %btrfs_num_devices.exit
  tail call fastcc void @seqcount_lockdep_reader_access(ptr noundef %profiles_lock.i) #23
  %4 = ptrtoint ptr %profiles_lock.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %profiles_lock.i, align 4
  %and18.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18.i.i)
  %tobool.not19.i.i = icmp eq i32 %and18.i.i, 0
  br i1 %tobool.not19.i.i, label %do.body.i.read_seqbegin.exit.i_crit_edge, label %do.body.i.do.end.i.i_crit_edge

do.body.i.do.end.i.i_crit_edge:                   ; preds = %do.body.i
  br label %do.end.i.i

do.body.i.read_seqbegin.exit.i_crit_edge:         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %read_seqbegin.exit.i

do.end.i.i:                                       ; preds = %do.end.i.i.do.end.i.i_crit_edge, %do.body.i.do.end.i.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !441
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #23, !srcloc !442
  %6 = ptrtoint ptr %profiles_lock.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %profiles_lock.i, align 4
  %and.i.i = and i32 %7, 1
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %do.end.i.i.read_seqbegin.exit.i_crit_edge, label %do.end.i.i.do.end.i.i_crit_edge

do.end.i.i.do.end.i.i_crit_edge:                  ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end.i.i

do.end.i.i.read_seqbegin.exit.i_crit_edge:        ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %read_seqbegin.exit.i

read_seqbegin.exit.i:                             ; preds = %do.end.i.i.read_seqbegin.exit.i_crit_edge, %do.body.i.read_seqbegin.exit.i_crit_edge
  %.lcssa.i.i = phi i32 [ %5, %do.body.i.read_seqbegin.exit.i_crit_edge ], [ %7, %do.end.i.i.read_seqbegin.exit.i_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !443
  %8 = ptrtoint ptr %avail_data_alloc_bits.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %avail_data_alloc_bits.i, align 8
  %10 = ptrtoint ptr %avail_system_alloc_bits.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %avail_system_alloc_bits.i, align 8
  %12 = ptrtoint ptr %avail_metadata_alloc_bits.i to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %avail_metadata_alloc_bits.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !444
  %14 = ptrtoint ptr %profiles_lock.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %profiles_lock.i, align 4
  %cmp.i.i.i.not.i = icmp eq i32 %15, %.lcssa.i.i
  br i1 %cmp.i.i.i.not.i, label %for.cond.preheader.i, label %read_seqbegin.exit.i.do.body.i_crit_edge

read_seqbegin.exit.i.do.body.i_crit_edge:         ; preds = %read_seqbegin.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body.i

for.cond.preheader.i:                             ; preds = %read_seqbegin.exit.i
  %sub = add i64 %num_devices.0.i, -1
  %or.le.i = or i64 %11, %9
  %or1.le.i = or i64 %or.le.i, %13
  %and.i = and i64 %or1.le.i, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool4.not.i = icmp ne i64 %and.i, 0
  call void @__sanitizer_cov_trace_const_cmp8(i64 2, i64 %sub)
  %cmp6.i = icmp ult i64 %sub, 2
  %or.cond.i = and i1 %cmp6.i, %tobool4.not.i
  br i1 %or.cond.i, label %for.cond.preheader.i.btrfs_check_raid_min_devices.exit.thread_crit_edge, label %for.inc.i

for.cond.preheader.i.btrfs_check_raid_min_devices.exit.thread_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_check_raid_min_devices.exit.thread

for.inc.i:                                        ; preds = %for.cond.preheader.i
  %and.1.i = and i64 %or1.le.i, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.1.i)
  %tobool4.not.1.i = icmp ne i64 %and.1.i, 0
  %or.cond35.i = and i1 %cmp6.i, %tobool4.not.1.i
  br i1 %or.cond35.i, label %for.inc.i.btrfs_check_raid_min_devices.exit.thread_crit_edge, label %for.inc.1.i

for.inc.i.btrfs_check_raid_min_devices.exit.thread_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_check_raid_min_devices.exit.thread

for.inc.1.i:                                      ; preds = %for.inc.i
  %and.2.i = and i64 %or1.le.i, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.2.i)
  %tobool4.not.2.i = icmp ne i64 %and.2.i, 0
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub)
  %cmp6.2.i = icmp eq i64 %sub, 0
  %or.cond36.i = and i1 %cmp6.2.i, %tobool4.not.2.i
  br i1 %or.cond36.i, label %for.inc.1.i.if.end_crit_edge, label %for.inc.2.i

for.inc.1.i.if.end_crit_edge:                     ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

for.inc.2.i:                                      ; preds = %for.inc.1.i
  %and.3.i = and i64 %or1.le.i, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.3.i)
  %tobool4.not.3.i = icmp ne i64 %and.3.i, 0
  %or.cond37.i = and i1 %cmp6.2.i, %tobool4.not.3.i
  br i1 %or.cond37.i, label %for.inc.2.i.if.end_crit_edge, label %for.inc.4.i

for.inc.2.i.if.end_crit_edge:                     ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

for.inc.4.i:                                      ; preds = %for.inc.2.i
  %and.5.i = and i64 %or1.le.i, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.5.i)
  %tobool4.not.5.i = icmp ne i64 %and.5.i, 0
  %or.cond38.i = and i1 %cmp6.i, %tobool4.not.5.i
  br i1 %or.cond38.i, label %for.inc.4.i.btrfs_check_raid_min_devices.exit.thread_crit_edge, label %for.inc.5.i

for.inc.4.i.btrfs_check_raid_min_devices.exit.thread_crit_edge: ; preds = %for.inc.4.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_check_raid_min_devices.exit.thread

for.inc.5.i:                                      ; preds = %for.inc.4.i
  %and.6.i = and i64 %or1.le.i, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.6.i)
  %tobool4.not.6.i = icmp ne i64 %and.6.i, 0
  call void @__sanitizer_cov_trace_const_cmp8(i64 3, i64 %sub)
  %cmp6.6.i = icmp ult i64 %sub, 3
  %or.cond39.i = and i1 %cmp6.6.i, %tobool4.not.6.i
  br i1 %or.cond39.i, label %for.inc.5.i.btrfs_check_raid_min_devices.exit.thread_crit_edge, label %for.inc.6.i

for.inc.5.i.btrfs_check_raid_min_devices.exit.thread_crit_edge: ; preds = %for.inc.5.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_check_raid_min_devices.exit.thread

for.inc.6.i:                                      ; preds = %for.inc.5.i
  %and.7.i = and i64 %or1.le.i, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.7.i)
  %tobool4.not.7.i = icmp ne i64 %and.7.i, 0
  %or.cond40.i = and i1 %cmp6.6.i, %tobool4.not.7.i
  br i1 %or.cond40.i, label %for.inc.6.i.btrfs_check_raid_min_devices.exit.thread_crit_edge, label %for.inc.7.i

for.inc.6.i.btrfs_check_raid_min_devices.exit.thread_crit_edge: ; preds = %for.inc.6.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_check_raid_min_devices.exit.thread

for.inc.7.i:                                      ; preds = %for.inc.6.i
  %and.8.i = and i64 %or1.le.i, 1024
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.8.i)
  %tobool4.not.8.i = icmp ne i64 %and.8.i, 0
  call void @__sanitizer_cov_trace_const_cmp8(i64 4, i64 %sub)
  %cmp6.8.i = icmp ult i64 %sub, 4
  %or.cond41.i = and i1 %cmp6.8.i, %tobool4.not.8.i
  br i1 %or.cond41.i, label %for.inc.7.i.btrfs_check_raid_min_devices.exit.thread_crit_edge, label %for.inc.7.i.if.end_crit_edge

for.inc.7.i.if.end_crit_edge:                     ; preds = %for.inc.7.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

for.inc.7.i.btrfs_check_raid_min_devices.exit.thread_crit_edge: ; preds = %for.inc.7.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_check_raid_min_devices.exit.thread

btrfs_check_raid_min_devices.exit.thread:         ; preds = %for.inc.7.i.btrfs_check_raid_min_devices.exit.thread_crit_edge, %for.inc.6.i.btrfs_check_raid_min_devices.exit.thread_crit_edge, %for.inc.5.i.btrfs_check_raid_min_devices.exit.thread_crit_edge, %for.inc.4.i.btrfs_check_raid_min_devices.exit.thread_crit_edge, %for.inc.i.btrfs_check_raid_min_devices.exit.thread_crit_edge, %for.cond.preheader.i.btrfs_check_raid_min_devices.exit.thread_crit_edge
  %i.026.lcssa.i.ph = phi i32 [ 8, %for.inc.7.i.btrfs_check_raid_min_devices.exit.thread_crit_edge ], [ 7, %for.inc.6.i.btrfs_check_raid_min_devices.exit.thread_crit_edge ], [ 6, %for.inc.5.i.btrfs_check_raid_min_devices.exit.thread_crit_edge ], [ 5, %for.inc.4.i.btrfs_check_raid_min_devices.exit.thread_crit_edge ], [ 1, %for.inc.i.btrfs_check_raid_min_devices.exit.thread_crit_edge ], [ 0, %for.cond.preheader.i.btrfs_check_raid_min_devices.exit.thread_crit_edge ]
  %mindev_error.i219 = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %i.026.lcssa.i.ph, i32 8
  %16 = ptrtoint ptr %mindev_error.i219 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %mindev_error.i219, align 8
  %conv10.i220 = zext i8 %17 to i32
  br label %out

if.end:                                           ; preds = %for.inc.7.i.if.end_crit_edge, %for.inc.2.i.if.end_crit_edge, %for.inc.1.i.if.end_crit_edge
  %18 = ptrtoint ptr %fs_devices1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %fs_devices1, align 8
  %call4 = tail call ptr @btrfs_find_device(ptr noundef %19, ptr noundef %args)
  %tobool5.not = icmp eq ptr %call4, null
  br i1 %tobool5.not, label %if.then6, label %if.end10

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %missing = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 3
  %20 = ptrtoint ptr %missing to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %missing, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool7.not = icmp eq i8 %21, 0
  %. = select i1 %tobool7.not, i32 -2, i32 6
  br label %out

if.end10:                                         ; preds = %if.end
  %swapfile_pins_lock.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 172
  tail call void @_raw_spin_lock(ptr noundef %swapfile_pins_lock.i) #23
  %swapfile_pins.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 173
  %22 = ptrtoint ptr %swapfile_pins.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %node.017.i = load ptr, ptr %swapfile_pins.i, align 4
  %tobool18.not.i = icmp eq ptr %node.017.i, null
  br i1 %tobool18.not.i, label %if.end10.if.end29_crit_edge, label %if.end10.while.body.i_crit_edge

if.end10.while.body.i_crit_edge:                  ; preds = %if.end10
  br label %while.body.i

if.end10.if.end29_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end29

while.body.i:                                     ; preds = %if.end6.i.while.body.i_crit_edge, %if.end10.while.body.i_crit_edge
  %node.019.i = phi ptr [ %node.0.i, %if.end6.i.while.body.i_crit_edge ], [ %node.017.i, %if.end10.while.body.i_crit_edge ]
  %ptr1.i = getelementptr inbounds %struct.btrfs_swapfile_pin, ptr %node.019.i, i32 0, i32 1
  %23 = ptrtoint ptr %ptr1.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %ptr1.i, align 4
  %cmp.i193 = icmp ugt ptr %24, %call4
  br i1 %cmp.i193, label %if.then.i194, label %if.else.i

if.then.i194:                                     ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #25
  %rb_left.i = getelementptr inbounds %struct.rb_node, ptr %node.019.i, i32 0, i32 2
  br label %if.end6.i

if.else.i:                                        ; preds = %while.body.i
  %cmp3.i = icmp ult ptr %24, %call4
  br i1 %cmp3.i, label %if.then4.i, label %do.body

if.then4.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #25
  %rb_right.i = getelementptr inbounds %struct.rb_node, ptr %node.019.i, i32 0, i32 1
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.then4.i, %if.then.i194
  %node.1.in.i = phi ptr [ %rb_left.i, %if.then.i194 ], [ %rb_right.i, %if.then4.i ]
  %25 = ptrtoint ptr %node.1.in.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %node.0.i = load ptr, ptr %node.1.in.i, align 4
  %tobool.not.i195 = icmp eq ptr %node.0.i, null
  br i1 %tobool.not.i195, label %if.end6.i.if.end29_crit_edge, label %if.end6.i.while.body.i_crit_edge

if.end6.i.while.body.i_crit_edge:                 ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body.i

if.end6.i.if.end29_crit_edge:                     ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end29

do.body:                                          ; preds = %if.else.i
  tail call void @_raw_spin_unlock(ptr noundef %swapfile_pins_lock.i) #23
  %26 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %29, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !432
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #23
  %call.i = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i, label %do.body.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

do.body.rcu_read_lock.exit_crit_edge:             ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %do.body
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 696, ptr noundef nonnull @.str.97) #23
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %do.body.rcu_read_lock.exit_crit_edge
  %name = getelementptr inbounds %struct.btrfs_device, ptr %call4, i32 0, i32 5
  %30 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile ptr, ptr %name, align 8
  %call15 = tail call i32 @rcu_read_lock_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end24_crit_edge

rcu_read_lock.exit.do.end24_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end24

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call17 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %land.lhs.true.do.end24_crit_edge, label %land.lhs.true19

land.lhs.true.do.end24_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end24

land.lhs.true19:                                  ; preds = %land.lhs.true
  %.b183 = load i1, ptr @btrfs_rm_device.__warned, align 1
  br i1 %.b183, label %land.lhs.true19.do.end24_crit_edge, label %if.then21

land.lhs.true19.do.end24_crit_edge:               ; preds = %land.lhs.true19
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end24

if.then21:                                        ; preds = %land.lhs.true19
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @btrfs_rm_device.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.9, i32 noundef 2128, ptr noundef nonnull @.str.13) #23
  br label %do.end24

do.end24:                                         ; preds = %if.then21, %land.lhs.true19.do.end24_crit_edge, %land.lhs.true.do.end24_crit_edge, %rcu_read_lock.exit.do.end24_crit_edge
  %str = getelementptr inbounds %struct.rcu_string, ptr %31, i32 0, i32 1
  %devid = getelementptr inbounds %struct.btrfs_device, ptr %call4, i32 0, i32 13
  %32 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %devid, align 8
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.12, ptr noundef %str, i64 noundef %33) #28
  tail call fastcc void @rcu_read_unlock()
  br label %out

if.end29:                                         ; preds = %if.end6.i.if.end29_crit_edge, %if.end10.if.end29_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %swapfile_pins_lock.i) #23
  %dev_state = getelementptr inbounds %struct.btrfs_device, ptr %call4, i32 0, i32 10
  %34 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %dev_state, align 4
  %36 = and i32 %35, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool31.not = icmp eq i32 %36, 0
  br i1 %tobool31.not, label %if.end33, label %if.end29.out_crit_edge

if.end29.out_crit_edge:                           ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end33:                                         ; preds = %if.end29
  %37 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %dev_state, align 4
  %and1.i184 = and i32 %38, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i184)
  %tobool36.not = icmp eq i32 %and1.i184, 0
  br i1 %tobool36.not, label %if.end33.if.end40_crit_edge, label %land.lhs.true37

if.end33.if.end40_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end40

land.lhs.true37:                                  ; preds = %if.end33
  %39 = ptrtoint ptr %fs_devices1 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %fs_devices1, align 8
  %rw_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %40, i32 0, i32 6
  %41 = ptrtoint ptr %rw_devices to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %rw_devices, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %42)
  %cmp = icmp eq i64 %42, 1
  br i1 %cmp, label %land.lhs.true37.out_crit_edge, label %land.lhs.true37.if.end40_crit_edge

land.lhs.true37.if.end40_crit_edge:               ; preds = %land.lhs.true37
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end40

land.lhs.true37.out_crit_edge:                    ; preds = %land.lhs.true37
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end40:                                         ; preds = %land.lhs.true37.if.end40_crit_edge, %if.end33.if.end40_crit_edge
  %43 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %dev_state, align 4
  %and1.i185 = and i32 %44, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i185)
  %tobool43.not = icmp eq i32 %and1.i185, 0
  br i1 %tobool43.not, label %if.end40.if.end48_crit_edge, label %if.then44

if.end40.if.end48_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end48

if.then44:                                        ; preds = %if.end40
  %chunk_mutex = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 50
  tail call void @mutex_lock_nested(ptr noundef %chunk_mutex, i32 noundef 0) #23
  %dev_alloc_list = getelementptr inbounds %struct.btrfs_device, ptr %call4, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %dev_alloc_list) #23
  br i1 %call.i.i, label %if.end.i.i, label %if.then44.list_del_init.exit_crit_edge

if.then44.list_del_init.exit_crit_edge:           ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i = getelementptr inbounds %struct.btrfs_device, ptr %call4, i32 0, i32 1, i32 1
  %45 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %prev.i.i, align 4
  %47 = ptrtoint ptr %dev_alloc_list to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %dev_alloc_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %46, ptr %prev1.i.i.i, align 4
  %50 = ptrtoint ptr %46 to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile ptr %48, ptr %46, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %if.then44.list_del_init.exit_crit_edge
  %51 = ptrtoint ptr %dev_alloc_list to i32
  call void @__asan_store4_noabort(i32 %51)
  store volatile ptr %dev_alloc_list, ptr %dev_alloc_list, align 4
  %prev.i3.i = getelementptr inbounds %struct.btrfs_device, ptr %call4, i32 0, i32 1, i32 1
  %52 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %dev_alloc_list, ptr %prev.i3.i, align 4
  %fs_devices45 = getelementptr inbounds %struct.btrfs_device, ptr %call4, i32 0, i32 3
  %53 = ptrtoint ptr %fs_devices45 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %fs_devices45, align 8
  %rw_devices46 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %54, i32 0, i32 6
  %55 = ptrtoint ptr %rw_devices46 to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %rw_devices46, align 8
  %dec = add i64 %56, -1
  store i64 %dec, ptr %rw_devices46, align 8
  tail call void @mutex_unlock(ptr noundef %chunk_mutex) #23
  br label %if.end48

if.end48:                                         ; preds = %list_del_init.exit, %if.end40.if.end48_crit_edge
  %call49 = tail call i32 @btrfs_shrink_device(ptr noundef nonnull %call4, i64 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call49)
  %tobool50.not = icmp eq i32 %call49, 0
  br i1 %tobool50.not, label %if.end52, label %if.end48.error_undo_crit_edge

if.end48.error_undo_crit_edge:                    ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #25
  br label %error_undo

if.end52:                                         ; preds = %if.end48
  %call53 = tail call fastcc i32 @btrfs_rm_dev_item(ptr noundef nonnull %call4)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53)
  %tobool54.not = icmp eq i32 %call53, 0
  br i1 %tobool54.not, label %if.end56, label %if.end52.error_undo_crit_edge

if.end52.error_undo_crit_edge:                    ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #25
  br label %error_undo

if.end56:                                         ; preds = %if.end52
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %dev_state) #23
  %call58 = tail call i32 @btrfs_scrub_cancel_dev(ptr noundef nonnull %call4) #23
  %fs_devices59 = getelementptr inbounds %struct.btrfs_device, ptr %call4, i32 0, i32 3
  %57 = ptrtoint ptr %fs_devices59 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %fs_devices59, align 8
  %device_list_mutex = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 12
  tail call void @mutex_lock_nested(ptr noundef %device_list_mutex, i32 noundef 0) #23
  %call.i.i196 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %call4) #23
  br i1 %call.i.i196, label %if.end.i.i199, label %if.end56.list_del_rcu.exit_crit_edge

if.end56.list_del_rcu.exit_crit_edge:             ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del_rcu.exit

if.end.i.i199:                                    ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i197 = getelementptr inbounds %struct.list_head, ptr %call4, i32 0, i32 1
  %59 = ptrtoint ptr %prev.i.i197 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %prev.i.i197, align 4
  %61 = ptrtoint ptr %call4 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %call4, align 4
  %prev1.i.i.i198 = getelementptr inbounds %struct.list_head, ptr %62, i32 0, i32 1
  %63 = ptrtoint ptr %prev1.i.i.i198 to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %60, ptr %prev1.i.i.i198, align 4
  %64 = ptrtoint ptr %60 to i32
  call void @__asan_store4_noabort(i32 %64)
  store volatile ptr %62, ptr %60, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i199, %if.end56.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.list_head, ptr %call4, i32 0, i32 1
  %65 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %num_devices60 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %58, i32 0, i32 4
  %66 = ptrtoint ptr %num_devices60 to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %num_devices60, align 8
  %dec61 = add i64 %67, -1
  store i64 %dec61, ptr %num_devices60, align 8
  %total_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %58, i32 0, i32 9
  %68 = ptrtoint ptr %total_devices to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %total_devices, align 8
  %dec62 = add i64 %69, -1
  store i64 %dec62, ptr %total_devices, align 8
  %cmp63.not = icmp eq ptr %58, %1
  br i1 %cmp63.not, label %list_del_rcu.exit.if.end67_crit_edge, label %if.then64

list_del_rcu.exit.if.end67_crit_edge:             ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end67

if.then64:                                        ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #25
  %total_devices65 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 9
  %70 = ptrtoint ptr %total_devices65 to i32
  call void @__asan_load8_noabort(i32 %70)
  %71 = load i64, ptr %total_devices65, align 8
  %dec66 = add i64 %71, -1
  store i64 %dec66, ptr %total_devices65, align 8
  br label %if.end67

if.end67:                                         ; preds = %if.then64, %list_del_rcu.exit.if.end67_crit_edge
  %72 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %dev_state, align 4
  %74 = and i32 %73, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %tobool70.not = icmp eq i32 %74, 0
  br i1 %tobool70.not, label %if.end67.if.end73_crit_edge, label %if.then71

if.end67.if.end73_crit_edge:                      ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end73

if.then71:                                        ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #25
  %missing_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %58, i32 0, i32 7
  %75 = ptrtoint ptr %missing_devices to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %missing_devices, align 8
  %dec72 = add i64 %76, -1
  store i64 %dec72, ptr %missing_devices, align 8
  br label %if.end73

if.end73:                                         ; preds = %if.then71, %if.end67.if.end73_crit_edge
  tail call void @btrfs_assign_next_active_device(ptr noundef nonnull %call4, ptr noundef null) #34
  %bdev74 = getelementptr inbounds %struct.btrfs_device, ptr %call4, i32 0, i32 7
  %77 = ptrtoint ptr %bdev74 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %bdev74, align 8
  %tobool75.not = icmp eq ptr %78, null
  br i1 %tobool75.not, label %if.end73.if.end78_crit_edge, label %if.then76

if.end73.if.end78_crit_edge:                      ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end78

if.then76:                                        ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #25
  %open_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %58, i32 0, i32 5
  %79 = ptrtoint ptr %open_devices to i32
  call void @__asan_load8_noabort(i32 %79)
  %80 = load i64, ptr %open_devices, align 8
  %dec77 = add i64 %80, -1
  store i64 %dec77, ptr %open_devices, align 8
  tail call void @btrfs_sysfs_remove_device(ptr noundef nonnull %call4) #23
  br label %if.end78

if.end78:                                         ; preds = %if.then76, %if.end73.if.end78_crit_edge
  %super_copy = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 43
  %81 = ptrtoint ptr %super_copy to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %super_copy, align 8
  %num_devices.i = getelementptr inbounds %struct.btrfs_super_block, ptr %82, i32 0, i32 13
  %83 = ptrtoint ptr %num_devices.i to i32
  call void @__asan_loadN_noabort(i32 %83, i32 8)
  %84 = load i64, ptr %num_devices.i, align 1
  %85 = tail call i64 @llvm.bswap.i64(i64 %84) #23
  %sub80 = add i64 %85, -1
  %86 = tail call i64 @llvm.bswap.i64(i64 %sub80) #23
  %87 = ptrtoint ptr %num_devices.i to i32
  call void @__asan_storeN_noabort(i32 %87, i32 8)
  store i64 %86, ptr %num_devices.i, align 1
  tail call void @mutex_unlock(ptr noundef %device_list_mutex) #23
  %88 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %dev_state, align 4
  %and1.i188 = and i32 %89, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i188)
  %tobool85.not = icmp eq i32 %and1.i188, 0
  br i1 %tobool85.not, label %if.end78.if.end98_crit_edge, label %if.then86

if.end78.if.end98_crit_edge:                      ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end98

if.then86:                                        ; preds = %if.end78
  %90 = ptrtoint ptr %bdev74 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %bdev74, align 8
  %name88 = getelementptr inbounds %struct.btrfs_device, ptr %call4, i32 0, i32 5
  %92 = ptrtoint ptr %name88 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %name88, align 8
  %str89 = getelementptr inbounds %struct.rcu_string, ptr %93, i32 0, i32 1
  tail call void @btrfs_scratch_superblocks(ptr noundef %fs_info, ptr noundef %91, ptr noundef %str89)
  %94 = ptrtoint ptr %bdev74 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %bdev74, align 8
  %tobool92.not = icmp eq ptr %95, null
  br i1 %tobool92.not, label %if.then86.if.end98_crit_edge, label %if.then93

if.then86.if.end98_crit_edge:                     ; preds = %if.then86
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end98

if.then93:                                        ; preds = %if.then86
  call void @__sanitizer_cov_trace_pc() #25
  %call95 = tail call i32 @sync_blockdev(ptr noundef nonnull %95) #23
  %96 = ptrtoint ptr %bdev74 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %bdev74, align 8
  tail call void @invalidate_bdev(ptr noundef %97) #23
  br label %if.end98

if.end98:                                         ; preds = %if.then93, %if.then86.if.end98_crit_edge, %if.end78.if.end98_crit_edge
  %98 = ptrtoint ptr %bdev74 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %bdev74, align 8
  %100 = ptrtoint ptr %bdev to i32
  call void @__asan_store4_noabort(i32 %100)
  store ptr %99, ptr %bdev, align 4
  %mode100 = getelementptr inbounds %struct.btrfs_device, ptr %call4, i32 0, i32 9
  %101 = ptrtoint ptr %mode100 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %mode100, align 8
  %103 = ptrtoint ptr %mode to i32
  call void @__asan_store4_noabort(i32 %103)
  store i32 %102, ptr %mode, align 4
  tail call void @synchronize_rcu() #23
  tail call void @btrfs_free_device(ptr noundef nonnull %call4)
  %104 = ptrtoint ptr %num_devices60 to i32
  call void @__asan_load8_noabort(i32 %104)
  %105 = load i64, ptr %num_devices60, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %105)
  %cmp102 = icmp eq i64 %105, 0
  br i1 %cmp102, label %if.then103, label %if.end98.out_crit_edge

if.end98.out_crit_edge:                           ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.then103:                                       ; preds = %if.end98
  %seed_list = getelementptr inbounds %struct.btrfs_fs_devices, ptr %58, i32 0, i32 15
  %call.i.i201 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %seed_list) #23
  br i1 %call.i.i201, label %if.end.i.i204, label %if.then103.list_del_init.exit206_crit_edge

if.then103.list_del_init.exit206_crit_edge:       ; preds = %if.then103
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del_init.exit206

if.end.i.i204:                                    ; preds = %if.then103
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i202 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %58, i32 0, i32 15, i32 1
  %106 = ptrtoint ptr %prev.i.i202 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %prev.i.i202, align 4
  %108 = ptrtoint ptr %seed_list to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %seed_list, align 4
  %prev1.i.i.i203 = getelementptr inbounds %struct.list_head, ptr %109, i32 0, i32 1
  %110 = ptrtoint ptr %prev1.i.i.i203 to i32
  call void @__asan_store4_noabort(i32 %110)
  store ptr %107, ptr %prev1.i.i.i203, align 4
  %111 = ptrtoint ptr %107 to i32
  call void @__asan_store4_noabort(i32 %111)
  store volatile ptr %109, ptr %107, align 4
  br label %list_del_init.exit206

list_del_init.exit206:                            ; preds = %if.end.i.i204, %if.then103.list_del_init.exit206_crit_edge
  %112 = ptrtoint ptr %seed_list to i32
  call void @__asan_store4_noabort(i32 %112)
  store volatile ptr %seed_list, ptr %seed_list, align 4
  %prev.i3.i205 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %58, i32 0, i32 15, i32 1
  %113 = ptrtoint ptr %prev.i3.i205 to i32
  call void @__asan_store4_noabort(i32 %113)
  store ptr %seed_list, ptr %prev.i3.i205, align 4
  %opened = getelementptr inbounds %struct.btrfs_fs_devices, ptr %58, i32 0, i32 17
  %114 = ptrtoint ptr %opened to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %opened, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %115)
  %cmp104 = icmp eq i32 %115, 1
  br i1 %cmp104, label %cond.end, label %cond.false, !prof !423

cond.false:                                       ; preds = %list_del_init.exit206
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.14, i32 noundef 2240) #32
  unreachable

cond.end:                                         ; preds = %list_del_init.exit206
  call void @__sanitizer_cov_trace_pc() #25
  %116 = ptrtoint ptr %opened to i32
  call void @__asan_store4_noabort(i32 %116)
  store i32 0, ptr %opened, align 4
  tail call fastcc void @free_fs_devices(ptr noundef %58)
  br label %out

out:                                              ; preds = %list_add.exit, %error_undo.out_crit_edge, %cond.end, %if.end98.out_crit_edge, %land.lhs.true37.out_crit_edge, %if.end29.out_crit_edge, %do.end24, %if.then6, %btrfs_check_raid_min_devices.exit.thread
  %ret.0 = phi i32 [ -26, %do.end24 ], [ %ret.1, %list_add.exit ], [ %ret.1, %error_undo.out_crit_edge ], [ 0, %cond.end ], [ 0, %if.end98.out_crit_edge ], [ %., %if.then6 ], [ 5, %if.end29.out_crit_edge ], [ 7, %land.lhs.true37.out_crit_edge ], [ %conv10.i220, %btrfs_check_raid_min_devices.exit.thread ]
  ret i32 %ret.0

error_undo:                                       ; preds = %if.end52.error_undo_crit_edge, %if.end48.error_undo_crit_edge
  %ret.1 = phi i32 [ %call49, %if.end48.error_undo_crit_edge ], [ %call53, %if.end52.error_undo_crit_edge ]
  %117 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load volatile i32, ptr %dev_state, align 4
  %and1.i189 = and i32 %118, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i189)
  %tobool112.not = icmp eq i32 %and1.i189, 0
  br i1 %tobool112.not, label %error_undo.out_crit_edge, label %if.then113

error_undo.out_crit_edge:                         ; preds = %error_undo
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.then113:                                       ; preds = %error_undo
  %chunk_mutex114 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 50
  tail call void @mutex_lock_nested(ptr noundef %chunk_mutex114, i32 noundef 0) #23
  %dev_alloc_list115 = getelementptr inbounds %struct.btrfs_device, ptr %call4, i32 0, i32 1
  %alloc_list = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 14
  %119 = ptrtoint ptr %alloc_list to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %alloc_list, align 4
  %call.i.i207 = tail call zeroext i1 @__list_add_valid(ptr noundef %dev_alloc_list115, ptr noundef %alloc_list, ptr noundef %120) #23
  br i1 %call.i.i207, label %if.end.i.i208, label %if.then113.list_add.exit_crit_edge

if.then113.list_add.exit_crit_edge:               ; preds = %if.then113
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_add.exit

if.end.i.i208:                                    ; preds = %if.then113
  call void @__sanitizer_cov_trace_pc() #25
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %120, i32 0, i32 1
  %121 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %121)
  store ptr %dev_alloc_list115, ptr %prev1.i.i, align 4
  %122 = ptrtoint ptr %dev_alloc_list115 to i32
  call void @__asan_store4_noabort(i32 %122)
  store ptr %120, ptr %dev_alloc_list115, align 4
  %prev3.i.i = getelementptr inbounds %struct.btrfs_device, ptr %call4, i32 0, i32 1, i32 1
  %123 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %123)
  store ptr %alloc_list, ptr %prev3.i.i, align 4
  %124 = ptrtoint ptr %alloc_list to i32
  call void @__asan_store4_noabort(i32 %124)
  store volatile ptr %dev_alloc_list115, ptr %alloc_list, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i208, %if.then113.list_add.exit_crit_edge
  %fs_devices116 = getelementptr inbounds %struct.btrfs_device, ptr %call4, i32 0, i32 3
  %125 = ptrtoint ptr %fs_devices116 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %fs_devices116, align 8
  %rw_devices117 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %126, i32 0, i32 6
  %127 = ptrtoint ptr %rw_devices117 to i32
  call void @__asan_load8_noabort(i32 %127)
  %128 = load i64, ptr %rw_devices117, align 8
  %inc = add i64 %128, 1
  store i64 %inc, ptr %rw_devices117, align 8
  tail call void @mutex_unlock(ptr noundef %chunk_mutex114) #23
  br label %out
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @btrfs_find_device(ptr noundef readonly %fs_devices, ptr nocapture noundef readonly %args) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fsid.i = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 2
  %0 = ptrtoint ptr %fsid.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fsid.i, align 4
  %cmp.i = icmp eq ptr %1, null
  br i1 %cmp.i, label %entry.if.then_crit_edge, label %dev_args_match_fs_devices.exit

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then

dev_args_match_fs_devices.exit:                   ; preds = %entry
  %metadata_uuid.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 1
  %bcmp.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %metadata_uuid.i, ptr noundef nonnull dereferenceable(16) %1, i32 16) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %cmp2.i = icmp eq i32 %bcmp.i, 0
  br i1 %cmp2.i, label %dev_args_match_fs_devices.exit.if.then_crit_edge, label %dev_args_match_fs_devices.exit.if.end9_crit_edge

dev_args_match_fs_devices.exit.if.end9_crit_edge: ; preds = %dev_args_match_fs_devices.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end9

dev_args_match_fs_devices.exit.if.then_crit_edge: ; preds = %dev_args_match_fs_devices.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then

if.then:                                          ; preds = %dev_args_match_fs_devices.exit.if.then_crit_edge, %entry.if.then_crit_edge
  %devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 13
  %2 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %2)
  %device.0118 = load ptr, ptr %devices, align 8
  %cmp.not119 = icmp eq ptr %device.0118, %devices
  br i1 %cmp.not119, label %if.then.if.end9_crit_edge, label %for.body.lr.ph

if.then.if.end9_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end9

for.body.lr.ph:                                   ; preds = %if.then
  %3 = ptrtoint ptr %args to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %args, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %4)
  %cmp.not.i = icmp eq i64 %4, -1
  %missing.i = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 3
  %uuid.i = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %dev_args_match_device.exit.for.body_crit_edge, %for.body.lr.ph
  %device.0120 = phi ptr [ %device.0118, %for.body.lr.ph ], [ %device.0, %dev_args_match_device.exit.for.body_crit_edge ]
  br i1 %cmp.not.i, label %lor.rhs.i, label %land.lhs.true.i

lor.rhs.i:                                        ; preds = %for.body
  %5 = ptrtoint ptr %missing.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %missing.i, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not.i = icmp eq i8 %6, 0
  br i1 %tobool.not.i, label %cond.false.i, label %lor.rhs.i.if.end.i70_crit_edge, !prof !424

lor.rhs.i.if.end.i70_crit_edge:                   ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i70

cond.false.i:                                     ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.156, i32 noundef 6864) #26
  unreachable

land.lhs.true.i:                                  ; preds = %for.body
  %devid5.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0120, i32 0, i32 13
  %7 = ptrtoint ptr %devid5.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %devid5.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %8, i64 %4)
  %cmp7.not.i = icmp eq i64 %8, %4
  br i1 %cmp7.not.i, label %land.lhs.true.i.if.end.i70_crit_edge, label %land.lhs.true.i.dev_args_match_device.exit_crit_edge

land.lhs.true.i.dev_args_match_device.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %dev_args_match_device.exit

land.lhs.true.i.if.end.i70_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i70

if.end.i70:                                       ; preds = %land.lhs.true.i.if.end.i70_crit_edge, %lor.rhs.i.if.end.i70_crit_edge
  %9 = ptrtoint ptr %uuid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %uuid.i, align 8
  %tobool8.not.i = icmp eq ptr %10, null
  br i1 %tobool8.not.i, label %if.end.i70.if.end14.i_crit_edge, label %land.lhs.true9.i

if.end.i70.if.end14.i_crit_edge:                  ; preds = %if.end.i70
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end14.i

land.lhs.true9.i:                                 ; preds = %if.end.i70
  %uuid10.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0120, i32 0, i32 21
  %bcmp.i71 = tail call i32 @bcmp(ptr noundef dereferenceable(16) %uuid10.i, ptr noundef nonnull dereferenceable(16) %10, i32 16) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i71)
  %cmp12.not.i = icmp eq i32 %bcmp.i71, 0
  br i1 %cmp12.not.i, label %land.lhs.true9.i.if.end14.i_crit_edge, label %land.lhs.true9.i.dev_args_match_device.exit_crit_edge

land.lhs.true9.i.dev_args_match_device.exit_crit_edge: ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %dev_args_match_device.exit

land.lhs.true9.i.if.end14.i_crit_edge:            ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end14.i

if.end14.i:                                       ; preds = %land.lhs.true9.i.if.end14.i_crit_edge, %if.end.i70.if.end14.i_crit_edge
  %11 = ptrtoint ptr %missing.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %missing.i, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool16.not.i = icmp eq i8 %12, 0
  br i1 %tobool16.not.i, label %if.end14.i.cleanup_crit_edge, label %if.end18.i

if.end14.i.cleanup_crit_edge:                     ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end18.i:                                       ; preds = %if.end14.i
  %dev_state.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0120, i32 0, i32 10
  %13 = ptrtoint ptr %dev_state.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %dev_state.i, align 4
  %15 = and i32 %14, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool20.not.i = icmp eq i32 %15, 0
  br i1 %tobool20.not.i, label %if.end18.i.dev_args_match_device.exit_crit_edge, label %land.lhs.true21.i

if.end18.i.dev_args_match_device.exit_crit_edge:  ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %dev_args_match_device.exit

land.lhs.true21.i:                                ; preds = %if.end18.i
  %bdev.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0120, i32 0, i32 7
  %16 = ptrtoint ptr %bdev.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %bdev.i, align 8
  %tobool22.not.i = icmp eq ptr %17, null
  br i1 %tobool22.not.i, label %land.lhs.true21.i.cleanup_crit_edge, label %land.lhs.true21.i.dev_args_match_device.exit_crit_edge

land.lhs.true21.i.dev_args_match_device.exit_crit_edge: ; preds = %land.lhs.true21.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %dev_args_match_device.exit

land.lhs.true21.i.cleanup_crit_edge:              ; preds = %land.lhs.true21.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

dev_args_match_device.exit:                       ; preds = %land.lhs.true21.i.dev_args_match_device.exit_crit_edge, %if.end18.i.dev_args_match_device.exit_crit_edge, %land.lhs.true9.i.dev_args_match_device.exit_crit_edge, %land.lhs.true.i.dev_args_match_device.exit_crit_edge
  %18 = ptrtoint ptr %device.0120 to i32
  call void @__asan_load4_noabort(i32 %18)
  %device.0 = load ptr, ptr %device.0120, align 8
  %cmp.not = icmp eq ptr %device.0, %devices
  br i1 %cmp.not, label %dev_args_match_device.exit.if.end9_crit_edge, label %dev_args_match_device.exit.for.body_crit_edge

dev_args_match_device.exit.for.body_crit_edge:    ; preds = %dev_args_match_device.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

dev_args_match_device.exit.if.end9_crit_edge:     ; preds = %dev_args_match_device.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end9

if.end9:                                          ; preds = %dev_args_match_device.exit.if.end9_crit_edge, %if.then.if.end9_crit_edge, %dev_args_match_fs_devices.exit.if.end9_crit_edge
  %seed_list = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 15
  %19 = ptrtoint ptr %seed_list to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn124 = load ptr, ptr %seed_list, align 8
  %cmp17.not125 = icmp eq ptr %.pn124, %seed_list
  br i1 %cmp17.not125, label %if.end9.cleanup_crit_edge, label %for.body19.lr.ph

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

for.body19.lr.ph:                                 ; preds = %if.end9
  %missing.i82 = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 3
  %uuid.i89 = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 1
  br label %for.body19

for.body19:                                       ; preds = %for.inc44.for.body19_crit_edge, %for.body19.lr.ph
  %.pn126 = phi ptr [ %.pn124, %for.body19.lr.ph ], [ %.pn, %for.inc44.for.body19_crit_edge ]
  br i1 %cmp.i, label %for.body19.if.end22_crit_edge, label %dev_args_match_fs_devices.exit80

for.body19.if.end22_crit_edge:                    ; preds = %for.body19
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end22

dev_args_match_fs_devices.exit80:                 ; preds = %for.body19
  %metadata_uuid.i75 = getelementptr i8, ptr %.pn126, i32 -200
  %bcmp.i76 = tail call i32 @bcmp(ptr noundef dereferenceable(16) %metadata_uuid.i75, ptr noundef nonnull dereferenceable(16) %1, i32 16) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i76)
  %cmp2.i77 = icmp eq i32 %bcmp.i76, 0
  br i1 %cmp2.i77, label %dev_args_match_fs_devices.exit80.if.end22_crit_edge, label %dev_args_match_fs_devices.exit80.for.inc44_crit_edge

dev_args_match_fs_devices.exit80.for.inc44_crit_edge: ; preds = %dev_args_match_fs_devices.exit80
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc44

dev_args_match_fs_devices.exit80.if.end22_crit_edge: ; preds = %dev_args_match_fs_devices.exit80
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end22

if.end22:                                         ; preds = %dev_args_match_fs_devices.exit80.if.end22_crit_edge, %for.body19.if.end22_crit_edge
  %devices24 = getelementptr i8, ptr %.pn126, i32 -16
  %20 = ptrtoint ptr %devices24 to i32
  call void @__asan_load4_noabort(i32 %20)
  %device.1121 = load ptr, ptr %devices24, align 8
  %cmp31.not122 = icmp eq ptr %device.1121, %devices24
  br i1 %cmp31.not122, label %if.end22.for.inc44_crit_edge, label %for.body33.lr.ph

if.end22.for.inc44_crit_edge:                     ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc44

for.body33.lr.ph:                                 ; preds = %if.end22
  %21 = ptrtoint ptr %args to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %args, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %22)
  %cmp.not.i81 = icmp eq i64 %22, -1
  br label %for.body33

for.body33:                                       ; preds = %dev_args_match_device.exit107.for.body33_crit_edge, %for.body33.lr.ph
  %device.1123 = phi ptr [ %device.1121, %for.body33.lr.ph ], [ %device.1, %dev_args_match_device.exit107.for.body33_crit_edge ]
  br i1 %cmp.not.i81, label %lor.rhs.i84, label %land.lhs.true.i88

lor.rhs.i84:                                      ; preds = %for.body33
  %23 = ptrtoint ptr %missing.i82 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %missing.i82, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool.not.i83 = icmp eq i8 %24, 0
  br i1 %tobool.not.i83, label %cond.false.i85, label %lor.rhs.i84.if.end.i91_crit_edge, !prof !424

lor.rhs.i84.if.end.i91_crit_edge:                 ; preds = %lor.rhs.i84
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i91

cond.false.i85:                                   ; preds = %lor.rhs.i84
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.156, i32 noundef 6864) #26
  unreachable

land.lhs.true.i88:                                ; preds = %for.body33
  %devid5.i86 = getelementptr inbounds %struct.btrfs_device, ptr %device.1123, i32 0, i32 13
  %25 = ptrtoint ptr %devid5.i86 to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %devid5.i86, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %26, i64 %22)
  %cmp7.not.i87 = icmp eq i64 %26, %22
  br i1 %cmp7.not.i87, label %land.lhs.true.i88.if.end.i91_crit_edge, label %land.lhs.true.i88.dev_args_match_device.exit107_crit_edge

land.lhs.true.i88.dev_args_match_device.exit107_crit_edge: ; preds = %land.lhs.true.i88
  call void @__sanitizer_cov_trace_pc() #25
  br label %dev_args_match_device.exit107

land.lhs.true.i88.if.end.i91_crit_edge:           ; preds = %land.lhs.true.i88
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i91

if.end.i91:                                       ; preds = %land.lhs.true.i88.if.end.i91_crit_edge, %lor.rhs.i84.if.end.i91_crit_edge
  %27 = ptrtoint ptr %uuid.i89 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %uuid.i89, align 8
  %tobool8.not.i90 = icmp eq ptr %28, null
  br i1 %tobool8.not.i90, label %if.end.i91.if.end14.i98_crit_edge, label %land.lhs.true9.i95

if.end.i91.if.end14.i98_crit_edge:                ; preds = %if.end.i91
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end14.i98

land.lhs.true9.i95:                               ; preds = %if.end.i91
  %uuid10.i92 = getelementptr inbounds %struct.btrfs_device, ptr %device.1123, i32 0, i32 21
  %bcmp.i93 = tail call i32 @bcmp(ptr noundef dereferenceable(16) %uuid10.i92, ptr noundef nonnull dereferenceable(16) %28, i32 16) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i93)
  %cmp12.not.i94 = icmp eq i32 %bcmp.i93, 0
  br i1 %cmp12.not.i94, label %land.lhs.true9.i95.if.end14.i98_crit_edge, label %land.lhs.true9.i95.dev_args_match_device.exit107_crit_edge

land.lhs.true9.i95.dev_args_match_device.exit107_crit_edge: ; preds = %land.lhs.true9.i95
  call void @__sanitizer_cov_trace_pc() #25
  br label %dev_args_match_device.exit107

land.lhs.true9.i95.if.end14.i98_crit_edge:        ; preds = %land.lhs.true9.i95
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end14.i98

if.end14.i98:                                     ; preds = %land.lhs.true9.i95.if.end14.i98_crit_edge, %if.end.i91.if.end14.i98_crit_edge
  %29 = ptrtoint ptr %missing.i82 to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %missing.i82, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool16.not.i97 = icmp eq i8 %30, 0
  br i1 %tobool16.not.i97, label %if.end14.i98.cleanup_crit_edge, label %if.end18.i101

if.end14.i98.cleanup_crit_edge:                   ; preds = %if.end14.i98
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end18.i101:                                    ; preds = %if.end14.i98
  %dev_state.i99 = getelementptr inbounds %struct.btrfs_device, ptr %device.1123, i32 0, i32 10
  %31 = ptrtoint ptr %dev_state.i99 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %dev_state.i99, align 4
  %33 = and i32 %32, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool20.not.i100 = icmp eq i32 %33, 0
  br i1 %tobool20.not.i100, label %if.end18.i101.dev_args_match_device.exit107_crit_edge, label %land.lhs.true21.i104

if.end18.i101.dev_args_match_device.exit107_crit_edge: ; preds = %if.end18.i101
  call void @__sanitizer_cov_trace_pc() #25
  br label %dev_args_match_device.exit107

land.lhs.true21.i104:                             ; preds = %if.end18.i101
  %bdev.i102 = getelementptr inbounds %struct.btrfs_device, ptr %device.1123, i32 0, i32 7
  %34 = ptrtoint ptr %bdev.i102 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %bdev.i102, align 8
  %tobool22.not.i103 = icmp eq ptr %35, null
  br i1 %tobool22.not.i103, label %land.lhs.true21.i104.cleanup_crit_edge, label %land.lhs.true21.i104.dev_args_match_device.exit107_crit_edge

land.lhs.true21.i104.dev_args_match_device.exit107_crit_edge: ; preds = %land.lhs.true21.i104
  call void @__sanitizer_cov_trace_pc() #25
  br label %dev_args_match_device.exit107

land.lhs.true21.i104.cleanup_crit_edge:           ; preds = %land.lhs.true21.i104
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

dev_args_match_device.exit107:                    ; preds = %land.lhs.true21.i104.dev_args_match_device.exit107_crit_edge, %if.end18.i101.dev_args_match_device.exit107_crit_edge, %land.lhs.true9.i95.dev_args_match_device.exit107_crit_edge, %land.lhs.true.i88.dev_args_match_device.exit107_crit_edge
  %36 = ptrtoint ptr %device.1123 to i32
  call void @__asan_load4_noabort(i32 %36)
  %device.1 = load ptr, ptr %device.1123, align 8
  %cmp31.not = icmp eq ptr %device.1, %devices24
  br i1 %cmp31.not, label %dev_args_match_device.exit107.for.inc44_crit_edge, label %dev_args_match_device.exit107.for.body33_crit_edge

dev_args_match_device.exit107.for.body33_crit_edge: ; preds = %dev_args_match_device.exit107
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body33

dev_args_match_device.exit107.for.inc44_crit_edge: ; preds = %dev_args_match_device.exit107
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc44

for.inc44:                                        ; preds = %dev_args_match_device.exit107.for.inc44_crit_edge, %if.end22.for.inc44_crit_edge, %dev_args_match_fs_devices.exit80.for.inc44_crit_edge
  %37 = ptrtoint ptr %.pn126 to i32
  call void @__asan_load4_noabort(i32 %37)
  %.pn = load ptr, ptr %.pn126, align 8
  %cmp17.not = icmp eq ptr %.pn, %seed_list
  br i1 %cmp17.not, label %for.inc44.cleanup_crit_edge, label %for.inc44.for.body19_crit_edge

for.inc44.for.body19_crit_edge:                   ; preds = %for.inc44
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body19

for.inc44.cleanup_crit_edge:                      ; preds = %for.inc44
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

cleanup:                                          ; preds = %for.inc44.cleanup_crit_edge, %land.lhs.true21.i104.cleanup_crit_edge, %if.end14.i98.cleanup_crit_edge, %if.end9.cleanup_crit_edge, %land.lhs.true21.i.cleanup_crit_edge, %if.end14.i.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %if.end9.cleanup_crit_edge ], [ %device.1123, %if.end14.i98.cleanup_crit_edge ], [ %device.1123, %land.lhs.true21.i104.cleanup_crit_edge ], [ null, %for.inc44.cleanup_crit_edge ], [ %device.0120, %if.end14.i.cleanup_crit_edge ], [ %device.0120, %land.lhs.true21.i.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @btrfs_pinned_by_swapfile(ptr noundef %fs_info, ptr noundef readnone %ptr) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %swapfile_pins_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 172
  tail call void @_raw_spin_lock(ptr noundef %swapfile_pins_lock) #23
  %swapfile_pins = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 173
  %0 = ptrtoint ptr %swapfile_pins to i32
  call void @__asan_load4_noabort(i32 %0)
  %node.017 = load ptr, ptr %swapfile_pins, align 4
  %tobool18.not = icmp eq ptr %node.017, null
  br i1 %tobool18.not, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

while.body:                                       ; preds = %if.end6.while.body_crit_edge, %entry.while.body_crit_edge
  %node.019 = phi ptr [ %node.0, %if.end6.while.body_crit_edge ], [ %node.017, %entry.while.body_crit_edge ]
  %ptr1 = getelementptr inbounds %struct.btrfs_swapfile_pin, ptr %node.019, i32 0, i32 1
  %1 = ptrtoint ptr %ptr1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %ptr1, align 4
  %cmp = icmp ugt ptr %2, %ptr
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #25
  %rb_left = getelementptr inbounds %struct.rb_node, ptr %node.019, i32 0, i32 2
  br label %if.end6

if.else:                                          ; preds = %while.body
  %cmp3 = icmp ult ptr %2, %ptr
  br i1 %cmp3, label %if.then4, label %if.else.while.end_crit_edge

if.else.while.end_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

if.then4:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  %rb_right = getelementptr inbounds %struct.rb_node, ptr %node.019, i32 0, i32 1
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.then
  %node.1.in = phi ptr [ %rb_left, %if.then ], [ %rb_right, %if.then4 ]
  %3 = ptrtoint ptr %node.1.in to i32
  call void @__asan_load4_noabort(i32 %3)
  %node.0 = load ptr, ptr %node.1.in, align 4
  %tobool.not = icmp eq ptr %node.0, null
  br i1 %tobool.not, label %if.end6.while.end_crit_edge, label %if.end6.while.body_crit_edge

if.end6.while.body_crit_edge:                     ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body

if.end6.while.end_crit_edge:                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

while.end:                                        ; preds = %if.end6.while.end_crit_edge, %if.else.while.end_crit_edge, %entry.while.end_crit_edge
  %tobool.lcssa = phi i1 [ false, %entry.while.end_crit_edge ], [ true, %if.else.while.end_crit_edge ], [ false, %if.end6.while.end_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %swapfile_pins_lock) #23
  ret i1 %tobool.lcssa
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_read_unlock() unnamed_addr #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %call = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call, label %entry.do.end_crit_edge, label %land.lhs.true

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true2

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %.b4 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4, label %land.lhs.true2.do.end_crit_edge, label %if.then

land.lhs.true2.do.end_crit_edge:                  ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end

if.then:                                          ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 724, ptr noundef nonnull @.str.98) #23
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true2.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !433
  %0 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %3, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void @rcu_read_unlock_strict() #23
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_shrink_device(ptr noundef %device, i64 noundef %new_size) local_unnamed_addr #4 align 64 {
entry:
  %disk_key.i = alloca %struct.btrfs_disk_key, align 8
  %key = alloca %struct.btrfs_key, align 8
  %start = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info1 = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 4
  %0 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info1, align 4
  %dev_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %dev_root to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev_root, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #23
  %4 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %5 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %super_copy2 = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 43
  %6 = call ptr @memset(ptr %key, i32 255, i32 17)
  %7 = ptrtoint ptr %super_copy2 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %super_copy2, align 8
  %total_bytes.i = getelementptr inbounds %struct.btrfs_super_block, ptr %8, i32 0, i32 10
  %9 = ptrtoint ptr %total_bytes.i to i32
  call void @__asan_loadN_noabort(i32 %9, i32 8)
  %10 = load i64, ptr %total_bytes.i, align 1
  %data_seqcount.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 12
  %total_bytes.i360 = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 14
  br label %do.body.i

do.body.i:                                        ; preds = %while.end.i.do.body.i_crit_edge, %entry
  tail call fastcc void @seqcount_lockdep_reader_access(ptr noundef %data_seqcount.i) #23
  %11 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %data_seqcount.i, align 4
  %and28.i = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28.i)
  %tobool.not29.i = icmp eq i32 %and28.i, 0
  br i1 %tobool.not29.i, label %do.body.i.while.end.i_crit_edge, label %do.body.i.do.end.i_crit_edge

do.body.i.do.end.i_crit_edge:                     ; preds = %do.body.i
  br label %do.end.i

do.body.i.while.end.i_crit_edge:                  ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end.i

do.end.i:                                         ; preds = %do.end.i.do.end.i_crit_edge, %do.body.i.do.end.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !445
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #23, !srcloc !446
  %13 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %data_seqcount.i, align 4
  %and.i = and i32 %14, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.end.i.while.end.i_crit_edge, label %do.end.i.do.end.i_crit_edge

do.end.i.do.end.i_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end.i

do.end.i.while.end.i_crit_edge:                   ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end.i

while.end.i:                                      ; preds = %do.end.i.while.end.i_crit_edge, %do.body.i.while.end.i_crit_edge
  %.lcssa.i = phi i32 [ %12, %do.body.i.while.end.i_crit_edge ], [ %14, %do.end.i.while.end.i_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !447
  %15 = ptrtoint ptr %total_bytes.i360 to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %total_bytes.i360, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !444
  %17 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %data_seqcount.i, align 4
  %cmp.i.i.not.i = icmp eq i32 %18, %.lcssa.i
  br i1 %cmp.i.i.not.i, label %btrfs_device_get_total_bytes.exit, label %while.end.i.do.body.i_crit_edge

while.end.i.do.body.i_crit_edge:                  ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body.i

btrfs_device_get_total_bytes.exit:                ; preds = %while.end.i
  %19 = tail call i64 @llvm.bswap.i64(i64 %10) #23
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %start) #23
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 167
  %20 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sectorsize, align 4
  %sub = add i32 %21, -1
  %conv = zext i32 %sub to i64
  %neg = xor i64 %conv, -1
  %and = and i64 %neg, %new_size
  %22 = ptrtoint ptr %start to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %and, ptr %start, align 8
  %sub4 = sub i64 %16, %and
  %and9 = and i64 %sub4, %neg
  %dev_state = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 10
  %23 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %dev_state, align 4
  %25 = and i32 %24, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.not = icmp eq i32 %25, 0
  br i1 %tobool.not, label %if.end, label %btrfs_device_get_total_bytes.exit.cleanup_crit_edge

btrfs_device_get_total_bytes.exit.cleanup_crit_edge: ; preds = %btrfs_device_get_total_bytes.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %btrfs_device_get_total_bytes.exit
  %call11 = tail call ptr @btrfs_alloc_path() #23
  %tobool12.not = icmp eq ptr %call11, null
  br i1 %tobool12.not, label %if.end.cleanup_crit_edge, label %if.end14

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end14:                                         ; preds = %if.end
  %reada = getelementptr inbounds %struct.btrfs_path, ptr %call11, i32 0, i32 3
  %26 = ptrtoint ptr %reada to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 1, ptr %reada, align 4
  %call15 = tail call ptr @btrfs_start_transaction(ptr noundef %3, i32 noundef 0) #23
  %cmp.i = icmp ugt ptr %call15, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then17, label %if.end19

if.then17:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @btrfs_free_path(ptr noundef nonnull %call11) #23
  %27 = ptrtoint ptr %call15 to i32
  br label %cleanup

if.end19:                                         ; preds = %if.end14
  %chunk_mutex = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 50
  tail call void @mutex_lock_nested(ptr noundef %chunk_mutex, i32 noundef 0) #23
  tail call fastcc void @btrfs_device_set_total_bytes(ptr noundef %device, i64 noundef %and)
  %28 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %dev_state, align 4
  %and1.i357 = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i357)
  %tobool22.not = icmp eq i32 %and1.i357, 0
  br i1 %tobool22.not, label %if.end19.if.end25_crit_edge, label %if.then23

if.end19.if.end25_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end25

if.then23:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 3
  %30 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %fs_devices, align 8
  %total_rw_bytes = getelementptr inbounds %struct.btrfs_fs_devices, ptr %31, i32 0, i32 8
  %32 = ptrtoint ptr %total_rw_bytes to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %total_rw_bytes, align 8
  %sub24 = sub i64 %33, %and9
  store i64 %sub24, ptr %total_rw_bytes, align 8
  %free_chunk_space = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 17
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %free_chunk_space, i32 noundef 8) #23
  tail call void @generic_atomic64_sub(i64 noundef %and9, ptr noundef %free_chunk_space) #23
  br label %if.end25

if.end25:                                         ; preds = %if.then23, %if.end19.if.end25_crit_edge
  %call26 = call fastcc zeroext i1 @contains_pending_extent(ptr noundef %device, ptr noundef nonnull %start, i64 noundef %and9)
  tail call void @mutex_unlock(ptr noundef %chunk_mutex) #23
  br i1 %call26, label %if.then27, label %if.else

if.then27:                                        ; preds = %if.end25
  %call29 = tail call i32 @btrfs_commit_transaction(ptr noundef %call15) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %if.then27.if.end35_crit_edge, label %if.then27.done.thread_crit_edge

if.then27.done.thread_crit_edge:                  ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #25
  br label %done.thread

if.then27.if.end35_crit_edge:                     ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end35

if.else:                                          ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #25
  %call34 = tail call i32 @btrfs_end_transaction(ptr noundef %call15) #23
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then27.if.end35_crit_edge
  %devid = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 13
  %reclaim_bgs_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 165
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %call11, i32 0, i32 1
  %34 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 1
  %35 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 2
  br label %again

again:                                            ; preds = %do.end.again_crit_edge, %if.end35
  %retried.0.off0 = phi i1 [ false, %if.end35 ], [ true, %do.end.again_crit_edge ]
  %36 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %devid, align 8
  %38 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %37, ptr %key, align 8
  %39 = ptrtoint ptr %5 to i32
  call void @__asan_storeN_noabort(i32 %39, i32 8)
  store i64 -1, ptr %5, align 1
  %40 = ptrtoint ptr %4 to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 -52, ptr %4, align 8
  br label %do.body

do.body:                                          ; preds = %do.cond.do.body_crit_edge, %again
  %failed.1 = phi i32 [ 0, %again ], [ %failed.2, %do.cond.do.body_crit_edge ]
  call void @mutex_lock_nested(ptr noundef %reclaim_bgs_lock, i32 noundef 0) #23
  %call36 = call i32 @btrfs_search_slot(ptr noundef null, ptr noundef %3, ptr noundef nonnull %key, ptr noundef nonnull %call11, i32 noundef 0, i32 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36)
  %cmp = icmp slt i32 %call36, 0
  br i1 %cmp, label %if.then38, label %if.end40

if.then38:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #25
  call void @mutex_unlock(ptr noundef %reclaim_bgs_lock) #23
  br label %done.thread

if.end40:                                         ; preds = %do.body
  %41 = ptrtoint ptr %4 to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %4, align 8
  %conv42 = zext i8 %42 to i32
  %call43 = call i32 @btrfs_previous_item(ptr noundef %3, ptr noundef nonnull %call11, i64 noundef 0, i32 noundef %conv42) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43)
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %if.end51, label %if.then45

if.then45:                                        ; preds = %if.end40
  call void @mutex_unlock(ptr noundef %reclaim_bgs_lock) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43)
  %cmp47 = icmp slt i32 %call43, 0
  br i1 %cmp47, label %if.then45.done.thread_crit_edge, label %if.then45.do.end.sink.split_crit_edge

if.then45.do.end.sink.split_crit_edge:            ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end.sink.split

if.then45.done.thread_crit_edge:                  ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #25
  br label %done.thread

if.end51:                                         ; preds = %if.end40
  %43 = ptrtoint ptr %call11 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %call11, align 4
  %45 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %slots, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i) #23
  %mul.i.i.i.i = mul i32 %46, 25
  %add.i.i.i.i = add i32 %mul.i.i.i.i, 101
  %47 = call ptr @memset(ptr %disk_key.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %44, ptr noundef nonnull %disk_key.i, i32 noundef %add.i.i.i.i, i32 noundef 17) #23
  %48 = ptrtoint ptr %35 to i32
  call void @__asan_loadN_noabort(i32 %48, i32 8)
  %49 = load i64, ptr %35, align 1
  %50 = call i64 @llvm.bswap.i64(i64 %49) #23
  %51 = ptrtoint ptr %5 to i32
  call void @__asan_storeN_noabort(i32 %51, i32 8)
  store i64 %50, ptr %5, align 1
  %52 = ptrtoint ptr %34 to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %34, align 8
  %54 = ptrtoint ptr %4 to i32
  call void @__asan_store1_noabort(i32 %54)
  store i8 %53, ptr %4, align 8
  %55 = ptrtoint ptr %disk_key.i to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %disk_key.i, align 8
  %57 = call i64 @llvm.bswap.i64(i64 %56) #23
  %58 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %58)
  store i64 %57, ptr %key, align 8
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i) #23
  %59 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %59)
  %60 = load i64, ptr %devid, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %57, i64 %60)
  %cmp57.not = icmp eq i64 %57, %60
  br i1 %cmp57.not, label %if.end61, label %if.end51.do.end.sink.split.sink.split_crit_edge

if.end51.do.end.sink.split.sink.split_crit_edge:  ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end.sink.split.sink.split

if.end61:                                         ; preds = %if.end51
  %61 = inttoptr i32 %add.i.i.i.i to ptr
  %call.i.i361 = call i32 @btrfs_get_32(ptr noundef %44, ptr noundef %61, i32 noundef 17) #23
  %add = add i32 %call.i.i361, 101
  %62 = inttoptr i32 %add to ptr
  %call.i = call i64 @btrfs_get_64(ptr noundef %44, ptr noundef %62, i32 noundef 24) #23
  %63 = ptrtoint ptr %5 to i32
  call void @__asan_loadN_noabort(i32 %63, i32 8)
  %64 = load i64, ptr %5, align 1
  %add65 = add i64 %64, %call.i
  call void @__sanitizer_cov_trace_cmp8(i64 %add65, i64 %and)
  %cmp66.not = icmp ugt i64 %add65, %and
  br i1 %cmp66.not, label %if.end70, label %if.end61.do.end.sink.split.sink.split_crit_edge

if.end61.do.end.sink.split.sink.split_crit_edge:  ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end.sink.split.sink.split

if.end70:                                         ; preds = %if.end61
  %call.i362 = call i64 @btrfs_get_64(ptr noundef %44, ptr noundef %62, i32 noundef 16) #23
  call void @btrfs_release_path(ptr noundef nonnull %call11) #23
  %call72 = call fastcc i32 @btrfs_may_alloc_data_chunk(ptr noundef %1, i64 noundef %call.i362)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call72)
  %cmp73 = icmp slt i32 %call72, 0
  br i1 %cmp73, label %if.then75, label %if.end77

if.then75:                                        ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #25
  call void @mutex_unlock(ptr noundef %reclaim_bgs_lock) #23
  br label %done.thread

if.end77:                                         ; preds = %if.end70
  %call78 = call i32 @btrfs_relocate_chunk(ptr noundef %1, i64 noundef %call.i362)
  call void @mutex_unlock(ptr noundef %reclaim_bgs_lock) #23
  %65 = zext i32 %call78 to i64
  call void @__sanitizer_cov_trace_switch(i64 %65, ptr @__sancov_gen_cov_switch_values.183)
  switch i32 %call78, label %if.end77.done_crit_edge [
    i32 -28, label %if.then82
    i32 0, label %if.end77.do.cond_crit_edge
    i32 -26, label %if.then88
  ]

if.end77.do.cond_crit_edge:                       ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.cond

if.end77.done_crit_edge:                          ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #25
  br label %done

if.then82:                                        ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #25
  %inc = add i32 %failed.1, 1
  br label %do.cond

if.then88:                                        ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %1, ptr noundef nonnull @.str.46, i64 noundef %call.i362) #28
  br label %done.thread

do.cond:                                          ; preds = %if.then82, %if.end77.do.cond_crit_edge
  %failed.2 = phi i32 [ %inc, %if.then82 ], [ %failed.1, %if.end77.do.cond_crit_edge ]
  %66 = ptrtoint ptr %5 to i32
  call void @__asan_loadN_noabort(i32 %66, i32 8)
  %67 = load i64, ptr %5, align 1
  %dec = add i64 %67, -1
  store i64 %dec, ptr %5, align 1
  %cmp93.not = icmp eq i64 %67, 0
  br i1 %cmp93.not, label %do.cond.do.end_crit_edge, label %do.cond.do.body_crit_edge

do.cond.do.body_crit_edge:                        ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body

do.cond.do.end_crit_edge:                         ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end

do.end.sink.split.sink.split:                     ; preds = %if.end61.do.end.sink.split.sink.split_crit_edge, %if.end51.do.end.sink.split.sink.split_crit_edge
  call void @mutex_unlock(ptr noundef %reclaim_bgs_lock) #23
  br label %do.end.sink.split

do.end.sink.split:                                ; preds = %do.end.sink.split.sink.split, %if.then45.do.end.sink.split_crit_edge
  call void @btrfs_release_path(ptr noundef nonnull %call11) #23
  br label %do.end

do.end:                                           ; preds = %do.end.sink.split, %do.cond.do.end_crit_edge
  %failed.3 = phi i32 [ %failed.1, %do.end.sink.split ], [ %failed.2, %do.cond.do.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %failed.3)
  %tobool95.not = icmp eq i32 %failed.3, 0
  %brmerge = or i1 %retried.0.off0, %tobool95.not
  br i1 %brmerge, label %if.else98, label %do.end.again_crit_edge

do.end.again_crit_edge:                           ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %again

if.else98:                                        ; preds = %do.end
  %retried.0.off0.not = xor i1 %retried.0.off0, true
  %brmerge356 = or i1 %tobool95.not, %retried.0.off0.not
  br i1 %brmerge356, label %if.end105, label %if.else98.done.thread_crit_edge

if.else98.done.thread_crit_edge:                  ; preds = %if.else98
  call void @__sanitizer_cov_trace_pc() #25
  br label %done.thread

if.end105:                                        ; preds = %if.else98
  %call106 = call ptr @btrfs_start_transaction(ptr noundef %3, i32 noundef 0) #23
  %cmp.i363 = icmp ugt ptr %call106, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i363, label %if.then108, label %if.end110

if.then108:                                       ; preds = %if.end105
  call void @__sanitizer_cov_trace_pc() #25
  %68 = ptrtoint ptr %call106 to i32
  br label %done

if.end110:                                        ; preds = %if.end105
  call void @mutex_lock_nested(ptr noundef %chunk_mutex, i32 noundef 0) #23
  %alloc_state = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 30
  %call.i364 = call i32 @clear_extent_bit(ptr noundef %alloc_state, i64 noundef %and, i64 noundef -1, i32 noundef 33, i32 noundef 0, i32 noundef 0, ptr noundef null) #23
  call fastcc void @btrfs_device_set_disk_total_bytes(ptr noundef %device, i64 noundef %and)
  %post_commit_list = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 2
  %69 = ptrtoint ptr %post_commit_list to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile ptr, ptr %post_commit_list, align 4
  %cmp.i365.not = icmp eq ptr %70, %post_commit_list
  br i1 %cmp.i365.not, label %if.then115, label %if.end110.if.end117_crit_edge

if.end110.if.end117_crit_edge:                    ; preds = %if.end110
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end117

if.then115:                                       ; preds = %if.end110
  %transaction = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call106, i32 0, i32 4
  %71 = ptrtoint ptr %transaction to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %transaction, align 4
  %dev_update_list = getelementptr inbounds %struct.btrfs_transaction, ptr %72, i32 0, i32 13
  %prev.i = getelementptr inbounds %struct.btrfs_transaction, ptr %72, i32 0, i32 13, i32 1
  %73 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %prev.i, align 4
  %call.i.i366 = call zeroext i1 @__list_add_valid(ptr noundef %post_commit_list, ptr noundef %74, ptr noundef %dev_update_list) #23
  br i1 %call.i.i366, label %if.end.i.i, label %if.then115.if.end117_crit_edge

if.then115.if.end117_crit_edge:                   ; preds = %if.then115
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end117

if.end.i.i:                                       ; preds = %if.then115
  call void @__sanitizer_cov_trace_pc() #25
  %75 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %post_commit_list, ptr %prev.i, align 4
  %76 = ptrtoint ptr %post_commit_list to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr %dev_update_list, ptr %post_commit_list, align 4
  %prev3.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 2, i32 1
  %77 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr %74, ptr %prev3.i.i, align 4
  %78 = ptrtoint ptr %74 to i32
  call void @__asan_store4_noabort(i32 %78)
  store volatile ptr %post_commit_list, ptr %74, align 4
  br label %if.end117

if.end117:                                        ; preds = %if.end.i.i, %if.then115.if.end117_crit_edge, %if.end110.if.end117_crit_edge
  call void @__sanitizer_cov_trace_cmp8(i64 %19, i64 %and9)
  %cmp118 = icmp ult i64 %19, %and9
  br i1 %cmp118, label %do.end131, label %if.end117.if.end137_crit_edge, !prof !424

if.end117.if.end137_crit_edge:                    ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end137

do.end131:                                        ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 4982, i32 noundef 9, ptr noundef null) #23
  br label %if.end137

if.end137:                                        ; preds = %do.end131, %if.end117.if.end137_crit_edge
  %sub144 = sub i64 %19, %and9
  %79 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %sectorsize, align 4
  %sub146 = add i32 %80, -1
  %conv147 = zext i32 %sub146 to i64
  %neg148 = xor i64 %conv147, -1
  %and149 = and i64 %sub144, %neg148
  %81 = call i64 @llvm.bswap.i64(i64 %and149) #23
  %82 = ptrtoint ptr %total_bytes.i to i32
  call void @__asan_storeN_noabort(i32 %82, i32 8)
  store i64 %81, ptr %total_bytes.i, align 1
  call void @mutex_unlock(ptr noundef %chunk_mutex) #23
  call void @btrfs_reserve_chunk_metadata(ptr noundef %call106, i1 noundef zeroext false) #23
  %call151 = call fastcc i32 @btrfs_update_device(ptr noundef %call106, ptr noundef %device)
  call void @btrfs_trans_release_chunk_metadata(ptr noundef %call106) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call151)
  %cmp152 = icmp slt i32 %call151, 0
  br i1 %cmp152, label %do.body155, label %if.else213

do.body155:                                       ; preds = %if.end137
  %fs_info156 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call106, i32 0, i32 16
  %83 = ptrtoint ptr %fs_info156 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %fs_info156, align 4
  %fs_state = getelementptr inbounds %struct.btrfs_fs_info, ptr %84, i32 0, i32 149
  %call157 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call157)
  %tobool158.not = icmp eq i32 %call157, 0
  br i1 %tobool158.not, label %if.then159, label %do.body155.if.end209_crit_edge

do.body155.if.end209_crit_edge:                   ; preds = %do.body155
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end209

if.then159:                                       ; preds = %do.body155
  %85 = zext i32 %call151 to i64
  call void @__sanitizer_cov_trace_switch(i64 %85, ptr @__sancov_gen_cov_switch_values.184)
  switch i32 %call151, label %do.end178 [
    i32 -5, label %if.then159.do.body193_crit_edge
    i32 -30, label %if.then159.do.body193_crit_edge577
  ]

if.then159.do.body193_crit_edge577:               ; preds = %if.then159
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body193

if.then159.do.body193_crit_edge:                  ; preds = %if.then159
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body193

do.end178:                                        ; preds = %if.then159
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 4992, i32 noundef 9, ptr noundef nonnull @.str.18, i32 noundef %call151) #23
  br label %if.end209

do.body193:                                       ; preds = %if.then159.do.body193_crit_edge, %if.then159.do.body193_crit_edge577
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_shrink_device.__UNIQUE_ID_ddebug973, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_shrink_device, %if.then203)) #23
          to label %if.end209 [label %if.then203], !srcloc !431

if.then203:                                       ; preds = %do.body193
  call void @__sanitizer_cov_trace_pc() #25
  %86 = ptrtoint ptr %fs_info156 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %fs_info156, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %87, ptr noundef nonnull @.str.22, i32 noundef %call151) #28
  br label %if.end209

if.end209:                                        ; preds = %if.then203, %do.body193, %do.end178, %do.body155.if.end209_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %call106, ptr noundef nonnull @.str.47, i32 noundef 4992, i32 noundef %call151) #28
  %call212 = call i32 @btrfs_end_transaction(ptr noundef %call106) #23
  br label %done.thread

if.else213:                                       ; preds = %if.end137
  call void @__sanitizer_cov_trace_pc() #25
  %call214 = call i32 @btrfs_commit_transaction(ptr noundef %call106) #23
  br label %done

done.thread:                                      ; preds = %if.end209, %if.else98.done.thread_crit_edge, %if.then88, %if.then75, %if.then45.done.thread_crit_edge, %if.then38, %if.then27.done.thread_crit_edge
  %ret.0.ph = phi i32 [ -28, %if.else98.done.thread_crit_edge ], [ -26, %if.then88 ], [ %call72, %if.then75 ], [ %call151, %if.end209 ], [ %call36, %if.then38 ], [ %call29, %if.then27.done.thread_crit_edge ], [ %call43, %if.then45.done.thread_crit_edge ]
  call void @btrfs_free_path(ptr noundef nonnull %call11) #23
  br label %if.then217

done:                                             ; preds = %if.else213, %if.then108, %if.end77.done_crit_edge
  %ret.0 = phi i32 [ %68, %if.then108 ], [ %call214, %if.else213 ], [ %call78, %if.end77.done_crit_edge ]
  call void @btrfs_free_path(ptr noundef nonnull %call11) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool216.not = icmp eq i32 %ret.0, 0
  br i1 %tobool216.not, label %done.cleanup_crit_edge, label %done.if.then217_crit_edge

done.if.then217_crit_edge:                        ; preds = %done
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then217

done.cleanup_crit_edge:                           ; preds = %done
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then217:                                       ; preds = %done.if.then217_crit_edge, %done.thread
  %ret.0371 = phi i32 [ %ret.0.ph, %done.thread ], [ %ret.0, %done.if.then217_crit_edge ]
  call void @mutex_lock_nested(ptr noundef %chunk_mutex, i32 noundef 0) #23
  call fastcc void @btrfs_device_set_total_bytes(ptr noundef %device, i64 noundef %16)
  %88 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %dev_state, align 4
  %and1.i358 = and i32 %89, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i358)
  %tobool221.not = icmp eq i32 %and1.i358, 0
  br i1 %tobool221.not, label %if.then217.if.end226_crit_edge, label %if.then222

if.then217.if.end226_crit_edge:                   ; preds = %if.then217
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end226

if.then222:                                       ; preds = %if.then217
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices223 = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 3
  %90 = ptrtoint ptr %fs_devices223 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %fs_devices223, align 8
  %total_rw_bytes224 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %91, i32 0, i32 8
  %92 = ptrtoint ptr %total_rw_bytes224 to i32
  call void @__asan_load8_noabort(i32 %92)
  %93 = load i64, ptr %total_rw_bytes224, align 8
  %add225 = add i64 %93, %and9
  store i64 %add225, ptr %total_rw_bytes224, align 8
  br label %if.end226

if.end226:                                        ; preds = %if.then222, %if.then217.if.end226_crit_edge
  %free_chunk_space227 = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 17
  %call.i.i359 = call zeroext i1 @__kasan_check_write(ptr noundef %free_chunk_space227, i32 noundef 8) #23
  call void @generic_atomic64_add(i64 noundef %and9, ptr noundef %free_chunk_space227) #23
  call void @mutex_unlock(ptr noundef %chunk_mutex) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end226, %done.cleanup_crit_edge, %if.then17, %if.end.cleanup_crit_edge, %btrfs_device_get_total_bytes.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %27, %if.then17 ], [ -22, %btrfs_device_get_total_bytes.exit.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ], [ %ret.0371, %if.end226 ], [ 0, %done.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %start) #23
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_rm_dev_item(ptr nocapture noundef readonly %device) unnamed_addr #4 align 64 {
entry:
  %key = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 4
  %0 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info, align 4
  %chunk_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %chunk_root to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %chunk_root, align 8
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #23
  %4 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %5 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %call = tail call ptr @btrfs_alloc_path() #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call ptr @btrfs_start_transaction(ptr noundef %3, i32 noundef 0) #23
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @btrfs_free_path(ptr noundef nonnull %call) #23
  %6 = ptrtoint ptr %call1 to i32
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %7 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %7)
  store i64 1, ptr %key, align 8
  %8 = ptrtoint ptr %4 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 -40, ptr %4, align 8
  %devid = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 13
  %9 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %devid, align 8
  %11 = ptrtoint ptr %5 to i32
  call void @__asan_storeN_noabort(i32 %11, i32 8)
  store i64 %10, ptr %5, align 1
  tail call void @btrfs_reserve_chunk_metadata(ptr noundef %call1, i1 noundef zeroext false) #23
  %call6 = call i32 @btrfs_search_slot(ptr noundef %call1, ptr noundef %3, ptr noundef nonnull %key, ptr noundef nonnull %call, i32 noundef -1, i32 noundef 1) #23
  call void @btrfs_trans_release_chunk_metadata(ptr noundef %call1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.end56, label %if.then8

if.then8:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %cmp = icmp sgt i32 %call6, 0
  %spec.select = select i1 %cmp, i32 -2, i32 %call6
  %fs_info11 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call1, i32 0, i32 16
  %12 = ptrtoint ptr %fs_info11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %fs_info11, align 4
  %fs_state = getelementptr inbounds %struct.btrfs_fs_info, ptr %13, i32 0, i32 149
  %call12 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.then14, label %if.then8.if.end52_crit_edge

if.then8.if.end52_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end52

if.then14:                                        ; preds = %if.then8
  %14 = zext i32 %spec.select to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.185)
  switch i32 %spec.select, label %do.end [
    i32 -5, label %if.then14.do.body36_crit_edge
    i32 -30, label %if.then14.do.body36_crit_edge172
  ]

if.then14.do.body36_crit_edge172:                 ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body36

if.then14.do.body36_crit_edge:                    ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body36

do.end:                                           ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 1944, i32 noundef 9, ptr noundef nonnull @.str.18, i32 noundef %spec.select) #23
  br label %if.end52

do.body36:                                        ; preds = %if.then14.do.body36_crit_edge, %if.then14.do.body36_crit_edge172
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_rm_dev_item.__UNIQUE_ID_ddebug952, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_rm_dev_item, %if.then46)) #23
          to label %if.end52 [label %if.then46], !srcloc !431

if.then46:                                        ; preds = %do.body36
  call void @__sanitizer_cov_trace_pc() #25
  %15 = ptrtoint ptr %fs_info11 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %fs_info11, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %16, ptr noundef nonnull @.str.22, i32 noundef %spec.select) #28
  br label %if.end52

if.end52:                                         ; preds = %if.then46, %do.body36, %do.end, %if.then8.if.end52_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %call1, ptr noundef nonnull @.str.99, i32 noundef 1944, i32 noundef %spec.select) #28
  br label %out.thread

if.end56:                                         ; preds = %if.end5
  %slots.i = getelementptr inbounds %struct.btrfs_path, ptr %call, i32 0, i32 1
  %17 = ptrtoint ptr %slots.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %slots.i, align 4
  %call.i = call i32 @btrfs_del_items(ptr noundef %call1, ptr noundef %3, ptr noundef nonnull %call, i32 noundef %18, i32 noundef 1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool58.not = icmp eq i32 %call.i, 0
  br i1 %tobool58.not, label %if.then121, label %do.body60

do.body60:                                        ; preds = %if.end56
  %fs_info61 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call1, i32 0, i32 16
  %19 = ptrtoint ptr %fs_info61 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %fs_info61, align 4
  %fs_state62 = getelementptr inbounds %struct.btrfs_fs_info, ptr %20, i32 0, i32 149
  %call63 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state62) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call63)
  %tobool64.not = icmp eq i32 %call63, 0
  br i1 %tobool64.not, label %if.then65, label %do.body60.if.end115_crit_edge

do.body60.if.end115_crit_edge:                    ; preds = %do.body60
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end115

if.then65:                                        ; preds = %do.body60
  %21 = zext i32 %call.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %21, ptr @__sancov_gen_cov_switch_values.186)
  switch i32 %call.i, label %do.end82 [
    i32 -5, label %if.then65.do.body97_crit_edge
    i32 -30, label %if.then65.do.body97_crit_edge173
  ]

if.then65.do.body97_crit_edge173:                 ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body97

if.then65.do.body97_crit_edge:                    ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body97

do.end82:                                         ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 1951, i32 noundef 9, ptr noundef nonnull @.str.18, i32 noundef %call.i) #23
  br label %if.end115

do.body97:                                        ; preds = %if.then65.do.body97_crit_edge, %if.then65.do.body97_crit_edge173
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_rm_dev_item.__UNIQUE_ID_ddebug953, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_rm_dev_item, %if.then109)) #23
          to label %if.end115 [label %if.then109], !srcloc !431

if.then109:                                       ; preds = %do.body97
  call void @__sanitizer_cov_trace_pc() #25
  %22 = ptrtoint ptr %fs_info61 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %fs_info61, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %23, ptr noundef nonnull @.str.22, i32 noundef %call.i) #28
  br label %if.end115

if.end115:                                        ; preds = %if.then109, %do.body97, %do.end82, %do.body60.if.end115_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %call1, ptr noundef nonnull @.str.99, i32 noundef 1951, i32 noundef %call.i) #28
  br label %out.thread

out.thread:                                       ; preds = %if.end115, %if.end52
  %ret.1.ph = phi i32 [ %call.i, %if.end115 ], [ %spec.select, %if.end52 ]
  %call55 = call i32 @btrfs_end_transaction(ptr noundef %call1) #23
  call void @btrfs_free_path(ptr noundef nonnull %call) #23
  br label %cleanup

if.then121:                                       ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #25
  call void @btrfs_free_path(ptr noundef nonnull %call) #23
  %call122 = call i32 @btrfs_commit_transaction(ptr noundef %call1) #23
  br label %cleanup

cleanup:                                          ; preds = %if.then121, %out.thread, %if.then3, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %6, %if.then3 ], [ -12, %entry.cleanup_crit_edge ], [ %call122, %if.then121 ], [ %ret.1.ph, %out.thread ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #23
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_scrub_cancel_dev(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_sysfs_remove_device(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sync_blockdev(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @invalidate_bdev(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu() local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_rm_dev_replace_remove_srcdev(ptr noundef %srcdev) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.rhs:                                         ; preds = %entry
  %fs_info = getelementptr inbounds %struct.btrfs_device, ptr %srcdev, i32 0, i32 4
  %1 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %fs_info, align 4
  %fs_devices1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %2, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices1, align 8
  %dep_map = getelementptr inbounds %struct.btrfs_fs_devices, ptr %4, i32 0, i32 12, i32 5
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !424

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 2263, i32 noundef 9, ptr noundef null) #23
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %fs_devices25 = getelementptr inbounds %struct.btrfs_device, ptr %srcdev, i32 0, i32 3
  %5 = ptrtoint ptr %fs_devices25 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices25, align 8
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %srcdev) #23
  br i1 %call.i.i, label %if.end.i.i, label %if.end.list_del_rcu.exit_crit_edge

if.end.list_del_rcu.exit_crit_edge:               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %srcdev, i32 0, i32 1
  %7 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i.i, align 4
  %9 = ptrtoint ptr %srcdev to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %srcdev, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev1.i.i.i, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %10, ptr %8, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %if.end.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.list_head, ptr %srcdev, i32 0, i32 1
  %13 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %dev_alloc_list = getelementptr inbounds %struct.btrfs_device, ptr %srcdev, i32 0, i32 1
  %call.i.i52 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %dev_alloc_list) #23
  br i1 %call.i.i52, label %if.end.i.i55, label %list_del_rcu.exit.list_del.exit_crit_edge

list_del_rcu.exit.list_del.exit_crit_edge:        ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del.exit

if.end.i.i55:                                     ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i53 = getelementptr inbounds %struct.btrfs_device, ptr %srcdev, i32 0, i32 1, i32 1
  %14 = ptrtoint ptr %prev.i.i53 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %prev.i.i53, align 4
  %16 = ptrtoint ptr %dev_alloc_list to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %dev_alloc_list, align 4
  %prev1.i.i.i54 = getelementptr inbounds %struct.list_head, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %prev1.i.i.i54 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %15, ptr %prev1.i.i.i54, align 4
  %19 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %17, ptr %15, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i55, %list_del_rcu.exit.list_del.exit_crit_edge
  %20 = ptrtoint ptr %dev_alloc_list to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr inttoptr (i32 256 to ptr), ptr %dev_alloc_list, align 4
  %prev.i56 = getelementptr inbounds %struct.btrfs_device, ptr %srcdev, i32 0, i32 1, i32 1
  %21 = ptrtoint ptr %prev.i56 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i56, align 4
  %num_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %6, i32 0, i32 4
  %22 = ptrtoint ptr %num_devices to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %num_devices, align 8
  %dec = add i64 %23, -1
  store i64 %dec, ptr %num_devices, align 8
  %dev_state = getelementptr inbounds %struct.btrfs_device, ptr %srcdev, i32 0, i32 10
  %24 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %dev_state, align 4
  %26 = and i32 %25, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool27.not = icmp eq i32 %26, 0
  br i1 %tobool27.not, label %list_del.exit.if.end30_crit_edge, label %if.then28

list_del.exit.if.end30_crit_edge:                 ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end30

if.then28:                                        ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #25
  %missing_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %6, i32 0, i32 7
  %27 = ptrtoint ptr %missing_devices to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %missing_devices, align 8
  %dec29 = add i64 %28, -1
  store i64 %dec29, ptr %missing_devices, align 8
  br label %if.end30

if.end30:                                         ; preds = %if.then28, %list_del.exit.if.end30_crit_edge
  %29 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %dev_state, align 4
  %and1.i51 = and i32 %30, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i51)
  %tobool33.not = icmp eq i32 %and1.i51, 0
  br i1 %tobool33.not, label %if.end30.if.end36_crit_edge, label %if.then34

if.end30.if.end36_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end36

if.then34:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #25
  %rw_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %6, i32 0, i32 6
  %31 = ptrtoint ptr %rw_devices to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %rw_devices, align 8
  %dec35 = add i64 %32, -1
  store i64 %dec35, ptr %rw_devices, align 8
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %if.end30.if.end36_crit_edge
  %bdev = getelementptr inbounds %struct.btrfs_device, ptr %srcdev, i32 0, i32 7
  %33 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %bdev, align 8
  %tobool37.not = icmp eq ptr %34, null
  br i1 %tobool37.not, label %if.end36.if.end40_crit_edge, label %if.then38

if.end36.if.end40_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end40

if.then38:                                        ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #25
  %open_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %6, i32 0, i32 5
  %35 = ptrtoint ptr %open_devices to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %open_devices, align 8
  %dec39 = add i64 %36, -1
  store i64 %dec39, ptr %open_devices, align 8
  br label %if.end40

if.end40:                                         ; preds = %if.then38, %if.end36.if.end40_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_rm_dev_replace_free_srcdev(ptr noundef %srcdev) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_devices1 = getelementptr inbounds %struct.btrfs_device, ptr %srcdev, i32 0, i32 3
  %0 = ptrtoint ptr %fs_devices1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_devices1, align 8
  tail call void @mutex_lock_nested(ptr noundef nonnull @uuid_mutex, i32 noundef 0) #23
  %bdev.i = getelementptr inbounds %struct.btrfs_device, ptr %srcdev, i32 0, i32 7
  %2 = ptrtoint ptr %bdev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bdev.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.btrfs_close_bdev.exit_crit_edge, label %if.end.i

entry.btrfs_close_bdev.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_close_bdev.exit

if.end.i:                                         ; preds = %entry
  %dev_state.i = getelementptr inbounds %struct.btrfs_device, ptr %srcdev, i32 0, i32 10
  %4 = ptrtoint ptr %dev_state.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %dev_state.i, align 4
  %and1.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool1.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool1.not.i, label %if.end.i.if.end6.i_crit_edge, label %if.then2.i

if.end.i.if.end6.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end6.i

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  %call4.i = tail call i32 @sync_blockdev(ptr noundef nonnull %3) #23
  %6 = ptrtoint ptr %bdev.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %bdev.i, align 8
  tail call void @invalidate_bdev(ptr noundef %7) #23
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.then2.i, %if.end.i.if.end6.i_crit_edge
  %8 = ptrtoint ptr %bdev.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %bdev.i, align 8
  %mode.i = getelementptr inbounds %struct.btrfs_device, ptr %srcdev, i32 0, i32 9
  %10 = ptrtoint ptr %mode.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %mode.i, align 8
  tail call void @blkdev_put(ptr noundef %9, i32 noundef %11) #23
  br label %btrfs_close_bdev.exit

btrfs_close_bdev.exit:                            ; preds = %if.end6.i, %entry.btrfs_close_bdev.exit_crit_edge
  tail call void @synchronize_rcu() #23
  tail call void @btrfs_free_device(ptr noundef %srcdev)
  %num_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 4
  %12 = ptrtoint ptr %num_devices to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %num_devices, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %13)
  %tobool.not = icmp eq i64 %13, 0
  br i1 %tobool.not, label %if.then, label %btrfs_close_bdev.exit.if.end_crit_edge

btrfs_close_bdev.exit.if.end_crit_edge:           ; preds = %btrfs_close_bdev.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %btrfs_close_bdev.exit
  %seeding = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 16
  %14 = ptrtoint ptr %seeding to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %seeding, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool2.not = icmp eq i8 %15, 0
  br i1 %tobool2.not, label %cond.false, label %cond.end, !prof !424

cond.false:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.15, i32 noundef 2304) #32
  unreachable

cond.end:                                         ; preds = %if.then
  %seed_list = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 15
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %seed_list) #23
  br i1 %call.i.i, label %if.end.i.i, label %cond.end.list_del_init.exit_crit_edge

cond.end.list_del_init.exit_crit_edge:            ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 15, i32 1
  %16 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %prev.i.i, align 4
  %18 = ptrtoint ptr %seed_list to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %seed_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %17, ptr %prev1.i.i.i, align 4
  %21 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %19, ptr %17, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %cond.end.list_del_init.exit_crit_edge
  %22 = ptrtoint ptr %seed_list to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %seed_list, ptr %seed_list, align 4
  %prev.i3.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 15, i32 1
  %23 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %seed_list, ptr %prev.i3.i, align 4
  tail call fastcc void @close_fs_devices(ptr noundef %1)
  %opened.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 17
  %24 = ptrtoint ptr %opened.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %opened.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.not.i11 = icmp eq i32 %25, 0
  br i1 %tobool.not.i11, label %list_del_init.exit.if.end.i12_crit_edge, label %do.end.i, !prof !423

list_del_init.exit.if.end.i12_crit_edge:          ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i12

do.end.i:                                         ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 416, i32 noundef 9, ptr noundef null) #23
  br label %if.end.i12

if.end.i12:                                       ; preds = %do.end.i, %list_del_init.exit.if.end.i12_crit_edge
  %devices.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 13
  %26 = ptrtoint ptr %devices.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile ptr, ptr %devices.i, align 4
  %cmp.i.not30.i = icmp eq ptr %27, %devices.i
  br i1 %cmp.i.not30.i, label %if.end.i12.free_fs_devices.exit_crit_edge, label %if.end.i12.while.body.i_crit_edge

if.end.i12.while.body.i_crit_edge:                ; preds = %if.end.i12
  br label %while.body.i

if.end.i12.free_fs_devices.exit_crit_edge:        ; preds = %if.end.i12
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_fs_devices.exit

while.body.i:                                     ; preds = %list_del.exit.i.while.body.i_crit_edge, %if.end.i12.while.body.i_crit_edge
  %28 = phi ptr [ %38, %list_del.exit.i.while.body.i_crit_edge ], [ %27, %if.end.i12.while.body.i_crit_edge ]
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %28) #23
  br i1 %call.i.i.i, label %if.end.i.i.i, label %while.body.i.list_del.exit.i_crit_edge

while.body.i.list_del.exit.i_crit_edge:           ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %prev.i.i.i, align 4
  %31 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %28, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %30, ptr %prev1.i.i.i.i, align 4
  %34 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %32, ptr %30, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %while.body.i.list_del.exit.i_crit_edge
  %35 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr inttoptr (i32 256 to ptr), ptr %28, align 4
  %prev.i.i13 = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 1
  %36 = ptrtoint ptr %prev.i.i13 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i13, align 4
  tail call void @btrfs_free_device(ptr noundef %28) #23
  %37 = ptrtoint ptr %devices.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile ptr, ptr %devices.i, align 4
  %cmp.i.not.i = icmp eq ptr %38, %devices.i
  br i1 %cmp.i.not.i, label %list_del.exit.i.free_fs_devices.exit_crit_edge, label %list_del.exit.i.while.body.i_crit_edge

list_del.exit.i.while.body.i_crit_edge:           ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body.i

list_del.exit.i.free_fs_devices.exit_crit_edge:   ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_fs_devices.exit

free_fs_devices.exit:                             ; preds = %list_del.exit.i.free_fs_devices.exit_crit_edge, %if.end.i12.free_fs_devices.exit_crit_edge
  tail call void @kfree(ptr noundef %1) #23
  br label %if.end

if.end:                                           ; preds = %free_fs_devices.exit, %btrfs_close_bdev.exit.if.end_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @uuid_mutex) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_destroy_dev_replace_tgtdev(ptr noundef %tgtdev) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info = getelementptr inbounds %struct.btrfs_device, ptr %tgtdev, i32 0, i32 4
  %0 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info, align 4
  %fs_devices1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 100
  %2 = ptrtoint ptr %fs_devices1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %fs_devices1, align 8
  %device_list_mutex = getelementptr inbounds %struct.btrfs_fs_devices, ptr %3, i32 0, i32 12
  tail call void @mutex_lock_nested(ptr noundef %device_list_mutex, i32 noundef 0) #23
  tail call void @btrfs_sysfs_remove_device(ptr noundef %tgtdev) #23
  %bdev = getelementptr inbounds %struct.btrfs_device, ptr %tgtdev, i32 0, i32 7
  %4 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bdev, align 8
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %open_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %3, i32 0, i32 5
  %6 = ptrtoint ptr %open_devices to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %open_devices, align 8
  %dec = add i64 %7, -1
  store i64 %dec, ptr %open_devices, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %num_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %3, i32 0, i32 4
  %8 = ptrtoint ptr %num_devices to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %num_devices, align 8
  %dec2 = add i64 %9, -1
  store i64 %dec2, ptr %num_devices, align 8
  tail call void @btrfs_assign_next_active_device(ptr noundef %tgtdev, ptr noundef null) #34
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %tgtdev) #23
  br i1 %call.i.i, label %if.end.i.i, label %if.end.list_del_rcu.exit_crit_edge

if.end.list_del_rcu.exit_crit_edge:               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %tgtdev, i32 0, i32 1
  %10 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %prev.i.i, align 4
  %12 = ptrtoint ptr %tgtdev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %tgtdev, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %11, ptr %prev1.i.i.i, align 4
  %15 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %13, ptr %11, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %if.end.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.list_head, ptr %tgtdev, i32 0, i32 1
  %16 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @mutex_unlock(ptr noundef %device_list_mutex) #23
  %17 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %fs_info, align 4
  %19 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %bdev, align 8
  %name = getelementptr inbounds %struct.btrfs_device, ptr %tgtdev, i32 0, i32 5
  %21 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %name, align 8
  %str = getelementptr inbounds %struct.rcu_string, ptr %22, i32 0, i32 1
  tail call void @btrfs_scratch_superblocks(ptr noundef %18, ptr noundef %20, ptr noundef %str)
  %23 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %bdev, align 8
  %tobool.not.i = icmp eq ptr %24, null
  br i1 %tobool.not.i, label %list_del_rcu.exit.btrfs_close_bdev.exit_crit_edge, label %if.end.i

list_del_rcu.exit.btrfs_close_bdev.exit_crit_edge: ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_close_bdev.exit

if.end.i:                                         ; preds = %list_del_rcu.exit
  %dev_state.i = getelementptr inbounds %struct.btrfs_device, ptr %tgtdev, i32 0, i32 10
  %25 = ptrtoint ptr %dev_state.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %dev_state.i, align 4
  %and1.i.i = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool1.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool1.not.i, label %if.end.i.if.end6.i_crit_edge, label %if.then2.i

if.end.i.if.end6.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end6.i

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  %call4.i = tail call i32 @sync_blockdev(ptr noundef nonnull %24) #23
  %27 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %bdev, align 8
  tail call void @invalidate_bdev(ptr noundef %28) #23
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.then2.i, %if.end.i.if.end6.i_crit_edge
  %29 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %bdev, align 8
  %mode.i = getelementptr inbounds %struct.btrfs_device, ptr %tgtdev, i32 0, i32 9
  %31 = ptrtoint ptr %mode.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %mode.i, align 8
  tail call void @blkdev_put(ptr noundef %30, i32 noundef %32) #23
  br label %btrfs_close_bdev.exit

btrfs_close_bdev.exit:                            ; preds = %if.end6.i, %list_del_rcu.exit.btrfs_close_bdev.exit_crit_edge
  tail call void @synchronize_rcu() #23
  tail call void @btrfs_free_device(ptr noundef %tgtdev)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_get_dev_args_from_path(ptr nocapture noundef readonly %fs_info, ptr nocapture noundef %args, ptr noundef %path) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %path, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %0 = ptrtoint ptr %path to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %path, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool1.not = icmp eq i8 %1, 0
  br i1 %tobool1.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %call = tail call i32 @strcmp(ptr noundef nonnull %path, ptr noundef nonnull dereferenceable(8) @.str.16) #31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool2.not = icmp eq i32 %call, 0
  br i1 %tobool2.not, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %missing = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 3
  %2 = ptrtoint ptr %missing to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 1, ptr %missing, align 8
  br label %cleanup

if.end4:                                          ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %3 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %3, i32 noundef 3520, i32 noundef 16) #29
  %uuid = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 1
  %4 = ptrtoint ptr %uuid to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call7.i.i, ptr %uuid, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %5 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i46 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %5, i32 noundef 3520, i32 noundef 16) #29
  %fsid = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 2
  %6 = ptrtoint ptr %fsid to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call7.i.i46, ptr %fsid, align 4
  %7 = ptrtoint ptr %uuid to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %uuid, align 8
  %tobool8.not = icmp eq ptr %8, null
  %tobool11.not = icmp eq ptr %call7.i.i46, null
  %or.cond = select i1 %tobool8.not, i1 true, i1 %tobool11.not
  br i1 %or.cond, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @kfree(ptr noundef %8) #23
  %9 = ptrtoint ptr %fsid to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %fsid, align 4
  tail call void @kfree(ptr noundef %10) #23
  %11 = ptrtoint ptr %uuid to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %uuid, align 8
  %12 = ptrtoint ptr %fsid to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %fsid, align 4
  br label %cleanup

if.end13:                                         ; preds = %if.end4
  %bdev_holder = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 122
  %13 = ptrtoint ptr %bdev_holder to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %bdev_holder, align 4
  %call.i = tail call ptr @blkdev_get_by_path(ptr noundef nonnull %path, i32 noundef 1, ptr noundef %14) #23
  %cmp.i.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.end13.btrfs_get_bdev_and_sb.exit_crit_edge, label %if.end.i

if.end13.btrfs_get_bdev_and_sb.exit_crit_edge:    ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_get_bdev_and_sb.exit

if.end.i:                                         ; preds = %if.end13
  %call6.i = tail call i32 @set_blocksize(ptr noundef %call.i, i32 noundef 4096) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %if.end9.i, label %btrfs_get_bdev_and_sb.exit.thread62

btrfs_get_bdev_and_sb.exit.thread62:              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @blkdev_put(ptr noundef %call.i, i32 noundef 1) #23
  br label %cleanup

if.end9.i:                                        ; preds = %if.end.i
  tail call void @invalidate_bdev(ptr noundef %call.i) #23
  %call10.i = tail call ptr @btrfs_read_dev_super(ptr noundef %call.i) #23
  %cmp.i29.i = icmp ugt ptr %call10.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i29.i, label %if.then12.i, label %if.end17

if.then12.i:                                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @blkdev_put(ptr noundef %call.i, i32 noundef 1) #23
  br label %btrfs_get_bdev_and_sb.exit

btrfs_get_bdev_and_sb.exit:                       ; preds = %if.then12.i, %if.end13.btrfs_get_bdev_and_sb.exit_crit_edge
  %retval.0.i.in = phi ptr [ %call10.i, %if.then12.i ], [ %call.i, %if.end13.btrfs_get_bdev_and_sb.exit_crit_edge ]
  %retval.0.i = ptrtoint ptr %retval.0.i.in to i32
  br label %cleanup

if.end17:                                         ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #25
  %dev_item = getelementptr inbounds %struct.btrfs_super_block, ptr %call10.i, i32 0, i32 27
  %15 = ptrtoint ptr %dev_item to i32
  call void @__asan_loadN_noabort(i32 %15, i32 8)
  %16 = load i64, ptr %dev_item, align 1
  %17 = tail call i64 @llvm.bswap.i64(i64 %16) #23
  %18 = ptrtoint ptr %args to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %17, ptr %args, align 8
  %19 = ptrtoint ptr %uuid to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %uuid, align 8
  %uuid21 = getelementptr inbounds %struct.btrfs_super_block, ptr %call10.i, i32 0, i32 27, i32 12
  %21 = call ptr @memcpy(ptr %20, ptr %uuid21, i32 16)
  %super_copy.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 43
  %22 = ptrtoint ptr %super_copy.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %super_copy.i, align 8
  %incompat_flags.i.i = getelementptr inbounds %struct.btrfs_super_block, ptr %23, i32 0, i32 22
  %24 = ptrtoint ptr %incompat_flags.i.i to i32
  call void @__asan_loadN_noabort(i32 %24, i32 8)
  %25 = load i64, ptr %incompat_flags.i.i, align 1
  %26 = and i64 %25, 1125899906842624
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %26)
  %tobool.i.not = icmp eq i64 %26, 0
  %27 = ptrtoint ptr %fsid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fsid, align 4
  %fsid27 = getelementptr inbounds %struct.btrfs_super_block, ptr %call10.i, i32 0, i32 1
  %metadata_uuid = getelementptr inbounds %struct.btrfs_super_block, ptr %call10.i, i32 0, i32 31
  %fsid27.sink = select i1 %tobool.i.not, ptr %fsid27, ptr %metadata_uuid
  %29 = call ptr @memcpy(ptr %28, ptr %fsid27.sink, i32 16)
  tail call void @btrfs_release_disk_super(ptr noundef %call10.i)
  tail call void @blkdev_put(ptr noundef %call.i, i32 noundef 1) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %btrfs_get_bdev_and_sb.exit, %btrfs_get_bdev_and_sb.exit.thread62, %if.then12, %if.then3, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end17 ], [ -12, %if.then12 ], [ 0, %if.then3 ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ %retval.0.i, %btrfs_get_bdev_and_sb.exit ], [ %call6.i, %btrfs_get_bdev_and_sb.exit.thread62 ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_put_dev_args_from_path(ptr nocapture noundef %args) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %uuid = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 1
  %0 = ptrtoint ptr %uuid to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %uuid, align 8
  tail call void @kfree(ptr noundef %1) #23
  %fsid = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 2
  %2 = ptrtoint ptr %fsid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %fsid, align 4
  tail call void @kfree(ptr noundef %3) #23
  %4 = ptrtoint ptr %uuid to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %uuid, align 8
  %5 = ptrtoint ptr %fsid to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %fsid, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_get_bdev_and_sb(ptr noundef %device_path, i32 noundef %flags, ptr noundef %holder, i32 noundef %flush, ptr nocapture noundef %bdev, ptr nocapture noundef %disk_super) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @blkdev_get_by_path(ptr noundef %device_path, i32 noundef %flags, ptr noundef %holder) #23
  %0 = ptrtoint ptr %bdev to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call, ptr %bdev, align 4
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %1 = ptrtoint ptr %call to i32
  br label %error

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %flush)
  %tobool.not = icmp eq i32 %flush, 0
  br i1 %tobool.not, label %if.end.if.end5_crit_edge, label %if.then3

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end5

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %call4 = tail call i32 @sync_blockdev(ptr noundef %call) #23
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %if.end.if.end5_crit_edge
  %2 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bdev, align 4
  %call6 = tail call i32 @set_blocksize(ptr noundef %3, i32 noundef 4096) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  %4 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bdev, align 4
  br i1 %tobool7.not, label %if.end9, label %if.then8

if.then8:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @blkdev_put(ptr noundef %5, i32 noundef %flags) #23
  br label %error

if.end9:                                          ; preds = %if.end5
  tail call void @invalidate_bdev(ptr noundef %5) #23
  %6 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %bdev, align 4
  %call10 = tail call ptr @btrfs_read_dev_super(ptr noundef %7) #23
  %8 = ptrtoint ptr %disk_super to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call10, ptr %disk_super, align 4
  %cmp.i29 = icmp ugt ptr %call10, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i29, label %if.then12, label %if.end9.cleanup_crit_edge

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then12:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  %9 = ptrtoint ptr %call10 to i32
  %10 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %bdev, align 4
  tail call void @blkdev_put(ptr noundef %11, i32 noundef %flags) #23
  br label %error

error:                                            ; preds = %if.then12, %if.then8, %if.then
  %ret.0 = phi i32 [ %1, %if.then ], [ %call6, %if.then8 ], [ %9, %if.then12 ]
  %12 = ptrtoint ptr %bdev to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %bdev, align 4
  br label %cleanup

cleanup:                                          ; preds = %error, %if.end9.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %error ], [ 0, %if.end9.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @btrfs_find_device_by_devspec(ptr nocapture noundef readonly %fs_info, i64 noundef %devid, ptr noundef %device_path) local_unnamed_addr #4 align 64 {
entry:
  %args = alloca %struct.btrfs_dev_lookup_args, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %args) #23
  %0 = call ptr @memcpy(ptr %args, ptr @__const.read_one_dev.args, i32 24)
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %devid)
  %tobool.not = icmp eq i64 %devid, 0
  br i1 %tobool.not, label %if.end5, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %1 = ptrtoint ptr %args to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 %devid, ptr %args, align 8
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %2 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %fs_devices, align 8
  %call = call ptr @btrfs_find_device(ptr noundef %3, ptr noundef nonnull %args)
  %tobool2.not = icmp eq ptr %call, null
  %spec.select = select i1 %tobool2.not, ptr inttoptr (i32 -2 to ptr), ptr %call
  br label %cleanup

if.end5:                                          ; preds = %entry
  %call6 = call i32 @btrfs_get_dev_args_from_path(ptr noundef %fs_info, ptr noundef nonnull %args, ptr noundef %device_path)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.end10, label %if.then8

if.then8:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %4 = inttoptr i32 %call6 to ptr
  br label %cleanup

if.end10:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices11 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %5 = ptrtoint ptr %fs_devices11 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_devices11, align 8
  %call12 = call ptr @btrfs_find_device(ptr noundef %6, ptr noundef nonnull %args)
  %uuid.i = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 1
  %7 = ptrtoint ptr %uuid.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %uuid.i, align 8
  tail call void @kfree(ptr noundef %8) #23
  %fsid.i = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 2
  %9 = ptrtoint ptr %fsid.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %fsid.i, align 4
  tail call void @kfree(ptr noundef %10) #23
  %tobool13.not = icmp eq ptr %call12, null
  %spec.select26 = select i1 %tobool13.not, ptr inttoptr (i32 -2 to ptr), ptr %call12
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %if.then8, %if.then
  %retval.0 = phi ptr [ %4, %if.then8 ], [ %spec.select, %if.then ], [ %spec.select26, %if.end10 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args) #23
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_init_new_device(ptr noundef %fs_info, ptr noundef %device_path) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %dev_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 4
  %0 = ptrtoint ptr %dev_root to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev_root, align 4
  %sb1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 45
  %2 = ptrtoint ptr %sb1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sb1, align 8
  %fs_devices2 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %4 = ptrtoint ptr %fs_devices2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %fs_devices2, align 8
  %s_flags.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 10
  %6 = ptrtoint ptr %s_flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %s_flags.i, align 4
  %and.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %seeding = getelementptr inbounds %struct.btrfs_fs_devices, ptr %5, i32 0, i32 16
  %8 = ptrtoint ptr %seeding to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %seeding, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not = icmp eq i8 %9, 0
  br i1 %tobool.not, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %bdev_holder = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 122
  %10 = ptrtoint ptr %bdev_holder to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %bdev_holder, align 4
  %call3 = tail call ptr @blkdev_get_by_path(ptr noundef %device_path, i32 noundef 130, ptr noundef %11) #23
  %cmp.i = icmp ugt ptr %call3, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %12 = ptrtoint ptr %call3 to i32
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %13 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 176
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %13, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %15)
  %cmp.i.not.i = icmp eq i64 %15, 0
  %bd_queue.i.i14.i = getelementptr inbounds %struct.block_device, ptr %call3, i32 0, i32 18
  %16 = ptrtoint ptr %bd_queue.i.i14.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %bd_queue.i.i14.i, align 4
  %tobool.not.i15.i = icmp eq ptr %17, null
  br i1 %cmp.i.not.i, label %if.end4.i, label %if.then.i673

if.then.i673:                                     ; preds = %if.end7
  br i1 %tobool.not.i15.i, label %if.then.i673.if.end10_crit_edge, label %bdev_is_zoned.exit.i

if.then.i673.if.end10_crit_edge:                  ; preds = %if.then.i673
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end10

bdev_is_zoned.exit.i:                             ; preds = %if.then.i673
  %zoned.i.i.i.i = getelementptr inbounds %struct.request_queue, ptr %17, i32 0, i32 37, i32 27
  %18 = ptrtoint ptr %zoned.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %zoned.i.i.i.i, align 4
  %call.off.i.i.i = add i32 %19, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call.off.i.i.i)
  %switch.i.i.i = icmp ult i32 %call.off.i.i.i, 2
  br i1 %switch.i.i.i, label %bdev_zone_sectors.exit.i, label %bdev_is_zoned.exit.i.if.end10_crit_edge

bdev_is_zoned.exit.i.if.end10_crit_edge:          ; preds = %bdev_is_zoned.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end10

bdev_zone_sectors.exit.i:                         ; preds = %bdev_is_zoned.exit.i
  %chunk_sectors.i.i.i = getelementptr inbounds %struct.request_queue, ptr %17, i32 0, i32 37, i32 5
  %20 = ptrtoint ptr %chunk_sectors.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %chunk_sectors.i.i.i, align 4
  %conv.i.i.i = zext i32 %21 to i64
  %shl.i = shl nuw nsw i64 %conv.i.i.i, 9
  call void @__sanitizer_cov_trace_cmp8(i64 %15, i64 %shl.i)
  %cmp.i674 = icmp eq i64 %15, %shl.i
  br i1 %cmp.i674, label %bdev_zone_sectors.exit.i.if.end10_crit_edge, label %bdev_zone_sectors.exit.i.error.thread_crit_edge

bdev_zone_sectors.exit.i.error.thread_crit_edge:  ; preds = %bdev_zone_sectors.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %error.thread

bdev_zone_sectors.exit.i.if.end10_crit_edge:      ; preds = %bdev_zone_sectors.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end10

if.end4.i:                                        ; preds = %if.end7
  br i1 %tobool.not.i15.i, label %if.end4.i.if.end10_crit_edge, label %btrfs_check_device_zone_type.exit

if.end4.i.if.end10_crit_edge:                     ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end10

btrfs_check_device_zone_type.exit:                ; preds = %if.end4.i
  %zoned.i.i.i = getelementptr inbounds %struct.request_queue, ptr %17, i32 0, i32 37, i32 27
  %22 = ptrtoint ptr %zoned.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %zoned.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %23)
  %phi.cmp.i.not = icmp eq i32 %23, 2
  br i1 %phi.cmp.i.not, label %btrfs_check_device_zone_type.exit.error.thread_crit_edge, label %btrfs_check_device_zone_type.exit.if.end10_crit_edge

btrfs_check_device_zone_type.exit.if.end10_crit_edge: ; preds = %btrfs_check_device_zone_type.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end10

btrfs_check_device_zone_type.exit.error.thread_crit_edge: ; preds = %btrfs_check_device_zone_type.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %error.thread

if.end10:                                         ; preds = %btrfs_check_device_zone_type.exit.if.end10_crit_edge, %if.end4.i.if.end10_crit_edge, %bdev_zone_sectors.exit.i.if.end10_crit_edge, %bdev_is_zoned.exit.i.if.end10_crit_edge, %if.then.i673.if.end10_crit_edge
  %seeding11 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %5, i32 0, i32 16
  %24 = ptrtoint ptr %seeding11 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %seeding11, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool12.not = icmp eq i8 %25, 0
  br i1 %tobool12.not, label %if.end10.if.end14_crit_edge, label %if.then13

if.end10.if.end14_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end14

if.then13:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  %s_umount = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 14
  tail call void @down_write(ptr noundef %s_umount) #23
  tail call void @mutex_lock_nested(ptr noundef nonnull @uuid_mutex, i32 noundef 0) #23
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end10.if.end14_crit_edge
  %seeding_dev.0 = phi i8 [ 1, %if.then13 ], [ 0, %if.end10.if.end14_crit_edge ]
  %call15 = tail call i32 @sync_blockdev(ptr noundef %call3) #23
  %26 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %29, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !432
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #23
  %call.i = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i, label %if.end14.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end14.rcu_read_lock.exit_crit_edge:            ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end14
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 696, ptr noundef nonnull @.str.97) #23
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end14.rcu_read_lock.exit_crit_edge
  %call16 = tail call i32 @rcu_read_lock_any_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %land.lhs.true18, label %rcu_read_lock.exit.do.end_crit_edge

rcu_read_lock.exit.do.end_crit_edge:              ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end

land.lhs.true18:                                  ; preds = %rcu_read_lock.exit
  %call19 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %land.lhs.true18.do.end_crit_edge, label %land.lhs.true21

land.lhs.true18.do.end_crit_edge:                 ; preds = %land.lhs.true18
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end

land.lhs.true21:                                  ; preds = %land.lhs.true18
  %.b662 = load i1, ptr @btrfs_init_new_device.__warned, align 1
  br i1 %.b662, label %land.lhs.true21.do.end_crit_edge, label %if.then23

land.lhs.true21.do.end_crit_edge:                 ; preds = %land.lhs.true21
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end

if.then23:                                        ; preds = %land.lhs.true21
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @btrfs_init_new_device.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.9, i32 noundef 2646, ptr noundef nonnull @.str.17) #23
  br label %do.end

do.end:                                           ; preds = %if.then23, %land.lhs.true21.do.end_crit_edge, %land.lhs.true18.do.end_crit_edge, %rcu_read_lock.exit.do.end_crit_edge
  %devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %5, i32 0, i32 13
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %do.end
  %device.0.in = phi ptr [ %devices, %do.end ], [ %device.0, %for.body.for.cond_crit_edge ]
  %30 = ptrtoint ptr %device.0.in to i32
  call void @__asan_load4_noabort(i32 %30)
  %device.0 = load volatile ptr, ptr %device.0.in, align 8
  %cmp.not = icmp eq ptr %device.0, %devices
  br i1 %cmp.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %bdev30 = getelementptr inbounds %struct.btrfs_device, ptr %device.0, i32 0, i32 7
  %31 = ptrtoint ptr %bdev30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %bdev30, align 8
  %cmp31 = icmp eq ptr %32, %call3
  br i1 %cmp31, label %if.then32, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.cond

if.then32:                                        ; preds = %for.body
  %call.i676 = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i676, label %if.then32.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i679

if.then32.rcu_read_unlock.exit_crit_edge:         ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

land.lhs.true.i679:                               ; preds = %if.then32
  %call1.i677 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i677)
  %tobool.not.i678 = icmp eq i32 %call1.i677, 0
  br i1 %tobool.not.i678, label %land.lhs.true.i679.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i681

land.lhs.true.i679.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i679
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

land.lhs.true2.i681:                              ; preds = %land.lhs.true.i679
  %.b4.i680 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i680, label %land.lhs.true2.i681.rcu_read_unlock.exit_crit_edge, label %if.then.i682

land.lhs.true2.i681.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i681
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

if.then.i682:                                     ; preds = %land.lhs.true2.i681
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 724, ptr noundef nonnull @.str.98) #23
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i682, %land.lhs.true2.i681.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i679.rcu_read_unlock.exit_crit_edge, %if.then32.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !433
  %33 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i.i683 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i.i683 to ptr
  %preempt_count.i.i.i.i684 = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i.i684 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i.i684, align 4
  %sub.i.i.i = add i32 %36, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i684, align 4
  tail call void @rcu_read_unlock_strict() #23
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #23
  tail call void @blkdev_put(ptr noundef %call3, i32 noundef 128) #23
  br i1 %tobool12.not, label %rcu_read_unlock.exit.cleanup_crit_edge, label %rcu_read_unlock.exit.if.then468_crit_edge

rcu_read_unlock.exit.if.then468_crit_edge:        ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then468

rcu_read_unlock.exit.cleanup_crit_edge:           ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

for.end:                                          ; preds = %for.cond
  %call.i685 = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i685, label %for.end.rcu_read_unlock.exit695_crit_edge, label %land.lhs.true.i688

for.end.rcu_read_unlock.exit695_crit_edge:        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit695

land.lhs.true.i688:                               ; preds = %for.end
  %call1.i686 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i686)
  %tobool.not.i687 = icmp eq i32 %call1.i686, 0
  br i1 %tobool.not.i687, label %land.lhs.true.i688.rcu_read_unlock.exit695_crit_edge, label %land.lhs.true2.i690

land.lhs.true.i688.rcu_read_unlock.exit695_crit_edge: ; preds = %land.lhs.true.i688
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit695

land.lhs.true2.i690:                              ; preds = %land.lhs.true.i688
  %.b4.i689 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i689, label %land.lhs.true2.i690.rcu_read_unlock.exit695_crit_edge, label %if.then.i691

land.lhs.true2.i690.rcu_read_unlock.exit695_crit_edge: ; preds = %land.lhs.true2.i690
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit695

if.then.i691:                                     ; preds = %land.lhs.true2.i690
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 724, ptr noundef nonnull @.str.98) #23
  br label %rcu_read_unlock.exit695

rcu_read_unlock.exit695:                          ; preds = %if.then.i691, %land.lhs.true2.i690.rcu_read_unlock.exit695_crit_edge, %land.lhs.true.i688.rcu_read_unlock.exit695_crit_edge, %for.end.rcu_read_unlock.exit695_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !433
  %37 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i.i692 = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i.i.i692 to ptr
  %preempt_count.i.i.i.i693 = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i.i.i693 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i.i.i693, align 4
  %sub.i.i.i694 = add i32 %40, -1
  store volatile i32 %sub.i.i.i694, ptr %preempt_count.i.i.i.i693, align 4
  tail call void @rcu_read_unlock_strict() #23
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #23
  %call43 = tail call ptr @btrfs_alloc_device(ptr noundef %fs_info, ptr noundef null, ptr noundef null)
  %cmp.i696 = icmp ugt ptr %call43, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i696, label %if.then45, label %if.end47

if.then45:                                        ; preds = %rcu_read_unlock.exit695
  %41 = ptrtoint ptr %call43 to i32
  tail call void @blkdev_put(ptr noundef %call3, i32 noundef 128) #23
  br i1 %tobool12.not, label %if.then45.cleanup_crit_edge, label %if.then45.if.then468_crit_edge

if.then45.if.then468_crit_edge:                   ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then468

if.then45.cleanup_crit_edge:                      ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end47:                                         ; preds = %rcu_read_unlock.exit695
  %call.i697 = tail call i32 @strlen(ptr noundef %device_path) #27
  %add1.i = add i32 %call.i697, 9
  %call9.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add1.i, i32 noundef 3520) #30
  %tobool.not.i698 = icmp eq ptr %call9.i.i.i, null
  br i1 %tobool.not.i698, label %if.end47.error_crit_edge, label %do.body52

if.end47.error_crit_edge:                         ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

do.body52:                                        ; preds = %if.end47
  %add.i = add i32 %call.i697, 1
  %str.i = getelementptr inbounds %struct.rcu_string, ptr %call9.i.i.i, i32 0, i32 1
  %call3.i = tail call ptr @strncpy(ptr noundef %str.i, ptr noundef %device_path, i32 noundef %add.i) #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !448
  %name79 = getelementptr inbounds %struct.btrfs_device, ptr %call43, i32 0, i32 5
  %42 = ptrtoint ptr %name79 to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile ptr %call9.i.i.i, ptr %name79, align 8
  %fs_info91 = getelementptr inbounds %struct.btrfs_device, ptr %call43, i32 0, i32 4
  %43 = ptrtoint ptr %fs_info91 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %fs_info, ptr %fs_info91, align 4
  %bdev92 = getelementptr inbounds %struct.btrfs_device, ptr %call43, i32 0, i32 7
  %44 = ptrtoint ptr %bdev92 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %call3, ptr %bdev92, align 8
  %call93 = tail call i32 @btrfs_get_dev_zone_info(ptr noundef %call43, i1 noundef zeroext false) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call93)
  %tobool94.not = icmp eq i32 %call93, 0
  br i1 %tobool94.not, label %if.end96, label %do.body52.error_crit_edge

do.body52.error_crit_edge:                        ; preds = %do.body52
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

if.end96:                                         ; preds = %do.body52
  %call97 = tail call ptr @btrfs_start_transaction(ptr noundef %1, i32 noundef 0) #23
  %cmp.i699 = icmp ugt ptr %call97, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i699, label %if.then99, label %if.end101

if.then99:                                        ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #25
  %45 = ptrtoint ptr %call97 to i32
  br label %error_free_zone

if.end101:                                        ; preds = %if.end96
  %46 = ptrtoint ptr %bd_queue.i.i14.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %bd_queue.i.i14.i, align 4
  %dev_state = getelementptr inbounds %struct.btrfs_device, ptr %call43, i32 0, i32 10
  tail call void @_set_bit(i32 noundef 0, ptr noundef %dev_state) #23
  %48 = ptrtoint ptr %call97 to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %call97, align 8
  %generation = getelementptr inbounds %struct.btrfs_device, ptr %call43, i32 0, i32 6
  %50 = ptrtoint ptr %generation to i32
  call void @__asan_store8_noabort(i32 %50)
  store i64 %49, ptr %generation, align 8
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 167
  %51 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %sectorsize, align 4
  %io_width = getelementptr inbounds %struct.btrfs_device, ptr %call43, i32 0, i32 18
  %53 = ptrtoint ptr %io_width to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %io_width, align 4
  %54 = load i32, ptr %sectorsize, align 4
  %io_align = getelementptr inbounds %struct.btrfs_device, ptr %call43, i32 0, i32 17
  %55 = ptrtoint ptr %io_align to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %54, ptr %io_align, align 8
  %56 = load i32, ptr %sectorsize, align 4
  %sector_size = getelementptr inbounds %struct.btrfs_device, ptr %call43, i32 0, i32 20
  %57 = ptrtoint ptr %sector_size to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %56, ptr %sector_size, align 8
  %bd_nr_sectors.i.i = getelementptr inbounds %struct.block_device, ptr %call3, i32 0, i32 1
  %58 = ptrtoint ptr %bd_nr_sectors.i.i to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %bd_nr_sectors.i.i, align 8
  %shl.i700 = shl i64 %59, 9
  %60 = load i32, ptr %sectorsize, align 4
  %sub = add i32 %60, -1
  %conv = zext i32 %sub to i64
  %neg = xor i64 %conv, -1
  %and = and i64 %shl.i700, %neg
  %total_bytes = getelementptr inbounds %struct.btrfs_device, ptr %call43, i32 0, i32 14
  %61 = ptrtoint ptr %total_bytes to i32
  call void @__asan_store8_noabort(i32 %61)
  store i64 %and, ptr %total_bytes, align 8
  %disk_total_bytes = getelementptr inbounds %struct.btrfs_device, ptr %call43, i32 0, i32 15
  %62 = ptrtoint ptr %disk_total_bytes to i32
  call void @__asan_store8_noabort(i32 %62)
  store i64 %and, ptr %disk_total_bytes, align 8
  %commit_total_bytes = getelementptr inbounds %struct.btrfs_device, ptr %call43, i32 0, i32 22
  %63 = ptrtoint ptr %commit_total_bytes to i32
  call void @__asan_store8_noabort(i32 %63)
  store i64 %and, ptr %commit_total_bytes, align 8
  tail call void @_set_bit(i32 noundef 1, ptr noundef %dev_state) #23
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %dev_state) #23
  %mode = getelementptr inbounds %struct.btrfs_device, ptr %call43, i32 0, i32 9
  %64 = ptrtoint ptr %mode to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 128, ptr %mode, align 8
  %dev_stats_valid = getelementptr inbounds %struct.btrfs_device, ptr %call43, i32 0, i32 27
  %65 = ptrtoint ptr %dev_stats_valid to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 1, ptr %dev_stats_valid, align 8
  %66 = ptrtoint ptr %bdev92 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %bdev92, align 8
  %call112 = tail call i32 @set_blocksize(ptr noundef %67, i32 noundef 4096) #23
  br i1 %tobool12.not, label %if.end172, label %if.then114

if.then114:                                       ; preds = %if.end101
  %68 = ptrtoint ptr %s_flags.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %s_flags.i, align 4
  %and.i702 = and i32 %69, -2
  store i32 %and.i702, ptr %s_flags.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %70 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %s_fs_info.i.i, align 16
  %fs_state.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %71, i32 0, i32 149
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %fs_state.i) #23
  %call115 = tail call fastcc ptr @btrfs_init_sprout(ptr noundef %fs_info)
  %cmp.i703 = icmp ugt ptr %call115, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i703, label %if.then117, label %if.then174

if.then117:                                       ; preds = %if.then114
  %72 = ptrtoint ptr %call115 to i32
  %fs_info120 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call97, i32 0, i32 16
  %73 = ptrtoint ptr %fs_info120 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %fs_info120, align 4
  %fs_state = getelementptr inbounds %struct.btrfs_fs_info, ptr %74, i32 0, i32 149
  %call121 = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call121)
  %tobool122.not = icmp eq i32 %call121, 0
  br i1 %tobool122.not, label %if.then123, label %if.then117.error_trans.thread_crit_edge

if.then117.error_trans.thread_crit_edge:          ; preds = %if.then117
  call void @__sanitizer_cov_trace_pc() #25
  br label %error_trans.thread

if.then123:                                       ; preds = %if.then117
  %75 = zext i32 %72 to i64
  call void @__sanitizer_cov_trace_switch(i64 %75, ptr @__sancov_gen_cov_switch_values.187)
  switch i32 %72, label %do.end137 [
    i32 -5, label %if.then123.do.body152_crit_edge
    i32 -30, label %if.then123.do.body152_crit_edge749
  ]

if.then123.do.body152_crit_edge749:               ; preds = %if.then123
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body152

if.then123.do.body152_crit_edge:                  ; preds = %if.then123
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body152

do.end137:                                        ; preds = %if.then123
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 2705, i32 noundef 9, ptr noundef nonnull @.str.18, i32 noundef %72) #23
  br label %error_trans.thread

do.body152:                                       ; preds = %if.then123.do.body152_crit_edge, %if.then123.do.body152_crit_edge749
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_init_new_device.__UNIQUE_ID_ddebug961, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_init_new_device, %if.then162)) #23
          to label %error_trans.thread [label %if.then162], !srcloc !431

if.then162:                                       ; preds = %do.body152
  call void @__sanitizer_cov_trace_pc() #25
  %76 = ptrtoint ptr %fs_info120 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %fs_info120, align 4
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %77, ptr noundef nonnull @.str.22, i32 noundef %72) #28
  br label %error_trans.thread

error_trans.thread:                               ; preds = %if.then162, %do.body152, %do.end137, %if.then117.error_trans.thread_crit_edge
  tail call void @__btrfs_abort_transaction(ptr noundef %call97, ptr noundef nonnull @.str.20, i32 noundef 2705, i32 noundef %72) #28
  br label %if.then461

if.end172:                                        ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #25
  %device_list_mutex = getelementptr inbounds %struct.btrfs_fs_devices, ptr %5, i32 0, i32 12
  tail call void @mutex_lock_nested(ptr noundef %device_list_mutex, i32 noundef 0) #23
  br label %if.end176

if.then174:                                       ; preds = %if.then114
  call void @__sanitizer_cov_trace_pc() #25
  %device_list_mutex725 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %5, i32 0, i32 12
  tail call void @mutex_lock_nested(ptr noundef %device_list_mutex725, i32 noundef 0) #23
  tail call fastcc void @btrfs_setup_sprout(ptr noundef %fs_info, ptr noundef %call115)
  %78 = ptrtoint ptr %fs_devices2 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %fs_devices2, align 8
  %latest_dev = getelementptr inbounds %struct.btrfs_fs_devices, ptr %79, i32 0, i32 11
  %80 = ptrtoint ptr %latest_dev to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %latest_dev, align 8
  tail call void @btrfs_assign_next_active_device(ptr noundef %81, ptr noundef %call43) #34
  br label %if.end176

if.end176:                                        ; preds = %if.then174, %if.end172
  %device_list_mutex727 = phi ptr [ %device_list_mutex725, %if.then174 ], [ %device_list_mutex, %if.end172 ]
  %fs_devices177 = getelementptr inbounds %struct.btrfs_device, ptr %call43, i32 0, i32 3
  %82 = ptrtoint ptr %fs_devices177 to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %5, ptr %fs_devices177, align 8
  %chunk_mutex = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 50
  tail call void @mutex_lock_nested(ptr noundef %chunk_mutex, i32 noundef 0) #23
  tail call fastcc void @list_add_rcu(ptr noundef %call43, ptr noundef %devices)
  %dev_alloc_list = getelementptr inbounds %struct.btrfs_device, ptr %call43, i32 0, i32 1
  %alloc_list = getelementptr inbounds %struct.btrfs_fs_devices, ptr %5, i32 0, i32 14
  %83 = ptrtoint ptr %alloc_list to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %alloc_list, align 4
  %call.i.i704 = tail call zeroext i1 @__list_add_valid(ptr noundef %dev_alloc_list, ptr noundef %alloc_list, ptr noundef %84) #23
  br i1 %call.i.i704, label %if.end.i.i, label %if.end176.list_add.exit_crit_edge

if.end176.list_add.exit_crit_edge:                ; preds = %if.end176
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end176
  call void @__sanitizer_cov_trace_pc() #25
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %84, i32 0, i32 1
  %85 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store ptr %dev_alloc_list, ptr %prev1.i.i, align 4
  %86 = ptrtoint ptr %dev_alloc_list to i32
  call void @__asan_store4_noabort(i32 %86)
  store ptr %84, ptr %dev_alloc_list, align 4
  %prev3.i.i = getelementptr inbounds %struct.btrfs_device, ptr %call43, i32 0, i32 1, i32 1
  %87 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %87)
  store ptr %alloc_list, ptr %prev3.i.i, align 4
  %88 = ptrtoint ptr %alloc_list to i32
  call void @__asan_store4_noabort(i32 %88)
  store volatile ptr %dev_alloc_list, ptr %alloc_list, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end176.list_add.exit_crit_edge
  %num_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %5, i32 0, i32 4
  %89 = ptrtoint ptr %num_devices to i32
  call void @__asan_load8_noabort(i32 %89)
  %90 = load i64, ptr %num_devices, align 8
  %inc = add i64 %90, 1
  store i64 %inc, ptr %num_devices, align 8
  %open_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %5, i32 0, i32 5
  %91 = ptrtoint ptr %open_devices to i32
  call void @__asan_load8_noabort(i32 %91)
  %92 = load i64, ptr %open_devices, align 8
  %inc180 = add i64 %92, 1
  store i64 %inc180, ptr %open_devices, align 8
  %rw_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %5, i32 0, i32 6
  %93 = ptrtoint ptr %rw_devices to i32
  call void @__asan_load8_noabort(i32 %93)
  %94 = load i64, ptr %rw_devices, align 8
  %inc181 = add i64 %94, 1
  store i64 %inc181, ptr %rw_devices, align 8
  %total_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %5, i32 0, i32 9
  %95 = ptrtoint ptr %total_devices to i32
  call void @__asan_load8_noabort(i32 %95)
  %96 = load i64, ptr %total_devices, align 8
  %inc182 = add i64 %96, 1
  store i64 %inc182, ptr %total_devices, align 8
  %97 = ptrtoint ptr %total_bytes to i32
  call void @__asan_load8_noabort(i32 %97)
  %98 = load i64, ptr %total_bytes, align 8
  %total_rw_bytes = getelementptr inbounds %struct.btrfs_fs_devices, ptr %5, i32 0, i32 8
  %99 = ptrtoint ptr %total_rw_bytes to i32
  call void @__asan_load8_noabort(i32 %99)
  %100 = load i64, ptr %total_rw_bytes, align 8
  %add = add i64 %100, %98
  store i64 %add, ptr %total_rw_bytes, align 8
  %101 = load i64, ptr %total_bytes, align 8
  %free_chunk_space = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 17
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %free_chunk_space, i32 noundef 8) #23
  tail call void @generic_atomic64_add(i64 noundef %101, ptr noundef %free_chunk_space) #23
  %queue_flags = getelementptr inbounds %struct.request_queue, ptr %47, i32 0, i32 11
  %102 = ptrtoint ptr %queue_flags to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load volatile i32, ptr %queue_flags, align 4
  %104 = and i32 %103, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %104)
  %tobool186.not = icmp eq i32 %104, 0
  br i1 %tobool186.not, label %if.then187, label %list_add.exit.if.end188_crit_edge

list_add.exit.if.end188_crit_edge:                ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end188

if.then187:                                       ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #25
  %rotating = getelementptr inbounds %struct.btrfs_fs_devices, ptr %5, i32 0, i32 18
  %105 = ptrtoint ptr %rotating to i32
  call void @__asan_store1_noabort(i32 %105)
  store i8 1, ptr %rotating, align 8
  br label %if.end188

if.end188:                                        ; preds = %if.then187, %list_add.exit.if.end188_crit_edge
  %super_copy = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 43
  %106 = ptrtoint ptr %super_copy to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %super_copy, align 8
  %total_bytes.i = getelementptr inbounds %struct.btrfs_super_block, ptr %107, i32 0, i32 10
  %108 = ptrtoint ptr %total_bytes.i to i32
  call void @__asan_loadN_noabort(i32 %108, i32 8)
  %109 = load i64, ptr %total_bytes.i, align 1
  %110 = tail call i64 @llvm.bswap.i64(i64 %109) #23
  %111 = ptrtoint ptr %total_bytes to i32
  call void @__asan_load8_noabort(i32 %111)
  %112 = load i64, ptr %total_bytes, align 8
  %add192 = add i64 %110, %112
  %113 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %sectorsize, align 4
  %sub194 = add i32 %114, -1
  %conv195 = zext i32 %sub194 to i64
  %neg196 = xor i64 %conv195, -1
  %and197 = and i64 %add192, %neg196
  %115 = tail call i64 @llvm.bswap.i64(i64 %and197) #23
  %116 = ptrtoint ptr %total_bytes.i to i32
  call void @__asan_storeN_noabort(i32 %116, i32 8)
  store i64 %115, ptr %total_bytes.i, align 1
  %117 = ptrtoint ptr %super_copy to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %super_copy, align 8
  %num_devices.i = getelementptr inbounds %struct.btrfs_super_block, ptr %118, i32 0, i32 13
  %119 = ptrtoint ptr %num_devices.i to i32
  call void @__asan_loadN_noabort(i32 %119, i32 8)
  %120 = load i64, ptr %num_devices.i, align 1
  %121 = tail call i64 @llvm.bswap.i64(i64 %120) #23
  %add201 = add i64 %121, 1
  %122 = tail call i64 @llvm.bswap.i64(i64 %add201) #23
  %123 = ptrtoint ptr %num_devices.i to i32
  call void @__asan_storeN_noabort(i32 %123, i32 8)
  store i64 %122, ptr %num_devices.i, align 1
  tail call void @btrfs_clear_space_info_full(ptr noundef %fs_info) #23
  tail call void @mutex_unlock(ptr noundef %chunk_mutex) #23
  %call203 = tail call i32 @btrfs_sysfs_add_device(ptr noundef %call43) #23
  tail call void @mutex_unlock(ptr noundef %device_list_mutex727) #23
  br i1 %tobool12.not, label %if.end273.thread, label %if.then206

if.then206:                                       ; preds = %if.end188
  tail call void @mutex_lock_nested(ptr noundef %chunk_mutex, i32 noundef 0) #23
  %call208 = tail call fastcc i32 @init_first_rw_device(ptr noundef %call97)
  tail call void @mutex_unlock(ptr noundef %chunk_mutex) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call208)
  %tobool210.not = icmp eq i32 %call208, 0
  br i1 %tobool210.not, label %if.end273, label %do.body212

do.body212:                                       ; preds = %if.then206
  %fs_info213 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call97, i32 0, i32 16
  %124 = ptrtoint ptr %fs_info213 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %fs_info213, align 4
  %fs_state214 = getelementptr inbounds %struct.btrfs_fs_info, ptr %125, i32 0, i32 149
  %call215 = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state214) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call215)
  %tobool216.not = icmp eq i32 %call215, 0
  br i1 %tobool216.not, label %if.then217, label %do.body212.if.end269_crit_edge

do.body212.if.end269_crit_edge:                   ; preds = %do.body212
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end269

if.then217:                                       ; preds = %do.body212
  %126 = zext i32 %call208 to i64
  call void @__sanitizer_cov_trace_switch(i64 %126, ptr @__sancov_gen_cov_switch_values.188)
  switch i32 %call208, label %do.end236 [
    i32 -5, label %if.then217.do.body251_crit_edge
    i32 -30, label %if.then217.do.body251_crit_edge750
  ]

if.then217.do.body251_crit_edge750:               ; preds = %if.then217
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body251

if.then217.do.body251_crit_edge:                  ; preds = %if.then217
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body251

do.end236:                                        ; preds = %if.then217
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 2760, i32 noundef 9, ptr noundef nonnull @.str.18, i32 noundef %call208) #23
  br label %if.end269

do.body251:                                       ; preds = %if.then217.do.body251_crit_edge, %if.then217.do.body251_crit_edge750
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_init_new_device.__UNIQUE_ID_ddebug962, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_init_new_device, %if.then263)) #23
          to label %if.end269 [label %if.then263], !srcloc !431

if.then263:                                       ; preds = %do.body251
  call void @__sanitizer_cov_trace_pc() #25
  %127 = ptrtoint ptr %fs_info213 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %fs_info213, align 4
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %128, ptr noundef nonnull @.str.22, i32 noundef %call208) #28
  br label %if.end269

if.end269:                                        ; preds = %if.then263, %do.body251, %do.end236, %do.body212.if.end269_crit_edge
  tail call void @__btrfs_abort_transaction(ptr noundef %call97, ptr noundef nonnull @.str.20, i32 noundef 2760, i32 noundef %call208) #28
  br label %error_sysfs

if.end273:                                        ; preds = %if.then206
  %call274 = tail call fastcc i32 @btrfs_add_dev_item(ptr noundef %call97, ptr noundef %call43)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call274)
  %tobool275.not = icmp eq i32 %call274, 0
  br i1 %tobool275.not, label %if.then339, label %if.end273.do.body277_crit_edge

if.end273.do.body277_crit_edge:                   ; preds = %if.end273
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body277

if.end273.thread:                                 ; preds = %if.end188
  %call274731 = tail call fastcc i32 @btrfs_add_dev_item(ptr noundef %call97, ptr noundef %call43)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call274731)
  %tobool275.not732 = icmp eq i32 %call274731, 0
  br i1 %tobool275.not732, label %if.end273.thread.if.end431_crit_edge, label %if.end273.thread.do.body277_crit_edge

if.end273.thread.do.body277_crit_edge:            ; preds = %if.end273.thread
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body277

if.end273.thread.if.end431_crit_edge:             ; preds = %if.end273.thread
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end431

do.body277:                                       ; preds = %if.end273.thread.do.body277_crit_edge, %if.end273.do.body277_crit_edge
  %call274733 = phi i32 [ %call274731, %if.end273.thread.do.body277_crit_edge ], [ %call274, %if.end273.do.body277_crit_edge ]
  %fs_info278 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call97, i32 0, i32 16
  %129 = ptrtoint ptr %fs_info278 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %fs_info278, align 4
  %fs_state279 = getelementptr inbounds %struct.btrfs_fs_info, ptr %130, i32 0, i32 149
  %call280 = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state279) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call280)
  %tobool281.not = icmp eq i32 %call280, 0
  br i1 %tobool281.not, label %if.then282, label %do.body277.if.end334_crit_edge

do.body277.if.end334_crit_edge:                   ; preds = %do.body277
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end334

if.then282:                                       ; preds = %do.body277
  %131 = zext i32 %call274733 to i64
  call void @__sanitizer_cov_trace_switch(i64 %131, ptr @__sancov_gen_cov_switch_values.189)
  switch i32 %call274733, label %do.end301 [
    i32 -5, label %if.then282.do.body316_crit_edge
    i32 -30, label %if.then282.do.body316_crit_edge751
  ]

if.then282.do.body316_crit_edge751:               ; preds = %if.then282
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body316

if.then282.do.body316_crit_edge:                  ; preds = %if.then282
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body316

do.end301:                                        ; preds = %if.then282
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 2767, i32 noundef 9, ptr noundef nonnull @.str.18, i32 noundef %call274733) #23
  br label %if.end334

do.body316:                                       ; preds = %if.then282.do.body316_crit_edge, %if.then282.do.body316_crit_edge751
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_init_new_device.__UNIQUE_ID_ddebug963, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_init_new_device, %if.then328)) #23
          to label %if.end334 [label %if.then328], !srcloc !431

if.then328:                                       ; preds = %do.body316
  call void @__sanitizer_cov_trace_pc() #25
  %132 = ptrtoint ptr %fs_info278 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %fs_info278, align 4
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %133, ptr noundef nonnull @.str.22, i32 noundef %call274733) #28
  br label %if.end334

if.end334:                                        ; preds = %if.then328, %do.body316, %do.end301, %do.body277.if.end334_crit_edge
  tail call void @__btrfs_abort_transaction(ptr noundef %call97, ptr noundef nonnull @.str.20, i32 noundef 2767, i32 noundef %call274733) #28
  br label %error_sysfs

if.then339:                                       ; preds = %if.end273
  %call340 = tail call fastcc i32 @btrfs_finish_sprout(ptr noundef %call97)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call340)
  %tobool341.not = icmp eq i32 %call340, 0
  br i1 %tobool341.not, label %if.then407, label %do.body343

do.body343:                                       ; preds = %if.then339
  %fs_info344 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call97, i32 0, i32 16
  %134 = ptrtoint ptr %fs_info344 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %fs_info344, align 4
  %fs_state345 = getelementptr inbounds %struct.btrfs_fs_info, ptr %135, i32 0, i32 149
  %call346 = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state345) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call346)
  %tobool347.not = icmp eq i32 %call346, 0
  br i1 %tobool347.not, label %if.then348, label %do.body343.if.end400_crit_edge

do.body343.if.end400_crit_edge:                   ; preds = %do.body343
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end400

if.then348:                                       ; preds = %do.body343
  %136 = zext i32 %call340 to i64
  call void @__sanitizer_cov_trace_switch(i64 %136, ptr @__sancov_gen_cov_switch_values.190)
  switch i32 %call340, label %do.end367 [
    i32 -5, label %if.then348.do.body382_crit_edge
    i32 -30, label %if.then348.do.body382_crit_edge752
  ]

if.then348.do.body382_crit_edge752:               ; preds = %if.then348
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body382

if.then348.do.body382_crit_edge:                  ; preds = %if.then348
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body382

do.end367:                                        ; preds = %if.then348
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 2774, i32 noundef 9, ptr noundef nonnull @.str.18, i32 noundef %call340) #23
  br label %if.end400

do.body382:                                       ; preds = %if.then348.do.body382_crit_edge, %if.then348.do.body382_crit_edge752
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_init_new_device.__UNIQUE_ID_ddebug964, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_init_new_device, %if.then394)) #23
          to label %if.end400 [label %if.then394], !srcloc !431

if.then394:                                       ; preds = %do.body382
  call void @__sanitizer_cov_trace_pc() #25
  %137 = ptrtoint ptr %fs_info344 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %fs_info344, align 4
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %138, ptr noundef nonnull @.str.22, i32 noundef %call340) #28
  br label %if.end400

if.end400:                                        ; preds = %if.then394, %do.body382, %do.end367, %do.body343.if.end400_crit_edge
  tail call void @__btrfs_abort_transaction(ptr noundef %call97, ptr noundef nonnull @.str.20, i32 noundef 2774, i32 noundef %call340) #28
  br label %error_sysfs

if.then407:                                       ; preds = %if.then339
  tail call void @btrfs_sysfs_update_sprout_fsid(ptr noundef %5) #23
  %call405 = tail call i32 @btrfs_commit_transaction(ptr noundef %call97) #23
  tail call void @mutex_unlock(ptr noundef nonnull @uuid_mutex) #23
  %s_umount408 = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 14
  tail call void @up_write(ptr noundef %s_umount408) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call405)
  %tobool409.not = icmp eq i32 %call405, 0
  br i1 %tobool409.not, label %if.end411, label %if.then407.cleanup_crit_edge

if.then407.cleanup_crit_edge:                     ; preds = %if.then407
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end411:                                        ; preds = %if.then407
  %call412 = tail call fastcc i32 @btrfs_relocate_sys_chunks(ptr noundef %fs_info)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call412)
  %cmp413 = icmp slt i32 %call412, 0
  br i1 %cmp413, label %do.body416, label %if.end411.if.end419_crit_edge

if.end411.if.end419_crit_edge:                    ; preds = %if.end411
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end419

do.body416:                                       ; preds = %if.end411
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, i32, i32, ptr, ...) @__btrfs_handle_fs_error(ptr noundef %fs_info, ptr noundef nonnull @.str.20, i32 noundef 2798, i32 noundef %call412, ptr noundef nonnull @.str.23) #28
  br label %if.end419

if.end419:                                        ; preds = %do.body416, %if.end411.if.end419_crit_edge
  %call420 = tail call ptr @btrfs_attach_transaction(ptr noundef %1) #23
  %cmp.i707 = icmp ugt ptr %call420, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i707, label %if.then422, label %if.end419.if.end431_crit_edge

if.end419.if.end431_crit_edge:                    ; preds = %if.end419
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end431

if.then422:                                       ; preds = %if.end419
  %139 = ptrtoint ptr %call420 to i32
  %cmp424 = icmp eq ptr %call420, inttoptr (i32 -2 to ptr)
  br i1 %cmp424, label %if.then422.cleanup_crit_edge, label %if.then422.error_sysfs_crit_edge

if.then422.error_sysfs_crit_edge:                 ; preds = %if.then422
  call void @__sanitizer_cov_trace_pc() #25
  br label %error_sysfs

if.then422.cleanup_crit_edge:                     ; preds = %if.then422
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end431:                                        ; preds = %if.end419.if.end431_crit_edge, %if.end273.thread.if.end431_crit_edge
  %call97.sink = phi ptr [ %call97, %if.end273.thread.if.end431_crit_edge ], [ %call420, %if.end419.if.end431_crit_edge ]
  %call405736 = tail call i32 @btrfs_commit_transaction(ptr noundef %call97.sink) #23
  %call432 = tail call i32 @btrfs_forget_devices(ptr noundef %device_path)
  tail call fastcc void @update_dev_time(ptr noundef %device_path)
  br label %cleanup

error_sysfs:                                      ; preds = %if.then422.error_sysfs_crit_edge, %if.end400, %if.end334, %if.end269
  %locked.1 = phi i8 [ %seeding_dev.0, %if.end269 ], [ %seeding_dev.0, %if.end334 ], [ %seeding_dev.0, %if.end400 ], [ 0, %if.then422.error_sysfs_crit_edge ]
  %ret.1 = phi i32 [ %call208, %if.end269 ], [ %call274733, %if.end334 ], [ %call340, %if.end400 ], [ %139, %if.then422.error_sysfs_crit_edge ]
  %trans.0 = phi ptr [ %call97, %if.end269 ], [ %call97, %if.end334 ], [ %call97, %if.end400 ], [ null, %if.then422.error_sysfs_crit_edge ]
  tail call void @btrfs_sysfs_remove_device(ptr noundef %call43) #23
  %140 = ptrtoint ptr %fs_devices2 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %fs_devices2, align 8
  %device_list_mutex434 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %141, i32 0, i32 12
  tail call void @mutex_lock_nested(ptr noundef %device_list_mutex434, i32 noundef 0) #23
  tail call void @mutex_lock_nested(ptr noundef %chunk_mutex, i32 noundef 0) #23
  %call.i.i708 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %call43) #23
  br i1 %call.i.i708, label %if.end.i.i709, label %error_sysfs.list_del_rcu.exit_crit_edge

error_sysfs.list_del_rcu.exit_crit_edge:          ; preds = %error_sysfs
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del_rcu.exit

if.end.i.i709:                                    ; preds = %error_sysfs
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %call43, i32 0, i32 1
  %142 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %prev.i.i, align 4
  %144 = ptrtoint ptr %call43 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %call43, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %145, i32 0, i32 1
  %146 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %146)
  store ptr %143, ptr %prev1.i.i.i, align 4
  %147 = ptrtoint ptr %143 to i32
  call void @__asan_store4_noabort(i32 %147)
  store volatile ptr %145, ptr %143, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i709, %error_sysfs.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.list_head, ptr %call43, i32 0, i32 1
  %148 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %148)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %call.i.i710 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %dev_alloc_list) #23
  br i1 %call.i.i710, label %if.end.i.i713, label %list_del_rcu.exit.error_trans_crit_edge

list_del_rcu.exit.error_trans_crit_edge:          ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %error_trans

if.end.i.i713:                                    ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i711 = getelementptr inbounds %struct.btrfs_device, ptr %call43, i32 0, i32 1, i32 1
  %149 = ptrtoint ptr %prev.i.i711 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %prev.i.i711, align 4
  %151 = ptrtoint ptr %dev_alloc_list to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %dev_alloc_list, align 4
  %prev1.i.i.i712 = getelementptr inbounds %struct.list_head, ptr %152, i32 0, i32 1
  %153 = ptrtoint ptr %prev1.i.i.i712 to i32
  call void @__asan_store4_noabort(i32 %153)
  store ptr %150, ptr %prev1.i.i.i712, align 4
  %154 = ptrtoint ptr %150 to i32
  call void @__asan_store4_noabort(i32 %154)
  store volatile ptr %152, ptr %150, align 4
  br label %error_trans

error_trans:                                      ; preds = %if.end.i.i713, %list_del_rcu.exit.error_trans_crit_edge
  %155 = ptrtoint ptr %dev_alloc_list to i32
  call void @__asan_store4_noabort(i32 %155)
  store ptr inttoptr (i32 256 to ptr), ptr %dev_alloc_list, align 4
  %prev.i714 = getelementptr inbounds %struct.btrfs_device, ptr %call43, i32 0, i32 1, i32 1
  %156 = ptrtoint ptr %prev.i714 to i32
  call void @__asan_store4_noabort(i32 %156)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i714, align 4
  %157 = ptrtoint ptr %fs_devices2 to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %fs_devices2, align 8
  %num_devices439 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %158, i32 0, i32 4
  %159 = ptrtoint ptr %num_devices439 to i32
  call void @__asan_load8_noabort(i32 %159)
  %160 = load i64, ptr %num_devices439, align 8
  %dec = add i64 %160, -1
  store i64 %dec, ptr %num_devices439, align 8
  %161 = load ptr, ptr %fs_devices2, align 8
  %open_devices441 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %161, i32 0, i32 5
  %162 = ptrtoint ptr %open_devices441 to i32
  call void @__asan_load8_noabort(i32 %162)
  %163 = load i64, ptr %open_devices441, align 8
  %dec442 = add i64 %163, -1
  store i64 %dec442, ptr %open_devices441, align 8
  %164 = load ptr, ptr %fs_devices2, align 8
  %rw_devices444 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %164, i32 0, i32 6
  %165 = ptrtoint ptr %rw_devices444 to i32
  call void @__asan_load8_noabort(i32 %165)
  %166 = load i64, ptr %rw_devices444, align 8
  %dec445 = add i64 %166, -1
  store i64 %dec445, ptr %rw_devices444, align 8
  %167 = load ptr, ptr %fs_devices2, align 8
  %total_devices447 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %167, i32 0, i32 9
  %168 = ptrtoint ptr %total_devices447 to i32
  call void @__asan_load8_noabort(i32 %168)
  %169 = load i64, ptr %total_devices447, align 8
  %dec448 = add i64 %169, -1
  store i64 %dec448, ptr %total_devices447, align 8
  %170 = ptrtoint ptr %total_bytes to i32
  call void @__asan_load8_noabort(i32 %170)
  %171 = load i64, ptr %total_bytes, align 8
  %172 = load ptr, ptr %fs_devices2, align 8
  %total_rw_bytes451 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %172, i32 0, i32 8
  %173 = ptrtoint ptr %total_rw_bytes451 to i32
  call void @__asan_load8_noabort(i32 %173)
  %174 = load i64, ptr %total_rw_bytes451, align 8
  %sub452 = sub i64 %174, %171
  store i64 %sub452, ptr %total_rw_bytes451, align 8
  %175 = load i64, ptr %total_bytes, align 8
  %call.i.i672 = tail call zeroext i1 @__kasan_check_write(ptr noundef %free_chunk_space, i32 noundef 8) #23
  tail call void @generic_atomic64_sub(i64 noundef %175, ptr noundef %free_chunk_space) #23
  %176 = ptrtoint ptr %super_copy to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %super_copy, align 8
  %total_bytes.i715 = getelementptr inbounds %struct.btrfs_super_block, ptr %177, i32 0, i32 10
  %178 = ptrtoint ptr %total_bytes.i715 to i32
  call void @__asan_storeN_noabort(i32 %178, i32 8)
  store i64 %109, ptr %total_bytes.i715, align 1
  %179 = load ptr, ptr %super_copy, align 8
  %num_devices.i716 = getelementptr inbounds %struct.btrfs_super_block, ptr %179, i32 0, i32 13
  %180 = ptrtoint ptr %num_devices.i716 to i32
  call void @__asan_storeN_noabort(i32 %180, i32 8)
  store i64 %120, ptr %num_devices.i716, align 1
  tail call void @mutex_unlock(ptr noundef %chunk_mutex) #23
  %181 = ptrtoint ptr %fs_devices2 to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load ptr, ptr %fs_devices2, align 8
  %device_list_mutex459 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %182, i32 0, i32 12
  tail call void @mutex_unlock(ptr noundef %device_list_mutex459) #23
  br i1 %tobool12.not, label %error_trans.if.end462_crit_edge, label %error_trans.if.then461_crit_edge

error_trans.if.then461_crit_edge:                 ; preds = %error_trans
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then461

error_trans.if.end462_crit_edge:                  ; preds = %error_trans
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end462

if.then461:                                       ; preds = %error_trans.if.then461_crit_edge, %error_trans.thread
  %trans.1745 = phi ptr [ %call97, %error_trans.thread ], [ %trans.0, %error_trans.if.then461_crit_edge ]
  %ret.2743 = phi i32 [ %72, %error_trans.thread ], [ %ret.1, %error_trans.if.then461_crit_edge ]
  %locked.2741 = phi i8 [ %seeding_dev.0, %error_trans.thread ], [ %locked.1, %error_trans.if.then461_crit_edge ]
  %183 = ptrtoint ptr %s_flags.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load i32, ptr %s_flags.i, align 4
  %or.i = or i32 %184, 1
  store i32 %or.i, ptr %s_flags.i, align 4
  %s_fs_info.i.i718 = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %185 = ptrtoint ptr %s_fs_info.i.i718 to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %s_fs_info.i.i718, align 16
  %fs_state.i719 = getelementptr inbounds %struct.btrfs_fs_info, ptr %186, i32 0, i32 149
  tail call void @_set_bit(i32 noundef 2, ptr noundef %fs_state.i719) #23
  br label %if.end462

if.end462:                                        ; preds = %if.then461, %error_trans.if.end462_crit_edge
  %trans.1744 = phi ptr [ %trans.1745, %if.then461 ], [ %trans.0, %error_trans.if.end462_crit_edge ]
  %ret.2742 = phi i32 [ %ret.2743, %if.then461 ], [ %ret.1, %error_trans.if.end462_crit_edge ]
  %locked.2740 = phi i8 [ %locked.2741, %if.then461 ], [ %locked.1, %error_trans.if.end462_crit_edge ]
  %tobool463.not = icmp eq ptr %trans.1744, null
  br i1 %tobool463.not, label %if.end462.error_free_zone_crit_edge, label %if.then464

if.end462.error_free_zone_crit_edge:              ; preds = %if.end462
  call void @__sanitizer_cov_trace_pc() #25
  br label %error_free_zone

if.then464:                                       ; preds = %if.end462
  call void @__sanitizer_cov_trace_pc() #25
  %call465 = tail call i32 @btrfs_end_transaction(ptr noundef nonnull %trans.1744) #23
  br label %error_free_zone

error_free_zone:                                  ; preds = %if.then464, %if.end462.error_free_zone_crit_edge, %if.then99
  %locked.3 = phi i8 [ %seeding_dev.0, %if.then99 ], [ %locked.2740, %if.then464 ], [ %locked.2740, %if.end462.error_free_zone_crit_edge ]
  %ret.3 = phi i32 [ %45, %if.then99 ], [ %ret.2742, %if.then464 ], [ %ret.2742, %if.end462.error_free_zone_crit_edge ]
  tail call void @btrfs_destroy_dev_zone_info(ptr noundef %call43) #23
  br label %error

error.thread:                                     ; preds = %btrfs_check_device_zone_type.exit.error.thread_crit_edge, %bdev_zone_sectors.exit.i.error.thread_crit_edge
  tail call void @blkdev_put(ptr noundef %call3, i32 noundef 128) #23
  br label %cleanup

error:                                            ; preds = %error_free_zone, %do.body52.error_crit_edge, %if.end47.error_crit_edge
  %locked.4 = phi i8 [ %seeding_dev.0, %do.body52.error_crit_edge ], [ %locked.3, %error_free_zone ], [ %seeding_dev.0, %if.end47.error_crit_edge ]
  %ret.4 = phi i32 [ %call93, %do.body52.error_crit_edge ], [ %ret.3, %error_free_zone ], [ -12, %if.end47.error_crit_edge ]
  tail call void @btrfs_free_device(ptr noundef %call43)
  %187 = and i8 %locked.4, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %187)
  %extract.t661.not = icmp eq i8 %187, 0
  tail call void @blkdev_put(ptr noundef %call3, i32 noundef 128) #23
  br i1 %extract.t661.not, label %error.cleanup_crit_edge, label %error.if.then468_crit_edge

error.if.then468_crit_edge:                       ; preds = %error
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then468

error.cleanup_crit_edge:                          ; preds = %error
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then468:                                       ; preds = %error.if.then468_crit_edge, %if.then45.if.then468_crit_edge, %rcu_read_unlock.exit.if.then468_crit_edge
  %ret.5748 = phi i32 [ -17, %rcu_read_unlock.exit.if.then468_crit_edge ], [ %ret.4, %error.if.then468_crit_edge ], [ %41, %if.then45.if.then468_crit_edge ]
  tail call void @mutex_unlock(ptr noundef nonnull @uuid_mutex) #23
  %s_umount469 = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 14
  tail call void @up_write(ptr noundef %s_umount469) #23
  br label %cleanup

cleanup:                                          ; preds = %if.then468, %error.cleanup_crit_edge, %error.thread, %if.end431, %if.then422.cleanup_crit_edge, %if.then407.cleanup_crit_edge, %if.then45.cleanup_crit_edge, %rcu_read_unlock.exit.cleanup_crit_edge, %if.then5, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi i32 [ %12, %if.then5 ], [ %call405736, %if.end431 ], [ -30, %land.lhs.true.cleanup_crit_edge ], [ %call405, %if.then407.cleanup_crit_edge ], [ 0, %if.then422.cleanup_crit_edge ], [ %ret.5748, %if.then468 ], [ %ret.4, %error.cleanup_crit_edge ], [ -22, %error.thread ], [ -17, %rcu_read_unlock.exit.cleanup_crit_edge ], [ %41, %if.then45.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_any_held() local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @btrfs_alloc_device(ptr noundef %fs_info, ptr noundef readonly %devid, ptr noundef readonly %uuid) local_unnamed_addr #4 align 64 {
entry:
  %tmp = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp) #23
  %0 = ptrtoint ptr %tmp to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %tmp, align 8, !annotation !425
  %tobool.not = icmp eq ptr %devid, null
  %tobool1.not = icmp eq ptr %fs_info, null
  %spec.select = and i1 %tobool1.not, %tobool.not
  br i1 %spec.select, label %do.end, label %if.end25, !prof !424

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 6958, i32 noundef 9, ptr noundef null) #23
  br label %cleanup56

if.end25:                                         ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %1 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %1, i32 noundef 3520, i32 noundef 560) #29
  %tobool27.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool27.not, label %if.end25.cleanup56_crit_edge, label %if.end30

if.end25.cleanup56_crit_edge:                     ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup56

if.end30:                                         ; preds = %if.end25
  %call31 = tail call ptr @bio_kmalloc(i32 noundef 3264, i16 noundef zeroext 0) #23
  %flush_bio = getelementptr inbounds %struct.btrfs_device, ptr %call7.i.i, i32 0, i32 24
  %2 = ptrtoint ptr %flush_bio to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %call31, ptr %flush_bio, align 8
  %tobool33.not = icmp eq ptr %call31, null
  br i1 %tobool33.not, label %if.then34, label %if.end36

if.then34:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #23
  br label %cleanup56

if.end36:                                         ; preds = %if.end30
  %3 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %call7.i.i, ptr %call7.i.i, align 8
  %prev.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %4 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call7.i.i, ptr %prev.i, align 4
  %dev_alloc_list = getelementptr inbounds %struct.btrfs_device, ptr %call7.i.i, i32 0, i32 1
  %5 = ptrtoint ptr %dev_alloc_list to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %dev_alloc_list, ptr %dev_alloc_list, align 8
  %prev.i79 = getelementptr inbounds %struct.btrfs_device, ptr %call7.i.i, i32 0, i32 1, i32 1
  %6 = ptrtoint ptr %prev.i79 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %dev_alloc_list, ptr %prev.i79, align 4
  %post_commit_list = getelementptr inbounds %struct.btrfs_device, ptr %call7.i.i, i32 0, i32 2
  %7 = ptrtoint ptr %post_commit_list to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %post_commit_list, ptr %post_commit_list, align 8
  %prev.i80 = getelementptr inbounds %struct.btrfs_device, ptr %call7.i.i, i32 0, i32 2, i32 1
  %8 = ptrtoint ptr %prev.i80 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %post_commit_list, ptr %prev.i80, align 4
  %dev_stats_ccnt = getelementptr inbounds %struct.btrfs_device, ptr %call7.i.i, i32 0, i32 28
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dev_stats_ccnt, i32 noundef 4) #23
  %9 = ptrtoint ptr %dev_stats_ccnt to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 0, ptr %dev_stats_ccnt, align 4
  %data_seqcount = getelementptr inbounds %struct.btrfs_device, ptr %call7.i.i, i32 0, i32 12
  %dep_map.i = getelementptr inbounds %struct.btrfs_device, ptr %call7.i.i, i32 0, i32 12, i32 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map.i, ptr noundef nonnull @.str.56, ptr noundef nonnull @btrfs_alloc_device.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #23
  %10 = ptrtoint ptr %data_seqcount to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %data_seqcount, align 4
  %alloc_state = getelementptr inbounds %struct.btrfs_device, ptr %call7.i.i, i32 0, i32 30
  tail call void @extent_io_tree_init(ptr noundef %fs_info, ptr noundef %alloc_state, i32 noundef 11, ptr noundef null) #23
  br i1 %tobool.not, label %if.else, label %if.then41

if.then41:                                        ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #25
  %11 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %devid, align 8
  %13 = ptrtoint ptr %tmp to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %12, ptr %tmp, align 8
  br label %if.end47

if.else:                                          ; preds = %if.end36
  %call42 = call fastcc i32 @find_next_devid(ptr noundef %fs_info, ptr noundef nonnull %tmp)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42)
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %if.else.if.end47_crit_edge, label %cleanup

if.else.if.end47_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end47

cleanup:                                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @btrfs_free_device(ptr noundef nonnull %call7.i.i)
  %14 = inttoptr i32 %call42 to ptr
  br label %cleanup56

if.end47:                                         ; preds = %if.else.if.end47_crit_edge, %if.then41
  %15 = ptrtoint ptr %tmp to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %tmp, align 8
  %devid48 = getelementptr inbounds %struct.btrfs_device, ptr %call7.i.i, i32 0, i32 13
  %17 = ptrtoint ptr %devid48 to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %16, ptr %devid48, align 8
  %tobool49.not = icmp eq ptr %uuid, null
  %uuid53 = getelementptr inbounds %struct.btrfs_device, ptr %call7.i.i, i32 0, i32 21
  br i1 %tobool49.not, label %if.else52, label %if.then50

if.then50:                                        ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #25
  %18 = call ptr @memcpy(ptr %uuid53, ptr %uuid, i32 16)
  br label %cleanup56

if.else52:                                        ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @generate_random_uuid(ptr noundef %uuid53) #23
  br label %cleanup56

cleanup56:                                        ; preds = %if.else52, %if.then50, %cleanup, %if.then34, %if.end25.cleanup56_crit_edge, %do.end
  %retval.1 = phi ptr [ inttoptr (i32 -22 to ptr), %do.end ], [ %14, %cleanup ], [ inttoptr (i32 -12 to ptr), %if.then34 ], [ %call7.i.i, %if.else52 ], [ %call7.i.i, %if.then50 ], [ inttoptr (i32 -12 to ptr), %if.end25.cleanup56_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp) #23
  ret ptr %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_get_dev_zone_info(ptr noundef, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_start_transaction(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @set_blocksize(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @btrfs_init_sprout(ptr nocapture noundef readonly %fs_info) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_devices1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %0 = ptrtoint ptr %fs_devices1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_devices1, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @uuid_mutex, i32 0, i32 5), i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !424

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 2440, i32 noundef 9, ptr noundef null) #23
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %seeding = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 16
  %3 = ptrtoint ptr %seeding to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %seeding, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool25.not = icmp eq i8 %4, 0
  br i1 %tobool25.not, label %if.end.cleanup_crit_edge, label %if.end28

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end28:                                         ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %5 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %5, i32 noundef 3520, i32 noundef 448) #29
  %tobool.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i, label %if.end28.cleanup_crit_edge, label %alloc_fs_devices.exit

if.end28.cleanup_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

alloc_fs_devices.exit:                            ; preds = %if.end28
  %device_list_mutex.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 12
  tail call void @__mutex_init(ptr noundef %device_list_mutex.i, ptr noundef nonnull @.str.87, ptr noundef nonnull @alloc_fs_devices.__key) #23
  %devices.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 13
  %6 = ptrtoint ptr %devices.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %devices.i, ptr %devices.i, align 8
  %prev.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 13, i32 1
  %7 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %devices.i, ptr %prev.i.i, align 4
  %alloc_list.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 14
  %8 = ptrtoint ptr %alloc_list.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %alloc_list.i, ptr %alloc_list.i, align 8
  %prev.i28.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 14, i32 1
  %9 = ptrtoint ptr %prev.i28.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %alloc_list.i, ptr %prev.i28.i, align 4
  %fs_list.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 3
  %10 = ptrtoint ptr %fs_list.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %fs_list.i, ptr %fs_list.i, align 4
  %prev.i29.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 3, i32 1
  %11 = ptrtoint ptr %prev.i29.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %fs_list.i, ptr %prev.i29.i, align 8
  %seed_list.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 15
  %12 = ptrtoint ptr %seed_list.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %seed_list.i, ptr %seed_list.i, align 8
  %prev.i30.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 15, i32 1
  %13 = ptrtoint ptr %prev.i30.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %seed_list.i, ptr %prev.i30.i, align 4
  %cmp.i = icmp ugt ptr %call7.i.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %alloc_fs_devices.exit.cleanup_crit_edge, label %if.end32

alloc_fs_devices.exit.cleanup_crit_edge:          ; preds = %alloc_fs_devices.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end32:                                         ; preds = %alloc_fs_devices.exit
  %call33 = tail call fastcc ptr @clone_fs_devices(ptr noundef %1)
  %cmp.i55 = icmp ugt ptr %call33, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i55, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i) #23
  br label %cleanup

if.end36:                                         ; preds = %if.end32
  %fs_list = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call33, i32 0, i32 3
  %14 = load ptr, ptr @fs_uuids, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %fs_list, ptr noundef nonnull @fs_uuids, ptr noundef %14) #23
  br i1 %call.i.i, label %if.end.i.i, label %if.end36.list_add.exit_crit_edge

if.end36.list_add.exit_crit_edge:                 ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #25
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %fs_list, ptr %prev1.i.i, align 4
  %16 = ptrtoint ptr %fs_list to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %14, ptr %fs_list, align 4
  %prev3.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call33, i32 0, i32 3, i32 1
  %17 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr @fs_uuids, ptr %prev3.i.i, align 4
  store volatile ptr %fs_list, ptr @fs_uuids, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end36.list_add.exit_crit_edge
  %18 = call ptr @memcpy(ptr %call7.i.i.i, ptr %1, i32 448)
  %opened = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 17
  %19 = ptrtoint ptr %opened to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 1, ptr %opened, align 4
  %20 = ptrtoint ptr %devices.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %devices.i, ptr %devices.i, align 8
  %21 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %devices.i, ptr %prev.i.i, align 4
  %22 = ptrtoint ptr %alloc_list.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %alloc_list.i, ptr %alloc_list.i, align 8
  %23 = ptrtoint ptr %prev.i28.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %alloc_list.i, ptr %prev.i28.i, align 4
  tail call void @__mutex_init(ptr noundef %device_list_mutex.i, ptr noundef nonnull @.str.100, ptr noundef nonnull @btrfs_init_sprout.__key) #23
  br label %cleanup

cleanup:                                          ; preds = %list_add.exit, %if.then35, %alloc_fs_devices.exit.cleanup_crit_edge, %if.end28.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi ptr [ %call33, %if.then35 ], [ %call7.i.i.i, %list_add.exit ], [ %call7.i.i.i, %alloc_fs_devices.exit.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end.cleanup_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end28.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @__btrfs_abort_transaction(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @btrfs_setup_sprout(ptr nocapture noundef readonly %fs_info, ptr noundef %seed_devices) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_devices1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %0 = ptrtoint ptr %fs_devices1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_devices1, align 8
  %super_copy = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 43
  %2 = ptrtoint ptr %super_copy to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %super_copy, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %4 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %entry.if.end55_crit_edge, label %land.rhs

entry.if.end55_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end55

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @uuid_mutex, i32 0, i32 5), i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !424

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 2491, i32 noundef 9, ptr noundef null) #23
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %.pr = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %tobool27.not = icmp eq i32 %.pr, 0
  br i1 %tobool27.not, label %if.end.if.end55_crit_edge, label %land.rhs28

if.end.if.end55_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end55

land.rhs28:                                       ; preds = %if.end
  %dep_map = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 12, i32 5
  %call.i109 = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i109)
  %cmp30.not = icmp eq i32 %call.i109, 0
  br i1 %cmp30.not, label %do.end49, label %land.rhs28.if.end55_crit_edge, !prof !424

land.rhs28.if.end55_crit_edge:                    ; preds = %land.rhs28
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end55

do.end49:                                         ; preds = %land.rhs28
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 2505, i32 noundef 9, ptr noundef null) #23
  br label %if.end55

if.end55:                                         ; preds = %do.end49, %land.rhs28.if.end55_crit_edge, %if.end.if.end55_crit_edge, %entry.if.end55_crit_edge
  %devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 13
  %devices65 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %seed_devices, i32 0, i32 13
  %5 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %devices, align 4
  %cmp.i.not.i = icmp eq ptr %6, %devices
  br i1 %cmp.i.not.i, label %if.end55.list_splice_init_rcu.exit_crit_edge, label %if.then.i

if.end55.list_splice_init_rcu.exit_crit_edge:     ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_splice_init_rcu.exit

if.then.i:                                        ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #25
  %7 = ptrtoint ptr %devices65 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %devices65, align 4
  %prev2.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 13, i32 1
  %9 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prev2.i.i, align 4
  %11 = ptrtoint ptr %devices to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %devices, ptr %devices, align 4
  store volatile ptr %devices, ptr %prev2.i.i, align 4
  tail call void @synchronize_rcu() #23
  %12 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %8, ptr %10, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !449
  %13 = ptrtoint ptr %devices65 to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %6, ptr %devices65, align 4
  %prev36.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %14 = ptrtoint ptr %prev36.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %devices65, ptr %prev36.i.i, align 4
  %prev37.i.i = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  %15 = ptrtoint ptr %prev37.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %10, ptr %prev37.i.i, align 4
  br label %list_splice_init_rcu.exit

list_splice_init_rcu.exit:                        ; preds = %if.then.i, %if.end55.list_splice_init_rcu.exit_crit_edge
  %16 = ptrtoint ptr %devices65 to i32
  call void @__asan_load4_noabort(i32 %16)
  %device.0112 = load ptr, ptr %devices65, align 8
  %cmp69.not113 = icmp eq ptr %device.0112, %devices65
  br i1 %cmp69.not113, label %list_splice_init_rcu.exit.for.end_crit_edge, label %list_splice_init_rcu.exit.for.body_crit_edge

list_splice_init_rcu.exit.for.body_crit_edge:     ; preds = %list_splice_init_rcu.exit
  br label %for.body

list_splice_init_rcu.exit.for.end_crit_edge:      ; preds = %list_splice_init_rcu.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %list_splice_init_rcu.exit.for.body_crit_edge
  %device.0114 = phi ptr [ %device.0, %for.body.for.body_crit_edge ], [ %device.0112, %list_splice_init_rcu.exit.for.body_crit_edge ]
  %fs_devices72 = getelementptr inbounds %struct.btrfs_device, ptr %device.0114, i32 0, i32 3
  %17 = ptrtoint ptr %fs_devices72 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %seed_devices, ptr %fs_devices72, align 8
  %18 = ptrtoint ptr %device.0114 to i32
  call void @__asan_load4_noabort(i32 %18)
  %device.0 = load ptr, ptr %device.0114, align 8
  %cmp69.not = icmp eq ptr %device.0, %devices65
  br i1 %cmp69.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %list_splice_init_rcu.exit.for.end_crit_edge
  %seeding = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 16
  %19 = ptrtoint ptr %seeding to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 0, ptr %seeding, align 8
  %num_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 4
  %missing_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 7
  %20 = ptrtoint ptr %missing_devices to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 0, ptr %missing_devices, align 8
  %rotating = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 18
  %21 = ptrtoint ptr %rotating to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 0, ptr %rotating, align 8
  %seed_list = getelementptr inbounds %struct.btrfs_fs_devices, ptr %seed_devices, i32 0, i32 15
  %seed_list78 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 15
  %22 = call ptr @memset(ptr %num_devices, i32 0, i32 16)
  %23 = ptrtoint ptr %seed_list78 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %seed_list78, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %seed_list, ptr noundef %seed_list78, ptr noundef %24) #23
  br i1 %call.i.i, label %if.end.i.i, label %for.end.list_add.exit_crit_edge

for.end.list_add.exit_crit_edge:                  ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_add.exit

if.end.i.i:                                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %seed_list, ptr %prev1.i.i, align 4
  %26 = ptrtoint ptr %seed_list to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %24, ptr %seed_list, align 4
  %prev3.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %seed_devices, i32 0, i32 15, i32 1
  %27 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %seed_list78, ptr %prev3.i.i, align 4
  %28 = ptrtoint ptr %seed_list78 to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %seed_list, ptr %seed_list78, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %for.end.list_add.exit_crit_edge
  tail call void @generate_random_uuid(ptr noundef %1) #23
  %metadata_uuid = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 1
  %29 = call ptr @memcpy(ptr %metadata_uuid, ptr %1, i32 16)
  %fsid82 = getelementptr inbounds %struct.btrfs_super_block, ptr %3, i32 0, i32 1
  %30 = call ptr @memcpy(ptr %fsid82, ptr %1, i32 16)
  %flags.i = getelementptr inbounds %struct.btrfs_super_block, ptr %3, i32 0, i32 3
  %31 = ptrtoint ptr %flags.i to i32
  call void @__asan_loadN_noabort(i32 %31, i32 8)
  %32 = load i64, ptr %flags.i, align 1
  %33 = and i64 %32, -16777217
  store i64 %33, ptr %flags.i, align 1
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @list_add_rcu(ptr noundef %new, ptr noundef %head) unnamed_addr #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %head, align 4
  %call.i = tail call zeroext i1 @__list_add_valid(ptr noundef %new, ptr noundef %head, ptr noundef %1) #23
  br i1 %call.i, label %if.end.i, label %entry.__list_add_rcu.exit_crit_edge

entry.__list_add_rcu.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %__list_add_rcu.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %2 = ptrtoint ptr %new to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %1, ptr %new, align 4
  %prev2.i = getelementptr inbounds %struct.list_head, ptr %new, i32 0, i32 1
  %3 = ptrtoint ptr %prev2.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %head, ptr %prev2.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !450
  %4 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %new, ptr %head, align 4
  %prev37.i = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %5 = ptrtoint ptr %prev37.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %new, ptr %prev37.i, align 4
  br label %__list_add_rcu.exit

__list_add_rcu.exit:                              ; preds = %if.end.i, %entry.__list_add_rcu.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_clear_space_info_full(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_sysfs_add_device(ptr noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @init_first_rw_device(ptr noundef %trans) unnamed_addr #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info1 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %trans, i32 0, i32 16
  %0 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info1, align 4
  %call.i = tail call i64 @btrfs_get_alloc_profile(ptr noundef %1, i64 noundef 4) #23
  %call2 = tail call ptr @btrfs_create_chunk(ptr noundef %trans, i64 noundef %call.i)
  %cmp.i = icmp ugt ptr %call2, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %2 = ptrtoint ptr %call2 to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %call.i20 = tail call i64 @btrfs_get_alloc_profile(ptr noundef %1, i64 noundef 2) #23
  %call6 = tail call ptr @btrfs_create_chunk(ptr noundef %trans, i64 noundef %call.i20)
  %cmp.i21 = icmp ugt ptr %call6, inttoptr (i32 -4096 to ptr)
  %3 = ptrtoint ptr %call6 to i32
  %spec.select = select i1 %cmp.i21, i32 %3, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %2, %if.then ], [ %spec.select, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_add_dev_item(ptr noundef %trans, ptr noundef %device) unnamed_addr #4 align 64 {
entry:
  %data_size.addr.i = alloca i32, align 4
  %batch.i = alloca %struct.btrfs_item_batch, align 4
  %key = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #23
  %call = tail call ptr @btrfs_alloc_path() #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %1 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %2 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 1, ptr %key, align 8
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 -40, ptr %1, align 8
  %devid = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 13
  %4 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %devid, align 8
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_storeN_noabort(i32 %6, i32 8)
  store i64 %5, ptr %0, align 1
  tail call void @btrfs_reserve_chunk_metadata(ptr noundef %trans, i1 noundef zeroext true) #23
  %fs_info = getelementptr inbounds %struct.btrfs_trans_handle, ptr %trans, i32 0, i32 16
  %7 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fs_info, align 4
  %chunk_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %chunk_root to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %chunk_root, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %data_size.addr.i)
  %11 = ptrtoint ptr %data_size.addr.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 98, ptr %data_size.addr.i, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %batch.i) #23
  %12 = getelementptr inbounds %struct.btrfs_item_batch, ptr %batch.i, i32 0, i32 1
  %13 = getelementptr inbounds %struct.btrfs_item_batch, ptr %batch.i, i32 0, i32 2
  %14 = getelementptr inbounds %struct.btrfs_item_batch, ptr %batch.i, i32 0, i32 3
  %15 = ptrtoint ptr %batch.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %key, ptr %batch.i, align 4
  %16 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %data_size.addr.i, ptr %12, align 4
  %17 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 98, ptr %13, align 4
  %18 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 1, ptr %14, align 4
  %call.i = call i32 @btrfs_insert_empty_items(ptr noundef %trans, ptr noundef %10, ptr noundef nonnull %call, ptr noundef nonnull %batch.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %batch.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %data_size.addr.i)
  call void @btrfs_trans_release_chunk_metadata(ptr noundef %trans) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool2.not = icmp eq i32 %call.i, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.out_crit_edge

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end4:                                          ; preds = %if.end
  %19 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %call, align 4
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %call, i32 0, i32 1
  %21 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %slots, align 4
  %mul.i.i.i = mul i32 %22, 25
  %add.i.i.i = add i32 %mul.i.i.i, 101
  %23 = inttoptr i32 %add.i.i.i to ptr
  %call.i.i = call i32 @btrfs_get_32(ptr noundef %20, ptr noundef %23, i32 noundef 17) #23
  %add = add i32 %call.i.i, 101
  %24 = inttoptr i32 %add to ptr
  %25 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %devid, align 8
  call void @btrfs_set_64(ptr noundef %20, ptr noundef %24, i32 noundef 0, i64 noundef %26) #23
  call void @btrfs_set_64(ptr noundef %20, ptr noundef %24, i32 noundef 44, i64 noundef 0) #23
  %type8 = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 19
  %27 = ptrtoint ptr %type8 to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %type8, align 8
  call void @btrfs_set_64(ptr noundef %20, ptr noundef %24, i32 noundef 36, i64 noundef %28) #23
  %io_align = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 17
  %29 = ptrtoint ptr %io_align to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %io_align, align 8
  call void @btrfs_set_32(ptr noundef %20, ptr noundef %24, i32 noundef 24, i32 noundef %30) #23
  %io_width = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 18
  %31 = ptrtoint ptr %io_width to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %io_width, align 4
  call void @btrfs_set_32(ptr noundef %20, ptr noundef %24, i32 noundef 28, i32 noundef %32) #23
  %sector_size = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 20
  %33 = ptrtoint ptr %sector_size to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %sector_size, align 8
  call void @btrfs_set_32(ptr noundef %20, ptr noundef %24, i32 noundef 32, i32 noundef %34) #23
  %data_seqcount.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 12
  %disk_total_bytes.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 15
  br label %do.body.i

do.body.i:                                        ; preds = %while.end.i.do.body.i_crit_edge, %if.end4
  call fastcc void @seqcount_lockdep_reader_access(ptr noundef %data_seqcount.i) #23
  %35 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %data_seqcount.i, align 4
  %and28.i = and i32 %36, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28.i)
  %tobool.not29.i = icmp eq i32 %and28.i, 0
  br i1 %tobool.not29.i, label %do.body.i.while.end.i_crit_edge, label %do.body.i.do.end.i_crit_edge

do.body.i.do.end.i_crit_edge:                     ; preds = %do.body.i
  br label %do.end.i

do.body.i.while.end.i_crit_edge:                  ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end.i

do.end.i:                                         ; preds = %do.end.i.do.end.i_crit_edge, %do.body.i.do.end.i_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !451
  call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #23, !srcloc !452
  %37 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %data_seqcount.i, align 4
  %and.i = and i32 %38, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.end.i.while.end.i_crit_edge, label %do.end.i.do.end.i_crit_edge

do.end.i.do.end.i_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end.i

do.end.i.while.end.i_crit_edge:                   ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end.i

while.end.i:                                      ; preds = %do.end.i.while.end.i_crit_edge, %do.body.i.while.end.i_crit_edge
  %.lcssa.i = phi i32 [ %36, %do.body.i.while.end.i_crit_edge ], [ %38, %do.end.i.while.end.i_crit_edge ]
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !453
  %39 = ptrtoint ptr %disk_total_bytes.i to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %disk_total_bytes.i, align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !444
  %41 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %data_seqcount.i, align 4
  %cmp.i.i.not.i = icmp eq i32 %42, %.lcssa.i
  br i1 %cmp.i.i.not.i, label %btrfs_device_get_disk_total_bytes.exit, label %while.end.i.do.body.i_crit_edge

while.end.i.do.body.i_crit_edge:                  ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body.i

btrfs_device_get_disk_total_bytes.exit:           ; preds = %while.end.i
  %fs_info.i = getelementptr inbounds %struct.extent_buffer, ptr %20, i32 0, i32 3
  %43 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %fs_info.i, align 8
  %sectorsize.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %44, i32 0, i32 167
  %45 = ptrtoint ptr %sectorsize.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %sectorsize.i, align 4
  %conv.i = zext i32 %46 to i64
  %sub.i = add nsw i64 %conv.i, -1
  %and.i66 = and i64 %sub.i, %40
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i66)
  %cmp.not.i = icmp eq i64 %and.i66, 0
  br i1 %cmp.not.i, label %btrfs_device_get_disk_total_bytes.exit.btrfs_set_device_total_bytes.exit_crit_edge, label %do.end11.i, !prof !423

btrfs_device_get_disk_total_bytes.exit.btrfs_set_device_total_bytes.exit_crit_edge: ; preds = %btrfs_device_get_disk_total_bytes.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_set_device_total_bytes.exit

do.end11.i:                                       ; preds = %btrfs_device_get_disk_total_bytes.exit
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 1672, i32 noundef 9, ptr noundef null) #23
  br label %btrfs_set_device_total_bytes.exit

btrfs_set_device_total_bytes.exit:                ; preds = %do.end11.i, %btrfs_device_get_disk_total_bytes.exit.btrfs_set_device_total_bytes.exit_crit_edge
  call void @btrfs_set_64(ptr noundef %20, ptr noundef %24, i32 noundef 8, i64 noundef %40) #23
  %bytes_used.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 16
  br label %do.body.i70

do.body.i70:                                      ; preds = %while.end.i76.do.body.i70_crit_edge, %btrfs_set_device_total_bytes.exit
  call fastcc void @seqcount_lockdep_reader_access(ptr noundef %data_seqcount.i) #23
  %47 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %data_seqcount.i, align 4
  %and28.i68 = and i32 %48, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28.i68)
  %tobool.not29.i69 = icmp eq i32 %and28.i68, 0
  br i1 %tobool.not29.i69, label %do.body.i70.while.end.i76_crit_edge, label %do.body.i70.do.end.i73_crit_edge

do.body.i70.do.end.i73_crit_edge:                 ; preds = %do.body.i70
  br label %do.end.i73

do.body.i70.while.end.i76_crit_edge:              ; preds = %do.body.i70
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end.i76

do.end.i73:                                       ; preds = %do.end.i73.do.end.i73_crit_edge, %do.body.i70.do.end.i73_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !454
  call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #23, !srcloc !455
  %49 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %data_seqcount.i, align 4
  %and.i71 = and i32 %50, 1
  %tobool.not.i72 = icmp eq i32 %and.i71, 0
  br i1 %tobool.not.i72, label %do.end.i73.while.end.i76_crit_edge, label %do.end.i73.do.end.i73_crit_edge

do.end.i73.do.end.i73_crit_edge:                  ; preds = %do.end.i73
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end.i73

do.end.i73.while.end.i76_crit_edge:               ; preds = %do.end.i73
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end.i76

while.end.i76:                                    ; preds = %do.end.i73.while.end.i76_crit_edge, %do.body.i70.while.end.i76_crit_edge
  %.lcssa.i74 = phi i32 [ %48, %do.body.i70.while.end.i76_crit_edge ], [ %50, %do.end.i73.while.end.i76_crit_edge ]
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !456
  %51 = ptrtoint ptr %bytes_used.i to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %bytes_used.i, align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !444
  %53 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %data_seqcount.i, align 4
  %cmp.i.i.not.i75 = icmp eq i32 %54, %.lcssa.i74
  br i1 %cmp.i.i.not.i75, label %btrfs_device_get_bytes_used.exit, label %while.end.i76.do.body.i70_crit_edge

while.end.i76.do.body.i70_crit_edge:              ; preds = %while.end.i76
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body.i70

btrfs_device_get_bytes_used.exit:                 ; preds = %while.end.i76
  call void @__sanitizer_cov_trace_pc() #25
  call void @btrfs_set_64(ptr noundef %20, ptr noundef %24, i32 noundef 16, i64 noundef %52) #23
  call void @btrfs_set_32(ptr noundef %20, ptr noundef %24, i32 noundef 60, i32 noundef 0) #23
  call void @btrfs_set_8(ptr noundef %20, ptr noundef %24, i32 noundef 64, i8 noundef zeroext 0) #23
  call void @btrfs_set_8(ptr noundef %20, ptr noundef %24, i32 noundef 65, i8 noundef zeroext 0) #23
  call void @btrfs_set_64(ptr noundef %20, ptr noundef %24, i32 noundef 52, i64 noundef 0) #23
  %add.i = add i32 %call.i.i, 167
  %uuid = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 21
  call void @write_extent_buffer(ptr noundef %20, ptr noundef %uuid, i32 noundef %add.i, i32 noundef 16) #23
  %add.i77 = add i32 %call.i.i, 183
  %55 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %fs_info, align 4
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %56, i32 0, i32 100
  %57 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %fs_devices, align 8
  %metadata_uuid = getelementptr inbounds %struct.btrfs_fs_devices, ptr %58, i32 0, i32 1
  call void @write_extent_buffer(ptr noundef %20, ptr noundef %metadata_uuid, i32 noundef %add.i77, i32 noundef 16) #23
  call void @btrfs_mark_buffer_dirty(ptr noundef %20) #23
  br label %out

out:                                              ; preds = %btrfs_device_get_bytes_used.exit, %if.end.out_crit_edge
  %ret.0 = phi i32 [ %call.i, %if.end.out_crit_edge ], [ 0, %btrfs_device_get_bytes_used.exit ]
  call void @btrfs_free_path(ptr noundef nonnull %call) #23
  br label %cleanup

cleanup:                                          ; preds = %out, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %out ], [ -12, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_finish_sprout(ptr noundef %trans) unnamed_addr #4 align 64 {
entry:
  %disk_key.i101 = alloca %struct.btrfs_disk_key, align 8
  %disk_key.i = alloca %struct.btrfs_disk_key, align 8
  %args = alloca %struct.btrfs_dev_lookup_args, align 8
  %key = alloca %struct.btrfs_key, align 8
  %fs_uuid = alloca [16 x i8], align 1
  %dev_uuid = alloca [16 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %args) #23
  %0 = call ptr @memcpy(ptr %args, ptr @__const.read_one_dev.args, i32 24)
  %fs_info1 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %trans, i32 0, i32 16
  %1 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %fs_info1, align 4
  %chunk_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %chunk_root to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %chunk_root, align 8
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #23
  %5 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %6 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %fs_uuid) #23
  %7 = call ptr @memset(ptr %fs_uuid, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %dev_uuid) #23
  %8 = call ptr @memset(ptr %dev_uuid, i32 255, i32 16)
  %call = tail call ptr @btrfs_alloc_path() #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %9 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 1, ptr %key, align 8
  %10 = ptrtoint ptr %6 to i32
  call void @__asan_storeN_noabort(i32 %10, i32 8)
  store i64 0, ptr %6, align 1
  %11 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 -40, ptr %5, align 8
  call void @btrfs_reserve_chunk_metadata(ptr noundef %trans, i1 noundef zeroext false) #23
  %call2117 = call i32 @btrfs_search_slot(ptr noundef %trans, ptr noundef %4, ptr noundef nonnull %key, ptr noundef nonnull %call, i32 noundef 0, i32 noundef 1) #23
  call void @btrfs_trans_release_chunk_metadata(ptr noundef %trans) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2117)
  %cmp118 = icmp slt i32 %call2117, 0
  br i1 %cmp118, label %if.end.error_crit_edge, label %if.end4.lr.ph

if.end.error_crit_edge:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

if.end4.lr.ph:                                    ; preds = %if.end
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %call, i32 0, i32 1
  %12 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i101, i32 0, i32 1
  %13 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i101, i32 0, i32 2
  %uuid = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 1
  %fsid = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 2
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %2, i32 0, i32 100
  %14 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 1
  %15 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 2
  br label %if.end4

if.end4:                                          ; preds = %if.end15.if.end4_crit_edge, %if.end4.lr.ph
  %16 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %call, align 4
  %pages.i = getelementptr inbounds %struct.extent_buffer, ptr %17, i32 0, i32 12
  %18 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %slots, align 4
  %20 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pages.i, align 4
  %call.i111 = call ptr @page_address(ptr noundef %21) #23
  %22 = ptrtoint ptr %17 to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %17, align 8
  %conv.i112 = trunc i64 %23 to i32
  %and.i113 = and i32 %conv.i112, 4095
  %add.ptr.i114 = getelementptr i8, ptr %call.i111, i32 %and.i113
  %nritems.i115 = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i114, i32 0, i32 7
  %24 = ptrtoint ptr %nritems.i115 to i32
  call void @__asan_loadN_noabort(i32 %24, i32 4)
  %25 = load i32, ptr %nritems.i115, align 1
  %26 = call i32 @llvm.bswap.i32(i32 %25) #23
  call void @__sanitizer_cov_trace_cmp4(i32 %19, i32 %26)
  %cmp7.not116 = icmp ult i32 %19, %26
  br i1 %cmp7.not116, label %if.end4.if.end20_crit_edge, label %if.end4.if.then8_crit_edge

if.end4.if.then8_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then8

if.end4.if.end20_crit_edge:                       ; preds = %if.end4
  br label %if.end20

if.then8:                                         ; preds = %if.end55.if.then8_crit_edge, %if.end4.if.then8_crit_edge
  %call.i100 = call i32 @btrfs_next_old_leaf(ptr noundef %4, ptr noundef nonnull %call, i64 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i100)
  %cmp10 = icmp sgt i32 %call.i100, 0
  br i1 %cmp10, label %if.then8.error_crit_edge, label %if.end12

if.then8.error_crit_edge:                         ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

if.end12:                                         ; preds = %if.then8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i100)
  %cmp13 = icmp slt i32 %call.i100, 0
  br i1 %cmp13, label %if.end12.error_crit_edge, label %if.end15

if.end12.error_crit_edge:                         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

if.end15:                                         ; preds = %if.end12
  %27 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %call, align 4
  %29 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %slots, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i) #23
  %mul.i.i.i.i = mul i32 %30, 25
  %add.i.i.i.i = add i32 %mul.i.i.i.i, 101
  %31 = call ptr @memset(ptr %disk_key.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %28, ptr noundef nonnull %disk_key.i, i32 noundef %add.i.i.i.i, i32 noundef 17) #23
  %32 = ptrtoint ptr %15 to i32
  call void @__asan_loadN_noabort(i32 %32, i32 8)
  %33 = load i64, ptr %15, align 1
  %34 = call i64 @llvm.bswap.i64(i64 %33) #23
  %35 = ptrtoint ptr %6 to i32
  call void @__asan_storeN_noabort(i32 %35, i32 8)
  store i64 %34, ptr %6, align 1
  %36 = ptrtoint ptr %14 to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %14, align 8
  %38 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 %37, ptr %5, align 8
  %39 = ptrtoint ptr %disk_key.i to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %disk_key.i, align 8
  %41 = call i64 @llvm.bswap.i64(i64 %40) #23
  %42 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %41, ptr %key, align 8
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i) #23
  call void @btrfs_release_path(ptr noundef nonnull %call) #23
  call void @btrfs_reserve_chunk_metadata(ptr noundef %trans, i1 noundef zeroext false) #23
  %call2 = call i32 @btrfs_search_slot(ptr noundef %trans, ptr noundef %4, ptr noundef nonnull %key, ptr noundef nonnull %call, i32 noundef 0, i32 noundef 1) #23
  call void @btrfs_trans_release_chunk_metadata(ptr noundef %trans) #23
  %cmp = icmp slt i32 %call2, 0
  br i1 %cmp, label %if.end15.error_crit_edge, label %if.end15.if.end4_crit_edge

if.end15.if.end4_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end4

if.end15.error_crit_edge:                         ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

if.end20:                                         ; preds = %if.end55.if.end20_crit_edge, %if.end4.if.end20_crit_edge
  %43 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %slots, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i101) #23
  %mul.i.i.i.i102 = mul i32 %44, 25
  %add.i.i.i.i103 = add i32 %mul.i.i.i.i102, 101
  %45 = call ptr @memset(ptr %disk_key.i101, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %17, ptr noundef nonnull %disk_key.i101, i32 noundef %add.i.i.i.i103, i32 noundef 17) #23
  %46 = ptrtoint ptr %13 to i32
  call void @__asan_loadN_noabort(i32 %46, i32 8)
  %47 = load i64, ptr %13, align 1
  %48 = call i64 @llvm.bswap.i64(i64 %47) #23
  %49 = ptrtoint ptr %6 to i32
  call void @__asan_storeN_noabort(i32 %49, i32 8)
  store i64 %48, ptr %6, align 1
  %50 = ptrtoint ptr %12 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %12, align 8
  %52 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %52)
  store i8 %51, ptr %5, align 8
  %53 = ptrtoint ptr %disk_key.i101 to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %disk_key.i101, align 8
  %55 = call i64 @llvm.bswap.i64(i64 %54) #23
  %56 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %56)
  store i64 %55, ptr %key, align 8
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i101) #23
  call void @__sanitizer_cov_trace_const_cmp8(i64 72057594037927936, i64 %54)
  %cmp24.not = icmp eq i64 %54, 72057594037927936
  call void @__sanitizer_cov_trace_const_cmp1(i8 -40, i8 %51)
  %cmp26.not = icmp eq i8 %51, -40
  %or.cond = select i1 %cmp24.not, i1 %cmp26.not, i1 false
  br i1 %or.cond, label %if.end29, label %if.end20.error_crit_edge

if.end20.error_crit_edge:                         ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

if.end29:                                         ; preds = %if.end20
  %57 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %slots, align 4
  %mul.i.i.i = mul i32 %58, 25
  %add.i.i.i = add i32 %mul.i.i.i, 101
  %59 = inttoptr i32 %add.i.i.i to ptr
  %call.i.i = call i32 @btrfs_get_32(ptr noundef %17, ptr noundef %59, i32 noundef 17) #23
  %add = add i32 %call.i.i, 101
  %60 = inttoptr i32 %add to ptr
  %call.i106 = call i64 @btrfs_get_64(ptr noundef %17, ptr noundef %60, i32 noundef 0) #23
  %61 = ptrtoint ptr %args to i32
  call void @__asan_store8_noabort(i32 %61)
  store i64 %call.i106, ptr %args, align 8
  %add.i = add i32 %call.i.i, 167
  call void @read_extent_buffer(ptr noundef %17, ptr noundef nonnull %dev_uuid, i32 noundef %add.i, i32 noundef 16) #23
  %add.i107 = add i32 %call.i.i, 183
  call void @read_extent_buffer(ptr noundef %17, ptr noundef nonnull %fs_uuid, i32 noundef %add.i107, i32 noundef 16) #23
  %62 = ptrtoint ptr %uuid to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %dev_uuid, ptr %uuid, align 8
  %63 = ptrtoint ptr %fsid to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %fs_uuid, ptr %fsid, align 4
  %64 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %fs_devices, align 8
  %call39 = call ptr @btrfs_find_device(ptr noundef %65, ptr noundef nonnull %args)
  %tobool40.not = icmp eq ptr %call39, null
  br i1 %tobool40.not, label %do.body45, label %do.end51, !prof !424

do.body45:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #25
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2589, 0\0A.popsection", ""() #23, !srcloc !457
  unreachable

do.end51:                                         ; preds = %if.end29
  %fs_devices52 = getelementptr inbounds %struct.btrfs_device, ptr %call39, i32 0, i32 3
  %66 = ptrtoint ptr %fs_devices52 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %fs_devices52, align 8
  %seeding = getelementptr inbounds %struct.btrfs_fs_devices, ptr %67, i32 0, i32 16
  %68 = ptrtoint ptr %seeding to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %seeding, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %69)
  %tobool53.not = icmp eq i8 %69, 0
  br i1 %tobool53.not, label %do.end51.if.end55_crit_edge, label %if.then54

do.end51.if.end55_crit_edge:                      ; preds = %do.end51
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end55

if.then54:                                        ; preds = %do.end51
  call void @__sanitizer_cov_trace_pc() #25
  %generation = getelementptr inbounds %struct.btrfs_device, ptr %call39, i32 0, i32 6
  %70 = ptrtoint ptr %generation to i32
  call void @__asan_load8_noabort(i32 %70)
  %71 = load i64, ptr %generation, align 8
  call void @btrfs_set_64(ptr noundef %17, ptr noundef %60, i32 noundef 44, i64 noundef %71) #23
  call void @btrfs_mark_buffer_dirty(ptr noundef %17) #23
  br label %if.end55

if.end55:                                         ; preds = %if.then54, %do.end51.if.end55_crit_edge
  %72 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %slots, align 4
  %inc = add i32 %73, 1
  store i32 %inc, ptr %slots, align 4
  %74 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %pages.i, align 4
  %call.i = call ptr @page_address(ptr noundef %75) #23
  %76 = ptrtoint ptr %17 to i32
  call void @__asan_load8_noabort(i32 %76)
  %77 = load i64, ptr %17, align 8
  %conv.i = trunc i64 %77 to i32
  %and.i = and i32 %conv.i, 4095
  %add.ptr.i = getelementptr i8, ptr %call.i, i32 %and.i
  %nritems.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i, i32 0, i32 7
  %78 = ptrtoint ptr %nritems.i to i32
  call void @__asan_loadN_noabort(i32 %78, i32 4)
  %79 = load i32, ptr %nritems.i, align 1
  %80 = call i32 @llvm.bswap.i32(i32 %79) #23
  %cmp7.not = icmp ult i32 %inc, %80
  br i1 %cmp7.not, label %if.end55.if.end20_crit_edge, label %if.end55.if.then8_crit_edge

if.end55.if.then8_crit_edge:                      ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then8

if.end55.if.end20_crit_edge:                      ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end20

error:                                            ; preds = %if.end20.error_crit_edge, %if.end15.error_crit_edge, %if.end12.error_crit_edge, %if.then8.error_crit_edge, %if.end.error_crit_edge
  %ret.0 = phi i32 [ %call2117, %if.end.error_crit_edge ], [ 0, %if.end20.error_crit_edge ], [ %call2, %if.end15.error_crit_edge ], [ %call.i100, %if.end12.error_crit_edge ], [ 0, %if.then8.error_crit_edge ]
  call void @btrfs_free_path(ptr noundef nonnull %call) #23
  br label %cleanup

cleanup:                                          ; preds = %error, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %error ], [ -12, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %dev_uuid) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %fs_uuid) #23
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args) #23
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_sysfs_update_sprout_fsid(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_commit_transaction(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_write(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_relocate_sys_chunks(ptr noundef %fs_info) unnamed_addr #4 align 64 {
entry:
  %disk_key.i = alloca %struct.btrfs_disk_key, align 8
  %key = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %chunk_root1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 3
  %0 = ptrtoint ptr %chunk_root1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chunk_root1, align 8
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #23
  %2 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %3 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %call = tail call ptr @btrfs_alloc_path() #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %again.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

again.preheader:                                  ; preds = %entry
  %reclaim_bgs_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 165
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %call, i32 0, i32 1
  %4 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 2
  br label %again

again:                                            ; preds = %while.end.again_crit_edge, %again.preheader
  %retried.0.off0 = phi i1 [ true, %while.end.again_crit_edge ], [ false, %again.preheader ]
  %5 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 256, ptr %key, align 8
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_storeN_noabort(i32 %6, i32 8)
  store i64 -1, ptr %3, align 1
  %7 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 -28, ptr %2, align 8
  call void @mutex_lock_nested(ptr noundef %reclaim_bgs_lock, i32 noundef 0) #23
  %call2167 = call i32 @btrfs_search_slot(ptr noundef null, ptr noundef %1, ptr noundef nonnull %key, ptr noundef nonnull %call, i32 noundef 0, i32 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2167)
  %cmp168 = icmp slt i32 %call2167, 0
  br i1 %cmp168, label %again.if.then3_crit_edge, label %again.do.body_crit_edge

again.do.body_crit_edge:                          ; preds = %again
  br label %do.body

again.if.then3_crit_edge:                         ; preds = %again
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then3

if.then3:                                         ; preds = %if.end69.if.then3_crit_edge, %again.if.then3_crit_edge
  %call2.lcssa = phi i32 [ %call2, %if.end69.if.then3_crit_edge ], [ %call2167, %again.if.then3_crit_edge ]
  call void @mutex_unlock(ptr noundef %reclaim_bgs_lock) #23
  br label %error

do.body:                                          ; preds = %if.end69.do.body_crit_edge, %again.do.body_crit_edge
  %call2170 = phi i32 [ %call2, %if.end69.do.body_crit_edge ], [ %call2167, %again.do.body_crit_edge ]
  %failed.1169 = phi i32 [ %failed.2, %if.end69.do.body_crit_edge ], [ 0, %again.do.body_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2170)
  %cmp6 = icmp eq i32 %call2170, 0
  br i1 %cmp6, label %do.body10, label %do.end16, !prof !424

do.body10:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #25
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3342, 0\0A.popsection", ""() #23, !srcloc !458
  unreachable

do.end16:                                         ; preds = %do.body
  %8 = ptrtoint ptr %key to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %key, align 8
  %10 = ptrtoint ptr %2 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %2, align 8
  %conv = zext i8 %11 to i32
  %call19 = call i32 @btrfs_previous_item(ptr noundef %1, ptr noundef nonnull %call, i64 noundef %9, i32 noundef %conv) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.end31, label %if.end23

if.end23:                                         ; preds = %do.end16
  call void @mutex_unlock(ptr noundef %reclaim_bgs_lock) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %cmp24 = icmp slt i32 %call19, 0
  br i1 %cmp24, label %if.end23.error_crit_edge, label %if.end23.while.end_crit_edge

if.end23.while.end_crit_edge:                     ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

if.end23.error_crit_edge:                         ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

if.end31:                                         ; preds = %do.end16
  %12 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %call, align 4
  %14 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %slots, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i) #23
  %mul.i.i.i.i = mul i32 %15, 25
  %add.i.i.i.i = add i32 %mul.i.i.i.i, 101
  %16 = call ptr @memset(ptr %disk_key.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %13, ptr noundef nonnull %disk_key.i, i32 noundef %add.i.i.i.i, i32 noundef 17) #23
  %17 = ptrtoint ptr %4 to i32
  call void @__asan_loadN_noabort(i32 %17, i32 8)
  %18 = load i64, ptr %4, align 1
  %19 = call i64 @llvm.bswap.i64(i64 %18) #23
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i) #23
  %20 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %slots, align 4
  %mul.i.i.i = mul i32 %21, 25
  %add.i.i.i = add i32 %mul.i.i.i, 101
  %22 = inttoptr i32 %add.i.i.i to ptr
  %call.i.i = call i32 @btrfs_get_32(ptr noundef %13, ptr noundef %22, i32 noundef 17) #23
  %add = add i32 %call.i.i, 101
  %23 = inttoptr i32 %add to ptr
  %call.i = call i64 @btrfs_get_64(ptr noundef %13, ptr noundef %23, i32 noundef 24) #23
  call void @btrfs_release_path(ptr noundef nonnull %call) #23
  %and = and i64 %call.i, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool37.not = icmp eq i64 %and, 0
  br i1 %tobool37.not, label %if.end31.if.end63_crit_edge, label %if.then38

if.end31.if.end63_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end63

if.then38:                                        ; preds = %if.end31
  %call40 = call i32 @btrfs_relocate_chunk(ptr noundef %fs_info, i64 noundef %19)
  %24 = zext i32 %call40 to i64
  call void @__sanitizer_cov_trace_switch(i64 %24, ptr @__sancov_gen_cov_switch_values.191)
  switch i32 %call40, label %do.body53 [
    i32 -28, label %if.then43
    i32 0, label %if.then38.if.end63_crit_edge
  ], !prof !459

if.then38.if.end63_crit_edge:                     ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end63

if.then43:                                        ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #25
  %inc = add i32 %failed.1169, 1
  br label %if.end63

do.body53:                                        ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #25
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3366, 0\0A.popsection", ""() #23, !srcloc !460
  unreachable

if.end63:                                         ; preds = %if.then43, %if.then38.if.end63_crit_edge, %if.end31.if.end63_crit_edge
  %failed.2 = phi i32 [ %inc, %if.then43 ], [ %failed.1169, %if.end31.if.end63_crit_edge ], [ %failed.1169, %if.then38.if.end63_crit_edge ]
  call void @mutex_unlock(ptr noundef %reclaim_bgs_lock) #23
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %18)
  %cmp66 = icmp eq i64 %18, 0
  br i1 %cmp66, label %if.end63.while.end_crit_edge, label %if.end69

if.end63.while.end_crit_edge:                     ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

if.end69:                                         ; preds = %if.end63
  %sub = add i64 %19, -1
  %25 = ptrtoint ptr %3 to i32
  call void @__asan_storeN_noabort(i32 %25, i32 8)
  store i64 %sub, ptr %3, align 1
  call void @mutex_lock_nested(ptr noundef %reclaim_bgs_lock, i32 noundef 0) #23
  %call2 = call i32 @btrfs_search_slot(ptr noundef null, ptr noundef %1, ptr noundef nonnull %key, ptr noundef nonnull %call, i32 noundef 0, i32 noundef 0) #23
  %cmp = icmp slt i32 %call2, 0
  br i1 %cmp, label %if.end69.if.then3_crit_edge, label %if.end69.do.body_crit_edge

if.end69.do.body_crit_edge:                       ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body

if.end69.if.then3_crit_edge:                      ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then3

while.end:                                        ; preds = %if.end63.while.end_crit_edge, %if.end23.while.end_crit_edge
  %failed.3 = phi i32 [ %failed.1169, %if.end23.while.end_crit_edge ], [ %failed.2, %if.end63.while.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %failed.3)
  %tobool72.not = icmp eq i32 %failed.3, 0
  %brmerge = or i1 %retried.0.off0, %tobool72.not
  br i1 %brmerge, label %if.else75, label %while.end.again_crit_edge

while.end.again_crit_edge:                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %again

if.else75:                                        ; preds = %while.end
  %not.tobool72.not = xor i1 %tobool72.not, true
  %spec.select = and i1 %retried.0.off0, %not.tobool72.not
  br i1 %spec.select, label %do.end94, label %if.else75.error_crit_edge, !prof !424

if.else75.error_crit_edge:                        ; preds = %if.else75
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

do.end94:                                         ; preds = %if.else75
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 3379, i32 noundef 9, ptr noundef null) #23
  br label %error

error:                                            ; preds = %do.end94, %if.else75.error_crit_edge, %if.end23.error_crit_edge, %if.then3
  %ret.0 = phi i32 [ %call2.lcssa, %if.then3 ], [ -28, %do.end94 ], [ 0, %if.else75.error_crit_edge ], [ %call19, %if.end23.error_crit_edge ]
  call void @btrfs_free_path(ptr noundef nonnull %call) #23
  br label %cleanup

cleanup:                                          ; preds = %error, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %error ], [ -12, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #23
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @__btrfs_handle_fs_error(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_attach_transaction(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_end_transaction(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_grow_device(ptr noundef %trans, ptr noundef %device, i64 noundef %new_size) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info1 = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 4
  %0 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info1, align 4
  %super_copy2 = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 43
  %2 = ptrtoint ptr %super_copy2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %super_copy2, align 8
  %dev_state = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 10
  %4 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %dev_state, align 4
  %and1.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 167
  %6 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sectorsize, align 4
  %sub = add i32 %7, -1
  %conv = zext i32 %sub to i64
  %neg = xor i64 %conv, -1
  %and = and i64 %neg, %new_size
  %chunk_mutex = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 50
  tail call void @mutex_lock_nested(ptr noundef %chunk_mutex, i32 noundef 0) #23
  %total_bytes.i = getelementptr inbounds %struct.btrfs_super_block, ptr %3, i32 0, i32 10
  %8 = ptrtoint ptr %total_bytes.i to i32
  call void @__asan_loadN_noabort(i32 %8, i32 8)
  %9 = load i64, ptr %total_bytes.i, align 1
  %10 = tail call i64 @llvm.bswap.i64(i64 %9) #23
  %total_bytes = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 14
  %11 = ptrtoint ptr %total_bytes to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %total_bytes, align 8
  %sub4 = sub i64 %and, %12
  %13 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sectorsize, align 4
  %sub6 = add i32 %14, -1
  %conv7 = zext i32 %sub6 to i64
  %neg8 = xor i64 %conv7, -1
  %and9 = and i64 %sub4, %neg8
  call void @__sanitizer_cov_trace_cmp8(i64 %and, i64 %12)
  %cmp.not = icmp ugt i64 %and, %12
  br i1 %cmp.not, label %lor.lhs.false, label %if.end.if.then15_crit_edge

if.end.if.then15_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then15

lor.lhs.false:                                    ; preds = %if.end
  %15 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %dev_state, align 4
  %17 = and i32 %16, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool14.not = icmp eq i32 %17, 0
  br i1 %tobool14.not, label %if.end17, label %lor.lhs.false.if.then15_crit_edge

lor.lhs.false.if.then15_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then15

if.then15:                                        ; preds = %lor.lhs.false.if.then15_crit_edge, %if.end.if.then15_crit_edge
  tail call void @mutex_unlock(ptr noundef %chunk_mutex) #23
  br label %cleanup

if.end17:                                         ; preds = %lor.lhs.false
  %add = add i64 %and9, %10
  %and22 = and i64 %add, %neg8
  %18 = tail call i64 @llvm.bswap.i64(i64 %and22) #23
  %19 = ptrtoint ptr %total_bytes.i to i32
  call void @__asan_storeN_noabort(i32 %19, i32 8)
  store i64 %18, ptr %total_bytes.i, align 1
  %fs_devices = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 3
  %20 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %fs_devices, align 8
  %total_rw_bytes = getelementptr inbounds %struct.btrfs_fs_devices, ptr %21, i32 0, i32 8
  %22 = ptrtoint ptr %total_rw_bytes to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %total_rw_bytes, align 8
  %add23 = add i64 %23, %and9
  store i64 %add23, ptr %total_rw_bytes, align 8
  tail call fastcc void @btrfs_device_set_total_bytes(ptr noundef %device, i64 noundef %and)
  tail call fastcc void @btrfs_device_set_disk_total_bytes(ptr noundef %device, i64 noundef %and)
  %24 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %fs_info1, align 4
  tail call void @btrfs_clear_space_info_full(ptr noundef %25) #23
  %post_commit_list = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 2
  %26 = ptrtoint ptr %post_commit_list to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile ptr, ptr %post_commit_list, align 4
  %cmp.i.not = icmp eq ptr %27, %post_commit_list
  br i1 %cmp.i.not, label %if.then27, label %if.end17.if.end29_crit_edge

if.end17.if.end29_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end29

if.then27:                                        ; preds = %if.end17
  %transaction = getelementptr inbounds %struct.btrfs_trans_handle, ptr %trans, i32 0, i32 4
  %28 = ptrtoint ptr %transaction to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %transaction, align 4
  %dev_update_list = getelementptr inbounds %struct.btrfs_transaction, ptr %29, i32 0, i32 13
  %prev.i = getelementptr inbounds %struct.btrfs_transaction, ptr %29, i32 0, i32 13, i32 1
  %30 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %post_commit_list, ptr noundef %31, ptr noundef %dev_update_list) #23
  br i1 %call.i.i, label %if.end.i.i, label %if.then27.if.end29_crit_edge

if.then27.if.end29_crit_edge:                     ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end29

if.end.i.i:                                       ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #25
  %32 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %post_commit_list, ptr %prev.i, align 4
  %33 = ptrtoint ptr %post_commit_list to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %dev_update_list, ptr %post_commit_list, align 4
  %prev3.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 2, i32 1
  %34 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %31, ptr %prev3.i.i, align 4
  %35 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile ptr %post_commit_list, ptr %31, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.end.i.i, %if.then27.if.end29_crit_edge, %if.end17.if.end29_crit_edge
  tail call void @mutex_unlock(ptr noundef %chunk_mutex) #23
  tail call void @btrfs_reserve_chunk_metadata(ptr noundef %trans, i1 noundef zeroext false) #23
  %call31 = tail call fastcc i32 @btrfs_update_device(ptr noundef %trans, ptr noundef %device)
  tail call void @btrfs_trans_release_chunk_metadata(ptr noundef %trans) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end29, %if.then15, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %if.then15 ], [ %call31, %if.end29 ], [ -13, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @btrfs_device_set_total_bytes(ptr noundef %dev, i64 noundef %size) unnamed_addr #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !461
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %4 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %entry.__seqprop_assert.exit_crit_edge, label %land.lhs.true.i

entry.__seqprop_assert.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %__seqprop_assert.exit

land.lhs.true.i:                                  ; preds = %entry
  %5 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %8, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !462
  %9 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i, align 4
  %add.i27 = add i32 %14, ptrtoint (ptr @lockdep_recursion to i32)
  %15 = inttoptr i32 %add.i27 to ptr
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %15, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !463
  %18 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i7.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i7.i to ptr
  %preempt_count.i.i8.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i8.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i8.i, align 4
  %sub.i.i = add i32 %21, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i8.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool20.not.i = icmp eq i32 %17, 0
  br i1 %tobool20.not.i, label %land.rhs.i, label %land.lhs.true.i.__seqprop_assert.exit_crit_edge

land.lhs.true.i.__seqprop_assert.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__seqprop_assert.exit

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %22 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i28 = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i28 to ptr
  %preempt_count.i.i29 = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i29 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i29, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp.i = icmp eq i32 %25, 0
  br i1 %cmp.i, label %land.rhs22.i, label %land.rhs.i.__seqprop_assert.exit_crit_edge

land.rhs.i.__seqprop_assert.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__seqprop_assert.exit

land.rhs22.i:                                     ; preds = %land.rhs.i
  %26 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i9.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i9.i to ptr
  %preempt_count.i.i10.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i10.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i10.i, align 4
  %add.i11.i = add i32 %29, 1
  store volatile i32 %add.i11.i, ptr %preempt_count.i.i10.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !464
  %30 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cpu.i, align 4
  %arrayidx46.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %31
  %32 = ptrtoint ptr %arrayidx46.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx46.i, align 4
  %add47.i = add i32 %33, ptrtoint (ptr @hardirqs_enabled to i32)
  %34 = inttoptr i32 %add47.i to ptr
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %34, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !465
  %37 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i12.i = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i12.i to ptr
  %preempt_count.i.i13.i = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i13.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i13.i, align 4
  %sub.i14.i = add i32 %40, -1
  store volatile i32 %sub.i14.i, ptr %preempt_count.i.i13.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool54.not.i = icmp eq i32 %36, 0
  br i1 %tobool54.not.i, label %land.rhs22.i.__seqprop_assert.exit_crit_edge, label %land.rhs58.i

land.rhs22.i.__seqprop_assert.exit_crit_edge:     ; preds = %land.rhs22.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__seqprop_assert.exit

land.rhs58.i:                                     ; preds = %land.rhs22.i
  %.b1.i = load i1, ptr @__seqprop_assert.__already_done, align 1
  br i1 %.b1.i, label %land.rhs58.i.__seqprop_assert.exit_crit_edge, label %if.then.i, !prof !423

land.rhs58.i.__seqprop_assert.exit_crit_edge:     ; preds = %land.rhs58.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__seqprop_assert.exit

if.then.i:                                        ; preds = %land.rhs58.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @__seqprop_assert.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.101, i32 noundef 271, i32 noundef 9, ptr noundef null) #23
  br label %__seqprop_assert.exit

__seqprop_assert.exit:                            ; preds = %if.then.i, %land.rhs58.i.__seqprop_assert.exit_crit_edge, %land.rhs22.i.__seqprop_assert.exit_crit_edge, %land.rhs.i.__seqprop_assert.exit_crit_edge, %land.lhs.true.i.__seqprop_assert.exit_crit_edge, %entry.__seqprop_assert.exit_crit_edge
  %data_seqcount = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 12
  %41 = ptrtoint ptr %data_seqcount to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %data_seqcount, align 4
  %inc.i.i.i = add i32 %42, 1
  store i32 %inc.i.i.i, ptr %data_seqcount, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !466
  %dep_map.i.i = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 12, i32 1
  %43 = tail call ptr @llvm.returnaddress(i32 0) #23
  %44 = ptrtoint ptr %43 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %44) #23
  %total_bytes = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 14
  %45 = ptrtoint ptr %total_bytes to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %size, ptr %total_bytes, align 8
  tail call void @lock_release(ptr noundef %dep_map.i.i, i32 noundef %44) #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !467
  %46 = ptrtoint ptr %data_seqcount to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %data_seqcount, align 4
  %inc.i.i = add i32 %47, 1
  store i32 %inc.i.i, ptr %data_seqcount, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !468
  %48 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i25 = and i32 %48, -16384
  %49 = inttoptr i32 %and.i.i.i25 to ptr
  %preempt_count.i.i26 = getelementptr inbounds %struct.thread_info, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %preempt_count.i.i26 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %preempt_count.i.i26, align 4
  %sub.i = add i32 %51, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i26, align 4
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @btrfs_device_set_disk_total_bytes(ptr noundef %dev, i64 noundef %size) unnamed_addr #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !469
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %4 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %entry.__seqprop_assert.exit_crit_edge, label %land.lhs.true.i

entry.__seqprop_assert.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %__seqprop_assert.exit

land.lhs.true.i:                                  ; preds = %entry
  %5 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %8, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !462
  %9 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i, align 4
  %add.i27 = add i32 %14, ptrtoint (ptr @lockdep_recursion to i32)
  %15 = inttoptr i32 %add.i27 to ptr
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %15, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !463
  %18 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i7.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i7.i to ptr
  %preempt_count.i.i8.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i8.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i8.i, align 4
  %sub.i.i = add i32 %21, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i8.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool20.not.i = icmp eq i32 %17, 0
  br i1 %tobool20.not.i, label %land.rhs.i, label %land.lhs.true.i.__seqprop_assert.exit_crit_edge

land.lhs.true.i.__seqprop_assert.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__seqprop_assert.exit

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %22 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i28 = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i28 to ptr
  %preempt_count.i.i29 = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i29 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i29, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp.i = icmp eq i32 %25, 0
  br i1 %cmp.i, label %land.rhs22.i, label %land.rhs.i.__seqprop_assert.exit_crit_edge

land.rhs.i.__seqprop_assert.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__seqprop_assert.exit

land.rhs22.i:                                     ; preds = %land.rhs.i
  %26 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i9.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i9.i to ptr
  %preempt_count.i.i10.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i10.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i10.i, align 4
  %add.i11.i = add i32 %29, 1
  store volatile i32 %add.i11.i, ptr %preempt_count.i.i10.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !464
  %30 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cpu.i, align 4
  %arrayidx46.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %31
  %32 = ptrtoint ptr %arrayidx46.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx46.i, align 4
  %add47.i = add i32 %33, ptrtoint (ptr @hardirqs_enabled to i32)
  %34 = inttoptr i32 %add47.i to ptr
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %34, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !465
  %37 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i12.i = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i12.i to ptr
  %preempt_count.i.i13.i = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i13.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i13.i, align 4
  %sub.i14.i = add i32 %40, -1
  store volatile i32 %sub.i14.i, ptr %preempt_count.i.i13.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool54.not.i = icmp eq i32 %36, 0
  br i1 %tobool54.not.i, label %land.rhs22.i.__seqprop_assert.exit_crit_edge, label %land.rhs58.i

land.rhs22.i.__seqprop_assert.exit_crit_edge:     ; preds = %land.rhs22.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__seqprop_assert.exit

land.rhs58.i:                                     ; preds = %land.rhs22.i
  %.b1.i = load i1, ptr @__seqprop_assert.__already_done, align 1
  br i1 %.b1.i, label %land.rhs58.i.__seqprop_assert.exit_crit_edge, label %if.then.i, !prof !423

land.rhs58.i.__seqprop_assert.exit_crit_edge:     ; preds = %land.rhs58.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__seqprop_assert.exit

if.then.i:                                        ; preds = %land.rhs58.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @__seqprop_assert.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.101, i32 noundef 271, i32 noundef 9, ptr noundef null) #23
  br label %__seqprop_assert.exit

__seqprop_assert.exit:                            ; preds = %if.then.i, %land.rhs58.i.__seqprop_assert.exit_crit_edge, %land.rhs22.i.__seqprop_assert.exit_crit_edge, %land.rhs.i.__seqprop_assert.exit_crit_edge, %land.lhs.true.i.__seqprop_assert.exit_crit_edge, %entry.__seqprop_assert.exit_crit_edge
  %data_seqcount = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 12
  %41 = ptrtoint ptr %data_seqcount to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %data_seqcount, align 4
  %inc.i.i.i = add i32 %42, 1
  store i32 %inc.i.i.i, ptr %data_seqcount, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !466
  %dep_map.i.i = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 12, i32 1
  %43 = tail call ptr @llvm.returnaddress(i32 0) #23
  %44 = ptrtoint ptr %43 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %44) #23
  %disk_total_bytes = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 15
  %45 = ptrtoint ptr %disk_total_bytes to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %size, ptr %disk_total_bytes, align 8
  tail call void @lock_release(ptr noundef %dep_map.i.i, i32 noundef %44) #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !467
  %46 = ptrtoint ptr %data_seqcount to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %data_seqcount, align 4
  %inc.i.i = add i32 %47, 1
  store i32 %inc.i.i, ptr %data_seqcount, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !470
  %48 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i25 = and i32 %48, -16384
  %49 = inttoptr i32 %and.i.i.i25 to ptr
  %preempt_count.i.i26 = getelementptr inbounds %struct.thread_info, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %preempt_count.i.i26 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %preempt_count.i.i26, align 4
  %sub.i = add i32 %51, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i26, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_reserve_chunk_metadata(ptr noundef, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_update_device(ptr noundef %trans, ptr noundef %device) unnamed_addr #9 align 64 {
entry:
  %key = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 4
  %0 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info, align 4
  %chunk_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %chunk_root to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %chunk_root, align 8
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #23
  %call = tail call ptr @btrfs_alloc_path() #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %5 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %6 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 1, ptr %key, align 8
  %7 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 -40, ptr %5, align 8
  %devid = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 13
  %8 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %devid, align 8
  %10 = ptrtoint ptr %4 to i32
  call void @__asan_storeN_noabort(i32 %10, i32 8)
  store i64 %9, ptr %4, align 1
  %call1 = call i32 @btrfs_search_slot(ptr noundef %trans, ptr noundef %3, ptr noundef nonnull %key, ptr noundef nonnull %call, i32 noundef 0, i32 noundef 1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %if.end.out_crit_edge, label %if.end3

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp4.not = icmp eq i32 %call1, 0
  br i1 %cmp4.not, label %if.end6, label %if.end3.out_crit_edge

if.end3.out_crit_edge:                            ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end6:                                          ; preds = %if.end3
  %11 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %call, align 4
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %call, i32 0, i32 1
  %13 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %slots, align 4
  %mul.i.i.i = mul i32 %14, 25
  %add.i.i.i = add i32 %mul.i.i.i, 101
  %15 = inttoptr i32 %add.i.i.i to ptr
  %call.i.i = call i32 @btrfs_get_32(ptr noundef %12, ptr noundef %15, i32 noundef 17) #23
  %add = add i32 %call.i.i, 101
  %16 = inttoptr i32 %add to ptr
  %17 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %devid, align 8
  call void @btrfs_set_64(ptr noundef %12, ptr noundef %16, i32 noundef 0, i64 noundef %18) #23
  %type10 = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 19
  %19 = ptrtoint ptr %type10 to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %type10, align 8
  call void @btrfs_set_64(ptr noundef %12, ptr noundef %16, i32 noundef 36, i64 noundef %20) #23
  %io_align = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 17
  %21 = ptrtoint ptr %io_align to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %io_align, align 8
  call void @btrfs_set_32(ptr noundef %12, ptr noundef %16, i32 noundef 24, i32 noundef %22) #23
  %io_width = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 18
  %23 = ptrtoint ptr %io_width to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %io_width, align 4
  call void @btrfs_set_32(ptr noundef %12, ptr noundef %16, i32 noundef 28, i32 noundef %24) #23
  %sector_size = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 20
  %25 = ptrtoint ptr %sector_size to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %sector_size, align 8
  call void @btrfs_set_32(ptr noundef %12, ptr noundef %16, i32 noundef 32, i32 noundef %26) #23
  %data_seqcount.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 12
  %disk_total_bytes.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 15
  br label %do.body.i

do.body.i:                                        ; preds = %while.end.i.do.body.i_crit_edge, %if.end6
  call fastcc void @seqcount_lockdep_reader_access(ptr noundef %data_seqcount.i) #23
  %27 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %data_seqcount.i, align 4
  %and28.i = and i32 %28, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28.i)
  %tobool.not29.i = icmp eq i32 %and28.i, 0
  br i1 %tobool.not29.i, label %do.body.i.while.end.i_crit_edge, label %do.body.i.do.end.i_crit_edge

do.body.i.do.end.i_crit_edge:                     ; preds = %do.body.i
  br label %do.end.i

do.body.i.while.end.i_crit_edge:                  ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end.i

do.end.i:                                         ; preds = %do.end.i.do.end.i_crit_edge, %do.body.i.do.end.i_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !451
  call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #23, !srcloc !452
  %29 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %data_seqcount.i, align 4
  %and.i = and i32 %30, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.end.i.while.end.i_crit_edge, label %do.end.i.do.end.i_crit_edge

do.end.i.do.end.i_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end.i

do.end.i.while.end.i_crit_edge:                   ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end.i

while.end.i:                                      ; preds = %do.end.i.while.end.i_crit_edge, %do.body.i.while.end.i_crit_edge
  %.lcssa.i = phi i32 [ %28, %do.body.i.while.end.i_crit_edge ], [ %30, %do.end.i.while.end.i_crit_edge ]
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !453
  %31 = ptrtoint ptr %disk_total_bytes.i to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %disk_total_bytes.i, align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !444
  %33 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %data_seqcount.i, align 4
  %cmp.i.i.not.i = icmp eq i32 %34, %.lcssa.i
  br i1 %cmp.i.i.not.i, label %btrfs_device_get_disk_total_bytes.exit, label %while.end.i.do.body.i_crit_edge

while.end.i.do.body.i_crit_edge:                  ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body.i

btrfs_device_get_disk_total_bytes.exit:           ; preds = %while.end.i
  %fs_info.i = getelementptr inbounds %struct.extent_buffer, ptr %12, i32 0, i32 3
  %35 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %fs_info.i, align 8
  %sectorsize.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %36, i32 0, i32 167
  %37 = ptrtoint ptr %sectorsize.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %sectorsize.i, align 4
  %conv.i = zext i32 %38 to i64
  %sub.i = add nsw i64 %conv.i, -1
  %and.i46 = and i64 %sub.i, %32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i46)
  %cmp.not.i = icmp eq i64 %and.i46, 0
  br i1 %cmp.not.i, label %btrfs_device_get_disk_total_bytes.exit.btrfs_set_device_total_bytes.exit_crit_edge, label %do.end11.i, !prof !423

btrfs_device_get_disk_total_bytes.exit.btrfs_set_device_total_bytes.exit_crit_edge: ; preds = %btrfs_device_get_disk_total_bytes.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_set_device_total_bytes.exit

do.end11.i:                                       ; preds = %btrfs_device_get_disk_total_bytes.exit
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 1672, i32 noundef 9, ptr noundef null) #23
  br label %btrfs_set_device_total_bytes.exit

btrfs_set_device_total_bytes.exit:                ; preds = %do.end11.i, %btrfs_device_get_disk_total_bytes.exit.btrfs_set_device_total_bytes.exit_crit_edge
  call void @btrfs_set_64(ptr noundef %12, ptr noundef %16, i32 noundef 8, i64 noundef %32) #23
  %bytes_used.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 16
  br label %do.body.i50

do.body.i50:                                      ; preds = %while.end.i56.do.body.i50_crit_edge, %btrfs_set_device_total_bytes.exit
  call fastcc void @seqcount_lockdep_reader_access(ptr noundef %data_seqcount.i) #23
  %39 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %data_seqcount.i, align 4
  %and28.i48 = and i32 %40, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28.i48)
  %tobool.not29.i49 = icmp eq i32 %and28.i48, 0
  br i1 %tobool.not29.i49, label %do.body.i50.while.end.i56_crit_edge, label %do.body.i50.do.end.i53_crit_edge

do.body.i50.do.end.i53_crit_edge:                 ; preds = %do.body.i50
  br label %do.end.i53

do.body.i50.while.end.i56_crit_edge:              ; preds = %do.body.i50
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end.i56

do.end.i53:                                       ; preds = %do.end.i53.do.end.i53_crit_edge, %do.body.i50.do.end.i53_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !454
  call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #23, !srcloc !455
  %41 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %data_seqcount.i, align 4
  %and.i51 = and i32 %42, 1
  %tobool.not.i52 = icmp eq i32 %and.i51, 0
  br i1 %tobool.not.i52, label %do.end.i53.while.end.i56_crit_edge, label %do.end.i53.do.end.i53_crit_edge

do.end.i53.do.end.i53_crit_edge:                  ; preds = %do.end.i53
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end.i53

do.end.i53.while.end.i56_crit_edge:               ; preds = %do.end.i53
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end.i56

while.end.i56:                                    ; preds = %do.end.i53.while.end.i56_crit_edge, %do.body.i50.while.end.i56_crit_edge
  %.lcssa.i54 = phi i32 [ %40, %do.body.i50.while.end.i56_crit_edge ], [ %42, %do.end.i53.while.end.i56_crit_edge ]
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !456
  %43 = ptrtoint ptr %bytes_used.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %bytes_used.i, align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !444
  %45 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %data_seqcount.i, align 4
  %cmp.i.i.not.i55 = icmp eq i32 %46, %.lcssa.i54
  br i1 %cmp.i.i.not.i55, label %btrfs_device_get_bytes_used.exit, label %while.end.i56.do.body.i50_crit_edge

while.end.i56.do.body.i50_crit_edge:              ; preds = %while.end.i56
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body.i50

btrfs_device_get_bytes_used.exit:                 ; preds = %while.end.i56
  call void @__sanitizer_cov_trace_pc() #25
  call void @btrfs_set_64(ptr noundef %12, ptr noundef %16, i32 noundef 16, i64 noundef %44) #23
  call void @btrfs_mark_buffer_dirty(ptr noundef %12) #23
  br label %out

out:                                              ; preds = %btrfs_device_get_bytes_used.exit, %if.end3.out_crit_edge, %if.end.out_crit_edge
  %ret.0 = phi i32 [ %call1, %if.end.out_crit_edge ], [ 0, %btrfs_device_get_bytes_used.exit ], [ -2, %if.end3.out_crit_edge ]
  call void @btrfs_free_path(ptr noundef nonnull %call) #23
  br label %cleanup

cleanup:                                          ; preds = %out, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %out ], [ -12, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #23
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_trans_release_chunk_metadata(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @btrfs_get_chunk_map(ptr noundef %fs_info, i64 noundef %logical, i64 noundef %length) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %mapping_tree = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 19
  %lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 19, i32 2
  tail call void @_raw_read_lock(ptr noundef %lock) #23
  %call = tail call ptr @lookup_extent_mapping(ptr noundef %mapping_tree, i64 noundef %logical, i64 noundef %length) #23
  tail call void @_raw_read_unlock(ptr noundef %lock) #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.24, i64 noundef %logical, i64 noundef %length) #28
  br label %cleanup

if.end:                                           ; preds = %entry
  %start = getelementptr inbounds %struct.extent_map, ptr %call, i32 0, i32 1
  %0 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %start, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %1, i64 %logical)
  %cmp = icmp ugt i64 %1, %logical
  br i1 %cmp, label %if.end.if.then5_crit_edge, label %lor.lhs.false

if.end.if.then5_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then5

lor.lhs.false:                                    ; preds = %if.end
  %len = getelementptr inbounds %struct.extent_map, ptr %call, i32 0, i32 2
  %2 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %len, align 8
  %add = add i64 %3, %1
  call void @__sanitizer_cov_trace_cmp8(i64 %add, i64 %logical)
  %cmp4 = icmp ult i64 %add, %logical
  br i1 %cmp4, label %lor.lhs.false.if.then5_crit_edge, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

lor.lhs.false.if.then5_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then5

if.then5:                                         ; preds = %lor.lhs.false.if.then5_crit_edge, %if.end.if.then5_crit_edge
  %len8 = getelementptr inbounds %struct.extent_map, ptr %call, i32 0, i32 2
  %4 = ptrtoint ptr %len8 to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %len8, align 8
  %add9 = add i64 %5, %1
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.25, i64 noundef %logical, i64 noundef %length, i64 noundef %1, i64 noundef %add9) #28
  tail call void @free_extent_map(ptr noundef nonnull %call) #23
  br label %cleanup

cleanup:                                          ; preds = %if.then5, %lor.lhs.false.cleanup_crit_edge, %if.then
  %retval.0 = phi ptr [ inttoptr (i32 -22 to ptr), %if.then5 ], [ inttoptr (i32 -22 to ptr), %if.then ], [ %call, %lor.lhs.false.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_lock(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @lookup_extent_mapping(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_unlock(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_extent_map(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_remove_chunk(ptr noundef %trans, i64 noundef %chunk_offset) local_unnamed_addr #4 align 64 {
entry:
  %disk_key.i.i = alloca %struct.btrfs_disk_key, align 8
  %key.i = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info1 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %trans, i32 0, i32 16
  %0 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info1, align 4
  %fs_devices2 = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 100
  %2 = ptrtoint ptr %fs_devices2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %fs_devices2, align 8
  %call = tail call ptr @btrfs_get_chunk_map(ptr noundef %1, i64 noundef %chunk_offset, i64 noundef 1)
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.26, i32 noundef 3105) #32
  unreachable

if.end:                                           ; preds = %entry
  %map_lookup = getelementptr inbounds %struct.extent_map, ptr %call, i32 0, i32 12
  %4 = ptrtoint ptr %map_lookup to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %map_lookup, align 4
  %device_list_mutex = getelementptr inbounds %struct.btrfs_fs_devices, ptr %3, i32 0, i32 12
  tail call void @mutex_lock_nested(ptr noundef %device_list_mutex, i32 noundef 0) #23
  %num_stripes = getelementptr inbounds %struct.map_lookup, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %num_stripes to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_stripes, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp646 = icmp sgt i32 %7, 0
  br i1 %cmp646, label %for.body.lr.ph, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %8 = getelementptr inbounds %struct.btrfs_key, ptr %key.i, i32 0, i32 1
  %9 = getelementptr inbounds %struct.btrfs_key, ptr %key.i, i32 0, i32 2
  %10 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i.i, i32 0, i32 1
  %11 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i.i, i32 0, i32 2
  %transaction.i = getelementptr inbounds %struct.btrfs_trans_handle, ptr %trans, i32 0, i32 4
  %chunk_mutex = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 50
  %free_chunk_space = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 17
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.0647 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.map_lookup, ptr %5, i32 0, i32 7, i32 %i.0647
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx, align 8
  %physical = getelementptr %struct.map_lookup, ptr %5, i32 0, i32 7, i32 %i.0647, i32 1
  %14 = ptrtoint ptr %physical to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %physical, align 8
  %fs_info1.i = getelementptr inbounds %struct.btrfs_device, ptr %13, i32 0, i32 4
  %16 = ptrtoint ptr %fs_info1.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %fs_info1.i, align 4
  %dev_root.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %17, i32 0, i32 4
  %18 = ptrtoint ptr %dev_root.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %dev_root.i, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key.i) #23
  %call.i = call ptr @btrfs_alloc_path() #23
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %btrfs_free_dev_extent.exit.thread, label %if.end.i

btrfs_free_dev_extent.exit.thread:                ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key.i) #23
  br label %if.then7

if.end.i:                                         ; preds = %for.body
  %devid.i = getelementptr inbounds %struct.btrfs_device, ptr %13, i32 0, i32 13
  %20 = ptrtoint ptr %devid.i to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %devid.i, align 8
  %22 = ptrtoint ptr %key.i to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %21, ptr %key.i, align 8
  %23 = ptrtoint ptr %9 to i32
  call void @__asan_storeN_noabort(i32 %23, i32 8)
  store i64 %15, ptr %9, align 1
  %24 = ptrtoint ptr %8 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 -52, ptr %8, align 8
  %call286.i = call i32 @btrfs_search_slot(ptr noundef %trans, ptr noundef %19, ptr noundef nonnull %key.i, ptr noundef nonnull %call.i, i32 noundef -1, i32 noundef 1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call286.i)
  %cmp87.i = icmp sgt i32 %call286.i, 0
  br i1 %cmp87.i, label %if.then3.lr.ph.i, label %if.end.i.if.else.i_crit_edge

if.end.i.if.else.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else.i

if.then3.lr.ph.i:                                 ; preds = %if.end.i
  %slots.i = getelementptr inbounds %struct.btrfs_path, ptr %call.i, i32 0, i32 1
  br label %if.then3.i

if.then3.i:                                       ; preds = %do.end28.i.if.then3.i_crit_edge, %if.then3.lr.ph.i
  %25 = ptrtoint ptr %key.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %key.i, align 8
  %call5.i = call i32 @btrfs_previous_item(ptr noundef %19, ptr noundef nonnull %call.i, i64 noundef %26, i32 noundef 204) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %if.then3.i.btrfs_free_dev_extent.exit.thread619_crit_edge

if.then3.i.btrfs_free_dev_extent.exit.thread619_crit_edge: ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_free_dev_extent.exit.thread619

if.end8.i:                                        ; preds = %if.then3.i
  %27 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %call.i, align 4
  %29 = ptrtoint ptr %slots.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %slots.i, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i.i) #23
  %mul.i.i.i.i.i = mul i32 %30, 25
  %add.i.i.i.i.i = add i32 %mul.i.i.i.i.i, 101
  %31 = call ptr @memset(ptr %disk_key.i.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %28, ptr noundef nonnull %disk_key.i.i, i32 noundef %add.i.i.i.i.i, i32 noundef 17) #23
  %32 = ptrtoint ptr %11 to i32
  call void @__asan_loadN_noabort(i32 %32, i32 8)
  %33 = load i64, ptr %11, align 1
  %34 = call i64 @llvm.bswap.i64(i64 %33) #23
  %35 = ptrtoint ptr %10 to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %10, align 8
  %37 = ptrtoint ptr %disk_key.i.i to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %disk_key.i.i, align 8
  %39 = call i64 @llvm.bswap.i64(i64 %38) #23
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i.i) #23
  %40 = ptrtoint ptr %slots.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %slots.i, align 4
  %mul.i.i.i.i = mul i32 %41, 25
  %add.i.i.i.i = add i32 %mul.i.i.i.i, 101
  %42 = inttoptr i32 %add.i.i.i.i to ptr
  %call.i.i.i = call i32 @btrfs_get_32(ptr noundef %28, ptr noundef %42, i32 noundef 17) #23
  call void @__sanitizer_cov_trace_cmp8(i64 %34, i64 %15)
  %cmp14.i = icmp ugt i64 %34, %15
  br i1 %cmp14.i, label %if.end8.i.do.body22.i_crit_edge, label %lor.rhs.i, !prof !424

if.end8.i.do.body22.i_crit_edge:                  ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body22.i

lor.rhs.i:                                        ; preds = %if.end8.i
  %add.i = add i32 %call.i.i.i, 101
  %43 = inttoptr i32 %add.i to ptr
  %call.i.i600 = call i64 @btrfs_get_64(ptr noundef %28, ptr noundef %43, i32 noundef 24) #23
  %add17.i = add i64 %call.i.i600, %34
  call void @__sanitizer_cov_trace_cmp8(i64 %add17.i, i64 %15)
  %cmp18.i = icmp ult i64 %add17.i, %15
  br i1 %cmp18.i, label %lor.rhs.i.do.body22.i_crit_edge, label %do.end28.i, !prof !424

lor.rhs.i.do.body22.i_crit_edge:                  ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body22.i

do.body22.i:                                      ; preds = %lor.rhs.i.do.body22.i_crit_edge, %if.end8.i.do.body22.i_crit_edge
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1752, 0\0A.popsection", ""() #23, !srcloc !471
  unreachable

do.end28.i:                                       ; preds = %lor.rhs.i
  %44 = ptrtoint ptr %key.i to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %39, ptr %key.i, align 8
  %45 = ptrtoint ptr %8 to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 %36, ptr %8, align 8
  %46 = ptrtoint ptr %9 to i32
  call void @__asan_storeN_noabort(i32 %46, i32 8)
  store i64 %34, ptr %9, align 1
  call void @btrfs_release_path(ptr noundef nonnull %call.i) #23
  %call2.i = call i32 @btrfs_search_slot(ptr noundef %trans, ptr noundef %19, ptr noundef nonnull %key.i, ptr noundef nonnull %call.i, i32 noundef -1, i32 noundef 1) #23
  %cmp.i601 = icmp sgt i32 %call2.i, 0
  br i1 %cmp.i601, label %do.end28.i.if.then3.i_crit_edge, label %do.end28.i.if.else.i_crit_edge

do.end28.i.if.else.i_crit_edge:                   ; preds = %do.end28.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else.i

do.end28.i.if.then3.i_crit_edge:                  ; preds = %do.end28.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then3.i

if.else.i:                                        ; preds = %do.end28.i.if.else.i_crit_edge, %if.end.i.if.else.i_crit_edge
  %call2.lcssa.i = phi i32 [ %call286.i, %if.end.i.if.else.i_crit_edge ], [ %call2.i, %do.end28.i.if.else.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.lcssa.i)
  %cmp29.i = icmp eq i32 %call2.lcssa.i, 0
  br i1 %cmp29.i, label %if.then30.i, label %if.else.i.btrfs_free_dev_extent.exit.thread619_crit_edge

if.else.i.btrfs_free_dev_extent.exit.thread619_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_free_dev_extent.exit.thread619

if.then30.i:                                      ; preds = %if.else.i
  %47 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %call.i, align 4
  %slots33.i = getelementptr inbounds %struct.btrfs_path, ptr %call.i, i32 0, i32 1
  %49 = ptrtoint ptr %slots33.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %slots33.i, align 4
  %mul.i.i.i78.i = mul i32 %50, 25
  %add.i.i.i79.i = add i32 %mul.i.i.i78.i, 101
  %51 = inttoptr i32 %add.i.i.i79.i to ptr
  %call.i.i80.i = call i32 @btrfs_get_32(ptr noundef %48, ptr noundef %51, i32 noundef 17) #23
  %add36.i = add i32 %call.i.i80.i, 101
  %52 = inttoptr i32 %add36.i to ptr
  %call.i81.i = call i64 @btrfs_get_64(ptr noundef %48, ptr noundef %52, i32 noundef 24) #23
  %53 = ptrtoint ptr %slots33.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %slots33.i, align 4
  %call.i82.i = call i32 @btrfs_del_items(ptr noundef %trans, ptr noundef %19, ptr noundef nonnull %call.i, i32 noundef %54, i32 noundef 1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i82.i)
  %cmp42.i = icmp eq i32 %call.i82.i, 0
  br i1 %cmp42.i, label %if.end53, label %if.then30.i.btrfs_free_dev_extent.exit.thread619_crit_edge

if.then30.i.btrfs_free_dev_extent.exit.thread619_crit_edge: ; preds = %if.then30.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_free_dev_extent.exit.thread619

btrfs_free_dev_extent.exit.thread619:             ; preds = %if.then30.i.btrfs_free_dev_extent.exit.thread619_crit_edge, %if.else.i.btrfs_free_dev_extent.exit.thread619_crit_edge, %if.then3.i.btrfs_free_dev_extent.exit.thread619_crit_edge
  %ret.0.i.ph = phi i32 [ %call5.i, %if.then3.i.btrfs_free_dev_extent.exit.thread619_crit_edge ], [ %call.i82.i, %if.then30.i.btrfs_free_dev_extent.exit.thread619_crit_edge ], [ %call2.lcssa.i, %if.else.i.btrfs_free_dev_extent.exit.thread619_crit_edge ]
  call void @btrfs_free_path(ptr noundef nonnull %call.i) #23
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key.i) #23
  br label %if.then7

if.then7:                                         ; preds = %btrfs_free_dev_extent.exit.thread619, %btrfs_free_dev_extent.exit.thread
  %retval.0.i602616 = phi i32 [ -12, %btrfs_free_dev_extent.exit.thread ], [ %ret.0.i.ph, %btrfs_free_dev_extent.exit.thread619 ]
  call void @mutex_unlock(ptr noundef %device_list_mutex) #23
  %55 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %fs_info1, align 4
  %fs_state = getelementptr inbounds %struct.btrfs_fs_info, ptr %56, i32 0, i32 149
  %call10 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.then12, label %if.then7.cleanup_crit_edge

if.then7.cleanup_crit_edge:                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then12:                                        ; preds = %if.then7
  %57 = zext i32 %retval.0.i602616 to i64
  call void @__sanitizer_cov_trace_switch(i64 %57, ptr @__sancov_gen_cov_switch_values.192)
  switch i32 %retval.0.i602616, label %do.end [
    i32 -5, label %if.then12.do.body34_crit_edge
    i32 -30, label %if.then12.do.body34_crit_edge687
  ]

if.then12.do.body34_crit_edge687:                 ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body34

if.then12.do.body34_crit_edge:                    ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body34

do.end:                                           ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 3128, i32 noundef 9, ptr noundef nonnull @.str.18, i32 noundef %retval.0.i602616) #23
  br label %cleanup

do.body34:                                        ; preds = %if.then12.do.body34_crit_edge, %if.then12.do.body34_crit_edge687
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_remove_chunk.__UNIQUE_ID_ddebug965, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_remove_chunk, %if.then44)) #23
          to label %cleanup [label %if.then44], !srcloc !431

if.then44:                                        ; preds = %do.body34
  call void @__sanitizer_cov_trace_pc() #25
  %58 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %fs_info1, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %59, ptr noundef nonnull @.str.22, i32 noundef %retval.0.i602616) #28
  br label %cleanup

if.end53:                                         ; preds = %if.then30.i
  %60 = ptrtoint ptr %transaction.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %transaction.i, align 4
  %flags.i = getelementptr inbounds %struct.btrfs_transaction, ptr %61, i32 0, i32 4
  call void @_set_bit(i32 noundef 0, ptr noundef %flags.i) #23
  call void @btrfs_free_path(ptr noundef nonnull %call.i) #23
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key.i) #23
  %bytes_used = getelementptr inbounds %struct.btrfs_device, ptr %13, i32 0, i32 16
  %62 = ptrtoint ptr %bytes_used to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %bytes_used, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %63)
  %cmp54.not = icmp eq i64 %63, 0
  br i1 %cmp54.not, label %if.end53.for.inc_crit_edge, label %if.then55

if.end53.for.inc_crit_edge:                       ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

if.then55:                                        ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #25
  call void @mutex_lock_nested(ptr noundef %chunk_mutex, i32 noundef 0) #23
  %64 = ptrtoint ptr %bytes_used to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %bytes_used, align 8
  %sub = sub i64 %65, %call.i81.i
  call fastcc void @btrfs_device_set_bytes_used(ptr noundef %13, i64 noundef %sub)
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %free_chunk_space, i32 noundef 8) #23
  call void @generic_atomic64_add(i64 noundef %call.i81.i, ptr noundef %free_chunk_space) #23
  call void @btrfs_clear_space_info_full(ptr noundef %1) #23
  call void @mutex_unlock(ptr noundef %chunk_mutex) #23
  br label %for.inc

cleanup:                                          ; preds = %if.then44, %do.body34, %do.end, %if.then7.cleanup_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %trans, ptr noundef nonnull @.str.27, i32 noundef 3128, i32 noundef %retval.0.i602616) #28
  br label %out

for.inc:                                          ; preds = %if.then55, %if.end53.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.0647, 1
  %66 = ptrtoint ptr %num_stripes to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %num_stripes, align 8
  %cmp = icmp slt i32 %inc, %67
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end.for.end_crit_edge
  call void @mutex_unlock(ptr noundef %device_list_mutex) #23
  %removing_chunk = getelementptr inbounds %struct.btrfs_trans_handle, ptr %trans, i32 0, i32 13
  %68 = ptrtoint ptr %removing_chunk to i32
  call void @__asan_store1_noabort(i32 %68)
  store i8 1, ptr %removing_chunk, align 8
  %chunk_mutex60 = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 50
  call void @mutex_lock_nested(ptr noundef %chunk_mutex60, i32 noundef 0) #23
  %69 = ptrtoint ptr %5 to i32
  call void @__asan_load8_noabort(i32 %69)
  %70 = load i64, ptr %5, align 8
  call void @check_system_chunk(ptr noundef %trans, i64 noundef %70) #23
  %call61 = call fastcc i32 @remove_chunk_item(ptr noundef %trans, ptr noundef %5, i64 noundef %chunk_offset)
  %71 = zext i32 %call61 to i64
  call void @__sanitizer_cov_trace_switch(i64 %71, ptr @__sancov_gen_cov_switch_values.193)
  switch i32 %call61, label %do.body259 [
    i32 -28, label %if.then63
    i32 0, label %for.end.if.end318_crit_edge
  ]

for.end.if.end318_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end318

if.then63:                                        ; preds = %for.end
  %call.i603 = call i64 @btrfs_get_alloc_profile(ptr noundef %1, i64 noundef 2) #23
  %call65 = call ptr @btrfs_create_chunk(ptr noundef %trans, i64 noundef %call.i603)
  %cmp.i604 = icmp ugt ptr %call65, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i604, label %if.then67, label %if.end127

if.then67:                                        ; preds = %if.then63
  %72 = ptrtoint ptr %call65 to i32
  %73 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %fs_info1, align 4
  %fs_state71 = getelementptr inbounds %struct.btrfs_fs_info, ptr %74, i32 0, i32 149
  %call72 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state71) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call72)
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %if.then74, label %if.then67.if.end124_crit_edge

if.then67.if.end124_crit_edge:                    ; preds = %if.then67
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end124

if.then74:                                        ; preds = %if.then67
  %75 = zext i32 %72 to i64
  call void @__sanitizer_cov_trace_switch(i64 %75, ptr @__sancov_gen_cov_switch_values.194)
  switch i32 %72, label %do.end91 [
    i32 -5, label %if.then74.do.body106_crit_edge
    i32 -30, label %if.then74.do.body106_crit_edge688
  ]

if.then74.do.body106_crit_edge688:                ; preds = %if.then74
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body106

if.then74.do.body106_crit_edge:                   ; preds = %if.then74
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body106

do.end91:                                         ; preds = %if.then74
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 3191, i32 noundef 9, ptr noundef nonnull @.str.18, i32 noundef %72) #23
  br label %if.end124

do.body106:                                       ; preds = %if.then74.do.body106_crit_edge, %if.then74.do.body106_crit_edge688
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_remove_chunk.__UNIQUE_ID_ddebug966, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_remove_chunk, %if.then118)) #23
          to label %if.end124 [label %if.then118], !srcloc !431

if.then118:                                       ; preds = %do.body106
  call void @__sanitizer_cov_trace_pc() #25
  %76 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %fs_info1, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %77, ptr noundef nonnull @.str.22, i32 noundef %72) #28
  br label %if.end124

if.end124:                                        ; preds = %if.then118, %do.body106, %do.end91, %if.then67.if.end124_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %trans, ptr noundef nonnull @.str.27, i32 noundef 3191, i32 noundef %72) #28
  br label %out

if.end127:                                        ; preds = %if.then63
  %call128 = call i32 @btrfs_chunk_alloc_add_chunk_item(ptr noundef %trans, ptr noundef %call65)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call128)
  %tobool129.not = icmp eq i32 %call128, 0
  br i1 %tobool129.not, label %if.end189, label %do.body131

do.body131:                                       ; preds = %if.end127
  %78 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %fs_info1, align 4
  %fs_state133 = getelementptr inbounds %struct.btrfs_fs_info, ptr %79, i32 0, i32 149
  %call134 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state133) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call134)
  %tobool135.not = icmp eq i32 %call134, 0
  br i1 %tobool135.not, label %if.then136, label %do.body131.if.end186_crit_edge

do.body131.if.end186_crit_edge:                   ; preds = %do.body131
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end186

if.then136:                                       ; preds = %do.body131
  %80 = zext i32 %call128 to i64
  call void @__sanitizer_cov_trace_switch(i64 %80, ptr @__sancov_gen_cov_switch_values.195)
  switch i32 %call128, label %do.end153 [
    i32 -5, label %if.then136.do.body168_crit_edge
    i32 -30, label %if.then136.do.body168_crit_edge689
  ]

if.then136.do.body168_crit_edge689:               ; preds = %if.then136
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body168

if.then136.do.body168_crit_edge:                  ; preds = %if.then136
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body168

do.end153:                                        ; preds = %if.then136
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 3197, i32 noundef 9, ptr noundef nonnull @.str.18, i32 noundef %call128) #23
  br label %if.end186

do.body168:                                       ; preds = %if.then136.do.body168_crit_edge, %if.then136.do.body168_crit_edge689
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_remove_chunk.__UNIQUE_ID_ddebug967, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_remove_chunk, %if.then180)) #23
          to label %if.end186 [label %if.then180], !srcloc !431

if.then180:                                       ; preds = %do.body168
  call void @__sanitizer_cov_trace_pc() #25
  %81 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %fs_info1, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %82, ptr noundef nonnull @.str.22, i32 noundef %call128) #28
  br label %if.end186

if.end186:                                        ; preds = %if.then180, %do.body168, %do.end153, %do.body131.if.end186_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %trans, ptr noundef nonnull @.str.27, i32 noundef 3197, i32 noundef %call128) #28
  br label %out

if.end189:                                        ; preds = %if.end127
  %call190 = call fastcc i32 @remove_chunk_item(ptr noundef %trans, ptr noundef %5, i64 noundef %chunk_offset)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call190)
  %tobool191.not = icmp eq i32 %call190, 0
  br i1 %tobool191.not, label %if.end189.if.end318_crit_edge, label %do.body193

if.end189.if.end318_crit_edge:                    ; preds = %if.end189
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end318

do.body193:                                       ; preds = %if.end189
  %83 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %fs_info1, align 4
  %fs_state195 = getelementptr inbounds %struct.btrfs_fs_info, ptr %84, i32 0, i32 149
  %call196 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state195) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call196)
  %tobool197.not = icmp eq i32 %call196, 0
  br i1 %tobool197.not, label %if.then198, label %do.body193.if.end248_crit_edge

do.body193.if.end248_crit_edge:                   ; preds = %do.body193
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end248

if.then198:                                       ; preds = %do.body193
  %85 = zext i32 %call190 to i64
  call void @__sanitizer_cov_trace_switch(i64 %85, ptr @__sancov_gen_cov_switch_values.196)
  switch i32 %call190, label %do.end215 [
    i32 -5, label %if.then198.do.body230_crit_edge
    i32 -30, label %if.then198.do.body230_crit_edge690
  ]

if.then198.do.body230_crit_edge690:               ; preds = %if.then198
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body230

if.then198.do.body230_crit_edge:                  ; preds = %if.then198
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body230

do.end215:                                        ; preds = %if.then198
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 3203, i32 noundef 9, ptr noundef nonnull @.str.18, i32 noundef %call190) #23
  br label %if.end248

do.body230:                                       ; preds = %if.then198.do.body230_crit_edge, %if.then198.do.body230_crit_edge690
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_remove_chunk.__UNIQUE_ID_ddebug968, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_remove_chunk, %if.then242)) #23
          to label %if.end248 [label %if.then242], !srcloc !431

if.then242:                                       ; preds = %do.body230
  call void @__sanitizer_cov_trace_pc() #25
  %86 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %fs_info1, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %87, ptr noundef nonnull @.str.22, i32 noundef %call190) #28
  br label %if.end248

if.end248:                                        ; preds = %if.then242, %do.body230, %do.end215, %do.body193.if.end248_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %trans, ptr noundef nonnull @.str.27, i32 noundef 3203, i32 noundef %call190) #28
  br label %out

do.body259:                                       ; preds = %for.end
  %88 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %fs_info1, align 4
  %fs_state261 = getelementptr inbounds %struct.btrfs_fs_info, ptr %89, i32 0, i32 149
  %call262 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state261) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call262)
  %tobool263.not = icmp eq i32 %call262, 0
  br i1 %tobool263.not, label %if.then264, label %do.body259.if.end314_crit_edge

do.body259.if.end314_crit_edge:                   ; preds = %do.body259
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end314

if.then264:                                       ; preds = %do.body259
  %90 = zext i32 %call61 to i64
  call void @__sanitizer_cov_trace_switch(i64 %90, ptr @__sancov_gen_cov_switch_values.197)
  switch i32 %call61, label %do.end281 [
    i32 -5, label %if.then264.do.body296_crit_edge
    i32 -30, label %if.then264.do.body296_crit_edge691
  ]

if.then264.do.body296_crit_edge691:               ; preds = %if.then264
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body296

if.then264.do.body296_crit_edge:                  ; preds = %if.then264
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body296

do.end281:                                        ; preds = %if.then264
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 3207, i32 noundef 9, ptr noundef nonnull @.str.18, i32 noundef %call61) #23
  br label %if.end314

do.body296:                                       ; preds = %if.then264.do.body296_crit_edge, %if.then264.do.body296_crit_edge691
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_remove_chunk.__UNIQUE_ID_ddebug969, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_remove_chunk, %if.then308)) #23
          to label %if.end314 [label %if.then308], !srcloc !431

if.then308:                                       ; preds = %do.body296
  call void @__sanitizer_cov_trace_pc() #25
  %91 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %fs_info1, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %92, ptr noundef nonnull @.str.22, i32 noundef %call61) #28
  br label %if.end314

if.end314:                                        ; preds = %if.then308, %do.body296, %do.end281, %do.body259.if.end314_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %trans, ptr noundef nonnull @.str.27, i32 noundef 3207, i32 noundef %call61) #28
  br label %out

if.end318:                                        ; preds = %if.end189.if.end318_crit_edge, %for.end.if.end318_crit_edge
  %len = getelementptr inbounds %struct.extent_map, ptr %call, i32 0, i32 2
  %93 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %93)
  %94 = load i64, ptr %len, align 8
  call fastcc void @trace_btrfs_chunk_free(ptr noundef %1, ptr noundef %5, i64 noundef %chunk_offset, i64 noundef %94)
  %95 = ptrtoint ptr %5 to i32
  call void @__asan_load8_noabort(i32 %95)
  %96 = load i64, ptr %5, align 8
  %and = and i64 %96, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool320.not = icmp eq i64 %and, 0
  br i1 %tobool320.not, label %if.end318.if.end384_crit_edge, label %if.then321

if.end318.if.end384_crit_edge:                    ; preds = %if.end318
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end384

if.then321:                                       ; preds = %if.end318
  %super_copy1.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 43
  %97 = ptrtoint ptr %super_copy1.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %super_copy1.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %99 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %99)
  %tobool.not.i605 = icmp eq i32 %99, 0
  br i1 %tobool.not.i605, label %if.then321.if.end.i607_crit_edge, label %land.rhs.i

if.then321.if.end.i607_crit_edge:                 ; preds = %if.then321
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i607

land.rhs.i:                                       ; preds = %if.then321
  %dep_map.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 50, i32 5
  %call.i.i606 = call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i606)
  %cmp.not.i = icmp eq i32 %call.i.i606, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i607_crit_edge, !prof !424

land.rhs.i.if.end.i607_crit_edge:                 ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i607

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 2997, i32 noundef 9, ptr noundef null) #23
  br label %if.end.i607

if.end.i607:                                      ; preds = %do.end.i, %land.rhs.i.if.end.i607_crit_edge, %if.then321.if.end.i607_crit_edge
  %sys_chunk_array_size.i.i = getelementptr inbounds %struct.btrfs_super_block, ptr %98, i32 0, i32 18
  %100 = ptrtoint ptr %sys_chunk_array_size.i.i to i32
  call void @__asan_loadN_noabort(i32 %100, i32 4)
  %101 = load i32, ptr %sys_chunk_array_size.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %101)
  %cmp2666.not.i = icmp eq i32 %101, 0
  br i1 %cmp2666.not.i, label %if.end.i607.if.end384_crit_edge, label %while.body.preheader.i

if.end.i607.if.end384_crit_edge:                  ; preds = %if.end.i607
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end384

while.body.preheader.i:                           ; preds = %if.end.i607
  %sys_chunk_array.i = getelementptr inbounds %struct.btrfs_super_block, ptr %98, i32 0, i32 33
  %102 = call i32 @llvm.bswap.i32(i32 %101) #23
  br label %while.body.i

while.body.i:                                     ; preds = %if.end45.i.while.body.i_crit_edge, %while.body.preheader.i
  %cur.069.i = phi i32 [ %cur.1.i, %if.end45.i.while.body.i_crit_edge ], [ 0, %while.body.preheader.i ]
  %array_size.068.i = phi i32 [ %array_size.1.i, %if.end45.i.while.body.i_crit_edge ], [ %102, %while.body.preheader.i ]
  %ptr.067.i = phi ptr [ %ptr.1.i, %if.end45.i.while.body.i_crit_edge ], [ %sys_chunk_array.i, %while.body.preheader.i ]
  %offset.i.i = getelementptr inbounds %struct.btrfs_disk_key, ptr %ptr.067.i, i32 0, i32 2
  %103 = ptrtoint ptr %offset.i.i to i32
  call void @__asan_loadN_noabort(i32 %103, i32 8)
  %104 = load i64, ptr %offset.i.i, align 1
  %105 = call i64 @llvm.bswap.i64(i64 %104) #23
  %type.i.i = getelementptr inbounds %struct.btrfs_disk_key, ptr %ptr.067.i, i32 0, i32 1
  %106 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load1_noabort(i32 %106)
  %107 = load i8, ptr %type.i.i, align 1
  %108 = ptrtoint ptr %ptr.067.i to i32
  call void @__asan_loadN_noabort(i32 %108, i32 8)
  %109 = load i64, ptr %ptr.067.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -28, i8 %107)
  %cmp27.i = icmp eq i8 %107, -28
  br i1 %cmp27.i, label %if.then29.i, label %do.body325

if.then29.i:                                      ; preds = %while.body.i
  %num_stripes.i.i = getelementptr i8, ptr %ptr.067.i, i32 61
  %110 = ptrtoint ptr %num_stripes.i.i to i32
  call void @__asan_loadN_noabort(i32 %110, i32 2)
  %111 = load i16, ptr %num_stripes.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %111)
  %cmp.i.i = icmp eq i16 %111, 0
  br i1 %cmp.i.i, label %do.body2.i.i, label %btrfs_chunk_item_size.exit.i, !prof !424

do.body2.i.i:                                     ; preds = %if.then29.i
  call void @__sanitizer_cov_trace_pc() #25
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/ctree.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 119, 0\0A.popsection", ""() #23, !srcloc !472
  unreachable

btrfs_chunk_item_size.exit.i:                     ; preds = %if.then29.i
  %112 = call i16 @llvm.bswap.i16(i16 %111) #23
  %conv31.i = zext i16 %112 to i32
  %sub.i.i = shl nuw nsw i32 %conv31.i, 5
  %add.i608 = add nuw nsw i32 %sub.i.i, 65
  call void @__sanitizer_cov_trace_const_cmp8(i64 281474976710656, i64 %109)
  %cmp34.i = icmp eq i64 %109, 281474976710656
  call void @__sanitizer_cov_trace_cmp8(i64 %105, i64 %chunk_offset)
  %cmp36.i = icmp eq i64 %105, %chunk_offset
  %or.cond.i = select i1 %cmp34.i, i1 %cmp36.i, i1 false
  %add.ptr39.i = getelementptr i8, ptr %ptr.067.i, i32 %add.i608
  br i1 %or.cond.i, label %if.then38.i, label %if.else42.i

if.then38.i:                                      ; preds = %btrfs_chunk_item_size.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %113 = add i32 %array_size.068.i, -65
  %114 = add i32 %cur.069.i, %sub.i.i
  %sub.i = sub i32 %113, %114
  %115 = call ptr @memmove(ptr %ptr.067.i, ptr %add.ptr39.i, i32 %sub.i)
  %sub41.i = sub i32 %array_size.068.i, %add.i608
  %116 = call i32 @llvm.bswap.i32(i32 %sub41.i) #23
  %117 = ptrtoint ptr %sys_chunk_array_size.i.i to i32
  call void @__asan_storeN_noabort(i32 %117, i32 4)
  store i32 %116, ptr %sys_chunk_array_size.i.i, align 1
  br label %if.end45.i

if.else42.i:                                      ; preds = %btrfs_chunk_item_size.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %add44.i = add i32 %add.i608, %cur.069.i
  br label %if.end45.i

if.end45.i:                                       ; preds = %if.else42.i, %if.then38.i
  %ptr.1.i = phi ptr [ %ptr.067.i, %if.then38.i ], [ %add.ptr39.i, %if.else42.i ]
  %array_size.1.i = phi i32 [ %sub41.i, %if.then38.i ], [ %array_size.068.i, %if.else42.i ]
  %cur.1.i = phi i32 [ %cur.069.i, %if.then38.i ], [ %add44.i, %if.else42.i ]
  %cmp26.i = icmp ult i32 %cur.1.i, %array_size.1.i
  br i1 %cmp26.i, label %if.end45.i.while.body.i_crit_edge, label %if.end45.i.if.end384_crit_edge

if.end45.i.if.end384_crit_edge:                   ; preds = %if.end45.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end384

if.end45.i.while.body.i_crit_edge:                ; preds = %if.end45.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body.i

do.body325:                                       ; preds = %while.body.i
  %118 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %fs_info1, align 4
  %fs_state327 = getelementptr inbounds %struct.btrfs_fs_info, ptr %119, i32 0, i32 149
  %call328 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state327) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call328)
  %tobool329.not = icmp eq i32 %call328, 0
  br i1 %tobool329.not, label %do.body362, label %do.body325.if.end380_crit_edge

do.body325.if.end380_crit_edge:                   ; preds = %do.body325
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end380

do.body362:                                       ; preds = %do.body325
  call void @__sanitizer_cov_trace_pc() #25
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_remove_chunk.__UNIQUE_ID_ddebug970, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_remove_chunk, %if.then374)) #23
          to label %if.end380 [label %if.then374], !srcloc !431

if.then374:                                       ; preds = %do.body362
  call void @__sanitizer_cov_trace_pc() #25
  %120 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %fs_info1, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %121, ptr noundef nonnull @.str.22, i32 noundef -5) #28
  br label %if.end380

if.end380:                                        ; preds = %if.then374, %do.body362, %do.body325.if.end380_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %trans, ptr noundef nonnull @.str.27, i32 noundef 3216, i32 noundef -5) #28
  br label %out

if.end384:                                        ; preds = %if.end45.i.if.end384_crit_edge, %if.end.i607.if.end384_crit_edge, %if.end318.if.end384_crit_edge
  call void @mutex_unlock(ptr noundef %chunk_mutex60) #23
  %122 = ptrtoint ptr %removing_chunk to i32
  call void @__asan_store1_noabort(i32 %122)
  store i8 0, ptr %removing_chunk, align 8
  call void @btrfs_trans_release_chunk_metadata(ptr noundef %trans) #23
  %call387 = call i32 @btrfs_remove_block_group(ptr noundef %trans, i64 noundef %chunk_offset, ptr noundef %call) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call387)
  %tobool388.not = icmp eq i32 %call387, 0
  br i1 %tobool388.not, label %if.end384.out_crit_edge, label %do.body390

if.end384.out_crit_edge:                          ; preds = %if.end384
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

do.body390:                                       ; preds = %if.end384
  %123 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %fs_info1, align 4
  %fs_state392 = getelementptr inbounds %struct.btrfs_fs_info, ptr %124, i32 0, i32 149
  %call393 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state392) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call393)
  %tobool394.not = icmp eq i32 %call393, 0
  br i1 %tobool394.not, label %if.then395, label %do.body390.if.end445_crit_edge

do.body390.if.end445_crit_edge:                   ; preds = %do.body390
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end445

if.then395:                                       ; preds = %do.body390
  %125 = zext i32 %call387 to i64
  call void @__sanitizer_cov_trace_switch(i64 %125, ptr @__sancov_gen_cov_switch_values.198)
  switch i32 %call387, label %do.end412 [
    i32 -5, label %if.then395.do.body427_crit_edge
    i32 -30, label %if.then395.do.body427_crit_edge692
  ]

if.then395.do.body427_crit_edge692:               ; preds = %if.then395
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body427

if.then395.do.body427_crit_edge:                  ; preds = %if.then395
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body427

do.end412:                                        ; preds = %if.then395
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 3232, i32 noundef 9, ptr noundef nonnull @.str.18, i32 noundef %call387) #23
  br label %if.end445

do.body427:                                       ; preds = %if.then395.do.body427_crit_edge, %if.then395.do.body427_crit_edge692
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_remove_chunk.__UNIQUE_ID_ddebug971, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_remove_chunk, %if.then439)) #23
          to label %if.end445 [label %if.then439], !srcloc !431

if.then439:                                       ; preds = %do.body427
  call void @__sanitizer_cov_trace_pc() #25
  %126 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %fs_info1, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %127, ptr noundef nonnull @.str.22, i32 noundef %call387) #28
  br label %if.end445

if.end445:                                        ; preds = %if.then439, %do.body427, %do.end412, %do.body390.if.end445_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %trans, ptr noundef nonnull @.str.27, i32 noundef 3232, i32 noundef %call387) #28
  br label %out

out:                                              ; preds = %if.end445, %if.end384.out_crit_edge, %if.end380, %if.end314, %if.end248, %if.end186, %if.end124, %cleanup
  %ret.1 = phi i32 [ %retval.0.i602616, %cleanup ], [ -5, %if.end380 ], [ %call387, %if.end445 ], [ 0, %if.end384.out_crit_edge ], [ %call61, %if.end314 ], [ %call190, %if.end248 ], [ %call128, %if.end186 ], [ %72, %if.end124 ]
  %removing_chunk449 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %trans, i32 0, i32 13
  %128 = ptrtoint ptr %removing_chunk449 to i32
  call void @__asan_load1_noabort(i32 %128)
  %129 = load i8, ptr %removing_chunk449, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %129)
  %tobool450.not = icmp eq i8 %129, 0
  br i1 %tobool450.not, label %out.cleanup455_crit_edge, label %if.then451

out.cleanup455_crit_edge:                         ; preds = %out
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup455

if.then451:                                       ; preds = %out
  call void @__sanitizer_cov_trace_pc() #25
  %chunk_mutex452 = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 50
  call void @mutex_unlock(ptr noundef %chunk_mutex452) #23
  %130 = ptrtoint ptr %removing_chunk449 to i32
  call void @__asan_store1_noabort(i32 %130)
  store i8 0, ptr %removing_chunk449, align 8
  br label %cleanup455

cleanup455:                                       ; preds = %if.then451, %out.cleanup455_crit_edge
  call void @free_extent_map(ptr noundef %call) #23
  ret i32 %ret.1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @btrfs_device_set_bytes_used(ptr noundef %dev, i64 noundef %size) unnamed_addr #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !473
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %4 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %entry.__seqprop_assert.exit_crit_edge, label %land.lhs.true.i

entry.__seqprop_assert.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %__seqprop_assert.exit

land.lhs.true.i:                                  ; preds = %entry
  %5 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %8, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !462
  %9 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i, align 4
  %add.i27 = add i32 %14, ptrtoint (ptr @lockdep_recursion to i32)
  %15 = inttoptr i32 %add.i27 to ptr
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %15, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !463
  %18 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i7.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i7.i to ptr
  %preempt_count.i.i8.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i8.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i8.i, align 4
  %sub.i.i = add i32 %21, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i8.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool20.not.i = icmp eq i32 %17, 0
  br i1 %tobool20.not.i, label %land.rhs.i, label %land.lhs.true.i.__seqprop_assert.exit_crit_edge

land.lhs.true.i.__seqprop_assert.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__seqprop_assert.exit

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %22 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i28 = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i28 to ptr
  %preempt_count.i.i29 = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i29 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i29, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp.i = icmp eq i32 %25, 0
  br i1 %cmp.i, label %land.rhs22.i, label %land.rhs.i.__seqprop_assert.exit_crit_edge

land.rhs.i.__seqprop_assert.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__seqprop_assert.exit

land.rhs22.i:                                     ; preds = %land.rhs.i
  %26 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i9.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i9.i to ptr
  %preempt_count.i.i10.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i10.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i10.i, align 4
  %add.i11.i = add i32 %29, 1
  store volatile i32 %add.i11.i, ptr %preempt_count.i.i10.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !464
  %30 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cpu.i, align 4
  %arrayidx46.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %31
  %32 = ptrtoint ptr %arrayidx46.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx46.i, align 4
  %add47.i = add i32 %33, ptrtoint (ptr @hardirqs_enabled to i32)
  %34 = inttoptr i32 %add47.i to ptr
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %34, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !465
  %37 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i12.i = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i12.i to ptr
  %preempt_count.i.i13.i = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i13.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i13.i, align 4
  %sub.i14.i = add i32 %40, -1
  store volatile i32 %sub.i14.i, ptr %preempt_count.i.i13.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool54.not.i = icmp eq i32 %36, 0
  br i1 %tobool54.not.i, label %land.rhs22.i.__seqprop_assert.exit_crit_edge, label %land.rhs58.i

land.rhs22.i.__seqprop_assert.exit_crit_edge:     ; preds = %land.rhs22.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__seqprop_assert.exit

land.rhs58.i:                                     ; preds = %land.rhs22.i
  %.b1.i = load i1, ptr @__seqprop_assert.__already_done, align 1
  br i1 %.b1.i, label %land.rhs58.i.__seqprop_assert.exit_crit_edge, label %if.then.i, !prof !423

land.rhs58.i.__seqprop_assert.exit_crit_edge:     ; preds = %land.rhs58.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__seqprop_assert.exit

if.then.i:                                        ; preds = %land.rhs58.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @__seqprop_assert.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.101, i32 noundef 271, i32 noundef 9, ptr noundef null) #23
  br label %__seqprop_assert.exit

__seqprop_assert.exit:                            ; preds = %if.then.i, %land.rhs58.i.__seqprop_assert.exit_crit_edge, %land.rhs22.i.__seqprop_assert.exit_crit_edge, %land.rhs.i.__seqprop_assert.exit_crit_edge, %land.lhs.true.i.__seqprop_assert.exit_crit_edge, %entry.__seqprop_assert.exit_crit_edge
  %data_seqcount = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 12
  %41 = ptrtoint ptr %data_seqcount to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %data_seqcount, align 4
  %inc.i.i.i = add i32 %42, 1
  store i32 %inc.i.i.i, ptr %data_seqcount, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !466
  %dep_map.i.i = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 12, i32 1
  %43 = tail call ptr @llvm.returnaddress(i32 0) #23
  %44 = ptrtoint ptr %43 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %44) #23
  %bytes_used = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 16
  %45 = ptrtoint ptr %bytes_used to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %size, ptr %bytes_used, align 8
  tail call void @lock_release(ptr noundef %dep_map.i.i, i32 noundef %44) #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !467
  %46 = ptrtoint ptr %data_seqcount to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %data_seqcount, align 4
  %inc.i.i = add i32 %47, 1
  store i32 %inc.i.i, ptr %data_seqcount, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !474
  %48 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i25 = and i32 %48, -16384
  %49 = inttoptr i32 %and.i.i.i25 to ptr
  %preempt_count.i.i26 = getelementptr inbounds %struct.thread_info, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %preempt_count.i.i26 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %preempt_count.i.i26, align 4
  %sub.i = add i32 %51, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i26, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @check_system_chunk(ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @remove_chunk_item(ptr noundef %trans, ptr nocapture noundef readonly %map, i64 noundef %chunk_offset) unnamed_addr #4 align 64 {
entry:
  %key.i = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.rhs:                                         ; preds = %entry
  %fs_info = getelementptr inbounds %struct.btrfs_trans_handle, ptr %trans, i32 0, i32 16
  %1 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %fs_info, align 4
  %dep_map = getelementptr inbounds %struct.btrfs_fs_info, ptr %2, i32 0, i32 50, i32 5
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !424

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 3076, i32 noundef 9, ptr noundef null) #23
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %num_stripes = getelementptr inbounds %struct.map_lookup, ptr %map, i32 0, i32 4
  %3 = ptrtoint ptr %num_stripes to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %num_stripes, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp2439 = icmp sgt i32 %4, 0
  br i1 %cmp2439, label %if.end.for.body_crit_edge, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

for.cond:                                         ; preds = %for.body
  %inc = add nuw nsw i32 %i.040, 1
  %5 = ptrtoint ptr %num_stripes to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %num_stripes, align 8
  %cmp24 = icmp slt i32 %inc, %6
  br i1 %cmp24, label %for.cond.for.body_crit_edge, label %for.cond.for.end_crit_edge

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %if.end.for.body_crit_edge
  %i.040 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %if.end.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.map_lookup, ptr %map, i32 0, i32 7, i32 %i.040
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx, align 8
  %call25 = tail call fastcc i32 @btrfs_update_device(ptr noundef %trans, ptr noundef %8)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %for.cond, label %for.body.cleanup30_crit_edge

for.body.cleanup30_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup30

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %if.end.for.end_crit_edge
  %fs_info1.i = getelementptr inbounds %struct.btrfs_trans_handle, ptr %trans, i32 0, i32 16
  %9 = ptrtoint ptr %fs_info1.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %fs_info1.i, align 4
  %chunk_root.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %chunk_root.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %chunk_root.i, align 8
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key.i) #23
  %call.i38 = tail call ptr @btrfs_alloc_path() #23
  %tobool.not.i = icmp eq ptr %call.i38, null
  br i1 %tobool.not.i, label %for.end.btrfs_free_chunk.exit_crit_edge, label %if.end.i

for.end.btrfs_free_chunk.exit_crit_edge:          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_free_chunk.exit

if.end.i:                                         ; preds = %for.end
  %13 = getelementptr inbounds %struct.btrfs_key, ptr %key.i, i32 0, i32 2
  %14 = getelementptr inbounds %struct.btrfs_key, ptr %key.i, i32 0, i32 1
  %15 = ptrtoint ptr %key.i to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 256, ptr %key.i, align 8
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_storeN_noabort(i32 %16, i32 8)
  store i64 %chunk_offset, ptr %13, align 1
  %17 = ptrtoint ptr %14 to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 -28, ptr %14, align 8
  %call2.i = call i32 @btrfs_search_slot(ptr noundef %trans, ptr noundef %12, ptr noundef nonnull %key.i, ptr noundef nonnull %call.i38, i32 noundef -1, i32 noundef 1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %cmp.i = icmp slt i32 %call2.i, 0
  br i1 %cmp.i, label %if.end.i.out.i_crit_edge, label %if.else.i

if.end.i.out.i_crit_edge:                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out.i

if.else.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %cmp4.not.i = icmp eq i32 %call2.i, 0
  br i1 %cmp4.not.i, label %if.end7.i, label %do.body.i

do.body.i:                                        ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, i32, i32, ptr, ...) @__btrfs_handle_fs_error(ptr noundef %10, ptr noundef nonnull @__func__.btrfs_free_chunk, i32 noundef 2970, i32 noundef -2, ptr noundef nonnull @.str.102) #28
  br label %out.i

if.end7.i:                                        ; preds = %if.else.i
  %slots.i.i = getelementptr inbounds %struct.btrfs_path, ptr %call.i38, i32 0, i32 1
  %18 = ptrtoint ptr %slots.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %slots.i.i, align 4
  %call.i.i = call i32 @btrfs_del_items(ptr noundef %trans, ptr noundef %12, ptr noundef nonnull %call.i38, i32 noundef %19, i32 noundef 1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp9.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp9.i, label %do.body11.i, label %if.end7.i.out.i_crit_edge

if.end7.i.out.i_crit_edge:                        ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out.i

do.body11.i:                                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, i32, i32, ptr, ...) @__btrfs_handle_fs_error(ptr noundef %10, ptr noundef nonnull @__func__.btrfs_free_chunk, i32 noundef 2978, i32 noundef %call.i.i, ptr noundef nonnull @.str.103) #28
  br label %out.i

out.i:                                            ; preds = %do.body11.i, %if.end7.i.out.i_crit_edge, %do.body.i, %if.end.i.out.i_crit_edge
  %ret.0.i = phi i32 [ %call2.i, %if.end.i.out.i_crit_edge ], [ -2, %do.body.i ], [ %call.i.i, %do.body11.i ], [ %call.i.i, %if.end7.i.out.i_crit_edge ]
  call void @btrfs_free_path(ptr noundef nonnull %call.i38) #23
  br label %btrfs_free_chunk.exit

btrfs_free_chunk.exit:                            ; preds = %out.i, %for.end.btrfs_free_chunk.exit_crit_edge
  %retval.0.i = phi i32 [ %ret.0.i, %out.i ], [ -12, %for.end.btrfs_free_chunk.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key.i) #23
  br label %cleanup30

cleanup30:                                        ; preds = %btrfs_free_chunk.exit, %for.body.cleanup30_crit_edge
  %retval.2 = phi i32 [ %retval.0.i, %btrfs_free_chunk.exit ], [ %call25, %for.body.cleanup30_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @btrfs_create_chunk(ptr noundef %trans, i64 noundef %type) local_unnamed_addr #4 align 64 {
entry:
  %ctl = alloca %struct.alloc_chunk_ctl, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info = getelementptr inbounds %struct.btrfs_trans_handle, ptr %trans, i32 0, i32 16
  %0 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info, align 4
  %fs_devices1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 100
  %2 = ptrtoint ptr %fs_devices1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %fs_devices1, align 8
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %ctl) #23
  %4 = call ptr @memset(ptr %ctl, i32 255, i32 96)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %5 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 50, i32 5
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !424

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 5487, i32 noundef 9, ptr noundef null) #23
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp8(i64 2048, i64 %type)
  %tobool2.not.i = icmp ult i64 %type, 2048
  br i1 %tobool2.not.i, label %if.end.i, label %if.end.if.then27_crit_edge

if.end.if.then27_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then27

if.end.i:                                         ; preds = %if.end
  %and.i = and i64 %type, -8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %cmp.i = icmp ne i64 %and.i, 0
  %6 = tail call i64 @llvm.ctpop.i64(i64 %and.i) #23, !range !475
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %6)
  %cmp1.i.i.i = icmp ugt i64 %6, 1
  %or.cond = and i1 %cmp.i, %cmp1.i.i.i
  br i1 %or.cond, label %if.end.i.if.then27_crit_edge, label %if.end28

if.end.i.if.then27_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then27

if.then27:                                        ; preds = %if.end.i.if.then27_crit_edge, %if.end.if.then27_crit_edge
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.26, i32 noundef 5490) #32
  unreachable

if.end28:                                         ; preds = %if.end.i
  %alloc_list = getelementptr inbounds %struct.btrfs_fs_devices, ptr %3, i32 0, i32 14
  %7 = ptrtoint ptr %alloc_list to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %alloc_list, align 4
  %cmp.i102.not = icmp eq ptr %8, %alloc_list
  br i1 %cmp.i102.not, label %if.then31, label %if.end50

if.then31:                                        ; preds = %if.end28
  %mount_opt = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 31
  %9 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %mount_opt, align 8
  %and = and i32 %10, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool32.not = icmp eq i32 %and, 0
  br i1 %tobool32.not, label %if.then31.cleanup_crit_edge, label %do.body34

if.then31.cleanup_crit_edge:                      ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

do.body34:                                        ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #25
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_create_chunk.__UNIQUE_ID_ddebug990, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_create_chunk, %if.then44)) #23
          to label %cleanup [label %if.then44], !srcloc !431

if.then44:                                        ; preds = %do.body34
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %1, ptr noundef nonnull @.str.50, ptr noundef nonnull @.str.48) #28
  br label %cleanup

if.end50:                                         ; preds = %if.end28
  %and51 = and i64 %type, 7
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and51)
  %tobool52.not = icmp eq i64 %and51, 0
  br i1 %tobool52.not, label %if.then53, label %if.end54

if.then53:                                        ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %1, ptr noundef nonnull @.str.51, i64 noundef %type) #28
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.26, i32 noundef 5502) #32
  unreachable

if.end54:                                         ; preds = %if.end50
  %mapping_tree.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 19
  %lock.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 19, i32 2
  tail call void @_raw_read_lock(ptr noundef %lock.i) #23
  %call.i103 = tail call ptr @rb_last(ptr noundef %mapping_tree.i) #23
  %tobool.not.i = icmp eq ptr %call.i103, null
  br i1 %tobool.not.i, label %if.end54.find_next_chunk.exit_crit_edge, label %if.then.i

if.end54.find_next_chunk.exit_crit_edge:          ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #25
  br label %find_next_chunk.exit

if.then.i:                                        ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #25
  %start.i = getelementptr inbounds %struct.extent_map, ptr %call.i103, i32 0, i32 1
  %11 = ptrtoint ptr %start.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %start.i, align 8
  %len.i = getelementptr inbounds %struct.extent_map, ptr %call.i103, i32 0, i32 2
  %13 = ptrtoint ptr %len.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %len.i, align 8
  %add.i = add i64 %14, %12
  br label %find_next_chunk.exit

find_next_chunk.exit:                             ; preds = %if.then.i, %if.end54.find_next_chunk.exit_crit_edge
  %ret.0.i = phi i64 [ %add.i, %if.then.i ], [ 0, %if.end54.find_next_chunk.exit_crit_edge ]
  tail call void @_raw_read_unlock(ptr noundef %lock.i) #23
  %15 = ptrtoint ptr %ctl to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %ret.0.i, ptr %ctl, align 8
  %type56 = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 1
  %16 = ptrtoint ptr %type56 to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %type, ptr %type56, align 8
  %and.i.i = and i64 %type, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.else.i.i, label %find_next_chunk.exit.btrfs_bg_flags_to_raid_index.exit.i_crit_edge

find_next_chunk.exit.btrfs_bg_flags_to_raid_index.exit.i_crit_edge: ; preds = %find_next_chunk.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit.i

if.else.i.i:                                      ; preds = %find_next_chunk.exit
  %and1.i.i = and i64 %type, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i.i)
  %tobool2.not.i.i = icmp eq i64 %and1.i.i, 0
  br i1 %tobool2.not.i.i, label %if.else4.i.i, label %if.else.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge

if.else.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge: ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit.i

if.else4.i.i:                                     ; preds = %if.else.i.i
  %and5.i.i = and i64 %type, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5.i.i)
  %tobool6.not.i.i = icmp eq i64 %and5.i.i, 0
  br i1 %tobool6.not.i.i, label %if.else8.i.i, label %if.else4.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge

if.else4.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge: ; preds = %if.else4.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit.i

if.else8.i.i:                                     ; preds = %if.else4.i.i
  %and9.i.i = and i64 %type, 1024
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and9.i.i)
  %tobool10.not.i.i = icmp eq i64 %and9.i.i, 0
  br i1 %tobool10.not.i.i, label %if.else12.i.i, label %if.else8.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge

if.else8.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge: ; preds = %if.else8.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit.i

if.else12.i.i:                                    ; preds = %if.else8.i.i
  %and13.i.i = and i64 %type, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and13.i.i)
  %tobool14.not.i.i = icmp eq i64 %and13.i.i, 0
  br i1 %tobool14.not.i.i, label %if.else16.i.i, label %if.else12.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge

if.else12.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge: ; preds = %if.else12.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit.i

if.else16.i.i:                                    ; preds = %if.else12.i.i
  %and17.i.i = and i64 %type, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and17.i.i)
  %tobool18.not.i.i = icmp eq i64 %and17.i.i, 0
  br i1 %tobool18.not.i.i, label %if.else20.i.i, label %if.else16.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge

if.else16.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge: ; preds = %if.else16.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit.i

if.else20.i.i:                                    ; preds = %if.else16.i.i
  %and21.i.i = and i64 %type, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and21.i.i)
  %tobool22.not.i.i = icmp eq i64 %and21.i.i, 0
  br i1 %tobool22.not.i.i, label %if.else24.i.i, label %if.else20.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge

if.else20.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge: ; preds = %if.else20.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit.i

if.else24.i.i:                                    ; preds = %if.else20.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %and25.i.i = and i64 %type, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and25.i.i)
  %tobool26.not.i.i = icmp eq i64 %and25.i.i, 0
  %..i.i = select i1 %tobool26.not.i.i, i32 4, i32 6
  br label %btrfs_bg_flags_to_raid_index.exit.i

btrfs_bg_flags_to_raid_index.exit.i:              ; preds = %if.else24.i.i, %if.else20.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge, %if.else16.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge, %if.else12.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge, %if.else8.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge, %if.else4.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge, %if.else.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge, %find_next_chunk.exit.btrfs_bg_flags_to_raid_index.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ 0, %find_next_chunk.exit.btrfs_bg_flags_to_raid_index.exit.i_crit_edge ], [ 1, %if.else.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge ], [ 7, %if.else4.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge ], [ 8, %if.else8.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge ], [ 2, %if.else12.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge ], [ 3, %if.else16.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge ], [ 5, %if.else20.i.i.btrfs_bg_flags_to_raid_index.exit.i_crit_edge ], [ %..i.i, %if.else24.i.i ]
  %arrayidx.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i
  %17 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %arrayidx.i, align 8
  %conv.i105 = zext i8 %18 to i32
  %sub_stripes1.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 3
  %19 = ptrtoint ptr %sub_stripes1.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %conv.i105, ptr %sub_stripes1.i, align 4
  %dev_stripes.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i, i32 1
  %20 = ptrtoint ptr %dev_stripes.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %dev_stripes.i, align 1
  %conv3.i = zext i8 %21 to i32
  %dev_stripes4.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 4
  %22 = ptrtoint ptr %dev_stripes4.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %conv3.i, ptr %dev_stripes4.i, align 8
  %devs_max.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i, i32 2
  %23 = ptrtoint ptr %devs_max.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %devs_max.i, align 2
  %conv6.i = zext i8 %24 to i32
  %devs_max7.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 5
  %25 = ptrtoint ptr %devs_max7.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %conv6.i, ptr %devs_max7.i, align 4
  %26 = lshr i32 105, %retval.0.i.i
  %27 = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.not.not.i = icmp eq i32 %27, 0
  br i1 %tobool.not.not.i, label %btrfs_bg_flags_to_raid_index.exit.i.if.end.i108_crit_edge, label %if.then.i107

btrfs_bg_flags_to_raid_index.exit.i.if.end.i108_crit_edge: ; preds = %btrfs_bg_flags_to_raid_index.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i108

if.then.i107:                                     ; preds = %btrfs_bg_flags_to_raid_index.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %fs_info.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %3, i32 0, i32 19
  %28 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %fs_info.i, align 4
  %nodesize.i.i.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %29, i32 0, i32 166
  %30 = ptrtoint ptr %nodesize.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %nodesize.i.i.i, align 8
  %sub.i = add i32 %31, -206
  %div48.i = lshr i32 %sub.i, 5
  %add.i106 = add nuw nsw i32 %div48.i, 1
  %32 = ptrtoint ptr %devs_max7.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %add.i106, ptr %devs_max7.i, align 4
  br label %if.end.i108

if.end.i108:                                      ; preds = %if.then.i107, %btrfs_bg_flags_to_raid_index.exit.i.if.end.i108_crit_edge
  %devs_min.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i, i32 3
  %33 = ptrtoint ptr %devs_min.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %devs_min.i, align 1
  %conv12.i = zext i8 %34 to i32
  %devs_min13.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 6
  %35 = ptrtoint ptr %devs_min13.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %conv12.i, ptr %devs_min13.i, align 8
  %devs_increment.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i, i32 5
  %36 = ptrtoint ptr %devs_increment.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %devs_increment.i, align 1
  %conv15.i = zext i8 %37 to i32
  %devs_increment16.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 7
  %38 = ptrtoint ptr %devs_increment16.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %conv15.i, ptr %devs_increment16.i, align 4
  %ncopies.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i, i32 6
  %39 = ptrtoint ptr %ncopies.i to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %ncopies.i, align 2
  %conv18.i = zext i8 %40 to i32
  %ncopies19.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 8
  %41 = ptrtoint ptr %ncopies19.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %conv18.i, ptr %ncopies19.i, align 8
  %nparity.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i, i32 7
  %42 = ptrtoint ptr %nparity.i to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %nparity.i, align 1
  %conv21.i = zext i8 %43 to i32
  %nparity22.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 9
  %44 = ptrtoint ptr %nparity22.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %conv21.i, ptr %nparity22.i, align 4
  %ndevs.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 15
  %45 = ptrtoint ptr %ndevs.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 0, ptr %ndevs.i, align 8
  %chunk_alloc_policy.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %3, i32 0, i32 24
  %46 = ptrtoint ptr %chunk_alloc_policy.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %chunk_alloc_policy.i, align 8
  %48 = zext i32 %47 to i64
  call void @__sanitizer_cov_trace_switch(i64 %48, ptr @__sancov_gen_cov_switch_values.199)
  switch i32 %47, label %do.body.i [
    i32 0, label %sw.bb.i
    i32 1, label %sw.bb23.i
  ]

sw.bb.i:                                          ; preds = %if.end.i108
  %and.i49.i = and i64 %type, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i49.i)
  %tobool.not.i50.i = icmp eq i64 %and.i49.i, 0
  br i1 %tobool.not.i50.i, label %if.else.i51.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #25
  %max_stripe_size.i.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 10
  %49 = ptrtoint ptr %max_stripe_size.i.i to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 1073741824, ptr %max_stripe_size.i.i, align 8
  %max_chunk_size.i.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 11
  %50 = ptrtoint ptr %max_chunk_size.i.i to i32
  call void @__asan_store8_noabort(i32 %50)
  store i64 10737418240, ptr %max_chunk_size.i.i, align 8
  br label %init_alloc_chunk_ctl_policy_regular.exit.i

if.else.i51.i:                                    ; preds = %sw.bb.i
  %and2.i.i = and i64 %type, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and2.i.i)
  %tobool3.not.i.i = icmp eq i64 %and2.i.i, 0
  br i1 %tobool3.not.i.i, label %if.else11.i.i, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.else.i51.i
  call void @__sanitizer_cov_trace_pc() #25
  %total_rw_bytes.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %3, i32 0, i32 8
  %51 = ptrtoint ptr %total_rw_bytes.i.i to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %total_rw_bytes.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 53687091200, i64 %52)
  %cmp.i.i = icmp ugt i64 %52, 53687091200
  %spec.select.i.i = select i1 %cmp.i.i, i64 1073741824, i64 268435456
  %53 = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 10
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 %spec.select.i.i, ptr %53, align 8
  %max_chunk_size10.i.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 11
  %55 = ptrtoint ptr %max_chunk_size10.i.i to i32
  call void @__asan_store8_noabort(i32 %55)
  store i64 %spec.select.i.i, ptr %max_chunk_size10.i.i, align 8
  br label %init_alloc_chunk_ctl_policy_regular.exit.i

if.else11.i.i:                                    ; preds = %if.else.i51.i
  %and12.i.i = and i64 %type, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and12.i.i)
  %tobool13.not.i.i = icmp eq i64 %and12.i.i, 0
  br i1 %tobool13.not.i.i, label %do.body.i.i, label %if.then14.i.i

if.then14.i.i:                                    ; preds = %if.else11.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %max_stripe_size15.i.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 10
  %56 = ptrtoint ptr %max_stripe_size15.i.i to i32
  call void @__asan_store8_noabort(i32 %56)
  store i64 33554432, ptr %max_stripe_size15.i.i, align 8
  %max_chunk_size17.i.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 11
  %57 = ptrtoint ptr %max_chunk_size17.i.i to i32
  call void @__asan_store8_noabort(i32 %57)
  store i64 67108864, ptr %max_chunk_size17.i.i, align 8
  %58 = ptrtoint ptr %devs_max7.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %devs_max7.i, align 4
  %60 = tail call i32 @llvm.smin.i32(i32 %59, i32 58) #23
  %61 = ptrtoint ptr %devs_max7.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %60, ptr %devs_max7.i, align 4
  br label %init_alloc_chunk_ctl_policy_regular.exit.i

do.body.i.i:                                      ; preds = %if.else11.i.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5125, 0\0A.popsection", ""() #23, !srcloc !476
  unreachable

init_alloc_chunk_ctl_policy_regular.exit.i:       ; preds = %if.then14.i.i, %if.then4.i.i, %if.then.i.i
  %total_rw_bytes27.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %3, i32 0, i32 8
  %62 = ptrtoint ptr %total_rw_bytes27.i.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %total_rw_bytes27.i.i, align 8
  %div79.i.i1.i.i.i = lshr i64 %63, 1
  %64 = tail call i64 asm "umlal\09${0:Q}, ${0:R}, ${1:Q}, ${2:Q}\0A\09mov\09${0:Q}, #0", "=&r,r,r,0,~{cc}"(i64 3689348814741910323, i64 %div79.i.i1.i.i.i, i64 3689348814741910323) #35, !srcloc !477
  %65 = tail call i64 asm "umlal\09${0:R}, ${0:Q}, ${1:R}, ${2:Q}\0A\09umlal\09${0:R}, ${0:Q}, ${1:Q}, ${2:R}\0A\09mov\09${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${1:R}, ${2:R}", "=&r,r,r,0,~{cc}"(i64 3689348814741910323, i64 %div79.i.i1.i.i.i, i64 %64) #35, !srcloc !478
  %max_chunk_size28.i.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 11
  %66 = ptrtoint ptr %max_chunk_size28.i.i to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %max_chunk_size28.i.i, align 8
  %68 = tail call i64 @llvm.umin.i64(i64 %65, i64 %67) #23
  %69 = ptrtoint ptr %max_chunk_size28.i.i to i32
  call void @__asan_store8_noabort(i32 %69)
  store i64 %68, ptr %max_chunk_size28.i.i, align 8
  %mul36.i.i = shl nuw nsw i32 %conv3.i, 16
  %conv.i68.i = zext i32 %mul36.i.i to i64
  br label %init_alloc_chunk_ctl.exit

sw.bb23.i:                                        ; preds = %if.end.i108
  %fs_info.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %3, i32 0, i32 19
  %70 = ptrtoint ptr %fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %fs_info.i.i, align 4
  %72 = getelementptr inbounds %struct.btrfs_fs_info, ptr %71, i32 0, i32 176
  %73 = ptrtoint ptr %72 to i32
  call void @__asan_load8_noabort(i32 %73)
  %74 = load i64, ptr %72, align 8
  %max_stripe_size.i53.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 10
  %75 = ptrtoint ptr %max_stripe_size.i53.i to i32
  call void @__asan_store8_noabort(i32 %75)
  store i64 %74, ptr %max_stripe_size.i53.i, align 8
  %and.i54.i = and i64 %type, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i54.i)
  %tobool.not.i55.i = icmp eq i64 %and.i54.i, 0
  br i1 %tobool.not.i55.i, label %if.else.i60.i, label %if.then.i57.i

if.then.i57.i:                                    ; preds = %sw.bb23.i
  call void @__sanitizer_cov_trace_pc() #25
  %neg.i.i = sub i64 0, %74
  %and4.i.i = and i64 %neg.i.i, 10737418240
  %max_chunk_size.i56.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 11
  %76 = ptrtoint ptr %max_chunk_size.i56.i to i32
  call void @__asan_store8_noabort(i32 %76)
  store i64 %and4.i.i, ptr %max_chunk_size.i56.i, align 8
  br label %init_alloc_chunk_ctl_policy_zoned.exit.i

if.else.i60.i:                                    ; preds = %sw.bb23.i
  %and5.i58.i = and i64 %type, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5.i58.i)
  %tobool6.not.i59.i = icmp eq i64 %and5.i58.i, 0
  br i1 %tobool6.not.i59.i, label %if.else10.i.i, label %if.then7.i.i

if.then7.i.i:                                     ; preds = %if.else.i60.i
  call void @__sanitizer_cov_trace_pc() #25
  %max_chunk_size9.i.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 11
  %77 = ptrtoint ptr %max_chunk_size9.i.i to i32
  call void @__asan_store8_noabort(i32 %77)
  store i64 %74, ptr %max_chunk_size9.i.i, align 8
  br label %init_alloc_chunk_ctl_policy_zoned.exit.i

if.else10.i.i:                                    ; preds = %if.else.i60.i
  %and11.i.i = and i64 %type, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and11.i.i)
  %tobool12.not.i.i = icmp eq i64 %and11.i.i, 0
  br i1 %tobool12.not.i.i, label %do.body.i62.i, label %if.then13.i.i

if.then13.i.i:                                    ; preds = %if.else10.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %mul15.i.i = shl i64 %74, 1
  %max_chunk_size16.i.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 11
  %78 = ptrtoint ptr %max_chunk_size16.i.i to i32
  call void @__asan_store8_noabort(i32 %78)
  store i64 %mul15.i.i, ptr %max_chunk_size16.i.i, align 8
  %79 = ptrtoint ptr %devs_max7.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %devs_max7.i, align 4
  %81 = tail call i32 @llvm.smin.i32(i32 %80, i32 58) #23
  %82 = ptrtoint ptr %devs_max7.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 %81, ptr %devs_max7.i, align 4
  br label %init_alloc_chunk_ctl_policy_zoned.exit.i

do.body.i62.i:                                    ; preds = %if.else10.i.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5156, 0\0A.popsection", ""() #23, !srcloc !479
  unreachable

init_alloc_chunk_ctl_policy_zoned.exit.i:         ; preds = %if.then13.i.i, %if.then7.i.i, %if.then.i57.i
  %mul.i.i = mul nuw nsw i32 %conv12.i, %conv3.i
  %sub.i63.i = sub nsw i32 %mul.i.i, %conv21.i
  %div.i.i = sdiv i32 %sub.i63.i, %conv18.i
  %conv.i64.i = sext i32 %div.i.i to i64
  %mul1.i.i = mul i64 %74, %conv.i64.i
  %total_rw_bytes.i65.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %3, i32 0, i32 8
  %83 = ptrtoint ptr %total_rw_bytes.i65.i to i32
  call void @__asan_load8_noabort(i32 %83)
  %84 = load i64, ptr %total_rw_bytes.i65.i, align 8
  %div79.i.i1.i.i66.i = lshr i64 %84, 1
  %85 = tail call i64 asm "umlal\09${0:Q}, ${0:R}, ${1:Q}, ${2:Q}\0A\09mov\09${0:Q}, #0", "=&r,r,r,0,~{cc}"(i64 3689348814741910323, i64 %div79.i.i1.i.i66.i, i64 3689348814741910323) #35, !srcloc !477
  %86 = tail call i64 asm "umlal\09${0:R}, ${0:Q}, ${1:R}, ${2:Q}\0A\09umlal\09${0:R}, ${0:Q}, ${1:Q}, ${2:R}\0A\09mov\09${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${1:R}, ${2:R}", "=&r,r,r,0,~{cc}"(i64 3689348814741910323, i64 %div79.i.i1.i.i66.i, i64 %85) #35, !srcloc !478
  %neg26.i.i = sub i64 0, %74
  %and27.i.i = and i64 %86, %neg26.i.i
  %87 = tail call i64 @llvm.umax.i64(i64 %and27.i.i, i64 %mul1.i.i) #23
  %max_chunk_size35.i.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 11
  %88 = ptrtoint ptr %max_chunk_size35.i.i to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %max_chunk_size35.i.i, align 8
  %90 = tail call i64 @llvm.umin.i64(i64 %87, i64 %89) #23
  %91 = ptrtoint ptr %max_chunk_size35.i.i to i32
  call void @__asan_store8_noabort(i32 %91)
  store i64 %90, ptr %max_chunk_size35.i.i, align 8
  %conv45.i69.i = zext i8 %21 to i64
  %mul46.i.i = mul i64 %74, %conv45.i69.i
  br label %init_alloc_chunk_ctl.exit

do.body.i:                                        ; preds = %if.end.i108
  call void @__sanitizer_cov_trace_pc() #25
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5191, 0\0A.popsection", ""() #23, !srcloc !480
  unreachable

init_alloc_chunk_ctl.exit:                        ; preds = %init_alloc_chunk_ctl_policy_zoned.exit.i, %init_alloc_chunk_ctl_policy_regular.exit.i
  %mul46.i.sink.i = phi i64 [ %mul46.i.i, %init_alloc_chunk_ctl_policy_zoned.exit.i ], [ %conv.i68.i, %init_alloc_chunk_ctl_policy_regular.exit.i ]
  %dev_extent_min.i67.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 12
  %92 = ptrtoint ptr %dev_extent_min.i67.i to i32
  call void @__asan_store8_noabort(i32 %92)
  store i64 %mul46.i.sink.i, ptr %dev_extent_min.i67.i, align 8
  %rw_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %3, i32 0, i32 6
  %93 = ptrtoint ptr %rw_devices to i32
  call void @__asan_load8_noabort(i32 %93)
  %94 = load i64, ptr %rw_devices, align 8
  %conv = trunc i64 %94 to i32
  %95 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %conv, i32 32) #23
  %96 = extractvalue { i32, i1 } %95, 1
  br i1 %96, label %init_alloc_chunk_ctl.exit.cleanup_crit_edge, label %if.end7.i.i, !prof !424

init_alloc_chunk_ctl.exit.cleanup_crit_edge:      ; preds = %init_alloc_chunk_ctl.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end7.i.i:                                      ; preds = %init_alloc_chunk_ctl.exit
  %97 = extractvalue { i32, i1 } %95, 0
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %97, i32 noundef 3392) #30
  %tobool58.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool58.not, label %if.end7.i.i.cleanup_crit_edge, label %if.end61

if.end7.i.i.cleanup_crit_edge:                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end61:                                         ; preds = %if.end7.i.i
  %call62 = call fastcc i32 @gather_device_info(ptr noundef %3, ptr noundef nonnull %ctl, ptr noundef nonnull %call8.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call62)
  %cmp63 = icmp slt i32 %call62, 0
  br i1 %cmp63, label %if.then65, label %if.end67

if.then65:                                        ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #25
  %98 = inttoptr i32 %call62 to ptr
  br label %out

if.end67:                                         ; preds = %if.end61
  %call68 = call fastcc i32 @decide_stripe_size(ptr noundef %3, ptr noundef nonnull %ctl, ptr noundef nonnull %call8.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call68)
  %cmp69 = icmp slt i32 %call68, 0
  br i1 %cmp69, label %if.then71, label %if.end73

if.then71:                                        ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #25
  %99 = inttoptr i32 %call68 to ptr
  br label %out

if.end73:                                         ; preds = %if.end67
  %100 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %fs_info, align 4
  %102 = ptrtoint ptr %ctl to i32
  call void @__asan_load8_noabort(i32 %102)
  %103 = load i64, ptr %ctl, align 8
  %104 = ptrtoint ptr %type56 to i32
  call void @__asan_load8_noabort(i32 %104)
  %105 = load i64, ptr %type56, align 8
  %num_stripes.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 2
  %106 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %num_stripes.i, align 8
  %mul.i = mul i32 %107, 24
  %add.i111 = add i32 %mul.i, 40
  %call9.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %add.i111, i32 noundef 3136) #30
  %tobool.not.i118 = icmp eq ptr %call9.i.i, null
  br i1 %tobool.not.i118, label %if.end73.out_crit_edge, label %if.end.i120

if.end73.out_crit_edge:                           ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end.i120:                                      ; preds = %if.end73
  %108 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %num_stripes.i, align 8
  %num_stripes5.i = getelementptr inbounds %struct.map_lookup, ptr %call9.i.i, i32 0, i32 4
  %110 = ptrtoint ptr %num_stripes5.i to i32
  call void @__asan_store4_noabort(i32 %110)
  store i32 %109, ptr %num_stripes5.i, align 8
  %111 = ptrtoint ptr %ndevs.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %ndevs.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %112)
  %cmp182.i = icmp sgt i32 %112, 0
  br i1 %cmp182.i, label %for.cond6.preheader.lr.ph.i, label %if.end.i120.for.end21.i_crit_edge

if.end.i120.for.end21.i_crit_edge:                ; preds = %if.end.i120
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end21.i

for.cond6.preheader.lr.ph.i:                      ; preds = %if.end.i120
  %stripe_size.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 13
  %113 = ptrtoint ptr %dev_stripes4.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %dev_stripes4.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %114)
  %cmp7180.i = icmp sgt i32 %114, 0
  %115 = ptrtoint ptr %ndevs.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %ndevs.i, align 8
  br label %for.cond6.preheader.i

for.cond6.preheader.i:                            ; preds = %for.inc19.i.for.cond6.preheader.i_crit_edge, %for.cond6.preheader.lr.ph.i
  %i.0183.i = phi i32 [ 0, %for.cond6.preheader.lr.ph.i ], [ %inc20.i, %for.inc19.i.for.cond6.preheader.i_crit_edge ]
  br i1 %cmp7180.i, label %for.body8.lr.ph.i, label %for.cond6.preheader.i.for.inc19.i_crit_edge

for.cond6.preheader.i.for.inc19.i_crit_edge:      ; preds = %for.cond6.preheader.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc19.i

for.body8.lr.ph.i:                                ; preds = %for.cond6.preheader.i
  %arrayidx.i122 = getelementptr %struct.btrfs_device_info, ptr %call8.i.i, i32 %i.0183.i
  %dev_offset.i = getelementptr %struct.btrfs_device_info, ptr %call8.i.i, i32 %i.0183.i, i32 1
  %117 = ptrtoint ptr %arrayidx.i122 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %arrayidx.i122, align 32
  %119 = ptrtoint ptr %dev_offset.i to i32
  call void @__asan_load8_noabort(i32 %119)
  %120 = load i64, ptr %dev_offset.i, align 8
  %121 = ptrtoint ptr %stripe_size.i to i32
  call void @__asan_load8_noabort(i32 %121)
  %122 = load i64, ptr %stripe_size.i, align 8
  %123 = ptrtoint ptr %dev_stripes4.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %dev_stripes4.i, align 8
  br label %for.body8.i

for.body8.i:                                      ; preds = %for.body8.i.for.body8.i_crit_edge, %for.body8.lr.ph.i
  %125 = phi i32 [ %114, %for.body8.lr.ph.i ], [ %124, %for.body8.i.for.body8.i_crit_edge ]
  %j.0181.i = phi i32 [ 0, %for.body8.lr.ph.i ], [ %inc.i, %for.body8.i.for.body8.i_crit_edge ]
  %mul10.i = mul i32 %125, %i.0183.i
  %add11.i = add i32 %mul10.i, %j.0181.i
  %arrayidx12.i = getelementptr %struct.map_lookup, ptr %call9.i.i, i32 0, i32 7, i32 %add11.i
  %126 = ptrtoint ptr %arrayidx12.i to i32
  call void @__asan_store4_noabort(i32 %126)
  store ptr %118, ptr %arrayidx12.i, align 8
  %conv.i123 = zext i32 %j.0181.i to i64
  %mul15.i = mul i64 %122, %conv.i123
  %add16.i = add i64 %mul15.i, %120
  %physical.i = getelementptr %struct.map_lookup, ptr %call9.i.i, i32 0, i32 7, i32 %add11.i, i32 1
  %127 = ptrtoint ptr %physical.i to i32
  call void @__asan_store8_noabort(i32 %127)
  store i64 %add16.i, ptr %physical.i, align 8
  %inc.i = add nuw nsw i32 %j.0181.i, 1
  %cmp7.i = icmp slt i32 %inc.i, %124
  br i1 %cmp7.i, label %for.body8.i.for.body8.i_crit_edge, label %for.body8.i.for.inc19.i_crit_edge

for.body8.i.for.inc19.i_crit_edge:                ; preds = %for.body8.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc19.i

for.body8.i.for.body8.i_crit_edge:                ; preds = %for.body8.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body8.i

for.inc19.i:                                      ; preds = %for.body8.i.for.inc19.i_crit_edge, %for.cond6.preheader.i.for.inc19.i_crit_edge
  %inc20.i = add nuw nsw i32 %i.0183.i, 1
  %cmp.i124 = icmp slt i32 %inc20.i, %116
  br i1 %cmp.i124, label %for.inc19.i.for.cond6.preheader.i_crit_edge, label %for.inc19.i.for.end21.i_crit_edge

for.inc19.i.for.end21.i_crit_edge:                ; preds = %for.inc19.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end21.i

for.inc19.i.for.cond6.preheader.i_crit_edge:      ; preds = %for.inc19.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.cond6.preheader.i

for.end21.i:                                      ; preds = %for.inc19.i.for.end21.i_crit_edge, %if.end.i120.for.end21.i_crit_edge
  %stripe_len.i = getelementptr inbounds %struct.map_lookup, ptr %call9.i.i, i32 0, i32 3
  %128 = ptrtoint ptr %stripe_len.i to i32
  call void @__asan_store8_noabort(i32 %128)
  store i64 65536, ptr %stripe_len.i, align 16
  %io_align.i = getelementptr inbounds %struct.map_lookup, ptr %call9.i.i, i32 0, i32 1
  %129 = ptrtoint ptr %io_align.i to i32
  call void @__asan_store4_noabort(i32 %129)
  store i32 65536, ptr %io_align.i, align 8
  %io_width.i = getelementptr inbounds %struct.map_lookup, ptr %call9.i.i, i32 0, i32 2
  %130 = ptrtoint ptr %io_width.i to i32
  call void @__asan_store4_noabort(i32 %130)
  store i32 65536, ptr %io_width.i, align 4
  %131 = ptrtoint ptr %call9.i.i to i32
  call void @__asan_store8_noabort(i32 %131)
  store i64 %105, ptr %call9.i.i, align 128
  %132 = ptrtoint ptr %sub_stripes1.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %sub_stripes1.i, align 4
  %sub_stripes23.i = getelementptr inbounds %struct.map_lookup, ptr %call9.i.i, i32 0, i32 5
  %134 = ptrtoint ptr %sub_stripes23.i to i32
  call void @__asan_store4_noabort(i32 %134)
  store i32 %133, ptr %sub_stripes23.i, align 4
  %chunk_size.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 14
  %135 = ptrtoint ptr %chunk_size.i to i32
  call void @__asan_load8_noabort(i32 %135)
  %136 = load i64, ptr %chunk_size.i, align 8
  call fastcc void @trace_btrfs_chunk_alloc(ptr noundef %101, ptr noundef nonnull %call9.i.i, i64 noundef %103, i64 noundef %136) #23
  %call24.i = call ptr @alloc_extent_map() #23
  %tobool25.not.i = icmp eq ptr %call24.i, null
  br i1 %tobool25.not.i, label %if.then26.i, label %if.end28.i

if.then26.i:                                      ; preds = %for.end21.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @kfree(ptr noundef nonnull %call9.i.i) #23
  br label %out

if.end28.i:                                       ; preds = %for.end21.i
  %flags.i = getelementptr inbounds %struct.extent_map, ptr %call24.i, i32 0, i32 11
  call void @_set_bit(i32 noundef 5, ptr noundef %flags.i) #23
  %map_lookup.i = getelementptr inbounds %struct.extent_map, ptr %call24.i, i32 0, i32 12
  %137 = ptrtoint ptr %map_lookup.i to i32
  call void @__asan_store4_noabort(i32 %137)
  store ptr %call9.i.i, ptr %map_lookup.i, align 4
  %start29.i = getelementptr inbounds %struct.extent_map, ptr %call24.i, i32 0, i32 1
  %138 = ptrtoint ptr %start29.i to i32
  call void @__asan_store8_noabort(i32 %138)
  store i64 %103, ptr %start29.i, align 8
  %139 = ptrtoint ptr %chunk_size.i to i32
  call void @__asan_load8_noabort(i32 %139)
  %140 = load i64, ptr %chunk_size.i, align 8
  %len.i125 = getelementptr inbounds %struct.extent_map, ptr %call24.i, i32 0, i32 2
  %141 = ptrtoint ptr %len.i125 to i32
  call void @__asan_store8_noabort(i32 %141)
  store i64 %140, ptr %len.i125, align 8
  %block_start.i = getelementptr inbounds %struct.extent_map, ptr %call24.i, i32 0, i32 8
  %142 = ptrtoint ptr %block_start.i to i32
  call void @__asan_store8_noabort(i32 %142)
  store i64 0, ptr %block_start.i, align 8
  %block_len.i = getelementptr inbounds %struct.extent_map, ptr %call24.i, i32 0, i32 9
  %143 = ptrtoint ptr %block_len.i to i32
  call void @__asan_store8_noabort(i32 %143)
  store i64 %140, ptr %block_len.i, align 8
  %stripe_size32.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 13
  %144 = ptrtoint ptr %stripe_size32.i to i32
  call void @__asan_load8_noabort(i32 %144)
  %145 = load i64, ptr %stripe_size32.i, align 8
  %orig_block_len.i = getelementptr inbounds %struct.extent_map, ptr %call24.i, i32 0, i32 6
  %146 = ptrtoint ptr %orig_block_len.i to i32
  call void @__asan_store8_noabort(i32 %146)
  store i64 %145, ptr %orig_block_len.i, align 8
  %mapping_tree.i126 = getelementptr inbounds %struct.btrfs_fs_info, ptr %101, i32 0, i32 19
  %lock.i127 = getelementptr inbounds %struct.btrfs_fs_info, ptr %101, i32 0, i32 19, i32 2
  call void @_raw_write_lock(ptr noundef %lock.i127) #23
  %call33.i = call i32 @add_extent_mapping(ptr noundef %mapping_tree.i126, ptr noundef nonnull %call24.i, i32 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33.i)
  %tobool34.not.i = icmp eq i32 %call33.i, 0
  call void @_raw_write_unlock(ptr noundef %lock.i127) #23
  br i1 %tobool34.not.i, label %if.end38.i, label %if.then35.i

if.then35.i:                                      ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @free_extent_map(ptr noundef nonnull %call24.i) #23
  %147 = inttoptr i32 %call33.i to ptr
  br label %out

if.end38.i:                                       ; preds = %if.end28.i
  %148 = ptrtoint ptr %chunk_size.i to i32
  call void @__asan_load8_noabort(i32 %148)
  %149 = load i64, ptr %chunk_size.i, align 8
  %call41.i = call ptr @btrfs_make_block_group(ptr noundef %trans, i64 noundef 0, i64 noundef %105, i64 noundef %103, i64 noundef %149) #23
  %cmp.i157.i = icmp ugt ptr %call41.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i157.i, label %error_del_extent.i, label %for.cond45.preheader.i

for.cond45.preheader.i:                           ; preds = %if.end38.i
  %150 = ptrtoint ptr %num_stripes5.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %num_stripes5.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %151)
  %cmp47185.i = icmp sgt i32 %151, 0
  br i1 %cmp47185.i, label %for.body49.lr.ph.i, label %for.cond45.preheader.i.for.end63.i_crit_edge

for.cond45.preheader.i.for.end63.i_crit_edge:     ; preds = %for.cond45.preheader.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end63.i

for.body49.lr.ph.i:                               ; preds = %for.cond45.preheader.i
  %transaction.i = getelementptr inbounds %struct.btrfs_trans_handle, ptr %trans, i32 0, i32 4
  br label %for.body49.i

for.body49.i:                                     ; preds = %if.end60.i.for.body49.i_crit_edge, %for.body49.lr.ph.i
  %i.1186.i = phi i32 [ 0, %for.body49.lr.ph.i ], [ %inc62.i, %if.end60.i.for.body49.i_crit_edge ]
  %arrayidx52.i = getelementptr %struct.map_lookup, ptr %call9.i.i, i32 0, i32 7, i32 %i.1186.i
  %152 = ptrtoint ptr %arrayidx52.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %arrayidx52.i, align 8
  %bytes_used.i = getelementptr inbounds %struct.btrfs_device, ptr %153, i32 0, i32 16
  %154 = ptrtoint ptr %bytes_used.i to i32
  call void @__asan_load8_noabort(i32 %154)
  %155 = load i64, ptr %bytes_used.i, align 8
  %156 = ptrtoint ptr %stripe_size32.i to i32
  call void @__asan_load8_noabort(i32 %156)
  %157 = load i64, ptr %stripe_size32.i, align 8
  %add55.i = add i64 %157, %155
  call fastcc void @btrfs_device_set_bytes_used(ptr noundef %153, i64 noundef %add55.i) #23
  %post_commit_list.i = getelementptr inbounds %struct.btrfs_device, ptr %153, i32 0, i32 2
  %158 = ptrtoint ptr %post_commit_list.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load volatile ptr, ptr %post_commit_list.i, align 4
  %cmp.i158.not.i = icmp eq ptr %159, %post_commit_list.i
  br i1 %cmp.i158.not.i, label %if.then58.i, label %for.body49.i.if.end60.i_crit_edge

for.body49.i.if.end60.i_crit_edge:                ; preds = %for.body49.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end60.i

if.then58.i:                                      ; preds = %for.body49.i
  %160 = ptrtoint ptr %transaction.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %transaction.i, align 4
  %dev_update_list.i = getelementptr inbounds %struct.btrfs_transaction, ptr %161, i32 0, i32 13
  %prev.i.i = getelementptr inbounds %struct.btrfs_transaction, ptr %161, i32 0, i32 13, i32 1
  %162 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %prev.i.i, align 4
  %call.i.i159.i = call zeroext i1 @__list_add_valid(ptr noundef %post_commit_list.i, ptr noundef %163, ptr noundef %dev_update_list.i) #23
  br i1 %call.i.i159.i, label %if.end.i.i160.i, label %if.then58.i.if.end60.i_crit_edge

if.then58.i.if.end60.i_crit_edge:                 ; preds = %if.then58.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end60.i

if.end.i.i160.i:                                  ; preds = %if.then58.i
  call void @__sanitizer_cov_trace_pc() #25
  %164 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %164)
  store ptr %post_commit_list.i, ptr %prev.i.i, align 4
  %165 = ptrtoint ptr %post_commit_list.i to i32
  call void @__asan_store4_noabort(i32 %165)
  store ptr %dev_update_list.i, ptr %post_commit_list.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.btrfs_device, ptr %153, i32 0, i32 2, i32 1
  %166 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %166)
  store ptr %163, ptr %prev3.i.i.i, align 4
  %167 = ptrtoint ptr %163 to i32
  call void @__asan_store4_noabort(i32 %167)
  store volatile ptr %post_commit_list.i, ptr %163, align 4
  br label %if.end60.i

if.end60.i:                                       ; preds = %if.end.i.i160.i, %if.then58.i.if.end60.i_crit_edge, %for.body49.i.if.end60.i_crit_edge
  %inc62.i = add nuw nsw i32 %i.1186.i, 1
  %168 = ptrtoint ptr %num_stripes5.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %num_stripes5.i, align 8
  %cmp47.i = icmp slt i32 %inc62.i, %169
  br i1 %cmp47.i, label %if.end60.i.for.body49.i_crit_edge, label %if.end60.i.for.end63.i_crit_edge

if.end60.i.for.end63.i_crit_edge:                 ; preds = %if.end60.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end63.i

if.end60.i.for.body49.i_crit_edge:                ; preds = %if.end60.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body49.i

for.end63.i:                                      ; preds = %if.end60.i.for.end63.i_crit_edge, %for.cond45.preheader.i.for.end63.i_crit_edge
  %.lcssa.i = phi i32 [ %151, %for.cond45.preheader.i.for.end63.i_crit_edge ], [ %169, %if.end60.i.for.end63.i_crit_edge ]
  %170 = ptrtoint ptr %stripe_size32.i to i32
  call void @__asan_load8_noabort(i32 %170)
  %171 = load i64, ptr %stripe_size32.i, align 8
  %conv66.i = sext i32 %.lcssa.i to i64
  %mul67.i = mul i64 %171, %conv66.i
  %free_chunk_space.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %101, i32 0, i32 17
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %free_chunk_space.i, i32 noundef 8) #23
  call void @generic_atomic64_sub(i64 noundef %mul67.i, ptr noundef %free_chunk_space.i) #23
  call void @free_extent_map(ptr noundef nonnull %call24.i) #23
  %and.i.i128 = and i64 %105, 384
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i128)
  %tobool.not.i.i129 = icmp eq i64 %and.i.i128, 0
  br i1 %tobool.not.i.i129, label %for.end63.i.check_raid56_incompat_flag.exit.i_crit_edge, label %if.end.i162.i

for.end63.i.check_raid56_incompat_flag.exit.i_crit_edge: ; preds = %for.end63.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %check_raid56_incompat_flag.exit.i

if.end.i162.i:                                    ; preds = %for.end63.i
  %super_copy.i.i.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %101, i32 0, i32 43
  %172 = ptrtoint ptr %super_copy.i.i.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %super_copy.i.i.i, align 8
  %incompat_flags.i.i.i.i = getelementptr inbounds %struct.btrfs_super_block, ptr %173, i32 0, i32 22
  %174 = ptrtoint ptr %incompat_flags.i.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %174, i32 8)
  %175 = load i64, ptr %incompat_flags.i.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %175)
  %tobool.not.i.i161.i = icmp sgt i64 %175, -1
  br i1 %tobool.not.i.i161.i, label %if.then.i.i.i130, label %if.end.i162.i.check_raid56_incompat_flag.exit.i_crit_edge

if.end.i162.i.check_raid56_incompat_flag.exit.i_crit_edge: ; preds = %if.end.i162.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %check_raid56_incompat_flag.exit.i

if.then.i.i.i130:                                 ; preds = %if.end.i162.i
  %super_lock.i.i.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %101, i32 0, i32 42
  call void @_raw_spin_lock(ptr noundef %super_lock.i.i.i) #23
  %176 = ptrtoint ptr %incompat_flags.i.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %176, i32 8)
  %177 = load i64, ptr %incompat_flags.i.i.i.i, align 1
  %178 = call i64 @llvm.bswap.i64(i64 %177) #23
  %and2.i.i.i = and i64 %178, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and2.i.i.i)
  %tobool3.not.i.i.i = icmp eq i64 %and2.i.i.i, 0
  br i1 %tobool3.not.i.i.i, label %if.then4.i.i.i, label %if.then.i.i.i130.if.end.i.i163.i_crit_edge

if.then.i.i.i130.if.end.i.i163.i_crit_edge:       ; preds = %if.then.i.i.i130
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i.i163.i

if.then4.i.i.i:                                   ; preds = %if.then.i.i.i130
  call void @__sanitizer_cov_trace_pc() #25
  %or.i.i.i = or i64 %178, 128
  %179 = call i64 @llvm.bswap.i64(i64 %or.i.i.i) #23
  %180 = ptrtoint ptr %incompat_flags.i.i.i.i to i32
  call void @__asan_storeN_noabort(i32 %180, i32 8)
  store i64 %179, ptr %incompat_flags.i.i.i.i, align 1
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %101, ptr noundef nonnull @.str.141, ptr noundef nonnull @.str.140, i64 noundef 128) #28
  br label %if.end.i.i163.i

if.end.i.i163.i:                                  ; preds = %if.then4.i.i.i, %if.then.i.i.i130.if.end.i.i163.i_crit_edge
  call void @_raw_spin_unlock(ptr noundef %super_lock.i.i.i) #23
  br label %check_raid56_incompat_flag.exit.i

check_raid56_incompat_flag.exit.i:                ; preds = %if.end.i.i163.i, %if.end.i162.i.check_raid56_incompat_flag.exit.i_crit_edge, %for.end63.i.check_raid56_incompat_flag.exit.i_crit_edge
  %and.i164.i = and i64 %105, 1536
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i164.i)
  %tobool.not.i165.i = icmp eq i64 %and.i164.i, 0
  br i1 %tobool.not.i165.i, label %check_raid56_incompat_flag.exit.i.out_crit_edge, label %if.end.i169.i

check_raid56_incompat_flag.exit.i.out_crit_edge:  ; preds = %check_raid56_incompat_flag.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end.i169.i:                                    ; preds = %check_raid56_incompat_flag.exit.i
  %super_copy.i.i166.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %101, i32 0, i32 43
  %181 = ptrtoint ptr %super_copy.i.i166.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load ptr, ptr %super_copy.i.i166.i, align 8
  %incompat_flags.i.i.i167.i = getelementptr inbounds %struct.btrfs_super_block, ptr %182, i32 0, i32 22
  %183 = ptrtoint ptr %incompat_flags.i.i.i167.i to i32
  call void @__asan_loadN_noabort(i32 %183, i32 8)
  %184 = load i64, ptr %incompat_flags.i.i.i167.i, align 1
  %185 = and i64 %184, 2251799813685248
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %185)
  %tobool.not.i.i168.i = icmp eq i64 %185, 0
  br i1 %tobool.not.i.i168.i, label %if.then.i.i173.i, label %if.end.i169.i.out_crit_edge

if.end.i169.i.out_crit_edge:                      ; preds = %if.end.i169.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.then.i.i173.i:                                 ; preds = %if.end.i169.i
  %super_lock.i.i170.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %101, i32 0, i32 42
  call void @_raw_spin_lock(ptr noundef %super_lock.i.i170.i) #23
  %186 = ptrtoint ptr %incompat_flags.i.i.i167.i to i32
  call void @__asan_loadN_noabort(i32 %186, i32 8)
  %187 = load i64, ptr %incompat_flags.i.i.i167.i, align 1
  %188 = call i64 @llvm.bswap.i64(i64 %187) #23
  %and2.i.i171.i = and i64 %188, 2048
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and2.i.i171.i)
  %tobool3.not.i.i172.i = icmp eq i64 %and2.i.i171.i, 0
  br i1 %tobool3.not.i.i172.i, label %if.then4.i.i175.i, label %if.then.i.i173.i.if.end.i.i176.i_crit_edge

if.then.i.i173.i.if.end.i.i176.i_crit_edge:       ; preds = %if.then.i.i173.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i.i176.i

if.then4.i.i175.i:                                ; preds = %if.then.i.i173.i
  call void @__sanitizer_cov_trace_pc() #25
  %or.i.i174.i = or i64 %188, 2048
  %189 = call i64 @llvm.bswap.i64(i64 %or.i.i174.i) #23
  %190 = ptrtoint ptr %incompat_flags.i.i.i167.i to i32
  call void @__asan_storeN_noabort(i32 %190, i32 8)
  store i64 %189, ptr %incompat_flags.i.i.i167.i, align 1
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %101, ptr noundef nonnull @.str.141, ptr noundef nonnull @.str.142, i64 noundef 2048) #28
  br label %if.end.i.i176.i

if.end.i.i176.i:                                  ; preds = %if.then4.i.i175.i, %if.then.i.i173.i.if.end.i.i176.i_crit_edge
  call void @_raw_spin_unlock(ptr noundef %super_lock.i.i170.i) #23
  br label %out

error_del_extent.i:                               ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @_raw_write_lock(ptr noundef %lock.i127) #23
  call void @remove_extent_mapping(ptr noundef %mapping_tree.i126, ptr noundef nonnull %call24.i) #23
  call void @_raw_write_unlock(ptr noundef %lock.i127) #23
  call void @free_extent_map(ptr noundef nonnull %call24.i) #23
  call void @free_extent_map(ptr noundef nonnull %call24.i) #23
  br label %out

out:                                              ; preds = %error_del_extent.i, %if.end.i.i176.i, %if.end.i169.i.out_crit_edge, %check_raid56_incompat_flag.exit.i.out_crit_edge, %if.then35.i, %if.then26.i, %if.end73.out_crit_edge, %if.then71, %if.then65
  %block_group.0 = phi ptr [ %98, %if.then65 ], [ %99, %if.then71 ], [ %147, %if.then35.i ], [ %call41.i, %error_del_extent.i ], [ inttoptr (i32 -12 to ptr), %if.then26.i ], [ inttoptr (i32 -12 to ptr), %if.end73.out_crit_edge ], [ %call41.i, %check_raid56_incompat_flag.exit.i.out_crit_edge ], [ %call41.i, %if.end.i169.i.out_crit_edge ], [ %call41.i, %if.end.i.i176.i ]
  call void @kfree(ptr noundef nonnull %call8.i.i) #23
  br label %cleanup

cleanup:                                          ; preds = %out, %if.end7.i.i.cleanup_crit_edge, %init_alloc_chunk_ctl.exit.cleanup_crit_edge, %if.then44, %do.body34, %if.then31.cleanup_crit_edge
  %retval.0 = phi ptr [ %block_group.0, %out ], [ inttoptr (i32 -28 to ptr), %do.body34 ], [ inttoptr (i32 -28 to ptr), %if.then44 ], [ inttoptr (i32 -28 to ptr), %if.then31.cleanup_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end7.i.i.cleanup_crit_edge ], [ inttoptr (i32 -12 to ptr), %init_alloc_chunk_ctl.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %ctl) #23
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_chunk_alloc_add_chunk_item(ptr noundef %trans, ptr nocapture noundef %bg) local_unnamed_addr #4 align 64 {
entry:
  %key = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info1 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %trans, i32 0, i32 16
  %0 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info1, align 4
  %chunk_root2 = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %chunk_root2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %chunk_root2, align 8
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #23
  %4 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %5 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %6 = call ptr @memset(ptr %key, i32 255, i32 17)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %7 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 50, i32 5
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !424

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 5578, i32 noundef 9, ptr noundef null) #23
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %start = getelementptr inbounds %struct.btrfs_block_group, ptr %bg, i32 0, i32 3
  %8 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %start, align 8
  %length = getelementptr inbounds %struct.btrfs_block_group, ptr %bg, i32 0, i32 4
  %10 = ptrtoint ptr %length to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %length, align 8
  %call26 = tail call ptr @btrfs_get_chunk_map(ptr noundef %1, i64 noundef %9, i64 noundef %11)
  %cmp.i = icmp ugt ptr %call26, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then28, label %if.end83

if.then28:                                        ; preds = %if.end
  %12 = ptrtoint ptr %call26 to i32
  %13 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %fs_info1, align 4
  %fs_state = getelementptr inbounds %struct.btrfs_fs_info, ptr %14, i32 0, i32 149
  %call32 = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32)
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %if.then34, label %if.then28.if.end80_crit_edge

if.then28.if.end80_crit_edge:                     ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end80

if.then34:                                        ; preds = %if.then28
  %15 = zext i32 %12 to i64
  call void @__sanitizer_cov_trace_switch(i64 %15, ptr @__sancov_gen_cov_switch_values.200)
  switch i32 %12, label %do.end50 [
    i32 -5, label %if.then34.do.body64_crit_edge
    i32 -30, label %if.then34.do.body64_crit_edge286
  ]

if.then34.do.body64_crit_edge286:                 ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body64

if.then34.do.body64_crit_edge:                    ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body64

do.end50:                                         ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 5583, i32 noundef 9, ptr noundef nonnull @.str.18, i32 noundef %12) #23
  br label %if.end80

do.body64:                                        ; preds = %if.then34.do.body64_crit_edge, %if.then34.do.body64_crit_edge286
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_chunk_alloc_add_chunk_item.__UNIQUE_ID_ddebug991, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_chunk_alloc_add_chunk_item, %if.then74)) #23
          to label %if.end80 [label %if.then74], !srcloc !431

if.then74:                                        ; preds = %do.body64
  call void @__sanitizer_cov_trace_pc() #25
  %16 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %fs_info1, align 4
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %17, ptr noundef nonnull @.str.22, i32 noundef %12) #28
  br label %if.end80

if.end80:                                         ; preds = %if.then74, %do.body64, %do.end50, %if.then28.if.end80_crit_edge
  tail call void @__btrfs_abort_transaction(ptr noundef %trans, ptr noundef nonnull @.str.52, i32 noundef 5583, i32 noundef %12) #28
  br label %cleanup189

if.end83:                                         ; preds = %if.end
  %map_lookup = getelementptr inbounds %struct.extent_map, ptr %call26, i32 0, i32 12
  %18 = ptrtoint ptr %map_lookup to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %map_lookup, align 4
  %num_stripes = getelementptr inbounds %struct.map_lookup, ptr %19, i32 0, i32 4
  %20 = ptrtoint ptr %num_stripes to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_stripes, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp.i271 = icmp eq i32 %21, 0
  br i1 %cmp.i271, label %do.body2.i, label %btrfs_chunk_item_size.exit, !prof !424

do.body2.i:                                       ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #25
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/ctree.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 119, 0\0A.popsection", ""() #23, !srcloc !472
  unreachable

btrfs_chunk_item_size.exit:                       ; preds = %if.end83
  %sub.i = shl i32 %21, 5
  %add.i = add i32 %sub.i, 48
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i, i32 noundef 3392) #30
  %tobool86.not = icmp eq ptr %call9.i.i, null
  br i1 %tobool86.not, label %if.then87, label %for.cond.preheader

for.cond.preheader:                               ; preds = %btrfs_chunk_item_size.exit
  %22 = ptrtoint ptr %num_stripes to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %num_stripes, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp148275 = icmp sgt i32 %23, 0
  br i1 %cmp148275, label %for.cond.preheader.for.body_crit_edge, label %for.cond.preheader.for.end167_crit_edge

for.cond.preheader.for.end167_crit_edge:          ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end167

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

if.then87:                                        ; preds = %btrfs_chunk_item_size.exit
  %24 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %fs_info1, align 4
  %fs_state90 = getelementptr inbounds %struct.btrfs_fs_info, ptr %25, i32 0, i32 149
  %call91 = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state90) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call91)
  %tobool92.not = icmp eq i32 %call91, 0
  br i1 %tobool92.not, label %do.end110, label %if.then87.if.end143_crit_edge

if.then87.if.end143_crit_edge:                    ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end143

do.end110:                                        ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 5593, i32 noundef 9, ptr noundef nonnull @.str.18, i32 noundef -12) #23
  br label %if.end143

if.end143:                                        ; preds = %do.end110, %if.then87.if.end143_crit_edge
  tail call void @__btrfs_abort_transaction(ptr noundef %trans, ptr noundef nonnull @.str.52, i32 noundef 5593, i32 noundef -12) #28
  br label %out

for.cond:                                         ; preds = %for.body
  %inc = add nuw nsw i32 %i.0276, 1
  %26 = ptrtoint ptr %num_stripes to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %num_stripes, align 8
  %cmp148 = icmp slt i32 %inc, %27
  br i1 %cmp148, label %for.cond.for.body_crit_edge, label %for.end

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.0276 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.map_lookup, ptr %19, i32 0, i32 7, i32 %i.0276
  %28 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx, align 8
  %call149 = tail call fastcc i32 @btrfs_update_device(ptr noundef %trans, ptr noundef %29)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call149)
  %tobool150.not = icmp eq i32 %call149, 0
  br i1 %tobool150.not, label %for.cond, label %for.body.out_crit_edge

for.body.out_crit_edge:                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

for.end:                                          ; preds = %for.cond
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %cmp156277 = icmp sgt i32 %27, 0
  br i1 %cmp156277, label %for.body157.preheader, label %for.end.for.end167_crit_edge

for.end.for.end167_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end167

for.body157.preheader:                            ; preds = %for.end
  %stripe153 = getelementptr inbounds %struct.btrfs_chunk, ptr %call9.i.i, i32 0, i32 9
  br label %for.body157

for.body157:                                      ; preds = %for.body157.for.body157_crit_edge, %for.body157.preheader
  %stripe.0279 = phi ptr [ %incdec.ptr, %for.body157.for.body157_crit_edge ], [ %stripe153, %for.body157.preheader ]
  %i.1278 = phi i32 [ %inc166, %for.body157.for.body157_crit_edge ], [ 0, %for.body157.preheader ]
  %arrayidx160 = getelementptr %struct.map_lookup, ptr %19, i32 0, i32 7, i32 %i.1278
  %30 = ptrtoint ptr %arrayidx160 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx160, align 8
  %physical = getelementptr %struct.map_lookup, ptr %19, i32 0, i32 7, i32 %i.1278, i32 1
  %32 = ptrtoint ptr %physical to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %physical, align 8
  %devid = getelementptr inbounds %struct.btrfs_device, ptr %31, i32 0, i32 13
  %34 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %devid, align 8
  %36 = tail call i64 @llvm.bswap.i64(i64 %35) #23
  %37 = ptrtoint ptr %stripe.0279 to i32
  call void @__asan_storeN_noabort(i32 %37, i32 8)
  store i64 %36, ptr %stripe.0279, align 1
  %offset.i = getelementptr inbounds %struct.btrfs_stripe, ptr %stripe.0279, i32 0, i32 1
  %38 = tail call i64 @llvm.bswap.i64(i64 %33) #23
  %39 = ptrtoint ptr %offset.i to i32
  call void @__asan_storeN_noabort(i32 %39, i32 8)
  store i64 %38, ptr %offset.i, align 1
  %dev_uuid = getelementptr inbounds %struct.btrfs_stripe, ptr %stripe.0279, i32 0, i32 2
  %uuid = getelementptr inbounds %struct.btrfs_device, ptr %31, i32 0, i32 21
  %40 = call ptr @memcpy(ptr %dev_uuid, ptr %uuid, i32 16)
  %incdec.ptr = getelementptr %struct.btrfs_stripe, ptr %stripe.0279, i32 1
  %inc166 = add nuw nsw i32 %i.1278, 1
  %41 = ptrtoint ptr %num_stripes to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %num_stripes, align 8
  %cmp156 = icmp slt i32 %inc166, %42
  br i1 %cmp156, label %for.body157.for.body157_crit_edge, label %for.body157.for.end167_crit_edge

for.body157.for.end167_crit_edge:                 ; preds = %for.body157
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end167

for.body157.for.body157_crit_edge:                ; preds = %for.body157
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body157

for.end167:                                       ; preds = %for.body157.for.end167_crit_edge, %for.end.for.end167_crit_edge, %for.cond.preheader.for.end167_crit_edge
  %43 = ptrtoint ptr %length to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %length, align 8
  %45 = tail call i64 @llvm.bswap.i64(i64 %44) #23
  %46 = ptrtoint ptr %call9.i.i to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %45, ptr %call9.i.i, align 128
  %owner.i = getelementptr inbounds %struct.btrfs_chunk, ptr %call9.i.i, i32 0, i32 1
  %47 = ptrtoint ptr %owner.i to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 144115188075855872, ptr %owner.i, align 8
  %stripe_len = getelementptr inbounds %struct.map_lookup, ptr %19, i32 0, i32 3
  %48 = ptrtoint ptr %stripe_len to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %stripe_len, align 8
  %stripe_len.i = getelementptr inbounds %struct.btrfs_chunk, ptr %call9.i.i, i32 0, i32 2
  %50 = tail call i64 @llvm.bswap.i64(i64 %49) #23
  %51 = ptrtoint ptr %stripe_len.i to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 %50, ptr %stripe_len.i, align 16
  %52 = ptrtoint ptr %19 to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %19, align 8
  %type.i = getelementptr inbounds %struct.btrfs_chunk, ptr %call9.i.i, i32 0, i32 3
  %54 = tail call i64 @llvm.bswap.i64(i64 %53) #23
  %55 = ptrtoint ptr %type.i to i32
  call void @__asan_store8_noabort(i32 %55)
  store i64 %54, ptr %type.i, align 8
  %56 = ptrtoint ptr %num_stripes to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %num_stripes, align 8
  %conv = trunc i32 %57 to i16
  %num_stripes.i = getelementptr inbounds %struct.btrfs_chunk, ptr %call9.i.i, i32 0, i32 7
  %58 = tail call i16 @llvm.bswap.i16(i16 %conv) #23
  %59 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_store2_noabort(i32 %59)
  store i16 %58, ptr %num_stripes.i, align 4
  %60 = ptrtoint ptr %stripe_len to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %stripe_len, align 8
  %conv171 = trunc i64 %61 to i32
  %io_align.i = getelementptr inbounds %struct.btrfs_chunk, ptr %call9.i.i, i32 0, i32 4
  %62 = tail call i32 @llvm.bswap.i32(i32 %conv171) #23
  %63 = ptrtoint ptr %io_align.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %62, ptr %io_align.i, align 32
  %64 = ptrtoint ptr %stripe_len to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %stripe_len, align 8
  %conv173 = trunc i64 %65 to i32
  %io_width.i = getelementptr inbounds %struct.btrfs_chunk, ptr %call9.i.i, i32 0, i32 5
  %66 = tail call i32 @llvm.bswap.i32(i32 %conv173) #23
  %67 = ptrtoint ptr %io_width.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %66, ptr %io_width.i, align 4
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 167
  %68 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %sectorsize, align 4
  %sector_size.i = getelementptr inbounds %struct.btrfs_chunk, ptr %call9.i.i, i32 0, i32 6
  %70 = tail call i32 @llvm.bswap.i32(i32 %69) #23
  %71 = ptrtoint ptr %sector_size.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %70, ptr %sector_size.i, align 8
  %sub_stripes = getelementptr inbounds %struct.map_lookup, ptr %19, i32 0, i32 5
  %72 = ptrtoint ptr %sub_stripes to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %sub_stripes, align 4
  %conv174 = trunc i32 %73 to i16
  %sub_stripes.i = getelementptr inbounds %struct.btrfs_chunk, ptr %call9.i.i, i32 0, i32 8
  %74 = tail call i16 @llvm.bswap.i16(i16 %conv174) #23
  %75 = ptrtoint ptr %sub_stripes.i to i32
  call void @__asan_store2_noabort(i32 %75)
  store i16 %74, ptr %sub_stripes.i, align 2
  %76 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %76)
  store i64 256, ptr %key, align 8
  %77 = ptrtoint ptr %4 to i32
  call void @__asan_store1_noabort(i32 %77)
  store i8 -28, ptr %4, align 8
  %78 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %78)
  %79 = load i64, ptr %start, align 8
  %80 = ptrtoint ptr %5 to i32
  call void @__asan_storeN_noabort(i32 %80, i32 8)
  store i64 %79, ptr %5, align 1
  %call177 = call i32 @btrfs_insert_item(ptr noundef %trans, ptr noundef %3, ptr noundef nonnull %key, ptr noundef nonnull %call9.i.i, i32 noundef %add.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call177)
  %tobool178.not = icmp eq i32 %call177, 0
  br i1 %tobool178.not, label %if.end180, label %for.end167.out_crit_edge

for.end167.out_crit_edge:                         ; preds = %for.end167
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end180:                                        ; preds = %for.end167
  %chunk_item_inserted = getelementptr inbounds %struct.btrfs_block_group, ptr %bg, i32 0, i32 17
  %81 = ptrtoint ptr %chunk_item_inserted to i32
  call void @__asan_load1_noabort(i32 %81)
  %bf.load = load i8, ptr %chunk_item_inserted, align 8
  %bf.set = or i8 %bf.load, 4
  store i8 %bf.set, ptr %chunk_item_inserted, align 8
  %82 = ptrtoint ptr %19 to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %19, align 8
  %and = and i64 %83, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool182.not = icmp eq i64 %and, 0
  br i1 %tobool182.not, label %if.end180.out_crit_edge, label %if.then183

if.end180.out_crit_edge:                          ; preds = %if.end180
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.then183:                                       ; preds = %if.end180
  %super_copy1.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 43
  %84 = ptrtoint ptr %super_copy1.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %super_copy1.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %86 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %86)
  %tobool.not.i = icmp eq i32 %86, 0
  br i1 %tobool.not.i, label %if.then183.if.end.i_crit_edge, label %land.rhs.i

if.then183.if.end.i_crit_edge:                    ; preds = %if.then183
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

land.rhs.i:                                       ; preds = %if.then183
  %dep_map.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 50, i32 5
  %call.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !424

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 5019, i32 noundef 9, ptr noundef null) #23
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %if.then183.if.end.i_crit_edge
  %sys_chunk_array_size.i.i = getelementptr inbounds %struct.btrfs_super_block, ptr %85, i32 0, i32 18
  %87 = ptrtoint ptr %sys_chunk_array_size.i.i to i32
  call void @__asan_loadN_noabort(i32 %87, i32 4)
  %88 = load i32, ptr %sys_chunk_array_size.i.i, align 1
  %89 = call i32 @llvm.bswap.i32(i32 %88) #23
  %add.i272 = add i32 %89, %add.i
  %90 = add i32 %add.i272, -2032
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2049, i32 %90)
  %cmp27.i = icmp ult i32 %90, -2049
  br i1 %cmp27.i, label %if.end.i.out_crit_edge, label %if.end29.i

if.end.i.out_crit_edge:                           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end29.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  %sys_chunk_array.i = getelementptr inbounds %struct.btrfs_super_block, ptr %85, i32 0, i32 33
  %add.ptr.i = getelementptr i8, ptr %sys_chunk_array.i, i32 %89
  %91 = ptrtoint ptr %5 to i32
  call void @__asan_loadN_noabort(i32 %91, i32 8)
  %92 = load i64, ptr %5, align 1
  %93 = call i64 @llvm.bswap.i64(i64 %92) #23
  %94 = ptrtoint ptr %4 to i32
  call void @__asan_load1_noabort(i32 %94)
  %95 = load i8, ptr %4, align 8
  %96 = ptrtoint ptr %key to i32
  call void @__asan_load8_noabort(i32 %96)
  %97 = load i64, ptr %key, align 8
  %98 = call i64 @llvm.bswap.i64(i64 %97) #23
  %99 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_storeN_noabort(i32 %99, i32 8)
  store i64 %98, ptr %add.ptr.i, align 1
  %disk_key.sroa.5.0.add.ptr.sroa_idx.i = getelementptr inbounds i8, ptr %add.ptr.i, i32 8
  %100 = ptrtoint ptr %disk_key.sroa.5.0.add.ptr.sroa_idx.i to i32
  call void @__asan_store1_noabort(i32 %100)
  store i8 %95, ptr %disk_key.sroa.5.0.add.ptr.sroa_idx.i, align 1
  %disk_key.sroa.7.0.add.ptr.sroa_idx.i = getelementptr inbounds i8, ptr %add.ptr.i, i32 9
  %101 = ptrtoint ptr %disk_key.sroa.7.0.add.ptr.sroa_idx.i to i32
  call void @__asan_storeN_noabort(i32 %101, i32 8)
  store i64 %93, ptr %disk_key.sroa.7.0.add.ptr.sroa_idx.i, align 1
  %add.ptr30.i = getelementptr i8, ptr %add.ptr.i, i32 17
  %102 = call ptr @memcpy(ptr %add.ptr30.i, ptr %call9.i.i, i32 %add.i)
  %add32.i = add nsw i32 %add.i272, 17
  %103 = call i32 @llvm.bswap.i32(i32 %add32.i) #23
  %104 = ptrtoint ptr %sys_chunk_array_size.i.i to i32
  call void @__asan_storeN_noabort(i32 %104, i32 4)
  store i32 %103, ptr %sys_chunk_array_size.i.i, align 1
  br label %out

out:                                              ; preds = %if.end29.i, %if.end.i.out_crit_edge, %if.end180.out_crit_edge, %for.end167.out_crit_edge, %for.body.out_crit_edge, %if.end143
  %ret.0 = phi i32 [ %call177, %for.end167.out_crit_edge ], [ 0, %if.end180.out_crit_edge ], [ -12, %if.end143 ], [ 0, %if.end29.i ], [ -27, %if.end.i.out_crit_edge ], [ %call149, %for.body.out_crit_edge ]
  call void @kfree(ptr noundef %call9.i.i) #23
  call void @free_extent_map(ptr noundef %call26) #23
  br label %cleanup189

cleanup189:                                       ; preds = %out, %if.end80
  %retval.0 = phi i32 [ %12, %if.end80 ], [ %ret.0, %out ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #23
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_btrfs_chunk_free(ptr noundef %fs_info, ptr noundef %map, i64 noundef %offset, i64 noundef %size) unnamed_addr #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_btrfs_chunk_free, i32 0, i32 1), ptr blockaddress(@trace_btrfs_chunk_free, %do.body)) #23
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !423

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.105, i32 noundef 108, i32 noundef 9, ptr noundef null) #23
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #25
  %9 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !481
  %call42 = tail call i32 @__traceiter_btrfs_chunk_free(ptr noundef null, ptr noundef %fs_info, ptr noundef %map, i64 noundef %offset, i64 noundef %size) #23
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !482
  %13 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #25
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !423

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #25
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.105, i32 noundef 108, i32 noundef 9, ptr noundef null) #23
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !483
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_btrfs_chunk_free, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_btrfs_chunk_free, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_btrfs_chunk_free.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @trace_btrfs_chunk_free.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.104, i32 noundef 1015, ptr noundef nonnull @.str.13) #23
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !484
  %31 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_remove_block_group(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_relocate_chunk(ptr noundef %fs_info, i64 noundef %chunk_offset) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %chunk_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 3
  %0 = ptrtoint ptr %chunk_root to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chunk_root, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 165, i32 5
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !424

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 3266, i32 noundef 9, ptr noundef null) #23
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  tail call void @btrfs_scrub_pause(ptr noundef %fs_info) #23
  %call24 = tail call i32 @btrfs_relocate_block_group(ptr noundef %fs_info, i64 noundef %chunk_offset) #23
  tail call void @btrfs_scrub_continue(ptr noundef %fs_info) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.end27, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end27:                                         ; preds = %if.end
  %call28 = tail call ptr @btrfs_lookup_block_group(ptr noundef %fs_info, i64 noundef %chunk_offset) #23
  %tobool29.not = icmp eq ptr %call28, null
  br i1 %tobool29.not, label %if.end27.cleanup_crit_edge, label %if.end31

if.end27.cleanup_crit_edge:                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end31:                                         ; preds = %if.end27
  %discard_ctl = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 134
  tail call void @btrfs_discard_cancel_work(ptr noundef %discard_ctl, ptr noundef nonnull %call28) #23
  %length32 = getelementptr inbounds %struct.btrfs_block_group, ptr %call28, i32 0, i32 4
  %3 = ptrtoint ptr %length32 to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %length32, align 8
  tail call void @btrfs_put_block_group(ptr noundef nonnull %call28) #23
  %5 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 176
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %5, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %7)
  %cmp.i.not = icmp eq i64 %7, 0
  br i1 %cmp.i.not, label %if.end31.if.end39_crit_edge, label %if.then34

if.end31.if.end39_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end39

if.then34:                                        ; preds = %if.end31
  %call35 = tail call i32 @btrfs_discard_extent(ptr noundef %fs_info, i64 noundef %chunk_offset, i64 noundef %4, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35)
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %if.then34.if.end39_crit_edge, label %if.then37

if.then34.if.end39_crit_edge:                     ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end39

if.then37:                                        ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.28, i64 noundef %chunk_offset) #28
  br label %if.end39

if.end39:                                         ; preds = %if.then37, %if.then34.if.end39_crit_edge, %if.end31.if.end39_crit_edge
  %fs_info40 = getelementptr inbounds %struct.btrfs_root, ptr %1, i32 0, i32 8
  %8 = ptrtoint ptr %fs_info40 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %fs_info40, align 8
  %call41 = tail call ptr @btrfs_start_trans_remove_block_group(ptr noundef %9, i64 noundef %chunk_offset) #23
  %cmp.i83 = icmp ugt ptr %call41, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i83, label %if.then43, label %if.end49

if.then43:                                        ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #25
  %10 = ptrtoint ptr %call41 to i32
  %11 = ptrtoint ptr %fs_info40 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %fs_info40, align 8
  tail call void (ptr, ptr, i32, i32, ptr, ...) @__btrfs_handle_fs_error(ptr noundef %12, ptr noundef nonnull @__func__.btrfs_relocate_chunk, i32 noundef 3300, i32 noundef %10, ptr noundef null) #28
  br label %cleanup

if.end49:                                         ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #25
  %call50 = tail call i32 @btrfs_remove_chunk(ptr noundef %call41, i64 noundef %chunk_offset)
  %call51 = tail call i32 @btrfs_end_transaction(ptr noundef %call41) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end49, %if.then43, %if.end27.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ %10, %if.then43 ], [ %call50, %if.end49 ], [ %call24, %if.end.cleanup_crit_edge ], [ -2, %if.end27.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_scrub_pause(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_relocate_block_group(ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_scrub_continue(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_lookup_block_group(ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_discard_cancel_work(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_put_block_group(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_discard_extent(ptr noundef, i64 noundef, i64 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_start_trans_remove_block_group(ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_balance(ptr noundef %fs_info, ptr noundef %bctl, ptr noundef %bargs) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 1
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %flags.i, align 4
  %and1.i.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i, label %lor.lhs.false, label %btrfs_fs_closing.exit

btrfs_fs_closing.exit:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %2 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %flags.i, align 4
  br label %out

lor.lhs.false:                                    ; preds = %entry
  %balance_pause_req = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 115
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %balance_pause_req, i32 noundef 4) #23
  %4 = ptrtoint ptr %balance_pause_req to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %balance_pause_req, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool2.not = icmp eq i32 %5, 0
  br i1 %tobool2.not, label %lor.lhs.false3, label %lor.lhs.false.out_crit_edge

lor.lhs.false.out_crit_edge:                      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call4 = tail call i32 @btrfs_should_cancel_balance(ptr noundef %fs_info) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.end, label %lor.lhs.false3.out_crit_edge

lor.lhs.false3.out_crit_edge:                     ; preds = %lor.lhs.false3
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end:                                           ; preds = %lor.lhs.false3
  %super_copy = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 43
  %6 = ptrtoint ptr %super_copy to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %super_copy, align 8
  %incompat_flags.i = getelementptr inbounds %struct.btrfs_super_block, ptr %7, i32 0, i32 22
  %8 = ptrtoint ptr %incompat_flags.i to i32
  call void @__asan_loadN_noabort(i32 %8, i32 8)
  %9 = load i64, ptr %incompat_flags.i, align 1
  %10 = and i64 %9, 288230376151711744
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %10)
  %tobool7.not = icmp eq i64 %10, 0
  br i1 %tobool7.not, label %if.end.if.end26_crit_edge, label %land.lhs.true

if.end.if.end26_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26

land.lhs.true:                                    ; preds = %if.end
  %flags = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 3
  %11 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %flags, align 8
  %13 = trunc i64 %12 to i3
  %trunc = and i3 %13, -3
  %14 = zext i3 %trunc to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.201)
  switch i3 %trunc, label %land.lhs.true.if.then24_crit_edge [
    i3 0, label %land.lhs.true.if.end26_crit_edge
    i3 -3, label %lor.lhs.false21
  ]

land.lhs.true.if.end26_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26

land.lhs.true.if.then24_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then24

lor.lhs.false21:                                  ; preds = %land.lhs.true
  %meta = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1
  %bcmp = tail call i32 @bcmp(ptr noundef dereferenceable(136) %bctl, ptr noundef dereferenceable(136) %meta, i32 136) #31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %tobool23.not = icmp eq i32 %bcmp, 0
  br i1 %tobool23.not, label %lor.lhs.false21.if.end26_crit_edge, label %lor.lhs.false21.if.then24_crit_edge

lor.lhs.false21.if.then24_crit_edge:              ; preds = %lor.lhs.false21
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then24

lor.lhs.false21.if.end26_crit_edge:               ; preds = %lor.lhs.false21
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26

if.then24:                                        ; preds = %lor.lhs.false21.if.then24_crit_edge, %land.lhs.true.if.then24_crit_edge
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.29) #28
  br label %out

if.end26:                                         ; preds = %lor.lhs.false21.if.end26_crit_edge, %land.lhs.true.if.end26_crit_edge, %if.end.if.end26_crit_edge
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %15 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %fs_devices, align 8
  %rw_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %16, i32 0, i32 6
  %17 = ptrtoint ptr %rw_devices to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %rw_devices, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 2, i64 %18)
  %cmp27.not = icmp ult i64 %18, 2
  br i1 %cmp27.not, label %for.inc.1, label %for.inc.5

for.inc.1:                                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #25
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %18)
  %cmp27.not.2 = icmp eq i64 %18, 0
  %spec.select = select i1 %cmp27.not.2, i64 281474976710656, i64 281474976710696
  br label %for.inc.8

for.inc.5:                                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_const_cmp8(i64 2, i64 %18)
  %cmp27.not.6 = icmp eq i64 %18, 2
  br i1 %cmp27.not.6, label %for.inc.5.for.inc.8_crit_edge, label %for.inc.7

for.inc.5.for.inc.8_crit_edge:                    ; preds = %for.inc.5
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.8

for.inc.7:                                        ; preds = %for.inc.5
  call void @__sanitizer_cov_trace_pc() #25
  call void @__sanitizer_cov_trace_const_cmp8(i64 4, i64 %18)
  %cmp27.not.8 = icmp ult i64 %18, 4
  %spec.select465 = select i1 %cmp27.not.8, i64 281474976711672, i64 281474976712696
  br label %for.inc.8

for.inc.8:                                        ; preds = %for.inc.7, %for.inc.5.for.inc.8_crit_edge, %for.inc.1
  %allowed.1.8 = phi i64 [ 281474976710904, %for.inc.5.for.inc.8_crit_edge ], [ %spec.select, %for.inc.1 ], [ %spec.select465, %for.inc.7 ]
  %flags.i362 = getelementptr inbounds %struct.btrfs_balance_args, ptr %bctl, i32 0, i32 8
  %19 = ptrtoint ptr %flags.i362 to i32
  call void @__asan_loadN_noabort(i32 %19, i32 8)
  %20 = load i64, ptr %flags.i362, align 1
  %and.i = and i64 %20, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i363 = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i363, label %for.inc.8.lor.lhs.false35_crit_edge, label %if.end.i

for.inc.8.lor.lhs.false35_crit_edge:              ; preds = %for.inc.8
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false35

if.end.i:                                         ; preds = %for.inc.8
  %sectorsize.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 167
  %21 = ptrtoint ptr %sectorsize.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %sectorsize.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %22)
  %cmp.i = icmp ult i32 %22, 4096
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i.if.end5.i_crit_edge

if.end.i.if.end5.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end5.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %target.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bctl, i32 0, i32 7
  %23 = ptrtoint ptr %target.i to i32
  call void @__asan_loadN_noabort(i32 %23, i32 8)
  %24 = load i64, ptr %target.i, align 1
  %and1.i364 = and i64 %24, 384
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i364)
  %tobool2.not.i = icmp eq i64 %and1.i364, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.end5.i_crit_edge, label %if.then3.i

land.lhs.true.i.if.end5.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end5.i

if.then3.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.106, i32 noundef %22, i32 noundef 4096) #28
  br label %out

if.end5.i:                                        ; preds = %land.lhs.true.i.if.end5.i_crit_edge, %if.end.i.if.end5.i_crit_edge
  %target6.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bctl, i32 0, i32 7
  %25 = ptrtoint ptr %target6.i to i32
  call void @__asan_loadN_noabort(i32 %25, i32 8)
  %26 = load i64, ptr %target6.i, align 1
  %and.i.i = and i64 %26, -8
  %and1.i.i365 = and i64 %26, -281474976712704
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i.i365)
  %tobool2.not.i.i = icmp ne i64 %and1.i.i365, 0
  %27 = tail call i64 @llvm.ctpop.i64(i64 %and.i.i) #23, !range !475
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %27)
  %28 = icmp ne i64 %27, 1
  %29 = or i1 %tobool2.not.i.i, %28
  br i1 %29, label %if.end5.i.if.end13.i_crit_edge, label %land.lhs.true8.i

if.end5.i.if.end13.i_crit_edge:                   ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13.i

land.lhs.true8.i:                                 ; preds = %if.end5.i
  %neg.i = xor i64 %allowed.1.8, -1
  %and10.i = and i64 %26, %neg.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and10.i)
  %cmp11.i = icmp eq i64 %and10.i, 0
  br i1 %cmp11.i, label %land.lhs.true8.i.lor.lhs.false35_crit_edge, label %land.lhs.true8.i.if.end13.i_crit_edge

land.lhs.true8.i.if.end13.i_crit_edge:            ; preds = %land.lhs.true8.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13.i

land.lhs.true8.i.lor.lhs.false35_crit_edge:       ; preds = %land.lhs.true8.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false35

if.end13.i:                                       ; preds = %land.lhs.true8.i.if.end13.i_crit_edge, %if.end5.i.if.end13.i_crit_edge
  %and.i.i.i = and i64 %26, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i64 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.else.i.i.i, label %if.end13.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge

if.end13.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge: ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit.i

if.else.i.i.i:                                    ; preds = %if.end13.i
  %and1.i.i.i = and i64 %26, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i.i.i)
  %tobool2.not.i.i.i = icmp eq i64 %and1.i.i.i, 0
  br i1 %tobool2.not.i.i.i, label %if.else4.i.i.i, label %if.else.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge

if.else.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit.i

if.else4.i.i.i:                                   ; preds = %if.else.i.i.i
  %and5.i.i.i = and i64 %26, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5.i.i.i)
  %tobool6.not.i.i.i = icmp eq i64 %and5.i.i.i, 0
  br i1 %tobool6.not.i.i.i, label %if.else8.i.i.i, label %if.else4.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge

if.else4.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge: ; preds = %if.else4.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit.i

if.else8.i.i.i:                                   ; preds = %if.else4.i.i.i
  %and9.i.i.i = and i64 %26, 1024
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and9.i.i.i)
  %tobool10.not.i.i.i = icmp eq i64 %and9.i.i.i, 0
  br i1 %tobool10.not.i.i.i, label %if.else12.i.i.i, label %if.else8.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge

if.else8.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge: ; preds = %if.else8.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit.i

if.else12.i.i.i:                                  ; preds = %if.else8.i.i.i
  %and13.i.i.i = and i64 %26, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and13.i.i.i)
  %tobool14.not.i.i.i = icmp eq i64 %and13.i.i.i, 0
  br i1 %tobool14.not.i.i.i, label %if.else16.i.i.i, label %if.else12.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge

if.else12.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge: ; preds = %if.else12.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit.i

if.else16.i.i.i:                                  ; preds = %if.else12.i.i.i
  %and17.i.i.i = and i64 %26, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and17.i.i.i)
  %tobool18.not.i.i.i = icmp eq i64 %and17.i.i.i, 0
  br i1 %tobool18.not.i.i.i, label %if.else20.i.i.i, label %if.else16.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge

if.else16.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge: ; preds = %if.else16.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit.i

if.else20.i.i.i:                                  ; preds = %if.else16.i.i.i
  %and21.i.i.i = and i64 %26, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and21.i.i.i)
  %tobool22.not.i.i.i = icmp eq i64 %and21.i.i.i, 0
  br i1 %tobool22.not.i.i.i, label %if.else24.i.i.i, label %if.else20.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge

if.else20.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge: ; preds = %if.else20.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit.i

if.else24.i.i.i:                                  ; preds = %if.else20.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %and25.i.i.i = and i64 %26, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and25.i.i.i)
  %tobool26.not.i.i.i = icmp eq i64 %and25.i.i.i, 0
  %..i.i.i = select i1 %tobool26.not.i.i.i, i32 4, i32 6
  br label %btrfs_bg_type_to_raid_name.exit.i

btrfs_bg_type_to_raid_name.exit.i:                ; preds = %if.else24.i.i.i, %if.else20.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge, %if.else16.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge, %if.else12.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge, %if.else8.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge, %if.else4.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge, %if.else.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge, %if.end13.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge
  %retval.0.i.i.i = phi i32 [ 0, %if.end13.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge ], [ 1, %if.else.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge ], [ 7, %if.else4.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge ], [ 8, %if.else8.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge ], [ 2, %if.else12.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge ], [ 3, %if.else16.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge ], [ 5, %if.else20.i.i.i.btrfs_bg_type_to_raid_name.exit.i_crit_edge ], [ %..i.i.i, %if.else24.i.i.i ]
  %raid_name.i.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i.i, i32 9
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.107, ptr noundef nonnull @.str.2, ptr noundef %raid_name.i.i) #28
  br label %out

lor.lhs.false35:                                  ; preds = %land.lhs.true8.i.lor.lhs.false35_crit_edge, %for.inc.8.lor.lhs.false35_crit_edge
  %flags.i367 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1, i32 8
  %30 = ptrtoint ptr %flags.i367 to i32
  call void @__asan_loadN_noabort(i32 %30, i32 8)
  %31 = load i64, ptr %flags.i367, align 1
  %and.i368 = and i64 %31, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i368)
  %tobool.not.i369 = icmp eq i64 %and.i368, 0
  br i1 %tobool.not.i369, label %lor.lhs.false35.lor.lhs.false39_crit_edge, label %if.end.i372

lor.lhs.false35.lor.lhs.false39_crit_edge:        ; preds = %lor.lhs.false35
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false39

if.end.i372:                                      ; preds = %lor.lhs.false35
  %sectorsize.i370 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 167
  %32 = ptrtoint ptr %sectorsize.i370 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %sectorsize.i370, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %33)
  %cmp.i371 = icmp ult i32 %33, 4096
  br i1 %cmp.i371, label %land.lhs.true.i376, label %if.end.i372.if.end5.i382_crit_edge

if.end.i372.if.end5.i382_crit_edge:               ; preds = %if.end.i372
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end5.i382

land.lhs.true.i376:                               ; preds = %if.end.i372
  %target.i373 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1, i32 7
  %34 = ptrtoint ptr %target.i373 to i32
  call void @__asan_loadN_noabort(i32 %34, i32 8)
  %35 = load i64, ptr %target.i373, align 1
  %and1.i374 = and i64 %35, 384
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i374)
  %tobool2.not.i375 = icmp eq i64 %and1.i374, 0
  br i1 %tobool2.not.i375, label %land.lhs.true.i376.if.end5.i382_crit_edge, label %if.then3.i377

land.lhs.true.i376.if.end5.i382_crit_edge:        ; preds = %land.lhs.true.i376
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end5.i382

if.then3.i377:                                    ; preds = %land.lhs.true.i376
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.106, i32 noundef %33, i32 noundef 4096) #28
  br label %out

if.end5.i382:                                     ; preds = %land.lhs.true.i376.if.end5.i382_crit_edge, %if.end.i372.if.end5.i382_crit_edge
  %target6.i378 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1, i32 7
  %36 = ptrtoint ptr %target6.i378 to i32
  call void @__asan_loadN_noabort(i32 %36, i32 8)
  %37 = load i64, ptr %target6.i378, align 1
  %and.i.i379 = and i64 %37, -8
  %and1.i.i380 = and i64 %37, -281474976712704
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i.i380)
  %tobool2.not.i.i381 = icmp ne i64 %and1.i.i380, 0
  %38 = tail call i64 @llvm.ctpop.i64(i64 %and.i.i379) #23, !range !475
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %38)
  %39 = icmp ne i64 %38, 1
  %40 = or i1 %tobool2.not.i.i381, %39
  br i1 %40, label %if.end5.i382.if.end13.i389_crit_edge, label %land.lhs.true8.i386

if.end5.i382.if.end13.i389_crit_edge:             ; preds = %if.end5.i382
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13.i389

land.lhs.true8.i386:                              ; preds = %if.end5.i382
  %neg.i383 = xor i64 %allowed.1.8, -1
  %and10.i384 = and i64 %37, %neg.i383
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and10.i384)
  %cmp11.i385 = icmp eq i64 %and10.i384, 0
  br i1 %cmp11.i385, label %land.lhs.true8.i386.lor.lhs.false39_crit_edge, label %land.lhs.true8.i386.if.end13.i389_crit_edge

land.lhs.true8.i386.if.end13.i389_crit_edge:      ; preds = %land.lhs.true8.i386
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13.i389

land.lhs.true8.i386.lor.lhs.false39_crit_edge:    ; preds = %land.lhs.true8.i386
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false39

if.end13.i389:                                    ; preds = %land.lhs.true8.i386.if.end13.i389_crit_edge, %if.end5.i382.if.end13.i389_crit_edge
  %and.i.i.i387 = and i64 %37, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i.i387)
  %tobool.not.i.i.i388 = icmp eq i64 %and.i.i.i387, 0
  br i1 %tobool.not.i.i.i388, label %if.else.i.i.i392, label %if.end13.i389.btrfs_bg_type_to_raid_name.exit.i414_crit_edge

if.end13.i389.btrfs_bg_type_to_raid_name.exit.i414_crit_edge: ; preds = %if.end13.i389
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit.i414

if.else.i.i.i392:                                 ; preds = %if.end13.i389
  %and1.i.i.i390 = and i64 %37, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i.i.i390)
  %tobool2.not.i.i.i391 = icmp eq i64 %and1.i.i.i390, 0
  br i1 %tobool2.not.i.i.i391, label %if.else4.i.i.i395, label %if.else.i.i.i392.btrfs_bg_type_to_raid_name.exit.i414_crit_edge

if.else.i.i.i392.btrfs_bg_type_to_raid_name.exit.i414_crit_edge: ; preds = %if.else.i.i.i392
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit.i414

if.else4.i.i.i395:                                ; preds = %if.else.i.i.i392
  %and5.i.i.i393 = and i64 %37, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5.i.i.i393)
  %tobool6.not.i.i.i394 = icmp eq i64 %and5.i.i.i393, 0
  br i1 %tobool6.not.i.i.i394, label %if.else8.i.i.i398, label %if.else4.i.i.i395.btrfs_bg_type_to_raid_name.exit.i414_crit_edge

if.else4.i.i.i395.btrfs_bg_type_to_raid_name.exit.i414_crit_edge: ; preds = %if.else4.i.i.i395
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit.i414

if.else8.i.i.i398:                                ; preds = %if.else4.i.i.i395
  %and9.i.i.i396 = and i64 %37, 1024
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and9.i.i.i396)
  %tobool10.not.i.i.i397 = icmp eq i64 %and9.i.i.i396, 0
  br i1 %tobool10.not.i.i.i397, label %if.else12.i.i.i401, label %if.else8.i.i.i398.btrfs_bg_type_to_raid_name.exit.i414_crit_edge

if.else8.i.i.i398.btrfs_bg_type_to_raid_name.exit.i414_crit_edge: ; preds = %if.else8.i.i.i398
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit.i414

if.else12.i.i.i401:                               ; preds = %if.else8.i.i.i398
  %and13.i.i.i399 = and i64 %37, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and13.i.i.i399)
  %tobool14.not.i.i.i400 = icmp eq i64 %and13.i.i.i399, 0
  br i1 %tobool14.not.i.i.i400, label %if.else16.i.i.i404, label %if.else12.i.i.i401.btrfs_bg_type_to_raid_name.exit.i414_crit_edge

if.else12.i.i.i401.btrfs_bg_type_to_raid_name.exit.i414_crit_edge: ; preds = %if.else12.i.i.i401
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit.i414

if.else16.i.i.i404:                               ; preds = %if.else12.i.i.i401
  %and17.i.i.i402 = and i64 %37, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and17.i.i.i402)
  %tobool18.not.i.i.i403 = icmp eq i64 %and17.i.i.i402, 0
  br i1 %tobool18.not.i.i.i403, label %if.else20.i.i.i407, label %if.else16.i.i.i404.btrfs_bg_type_to_raid_name.exit.i414_crit_edge

if.else16.i.i.i404.btrfs_bg_type_to_raid_name.exit.i414_crit_edge: ; preds = %if.else16.i.i.i404
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit.i414

if.else20.i.i.i407:                               ; preds = %if.else16.i.i.i404
  %and21.i.i.i405 = and i64 %37, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and21.i.i.i405)
  %tobool22.not.i.i.i406 = icmp eq i64 %and21.i.i.i405, 0
  br i1 %tobool22.not.i.i.i406, label %if.else24.i.i.i411, label %if.else20.i.i.i407.btrfs_bg_type_to_raid_name.exit.i414_crit_edge

if.else20.i.i.i407.btrfs_bg_type_to_raid_name.exit.i414_crit_edge: ; preds = %if.else20.i.i.i407
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit.i414

if.else24.i.i.i411:                               ; preds = %if.else20.i.i.i407
  call void @__sanitizer_cov_trace_pc() #25
  %and25.i.i.i408 = and i64 %37, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and25.i.i.i408)
  %tobool26.not.i.i.i409 = icmp eq i64 %and25.i.i.i408, 0
  %..i.i.i410 = select i1 %tobool26.not.i.i.i409, i32 4, i32 6
  br label %btrfs_bg_type_to_raid_name.exit.i414

btrfs_bg_type_to_raid_name.exit.i414:             ; preds = %if.else24.i.i.i411, %if.else20.i.i.i407.btrfs_bg_type_to_raid_name.exit.i414_crit_edge, %if.else16.i.i.i404.btrfs_bg_type_to_raid_name.exit.i414_crit_edge, %if.else12.i.i.i401.btrfs_bg_type_to_raid_name.exit.i414_crit_edge, %if.else8.i.i.i398.btrfs_bg_type_to_raid_name.exit.i414_crit_edge, %if.else4.i.i.i395.btrfs_bg_type_to_raid_name.exit.i414_crit_edge, %if.else.i.i.i392.btrfs_bg_type_to_raid_name.exit.i414_crit_edge, %if.end13.i389.btrfs_bg_type_to_raid_name.exit.i414_crit_edge
  %retval.0.i.i.i412 = phi i32 [ 0, %if.end13.i389.btrfs_bg_type_to_raid_name.exit.i414_crit_edge ], [ 1, %if.else.i.i.i392.btrfs_bg_type_to_raid_name.exit.i414_crit_edge ], [ 7, %if.else4.i.i.i395.btrfs_bg_type_to_raid_name.exit.i414_crit_edge ], [ 8, %if.else8.i.i.i398.btrfs_bg_type_to_raid_name.exit.i414_crit_edge ], [ 2, %if.else12.i.i.i401.btrfs_bg_type_to_raid_name.exit.i414_crit_edge ], [ 3, %if.else16.i.i.i404.btrfs_bg_type_to_raid_name.exit.i414_crit_edge ], [ 5, %if.else20.i.i.i407.btrfs_bg_type_to_raid_name.exit.i414_crit_edge ], [ %..i.i.i410, %if.else24.i.i.i411 ]
  %raid_name.i.i413 = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i.i412, i32 9
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.107, ptr noundef nonnull @.str.4, ptr noundef %raid_name.i.i413) #28
  br label %out

lor.lhs.false39:                                  ; preds = %land.lhs.true8.i386.lor.lhs.false39_crit_edge, %lor.lhs.false35.lor.lhs.false39_crit_edge
  %sys = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 2
  %call40 = tail call fastcc i32 @validate_convert_profile(ptr noundef %fs_info, ptr noundef %sys, i64 noundef %allowed.1.8, ptr noundef nonnull @.str.3)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40)
  %tobool41.not = icmp eq i32 %call40, 0
  br i1 %tobool41.not, label %lor.lhs.false39.out_crit_edge, label %for.inc62.8

lor.lhs.false39.out_crit_edge:                    ; preds = %lor.lhs.false39
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

for.inc62.8:                                      ; preds = %lor.lhs.false39
  %profiles_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 109
  %flags67 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 2, i32 8
  %avail_system_alloc_bits = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 112
  %target = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 2, i32 7
  %avail_metadata_alloc_bits = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 111
  %target87 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1, i32 7
  %target105 = getelementptr inbounds %struct.btrfs_balance_args, ptr %bctl, i32 0, i32 7
  %avail_data_alloc_bits = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 110
  br label %do.body

do.body:                                          ; preds = %if.end91.do.body_crit_edge, %for.inc62.8
  tail call fastcc void @seqcount_lockdep_reader_access(ptr noundef %profiles_lock) #23
  %41 = ptrtoint ptr %profiles_lock to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %profiles_lock, align 4
  %and18.i = and i32 %42, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18.i)
  %tobool.not19.i = icmp eq i32 %and18.i, 0
  br i1 %tobool.not19.i, label %do.body.read_seqbegin.exit_crit_edge, label %do.body.do.end.i_crit_edge

do.body.do.end.i_crit_edge:                       ; preds = %do.body
  br label %do.end.i

do.body.read_seqbegin.exit_crit_edge:             ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %read_seqbegin.exit

do.end.i:                                         ; preds = %do.end.i.do.end.i_crit_edge, %do.body.do.end.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !441
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #23, !srcloc !442
  %43 = ptrtoint ptr %profiles_lock to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %profiles_lock, align 4
  %and.i417 = and i32 %44, 1
  %tobool.not.i418 = icmp eq i32 %and.i417, 0
  br i1 %tobool.not.i418, label %do.end.i.read_seqbegin.exit_crit_edge, label %do.end.i.do.end.i_crit_edge

do.end.i.do.end.i_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end.i

do.end.i.read_seqbegin.exit_crit_edge:            ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %read_seqbegin.exit

read_seqbegin.exit:                               ; preds = %do.end.i.read_seqbegin.exit_crit_edge, %do.body.read_seqbegin.exit_crit_edge
  %.lcssa.i = phi i32 [ %42, %do.body.read_seqbegin.exit_crit_edge ], [ %44, %do.end.i.read_seqbegin.exit_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !443
  %45 = ptrtoint ptr %flags67 to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %flags67, align 8
  %and68 = and i64 %46, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and68)
  %tobool69.not = icmp eq i64 %and68, 0
  br i1 %tobool69.not, label %read_seqbegin.exit.lor.lhs.false77_crit_edge, label %land.lhs.true70

read_seqbegin.exit.lor.lhs.false77_crit_edge:     ; preds = %read_seqbegin.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false77

land.lhs.true70:                                  ; preds = %read_seqbegin.exit
  %47 = ptrtoint ptr %avail_system_alloc_bits to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %avail_system_alloc_bits, align 8
  %and71 = and i64 %48, 2032
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and71)
  %tobool72.not = icmp eq i64 %and71, 0
  br i1 %tobool72.not, label %land.lhs.true70.lor.lhs.false77_crit_edge, label %land.lhs.true73

land.lhs.true70.lor.lhs.false77_crit_edge:        ; preds = %land.lhs.true70
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false77

land.lhs.true73:                                  ; preds = %land.lhs.true70
  %49 = ptrtoint ptr %target to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %target, align 8
  %and75 = and i64 %50, 2032
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and75)
  %tobool76.not = icmp eq i64 %and75, 0
  br i1 %tobool76.not, label %land.lhs.true73.if.end91_crit_edge, label %land.lhs.true73.lor.lhs.false77_crit_edge

land.lhs.true73.lor.lhs.false77_crit_edge:        ; preds = %land.lhs.true73
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false77

land.lhs.true73.if.end91_crit_edge:               ; preds = %land.lhs.true73
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end91

lor.lhs.false77:                                  ; preds = %land.lhs.true73.lor.lhs.false77_crit_edge, %land.lhs.true70.lor.lhs.false77_crit_edge, %read_seqbegin.exit.lor.lhs.false77_crit_edge
  %51 = ptrtoint ptr %flags.i367 to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %flags.i367, align 8
  %and80 = and i64 %52, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and80)
  %tobool81.not = icmp eq i64 %and80, 0
  br i1 %tobool81.not, label %lor.lhs.false77.if.else_crit_edge, label %land.lhs.true82

lor.lhs.false77.if.else_crit_edge:                ; preds = %lor.lhs.false77
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

land.lhs.true82:                                  ; preds = %lor.lhs.false77
  %53 = ptrtoint ptr %avail_metadata_alloc_bits to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %avail_metadata_alloc_bits, align 8
  %and83 = and i64 %54, 2032
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and83)
  %tobool84.not = icmp eq i64 %and83, 0
  br i1 %tobool84.not, label %land.lhs.true82.if.else_crit_edge, label %land.lhs.true85

land.lhs.true82.if.else_crit_edge:                ; preds = %land.lhs.true82
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

land.lhs.true85:                                  ; preds = %land.lhs.true82
  %55 = ptrtoint ptr %target87 to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %target87, align 8
  %and88 = and i64 %56, 2032
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and88)
  %tobool89.not = icmp eq i64 %and88, 0
  br i1 %tobool89.not, label %land.lhs.true85.if.end91_crit_edge, label %land.lhs.true85.if.else_crit_edge

land.lhs.true85.if.else_crit_edge:                ; preds = %land.lhs.true85
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

land.lhs.true85.if.end91_crit_edge:               ; preds = %land.lhs.true85
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end91

if.else:                                          ; preds = %land.lhs.true85.if.else_crit_edge, %land.lhs.true82.if.else_crit_edge, %lor.lhs.false77.if.else_crit_edge
  br label %if.end91

if.end91:                                         ; preds = %if.else, %land.lhs.true85.if.end91_crit_edge, %land.lhs.true73.if.end91_crit_edge
  %reducing_redundancy.0.off0 = phi i1 [ false, %if.else ], [ true, %land.lhs.true85.if.end91_crit_edge ], [ true, %land.lhs.true73.if.end91_crit_edge ]
  %57 = ptrtoint ptr %flags.i367 to i32
  call void @__asan_load8_noabort(i32 %57)
  %58 = load i64, ptr %flags.i367, align 8
  %and94 = and i64 %58, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and94)
  %tobool95.not = icmp eq i64 %and94, 0
  %cond.in = select i1 %tobool95.not, ptr %avail_metadata_alloc_bits, ptr %target87
  %59 = ptrtoint ptr %cond.in to i32
  call void @__asan_load8_noabort(i32 %59)
  %cond = load i64, ptr %cond.in, align 8
  %60 = ptrtoint ptr %flags.i362 to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %flags.i362, align 8
  %and101 = and i64 %61, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and101)
  %tobool102.not = icmp eq i64 %and101, 0
  %cond108.in = select i1 %tobool102.not, ptr %avail_data_alloc_bits, ptr %target105
  %62 = ptrtoint ptr %cond108.in to i32
  call void @__asan_load8_noabort(i32 %62)
  %cond108 = load i64, ptr %cond108.in, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !444
  %63 = ptrtoint ptr %profiles_lock to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %profiles_lock, align 4
  %cmp.i.i.i.not = icmp eq i32 %64, %.lcssa.i
  br i1 %cmp.i.i.i.not, label %do.end, label %if.end91.do.body_crit_edge

if.end91.do.body_crit_edge:                       ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body

do.end:                                           ; preds = %if.end91
  br i1 %reducing_redundancy.0.off0, label %if.then113, label %do.end.if.end120_crit_edge

do.end.if.end120_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end120

if.then113:                                       ; preds = %do.end
  %flags114 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 3
  %65 = ptrtoint ptr %flags114 to i32
  call void @__asan_load8_noabort(i32 %65)
  %66 = load i64, ptr %flags114, align 8
  %and115 = and i64 %66, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and115)
  %tobool116.not = icmp eq i64 %and115, 0
  br i1 %tobool116.not, label %if.else118, label %if.then117

if.then117:                                       ; preds = %if.then113
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.30) #28
  br label %if.end120

if.else118:                                       ; preds = %if.then113
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.31) #28
  br label %out

if.end120:                                        ; preds = %if.then117, %do.end.if.end120_crit_edge
  %call121 = tail call i32 @btrfs_get_num_tolerated_disk_barrier_failures(i64 noundef %cond) #23
  %call122 = tail call i32 @btrfs_get_num_tolerated_disk_barrier_failures(i64 noundef %cond108) #23
  call void @__sanitizer_cov_trace_cmp4(i32 %call121, i32 %call122)
  %cmp123 = icmp slt i32 %call121, %call122
  br i1 %cmp123, label %if.then125, label %if.end120.if.end128_crit_edge

if.end120.if.end128_crit_edge:                    ; preds = %if.end120
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end128

if.then125:                                       ; preds = %if.end120
  call void @__sanitizer_cov_trace_pc() #25
  %call126 = tail call ptr @btrfs_bg_type_to_raid_name(i64 noundef %cond)
  %call127 = tail call ptr @btrfs_bg_type_to_raid_name(i64 noundef %cond108)
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.32, ptr noundef nonnull %call126, ptr noundef nonnull %call127) #28
  br label %if.end128

if.end128:                                        ; preds = %if.then125, %if.end120.if.end128_crit_edge
  %call129 = tail call fastcc i32 @insert_balance_item(ptr noundef %fs_info, ptr noundef %bctl)
  %67 = zext i32 %call129 to i64
  call void @__sanitizer_cov_trace_switch(i64 %67, ptr @__sancov_gen_cov_switch_values.202)
  switch i32 %call129, label %if.end128.out_crit_edge [
    i32 0, label %if.end128.if.end135_crit_edge
    i32 -17, label %if.end128.if.end135_crit_edge466
  ]

if.end128.if.end135_crit_edge466:                 ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end135

if.end128.if.end135_crit_edge:                    ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end135

if.end128.out_crit_edge:                          ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end135:                                        ; preds = %if.end128.if.end135_crit_edge, %if.end128.if.end135_crit_edge466
  %flags136 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 3
  %68 = ptrtoint ptr %flags136 to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %flags136, align 8
  %and137 = and i64 %69, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and137)
  %tobool138.not = icmp eq i64 %and137, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 -17, i32 %call129)
  %cmp141 = icmp eq i32 %call129, -17
  br i1 %tobool138.not, label %do.body140, label %do.body176

do.body140:                                       ; preds = %if.end135
  br i1 %cmp141, label %do.body146, label %do.body155, !prof !424

do.body146:                                       ; preds = %do.body140
  call void @__sanitizer_cov_trace_pc() #25
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4373, 0\0A.popsection", ""() #23, !srcloc !485
  unreachable

do.body155:                                       ; preds = %do.body140
  %balance_ctl = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 117
  %70 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %balance_ctl, align 8
  %tobool156.not = icmp eq ptr %71, null
  br i1 %tobool156.not, label %do.end172, label %do.body164, !prof !423

do.body164:                                       ; preds = %do.body155
  call void @__sanitizer_cov_trace_pc() #25
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4374, 0\0A.popsection", ""() #23, !srcloc !486
  unreachable

do.end172:                                        ; preds = %do.body155
  call void @__sanitizer_cov_trace_pc() #25
  %balance_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 113
  tail call void @_raw_spin_lock(ptr noundef %balance_lock) #23
  %72 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %bctl, ptr %balance_ctl, align 8
  br label %if.end197

do.body176:                                       ; preds = %if.end135
  br i1 %cmp141, label %do.end194, label %do.body186, !prof !423

do.body186:                                       ; preds = %do.body176
  call void @__sanitizer_cov_trace_pc() #25
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4379, 0\0A.popsection", ""() #23, !srcloc !487
  unreachable

do.end194:                                        ; preds = %do.body176
  call void @__sanitizer_cov_trace_pc() #25
  %balance_lock195 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 113
  tail call void @_raw_spin_lock(ptr noundef %balance_lock195) #23
  tail call fastcc void @update_balance_args(ptr noundef %bctl)
  br label %if.end197

if.end197:                                        ; preds = %do.end194, %do.end172
  %balance_lock195.sink = phi ptr [ %balance_lock195, %do.end194 ], [ %balance_lock, %do.end172 ]
  tail call void @_raw_spin_unlock(ptr noundef %balance_lock195.sink) #23
  %73 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load volatile i32, ptr %flags.i, align 4
  %75 = and i32 %74, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %tobool200.not = icmp eq i32 %75, 0
  br i1 %tobool200.not, label %cond.end211, label %cond.false210, !prof !423

cond.false210:                                    ; preds = %if.end197
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.33, i32 noundef 4385) #32
  unreachable

cond.end211:                                      ; preds = %if.end197
  tail call void @_set_bit(i32 noundef 12, ptr noundef %flags.i) #23
  tail call fastcc void @describe_balance_start_or_resume(ptr noundef %fs_info)
  %balance_mutex = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 114
  tail call void @mutex_unlock(ptr noundef %balance_mutex) #23
  %call213 = tail call fastcc i32 @__btrfs_balance(ptr noundef %fs_info)
  tail call void @mutex_lock_nested(ptr noundef %balance_mutex, i32 noundef 0) #23
  %76 = zext i32 %call213 to i64
  call void @__sanitizer_cov_trace_switch(i64 %76, ptr @__sancov_gen_cov_switch_values.203)
  switch i32 %call213, label %if.else229 [
    i32 -125, label %land.lhs.true217
    i32 -4, label %cond.end211.if.then228_crit_edge
  ]

cond.end211.if.then228_crit_edge:                 ; preds = %cond.end211
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then228

land.lhs.true217:                                 ; preds = %cond.end211
  %call.i.i361 = tail call zeroext i1 @__kasan_check_read(ptr noundef %balance_pause_req, i32 noundef 4) #23
  %77 = ptrtoint ptr %balance_pause_req to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %balance_pause_req, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %78)
  %tobool220.not = icmp eq i32 %78, 0
  br i1 %tobool220.not, label %land.lhs.true217.if.then228_crit_edge, label %if.then221

land.lhs.true217.if.then228_crit_edge:            ; preds = %land.lhs.true217
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then228

if.then221:                                       ; preds = %land.lhs.true217
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.34) #28
  tail call void @btrfs_exclop_balance(ptr noundef %fs_info, i32 noundef 1) #23
  br label %if.end231

if.then228:                                       ; preds = %land.lhs.true217.if.then228_crit_edge, %cond.end211.if.then228_crit_edge
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.35) #28
  br label %if.end231

if.else229:                                       ; preds = %cond.end211
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.36, i32 noundef %call213) #28
  br label %if.end231

if.end231:                                        ; preds = %if.else229, %if.then228, %if.then221
  tail call void @_clear_bit(i32 noundef 12, ptr noundef %flags.i) #23
  %tobool233.not = icmp eq ptr %bargs, null
  br i1 %tobool233.not, label %if.end231.if.end235_crit_edge, label %if.then234

if.end231.if.end235_crit_edge:                    ; preds = %if.end231
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end235

if.then234:                                       ; preds = %if.end231
  call void @__sanitizer_cov_trace_pc() #25
  %79 = call ptr @memset(ptr %bargs, i32 0, i32 1024)
  tail call void @btrfs_update_ioctl_balance_args(ptr noundef %fs_info, ptr noundef nonnull %bargs) #23
  br label %if.end235

if.end235:                                        ; preds = %if.then234, %if.end231.if.end235_crit_edge
  %80 = zext i32 %call213 to i64
  call void @__sanitizer_cov_trace_switch(i64 %80, ptr @__sancov_gen_cov_switch_values.204)
  switch i32 %call213, label %if.end235.if.then246_crit_edge [
    i32 0, label %if.end235.lor.lhs.false243_crit_edge
    i32 -125, label %if.end235.lor.lhs.false243_crit_edge467
    i32 -28, label %if.end235.lor.lhs.false243_crit_edge468
  ]

if.end235.lor.lhs.false243_crit_edge468:          ; preds = %if.end235
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false243

if.end235.lor.lhs.false243_crit_edge467:          ; preds = %if.end235
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false243

if.end235.lor.lhs.false243_crit_edge:             ; preds = %if.end235
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false243

if.end235.if.then246_crit_edge:                   ; preds = %if.end235
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then246

lor.lhs.false243:                                 ; preds = %if.end235.lor.lhs.false243_crit_edge, %if.end235.lor.lhs.false243_crit_edge467, %if.end235.lor.lhs.false243_crit_edge468
  %call244 = tail call fastcc i32 @balance_need_close(ptr noundef %fs_info)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call244)
  %tobool245.not = icmp eq i32 %call244, 0
  br i1 %tobool245.not, label %lor.lhs.false243.if.end247_crit_edge, label %lor.lhs.false243.if.then246_crit_edge

lor.lhs.false243.if.then246_crit_edge:            ; preds = %lor.lhs.false243
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then246

lor.lhs.false243.if.end247_crit_edge:             ; preds = %lor.lhs.false243
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end247

if.then246:                                       ; preds = %lor.lhs.false243.if.then246_crit_edge, %if.end235.if.then246_crit_edge
  tail call fastcc void @reset_balance_state(ptr noundef %fs_info)
  tail call void @btrfs_exclop_finish(ptr noundef %fs_info) #23
  br label %if.end247

if.end247:                                        ; preds = %if.then246, %lor.lhs.false243.if.end247_crit_edge
  %balance_wait_q = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 118
  tail call void @__wake_up(ptr noundef %balance_wait_q, i32 noundef 3, i32 noundef 1, ptr noundef null) #23
  br label %cleanup

out:                                              ; preds = %if.end128.out_crit_edge, %if.else118, %lor.lhs.false39.out_crit_edge, %btrfs_bg_type_to_raid_name.exit.i414, %if.then3.i377, %btrfs_bg_type_to_raid_name.exit.i, %if.then3.i, %if.then24, %lor.lhs.false3.out_crit_edge, %lor.lhs.false.out_crit_edge, %btrfs_fs_closing.exit
  %ret.0 = phi i32 [ -22, %if.then24 ], [ -22, %if.else118 ], [ -22, %lor.lhs.false3.out_crit_edge ], [ -22, %lor.lhs.false.out_crit_edge ], [ -22, %btrfs_fs_closing.exit ], [ -22, %lor.lhs.false39.out_crit_edge ], [ %call129, %if.end128.out_crit_edge ], [ -22, %if.then3.i ], [ -22, %btrfs_bg_type_to_raid_name.exit.i ], [ -22, %if.then3.i377 ], [ -22, %btrfs_bg_type_to_raid_name.exit.i414 ]
  %flags248 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 3
  %81 = ptrtoint ptr %flags248 to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load i64, ptr %flags248, align 8
  %and249 = and i64 %82, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and249)
  %tobool250.not = icmp eq i64 %and249, 0
  br i1 %tobool250.not, label %if.else252, label %if.then251

if.then251:                                       ; preds = %out
  call void @__sanitizer_cov_trace_pc() #25
  tail call fastcc void @reset_balance_state(ptr noundef %fs_info)
  br label %if.end253

if.else252:                                       ; preds = %out
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @kfree(ptr noundef %bctl) #23
  br label %if.end253

if.end253:                                        ; preds = %if.else252, %if.then251
  tail call void @btrfs_exclop_finish(ptr noundef %fs_info) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end253, %if.end247
  %retval.0 = phi i32 [ %ret.0, %if.end253 ], [ %call213, %if.end247 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_should_cancel_balance(ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @validate_convert_profile(ptr noundef %fs_info, ptr nocapture noundef readonly %bargs, i64 noundef %allowed, ptr noundef %type) unnamed_addr #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %flags = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs, i32 0, i32 8
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_loadN_noabort(i32 %0, i32 8)
  %1 = load i64, ptr %flags, align 1
  %and = and i64 %1, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %return

if.end:                                           ; preds = %entry
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 167
  %2 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sectorsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %3)
  %cmp = icmp ult i32 %3, 4096
  br i1 %cmp, label %land.lhs.true, label %if.end.if.end5_crit_edge

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end5

land.lhs.true:                                    ; preds = %if.end
  %target = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs, i32 0, i32 7
  %4 = ptrtoint ptr %target to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %5 = load i64, ptr %target, align 1
  %and1 = and i64 %5, 384
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1)
  %tobool2.not = icmp eq i64 %and1, 0
  br i1 %tobool2.not, label %land.lhs.true.if.end5_crit_edge, label %if.then3

land.lhs.true.if.end5_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end5

if.then3:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.106, i32 noundef %3, i32 noundef 4096) #28
  br label %return

if.end5:                                          ; preds = %land.lhs.true.if.end5_crit_edge, %if.end.if.end5_crit_edge
  %target6 = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs, i32 0, i32 7
  %6 = ptrtoint ptr %target6 to i32
  call void @__asan_loadN_noabort(i32 %6, i32 8)
  %7 = load i64, ptr %target6, align 1
  %and.i = and i64 %7, -8
  %and1.i = and i64 %7, -281474976712704
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i)
  %tobool2.not.i = icmp ne i64 %and1.i, 0
  %8 = tail call i64 @llvm.ctpop.i64(i64 %and.i) #23, !range !475
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %8)
  %9 = icmp ne i64 %8, 1
  %10 = or i1 %9, %tobool2.not.i
  br i1 %10, label %if.end5.if.end13_crit_edge, label %land.lhs.true8

if.end5.if.end13_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13

land.lhs.true8:                                   ; preds = %if.end5
  %neg = xor i64 %allowed, -1
  %and10 = and i64 %7, %neg
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and10)
  %cmp11 = icmp eq i64 %and10, 0
  br i1 %cmp11, label %land.lhs.true8.return_crit_edge, label %land.lhs.true8.if.end13_crit_edge

land.lhs.true8.if.end13_crit_edge:                ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13

land.lhs.true8.return_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #25
  br label %return

if.end13:                                         ; preds = %land.lhs.true8.if.end13_crit_edge, %if.end5.if.end13_crit_edge
  %and.i.i = and i64 %7, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.end13.btrfs_bg_type_to_raid_name.exit_crit_edge

if.end13.btrfs_bg_type_to_raid_name.exit_crit_edge: ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit

if.else.i.i:                                      ; preds = %if.end13
  %and1.i.i = and i64 %7, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i.i)
  %tobool2.not.i.i = icmp eq i64 %and1.i.i, 0
  br i1 %tobool2.not.i.i, label %if.else4.i.i, label %if.else.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge

if.else.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge: ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit

if.else4.i.i:                                     ; preds = %if.else.i.i
  %and5.i.i = and i64 %7, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5.i.i)
  %tobool6.not.i.i = icmp eq i64 %and5.i.i, 0
  br i1 %tobool6.not.i.i, label %if.else8.i.i, label %if.else4.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge

if.else4.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge: ; preds = %if.else4.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit

if.else8.i.i:                                     ; preds = %if.else4.i.i
  %and9.i.i = and i64 %7, 1024
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and9.i.i)
  %tobool10.not.i.i = icmp eq i64 %and9.i.i, 0
  br i1 %tobool10.not.i.i, label %if.else12.i.i, label %if.else8.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge

if.else8.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge: ; preds = %if.else8.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit

if.else12.i.i:                                    ; preds = %if.else8.i.i
  %and13.i.i = and i64 %7, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and13.i.i)
  %tobool14.not.i.i = icmp eq i64 %and13.i.i, 0
  br i1 %tobool14.not.i.i, label %if.else16.i.i, label %if.else12.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge

if.else12.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge: ; preds = %if.else12.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit

if.else16.i.i:                                    ; preds = %if.else12.i.i
  %and17.i.i = and i64 %7, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and17.i.i)
  %tobool18.not.i.i = icmp eq i64 %and17.i.i, 0
  br i1 %tobool18.not.i.i, label %if.else20.i.i, label %if.else16.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge

if.else16.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge: ; preds = %if.else16.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit

if.else20.i.i:                                    ; preds = %if.else16.i.i
  %and21.i.i = and i64 %7, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and21.i.i)
  %tobool22.not.i.i = icmp eq i64 %and21.i.i, 0
  br i1 %tobool22.not.i.i, label %if.else24.i.i, label %if.else20.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge

if.else20.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge: ; preds = %if.else20.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit

if.else24.i.i:                                    ; preds = %if.else20.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %and25.i.i = and i64 %7, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and25.i.i)
  %tobool26.not.i.i = icmp eq i64 %and25.i.i, 0
  %..i.i = select i1 %tobool26.not.i.i, i32 4, i32 6
  br label %btrfs_bg_type_to_raid_name.exit

btrfs_bg_type_to_raid_name.exit:                  ; preds = %if.else24.i.i, %if.else20.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge, %if.else16.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge, %if.else12.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge, %if.else8.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge, %if.else4.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge, %if.else.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge, %if.end13.btrfs_bg_type_to_raid_name.exit_crit_edge
  %retval.0.i.i = phi i32 [ 0, %if.end13.btrfs_bg_type_to_raid_name.exit_crit_edge ], [ 1, %if.else.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge ], [ 7, %if.else4.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge ], [ 8, %if.else8.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge ], [ 2, %if.else12.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge ], [ 3, %if.else16.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge ], [ 5, %if.else20.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge ], [ %..i.i, %if.else24.i.i ]
  %raid_name.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i, i32 9
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.107, ptr noundef %type, ptr noundef %raid_name.i) #28
  br label %return

return:                                           ; preds = %btrfs_bg_type_to_raid_name.exit, %land.lhs.true8.return_crit_edge, %if.then3, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %if.then3 ], [ 0, %btrfs_bg_type_to_raid_name.exit ], [ 1, %entry.return_crit_edge ], [ 1, %land.lhs.true8.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_get_num_tolerated_disk_barrier_failures(i64 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @insert_balance_item(ptr nocapture noundef readonly %fs_info, ptr nocapture noundef readonly %bctl) unnamed_addr #4 align 64 {
entry:
  %data_size.addr.i = alloca i32, align 4
  %batch.i = alloca %struct.btrfs_item_batch, align 4
  %disk_bargs = alloca %struct.btrfs_disk_balance_args, align 8
  %key = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %tree_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 2
  %0 = ptrtoint ptr %tree_root to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tree_root, align 4
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %disk_bargs) #23
  %2 = call ptr @memset(ptr %disk_bargs, i32 255, i32 136)
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #23
  %3 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %4 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %call = tail call ptr @btrfs_alloc_path() #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call ptr @btrfs_start_transaction(ptr noundef %1, i32 noundef 0) #23
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @btrfs_free_path(ptr noundef nonnull %call) #23
  %5 = ptrtoint ptr %call1 to i32
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %6 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 -4, ptr %key, align 8
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 -8, ptr %3, align 8
  %8 = ptrtoint ptr %4 to i32
  call void @__asan_storeN_noabort(i32 %8, i32 8)
  store i64 0, ptr %4, align 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %data_size.addr.i)
  %9 = ptrtoint ptr %data_size.addr.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 448, ptr %data_size.addr.i, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %batch.i) #23
  %10 = getelementptr inbounds %struct.btrfs_item_batch, ptr %batch.i, i32 0, i32 1
  %11 = getelementptr inbounds %struct.btrfs_item_batch, ptr %batch.i, i32 0, i32 2
  %12 = getelementptr inbounds %struct.btrfs_item_batch, ptr %batch.i, i32 0, i32 3
  %13 = ptrtoint ptr %batch.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %key, ptr %batch.i, align 4
  %14 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %data_size.addr.i, ptr %10, align 4
  %15 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 448, ptr %11, align 4
  %16 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 1, ptr %12, align 4
  %call.i = call i32 @btrfs_insert_empty_items(ptr noundef %call1, ptr noundef %1, ptr noundef nonnull %call, ptr noundef nonnull %batch.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %batch.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %data_size.addr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool7.not = icmp eq i32 %call.i, 0
  br i1 %tobool7.not, label %if.end9, label %if.end5.out_crit_edge

if.end5.out_crit_edge:                            ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end9:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  %17 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %call, align 4
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %call, i32 0, i32 1
  %19 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %slots, align 4
  %mul.i.i.i = mul i32 %20, 25
  %add.i.i.i = add i32 %mul.i.i.i, 101
  %21 = inttoptr i32 %add.i.i.i to ptr
  %call.i.i = call i32 @btrfs_get_32(ptr noundef %18, ptr noundef %21, i32 noundef 17) #23
  %add = add i32 %call.i.i, 101
  %22 = inttoptr i32 %add to ptr
  call void @memzero_extent_buffer(ptr noundef %18, i32 noundef %add, i32 noundef 448) #23
  %23 = getelementptr inbounds i8, ptr %disk_bargs, i32 88
  %24 = call ptr @memset(ptr %23, i32 0, i32 48)
  %25 = ptrtoint ptr %bctl to i32
  call void @__asan_loadN_noabort(i32 %25, i32 8)
  %26 = load i64, ptr %bctl, align 1
  %27 = call i64 @llvm.bswap.i64(i64 %26) #23
  %28 = ptrtoint ptr %disk_bargs to i32
  call void @__asan_store8_noabort(i32 %28)
  store i64 %27, ptr %disk_bargs, align 8
  %29 = getelementptr inbounds %struct.btrfs_balance_args, ptr %bctl, i32 0, i32 1
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_loadN_noabort(i32 %30, i32 8)
  %31 = load i64, ptr %29, align 1
  %32 = call i64 @llvm.bswap.i64(i64 %31) #23
  %33 = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 1
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %32, ptr %33, align 8
  %devid.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bctl, i32 0, i32 2
  %35 = ptrtoint ptr %devid.i to i32
  call void @__asan_loadN_noabort(i32 %35, i32 8)
  %36 = load i64, ptr %devid.i, align 1
  %37 = call i64 @llvm.bswap.i64(i64 %36) #23
  %devid2.i = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 2
  %38 = ptrtoint ptr %devid2.i to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %37, ptr %devid2.i, align 8
  %pstart.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bctl, i32 0, i32 3
  %39 = ptrtoint ptr %pstart.i to i32
  call void @__asan_loadN_noabort(i32 %39, i32 8)
  %40 = load i64, ptr %pstart.i, align 1
  %41 = call i64 @llvm.bswap.i64(i64 %40) #23
  %pstart3.i = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 3
  %42 = ptrtoint ptr %pstart3.i to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %41, ptr %pstart3.i, align 8
  %pend.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bctl, i32 0, i32 4
  %43 = ptrtoint ptr %pend.i to i32
  call void @__asan_loadN_noabort(i32 %43, i32 8)
  %44 = load i64, ptr %pend.i, align 1
  %45 = call i64 @llvm.bswap.i64(i64 %44) #23
  %pend4.i = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 4
  %46 = ptrtoint ptr %pend4.i to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %45, ptr %pend4.i, align 8
  %vstart.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bctl, i32 0, i32 5
  %47 = ptrtoint ptr %vstart.i to i32
  call void @__asan_loadN_noabort(i32 %47, i32 8)
  %48 = load i64, ptr %vstart.i, align 1
  %49 = call i64 @llvm.bswap.i64(i64 %48) #23
  %vstart5.i = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 5
  %50 = ptrtoint ptr %vstart5.i to i32
  call void @__asan_store8_noabort(i32 %50)
  store i64 %49, ptr %vstart5.i, align 8
  %vend.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bctl, i32 0, i32 6
  %51 = ptrtoint ptr %vend.i to i32
  call void @__asan_loadN_noabort(i32 %51, i32 8)
  %52 = load i64, ptr %vend.i, align 1
  %53 = call i64 @llvm.bswap.i64(i64 %52) #23
  %vend6.i = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 6
  %54 = ptrtoint ptr %vend6.i to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 %53, ptr %vend6.i, align 8
  %target.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bctl, i32 0, i32 7
  %55 = ptrtoint ptr %target.i to i32
  call void @__asan_loadN_noabort(i32 %55, i32 8)
  %56 = load i64, ptr %target.i, align 1
  %57 = call i64 @llvm.bswap.i64(i64 %56) #23
  %target7.i = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 7
  %58 = ptrtoint ptr %target7.i to i32
  call void @__asan_store8_noabort(i32 %58)
  store i64 %57, ptr %target7.i, align 8
  %flags.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bctl, i32 0, i32 8
  %59 = ptrtoint ptr %flags.i to i32
  call void @__asan_loadN_noabort(i32 %59, i32 8)
  %60 = load i64, ptr %flags.i, align 1
  %61 = call i64 @llvm.bswap.i64(i64 %60) #23
  %flags8.i = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 8
  %62 = ptrtoint ptr %flags8.i to i32
  call void @__asan_store8_noabort(i32 %62)
  store i64 %61, ptr %flags8.i, align 8
  %63 = getelementptr inbounds %struct.btrfs_balance_args, ptr %bctl, i32 0, i32 9
  %64 = ptrtoint ptr %63 to i32
  call void @__asan_loadN_noabort(i32 %64, i32 8)
  %65 = load i64, ptr %63, align 1
  %66 = call i64 @llvm.bswap.i64(i64 %65) #23
  %67 = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 9
  %68 = ptrtoint ptr %67 to i32
  call void @__asan_store8_noabort(i32 %68)
  store i64 %66, ptr %67, align 8
  %stripes_min.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bctl, i32 0, i32 10
  %69 = ptrtoint ptr %stripes_min.i to i32
  call void @__asan_loadN_noabort(i32 %69, i32 4)
  %70 = load i32, ptr %stripes_min.i, align 1
  %71 = call i32 @llvm.bswap.i32(i32 %70) #23
  %stripes_min9.i = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 10
  %72 = ptrtoint ptr %stripes_min9.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %71, ptr %stripes_min9.i, align 8
  %stripes_max.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bctl, i32 0, i32 11
  %73 = ptrtoint ptr %stripes_max.i to i32
  call void @__asan_loadN_noabort(i32 %73, i32 4)
  %74 = load i32, ptr %stripes_max.i, align 1
  %75 = call i32 @llvm.bswap.i32(i32 %74) #23
  %stripes_max10.i = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 11
  %76 = ptrtoint ptr %stripes_max10.i to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %75, ptr %stripes_max10.i, align 4
  %add.i = add i32 %call.i.i, 109
  call void @write_extent_buffer(ptr noundef %18, ptr noundef nonnull %disk_bargs, i32 noundef %add.i, i32 noundef 136) #23
  %meta = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1
  %77 = getelementptr inbounds i8, ptr %disk_bargs, i32 88
  %78 = call ptr @memset(ptr %77, i32 0, i32 48)
  %79 = ptrtoint ptr %meta to i32
  call void @__asan_loadN_noabort(i32 %79, i32 8)
  %80 = load i64, ptr %meta, align 1
  %81 = call i64 @llvm.bswap.i64(i64 %80) #23
  %82 = ptrtoint ptr %disk_bargs to i32
  call void @__asan_store8_noabort(i32 %82)
  store i64 %81, ptr %disk_bargs, align 8
  %83 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1, i32 1
  %84 = ptrtoint ptr %83 to i32
  call void @__asan_loadN_noabort(i32 %84, i32 8)
  %85 = load i64, ptr %83, align 1
  %86 = call i64 @llvm.bswap.i64(i64 %85) #23
  %87 = ptrtoint ptr %33 to i32
  call void @__asan_store8_noabort(i32 %87)
  store i64 %86, ptr %33, align 8
  %devid.i51 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1, i32 2
  %88 = ptrtoint ptr %devid.i51 to i32
  call void @__asan_loadN_noabort(i32 %88, i32 8)
  %89 = load i64, ptr %devid.i51, align 1
  %90 = call i64 @llvm.bswap.i64(i64 %89) #23
  %91 = ptrtoint ptr %devid2.i to i32
  call void @__asan_store8_noabort(i32 %91)
  store i64 %90, ptr %devid2.i, align 8
  %pstart.i53 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1, i32 3
  %92 = ptrtoint ptr %pstart.i53 to i32
  call void @__asan_loadN_noabort(i32 %92, i32 8)
  %93 = load i64, ptr %pstart.i53, align 1
  %94 = call i64 @llvm.bswap.i64(i64 %93) #23
  %95 = ptrtoint ptr %pstart3.i to i32
  call void @__asan_store8_noabort(i32 %95)
  store i64 %94, ptr %pstart3.i, align 8
  %pend.i55 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1, i32 4
  %96 = ptrtoint ptr %pend.i55 to i32
  call void @__asan_loadN_noabort(i32 %96, i32 8)
  %97 = load i64, ptr %pend.i55, align 1
  %98 = call i64 @llvm.bswap.i64(i64 %97) #23
  %99 = ptrtoint ptr %pend4.i to i32
  call void @__asan_store8_noabort(i32 %99)
  store i64 %98, ptr %pend4.i, align 8
  %vstart.i57 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1, i32 5
  %100 = ptrtoint ptr %vstart.i57 to i32
  call void @__asan_loadN_noabort(i32 %100, i32 8)
  %101 = load i64, ptr %vstart.i57, align 1
  %102 = call i64 @llvm.bswap.i64(i64 %101) #23
  %103 = ptrtoint ptr %vstart5.i to i32
  call void @__asan_store8_noabort(i32 %103)
  store i64 %102, ptr %vstart5.i, align 8
  %vend.i59 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1, i32 6
  %104 = ptrtoint ptr %vend.i59 to i32
  call void @__asan_loadN_noabort(i32 %104, i32 8)
  %105 = load i64, ptr %vend.i59, align 1
  %106 = call i64 @llvm.bswap.i64(i64 %105) #23
  %107 = ptrtoint ptr %vend6.i to i32
  call void @__asan_store8_noabort(i32 %107)
  store i64 %106, ptr %vend6.i, align 8
  %target.i61 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1, i32 7
  %108 = ptrtoint ptr %target.i61 to i32
  call void @__asan_loadN_noabort(i32 %108, i32 8)
  %109 = load i64, ptr %target.i61, align 1
  %110 = call i64 @llvm.bswap.i64(i64 %109) #23
  %111 = ptrtoint ptr %target7.i to i32
  call void @__asan_store8_noabort(i32 %111)
  store i64 %110, ptr %target7.i, align 8
  %flags.i63 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1, i32 8
  %112 = ptrtoint ptr %flags.i63 to i32
  call void @__asan_loadN_noabort(i32 %112, i32 8)
  %113 = load i64, ptr %flags.i63, align 1
  %114 = call i64 @llvm.bswap.i64(i64 %113) #23
  %115 = ptrtoint ptr %flags8.i to i32
  call void @__asan_store8_noabort(i32 %115)
  store i64 %114, ptr %flags8.i, align 8
  %116 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1, i32 9
  %117 = ptrtoint ptr %116 to i32
  call void @__asan_loadN_noabort(i32 %117, i32 8)
  %118 = load i64, ptr %116, align 1
  %119 = call i64 @llvm.bswap.i64(i64 %118) #23
  %120 = ptrtoint ptr %67 to i32
  call void @__asan_store8_noabort(i32 %120)
  store i64 %119, ptr %67, align 8
  %stripes_min.i65 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1, i32 10
  %121 = ptrtoint ptr %stripes_min.i65 to i32
  call void @__asan_loadN_noabort(i32 %121, i32 4)
  %122 = load i32, ptr %stripes_min.i65, align 1
  %123 = call i32 @llvm.bswap.i32(i32 %122) #23
  %124 = ptrtoint ptr %stripes_min9.i to i32
  call void @__asan_store4_noabort(i32 %124)
  store i32 %123, ptr %stripes_min9.i, align 8
  %stripes_max.i67 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1, i32 11
  %125 = ptrtoint ptr %stripes_max.i67 to i32
  call void @__asan_loadN_noabort(i32 %125, i32 4)
  %126 = load i32, ptr %stripes_max.i67, align 1
  %127 = call i32 @llvm.bswap.i32(i32 %126) #23
  %128 = ptrtoint ptr %stripes_max10.i to i32
  call void @__asan_store4_noabort(i32 %128)
  store i32 %127, ptr %stripes_max10.i, align 4
  %add.i69 = add i32 %call.i.i, 245
  call void @write_extent_buffer(ptr noundef %18, ptr noundef nonnull %disk_bargs, i32 noundef %add.i69, i32 noundef 136) #23
  %sys = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 2
  %129 = getelementptr inbounds i8, ptr %disk_bargs, i32 88
  %130 = call ptr @memset(ptr %129, i32 0, i32 48)
  %131 = ptrtoint ptr %sys to i32
  call void @__asan_loadN_noabort(i32 %131, i32 8)
  %132 = load i64, ptr %sys, align 1
  %133 = call i64 @llvm.bswap.i64(i64 %132) #23
  %134 = ptrtoint ptr %disk_bargs to i32
  call void @__asan_store8_noabort(i32 %134)
  store i64 %133, ptr %disk_bargs, align 8
  %135 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 2, i32 1
  %136 = ptrtoint ptr %135 to i32
  call void @__asan_loadN_noabort(i32 %136, i32 8)
  %137 = load i64, ptr %135, align 1
  %138 = call i64 @llvm.bswap.i64(i64 %137) #23
  %139 = ptrtoint ptr %33 to i32
  call void @__asan_store8_noabort(i32 %139)
  store i64 %138, ptr %33, align 8
  %devid.i70 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 2, i32 2
  %140 = ptrtoint ptr %devid.i70 to i32
  call void @__asan_loadN_noabort(i32 %140, i32 8)
  %141 = load i64, ptr %devid.i70, align 1
  %142 = call i64 @llvm.bswap.i64(i64 %141) #23
  %143 = ptrtoint ptr %devid2.i to i32
  call void @__asan_store8_noabort(i32 %143)
  store i64 %142, ptr %devid2.i, align 8
  %pstart.i72 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 2, i32 3
  %144 = ptrtoint ptr %pstart.i72 to i32
  call void @__asan_loadN_noabort(i32 %144, i32 8)
  %145 = load i64, ptr %pstart.i72, align 1
  %146 = call i64 @llvm.bswap.i64(i64 %145) #23
  %147 = ptrtoint ptr %pstart3.i to i32
  call void @__asan_store8_noabort(i32 %147)
  store i64 %146, ptr %pstart3.i, align 8
  %pend.i74 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 2, i32 4
  %148 = ptrtoint ptr %pend.i74 to i32
  call void @__asan_loadN_noabort(i32 %148, i32 8)
  %149 = load i64, ptr %pend.i74, align 1
  %150 = call i64 @llvm.bswap.i64(i64 %149) #23
  %151 = ptrtoint ptr %pend4.i to i32
  call void @__asan_store8_noabort(i32 %151)
  store i64 %150, ptr %pend4.i, align 8
  %vstart.i76 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 2, i32 5
  %152 = ptrtoint ptr %vstart.i76 to i32
  call void @__asan_loadN_noabort(i32 %152, i32 8)
  %153 = load i64, ptr %vstart.i76, align 1
  %154 = call i64 @llvm.bswap.i64(i64 %153) #23
  %155 = ptrtoint ptr %vstart5.i to i32
  call void @__asan_store8_noabort(i32 %155)
  store i64 %154, ptr %vstart5.i, align 8
  %vend.i78 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 2, i32 6
  %156 = ptrtoint ptr %vend.i78 to i32
  call void @__asan_loadN_noabort(i32 %156, i32 8)
  %157 = load i64, ptr %vend.i78, align 1
  %158 = call i64 @llvm.bswap.i64(i64 %157) #23
  %159 = ptrtoint ptr %vend6.i to i32
  call void @__asan_store8_noabort(i32 %159)
  store i64 %158, ptr %vend6.i, align 8
  %target.i80 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 2, i32 7
  %160 = ptrtoint ptr %target.i80 to i32
  call void @__asan_loadN_noabort(i32 %160, i32 8)
  %161 = load i64, ptr %target.i80, align 1
  %162 = call i64 @llvm.bswap.i64(i64 %161) #23
  %163 = ptrtoint ptr %target7.i to i32
  call void @__asan_store8_noabort(i32 %163)
  store i64 %162, ptr %target7.i, align 8
  %flags.i82 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 2, i32 8
  %164 = ptrtoint ptr %flags.i82 to i32
  call void @__asan_loadN_noabort(i32 %164, i32 8)
  %165 = load i64, ptr %flags.i82, align 1
  %166 = call i64 @llvm.bswap.i64(i64 %165) #23
  %167 = ptrtoint ptr %flags8.i to i32
  call void @__asan_store8_noabort(i32 %167)
  store i64 %166, ptr %flags8.i, align 8
  %168 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 2, i32 9
  %169 = ptrtoint ptr %168 to i32
  call void @__asan_loadN_noabort(i32 %169, i32 8)
  %170 = load i64, ptr %168, align 1
  %171 = call i64 @llvm.bswap.i64(i64 %170) #23
  %172 = ptrtoint ptr %67 to i32
  call void @__asan_store8_noabort(i32 %172)
  store i64 %171, ptr %67, align 8
  %stripes_min.i84 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 2, i32 10
  %173 = ptrtoint ptr %stripes_min.i84 to i32
  call void @__asan_loadN_noabort(i32 %173, i32 4)
  %174 = load i32, ptr %stripes_min.i84, align 1
  %175 = call i32 @llvm.bswap.i32(i32 %174) #23
  %176 = ptrtoint ptr %stripes_min9.i to i32
  call void @__asan_store4_noabort(i32 %176)
  store i32 %175, ptr %stripes_min9.i, align 8
  %stripes_max.i86 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 2, i32 11
  %177 = ptrtoint ptr %stripes_max.i86 to i32
  call void @__asan_loadN_noabort(i32 %177, i32 4)
  %178 = load i32, ptr %stripes_max.i86, align 1
  %179 = call i32 @llvm.bswap.i32(i32 %178) #23
  %180 = ptrtoint ptr %stripes_max10.i to i32
  call void @__asan_store4_noabort(i32 %180)
  store i32 %179, ptr %stripes_max10.i, align 4
  %add.i88 = add i32 %call.i.i, 381
  call void @write_extent_buffer(ptr noundef %18, ptr noundef nonnull %disk_bargs, i32 noundef %add.i88, i32 noundef 136) #23
  %flags = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 3
  %181 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %181)
  %182 = load i64, ptr %flags, align 8
  call void @btrfs_set_64(ptr noundef %18, ptr noundef %22, i32 noundef 0, i64 noundef %182) #23
  call void @btrfs_mark_buffer_dirty(ptr noundef %18) #23
  br label %out

out:                                              ; preds = %if.end9, %if.end5.out_crit_edge
  call void @btrfs_free_path(ptr noundef nonnull %call) #23
  %call12 = call i32 @btrfs_commit_transaction(ptr noundef %call1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  %spec.select = select i1 %tobool7.not, i32 %call12, i32 %call.i
  %spec.select50 = select i1 %tobool13.not, i32 %call.i, i32 %spec.select
  br label %cleanup

cleanup:                                          ; preds = %out, %if.then3, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %5, %if.then3 ], [ -12, %entry.cleanup_crit_edge ], [ %spec.select50, %out ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #23
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %disk_bargs) #23
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc void @update_balance_args(ptr nocapture noundef %bctl) unnamed_addr #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.btrfs_balance_args, ptr %bctl, i32 0, i32 8
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %flags, align 8
  %and = and i64 %1, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %or = or i64 %1, 512
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 %or, ptr %flags, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %flags3 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 2, i32 8
  %3 = ptrtoint ptr %flags3 to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %flags3, align 8
  %and4 = and i64 %4, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and4)
  %tobool5.not = icmp eq i64 %and4, 0
  br i1 %tobool5.not, label %if.end.if.end10_crit_edge, label %if.then6

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end10

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %or9 = or i64 %4, 512
  %5 = ptrtoint ptr %flags3 to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %or9, ptr %flags3, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then6, %if.end.if.end10_crit_edge
  %flags11 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1, i32 8
  %6 = ptrtoint ptr %flags11 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %flags11, align 8
  %and12 = and i64 %7, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and12)
  %tobool13.not = icmp eq i64 %and12, 0
  br i1 %tobool13.not, label %if.end10.if.end18_crit_edge, label %if.then14

if.end10.if.end18_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end18

if.then14:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  %or17 = or i64 %7, 512
  %8 = ptrtoint ptr %flags11 to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %or17, ptr %flags11, align 8
  br label %if.end18

if.end18:                                         ; preds = %if.then14, %if.end10.if.end18_crit_edge
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %flags, align 8
  %11 = and i64 %10, 1282
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %11)
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %if.then32, label %if.end18.if.end37_crit_edge

if.end18.if.end37_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end37

if.then32:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #25
  %or35 = or i64 %10, 2
  %13 = ptrtoint ptr %flags to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %or35, ptr %flags, align 8
  %14 = getelementptr inbounds %struct.btrfs_balance_args, ptr %bctl, i32 0, i32 1
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 90, ptr %14, align 8
  br label %if.end37

if.end37:                                         ; preds = %if.then32, %if.end18.if.end37_crit_edge
  %16 = ptrtoint ptr %flags3 to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %flags3, align 8
  %18 = and i64 %17, 1282
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %18)
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %if.then52, label %if.end37.if.end57_crit_edge

if.end37.if.end57_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end57

if.then52:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #25
  %or55 = or i64 %17, 2
  %20 = ptrtoint ptr %flags3 to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %or55, ptr %flags3, align 8
  %21 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 2, i32 1
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 90, ptr %21, align 8
  br label %if.end57

if.end57:                                         ; preds = %if.then52, %if.end37.if.end57_crit_edge
  %23 = ptrtoint ptr %flags11 to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %flags11, align 8
  %25 = and i64 %24, 1282
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %25)
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %if.then72, label %if.end57.if.end77_crit_edge

if.end57.if.end77_crit_edge:                      ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end77

if.then72:                                        ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #25
  %or75 = or i64 %24, 2
  %27 = ptrtoint ptr %flags11 to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %or75, ptr %flags11, align 8
  %28 = getelementptr inbounds %struct.btrfs_balance_control, ptr %bctl, i32 0, i32 1, i32 1
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 90, ptr %28, align 8
  br label %if.end77

if.end77:                                         ; preds = %if.then72, %if.end57.if.end77_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @describe_balance_start_or_resume(ptr noundef %fs_info) unnamed_addr #4 align 64 {
entry:
  %tmp_buf = alloca [192 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %tmp_buf) #23
  %0 = call ptr @memset(ptr %tmp_buf, i32 0, i32 192)
  %balance_ctl = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 117
  %1 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %balance_ctl, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %3 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %3, i32 noundef 3520, i32 noundef 1024) #29
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %flags = getelementptr inbounds %struct.btrfs_balance_control, ptr %2, i32 0, i32 3
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %flags, align 8
  %and = and i64 %5, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool1.not = icmp eq i64 %and, 0
  br i1 %tobool1.not, label %if.end.if.end7_crit_edge, label %do.body

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end7

do.body:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %6 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 761667584, ptr %call7.i.i, align 8
  %add.ptr = getelementptr i8, ptr %call7.i.i, i32 3
  br label %if.end7

if.end7:                                          ; preds = %do.body, %if.end.if.end7_crit_edge
  %bp.0 = phi ptr [ %add.ptr, %do.body ], [ %call7.i.i, %if.end.if.end7_crit_edge ]
  %size_bp.0 = phi i32 [ 1021, %do.body ], [ 1024, %if.end.if.end7_crit_edge ]
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %flags, align 8
  %and9 = and i64 %8, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and9)
  %tobool10.not = icmp eq i64 %and9, 0
  br i1 %tobool10.not, label %if.end7.if.end24_crit_edge, label %if.then11

if.end7.if.end24_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end24

if.then11:                                        ; preds = %if.end7
  call fastcc void @describe_balance_args(ptr noundef %2, ptr noundef nonnull %tmp_buf)
  %call14 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %bp.0, i32 noundef %size_bp.0, ptr noundef nonnull @.str.110, ptr noundef nonnull %tmp_buf)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call14)
  %cmp15 = icmp sgt i32 %call14, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %size_bp.0, i32 %call14)
  %cmp17.not = icmp ugt i32 %size_bp.0, %call14
  %or.cond = and i1 %cmp15, %cmp17.not
  br i1 %or.cond, label %if.end19, label %if.then11.out_overflow_crit_edge

if.then11.out_overflow_crit_edge:                 ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_overflow

if.end19:                                         ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #25
  %sub20 = sub nsw i32 %size_bp.0, %call14
  %add.ptr21 = getelementptr i8, ptr %bp.0, i32 %call14
  br label %if.end24

if.end24:                                         ; preds = %if.end19, %if.end7.if.end24_crit_edge
  %bp.1 = phi ptr [ %add.ptr21, %if.end19 ], [ %bp.0, %if.end7.if.end24_crit_edge ]
  %size_bp.1 = phi i32 [ %sub20, %if.end19 ], [ %size_bp.0, %if.end7.if.end24_crit_edge ]
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %flags, align 8
  %and26 = and i64 %10, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and26)
  %tobool27.not = icmp eq i64 %and26, 0
  br i1 %tobool27.not, label %if.end24.if.end42_crit_edge, label %if.then28

if.end24.if.end42_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end42

if.then28:                                        ; preds = %if.end24
  %meta = getelementptr inbounds %struct.btrfs_balance_control, ptr %2, i32 0, i32 1
  call fastcc void @describe_balance_args(ptr noundef %meta, ptr noundef nonnull %tmp_buf)
  %call32 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %bp.1, i32 noundef %size_bp.1, ptr noundef nonnull @.str.111, ptr noundef nonnull %tmp_buf)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call32)
  %cmp33 = icmp sgt i32 %call32, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %size_bp.1, i32 %call32)
  %cmp35.not = icmp ugt i32 %size_bp.1, %call32
  %or.cond125 = and i1 %cmp33, %cmp35.not
  br i1 %or.cond125, label %if.end37, label %if.then28.out_overflow_crit_edge

if.then28.out_overflow_crit_edge:                 ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_overflow

if.end37:                                         ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #25
  %sub38 = sub i32 %size_bp.1, %call32
  %add.ptr39 = getelementptr i8, ptr %bp.1, i32 %call32
  br label %if.end42

if.end42:                                         ; preds = %if.end37, %if.end24.if.end42_crit_edge
  %bp.2 = phi ptr [ %add.ptr39, %if.end37 ], [ %bp.1, %if.end24.if.end42_crit_edge ]
  %size_bp.2 = phi i32 [ %sub38, %if.end37 ], [ %size_bp.1, %if.end24.if.end42_crit_edge ]
  %11 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %flags, align 8
  %and44 = and i64 %12, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and44)
  %tobool45.not = icmp eq i64 %and44, 0
  br i1 %tobool45.not, label %if.end42.out_overflow_crit_edge, label %if.then46

if.end42.out_overflow_crit_edge:                  ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_overflow

if.then46:                                        ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #25
  %sys = getelementptr inbounds %struct.btrfs_balance_control, ptr %2, i32 0, i32 2
  call fastcc void @describe_balance_args(ptr noundef %sys, ptr noundef nonnull %tmp_buf)
  %call50 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %bp.2, i32 noundef %size_bp.2, ptr noundef nonnull @.str.112, ptr noundef nonnull %tmp_buf)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call50)
  %cmp51 = icmp sgt i32 %call50, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %size_bp.2, i32 %call50)
  %cmp53.not = icmp ugt i32 %size_bp.2, %call50
  %or.cond126 = and i1 %cmp51, %cmp53.not
  %sub56 = select i1 %or.cond126, i32 %call50, i32 0
  %spec.select = sub i32 %size_bp.2, %sub56
  br label %out_overflow

out_overflow:                                     ; preds = %if.then46, %if.end42.out_overflow_crit_edge, %if.then28.out_overflow_crit_edge, %if.then11.out_overflow_crit_edge
  %size_bp.3 = phi i32 [ %size_bp.0, %if.then11.out_overflow_crit_edge ], [ %size_bp.1, %if.then28.out_overflow_crit_edge ], [ %size_bp.2, %if.end42.out_overflow_crit_edge ], [ %spec.select, %if.then46 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1024, i32 %size_bp.3)
  %cmp61 = icmp ult i32 %size_bp.3, 1024
  br i1 %cmp61, label %if.then62, label %out_overflow.if.end65_crit_edge

out_overflow.if.end65_crit_edge:                  ; preds = %out_overflow
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end65

if.then62:                                        ; preds = %out_overflow
  call void @__sanitizer_cov_trace_pc() #25
  %sub64 = sub nuw nsw i32 1023, %size_bp.3
  %arrayidx = getelementptr i8, ptr %call7.i.i, i32 %sub64
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 0, ptr %arrayidx, align 1
  br label %if.end65

if.end65:                                         ; preds = %if.then62, %out_overflow.if.end65_crit_edge
  %14 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %flags, align 8
  %and67 = and i64 %15, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and67)
  %tobool68.not = icmp eq i64 %and67, 0
  %cond = select i1 %tobool68.not, ptr @.str.115, ptr @.str.114
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.113, ptr noundef nonnull %cond, ptr noundef nonnull %call7.i.i) #28
  call void @kfree(ptr noundef nonnull %call7.i.i) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end65, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %tmp_buf) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__btrfs_balance(ptr noundef %fs_info) unnamed_addr #4 align 64 {
entry:
  %disk_key.i = alloca %struct.btrfs_disk_key, align 8
  %key = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %balance_ctl = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 117
  %0 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %balance_ctl, align 8
  %chunk_root1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 3
  %2 = ptrtoint ptr %chunk_root1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %chunk_root1, align 8
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #23
  %4 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %5 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %6 = getelementptr inbounds %struct.btrfs_balance_args, ptr %1, i32 0, i32 9
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %6, align 8
  %9 = getelementptr inbounds %struct.btrfs_balance_control, ptr %1, i32 0, i32 1, i32 9
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %9, align 8
  %12 = getelementptr inbounds %struct.btrfs_balance_control, ptr %1, i32 0, i32 2, i32 9
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %12, align 8
  %call = tail call ptr @btrfs_alloc_path() #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %error.thread, label %if.end

error.thread:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @btrfs_free_path(ptr noundef null) #23
  br label %if.end145

if.end:                                           ; preds = %entry
  %balance_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 113
  tail call void @_raw_spin_lock(ptr noundef %balance_lock) #23
  %stat = getelementptr inbounds %struct.btrfs_balance_control, ptr %1, i32 0, i32 4
  %15 = call ptr @memset(ptr %stat, i32 0, i32 24)
  tail call void @_raw_spin_unlock(ptr noundef %balance_lock) #23
  %balance_pause_req = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 115
  %balance_cancel_req = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 116
  %reclaim_bgs_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 165
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %call, i32 0, i32 1
  %16 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 2
  %considered = getelementptr inbounds %struct.btrfs_balance_control, ptr %1, i32 0, i32 4, i32 1
  %completed = getelementptr inbounds %struct.btrfs_balance_control, ptr %1, i32 0, i32 4, i32 2
  br label %again

again:                                            ; preds = %if.then138, %if.end
  %enospc_errors.0 = phi i32 [ 0, %if.end ], [ %enospc_errors.3, %if.then138 ]
  %counting.0.off0 = phi i1 [ true, %if.end ], [ false, %if.then138 ]
  %count_data.0 = phi i32 [ 0, %if.end ], [ %count_data.3, %if.then138 ]
  %count_meta.0 = phi i32 [ 0, %if.end ], [ %count_meta.3, %if.then138 ]
  %count_sys.0 = phi i32 [ 0, %if.end ], [ %count_sys.3, %if.then138 ]
  %chunk_reserved.0 = phi i32 [ 0, %if.end ], [ %chunk_reserved.4, %if.then138 ]
  br i1 %counting.0.off0, label %again.if.end8_crit_edge, label %if.then4

again.if.end8_crit_edge:                          ; preds = %again
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end8

if.then4:                                         ; preds = %again
  call void @__sanitizer_cov_trace_pc() #25
  %17 = ptrtoint ptr %6 to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %8, ptr %6, align 8
  %18 = ptrtoint ptr %9 to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %11, ptr %9, align 8
  %19 = ptrtoint ptr %12 to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %14, ptr %12, align 8
  br label %if.end8

if.end8:                                          ; preds = %if.then4, %again.if.end8_crit_edge
  %20 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 256, ptr %key, align 8
  %21 = ptrtoint ptr %5 to i32
  call void @__asan_storeN_noabort(i32 %21, i32 8)
  store i64 -1, ptr %5, align 1
  %22 = ptrtoint ptr %4 to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 -28, ptr %4, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end134, %if.end8
  %enospc_errors.1 = phi i32 [ %enospc_errors.0, %if.end8 ], [ %enospc_errors.2, %if.end134 ]
  %count_data.1 = phi i32 [ %count_data.0, %if.end8 ], [ %count_data.2, %if.end134 ]
  %count_meta.1 = phi i32 [ %count_meta.0, %if.end8 ], [ %count_meta.2, %if.end134 ]
  %count_sys.1 = phi i32 [ %count_sys.0, %if.end8 ], [ %count_sys.2, %if.end134 ]
  %chunk_reserved.1 = phi i32 [ %chunk_reserved.0, %if.end8 ], [ %chunk_reserved.3, %if.end134 ]
  br i1 %counting.0.off0, label %while.cond.lor.lhs.false_crit_edge, label %land.lhs.true

while.cond.lor.lhs.false_crit_edge:               ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false

land.lhs.true:                                    ; preds = %while.cond
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %balance_pause_req, i32 noundef 4) #23
  %23 = ptrtoint ptr %balance_pause_req to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %balance_pause_req, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool11.not = icmp eq i32 %24, 0
  br i1 %tobool11.not, label %land.lhs.true.lor.lhs.false_crit_edge, label %land.lhs.true.error_crit_edge

land.lhs.true.error_crit_edge:                    ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

land.lhs.true.lor.lhs.false_crit_edge:            ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.lor.lhs.false_crit_edge, %while.cond.lor.lhs.false_crit_edge
  %call.i.i221 = call zeroext i1 @__kasan_check_read(ptr noundef %balance_cancel_req, i32 noundef 4) #23
  %25 = ptrtoint ptr %balance_cancel_req to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %balance_cancel_req, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool13.not = icmp eq i32 %26, 0
  br i1 %tobool13.not, label %if.end15, label %lor.lhs.false.error_crit_edge

lor.lhs.false.error_crit_edge:                    ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

if.end15:                                         ; preds = %lor.lhs.false
  call void @mutex_lock_nested(ptr noundef %reclaim_bgs_lock, i32 noundef 0) #23
  %call16 = call i32 @btrfs_search_slot(ptr noundef null, ptr noundef %3, ptr noundef nonnull %key, ptr noundef nonnull %call, i32 noundef 0, i32 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %cmp = icmp slt i32 %call16, 0
  br i1 %cmp, label %if.end15.error.sink.split_crit_edge, label %if.end19

if.end15.error.sink.split_crit_edge:              ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #25
  br label %error.sink.split

if.end19:                                         ; preds = %if.end15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %cmp20 = icmp eq i32 %call16, 0
  br i1 %cmp20, label %do.body, label %if.end25

do.body:                                          ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #25
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3917, 0\0A.popsection", ""() #23, !srcloc !488
  unreachable

if.end25:                                         ; preds = %if.end19
  %call26 = call i32 @btrfs_previous_item(ptr noundef %3, ptr noundef nonnull %call, i64 noundef 0, i32 noundef 228) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %if.end30, label %if.end25.while.end.sink.split_crit_edge

if.end25.while.end.sink.split_crit_edge:          ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end.sink.split

if.end30:                                         ; preds = %if.end25
  %27 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %call, align 4
  %29 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %slots, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i) #23
  %mul.i.i.i.i = mul i32 %30, 25
  %add.i.i.i.i = add i32 %mul.i.i.i.i, 101
  %31 = call ptr @memset(ptr %disk_key.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %28, ptr noundef nonnull %disk_key.i, i32 noundef %add.i.i.i.i, i32 noundef 17) #23
  %32 = ptrtoint ptr %16 to i32
  call void @__asan_loadN_noabort(i32 %32, i32 8)
  %33 = load i64, ptr %16, align 1
  %34 = call i64 @llvm.bswap.i64(i64 %33) #23
  %35 = ptrtoint ptr %disk_key.i to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %disk_key.i, align 8
  %37 = call i64 @llvm.bswap.i64(i64 %36) #23
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i) #23
  %38 = ptrtoint ptr %key to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %key, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %37, i64 %39)
  %cmp34.not = icmp eq i64 %37, %39
  br i1 %cmp34.not, label %if.end37, label %if.end30.while.end.sink.split_crit_edge

if.end30.while.end.sink.split_crit_edge:          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end.sink.split

if.end37:                                         ; preds = %if.end30
  %40 = inttoptr i32 %add.i.i.i.i to ptr
  %call.i.i222 = call i32 @btrfs_get_32(ptr noundef %28, ptr noundef %40, i32 noundef 17) #23
  %add = add i32 %call.i.i222, 101
  %41 = inttoptr i32 %add to ptr
  %call.i = call i64 @btrfs_get_64(ptr noundef %28, ptr noundef %41, i32 noundef 24) #23
  br i1 %counting.0.off0, label %if.end37.if.end45_crit_edge, label %if.then41

if.end37.if.end45_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end45

if.then41:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #25
  call void @_raw_spin_lock(ptr noundef %balance_lock) #23
  %42 = ptrtoint ptr %considered to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %considered, align 8
  %inc = add i64 %43, 1
  store i64 %inc, ptr %considered, align 8
  call void @_raw_spin_unlock(ptr noundef %balance_lock) #23
  br label %if.end45

if.end45:                                         ; preds = %if.then41, %if.end37.if.end45_crit_edge
  %fs_info1.i = getelementptr inbounds %struct.extent_buffer, ptr %28, i32 0, i32 3
  %44 = ptrtoint ptr %fs_info1.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %fs_info1.i, align 8
  %balance_ctl.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %45, i32 0, i32 117
  %46 = ptrtoint ptr %balance_ctl.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %balance_ctl.i, align 8
  %call.i.i223 = call i64 @btrfs_get_64(ptr noundef %28, ptr noundef %41, i32 noundef 24) #23
  %flags.i = getelementptr inbounds %struct.btrfs_balance_control, ptr %47, i32 0, i32 3
  %48 = ptrtoint ptr %flags.i to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %flags.i, align 8
  %and2.i = and i64 %call.i.i223, 7
  %and3.i = and i64 %and2.i, %49
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and3.i)
  %tobool.not.i = icmp eq i64 %and3.i, 0
  br i1 %tobool.not.i, label %if.end45.if.then49_crit_edge, label %if.end.i

if.end45.if.then49_crit_edge:                     ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then49

if.end.i:                                         ; preds = %if.end45
  %and4.i = and i64 %call.i.i223, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and4.i)
  %tobool5.not.i = icmp eq i64 %and4.i, 0
  br i1 %tobool5.not.i, label %if.else.i, label %if.end.i.if.end16.i_crit_edge

if.end.i.if.end16.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end16.i

if.else.i:                                        ; preds = %if.end.i
  %and7.i = and i64 %call.i.i223, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and7.i)
  %tobool8.not.i = icmp eq i64 %and7.i, 0
  br i1 %tobool8.not.i, label %if.else10.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #25
  %sys.i = getelementptr inbounds %struct.btrfs_balance_control, ptr %47, i32 0, i32 2
  br label %if.end16.i

if.else10.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #25
  %and11.i = and i64 %call.i.i223, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and11.i)
  %tobool12.not.i = icmp eq i64 %and11.i, 0
  %meta.i = getelementptr inbounds %struct.btrfs_balance_control, ptr %47, i32 0, i32 1
  %spec.select.i = select i1 %tobool12.not.i, ptr null, ptr %meta.i
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.else10.i, %if.then9.i, %if.end.i.if.end16.i_crit_edge
  %bargs.0.i = phi ptr [ %sys.i, %if.then9.i ], [ %47, %if.end.i.if.end16.i_crit_edge ], [ %spec.select.i, %if.else10.i ]
  %flags17.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs.0.i, i32 0, i32 8
  %50 = ptrtoint ptr %flags17.i to i32
  call void @__asan_loadN_noabort(i32 %50, i32 8)
  %51 = load i64, ptr %flags17.i, align 1
  %and18.i = and i64 %51, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and18.i)
  %tobool19.not.i = icmp eq i64 %and18.i, 0
  br i1 %tobool19.not.i, label %if.end16.i.if.end23.i_crit_edge, label %land.lhs.true.i

if.end16.i.if.end23.i_crit_edge:                  ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end23.i

land.lhs.true.i:                                  ; preds = %if.end16.i
  %and.i.i.i = and i64 %call.i.i223, 2040
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i.i)
  %cmp.i.i.i = icmp eq i64 %and.i.i.i, 0
  %or.i.i.i = or i64 %call.i.i223, 281474976710656
  %spec.select.i.i.i = select i1 %cmp.i.i.i, i64 %or.i.i.i, i64 %call.i.i223
  %and.i.i = and i64 %spec.select.i.i.i, 281474976712696
  %52 = ptrtoint ptr %bargs.0.i to i32
  call void @__asan_loadN_noabort(i32 %52, i32 8)
  %53 = load i64, ptr %bargs.0.i, align 1
  %and1.i.i = and i64 %and.i.i, %53
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i.i)
  %tobool.not.i.not.i = icmp eq i64 %and1.i.i, 0
  br i1 %tobool.not.i.not.i, label %land.lhs.true.i.if.then49_crit_edge, label %land.lhs.true.i.if.end23.i_crit_edge

land.lhs.true.i.if.end23.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end23.i

land.lhs.true.i.if.then49_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then49

if.end23.i:                                       ; preds = %land.lhs.true.i.if.end23.i_crit_edge, %if.end16.i.if.end23.i_crit_edge
  %and25.i = and i64 %51, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and25.i)
  %tobool26.not.i = icmp eq i64 %and25.i, 0
  br i1 %tobool26.not.i, label %if.end23.i.if.else31.i_crit_edge, label %land.lhs.true27.i

if.end23.i.if.else31.i_crit_edge:                 ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else31.i

land.lhs.true27.i:                                ; preds = %if.end23.i
  %call.i147.i = call ptr @btrfs_lookup_block_group(ptr noundef %45, i64 noundef %34) #23
  %used.i.i = getelementptr inbounds %struct.btrfs_block_group, ptr %call.i147.i, i32 0, i32 7
  %54 = ptrtoint ptr %used.i.i to i32
  call void @__asan_load8_noabort(i32 %54)
  %55 = load i64, ptr %used.i.i, align 8
  %56 = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs.0.i, i32 0, i32 1
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_loadN_noabort(i32 %57, i32 4)
  %58 = load i32, ptr %56, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %cmp.i.i = icmp eq i32 %58, 0
  br i1 %cmp.i.i, label %land.lhs.true27.i.chunk_usage_filter.exit.i_crit_edge, label %if.else.i.i

land.lhs.true27.i.chunk_usage_filter.exit.i_crit_edge: ; preds = %land.lhs.true27.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %chunk_usage_filter.exit.i

if.else.i.i:                                      ; preds = %land.lhs.true27.i
  %59 = ptrtoint ptr %56 to i32
  call void @__asan_loadN_noabort(i32 %59, i32 8)
  %60 = load i64, ptr %56, align 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 100, i64 %60)
  %cmp1.i.i = icmp ugt i64 %60, 100
  %length.i.i = getelementptr inbounds %struct.btrfs_block_group, ptr %call.i147.i, i32 0, i32 4
  %61 = ptrtoint ptr %length.i.i to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %length.i.i, align 8
  %conv.i.i = trunc i64 %60 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %conv.i.i)
  %cmp.i.i148.i = icmp eq i32 %conv.i.i, 100
  %or.cond.i.i = or i1 %cmp1.i.i, %cmp.i.i148.i
  br i1 %or.cond.i.i, label %if.else.i.i.chunk_usage_filter.exit.i_crit_edge, label %if.end.i.i.i

if.else.i.i.chunk_usage_filter.exit.i_crit_edge:  ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %chunk_usage_filter.exit.i

if.end.i.i.i:                                     ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %mul.i.i.i224 = mul i64 %62, %60
  %63 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -6640827866535438582, i64 %mul.i.i.i224, i32 0) #35, !srcloc !489
  %asmresult.i.i.i.i.i.i = extractvalue { i64, i32 } %63, 0
  %asmresult4.i.i.i.i.i.i = extractvalue { i64, i32 } %63, 1
  %64 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -6640827866535438582, i64 %mul.i.i.i224, i64 %asmresult.i.i.i.i.i.i, i32 %asmresult4.i.i.i.i.i.i) #35, !srcloc !490
  %asmresult10.i.i.i.i.i.i = extractvalue { i64, i32 } %64, 0
  %div158.i.i4.i.i.i = lshr i64 %asmresult10.i.i.i.i.i.i, 6
  br label %chunk_usage_filter.exit.i

chunk_usage_filter.exit.i:                        ; preds = %if.end.i.i.i, %if.else.i.i.chunk_usage_filter.exit.i_crit_edge, %land.lhs.true27.i.chunk_usage_filter.exit.i_crit_edge
  %user_thresh.0.i.i = phi i64 [ 1, %land.lhs.true27.i.chunk_usage_filter.exit.i_crit_edge ], [ %div158.i.i4.i.i.i, %if.end.i.i.i ], [ %62, %if.else.i.i.chunk_usage_filter.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp8(i64 %55, i64 %user_thresh.0.i.i)
  %cmp7.i.not.i = icmp ult i64 %55, %user_thresh.0.i.i
  call void @btrfs_put_block_group(ptr noundef %call.i147.i) #23
  br i1 %cmp7.i.not.i, label %chunk_usage_filter.exit.i.if.else31.i_crit_edge, label %chunk_usage_filter.exit.i.if.then49_crit_edge

chunk_usage_filter.exit.i.if.then49_crit_edge:    ; preds = %chunk_usage_filter.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then49

chunk_usage_filter.exit.i.if.else31.i_crit_edge:  ; preds = %chunk_usage_filter.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else31.i

if.else31.i:                                      ; preds = %chunk_usage_filter.exit.i.if.else31.i_crit_edge, %if.end23.i.if.else31.i_crit_edge
  %65 = ptrtoint ptr %flags17.i to i32
  call void @__asan_loadN_noabort(i32 %65, i32 8)
  %66 = load i64, ptr %flags17.i, align 1
  %and33.i = and i64 %66, 1024
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and33.i)
  %tobool34.not.i = icmp eq i64 %and33.i, 0
  br i1 %tobool34.not.i, label %if.else31.i.if.end40.i_crit_edge, label %land.lhs.true35.i

if.else31.i.if.end40.i_crit_edge:                 ; preds = %if.else31.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end40.i

land.lhs.true35.i:                                ; preds = %if.else31.i
  %call.i149.i = call ptr @btrfs_lookup_block_group(ptr noundef %45, i64 noundef %34) #23
  %used.i150.i = getelementptr inbounds %struct.btrfs_block_group, ptr %call.i149.i, i32 0, i32 7
  %67 = ptrtoint ptr %used.i150.i to i32
  call void @__asan_load8_noabort(i32 %67)
  %68 = load i64, ptr %used.i150.i, align 8
  %69 = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs.0.i, i32 0, i32 1
  %70 = ptrtoint ptr %69 to i32
  call void @__asan_loadN_noabort(i32 %70, i32 4)
  %71 = load i32, ptr %69, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %cmp.i151.i = icmp eq i32 %71, 0
  br i1 %cmp.i151.i, label %land.lhs.true35.i.if.end.i.i_crit_edge, label %if.else.i154.i

land.lhs.true35.i.if.end.i.i_crit_edge:           ; preds = %land.lhs.true35.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i.i

if.else.i154.i:                                   ; preds = %land.lhs.true35.i
  %length.i152.i = getelementptr inbounds %struct.btrfs_block_group, ptr %call.i149.i, i32 0, i32 4
  %72 = ptrtoint ptr %length.i152.i to i32
  call void @__asan_load8_noabort(i32 %72)
  %73 = load i64, ptr %length.i152.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %71)
  %cmp.i.i153.i = icmp eq i32 %71, 100
  br i1 %cmp.i.i153.i, label %if.else.i154.i.if.end.i.i_crit_edge, label %if.end.i.i160.i

if.else.i154.i.if.end.i.i_crit_edge:              ; preds = %if.else.i154.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i.i

if.end.i.i160.i:                                  ; preds = %if.else.i154.i
  call void @__sanitizer_cov_trace_pc() #25
  %conv.i.i.i = sext i32 %71 to i64
  %mul.i.i155.i = mul i64 %73, %conv.i.i.i
  %74 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -6640827866535438582, i64 %mul.i.i155.i, i32 0) #35, !srcloc !489
  %asmresult.i.i.i.i.i156.i = extractvalue { i64, i32 } %74, 0
  %asmresult4.i.i.i.i.i157.i = extractvalue { i64, i32 } %74, 1
  %75 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -6640827866535438582, i64 %mul.i.i155.i, i64 %asmresult.i.i.i.i.i156.i, i32 %asmresult4.i.i.i.i.i157.i) #35, !srcloc !490
  %asmresult10.i.i.i.i.i158.i = extractvalue { i64, i32 } %75, 0
  %div158.i.i4.i.i159.i = lshr i64 %asmresult10.i.i.i.i.i158.i, 6
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.end.i.i160.i, %if.else.i154.i.if.end.i.i_crit_edge, %land.lhs.true35.i.if.end.i.i_crit_edge
  %user_thresh_min.0.i.i = phi i64 [ 0, %land.lhs.true35.i.if.end.i.i_crit_edge ], [ %div158.i.i4.i.i159.i, %if.end.i.i160.i ], [ %73, %if.else.i154.i.if.end.i.i_crit_edge ]
  %usage_max.i.i = getelementptr inbounds %struct.anon.81, ptr %69, i32 0, i32 1
  %76 = ptrtoint ptr %usage_max.i.i to i32
  call void @__asan_loadN_noabort(i32 %76, i32 4)
  %77 = load i32, ptr %usage_max.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %77)
  %cmp3.i.i = icmp eq i32 %77, 0
  br i1 %cmp3.i.i, label %if.end.i.i.chunk_usage_range_filter.exit.i_crit_edge, label %if.else5.i.i

if.end.i.i.chunk_usage_range_filter.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %chunk_usage_range_filter.exit.i

if.else5.i.i:                                     ; preds = %if.end.i.i
  %length9.i.i = getelementptr inbounds %struct.btrfs_block_group, ptr %call.i149.i, i32 0, i32 4
  %78 = ptrtoint ptr %length9.i.i to i32
  call void @__asan_load8_noabort(i32 %78)
  %79 = load i64, ptr %length9.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 99, i32 %77)
  %80 = icmp ugt i32 %77, 99
  br i1 %80, label %if.else5.i.i.chunk_usage_range_filter.exit.i_crit_edge, label %if.end.i38.i.i

if.else5.i.i.chunk_usage_range_filter.exit.i_crit_edge: ; preds = %if.else5.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %chunk_usage_range_filter.exit.i

if.end.i38.i.i:                                   ; preds = %if.else5.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %conv.i3241.i.i = zext i32 %77 to i64
  %mul.i33.i.i = mul i64 %79, %conv.i3241.i.i
  %81 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -6640827866535438582, i64 %mul.i33.i.i, i32 0) #35, !srcloc !489
  %asmresult.i.i.i.i34.i.i = extractvalue { i64, i32 } %81, 0
  %asmresult4.i.i.i.i35.i.i = extractvalue { i64, i32 } %81, 1
  %82 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -6640827866535438582, i64 %mul.i33.i.i, i64 %asmresult.i.i.i.i34.i.i, i32 %asmresult4.i.i.i.i35.i.i) #35, !srcloc !490
  %asmresult10.i.i.i.i36.i.i = extractvalue { i64, i32 } %82, 0
  %div158.i.i4.i37.i.i = lshr i64 %asmresult10.i.i.i.i36.i.i, 6
  br label %chunk_usage_range_filter.exit.i

chunk_usage_range_filter.exit.i:                  ; preds = %if.end.i38.i.i, %if.else5.i.i.chunk_usage_range_filter.exit.i_crit_edge, %if.end.i.i.chunk_usage_range_filter.exit.i_crit_edge
  %user_thresh_max.0.i.i = phi i64 [ 1, %if.end.i.i.chunk_usage_range_filter.exit.i_crit_edge ], [ %div158.i.i4.i37.i.i, %if.end.i38.i.i ], [ %79, %if.else5.i.i.chunk_usage_range_filter.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp8(i64 %user_thresh_min.0.i.i, i64 %68)
  %cmp16.not.i.i = icmp ule i64 %user_thresh_min.0.i.i, %68
  call void @__sanitizer_cov_trace_cmp8(i64 %68, i64 %user_thresh_max.0.i.i)
  %cmp17.i.i = icmp ult i64 %68, %user_thresh_max.0.i.i
  %or.cond.i161.i = select i1 %cmp16.not.i.i, i1 %cmp17.i.i, i1 false
  call void @btrfs_put_block_group(ptr noundef %call.i149.i) #23
  br i1 %or.cond.i161.i, label %chunk_usage_range_filter.exit.i.if.end40.i_crit_edge, label %chunk_usage_range_filter.exit.i.if.then49_crit_edge

chunk_usage_range_filter.exit.i.if.then49_crit_edge: ; preds = %chunk_usage_range_filter.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then49

chunk_usage_range_filter.exit.i.if.end40.i_crit_edge: ; preds = %chunk_usage_range_filter.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end40.i

if.end40.i:                                       ; preds = %chunk_usage_range_filter.exit.i.if.end40.i_crit_edge, %if.else31.i.if.end40.i_crit_edge
  %83 = ptrtoint ptr %flags17.i to i32
  call void @__asan_loadN_noabort(i32 %83, i32 8)
  %84 = load i64, ptr %flags17.i, align 1
  %and42.i = and i64 %84, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and42.i)
  %tobool43.not.i = icmp eq i64 %and42.i, 0
  br i1 %tobool43.not.i, label %if.end40.i.if.end48.i_crit_edge, label %land.lhs.true44.i

if.end40.i.if.end48.i_crit_edge:                  ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end48.i

land.lhs.true44.i:                                ; preds = %if.end40.i
  %call.i.i.i = call zeroext i16 @btrfs_get_16(ptr noundef %28, ptr noundef %41, i32 noundef 44) #23
  %conv.i162.i = zext i16 %call.i.i.i to i32
  %add.i.i.i225 = add i32 %call.i.i222, 149
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %call.i.i.i)
  %cmp13.not.i.i = icmp eq i16 %call.i.i.i, 0
  br i1 %cmp13.not.i.i, label %land.lhs.true44.i.if.then49_crit_edge, label %for.body.lr.ph.i.i

land.lhs.true44.i.if.then49_crit_edge:            ; preds = %land.lhs.true44.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then49

for.body.lr.ph.i.i:                               ; preds = %land.lhs.true44.i
  %devid.i.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs.0.i, i32 0, i32 2
  br label %for.body.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i
  %inc.i.i = add nuw nsw i32 %i.014.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %conv.i162.i
  br i1 %exitcond.not.i.i, label %for.cond.i.i.if.then49_crit_edge, label %for.cond.i.i.for.body.i.i_crit_edge

for.cond.i.i.for.body.i.i_crit_edge:              ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body.i.i

for.cond.i.i.if.then49_crit_edge:                 ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then49

for.body.i.i:                                     ; preds = %for.cond.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.014.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.cond.i.i.for.body.i.i_crit_edge ]
  %mul.i.i163.i = shl i32 %i.014.i.i, 5
  %add1.i.i.i = add i32 %add.i.i.i225, %mul.i.i163.i
  %85 = inttoptr i32 %add1.i.i.i to ptr
  %call.i12.i.i = call i64 @btrfs_get_64(ptr noundef %28, ptr noundef %85, i32 noundef 0) #23
  %86 = ptrtoint ptr %devid.i.i to i32
  call void @__asan_loadN_noabort(i32 %86, i32 8)
  %87 = load i64, ptr %devid.i.i, align 1
  call void @__sanitizer_cov_trace_cmp8(i64 %call.i12.i.i, i64 %87)
  %cmp4.i.i = icmp eq i64 %call.i12.i.i, %87
  br i1 %cmp4.i.i, label %for.body.i.i.if.end48.i_crit_edge, label %for.cond.i.i

for.body.i.i.if.end48.i_crit_edge:                ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end48.i

if.end48.i:                                       ; preds = %for.body.i.i.if.end48.i_crit_edge, %if.end40.i.if.end48.i_crit_edge
  %88 = ptrtoint ptr %flags17.i to i32
  call void @__asan_loadN_noabort(i32 %88, i32 8)
  %89 = load i64, ptr %flags17.i, align 1
  %and50.i = and i64 %89, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and50.i)
  %tobool51.not.i = icmp eq i64 %and50.i, 0
  br i1 %tobool51.not.i, label %if.end48.i.if.end56.i_crit_edge, label %land.lhs.true52.i

if.end48.i.if.end56.i_crit_edge:                  ; preds = %if.end48.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end56.i

land.lhs.true52.i:                                ; preds = %if.end48.i
  %call.i.i164.i = call zeroext i16 @btrfs_get_16(ptr noundef %28, ptr noundef %41, i32 noundef 44) #23
  %conv.i165.i = zext i16 %call.i.i164.i to i32
  %90 = ptrtoint ptr %flags17.i to i32
  call void @__asan_loadN_noabort(i32 %90, i32 8)
  %91 = load i64, ptr %flags17.i, align 1
  %and.i166.i = and i64 %91, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i166.i)
  %tobool.not.i167.i = icmp eq i64 %and.i166.i, 0
  br i1 %tobool.not.i167.i, label %land.lhs.true52.i.if.end56.i_crit_edge, label %if.end.i168.i

land.lhs.true52.i.if.end56.i_crit_edge:           ; preds = %land.lhs.true52.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end56.i

if.end.i168.i:                                    ; preds = %land.lhs.true52.i
  %call.i42.i.i = call i64 @btrfs_get_64(ptr noundef %28, ptr noundef %41, i32 noundef 24) #23
  %and.i.i.i.i = and i64 %call.i42.i.i, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i64 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.else.i.i.i.i, label %if.end.i168.i.calc_data_stripes.exit.i.i_crit_edge

if.end.i168.i.calc_data_stripes.exit.i.i_crit_edge: ; preds = %if.end.i168.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i.i

if.else.i.i.i.i:                                  ; preds = %if.end.i168.i
  %and1.i.i.i.i = and i64 %call.i42.i.i, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i.i.i.i)
  %tobool2.not.i.i.i.i = icmp eq i64 %and1.i.i.i.i, 0
  br i1 %tobool2.not.i.i.i.i, label %if.else4.i.i.i.i, label %if.else.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge

if.else.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i.i

if.else4.i.i.i.i:                                 ; preds = %if.else.i.i.i.i
  %and5.i.i.i.i = and i64 %call.i42.i.i, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5.i.i.i.i)
  %tobool6.not.i.i.i.i = icmp eq i64 %and5.i.i.i.i, 0
  br i1 %tobool6.not.i.i.i.i, label %if.else8.i.i.i.i, label %if.else4.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge

if.else4.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge: ; preds = %if.else4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i.i

if.else8.i.i.i.i:                                 ; preds = %if.else4.i.i.i.i
  %and9.i.i.i.i = and i64 %call.i42.i.i, 1024
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and9.i.i.i.i)
  %tobool10.not.i.i.i.i = icmp eq i64 %and9.i.i.i.i, 0
  br i1 %tobool10.not.i.i.i.i, label %if.else12.i.i.i.i, label %if.else8.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge

if.else8.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge: ; preds = %if.else8.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i.i

if.else12.i.i.i.i:                                ; preds = %if.else8.i.i.i.i
  %and13.i.i.i.i = and i64 %call.i42.i.i, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and13.i.i.i.i)
  %tobool14.not.i.i.i.i = icmp eq i64 %and13.i.i.i.i, 0
  br i1 %tobool14.not.i.i.i.i, label %if.else16.i.i.i.i, label %if.else12.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge

if.else12.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge: ; preds = %if.else12.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i.i

if.else16.i.i.i.i:                                ; preds = %if.else12.i.i.i.i
  %and17.i.i.i.i = and i64 %call.i42.i.i, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and17.i.i.i.i)
  %tobool18.not.i.i.i.i = icmp eq i64 %and17.i.i.i.i, 0
  br i1 %tobool18.not.i.i.i.i, label %if.else20.i.i.i.i, label %if.else16.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge

if.else16.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge: ; preds = %if.else16.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i.i

if.else20.i.i.i.i:                                ; preds = %if.else16.i.i.i.i
  %and21.i.i.i.i = and i64 %call.i42.i.i, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and21.i.i.i.i)
  %tobool22.not.i.i.i.i = icmp eq i64 %and21.i.i.i.i, 0
  br i1 %tobool22.not.i.i.i.i, label %if.else24.i.i.i.i, label %if.else20.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge

if.else20.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge: ; preds = %if.else20.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i.i

if.else24.i.i.i.i:                                ; preds = %if.else20.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %and25.i.i.i.i = and i64 %call.i42.i.i, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and25.i.i.i.i)
  %tobool26.not.i.i.i.i = icmp eq i64 %and25.i.i.i.i, 0
  %..i.i.i.i = select i1 %tobool26.not.i.i.i.i, i32 4, i32 6
  br label %calc_data_stripes.exit.i.i

calc_data_stripes.exit.i.i:                       ; preds = %if.else24.i.i.i.i, %if.else20.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge, %if.else16.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge, %if.else12.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge, %if.else8.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge, %if.else4.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge, %if.else.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge, %if.end.i168.i.calc_data_stripes.exit.i.i_crit_edge
  %retval.0.i.i.i.i = phi i32 [ 0, %if.end.i168.i.calc_data_stripes.exit.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge ], [ 7, %if.else4.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge ], [ 8, %if.else8.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge ], [ 2, %if.else12.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge ], [ 3, %if.else16.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge ], [ 5, %if.else20.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge ], [ %..i.i.i.i, %if.else24.i.i.i.i ]
  %ncopies1.i.i.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i.i.i, i32 6
  %92 = ptrtoint ptr %ncopies1.i.i.i to i32
  call void @__asan_load1_noabort(i32 %92)
  %93 = load i8, ptr %ncopies1.i.i.i, align 2
  %conv.i.i169.i = zext i8 %93 to i32
  %nparity3.i.i.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i.i.i, i32 7
  %94 = ptrtoint ptr %nparity3.i.i.i to i32
  call void @__asan_load1_noabort(i32 %94)
  %95 = load i8, ptr %nparity3.i.i.i, align 1
  %conv4.i.i.i = zext i8 %95 to i32
  %sub.i.i.i = sub nsw i32 %conv.i165.i, %conv4.i.i.i
  %div.i.i.i = sdiv i32 %sub.i.i.i, %conv.i.i169.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %call.i.i164.i)
  %cmp47.not.i.i = icmp eq i16 %call.i.i164.i, 0
  br i1 %cmp47.not.i.i, label %calc_data_stripes.exit.i.i.if.then49_crit_edge, label %for.body.lr.ph.i172.i

calc_data_stripes.exit.i.i.if.then49_crit_edge:   ; preds = %calc_data_stripes.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then49

for.body.lr.ph.i172.i:                            ; preds = %calc_data_stripes.exit.i.i
  %add.i.i170.i = add i32 %call.i.i222, 149
  %devid.i171.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs.0.i, i32 0, i32 2
  %pend.i.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs.0.i, i32 0, i32 4
  %pstart.i.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs.0.i, i32 0, i32 3
  br label %for.body.i175.i

for.body.i175.i:                                  ; preds = %for.inc.i.i.for.body.i175.i_crit_edge, %for.body.lr.ph.i172.i
  %i.048.i.i = phi i32 [ 0, %for.body.lr.ph.i172.i ], [ %inc.i176.i, %for.inc.i.i.for.body.i175.i_crit_edge ]
  %mul.i.i173.i = shl i32 %i.048.i.i, 5
  %add1.i.i174.i = add i32 %add.i.i170.i, %mul.i.i173.i
  %96 = inttoptr i32 %add1.i.i174.i to ptr
  %call.i43.i.i = call i64 @btrfs_get_64(ptr noundef %28, ptr noundef %96, i32 noundef 0) #23
  %97 = ptrtoint ptr %devid.i171.i to i32
  call void @__asan_loadN_noabort(i32 %97, i32 8)
  %98 = load i64, ptr %devid.i171.i, align 1
  call void @__sanitizer_cov_trace_cmp8(i64 %call.i43.i.i, i64 %98)
  %cmp7.not.i.i = icmp eq i64 %call.i43.i.i, %98
  br i1 %cmp7.not.i.i, label %if.end10.i.i, label %for.body.i175.i.for.inc.i.i_crit_edge

for.body.i175.i.for.inc.i.i_crit_edge:            ; preds = %for.body.i175.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i.i

if.end10.i.i:                                     ; preds = %for.body.i175.i
  %call.i44.i.i = call i64 @btrfs_get_64(ptr noundef %28, ptr noundef %96, i32 noundef 8) #23
  %call.i45.i.i = call i64 @btrfs_get_64(ptr noundef %28, ptr noundef %41, i32 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %call.i45.i.i)
  %cmp164.i.i.i.i = icmp ult i64 %call.i45.i.i, 4294967296
  br i1 %cmp164.i.i.i.i, label %if.then168.i.i.i.i, label %if.else174.i.i.i.i, !prof !423

if.then168.i.i.i.i:                               ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i.i.i.i = trunc i64 %call.i45.i.i to i32
  %div172.i.i.i.i = udiv i32 %conv169.i.i.i.i, %div.i.i.i
  %conv173.i.i.i.i = zext i32 %div172.i.i.i.i to i64
  br label %div_u64.exit.i.i

if.else174.i.i.i.i:                               ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %99 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %div.i.i.i, i64 %call.i45.i.i) #35, !srcloc !491
  %asmresult1.i.i.i.i.i = extractvalue { i64, i64 } %99, 1
  br label %div_u64.exit.i.i

div_u64.exit.i.i:                                 ; preds = %if.else174.i.i.i.i, %if.then168.i.i.i.i
  %dividend.addr.0.i.i.i.i = phi i64 [ %conv173.i.i.i.i, %if.then168.i.i.i.i ], [ %asmresult1.i.i.i.i.i, %if.else174.i.i.i.i ]
  %100 = ptrtoint ptr %pend.i.i to i32
  call void @__asan_loadN_noabort(i32 %100, i32 8)
  %101 = load i64, ptr %pend.i.i, align 1
  call void @__sanitizer_cov_trace_cmp8(i64 %call.i44.i.i, i64 %101)
  %cmp14.i.i = icmp ult i64 %call.i44.i.i, %101
  br i1 %cmp14.i.i, label %land.lhs.true.i.i, label %div_u64.exit.i.i.for.inc.i.i_crit_edge

div_u64.exit.i.i.for.inc.i.i_crit_edge:           ; preds = %div_u64.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i.i

land.lhs.true.i.i:                                ; preds = %div_u64.exit.i.i
  %add.i.i = add i64 %dividend.addr.0.i.i.i.i, %call.i44.i.i
  %102 = ptrtoint ptr %pstart.i.i to i32
  call void @__asan_loadN_noabort(i32 %102, i32 8)
  %103 = load i64, ptr %pstart.i.i, align 1
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i.i, i64 %103)
  %cmp16.i.i = icmp ugt i64 %add.i.i, %103
  br i1 %cmp16.i.i, label %land.lhs.true.i.i.if.end56.i_crit_edge, label %land.lhs.true.i.i.for.inc.i.i_crit_edge

land.lhs.true.i.i.for.inc.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i.i

land.lhs.true.i.i.if.end56.i_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end56.i

for.inc.i.i:                                      ; preds = %land.lhs.true.i.i.for.inc.i.i_crit_edge, %div_u64.exit.i.i.for.inc.i.i_crit_edge, %for.body.i175.i.for.inc.i.i_crit_edge
  %inc.i176.i = add nuw nsw i32 %i.048.i.i, 1
  %exitcond.not.i177.i = icmp eq i32 %inc.i176.i, %conv.i165.i
  br i1 %exitcond.not.i177.i, label %for.inc.i.i.if.then49_crit_edge, label %for.inc.i.i.for.body.i175.i_crit_edge

for.inc.i.i.for.body.i175.i_crit_edge:            ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body.i175.i

for.inc.i.i.if.then49_crit_edge:                  ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then49

if.end56.i:                                       ; preds = %land.lhs.true.i.i.if.end56.i_crit_edge, %land.lhs.true52.i.if.end56.i_crit_edge, %if.end48.i.if.end56.i_crit_edge
  %104 = ptrtoint ptr %flags17.i to i32
  call void @__asan_loadN_noabort(i32 %104, i32 8)
  %105 = load i64, ptr %flags17.i, align 1
  %and58.i = and i64 %105, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and58.i)
  %tobool59.not.i = icmp eq i64 %and58.i, 0
  br i1 %tobool59.not.i, label %if.end56.i.if.end64.i_crit_edge, label %land.lhs.true60.i

if.end56.i.if.end64.i_crit_edge:                  ; preds = %if.end56.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end64.i

land.lhs.true60.i:                                ; preds = %if.end56.i
  %vend.i.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs.0.i, i32 0, i32 6
  %106 = ptrtoint ptr %vend.i.i to i32
  call void @__asan_loadN_noabort(i32 %106, i32 8)
  %107 = load i64, ptr %vend.i.i, align 1
  call void @__sanitizer_cov_trace_cmp8(i64 %107, i64 %34)
  %cmp.i179.i = icmp ugt i64 %107, %34
  br i1 %cmp.i179.i, label %land.lhs.true.i183.i, label %land.lhs.true60.i.if.then49_crit_edge

land.lhs.true60.i.if.then49_crit_edge:            ; preds = %land.lhs.true60.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then49

land.lhs.true.i183.i:                             ; preds = %land.lhs.true60.i
  %call.i.i180.i = call i64 @btrfs_get_64(ptr noundef %28, ptr noundef %41, i32 noundef 0) #23
  %add.i181.i = add i64 %call.i.i180.i, %34
  %vstart.i.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs.0.i, i32 0, i32 5
  %108 = ptrtoint ptr %vstart.i.i to i32
  call void @__asan_loadN_noabort(i32 %108, i32 8)
  %109 = load i64, ptr %vstart.i.i, align 1
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i181.i, i64 %109)
  %cmp1.i182.i = icmp ugt i64 %add.i181.i, %109
  br i1 %cmp1.i182.i, label %land.lhs.true.i183.i.if.end64.i_crit_edge, label %land.lhs.true.i183.i.if.then49_crit_edge

land.lhs.true.i183.i.if.then49_crit_edge:         ; preds = %land.lhs.true.i183.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then49

land.lhs.true.i183.i.if.end64.i_crit_edge:        ; preds = %land.lhs.true.i183.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end64.i

if.end64.i:                                       ; preds = %land.lhs.true.i183.i.if.end64.i_crit_edge, %if.end56.i.if.end64.i_crit_edge
  %110 = ptrtoint ptr %flags17.i to i32
  call void @__asan_loadN_noabort(i32 %110, i32 8)
  %111 = load i64, ptr %flags17.i, align 1
  %and66.i = and i64 %111, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and66.i)
  %tobool67.not.i = icmp eq i64 %and66.i, 0
  br i1 %tobool67.not.i, label %if.end64.i.if.end72.i_crit_edge, label %land.lhs.true68.i

if.end64.i.if.end72.i_crit_edge:                  ; preds = %if.end64.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end72.i

land.lhs.true68.i:                                ; preds = %if.end64.i
  %call.i.i186.i = call zeroext i16 @btrfs_get_16(ptr noundef %28, ptr noundef %41, i32 noundef 44) #23
  %conv.i187.i = zext i16 %call.i.i186.i to i32
  %stripes_min.i.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs.0.i, i32 0, i32 10
  %112 = ptrtoint ptr %stripes_min.i.i to i32
  call void @__asan_loadN_noabort(i32 %112, i32 4)
  %113 = load i32, ptr %stripes_min.i.i, align 1
  call void @__sanitizer_cov_trace_cmp4(i32 %113, i32 %conv.i187.i)
  %cmp.not.i.i = icmp ugt i32 %113, %conv.i187.i
  br i1 %cmp.not.i.i, label %land.lhs.true68.i.if.then49_crit_edge, label %land.lhs.true.i188.i

land.lhs.true68.i.if.then49_crit_edge:            ; preds = %land.lhs.true68.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then49

land.lhs.true.i188.i:                             ; preds = %land.lhs.true68.i
  %stripes_max.i.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs.0.i, i32 0, i32 11
  %114 = ptrtoint ptr %stripes_max.i.i to i32
  call void @__asan_loadN_noabort(i32 %114, i32 4)
  %115 = load i32, ptr %stripes_max.i.i, align 1
  call void @__sanitizer_cov_trace_cmp4(i32 %115, i32 %conv.i187.i)
  %cmp2.not.i.i = icmp ult i32 %115, %conv.i187.i
  br i1 %cmp2.not.i.i, label %land.lhs.true.i188.i.if.then49_crit_edge, label %land.lhs.true.i188.i.if.end72.i_crit_edge

land.lhs.true.i188.i.if.end72.i_crit_edge:        ; preds = %land.lhs.true.i188.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end72.i

land.lhs.true.i188.i.if.then49_crit_edge:         ; preds = %land.lhs.true.i188.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then49

if.end72.i:                                       ; preds = %land.lhs.true.i188.i.if.end72.i_crit_edge, %if.end64.i.if.end72.i_crit_edge
  %116 = ptrtoint ptr %flags17.i to i32
  call void @__asan_loadN_noabort(i32 %116, i32 8)
  %117 = load i64, ptr %flags17.i, align 1
  %118 = and i64 %117, 768
  call void @__sanitizer_cov_trace_const_cmp8(i64 768, i64 %118)
  %.not.i = icmp eq i64 %118, 768
  br i1 %.not.i, label %chunk_soft_convert_filter.exit.i, label %if.end72.i.if.end80.i_crit_edge

if.end72.i.if.end80.i_crit_edge:                  ; preds = %if.end72.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end80.i

chunk_soft_convert_filter.exit.i:                 ; preds = %if.end72.i
  %and.i.i194.i = and i64 %call.i.i223, 2040
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i194.i)
  %cmp.i.i195.i = icmp eq i64 %and.i.i194.i, 0
  %or.i.i196.i = or i64 %call.i.i223, 281474976710656
  %spec.select.i.i197.i = select i1 %cmp.i.i195.i, i64 %or.i.i196.i, i64 %call.i.i223
  %and1.i198.i = and i64 %spec.select.i.i197.i, 281474976712696
  %target.i.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs.0.i, i32 0, i32 7
  %119 = ptrtoint ptr %target.i.i to i32
  call void @__asan_loadN_noabort(i32 %119, i32 8)
  %120 = load i64, ptr %target.i.i, align 1
  call void @__sanitizer_cov_trace_cmp8(i64 %120, i64 %and1.i198.i)
  %cmp.i199.not.i = icmp eq i64 %120, %and1.i198.i
  br i1 %cmp.i199.not.i, label %chunk_soft_convert_filter.exit.i.if.then49_crit_edge, label %chunk_soft_convert_filter.exit.i.if.end80.i_crit_edge

chunk_soft_convert_filter.exit.i.if.end80.i_crit_edge: ; preds = %chunk_soft_convert_filter.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end80.i

chunk_soft_convert_filter.exit.i.if.then49_crit_edge: ; preds = %chunk_soft_convert_filter.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then49

if.end80.i:                                       ; preds = %chunk_soft_convert_filter.exit.i.if.end80.i_crit_edge, %if.end72.i.if.end80.i_crit_edge
  %and82.i = and i64 %117, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and82.i)
  %tobool83.not.i = icmp eq i64 %and82.i, 0
  br i1 %tobool83.not.i, label %if.else88.i, label %if.then84.i

if.then84.i:                                      ; preds = %if.end80.i
  %121 = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs.0.i, i32 0, i32 9
  %122 = ptrtoint ptr %121 to i32
  call void @__asan_loadN_noabort(i32 %122, i32 8)
  %123 = load i64, ptr %121, align 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %123)
  %cmp.i = icmp eq i64 %123, 0
  br i1 %cmp.i, label %if.then84.i.if.then49_crit_edge, label %if.else86.i

if.then84.i.if.then49_crit_edge:                  ; preds = %if.then84.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then49

if.else86.i:                                      ; preds = %if.then84.i
  call void @__sanitizer_cov_trace_pc() #25
  %dec.i = add i64 %123, -1
  %124 = ptrtoint ptr %121 to i32
  call void @__asan_storeN_noabort(i32 %124, i32 8)
  store i64 %dec.i, ptr %121, align 1
  br label %if.end51

if.else88.i:                                      ; preds = %if.end80.i
  %and90.i = and i64 %117, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and90.i)
  %tobool91.not.i = icmp eq i64 %and90.i, 0
  br i1 %tobool91.not.i, label %if.else88.i.if.end51_crit_edge, label %if.then92.i

if.else88.i.if.end51_crit_edge:                   ; preds = %if.else88.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end51

if.then92.i:                                      ; preds = %if.else88.i
  %125 = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs.0.i, i32 0, i32 9
  %limit_max.i = getelementptr inbounds %struct.anon.83, ptr %125, i32 0, i32 1
  %126 = ptrtoint ptr %limit_max.i to i32
  call void @__asan_loadN_noabort(i32 %126, i32 4)
  %127 = load i32, ptr %limit_max.i, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %127)
  %cmp93.i = icmp eq i32 %127, 0
  br i1 %cmp93.i, label %if.then92.i.if.then49_crit_edge, label %if.else95.i

if.then92.i.if.then49_crit_edge:                  ; preds = %if.then92.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then49

if.else95.i:                                      ; preds = %if.then92.i
  call void @__sanitizer_cov_trace_pc() #25
  %dec97.i = add i32 %127, -1
  %128 = ptrtoint ptr %limit_max.i to i32
  call void @__asan_storeN_noabort(i32 %128, i32 4)
  store i32 %dec97.i, ptr %limit_max.i, align 1
  br label %if.end51

if.then49:                                        ; preds = %if.then92.i.if.then49_crit_edge, %if.then84.i.if.then49_crit_edge, %chunk_soft_convert_filter.exit.i.if.then49_crit_edge, %land.lhs.true.i188.i.if.then49_crit_edge, %land.lhs.true68.i.if.then49_crit_edge, %land.lhs.true.i183.i.if.then49_crit_edge, %land.lhs.true60.i.if.then49_crit_edge, %for.inc.i.i.if.then49_crit_edge, %calc_data_stripes.exit.i.i.if.then49_crit_edge, %for.cond.i.i.if.then49_crit_edge, %land.lhs.true44.i.if.then49_crit_edge, %chunk_usage_range_filter.exit.i.if.then49_crit_edge, %chunk_usage_filter.exit.i.if.then49_crit_edge, %land.lhs.true.i.if.then49_crit_edge, %if.end45.if.then49_crit_edge
  call void @btrfs_release_path(ptr noundef nonnull %call) #23
  call void @mutex_unlock(ptr noundef %reclaim_bgs_lock) #23
  br label %loop

if.end51:                                         ; preds = %if.else95.i, %if.else88.i.if.end51_crit_edge, %if.else86.i
  call void @btrfs_release_path(ptr noundef nonnull %call) #23
  br i1 %counting.0.off0, label %if.then53, label %if.end74

if.then53:                                        ; preds = %if.end51
  call void @mutex_unlock(ptr noundef %reclaim_bgs_lock) #23
  call void @_raw_spin_lock(ptr noundef %balance_lock) #23
  %129 = ptrtoint ptr %stat to i32
  call void @__asan_load8_noabort(i32 %129)
  %130 = load i64, ptr %stat, align 8
  %inc57 = add i64 %130, 1
  store i64 %inc57, ptr %stat, align 8
  call void @_raw_spin_unlock(ptr noundef %balance_lock) #23
  %and = and i64 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool59.not = icmp eq i64 %and, 0
  br i1 %tobool59.not, label %if.else, label %if.then60

if.then60:                                        ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #25
  %inc61 = add i32 %count_data.1, 1
  br label %loop

if.else:                                          ; preds = %if.then53
  %and62 = and i64 %call.i, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and62)
  %tobool63.not = icmp eq i64 %and62, 0
  br i1 %tobool63.not, label %if.else66, label %if.then64

if.then64:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  %inc65 = add i32 %count_sys.1, 1
  br label %loop

if.else66:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  %131 = trunc i64 %call.i to i32
  %132 = lshr i32 %131, 2
  %133 = and i32 %132, 1
  %spec.select = add i32 %133, %count_meta.1
  br label %loop

if.end74:                                         ; preds = %if.end51
  %and75 = and i64 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and75)
  %tobool76.not = icmp eq i64 %and75, 0
  br i1 %tobool76.not, label %if.end74.lor.lhs.false80_crit_edge, label %land.lhs.true77

if.end74.lor.lhs.false80_crit_edge:               ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false80

land.lhs.true77:                                  ; preds = %if.end74
  %134 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %6, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %count_data.1, i32 %135)
  %cmp79 = icmp ult i32 %count_data.1, %135
  br i1 %cmp79, label %land.lhs.true77.if.then94_crit_edge, label %land.lhs.true77.lor.lhs.false80_crit_edge

land.lhs.true77.lor.lhs.false80_crit_edge:        ; preds = %land.lhs.true77
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false80

land.lhs.true77.if.then94_crit_edge:              ; preds = %land.lhs.true77
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then94

lor.lhs.false80:                                  ; preds = %land.lhs.true77.lor.lhs.false80_crit_edge, %if.end74.lor.lhs.false80_crit_edge
  %and81 = and i64 %call.i, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and81)
  %tobool82.not = icmp eq i64 %and81, 0
  br i1 %tobool82.not, label %lor.lhs.false80.lor.lhs.false87_crit_edge, label %land.lhs.true83

lor.lhs.false80.lor.lhs.false87_crit_edge:        ; preds = %lor.lhs.false80
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false87

land.lhs.true83:                                  ; preds = %lor.lhs.false80
  %136 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %9, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %count_meta.1, i32 %137)
  %cmp86 = icmp ult i32 %count_meta.1, %137
  br i1 %cmp86, label %land.lhs.true83.if.then94_crit_edge, label %land.lhs.true83.lor.lhs.false87_crit_edge

land.lhs.true83.lor.lhs.false87_crit_edge:        ; preds = %land.lhs.true83
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.lhs.false87

land.lhs.true83.if.then94_crit_edge:              ; preds = %land.lhs.true83
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then94

lor.lhs.false87:                                  ; preds = %land.lhs.true83.lor.lhs.false87_crit_edge, %lor.lhs.false80.lor.lhs.false87_crit_edge
  %and88 = and i64 %call.i, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and88)
  %tobool89.not = icmp eq i64 %and88, 0
  br i1 %tobool89.not, label %lor.lhs.false87.if.end96_crit_edge, label %land.lhs.true90

lor.lhs.false87.if.end96_crit_edge:               ; preds = %lor.lhs.false87
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end96

land.lhs.true90:                                  ; preds = %lor.lhs.false87
  %138 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %12, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %count_sys.1, i32 %139)
  %cmp93 = icmp ult i32 %count_sys.1, %139
  br i1 %cmp93, label %land.lhs.true90.if.then94_crit_edge, label %land.lhs.true90.if.end96_crit_edge

land.lhs.true90.if.end96_crit_edge:               ; preds = %land.lhs.true90
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end96

land.lhs.true90.if.then94_crit_edge:              ; preds = %land.lhs.true90
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then94

if.then94:                                        ; preds = %land.lhs.true90.if.then94_crit_edge, %land.lhs.true83.if.then94_crit_edge, %land.lhs.true77.if.then94_crit_edge
  call void @mutex_unlock(ptr noundef %reclaim_bgs_lock) #23
  br label %loop

if.end96:                                         ; preds = %land.lhs.true90.if.end96_crit_edge, %lor.lhs.false87.if.end96_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %chunk_reserved.1)
  %tobool97.not = icmp eq i32 %chunk_reserved.1, 0
  br i1 %tobool97.not, label %if.then98, label %if.end96.if.end109_crit_edge

if.end96.if.end109_crit_edge:                     ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end109

if.then98:                                        ; preds = %if.end96
  %call100 = call fastcc i32 @btrfs_may_alloc_data_chunk(ptr noundef %fs_info, i64 noundef %34)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call100)
  %cmp101 = icmp slt i32 %call100, 0
  br i1 %cmp101, label %if.then98.error.sink.split_crit_edge, label %if.else104

if.then98.error.sink.split_crit_edge:             ; preds = %if.then98
  call void @__sanitizer_cov_trace_pc() #25
  br label %error.sink.split

if.else104:                                       ; preds = %if.then98
  call void @__sanitizer_cov_trace_pc() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call100)
  %cmp105 = icmp eq i32 %call100, 1
  %spec.select219 = zext i1 %cmp105 to i32
  br label %if.end109

if.end109:                                        ; preds = %if.else104, %if.end96.if.end109_crit_edge
  %chunk_reserved.2 = phi i32 [ 1, %if.end96.if.end109_crit_edge ], [ %spec.select219, %if.else104 ]
  %call111 = call i32 @btrfs_relocate_chunk(ptr noundef %fs_info, i64 noundef %34)
  call void @mutex_unlock(ptr noundef %reclaim_bgs_lock) #23
  %140 = zext i32 %call111 to i64
  call void @__sanitizer_cov_trace_switch(i64 %140, ptr @__sancov_gen_cov_switch_values.205)
  switch i32 %call111, label %if.end109.error_crit_edge [
    i32 -28, label %if.then114
    i32 -26, label %if.then118
    i32 0, label %if.else123
  ]

if.end109.error_crit_edge:                        ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

if.then114:                                       ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #25
  %inc115 = add i32 %enospc_errors.1, 1
  br label %loop

if.then118:                                       ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.127, i64 noundef %34) #28
  br label %loop

if.else123:                                       ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #25
  call void @_raw_spin_lock(ptr noundef %balance_lock) #23
  %141 = ptrtoint ptr %completed to i32
  call void @__asan_load8_noabort(i32 %141)
  %142 = load i64, ptr %completed, align 8
  %inc126 = add i64 %142, 1
  store i64 %inc126, ptr %completed, align 8
  call void @_raw_spin_unlock(ptr noundef %balance_lock) #23
  br label %loop

loop:                                             ; preds = %if.else123, %if.then118, %if.then114, %if.then94, %if.else66, %if.then64, %if.then60, %if.then49
  %ret.0 = phi i32 [ 1, %if.then60 ], [ 1, %if.then64 ], [ 1, %if.then94 ], [ -28, %if.then114 ], [ 0, %if.then118 ], [ 0, %if.else123 ], [ 0, %if.then49 ], [ 1, %if.else66 ]
  %enospc_errors.2 = phi i32 [ %enospc_errors.1, %if.then60 ], [ %enospc_errors.1, %if.then64 ], [ %enospc_errors.1, %if.then94 ], [ %inc115, %if.then114 ], [ %enospc_errors.1, %if.then118 ], [ %enospc_errors.1, %if.else123 ], [ %enospc_errors.1, %if.then49 ], [ %enospc_errors.1, %if.else66 ]
  %count_data.2 = phi i32 [ %inc61, %if.then60 ], [ %count_data.1, %if.then64 ], [ %count_data.1, %if.then94 ], [ %count_data.1, %if.then114 ], [ %count_data.1, %if.then118 ], [ %count_data.1, %if.else123 ], [ %count_data.1, %if.then49 ], [ %count_data.1, %if.else66 ]
  %count_meta.2 = phi i32 [ %count_meta.1, %if.then60 ], [ %count_meta.1, %if.then64 ], [ %count_meta.1, %if.then94 ], [ %count_meta.1, %if.then114 ], [ %count_meta.1, %if.then118 ], [ %count_meta.1, %if.else123 ], [ %count_meta.1, %if.then49 ], [ %spec.select, %if.else66 ]
  %count_sys.2 = phi i32 [ %count_sys.1, %if.then60 ], [ %inc65, %if.then64 ], [ %count_sys.1, %if.then94 ], [ %count_sys.1, %if.then114 ], [ %count_sys.1, %if.then118 ], [ %count_sys.1, %if.else123 ], [ %count_sys.1, %if.then49 ], [ %count_sys.1, %if.else66 ]
  %chunk_reserved.3 = phi i32 [ %chunk_reserved.1, %if.then60 ], [ %chunk_reserved.1, %if.then64 ], [ %chunk_reserved.1, %if.then94 ], [ %chunk_reserved.2, %if.then114 ], [ %chunk_reserved.2, %if.then118 ], [ %chunk_reserved.2, %if.else123 ], [ %chunk_reserved.1, %if.then49 ], [ %chunk_reserved.1, %if.else66 ]
  %cmp132 = icmp eq i64 %33, 0
  br i1 %cmp132, label %loop.while.end_crit_edge, label %if.end134

loop.while.end_crit_edge:                         ; preds = %loop
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

if.end134:                                        ; preds = %loop
  call void @__sanitizer_cov_trace_pc() #25
  %sub = add i64 %34, -1
  %143 = ptrtoint ptr %5 to i32
  call void @__asan_storeN_noabort(i32 %143, i32 8)
  store i64 %sub, ptr %5, align 1
  br label %while.cond

while.end.sink.split:                             ; preds = %if.end30.while.end.sink.split_crit_edge, %if.end25.while.end.sink.split_crit_edge
  call void @mutex_unlock(ptr noundef %reclaim_bgs_lock) #23
  br label %while.end

while.end:                                        ; preds = %while.end.sink.split, %loop.while.end_crit_edge
  %ret.1 = phi i32 [ 0, %while.end.sink.split ], [ %ret.0, %loop.while.end_crit_edge ]
  %enospc_errors.3 = phi i32 [ %enospc_errors.1, %while.end.sink.split ], [ %enospc_errors.2, %loop.while.end_crit_edge ]
  %count_data.3 = phi i32 [ %count_data.1, %while.end.sink.split ], [ %count_data.2, %loop.while.end_crit_edge ]
  %count_meta.3 = phi i32 [ %count_meta.1, %while.end.sink.split ], [ %count_meta.2, %loop.while.end_crit_edge ]
  %count_sys.3 = phi i32 [ %count_sys.1, %while.end.sink.split ], [ %count_sys.2, %loop.while.end_crit_edge ]
  %chunk_reserved.4 = phi i32 [ %chunk_reserved.1, %while.end.sink.split ], [ %chunk_reserved.3, %loop.while.end_crit_edge ]
  br i1 %counting.0.off0, label %if.then138, label %while.end.error_crit_edge

while.end.error_crit_edge:                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

if.then138:                                       ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #25
  call void @btrfs_release_path(ptr noundef nonnull %call) #23
  br label %again

error.sink.split:                                 ; preds = %if.then98.error.sink.split_crit_edge, %if.end15.error.sink.split_crit_edge
  %ret.2.ph = phi i32 [ %call16, %if.end15.error.sink.split_crit_edge ], [ %call100, %if.then98.error.sink.split_crit_edge ]
  call void @mutex_unlock(ptr noundef %reclaim_bgs_lock) #23
  br label %error

error:                                            ; preds = %error.sink.split, %while.end.error_crit_edge, %if.end109.error_crit_edge, %lor.lhs.false.error_crit_edge, %land.lhs.true.error_crit_edge
  %ret.2 = phi i32 [ %ret.2.ph, %error.sink.split ], [ %call111, %if.end109.error_crit_edge ], [ -125, %land.lhs.true.error_crit_edge ], [ -125, %lor.lhs.false.error_crit_edge ], [ %ret.1, %while.end.error_crit_edge ]
  %enospc_errors.4 = phi i32 [ %enospc_errors.1, %error.sink.split ], [ %enospc_errors.1, %lor.lhs.false.error_crit_edge ], [ %enospc_errors.1, %land.lhs.true.error_crit_edge ], [ %enospc_errors.1, %if.end109.error_crit_edge ], [ %enospc_errors.3, %while.end.error_crit_edge ]
  call void @btrfs_free_path(ptr noundef nonnull %call) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %enospc_errors.4)
  %tobool140.not = icmp eq i32 %enospc_errors.4, 0
  br i1 %tobool140.not, label %error.if.end145_crit_edge, label %if.then141

error.if.end145_crit_edge:                        ; preds = %error
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end145

if.then141:                                       ; preds = %error
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.128, i32 noundef %enospc_errors.4) #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.2)
  %tobool142.not = icmp eq i32 %ret.2, 0
  %spec.select220 = select i1 %tobool142.not, i32 -28, i32 %ret.2
  br label %if.end145

if.end145:                                        ; preds = %if.then141, %error.if.end145_crit_edge, %error.thread
  %ret.3 = phi i32 [ %ret.2, %error.if.end145_crit_edge ], [ %spec.select220, %if.then141 ], [ -12, %error.thread ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #23
  ret i32 %ret.3
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_exclop_balance(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_update_ioctl_balance_args(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @balance_need_close(ptr noundef %fs_info) unnamed_addr #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %balance_cancel_req = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 116
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %balance_cancel_req, i32 noundef 4) #23
  %0 = ptrtoint ptr %balance_cancel_req to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %balance_cancel_req, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %lor.rhs, label %entry.lor.end_crit_edge

entry.lor.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.end

lor.rhs:                                          ; preds = %entry
  %balance_pause_req = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 115
  %call.i.i7 = tail call zeroext i1 @__kasan_check_read(ptr noundef %balance_pause_req, i32 noundef 4) #23
  %2 = ptrtoint ptr %balance_pause_req to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %balance_pause_req, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %land.rhs, label %lor.rhs.lor.end_crit_edge

lor.rhs.lor.end_crit_edge:                        ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.end

land.rhs:                                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #25
  %call.i.i8 = tail call zeroext i1 @__kasan_check_read(ptr noundef %balance_cancel_req, i32 noundef 4) #23
  %4 = ptrtoint ptr %balance_cancel_req to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %balance_cancel_req, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp4 = icmp eq i32 %5, 0
  %phi.cast = zext i1 %cmp4 to i32
  br label %lor.end

lor.end:                                          ; preds = %land.rhs, %lor.rhs.lor.end_crit_edge, %entry.lor.end_crit_edge
  %6 = phi i32 [ 1, %entry.lor.end_crit_edge ], [ 0, %lor.rhs.lor.end_crit_edge ], [ %phi.cast, %land.rhs ]
  ret i32 %6
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @reset_balance_state(ptr noundef %fs_info) unnamed_addr #4 align 64 {
entry:
  %key.i = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %balance_ctl = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 117
  %0 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %balance_ctl, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %do.body5, label %do.end10, !prof !424

do.body5:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3573, 0\0A.popsection", ""() #23, !srcloc !492
  unreachable

do.end10:                                         ; preds = %entry
  %balance_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 113
  tail call void @_raw_spin_lock(ptr noundef %balance_lock) #23
  %2 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %balance_ctl, align 8
  tail call void @_raw_spin_unlock(ptr noundef %balance_lock) #23
  tail call void @kfree(ptr noundef nonnull %1) #23
  %tree_root.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 2
  %3 = ptrtoint ptr %tree_root.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tree_root.i, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key.i) #23
  %5 = getelementptr inbounds %struct.btrfs_key, ptr %key.i, i32 0, i32 1
  %6 = getelementptr inbounds %struct.btrfs_key, ptr %key.i, i32 0, i32 2
  %call.i = tail call ptr @btrfs_alloc_path() #23
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %del_balance_item.exit.thread, label %if.end.i

del_balance_item.exit.thread:                     ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key.i) #23
  br label %do.body15

if.end.i:                                         ; preds = %do.end10
  %call1.i = tail call ptr @btrfs_start_transaction_fallback_global_rsv(ptr noundef %4, i32 noundef 0) #23
  %cmp.i.i = icmp ugt ptr %call1.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then3.i, label %if.end5.i

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @btrfs_free_path(ptr noundef nonnull %call.i) #23
  %7 = ptrtoint ptr %call1.i to i32
  br label %del_balance_item.exit

if.end5.i:                                        ; preds = %if.end.i
  %8 = ptrtoint ptr %key.i to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 -4, ptr %key.i, align 8
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 -8, ptr %5, align 8
  %10 = ptrtoint ptr %6 to i32
  call void @__asan_storeN_noabort(i32 %10, i32 8)
  store i64 0, ptr %6, align 1
  %call6.i = call i32 @btrfs_search_slot(ptr noundef %call1.i, ptr noundef %4, ptr noundef nonnull %key.i, ptr noundef nonnull %call.i, i32 noundef -1, i32 noundef 1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %cmp.i = icmp slt i32 %call6.i, 0
  br i1 %cmp.i, label %if.end5.i.out.i_crit_edge, label %if.end8.i

if.end5.i.out.i_crit_edge:                        ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out.i

if.end8.i:                                        ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %cmp9.not.i = icmp eq i32 %call6.i, 0
  br i1 %cmp9.not.i, label %if.end11.i, label %if.end8.i.out.i_crit_edge

if.end8.i.out.i_crit_edge:                        ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out.i

if.end11.i:                                       ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #25
  %slots.i.i = getelementptr inbounds %struct.btrfs_path, ptr %call.i, i32 0, i32 1
  %11 = ptrtoint ptr %slots.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %slots.i.i, align 4
  %call.i.i = call i32 @btrfs_del_items(ptr noundef %call1.i, ptr noundef %4, ptr noundef nonnull %call.i, i32 noundef %12, i32 noundef 1) #23
  br label %out.i

out.i:                                            ; preds = %if.end11.i, %if.end8.i.out.i_crit_edge, %if.end5.i.out.i_crit_edge
  %ret.0.i = phi i32 [ %call6.i, %if.end5.i.out.i_crit_edge ], [ %call.i.i, %if.end11.i ], [ -2, %if.end8.i.out.i_crit_edge ]
  call void @btrfs_free_path(ptr noundef nonnull %call.i) #23
  %call13.i = call i32 @btrfs_commit_transaction(ptr noundef %call1.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp ne i32 %call13.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0.i)
  %tobool15.not.i = icmp eq i32 %ret.0.i, 0
  %or.cond.i = select i1 %tobool14.not.i, i1 %tobool15.not.i, i1 false
  %ret.1.i = select i1 %or.cond.i, i32 %call13.i, i32 %ret.0.i
  br label %del_balance_item.exit

del_balance_item.exit:                            ; preds = %out.i, %if.then3.i
  %retval.0.i = phi i32 [ %7, %if.then3.i ], [ %ret.1.i, %out.i ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool13.not = icmp eq i32 %retval.0.i, 0
  br i1 %tobool13.not, label %del_balance_item.exit.if.end18_crit_edge, label %del_balance_item.exit.do.body15_crit_edge

del_balance_item.exit.do.body15_crit_edge:        ; preds = %del_balance_item.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body15

del_balance_item.exit.if.end18_crit_edge:         ; preds = %del_balance_item.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end18

do.body15:                                        ; preds = %del_balance_item.exit.do.body15_crit_edge, %del_balance_item.exit.thread
  %retval.0.i28 = phi i32 [ -12, %del_balance_item.exit.thread ], [ %retval.0.i, %del_balance_item.exit.do.body15_crit_edge ]
  call void (ptr, ptr, i32, i32, ptr, ...) @__btrfs_handle_fs_error(ptr noundef %fs_info, ptr noundef nonnull @__func__.reset_balance_state, i32 noundef 3582, i32 noundef %retval.0.i28, ptr noundef null) #28
  br label %if.end18

if.end18:                                         ; preds = %do.body15, %del_balance_item.exit.if.end18_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_exclop_finish(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_resume_balance_async(ptr noundef %fs_info) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %balance_mutex = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 114
  tail call void @mutex_lock_nested(ptr noundef %balance_mutex, i32 noundef 0) #23
  %balance_ctl = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 117
  %0 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %balance_ctl, align 8
  %tobool.not = icmp eq ptr %1, null
  tail call void @mutex_unlock(ptr noundef %balance_mutex) #23
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %mount_opt = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 31
  %2 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mount_opt, align 8
  %and = and i32 %3, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.37) #28
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %super_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 42
  tail call void @_raw_spin_lock(ptr noundef %super_lock) #23
  %exclusive_operation = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 175
  %4 = ptrtoint ptr %exclusive_operation to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %exclusive_operation, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp = icmp eq i32 %5, 1
  br i1 %cmp, label %cond.end, label %cond.false, !prof !423

cond.false:                                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.38, i32 noundef 4473) #32
  unreachable

cond.end:                                         ; preds = %if.end5
  %6 = ptrtoint ptr %exclusive_operation to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 2, ptr %exclusive_operation, align 4
  tail call void @_raw_spin_unlock(ptr noundef %super_lock) #23
  %balance_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 113
  tail call void @_raw_spin_lock(ptr noundef %balance_lock) #23
  %7 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %balance_ctl, align 8
  %flags = getelementptr inbounds %struct.btrfs_balance_control, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %flags, align 8
  %or = or i64 %10, 16
  store i64 %or, ptr %flags, align 8
  tail call void @_raw_spin_unlock(ptr noundef %balance_lock) #23
  %call = tail call ptr (ptr, ptr, i32, ptr, ...) @kthread_create_on_node(ptr noundef nonnull @balance_kthread, ptr noundef %fs_info, i32 noundef -1, ptr noundef nonnull @.str.39) #23
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %cond.end.if.end15_crit_edge, label %if.then13

cond.end.if.end15_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end15

if.then13:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  %call14 = tail call i32 @wake_up_process(ptr noundef %call) #23
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %cond.end.if.end15_crit_edge
  %11 = ptrtoint ptr %call to i32
  %spec.select.i = select i1 %cmp.i, i32 %11, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %if.then4, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.then4 ], [ %spec.select.i, %if.end15 ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kthread_create_on_node(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @balance_kthread(ptr noundef %data) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %balance_mutex = getelementptr inbounds %struct.btrfs_fs_info, ptr %data, i32 0, i32 114
  tail call void @mutex_lock_nested(ptr noundef %balance_mutex, i32 noundef 0) #23
  %balance_ctl = getelementptr inbounds %struct.btrfs_fs_info, ptr %data, i32 0, i32 117
  %0 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %balance_ctl, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %call = tail call i32 @btrfs_balance(ptr noundef %data, ptr noundef nonnull %1, ptr noundef null)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %ret.0 = phi i32 [ %call, %if.then ], [ 0, %entry.if.end_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %balance_mutex) #23
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wake_up_process(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_recover_balance(ptr noundef %fs_info) local_unnamed_addr #4 align 64 {
entry:
  %disk_bargs = alloca %struct.btrfs_disk_balance_args, align 8
  %key = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %disk_bargs) #23
  %0 = call ptr @memset(ptr %disk_bargs, i32 255, i32 136)
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #23
  %call = tail call ptr @btrfs_alloc_path() #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %2 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %3 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %3)
  store i64 -4, ptr %key, align 8
  %4 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 -8, ptr %2, align 8
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_storeN_noabort(i32 %5, i32 8)
  store i64 0, ptr %1, align 1
  %tree_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 2
  %6 = ptrtoint ptr %tree_root to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tree_root, align 4
  %call1 = call i32 @btrfs_search_slot(ptr noundef null, ptr noundef %7, ptr noundef nonnull %key, ptr noundef nonnull %call, i32 noundef 0, i32 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %if.end.out_crit_edge, label %if.end3

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp4.not = icmp eq i32 %call1, 0
  br i1 %cmp4.not, label %if.end6, label %if.end3.out_crit_edge

if.end3.out_crit_edge:                            ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end6:                                          ; preds = %if.end3
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %8 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %8, i32 noundef 3392, i32 noundef 440) #29
  %tobool8.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool8.not, label %if.end6.out_crit_edge, label %if.end10

if.end6.out_crit_edge:                            ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end10:                                         ; preds = %if.end6
  %9 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %call, align 4
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %call, i32 0, i32 1
  %11 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %slots, align 4
  %mul.i.i.i = mul i32 %12, 25
  %add.i.i.i = add i32 %mul.i.i.i, 101
  %13 = inttoptr i32 %add.i.i.i to ptr
  %call.i.i = call i32 @btrfs_get_32(ptr noundef %10, ptr noundef %13, i32 noundef 17) #23
  %add = add i32 %call.i.i, 101
  %14 = inttoptr i32 %add to ptr
  %call.i = call i64 @btrfs_get_64(ptr noundef %10, ptr noundef %14, i32 noundef 0) #23
  %flags = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 3
  %or = or i64 %call.i, 16
  %15 = ptrtoint ptr %flags to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %or, ptr %flags, align 8
  %add.i = add i32 %call.i.i, 109
  call void @read_extent_buffer(ptr noundef %10, ptr noundef nonnull %disk_bargs, i32 noundef %add.i, i32 noundef 136) #23
  %16 = getelementptr inbounds i8, ptr %call7.i.i, i32 88
  %17 = call ptr @memset(ptr %16, i32 0, i32 48)
  %18 = ptrtoint ptr %disk_bargs to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %disk_bargs, align 8
  %20 = call i64 @llvm.bswap.i64(i64 %19) #23
  %21 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %call7.i.i, align 8
  %22 = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 1
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %22, align 8
  %25 = call i64 @llvm.bswap.i64(i64 %24) #23
  %26 = getelementptr inbounds %struct.btrfs_balance_args, ptr %call7.i.i, i32 0, i32 1
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %25, ptr %26, align 8
  %devid.i = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 2
  %28 = ptrtoint ptr %devid.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %devid.i, align 8
  %30 = call i64 @llvm.bswap.i64(i64 %29) #23
  %devid2.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %call7.i.i, i32 0, i32 2
  %31 = ptrtoint ptr %devid2.i to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %30, ptr %devid2.i, align 8
  %pstart.i = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 3
  %32 = ptrtoint ptr %pstart.i to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %pstart.i, align 8
  %34 = call i64 @llvm.bswap.i64(i64 %33) #23
  %pstart3.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %call7.i.i, i32 0, i32 3
  %35 = ptrtoint ptr %pstart3.i to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %pstart3.i, align 8
  %pend.i = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 4
  %36 = ptrtoint ptr %pend.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %pend.i, align 8
  %38 = call i64 @llvm.bswap.i64(i64 %37) #23
  %pend4.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %call7.i.i, i32 0, i32 4
  %39 = ptrtoint ptr %pend4.i to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %38, ptr %pend4.i, align 8
  %vstart.i = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 5
  %40 = ptrtoint ptr %vstart.i to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %vstart.i, align 8
  %42 = call i64 @llvm.bswap.i64(i64 %41) #23
  %vstart5.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %call7.i.i, i32 0, i32 5
  %43 = ptrtoint ptr %vstart5.i to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %42, ptr %vstart5.i, align 8
  %vend.i = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 6
  %44 = ptrtoint ptr %vend.i to i32
  call void @__asan_load8_noabort(i32 %44)
  %45 = load i64, ptr %vend.i, align 8
  %46 = call i64 @llvm.bswap.i64(i64 %45) #23
  %vend6.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %call7.i.i, i32 0, i32 6
  %47 = ptrtoint ptr %vend6.i to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 %46, ptr %vend6.i, align 8
  %target.i = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 7
  %48 = ptrtoint ptr %target.i to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %target.i, align 8
  %50 = call i64 @llvm.bswap.i64(i64 %49) #23
  %target7.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %call7.i.i, i32 0, i32 7
  %51 = ptrtoint ptr %target7.i to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 %50, ptr %target7.i, align 8
  %flags.i = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 8
  %52 = ptrtoint ptr %flags.i to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %flags.i, align 8
  %54 = call i64 @llvm.bswap.i64(i64 %53) #23
  %flags8.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %call7.i.i, i32 0, i32 8
  %55 = ptrtoint ptr %flags8.i to i32
  call void @__asan_store8_noabort(i32 %55)
  store i64 %54, ptr %flags8.i, align 8
  %56 = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 9
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_load8_noabort(i32 %57)
  %58 = load i64, ptr %56, align 8
  %59 = call i64 @llvm.bswap.i64(i64 %58) #23
  %60 = getelementptr inbounds %struct.btrfs_balance_args, ptr %call7.i.i, i32 0, i32 9
  %61 = ptrtoint ptr %60 to i32
  call void @__asan_store8_noabort(i32 %61)
  store i64 %59, ptr %60, align 8
  %stripes_min.i = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 10
  %62 = ptrtoint ptr %stripes_min.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %stripes_min.i, align 8
  %64 = call i32 @llvm.bswap.i32(i32 %63) #23
  %stripes_min9.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %call7.i.i, i32 0, i32 10
  %65 = ptrtoint ptr %stripes_min9.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %64, ptr %stripes_min9.i, align 8
  %stripes_max.i = getelementptr inbounds %struct.btrfs_disk_balance_args, ptr %disk_bargs, i32 0, i32 11
  %66 = ptrtoint ptr %stripes_max.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %stripes_max.i, align 4
  %68 = call i32 @llvm.bswap.i32(i32 %67) #23
  %stripes_max10.i = getelementptr inbounds %struct.btrfs_balance_args, ptr %call7.i.i, i32 0, i32 11
  %69 = ptrtoint ptr %stripes_max10.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %68, ptr %stripes_max10.i, align 4
  %add.i66 = add i32 %call.i.i, 245
  call void @read_extent_buffer(ptr noundef %10, ptr noundef nonnull %disk_bargs, i32 noundef %add.i66, i32 noundef 136) #23
  %meta = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 1
  %70 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 1, i32 12
  %71 = call ptr @memset(ptr %70, i32 0, i32 48)
  %72 = ptrtoint ptr %disk_bargs to i32
  call void @__asan_load8_noabort(i32 %72)
  %73 = load i64, ptr %disk_bargs, align 8
  %74 = call i64 @llvm.bswap.i64(i64 %73) #23
  %75 = ptrtoint ptr %meta to i32
  call void @__asan_store8_noabort(i32 %75)
  store i64 %74, ptr %meta, align 8
  %76 = ptrtoint ptr %22 to i32
  call void @__asan_load8_noabort(i32 %76)
  %77 = load i64, ptr %22, align 8
  %78 = call i64 @llvm.bswap.i64(i64 %77) #23
  %79 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 1, i32 1
  %80 = ptrtoint ptr %79 to i32
  call void @__asan_store8_noabort(i32 %80)
  store i64 %78, ptr %79, align 8
  %81 = ptrtoint ptr %devid.i to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load i64, ptr %devid.i, align 8
  %83 = call i64 @llvm.bswap.i64(i64 %82) #23
  %devid2.i68 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 1, i32 2
  %84 = ptrtoint ptr %devid2.i68 to i32
  call void @__asan_store8_noabort(i32 %84)
  store i64 %83, ptr %devid2.i68, align 8
  %85 = ptrtoint ptr %pstart.i to i32
  call void @__asan_load8_noabort(i32 %85)
  %86 = load i64, ptr %pstart.i, align 8
  %87 = call i64 @llvm.bswap.i64(i64 %86) #23
  %pstart3.i70 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 1, i32 3
  %88 = ptrtoint ptr %pstart3.i70 to i32
  call void @__asan_store8_noabort(i32 %88)
  store i64 %87, ptr %pstart3.i70, align 8
  %89 = ptrtoint ptr %pend.i to i32
  call void @__asan_load8_noabort(i32 %89)
  %90 = load i64, ptr %pend.i, align 8
  %91 = call i64 @llvm.bswap.i64(i64 %90) #23
  %pend4.i72 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 1, i32 4
  %92 = ptrtoint ptr %pend4.i72 to i32
  call void @__asan_store8_noabort(i32 %92)
  store i64 %91, ptr %pend4.i72, align 8
  %93 = ptrtoint ptr %vstart.i to i32
  call void @__asan_load8_noabort(i32 %93)
  %94 = load i64, ptr %vstart.i, align 8
  %95 = call i64 @llvm.bswap.i64(i64 %94) #23
  %vstart5.i74 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 1, i32 5
  %96 = ptrtoint ptr %vstart5.i74 to i32
  call void @__asan_store8_noabort(i32 %96)
  store i64 %95, ptr %vstart5.i74, align 8
  %97 = ptrtoint ptr %vend.i to i32
  call void @__asan_load8_noabort(i32 %97)
  %98 = load i64, ptr %vend.i, align 8
  %99 = call i64 @llvm.bswap.i64(i64 %98) #23
  %vend6.i76 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 1, i32 6
  %100 = ptrtoint ptr %vend6.i76 to i32
  call void @__asan_store8_noabort(i32 %100)
  store i64 %99, ptr %vend6.i76, align 8
  %101 = ptrtoint ptr %target.i to i32
  call void @__asan_load8_noabort(i32 %101)
  %102 = load i64, ptr %target.i, align 8
  %103 = call i64 @llvm.bswap.i64(i64 %102) #23
  %target7.i78 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 1, i32 7
  %104 = ptrtoint ptr %target7.i78 to i32
  call void @__asan_store8_noabort(i32 %104)
  store i64 %103, ptr %target7.i78, align 8
  %105 = ptrtoint ptr %flags.i to i32
  call void @__asan_load8_noabort(i32 %105)
  %106 = load i64, ptr %flags.i, align 8
  %107 = call i64 @llvm.bswap.i64(i64 %106) #23
  %flags8.i80 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 1, i32 8
  %108 = ptrtoint ptr %flags8.i80 to i32
  call void @__asan_store8_noabort(i32 %108)
  store i64 %107, ptr %flags8.i80, align 8
  %109 = ptrtoint ptr %56 to i32
  call void @__asan_load8_noabort(i32 %109)
  %110 = load i64, ptr %56, align 8
  %111 = call i64 @llvm.bswap.i64(i64 %110) #23
  %112 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 1, i32 9
  %113 = ptrtoint ptr %112 to i32
  call void @__asan_store8_noabort(i32 %113)
  store i64 %111, ptr %112, align 8
  %114 = ptrtoint ptr %stripes_min.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %stripes_min.i, align 8
  %116 = call i32 @llvm.bswap.i32(i32 %115) #23
  %stripes_min9.i82 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 1, i32 10
  %117 = ptrtoint ptr %stripes_min9.i82 to i32
  call void @__asan_store4_noabort(i32 %117)
  store i32 %116, ptr %stripes_min9.i82, align 8
  %118 = ptrtoint ptr %stripes_max.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %stripes_max.i, align 4
  %120 = call i32 @llvm.bswap.i32(i32 %119) #23
  %stripes_max10.i84 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 1, i32 11
  %121 = ptrtoint ptr %stripes_max10.i84 to i32
  call void @__asan_store4_noabort(i32 %121)
  store i32 %120, ptr %stripes_max10.i84, align 4
  %add.i85 = add i32 %call.i.i, 381
  call void @read_extent_buffer(ptr noundef %10, ptr noundef nonnull %disk_bargs, i32 noundef %add.i85, i32 noundef 136) #23
  %sys = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 2
  %122 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 2, i32 12
  %123 = call ptr @memset(ptr %122, i32 0, i32 48)
  %124 = ptrtoint ptr %disk_bargs to i32
  call void @__asan_load8_noabort(i32 %124)
  %125 = load i64, ptr %disk_bargs, align 8
  %126 = call i64 @llvm.bswap.i64(i64 %125) #23
  %127 = ptrtoint ptr %sys to i32
  call void @__asan_store8_noabort(i32 %127)
  store i64 %126, ptr %sys, align 8
  %128 = ptrtoint ptr %22 to i32
  call void @__asan_load8_noabort(i32 %128)
  %129 = load i64, ptr %22, align 8
  %130 = call i64 @llvm.bswap.i64(i64 %129) #23
  %131 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 2, i32 1
  %132 = ptrtoint ptr %131 to i32
  call void @__asan_store8_noabort(i32 %132)
  store i64 %130, ptr %131, align 8
  %133 = ptrtoint ptr %devid.i to i32
  call void @__asan_load8_noabort(i32 %133)
  %134 = load i64, ptr %devid.i, align 8
  %135 = call i64 @llvm.bswap.i64(i64 %134) #23
  %devid2.i87 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 2, i32 2
  %136 = ptrtoint ptr %devid2.i87 to i32
  call void @__asan_store8_noabort(i32 %136)
  store i64 %135, ptr %devid2.i87, align 8
  %137 = ptrtoint ptr %pstart.i to i32
  call void @__asan_load8_noabort(i32 %137)
  %138 = load i64, ptr %pstart.i, align 8
  %139 = call i64 @llvm.bswap.i64(i64 %138) #23
  %pstart3.i89 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 2, i32 3
  %140 = ptrtoint ptr %pstart3.i89 to i32
  call void @__asan_store8_noabort(i32 %140)
  store i64 %139, ptr %pstart3.i89, align 8
  %141 = ptrtoint ptr %pend.i to i32
  call void @__asan_load8_noabort(i32 %141)
  %142 = load i64, ptr %pend.i, align 8
  %143 = call i64 @llvm.bswap.i64(i64 %142) #23
  %pend4.i91 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 2, i32 4
  %144 = ptrtoint ptr %pend4.i91 to i32
  call void @__asan_store8_noabort(i32 %144)
  store i64 %143, ptr %pend4.i91, align 8
  %145 = ptrtoint ptr %vstart.i to i32
  call void @__asan_load8_noabort(i32 %145)
  %146 = load i64, ptr %vstart.i, align 8
  %147 = call i64 @llvm.bswap.i64(i64 %146) #23
  %vstart5.i93 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 2, i32 5
  %148 = ptrtoint ptr %vstart5.i93 to i32
  call void @__asan_store8_noabort(i32 %148)
  store i64 %147, ptr %vstart5.i93, align 8
  %149 = ptrtoint ptr %vend.i to i32
  call void @__asan_load8_noabort(i32 %149)
  %150 = load i64, ptr %vend.i, align 8
  %151 = call i64 @llvm.bswap.i64(i64 %150) #23
  %vend6.i95 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 2, i32 6
  %152 = ptrtoint ptr %vend6.i95 to i32
  call void @__asan_store8_noabort(i32 %152)
  store i64 %151, ptr %vend6.i95, align 8
  %153 = ptrtoint ptr %target.i to i32
  call void @__asan_load8_noabort(i32 %153)
  %154 = load i64, ptr %target.i, align 8
  %155 = call i64 @llvm.bswap.i64(i64 %154) #23
  %target7.i97 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 2, i32 7
  %156 = ptrtoint ptr %target7.i97 to i32
  call void @__asan_store8_noabort(i32 %156)
  store i64 %155, ptr %target7.i97, align 8
  %157 = ptrtoint ptr %flags.i to i32
  call void @__asan_load8_noabort(i32 %157)
  %158 = load i64, ptr %flags.i, align 8
  %159 = call i64 @llvm.bswap.i64(i64 %158) #23
  %flags8.i99 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 2, i32 8
  %160 = ptrtoint ptr %flags8.i99 to i32
  call void @__asan_store8_noabort(i32 %160)
  store i64 %159, ptr %flags8.i99, align 8
  %161 = ptrtoint ptr %56 to i32
  call void @__asan_load8_noabort(i32 %161)
  %162 = load i64, ptr %56, align 8
  %163 = call i64 @llvm.bswap.i64(i64 %162) #23
  %164 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 2, i32 9
  %165 = ptrtoint ptr %164 to i32
  call void @__asan_store8_noabort(i32 %165)
  store i64 %163, ptr %164, align 8
  %166 = ptrtoint ptr %stripes_min.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %stripes_min.i, align 8
  %168 = call i32 @llvm.bswap.i32(i32 %167) #23
  %stripes_min9.i101 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 2, i32 10
  %169 = ptrtoint ptr %stripes_min9.i101 to i32
  call void @__asan_store4_noabort(i32 %169)
  store i32 %168, ptr %stripes_min9.i101, align 8
  %170 = ptrtoint ptr %stripes_max.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %stripes_max.i, align 4
  %172 = call i32 @llvm.bswap.i32(i32 %171) #23
  %stripes_max10.i103 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 2, i32 11
  %173 = ptrtoint ptr %stripes_max10.i103 to i32
  call void @__asan_store4_noabort(i32 %173)
  store i32 %172, ptr %stripes_max10.i103, align 4
  %call15 = call zeroext i1 @btrfs_exclop_start(ptr noundef %fs_info, i32 noundef 1) #23
  br i1 %call15, label %if.end10.if.end17_crit_edge, label %if.then16

if.end10.if.end17_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end17

if.then16:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.40) #28
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %if.end10.if.end17_crit_edge
  call void @btrfs_release_path(ptr noundef nonnull %call) #23
  %balance_mutex = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 114
  call void @mutex_lock_nested(ptr noundef %balance_mutex, i32 noundef 0) #23
  %balance_ctl = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 117
  %174 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %balance_ctl, align 8
  %tobool18.not = icmp eq ptr %175, null
  br i1 %tobool18.not, label %do.end28, label %do.body22, !prof !423

do.body22:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #25
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4551, 0\0A.popsection", ""() #23, !srcloc !493
  unreachable

do.end28:                                         ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #25
  %balance_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 113
  call void @_raw_spin_lock(ptr noundef %balance_lock) #23
  %176 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_store4_noabort(i32 %176)
  store ptr %call7.i.i, ptr %balance_ctl, align 8
  call void @_raw_spin_unlock(ptr noundef %balance_lock) #23
  call void @mutex_unlock(ptr noundef %balance_mutex) #23
  br label %out

out:                                              ; preds = %do.end28, %if.end6.out_crit_edge, %if.end3.out_crit_edge, %if.end.out_crit_edge
  %ret.0 = phi i32 [ %call1, %if.end.out_crit_edge ], [ 0, %do.end28 ], [ 0, %if.end3.out_crit_edge ], [ -12, %if.end6.out_crit_edge ]
  call void @btrfs_free_path(ptr noundef nonnull %call) #23
  br label %cleanup

cleanup:                                          ; preds = %out, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %out ], [ -12, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #23
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %disk_bargs) #23
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_alloc_path() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_search_slot(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @btrfs_exclop_start(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_release_path(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_free_path(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_pause_balance(ptr noundef %fs_info) local_unnamed_addr #4 align 64 {
entry:
  %__wq_entry = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %balance_mutex = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 114
  tail call void @mutex_lock_nested(ptr noundef %balance_mutex, i32 noundef 0) #23
  %balance_ctl = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 117
  %0 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %balance_ctl, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @mutex_unlock(ptr noundef %balance_mutex) #23
  br label %cleanup43

if.end:                                           ; preds = %entry
  %flags = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 1
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %flags, align 4
  %4 = and i32 %3, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool2.not = icmp eq i32 %4, 0
  br i1 %tobool2.not, label %if.end.if.end41_crit_edge, label %if.then3

if.end.if.end41_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end41

if.then3:                                         ; preds = %if.end
  %balance_pause_req = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 115
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %balance_pause_req, i32 noundef 4) #23
  tail call void @llvm.prefetch.p0(ptr %balance_pause_req, i32 1, i32 3, i32 1) #23
  %5 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %balance_pause_req, ptr %balance_pause_req, i32 1, ptr elementtype(i32) %balance_pause_req) #23, !srcloc !494
  tail call void @mutex_unlock(ptr noundef %balance_mutex) #23
  tail call void @__might_sleep(ptr noundef nonnull @.str.9, i32 noundef 4576) #23
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %flags, align 4
  %8 = and i32 %7, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool11.not = icmp eq i32 %8, 0
  br i1 %tobool11.not, label %if.then3.do.end22_crit_edge, label %if.end13

if.then3.do.end22_crit_edge:                      ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end22

if.end13:                                         ; preds = %if.then3
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry) #23
  %9 = call ptr @memset(ptr %__wq_entry, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry, i32 noundef 0) #23
  %balance_wait_q = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 118
  %call1466 = call i32 @prepare_to_wait_event(ptr noundef %balance_wait_q, ptr noundef nonnull %__wq_entry, i32 noundef 2) #23
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %flags, align 4
  %12 = and i32 %11, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool17.not67 = icmp eq i32 %12, 0
  br i1 %tobool17.not67, label %if.end13.for.end_crit_edge, label %if.end13.cleanup_crit_edge

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  br label %cleanup

if.end13.for.end_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

cleanup:                                          ; preds = %cleanup.cleanup_crit_edge, %if.end13.cleanup_crit_edge
  call void @schedule() #23
  %call14 = call i32 @prepare_to_wait_event(ptr noundef %balance_wait_q, ptr noundef nonnull %__wq_entry, i32 noundef 2) #23
  %13 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %flags, align 4
  %15 = and i32 %14, 4096
  %tobool17.not = icmp eq i32 %15, 0
  br i1 %tobool17.not, label %cleanup.for.end_crit_edge, label %cleanup.cleanup_crit_edge

cleanup.cleanup_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %if.end13.for.end_crit_edge
  call void @finish_wait(ptr noundef %balance_wait_q, ptr noundef nonnull %__wq_entry) #23
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry) #23
  br label %do.end22

do.end22:                                         ; preds = %for.end, %if.then3.do.end22_crit_edge
  call void @mutex_lock_nested(ptr noundef %balance_mutex, i32 noundef 0) #23
  %16 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %flags, align 4
  %18 = and i32 %17, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool27.not = icmp eq i32 %18, 0
  br i1 %tobool27.not, label %do.end39, label %do.body31, !prof !423

do.body31:                                        ; preds = %do.end22
  call void @__sanitizer_cov_trace_pc() #25
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4580, 0\0A.popsection", ""() #23, !srcloc !495
  unreachable

do.end39:                                         ; preds = %do.end22
  call void @__sanitizer_cov_trace_pc() #25
  %call.i.i63 = call zeroext i1 @__kasan_check_write(ptr noundef %balance_pause_req, i32 noundef 4) #23
  call void @llvm.prefetch.p0(ptr %balance_pause_req, i32 1, i32 3, i32 1) #23
  %19 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %balance_pause_req, ptr %balance_pause_req, i32 1, ptr elementtype(i32) %balance_pause_req) #23, !srcloc !496
  br label %if.end41

if.end41:                                         ; preds = %do.end39, %if.end.if.end41_crit_edge
  %ret.0 = phi i32 [ 0, %do.end39 ], [ -107, %if.end.if.end41_crit_edge ]
  call void @mutex_unlock(ptr noundef %balance_mutex) #23
  br label %cleanup43

cleanup43:                                        ; preds = %if.end41, %if.then
  %retval.0 = phi i32 [ %ret.0, %if.end41 ], [ -107, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_wait_entry(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prepare_to_wait_event(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_cancel_balance(ptr noundef %fs_info) local_unnamed_addr #4 align 64 {
entry:
  %__wq_entry = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %balance_mutex = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 114
  tail call void @mutex_lock_nested(ptr noundef %balance_mutex, i32 noundef 0) #23
  %balance_ctl = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 117
  %0 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %balance_ctl, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @mutex_unlock(ptr noundef %balance_mutex) #23
  br label %return

if.end:                                           ; preds = %entry
  %sb = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 45
  %2 = ptrtoint ptr %sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sb, align 8
  %s_flags.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 10
  %4 = ptrtoint ptr %s_flags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %s_flags.i, align 4
  %and.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.end4, label %if.then2

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @mutex_unlock(ptr noundef %balance_mutex) #23
  br label %return

if.end4:                                          ; preds = %if.end
  %balance_cancel_req = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 116
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %balance_cancel_req, i32 noundef 4) #23
  tail call void @llvm.prefetch.p0(ptr %balance_cancel_req, i32 1, i32 3, i32 1) #23
  %6 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %balance_cancel_req, ptr %balance_cancel_req, i32 1, ptr elementtype(i32) %balance_cancel_req) #23, !srcloc !494
  %flags = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 1
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %flags, align 4
  %9 = and i32 %8, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool6.not = icmp eq i32 %9, 0
  tail call void @mutex_unlock(ptr noundef %balance_mutex) #23
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end4
  tail call void @__might_sleep(ptr noundef nonnull @.str.9, i32 noundef 4616) #23
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %flags, align 4
  %12 = and i32 %11, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool14.not = icmp eq i32 %12, 0
  br i1 %tobool14.not, label %if.then7.do.end24_crit_edge, label %if.end16

if.then7.do.end24_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end24

if.end16:                                         ; preds = %if.then7
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry) #23
  %13 = call ptr @memset(ptr %__wq_entry, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry, i32 noundef 0) #23
  %balance_wait_q = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 118
  %call1782 = call i32 @prepare_to_wait_event(ptr noundef %balance_wait_q, ptr noundef nonnull %__wq_entry, i32 noundef 2) #23
  %14 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %flags, align 4
  %16 = and i32 %15, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool20.not83 = icmp eq i32 %16, 0
  br i1 %tobool20.not83, label %if.end16.for.end_crit_edge, label %if.end16.cleanup_crit_edge

if.end16.cleanup_crit_edge:                       ; preds = %if.end16
  br label %cleanup

if.end16.for.end_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

cleanup:                                          ; preds = %cleanup.cleanup_crit_edge, %if.end16.cleanup_crit_edge
  call void @schedule() #23
  %call17 = call i32 @prepare_to_wait_event(ptr noundef %balance_wait_q, ptr noundef nonnull %__wq_entry, i32 noundef 2) #23
  %17 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %flags, align 4
  %19 = and i32 %18, 4096
  %tobool20.not = icmp eq i32 %19, 0
  br i1 %tobool20.not, label %cleanup.for.end_crit_edge, label %cleanup.cleanup_crit_edge

cleanup.cleanup_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %if.end16.for.end_crit_edge
  call void @finish_wait(ptr noundef %balance_wait_q, ptr noundef nonnull %__wq_entry) #23
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry) #23
  br label %do.end24

do.end24:                                         ; preds = %for.end, %if.then7.do.end24_crit_edge
  call void @mutex_lock_nested(ptr noundef %balance_mutex, i32 noundef 0) #23
  br label %do.body33

if.else:                                          ; preds = %if.end4
  tail call void @mutex_lock_nested(ptr noundef %balance_mutex, i32 noundef 0) #23
  %20 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %balance_ctl, align 8
  %tobool29.not = icmp eq ptr %21, null
  br i1 %tobool29.not, label %if.else.lor.rhs_crit_edge, label %if.then30

if.else.lor.rhs_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.rhs

if.then30:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  tail call fastcc void @reset_balance_state(ptr noundef %fs_info)
  tail call void @btrfs_exclop_finish(ptr noundef %fs_info) #23
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.35) #28
  br label %do.body33

do.body33:                                        ; preds = %if.then30, %do.end24
  %22 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_load4_noabort(i32 %22)
  %.pr = load ptr, ptr %balance_ctl, align 8
  %tobool35.not = icmp eq ptr %.pr, null
  br i1 %tobool35.not, label %do.body33.lor.rhs_crit_edge, label %do.body33.do.body42_crit_edge, !prof !423

do.body33.do.body42_crit_edge:                    ; preds = %do.body33
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body42

do.body33.lor.rhs_crit_edge:                      ; preds = %do.body33
  call void @__sanitizer_cov_trace_pc() #25
  br label %lor.rhs

lor.rhs:                                          ; preds = %do.body33.lor.rhs_crit_edge, %if.else.lor.rhs_crit_edge
  %23 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %flags, align 4
  %25 = and i32 %24, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool38.not = icmp eq i32 %25, 0
  br i1 %tobool38.not, label %do.end47, label %lor.rhs.do.body42_crit_edge, !prof !423

lor.rhs.do.body42_crit_edge:                      ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body42

do.body42:                                        ; preds = %lor.rhs.do.body42_crit_edge, %do.body33.do.body42_crit_edge
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4634, 0\0A.popsection", ""() #23, !srcloc !497
  unreachable

do.end47:                                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #25
  %call.i.i78 = call zeroext i1 @__kasan_check_write(ptr noundef %balance_cancel_req, i32 noundef 4) #23
  call void @llvm.prefetch.p0(ptr %balance_cancel_req, i32 1, i32 3, i32 1) #23
  %26 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %balance_cancel_req, ptr %balance_cancel_req, i32 1, ptr elementtype(i32) %balance_cancel_req) #23, !srcloc !496
  call void @mutex_unlock(ptr noundef %balance_mutex) #23
  br label %return

return:                                           ; preds = %do.end47, %if.then2, %if.then
  %retval.0 = phi i32 [ -30, %if.then2 ], [ 0, %do.end47 ], [ -107, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_uuid_scan_kthread(ptr noundef %data) #4 align 64 {
entry:
  %key = alloca %struct.btrfs_key, align 8
  %root_item = alloca %struct.btrfs_root_item, align 1
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %tree_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %data, i32 0, i32 2
  %0 = ptrtoint ptr %tree_root to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tree_root, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #23
  %2 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %3 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %4 = call ptr @memset(ptr %key, i32 255, i32 17)
  call void @llvm.lifetime.start.p0(i64 439, ptr nonnull %root_item) #23
  %5 = call ptr @memset(ptr %root_item, i32 255, i32 439)
  %call = tail call ptr @btrfs_alloc_path() #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.if.end120.thread.thread_crit_edge, label %if.end

entry.if.end120.thread.thread_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end120.thread.thread

if.end:                                           ; preds = %entry
  %6 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 0, ptr %key, align 8
  %7 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 -124, ptr %2, align 8
  %8 = ptrtoint ptr %3 to i32
  call void @__asan_storeN_noabort(i32 %8, i32 8)
  store i64 0, ptr %3, align 1
  %flags.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %data, i32 0, i32 1
  %9 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %flags.i, align 4
  %and1.i.i221 = and i32 %10, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i221)
  %tobool.not.i222 = icmp eq i32 %and1.i.i221, 0
  br i1 %tobool.not.i222, label %if.end4.lr.ph, label %if.end.btrfs_fs_closing.exit_crit_edge

if.end.btrfs_fs_closing.exit_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_fs_closing.exit

if.end4.lr.ph:                                    ; preds = %if.end
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %call, i32 0, i32 1
  %refs.i = getelementptr inbounds %struct.btrfs_root_item, ptr %root_item, i32 0, i32 8
  %uuid = getelementptr inbounds %struct.btrfs_root_item, ptr %root_item, i32 0, i32 13
  %received_uuid = getelementptr inbounds %struct.btrfs_root_item, ptr %root_item, i32 0, i32 15
  %uuid_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %data, i32 0, i32 7
  br label %if.end4

btrfs_fs_closing.exit:                            ; preds = %while.cond.backedge.btrfs_fs_closing.exit_crit_edge, %if.end.btrfs_fs_closing.exit_crit_edge
  %trans.0.lcssa = phi ptr [ null, %if.end.btrfs_fs_closing.exit_crit_edge ], [ %trans.0.be, %while.cond.backedge.btrfs_fs_closing.exit_crit_edge ]
  %11 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %flags.i, align 4
  br label %out

if.end4:                                          ; preds = %while.cond.backedge.if.end4_crit_edge, %if.end4.lr.ph
  %trans.0223 = phi ptr [ null, %if.end4.lr.ph ], [ %trans.0.be, %while.cond.backedge.if.end4_crit_edge ]
  %call5 = call i32 @btrfs_search_forward(ptr noundef %1, ptr noundef nonnull %key, ptr noundef nonnull %call, i64 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end10, label %if.then7

if.then7:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #25
  %13 = call i32 @llvm.smin.i32(i32 %call5, i32 0)
  br label %out

if.end10:                                         ; preds = %if.end4
  %14 = ptrtoint ptr %2 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %2, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %15)
  %cmp12.not = icmp eq i8 %15, -124
  br i1 %cmp12.not, label %lor.lhs.false, label %if.end10.skip_crit_edge

if.end10.skip_crit_edge:                          ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  br label %skip

lor.lhs.false:                                    ; preds = %if.end10
  %16 = ptrtoint ptr %key to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %key, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 256, i64 %17)
  %cmp15 = icmp ult i64 %17, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 5, i64 %17)
  %cmp18.not = icmp ne i64 %17, 5
  %or.cond.not = and i1 %cmp15, %cmp18.not
  call void @__sanitizer_cov_trace_const_cmp8(i64 -256, i64 %17)
  %cmp22 = icmp ugt i64 %17, -256
  %or.cond195 = or i1 %cmp22, %or.cond.not
  br i1 %or.cond195, label %lor.lhs.false.skip_crit_edge, label %if.end25

lor.lhs.false.skip_crit_edge:                     ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %skip

if.end25:                                         ; preds = %lor.lhs.false
  %18 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %call, align 4
  %20 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %slots, align 4
  %mul.i.i.i = mul i32 %21, 25
  %add.i.i.i = add i32 %mul.i.i.i, 101
  %22 = inttoptr i32 %add.i.i.i to ptr
  %call.i.i = call i32 @btrfs_get_32(ptr noundef %19, ptr noundef %22, i32 noundef 21) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 439, i32 %call.i.i)
  %cmp28 = icmp ult i32 %call.i.i, 439
  br i1 %cmp28, label %if.end25.skip_crit_edge, label %if.end31

if.end25.skip_crit_edge:                          ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #25
  br label %skip

if.end31:                                         ; preds = %if.end25
  %call.i.i165 = call i32 @btrfs_get_32(ptr noundef %19, ptr noundef %22, i32 noundef 17) #23
  %add = add i32 %call.i.i165, 101
  call void @read_extent_buffer(ptr noundef %19, ptr noundef nonnull %root_item, i32 noundef %add, i32 noundef 439) #23
  %23 = ptrtoint ptr %refs.i to i32
  call void @__asan_loadN_noabort(i32 %23, i32 4)
  %24 = load i32, ptr %refs.i, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %cmp34 = icmp eq i32 %24, 0
  br i1 %cmp34, label %if.end31.skip_crit_edge, label %if.end37

if.end31.skip_crit_edge:                          ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #25
  br label %skip

if.end37:                                         ; preds = %if.end31
  %call38 = call i32 @btrfs_is_empty_uuid(ptr noundef %uuid) #33
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38)
  %tobool39.not = icmp eq i32 %call38, 0
  br i1 %tobool39.not, label %if.end37.if.then44_crit_edge, label %lor.lhs.false40

if.end37.if.then44_crit_edge:                     ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then44

lor.lhs.false40:                                  ; preds = %if.end37
  %call42 = call i32 @btrfs_is_empty_uuid(ptr noundef %received_uuid) #33
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42)
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %lor.lhs.false40.if.then44_crit_edge, label %lor.lhs.false40.skip_crit_edge

lor.lhs.false40.skip_crit_edge:                   ; preds = %lor.lhs.false40
  call void @__sanitizer_cov_trace_pc() #25
  br label %skip

lor.lhs.false40.if.then44_crit_edge:              ; preds = %lor.lhs.false40
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then44

if.then44:                                        ; preds = %lor.lhs.false40.if.then44_crit_edge, %if.end37.if.then44_crit_edge
  %tobool45.not = icmp eq ptr %trans.0223, null
  call void @btrfs_release_path(ptr noundef nonnull %call) #23
  br i1 %tobool45.not, label %if.end47, label %update_tree

if.end47:                                         ; preds = %if.then44
  %25 = ptrtoint ptr %uuid_root to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %uuid_root, align 8
  %call48 = call ptr @btrfs_start_transaction(ptr noundef %26, i32 noundef 2) #23
  %cmp.i = icmp ugt ptr %call48, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then50, label %if.end47.while.cond.backedge_crit_edge

if.end47.while.cond.backedge_crit_edge:           ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.cond.backedge

if.then50:                                        ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #25
  %27 = ptrtoint ptr %call48 to i32
  br label %out

update_tree:                                      ; preds = %if.then44
  %call55 = call i32 @btrfs_is_empty_uuid(ptr noundef %uuid) #33
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call55)
  %tobool56.not = icmp eq i32 %call55, 0
  br i1 %tobool56.not, label %if.then57, label %update_tree.if.end66_crit_edge

update_tree.if.end66_crit_edge:                   ; preds = %update_tree
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end66

if.then57:                                        ; preds = %update_tree
  %28 = ptrtoint ptr %key to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %key, align 8
  %call61 = call i32 @btrfs_uuid_tree_add(ptr noundef nonnull %trans.0223, ptr noundef %uuid, i8 noundef zeroext -5, i64 noundef %29) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call61)
  %cmp62 = icmp slt i32 %call61, 0
  br i1 %cmp62, label %if.then57.out.thread179_crit_edge, label %if.then57.if.end66_crit_edge

if.then57.if.end66_crit_edge:                     ; preds = %if.then57
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end66

if.then57.out.thread179_crit_edge:                ; preds = %if.then57
  call void @__sanitizer_cov_trace_pc() #25
  br label %out.thread179

if.end66:                                         ; preds = %if.then57.if.end66_crit_edge, %update_tree.if.end66_crit_edge
  %call69 = call i32 @btrfs_is_empty_uuid(ptr noundef %received_uuid) #33
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call69)
  %tobool70.not = icmp eq i32 %call69, 0
  br i1 %tobool70.not, label %if.then71, label %if.end66.skip.thread_crit_edge

if.end66.skip.thread_crit_edge:                   ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #25
  br label %skip.thread

if.then71:                                        ; preds = %if.end66
  %30 = ptrtoint ptr %key to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %key, align 8
  %call75 = call i32 @btrfs_uuid_tree_add(ptr noundef nonnull %trans.0223, ptr noundef %received_uuid, i8 noundef zeroext -4, i64 noundef %31) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call75)
  %cmp76 = icmp slt i32 %call75, 0
  br i1 %cmp76, label %if.then71.out.thread179_crit_edge, label %if.then71.skip.thread_crit_edge

if.then71.skip.thread_crit_edge:                  ; preds = %if.then71
  call void @__sanitizer_cov_trace_pc() #25
  br label %skip.thread

if.then71.out.thread179_crit_edge:                ; preds = %if.then71
  call void @__sanitizer_cov_trace_pc() #25
  br label %out.thread179

skip.thread:                                      ; preds = %if.then71.skip.thread_crit_edge, %if.end66.skip.thread_crit_edge
  call void @btrfs_release_path(ptr noundef nonnull %call) #23
  br label %if.then82

skip:                                             ; preds = %lor.lhs.false40.skip_crit_edge, %if.end31.skip_crit_edge, %if.end25.skip_crit_edge, %lor.lhs.false.skip_crit_edge, %if.end10.skip_crit_edge
  call void @btrfs_release_path(ptr noundef nonnull %call) #23
  %tobool81.not = icmp eq ptr %trans.0223, null
  br i1 %tobool81.not, label %skip.if.end87_crit_edge, label %skip.if.then82_crit_edge

skip.if.then82_crit_edge:                         ; preds = %skip
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then82

skip.if.end87_crit_edge:                          ; preds = %skip
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end87

if.then82:                                        ; preds = %skip.if.then82_crit_edge, %skip.thread
  %call83 = call i32 @btrfs_end_transaction(ptr noundef nonnull %trans.0223) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call83)
  %tobool84.not = icmp eq i32 %call83, 0
  br i1 %tobool84.not, label %if.then82.if.end87_crit_edge, label %if.then82.if.end120.thread.thread_crit_edge

if.then82.if.end120.thread.thread_crit_edge:      ; preds = %if.then82
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end120.thread.thread

if.then82.if.end87_crit_edge:                     ; preds = %if.then82
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end87

if.end87:                                         ; preds = %if.then82.if.end87_crit_edge, %skip.if.end87_crit_edge
  %32 = ptrtoint ptr %3 to i32
  call void @__asan_loadN_noabort(i32 %32, i32 8)
  %33 = load i64, ptr %3, align 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %33)
  %cmp89.not = icmp eq i64 %33, -1
  br i1 %cmp89.not, label %if.else93, label %if.then91

if.then91:                                        ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #25
  %inc = add nuw i64 %33, 1
  %34 = ptrtoint ptr %3 to i32
  call void @__asan_storeN_noabort(i32 %34, i32 8)
  store i64 %inc, ptr %3, align 1
  br label %if.end113

if.else93:                                        ; preds = %if.end87
  %35 = ptrtoint ptr %2 to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %2, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %36)
  %cmp96 = icmp ult i8 %36, -124
  br i1 %cmp96, label %if.then98, label %if.else101

if.then98:                                        ; preds = %if.else93
  call void @__sanitizer_cov_trace_pc() #25
  %37 = ptrtoint ptr %3 to i32
  call void @__asan_storeN_noabort(i32 %37, i32 8)
  store i64 0, ptr %3, align 1
  %38 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 -124, ptr %2, align 8
  br label %if.end113

if.else101:                                       ; preds = %if.else93
  %39 = ptrtoint ptr %key to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %key, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %40)
  %cmp103.not = icmp eq i64 %40, -1
  br i1 %cmp103.not, label %if.else123.thread, label %if.then105

if.then105:                                       ; preds = %if.else101
  call void @__sanitizer_cov_trace_pc() #25
  %41 = ptrtoint ptr %3 to i32
  call void @__asan_storeN_noabort(i32 %41, i32 8)
  store i64 0, ptr %3, align 1
  %42 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 -124, ptr %2, align 8
  %inc109 = add nuw i64 %40, 1
  %43 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %inc109, ptr %key, align 8
  br label %if.end113

if.end113:                                        ; preds = %if.then105, %if.then98, %if.then91
  call void @__might_resched(ptr noundef nonnull @.str.9, i32 noundef 4760, i32 noundef 0) #23
  %call.i = call i32 @__cond_resched() #23
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end113, %if.end47.while.cond.backedge_crit_edge
  %trans.0.be = phi ptr [ null, %if.end113 ], [ %call48, %if.end47.while.cond.backedge_crit_edge ]
  %44 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %flags.i, align 4
  %and1.i.i = and i32 %45, 1
  %tobool.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i, label %while.cond.backedge.if.end4_crit_edge, label %while.cond.backedge.btrfs_fs_closing.exit_crit_edge

while.cond.backedge.btrfs_fs_closing.exit_crit_edge: ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_fs_closing.exit

while.cond.backedge.if.end4_crit_edge:            ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end4

out.thread179:                                    ; preds = %if.then71.out.thread179_crit_edge, %if.then57.out.thread179_crit_edge
  %call75.lcssa.sink = phi i32 [ %call61, %if.then57.out.thread179_crit_edge ], [ %call75, %if.then71.out.thread179_crit_edge ]
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %data, ptr noundef nonnull @.str.41, i32 noundef %call75.lcssa.sink) #28
  call void @btrfs_free_path(ptr noundef nonnull %call) #23
  br label %land.lhs.true116

out:                                              ; preds = %if.then50, %if.then7, %btrfs_fs_closing.exit
  %tobool.not.i202 = phi i1 [ false, %if.then7 ], [ false, %if.then50 ], [ true, %btrfs_fs_closing.exit ]
  %ret.4 = phi i32 [ %13, %if.then7 ], [ %27, %if.then50 ], [ 0, %btrfs_fs_closing.exit ]
  %trans.2 = phi ptr [ %trans.0223, %if.then7 ], [ %call48, %if.then50 ], [ %trans.0.lcssa, %btrfs_fs_closing.exit ]
  call void @btrfs_free_path(ptr noundef nonnull %call) #23
  %tobool115.not = icmp eq ptr %trans.2, null
  br i1 %tobool115.not, label %out.if.end120_crit_edge, label %out.land.lhs.true116_crit_edge

out.land.lhs.true116_crit_edge:                   ; preds = %out
  call void @__sanitizer_cov_trace_pc() #25
  br label %land.lhs.true116

out.if.end120_crit_edge:                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end120

land.lhs.true116:                                 ; preds = %out.land.lhs.true116_crit_edge, %out.thread179
  %closing.0.off0186 = phi i1 [ false, %out.thread179 ], [ %tobool.not.i202, %out.land.lhs.true116_crit_edge ]
  %trans.2185 = phi ptr [ %trans.0223, %out.thread179 ], [ %trans.2, %out.land.lhs.true116_crit_edge ]
  %ret.4184 = phi i32 [ %call75.lcssa.sink, %out.thread179 ], [ %ret.4, %out.land.lhs.true116_crit_edge ]
  %cmp.i166 = icmp ugt ptr %trans.2185, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i166, label %land.lhs.true116.if.end120_crit_edge, label %if.then118

land.lhs.true116.if.end120_crit_edge:             ; preds = %land.lhs.true116
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end120

if.then118:                                       ; preds = %land.lhs.true116
  call void @__sanitizer_cov_trace_pc() #25
  %call119 = call i32 @btrfs_end_transaction(ptr noundef nonnull %trans.2185) #23
  br label %if.end120

if.end120:                                        ; preds = %if.then118, %land.lhs.true116.if.end120_crit_edge, %out.if.end120_crit_edge
  %closing.0.off0176 = phi i1 [ %closing.0.off0186, %if.then118 ], [ %closing.0.off0186, %land.lhs.true116.if.end120_crit_edge ], [ %tobool.not.i202, %out.if.end120_crit_edge ]
  %ret.4175 = phi i32 [ %ret.4184, %if.then118 ], [ %ret.4184, %land.lhs.true116.if.end120_crit_edge ], [ %ret.4, %out.if.end120_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.4175)
  %tobool121.not = icmp eq i32 %ret.4175, 0
  br i1 %tobool121.not, label %if.else123, label %if.end120.if.then122_crit_edge

if.end120.if.then122_crit_edge:                   ; preds = %if.end120
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then122

if.end120.thread.thread:                          ; preds = %if.then82.if.end120.thread.thread_crit_edge, %entry.if.end120.thread.thread_crit_edge
  %ret.4.ph.ph = phi i32 [ -12, %entry.if.end120.thread.thread_crit_edge ], [ %call83, %if.then82.if.end120.thread.thread_crit_edge ]
  call void @btrfs_free_path(ptr noundef %call) #23
  br label %if.then122

if.else123.thread:                                ; preds = %if.else101
  call void @__sanitizer_cov_trace_pc() #25
  call void @btrfs_free_path(ptr noundef nonnull %call) #23
  br label %if.then125

if.then122:                                       ; preds = %if.end120.thread.thread, %if.end120.if.then122_crit_edge
  %ret.4175191 = phi i32 [ %ret.4175, %if.end120.if.then122_crit_edge ], [ %ret.4.ph.ph, %if.end120.thread.thread ]
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %data, ptr noundef nonnull @.str.42, i32 noundef %ret.4175191) #28
  br label %if.end127

if.else123:                                       ; preds = %if.end120
  br i1 %closing.0.off0176, label %if.else123.if.end127_crit_edge, label %if.else123.if.then125_crit_edge

if.else123.if.then125_crit_edge:                  ; preds = %if.else123
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then125

if.else123.if.end127_crit_edge:                   ; preds = %if.else123
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end127

if.then125:                                       ; preds = %if.else123.if.then125_crit_edge, %if.else123.thread
  call void @_set_bit(i32 noundef 5, ptr noundef %flags.i) #23
  br label %if.end127

if.end127:                                        ; preds = %if.then125, %if.else123.if.end127_crit_edge, %if.then122
  %uuid_tree_rescan_sem = getelementptr inbounds %struct.btrfs_fs_info, ptr %data, i32 0, i32 155
  call void @up(ptr noundef %uuid_tree_rescan_sem) #23
  call void @llvm.lifetime.end.p0(i64 439, ptr nonnull %root_item) #23
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #23
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_search_forward(ptr noundef, ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @read_extent_buffer(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @btrfs_is_empty_uuid(ptr noundef) local_unnamed_addr #14

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_uuid_tree_add(ptr noundef, ptr noundef, i8 noundef zeroext, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @up(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_create_uuid_tree(ptr noundef %fs_info) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %tree_root1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 2
  %0 = ptrtoint ptr %tree_root1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tree_root1, align 4
  %call = tail call ptr @btrfs_start_transaction(ptr noundef %1, i32 noundef 2) #23
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %2 = ptrtoint ptr %call to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  %call4 = tail call ptr @btrfs_create_tree(ptr noundef %call, i64 noundef 9) #23
  %cmp.i97 = icmp ugt ptr %call4, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i97, label %if.then6, label %if.end51

if.then6:                                         ; preds = %if.end
  %3 = ptrtoint ptr %call4 to i32
  %fs_info8 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call, i32 0, i32 16
  %4 = ptrtoint ptr %fs_info8 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %fs_info8, align 4
  %fs_state = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 149
  %call9 = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool.not = icmp eq i32 %call9, 0
  br i1 %tobool.not, label %if.then10, label %if.then6.if.end47_crit_edge

if.then6.if.end47_crit_edge:                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end47

if.then10:                                        ; preds = %if.then6
  %6 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.206)
  switch i32 %3, label %do.end [
    i32 -5, label %if.then10.do.body31_crit_edge
    i32 -30, label %if.then10.do.body31_crit_edge101
  ]

if.then10.do.body31_crit_edge101:                 ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body31

if.then10.do.body31_crit_edge:                    ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body31

do.end:                                           ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 4794, i32 noundef 9, ptr noundef nonnull @.str.18, i32 noundef %3) #23
  br label %if.end47

do.body31:                                        ; preds = %if.then10.do.body31_crit_edge, %if.then10.do.body31_crit_edge101
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_create_uuid_tree.__UNIQUE_ID_ddebug972, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_create_uuid_tree, %if.then41)) #23
          to label %if.end47 [label %if.then41], !srcloc !431

if.then41:                                        ; preds = %do.body31
  call void @__sanitizer_cov_trace_pc() #25
  %7 = ptrtoint ptr %fs_info8 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fs_info8, align 4
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %8, ptr noundef nonnull @.str.22, i32 noundef %3) #28
  br label %if.end47

if.end47:                                         ; preds = %if.then41, %do.body31, %do.end, %if.then6.if.end47_crit_edge
  tail call void @__btrfs_abort_transaction(ptr noundef %call, ptr noundef nonnull @.str.43, i32 noundef 4794, i32 noundef %3) #28
  %call50 = tail call i32 @btrfs_end_transaction(ptr noundef %call) #23
  br label %cleanup

if.end51:                                         ; preds = %if.end
  %uuid_root52 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 7
  %9 = ptrtoint ptr %uuid_root52 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %call4, ptr %uuid_root52, align 8
  %call53 = tail call i32 @btrfs_commit_transaction(ptr noundef %call) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53)
  %tobool54.not = icmp eq i32 %call53, 0
  br i1 %tobool54.not, label %if.end56, label %if.end51.cleanup_crit_edge

if.end51.cleanup_crit_edge:                       ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end56:                                         ; preds = %if.end51
  %uuid_tree_rescan_sem = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 155
  tail call void @down(ptr noundef %uuid_tree_rescan_sem) #23
  %call57 = tail call ptr (ptr, ptr, i32, ptr, ...) @kthread_create_on_node(ptr noundef nonnull @btrfs_uuid_scan_kthread, ptr noundef %fs_info, i32 noundef -1, ptr noundef nonnull @.str.44) #23
  %cmp.i98 = icmp ugt ptr %call57, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i98, label %if.then64, label %if.end61

if.end61:                                         ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #25
  %call60 = tail call i32 @wake_up_process(ptr noundef %call57) #23
  br label %cleanup

if.then64:                                        ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.45) #28
  tail call void @up(ptr noundef %uuid_tree_rescan_sem) #23
  %10 = ptrtoint ptr %call57 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.then64, %if.end61, %if.end51.cleanup_crit_edge, %if.end47, %if.then
  %retval.0 = phi i32 [ %2, %if.then ], [ %3, %if.end47 ], [ %10, %if.then64 ], [ %call53, %if.end51.cleanup_crit_edge ], [ 0, %if.end61 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_create_tree(ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @down(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @contains_pending_extent(ptr noundef %device, ptr nocapture noundef %start, i64 noundef %len) unnamed_addr #4 align 64 {
entry:
  %physical_start = alloca i64, align 8
  %physical_end = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %physical_start) #23
  %0 = ptrtoint ptr %physical_start to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %physical_start, align 8, !annotation !425
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %physical_end) #23
  %1 = ptrtoint ptr %physical_end to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 -1, ptr %physical_end, align 8, !annotation !425
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.rhs:                                         ; preds = %entry
  %fs_info = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 4
  %3 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_info, align 4
  %dep_map = getelementptr inbounds %struct.btrfs_fs_info, ptr %4, i32 0, i32 50, i32 5
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !424

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 1410, i32 noundef 9, ptr noundef null) #23
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %alloc_state = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 30
  %5 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %start, align 8
  %call24 = call i32 @find_first_extent_bit(ptr noundef %alloc_state, i64 noundef %6, ptr noundef nonnull %physical_start, ptr noundef nonnull %physical_end, i32 noundef 1, ptr noundef null) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.then26, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then26:                                        ; preds = %if.end
  %7 = ptrtoint ptr %physical_start to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %physical_start, align 8
  %9 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %start, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %8, i64 %10)
  %cmp27.not = icmp uge i64 %8, %10
  %add = add i64 %10, %len
  call void @__sanitizer_cov_trace_cmp8(i64 %8, i64 %add)
  %cmp28 = icmp ult i64 %8, %add
  %or.cond = and i1 %cmp27.not, %cmp28
  br i1 %or.cond, label %if.then26.if.then33_crit_edge, label %lor.lhs.false

if.then26.if.then33_crit_edge:                    ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then33

lor.lhs.false:                                    ; preds = %if.then26
  call void @__sanitizer_cov_trace_cmp8(i64 %10, i64 %8)
  %cmp29.not = icmp ult i64 %10, %8
  br i1 %cmp29.not, label %lor.lhs.false.cleanup_crit_edge, label %land.lhs.true30

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

land.lhs.true30:                                  ; preds = %lor.lhs.false
  %11 = ptrtoint ptr %physical_end to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %physical_end, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %10, i64 %12)
  %cmp32 = icmp ult i64 %10, %12
  br i1 %cmp32, label %land.lhs.true30.if.then33_crit_edge, label %land.lhs.true30.cleanup_crit_edge

land.lhs.true30.cleanup_crit_edge:                ; preds = %land.lhs.true30
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

land.lhs.true30.if.then33_crit_edge:              ; preds = %land.lhs.true30
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then33

if.then33:                                        ; preds = %land.lhs.true30.if.then33_crit_edge, %if.then26.if.then33_crit_edge
  %13 = ptrtoint ptr %physical_end to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %physical_end, align 8
  %add34 = add i64 %14, 1
  %15 = ptrtoint ptr %start to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %add34, ptr %start, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.then33, %land.lhs.true30.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi i1 [ true, %if.then33 ], [ false, %lor.lhs.false.cleanup_crit_edge ], [ false, %land.lhs.true30.cleanup_crit_edge ], [ false, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %physical_end) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %physical_start) #23
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_previous_item(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_may_alloc_data_chunk(ptr noundef %fs_info, i64 noundef %chunk_offset) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @btrfs_lookup_block_group(ptr noundef %fs_info, i64 noundef %chunk_offset) #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %cond.false, label %cond.end, !prof !424

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.129, i32 noundef 3400) #32
  unreachable

cond.end:                                         ; preds = %entry
  %flags = getelementptr inbounds %struct.btrfs_block_group, ptr %call, i32 0, i32 10
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %flags, align 8
  tail call void @btrfs_put_block_group(ptr noundef nonnull %call) #23
  %and = and i64 %1, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool3.not = icmp eq i64 %and, 0
  br i1 %tobool3.not, label %cond.end.cleanup21_crit_edge, label %if.end

cond.end.cleanup21_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup21

if.end:                                           ; preds = %cond.end
  %data_sinfo = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 102
  %2 = ptrtoint ptr %data_sinfo to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %data_sinfo, align 4
  tail call void @_raw_spin_lock(ptr noundef %3) #23
  %4 = ptrtoint ptr %data_sinfo to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %data_sinfo, align 4
  %bytes_used5 = getelementptr inbounds %struct.btrfs_space_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %bytes_used5 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %bytes_used5, align 8
  tail call void @_raw_spin_unlock(ptr noundef %5) #23
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %7)
  %tobool8.not = icmp eq i64 %7, 0
  br i1 %tobool8.not, label %if.then9, label %if.end.cleanup21_crit_edge

if.end.cleanup21_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup21

if.then9:                                         ; preds = %if.end
  %tree_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 2
  %8 = ptrtoint ptr %tree_root to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %tree_root, align 4
  %call10 = tail call ptr @btrfs_join_transaction(ptr noundef %9) #23
  %cmp.i = icmp ugt ptr %call10, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #25
  %10 = ptrtoint ptr %call10 to i32
  br label %cleanup21

if.end14:                                         ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #25
  %call15 = tail call i32 @btrfs_force_chunk_alloc(ptr noundef %call10, i64 noundef 1) #23
  %call16 = tail call i32 @btrfs_end_transaction(ptr noundef %call10) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %cmp = icmp slt i32 %call15, 0
  %call15. = select i1 %cmp, i32 %call15, i32 1
  br label %cleanup21

cleanup21:                                        ; preds = %if.end14, %if.then12, %if.end.cleanup21_crit_edge, %cond.end.cleanup21_crit_edge
  %retval.1 = phi i32 [ 0, %cond.end.cleanup21_crit_edge ], [ %10, %if.then12 ], [ %call15., %if.end14 ], [ 0, %if.end.cleanup21_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gather_device_info(ptr noundef readonly %fs_devices, ptr nocapture noundef %ctl, ptr noundef %devices_info) unnamed_addr #4 align 64 {
entry:
  %max_avail = alloca i64, align 8
  %dev_offset = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 19
  %0 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info, align 4
  %max_stripe_size = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 10
  %2 = ptrtoint ptr %max_stripe_size to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %max_stripe_size, align 8
  %dev_stripes = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 4
  %4 = ptrtoint ptr %dev_stripes to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %dev_stripes, align 8
  %conv = sext i32 %5 to i64
  %mul = mul i64 %3, %conv
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %max_avail) #23
  %6 = ptrtoint ptr %max_avail to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 -1, ptr %max_avail, align 8, !annotation !425
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %dev_offset) #23
  %7 = ptrtoint ptr %dev_offset to i32
  call void @__asan_store8_noabort(i32 %7)
  store i64 -1, ptr %dev_offset, align 8, !annotation !425
  %alloc_list = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 14
  %8 = ptrtoint ptr %alloc_list to i32
  call void @__asan_load4_noabort(i32 %8)
  %.pn173 = load ptr, ptr %alloc_list, align 8
  %cmp.not175 = icmp eq ptr %.pn173, %alloc_list
  br i1 %cmp.not175, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %dev_extent_min = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 12
  %rw_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 6
  %mount_opt = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 31
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %.pn177 = phi ptr [ %.pn173, %for.body.lr.ph ], [ %.pn, %for.inc.for.body_crit_edge ]
  %ndevs.0176 = phi i32 [ 0, %for.body.lr.ph ], [ %ndevs.1, %for.inc.for.body_crit_edge ]
  %device.0178 = getelementptr i8, ptr %.pn177, i32 -8
  %dev_state = getelementptr i8, ptr %.pn177, i32 52
  %9 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %dev_state, align 4
  %and1.i = and i32 %10, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %do.end, label %if.end21

do.end:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 5215, i32 noundef 9, ptr noundef nonnull @.str.130) #23
  br label %for.inc

if.end21:                                         ; preds = %for.body
  %11 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %dev_state, align 4
  %13 = and i32 %12, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool24.not = icmp eq i32 %13, 0
  br i1 %tobool24.not, label %if.end21.for.inc_crit_edge, label %lor.lhs.false

if.end21.for.inc_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

lor.lhs.false:                                    ; preds = %if.end21
  %14 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %dev_state, align 4
  %16 = and i32 %15, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool27.not = icmp eq i32 %16, 0
  br i1 %tobool27.not, label %if.end29, label %lor.lhs.false.for.inc_crit_edge

lor.lhs.false.for.inc_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

if.end29:                                         ; preds = %lor.lhs.false
  %total_bytes = getelementptr i8, ptr %.pn177, i32 104
  %17 = ptrtoint ptr %total_bytes to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %total_bytes, align 8
  %bytes_used = getelementptr i8, ptr %.pn177, i32 120
  %19 = ptrtoint ptr %bytes_used to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %bytes_used, align 8
  %21 = call i64 @llvm.usub.sat.i64(i64 %18, i64 %20)
  %22 = ptrtoint ptr %dev_extent_min to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %dev_extent_min, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %21, i64 %23)
  %cmp36 = icmp ult i64 %21, %23
  br i1 %cmp36, label %if.end29.for.inc_crit_edge, label %if.end39

if.end29.for.inc_crit_edge:                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

if.end39:                                         ; preds = %if.end29
  %call40 = call i32 @find_free_dev_extent(ptr noundef %device.0178, i64 noundef %mul, ptr noundef nonnull %dev_offset, ptr noundef nonnull %max_avail)
  %24 = zext i32 %call40 to i64
  call void @__sanitizer_cov_trace_switch(i64 %24, ptr @__sancov_gen_cov_switch_values.207)
  switch i32 %call40, label %if.end39.cleanup_crit_edge [
    i32 0, label %if.then48
    i32 -28, label %if.end39.if.end49_crit_edge
  ]

if.end39.if.end49_crit_edge:                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end49

if.end39.cleanup_crit_edge:                       ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then48:                                        ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #25
  %25 = ptrtoint ptr %max_avail to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %mul, ptr %max_avail, align 8
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %if.end39.if.end49_crit_edge
  %26 = ptrtoint ptr %max_avail to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %max_avail, align 8
  %28 = ptrtoint ptr %dev_extent_min to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %dev_extent_min, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %27, i64 %29)
  %cmp51 = icmp ult i64 %27, %29
  br i1 %cmp51, label %if.then53, label %if.end72

if.then53:                                        ; preds = %if.end49
  %30 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %mount_opt, align 8
  %and = and i32 %31, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool54.not = icmp eq i32 %and, 0
  br i1 %tobool54.not, label %if.then53.for.inc_crit_edge, label %do.body56

if.then53.for.inc_crit_edge:                      ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

do.body56:                                        ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #25
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @gather_device_info.__UNIQUE_ID_ddebug984, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@gather_device_info, %if.then66)) #23
          to label %for.inc [label %if.then66], !srcloc !431

if.then66:                                        ; preds = %do.body56
  call void @__sanitizer_cov_trace_pc() #25
  %devid = getelementptr i8, ptr %.pn177, i32 96
  %32 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %devid, align 8
  %34 = ptrtoint ptr %max_avail to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %max_avail, align 8
  %36 = ptrtoint ptr %dev_extent_min to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %dev_extent_min, align 8
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %1, ptr noundef nonnull @.str.133, ptr noundef nonnull @.str.131, i64 noundef %33, i64 noundef %35, i64 noundef %37) #28
  br label %for.inc

if.end72:                                         ; preds = %if.end49
  %conv73 = sext i32 %ndevs.0176 to i64
  %38 = ptrtoint ptr %rw_devices to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %rw_devices, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %39, i64 %conv73)
  %cmp74 = icmp eq i64 %39, %conv73
  br i1 %cmp74, label %do.end89, label %if.end104

do.end89:                                         ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 5252, i32 noundef 9, ptr noundef nonnull @.str.134, ptr noundef nonnull @.str.131, i64 noundef %conv73) #23
  br label %for.end

if.end104:                                        ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #25
  %40 = ptrtoint ptr %dev_offset to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %dev_offset, align 8
  %arrayidx = getelementptr %struct.btrfs_device_info, ptr %devices_info, i32 %ndevs.0176
  %dev_offset105 = getelementptr %struct.btrfs_device_info, ptr %devices_info, i32 %ndevs.0176, i32 1
  %42 = ptrtoint ptr %dev_offset105 to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %41, ptr %dev_offset105, align 8
  %max_avail107 = getelementptr %struct.btrfs_device_info, ptr %devices_info, i32 %ndevs.0176, i32 2
  %43 = ptrtoint ptr %max_avail107 to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %27, ptr %max_avail107, align 8
  %total_avail109 = getelementptr %struct.btrfs_device_info, ptr %devices_info, i32 %ndevs.0176, i32 3
  %44 = ptrtoint ptr %total_avail109 to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %21, ptr %total_avail109, align 8
  %45 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %device.0178, ptr %arrayidx, align 8
  %inc = add i32 %ndevs.0176, 1
  br label %for.inc

for.inc:                                          ; preds = %if.end104, %if.then66, %do.body56, %if.then53.for.inc_crit_edge, %if.end29.for.inc_crit_edge, %lor.lhs.false.for.inc_crit_edge, %if.end21.for.inc_crit_edge, %do.end
  %ndevs.1 = phi i32 [ %ndevs.0176, %lor.lhs.false.for.inc_crit_edge ], [ %ndevs.0176, %if.end29.for.inc_crit_edge ], [ %ndevs.0176, %if.then66 ], [ %ndevs.0176, %if.then53.for.inc_crit_edge ], [ %inc, %if.end104 ], [ %ndevs.0176, %if.end21.for.inc_crit_edge ], [ %ndevs.0176, %do.end ], [ %ndevs.0176, %do.body56 ]
  %46 = ptrtoint ptr %.pn177 to i32
  call void @__asan_load4_noabort(i32 %46)
  %.pn = load ptr, ptr %.pn177, align 8
  %cmp.not = icmp eq ptr %.pn, %alloc_list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.end89, %entry.for.end_crit_edge
  %ndevs.0171 = phi i32 [ %ndevs.0176, %do.end89 ], [ 0, %entry.for.end_crit_edge ], [ %ndevs.1, %for.inc.for.end_crit_edge ]
  %ndevs116 = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 15
  %47 = ptrtoint ptr %ndevs116 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %ndevs.0171, ptr %ndevs116, align 8
  call void @sort(ptr noundef %devices_info, i32 noundef %ndevs.0171, i32 noundef 32, ptr noundef nonnull @btrfs_cmp_device_info, ptr noundef null) #23
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.end39.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %for.end ], [ %call40, %if.end39.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %dev_offset) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %max_avail) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @decide_stripe_size(ptr nocapture noundef readonly %fs_devices, ptr noundef %ctl, ptr nocapture noundef readonly %devices_info) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 19
  %0 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info, align 4
  %ndevs = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 15
  %2 = ptrtoint ptr %ndevs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ndevs, align 8
  %devs_increment = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 7
  %4 = ptrtoint ptr %devs_increment to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %devs_increment, align 4
  %rem = srem i32 %3, %5
  %sub = sub i32 %3, %rem
  store i32 %sub, ptr %ndevs, align 8
  %devs_min = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 6
  %6 = ptrtoint ptr %devs_min to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %devs_min, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %7)
  %cmp = icmp slt i32 %sub, %7
  br i1 %cmp, label %if.then, label %if.end12

if.then:                                          ; preds = %entry
  %mount_opt = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 31
  %8 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mount_opt, align 8
  %and = and i32 %9, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then.cleanup_crit_edge, label %do.body

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

do.body:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @decide_stripe_size.__UNIQUE_ID_ddebug987, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@decide_stripe_size, %if.then8)) #23
          to label %cleanup [label %if.then8], !srcloc !431

if.then8:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #25
  %10 = ptrtoint ptr %ndevs to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %ndevs, align 8
  %12 = ptrtoint ptr %devs_min to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %devs_min, align 8
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %1, ptr noundef nonnull @.str.137, ptr noundef nonnull @.str.135, i32 noundef %11, i32 noundef %13) #28
  br label %cleanup

if.end12:                                         ; preds = %entry
  %devs_max = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 5
  %14 = ptrtoint ptr %devs_max to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %devs_max, align 4
  %16 = tail call i32 @llvm.smin.i32(i32 %sub, i32 %15)
  %17 = ptrtoint ptr %ndevs to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %ndevs, align 8
  %chunk_alloc_policy = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 24
  %18 = ptrtoint ptr %chunk_alloc_policy to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %chunk_alloc_policy, align 8
  %20 = zext i32 %19 to i64
  call void @__sanitizer_cov_trace_switch(i64 %20, ptr @__sancov_gen_cov_switch_values.208)
  switch i32 %19, label %do.body20 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb18
  ]

sw.bb:                                            ; preds = %if.end12
  %sub.i = add i32 %16, -1
  %max_avail.i = getelementptr %struct.btrfs_device_info, ptr %devices_info, i32 %sub.i, i32 2
  %21 = ptrtoint ptr %max_avail.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %max_avail.i, align 8
  %dev_stripes.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 4
  %23 = ptrtoint ptr %dev_stripes.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %dev_stripes.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %22)
  %cmp164.i.i.i = icmp ult i64 %22, 4294967296
  br i1 %cmp164.i.i.i, label %if.then168.i.i.i, label %if.else174.i.i.i, !prof !423

if.then168.i.i.i:                                 ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i.i.i = trunc i64 %22 to i32
  %div172.i.i.i = udiv i32 %conv169.i.i.i, %24
  %conv173.i.i.i = zext i32 %div172.i.i.i to i64
  br label %div_u64.exit.i

if.else174.i.i.i:                                 ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #25
  %25 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %24, i64 %22) #35, !srcloc !491
  %asmresult1.i.i.i.i = extractvalue { i64, i64 } %25, 1
  br label %div_u64.exit.i

div_u64.exit.i:                                   ; preds = %if.else174.i.i.i, %if.then168.i.i.i
  %dividend.addr.0.i.i.i = phi i64 [ %conv173.i.i.i, %if.then168.i.i.i ], [ %asmresult1.i.i.i.i, %if.else174.i.i.i ]
  %stripe_size.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 13
  %26 = ptrtoint ptr %stripe_size.i to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %dividend.addr.0.i.i.i, ptr %stripe_size.i, align 8
  %mul.i = mul i32 %24, %16
  %num_stripes.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 2
  %27 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %mul.i, ptr %num_stripes.i, align 8
  %nparity.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 9
  %28 = ptrtoint ptr %nparity.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %nparity.i, align 4
  %sub4.i = sub i32 %mul.i, %29
  %ncopies.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 8
  %30 = ptrtoint ptr %ncopies.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ncopies.i, align 8
  %div.i = sdiv i32 %sub4.i, %31
  %conv.i = sext i32 %div.i to i64
  %mul6.i = mul i64 %dividend.addr.0.i.i.i, %conv.i
  %max_chunk_size.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 11
  %32 = ptrtoint ptr %max_chunk_size.i to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %max_chunk_size.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %mul6.i, i64 %33)
  %cmp.i = icmp ugt i64 %mul6.i, %33
  br i1 %cmp.i, label %if.else162.i.i106.i, label %div_u64.exit.i.decide_stripe_size_regular.exit_crit_edge

div_u64.exit.i.decide_stripe_size_regular.exit_crit_edge: ; preds = %div_u64.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %decide_stripe_size_regular.exit

if.else162.i.i106.i:                              ; preds = %div_u64.exit.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %33)
  %cmp164.i.i105.i = icmp ult i64 %33, 4294967296
  br i1 %cmp164.i.i105.i, label %if.then168.i.i110.i, label %if.else174.i.i112.i, !prof !423

if.then168.i.i110.i:                              ; preds = %if.else162.i.i106.i
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i.i107.i = trunc i64 %33 to i32
  %div172.i.i108.i = udiv i32 %conv169.i.i107.i, %div.i
  %conv173.i.i109.i = zext i32 %div172.i.i108.i to i64
  br label %div_u64.exit114.i

if.else174.i.i112.i:                              ; preds = %if.else162.i.i106.i
  call void @__sanitizer_cov_trace_pc() #25
  %34 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %div.i, i64 %33) #35, !srcloc !491
  %asmresult1.i.i.i111.i = extractvalue { i64, i64 } %34, 1
  br label %div_u64.exit114.i

div_u64.exit114.i:                                ; preds = %if.else174.i.i112.i, %if.then168.i.i110.i
  %dividend.addr.0.i.i113.i = phi i64 [ %conv173.i.i109.i, %if.then168.i.i110.i ], [ %asmresult1.i.i.i111.i, %if.else174.i.i112.i ]
  %sub10.i = add i64 %dividend.addr.0.i.i113.i, -1
  %or.i = or i64 %sub10.i, 16777215
  %add.i = add i64 %or.i, 1
  %35 = tail call i64 @llvm.umin.i64(i64 %add.i, i64 %dividend.addr.0.i.i.i) #23
  %36 = ptrtoint ptr %stripe_size.i to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %stripe_size.i, align 8
  br label %decide_stripe_size_regular.exit

decide_stripe_size_regular.exit:                  ; preds = %div_u64.exit114.i, %div_u64.exit.i.decide_stripe_size_regular.exit_crit_edge
  %37 = ptrtoint ptr %stripe_size.i to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %stripe_size.i, align 8
  %and.i = and i64 %38, -65536
  store i64 %and.i, ptr %stripe_size.i, align 8
  %mul19.i = mul i64 %and.i, %conv.i
  %chunk_size.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 14
  %39 = ptrtoint ptr %chunk_size.i to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %mul19.i, ptr %chunk_size.i, align 8
  br label %cleanup

sw.bb18:                                          ; preds = %if.end12
  %sub.i44 = add i32 %16, -1
  %max_avail.i45 = getelementptr %struct.btrfs_device_info, ptr %devices_info, i32 %sub.i44, i32 2
  %40 = ptrtoint ptr %max_avail.i45 to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %max_avail.i45, align 8
  %dev_extent_min.i = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 12
  %42 = ptrtoint ptr %dev_extent_min.i to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %dev_extent_min.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %41, i64 %43)
  %cmp.i46 = icmp eq i64 %41, %43
  br i1 %cmp.i46, label %cond.end.i, label %cond.false.i, !prof !423

cond.false.i:                                     ; preds = %sw.bb18
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.138, i32 noundef 5327) #26
  unreachable

cond.end.i:                                       ; preds = %sw.bb18
  %44 = ptrtoint ptr %devices_info to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %devices_info, align 8
  %zone_info.i = getelementptr inbounds %struct.btrfs_device, ptr %45, i32 0, i32 8
  %46 = ptrtoint ptr %zone_info.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %zone_info.i, align 4
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %47, align 8
  %stripe_size.i47 = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 13
  %50 = ptrtoint ptr %stripe_size.i47 to i32
  call void @__asan_store8_noabort(i32 %50)
  store i64 %49, ptr %stripe_size.i47, align 8
  %dev_stripes.i48 = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 4
  %51 = ptrtoint ptr %dev_stripes.i48 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %dev_stripes.i48, align 8
  %mul.i49 = mul i32 %52, %16
  %num_stripes.i50 = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 2
  %53 = ptrtoint ptr %num_stripes.i50 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %mul.i49, ptr %num_stripes.i50, align 8
  %nparity.i51 = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 9
  %54 = ptrtoint ptr %nparity.i51 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %nparity.i51, align 4
  %sub6.i = sub i32 %mul.i49, %55
  %ncopies.i52 = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 8
  %56 = ptrtoint ptr %ncopies.i52 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %ncopies.i52, align 8
  %div.i53 = sdiv i32 %sub6.i, %57
  %conv.i54 = sext i32 %div.i53 to i64
  %mul8.i = mul i64 %49, %conv.i54
  %max_chunk_size.i55 = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 11
  %58 = ptrtoint ptr %max_chunk_size.i55 to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %max_chunk_size.i55, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %mul8.i, i64 %59)
  %cmp9.i = icmp ugt i64 %mul8.i, %59
  br i1 %cmp9.i, label %if.then.i57, label %cond.end.i.decide_stripe_size_zoned.exit_crit_edge

cond.end.i.decide_stripe_size_zoned.exit_crit_edge: ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %decide_stripe_size_zoned.exit

if.then.i57:                                      ; preds = %cond.end.i
  %conv13.i = sext i32 %57 to i64
  %mul14.i = mul i64 %59, %conv13.i
  %conv16.i = trunc i64 %49 to i32
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %mul14.i)
  %cmp164.i.i.i161 = icmp ult i64 %mul14.i, 4294967296
  br i1 %cmp164.i.i.i161, label %if.then168.i.i.i166, label %if.else174.i.i.i168, !prof !423

if.then168.i.i.i166:                              ; preds = %if.then.i57
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i.i.i163 = trunc i64 %mul14.i to i32
  %div172.i.i.i164 = udiv i32 %conv169.i.i.i163, %conv16.i
  %conv173.i.i.i165 = zext i32 %div172.i.i.i164 to i64
  br label %div_u64.exit.i172

if.else174.i.i.i168:                              ; preds = %if.then.i57
  call void @__sanitizer_cov_trace_pc() #25
  %60 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %conv16.i, i64 %mul14.i) #35, !srcloc !491
  %asmresult1.i.i.i.i167 = extractvalue { i64, i64 } %60, 1
  br label %div_u64.exit.i172

div_u64.exit.i172:                                ; preds = %if.else174.i.i.i168, %if.then168.i.i.i166
  %dividend.addr.0.i.i.i169 = phi i64 [ %conv173.i.i.i165, %if.then168.i.i.i166 ], [ %asmresult1.i.i.i.i167, %if.else174.i.i.i168 ]
  %conv18.i = sext i32 %55 to i64
  %add.i170 = add i64 %dividend.addr.0.i.i.i169, %conv18.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %add.i170)
  %cmp164.i.i105.i276 = icmp ult i64 %add.i170, 4294967296
  br i1 %cmp164.i.i105.i276, label %if.then168.i.i110.i280, label %if.else174.i.i112.i282, !prof !423

if.then168.i.i110.i280:                           ; preds = %div_u64.exit.i172
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i.i107.i278 = trunc i64 %add.i170 to i32
  %div172.i.i108.i279 = udiv i32 %conv169.i.i107.i278, %52
  br label %div_u64.exit114.i283

if.else174.i.i112.i282:                           ; preds = %div_u64.exit.i172
  call void @__sanitizer_cov_trace_pc() #25
  %61 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %52, i64 %add.i170) #35, !srcloc !491
  %asmresult1.i.i.i111.i281 = extractvalue { i64, i64 } %61, 1
  %extract.t116.i = trunc i64 %asmresult1.i.i.i111.i281 to i32
  br label %div_u64.exit114.i283

div_u64.exit114.i283:                             ; preds = %if.else174.i.i112.i282, %if.then168.i.i110.i280
  %dividend.addr.0.i.i113.off0.i = phi i32 [ %div172.i.i108.i279, %if.then168.i.i110.i280 ], [ %extract.t116.i, %if.else174.i.i112.i282 ]
  %62 = ptrtoint ptr %ndevs to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %dividend.addr.0.i.i113.off0.i, ptr %ndevs, align 8
  %mul25.i = mul i32 %dividend.addr.0.i.i113.off0.i, %52
  %63 = ptrtoint ptr %num_stripes.i50 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %mul25.i, ptr %num_stripes.i50, align 8
  %sub29.i = sub i32 %mul25.i, %55
  %div31.i = sdiv i32 %sub29.i, %57
  %conv33.i = sext i32 %div31.i to i64
  %mul34.i = mul i64 %49, %conv33.i
  call void @__sanitizer_cov_trace_cmp8(i64 %mul34.i, i64 %59)
  %cmp36.not.i = icmp ugt i64 %mul34.i, %59
  br i1 %cmp36.not.i, label %cond.false45.i, label %div_u64.exit114.i283.decide_stripe_size_zoned.exit_crit_edge, !prof !424

div_u64.exit114.i283.decide_stripe_size_zoned.exit_crit_edge: ; preds = %div_u64.exit114.i283
  call void @__sanitizer_cov_trace_pc() #25
  br label %decide_stripe_size_zoned.exit

cond.false45.i:                                   ; preds = %div_u64.exit114.i283
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.139, i32 noundef 5340) #26
  unreachable

decide_stripe_size_zoned.exit:                    ; preds = %div_u64.exit114.i283.decide_stripe_size_zoned.exit_crit_edge, %cond.end.i.decide_stripe_size_zoned.exit_crit_edge
  %mul49.pre-phi.i = phi i64 [ %mul34.i, %div_u64.exit114.i283.decide_stripe_size_zoned.exit_crit_edge ], [ %mul8.i, %cond.end.i.decide_stripe_size_zoned.exit_crit_edge ]
  %chunk_size.i284 = getelementptr inbounds %struct.alloc_chunk_ctl, ptr %ctl, i32 0, i32 14
  %64 = ptrtoint ptr %chunk_size.i284 to i32
  call void @__asan_store8_noabort(i32 %64)
  store i64 %mul49.pre-phi.i, ptr %chunk_size.i284, align 8
  br label %cleanup

do.body20:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #25
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5378, 0\0A.popsection", ""() #23, !srcloc !498
  unreachable

cleanup:                                          ; preds = %decide_stripe_size_zoned.exit, %decide_stripe_size_regular.exit, %if.then8, %do.body, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %decide_stripe_size_zoned.exit ], [ 0, %decide_stripe_size_regular.exit ], [ -28, %if.then8 ], [ -28, %if.then.cleanup_crit_edge ], [ -28, %do.body ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_insert_item(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @btrfs_chunk_writeable(ptr noundef %fs_info, i64 noundef %chunk_offset) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @btrfs_get_chunk_map(ptr noundef %fs_info, i64 noundef %chunk_offset, i64 noundef 1)
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %map_lookup = getelementptr inbounds %struct.extent_map, ptr %call, i32 0, i32 12
  %0 = ptrtoint ptr %map_lookup to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %map_lookup, align 4
  %num_stripes = getelementptr inbounds %struct.map_lookup, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %num_stripes to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_stripes, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp34 = icmp sgt i32 %3, 0
  br i1 %cmp34, label %if.end.for.body_crit_edge, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end.for.body_crit_edge
  %i.036 = phi i32 [ %inc13, %for.inc.for.body_crit_edge ], [ 0, %if.end.for.body_crit_edge ]
  %miss_ndevs.035 = phi i32 [ %miss_ndevs.1, %for.inc.for.body_crit_edge ], [ 0, %if.end.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.map_lookup, ptr %1, i32 0, i32 7, i32 %i.036
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 8
  %dev_state = getelementptr inbounds %struct.btrfs_device, ptr %5, i32 0, i32 10
  %6 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %dev_state, align 4
  %8 = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not = icmp eq i32 %8, 0
  br i1 %tobool.not, label %if.end4, label %if.then3

if.then3:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  %inc = add i32 %miss_ndevs.035, 1
  br label %for.inc

if.end4:                                          ; preds = %for.body
  %9 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %dev_state, align 4
  %and1.i32 = and i32 %10, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i32)
  %tobool10.not = icmp eq i32 %and1.i32, 0
  br i1 %tobool10.not, label %if.end4.end_crit_edge, label %if.end4.for.inc_crit_edge

if.end4.for.inc_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

if.end4.end_crit_edge:                            ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #25
  br label %end

for.inc:                                          ; preds = %if.end4.for.inc_crit_edge, %if.then3
  %miss_ndevs.1 = phi i32 [ %inc, %if.then3 ], [ %miss_ndevs.035, %if.end4.for.inc_crit_edge ]
  %inc13 = add nuw nsw i32 %i.036, 1
  %exitcond.not = icmp eq i32 %inc13, %3
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end.for.end_crit_edge
  %miss_ndevs.0.lcssa = phi i32 [ 0, %if.end.for.end_crit_edge ], [ %miss_ndevs.1, %for.inc.for.end_crit_edge ]
  %11 = ptrtoint ptr %1 to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %1, align 8
  %and.i.i = and i64 %12, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.else.i.i, label %for.end.btrfs_chunk_max_errors.exit_crit_edge

for.end.btrfs_chunk_max_errors.exit_crit_edge:    ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_chunk_max_errors.exit

if.else.i.i:                                      ; preds = %for.end
  %and1.i.i = and i64 %12, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i.i)
  %tobool2.not.i.i = icmp eq i64 %and1.i.i, 0
  br i1 %tobool2.not.i.i, label %if.else4.i.i, label %if.else.i.i.btrfs_chunk_max_errors.exit_crit_edge

if.else.i.i.btrfs_chunk_max_errors.exit_crit_edge: ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_chunk_max_errors.exit

if.else4.i.i:                                     ; preds = %if.else.i.i
  %and5.i.i = and i64 %12, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5.i.i)
  %tobool6.not.i.i = icmp eq i64 %and5.i.i, 0
  br i1 %tobool6.not.i.i, label %if.else8.i.i, label %if.else4.i.i.btrfs_chunk_max_errors.exit_crit_edge

if.else4.i.i.btrfs_chunk_max_errors.exit_crit_edge: ; preds = %if.else4.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_chunk_max_errors.exit

if.else8.i.i:                                     ; preds = %if.else4.i.i
  %and9.i.i = and i64 %12, 1024
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and9.i.i)
  %tobool10.not.i.i = icmp eq i64 %and9.i.i, 0
  br i1 %tobool10.not.i.i, label %if.else12.i.i, label %if.else8.i.i.btrfs_chunk_max_errors.exit_crit_edge

if.else8.i.i.btrfs_chunk_max_errors.exit_crit_edge: ; preds = %if.else8.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_chunk_max_errors.exit

if.else12.i.i:                                    ; preds = %if.else8.i.i
  %and13.i.i = and i64 %12, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and13.i.i)
  %tobool14.not.i.i = icmp eq i64 %and13.i.i, 0
  br i1 %tobool14.not.i.i, label %if.else16.i.i, label %if.else12.i.i.btrfs_chunk_max_errors.exit_crit_edge

if.else12.i.i.btrfs_chunk_max_errors.exit_crit_edge: ; preds = %if.else12.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_chunk_max_errors.exit

if.else16.i.i:                                    ; preds = %if.else12.i.i
  %and17.i.i = and i64 %12, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and17.i.i)
  %tobool18.not.i.i = icmp eq i64 %and17.i.i, 0
  br i1 %tobool18.not.i.i, label %if.else20.i.i, label %if.else16.i.i.btrfs_chunk_max_errors.exit_crit_edge

if.else16.i.i.btrfs_chunk_max_errors.exit_crit_edge: ; preds = %if.else16.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_chunk_max_errors.exit

if.else20.i.i:                                    ; preds = %if.else16.i.i
  %and21.i.i = and i64 %12, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and21.i.i)
  %tobool22.not.i.i = icmp eq i64 %and21.i.i, 0
  br i1 %tobool22.not.i.i, label %if.else24.i.i, label %if.else20.i.i.btrfs_chunk_max_errors.exit_crit_edge

if.else20.i.i.btrfs_chunk_max_errors.exit_crit_edge: ; preds = %if.else20.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_chunk_max_errors.exit

if.else24.i.i:                                    ; preds = %if.else20.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %and25.i.i = and i64 %12, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and25.i.i)
  %tobool26.not.i.i = icmp eq i64 %and25.i.i, 0
  %..i.i = select i1 %tobool26.not.i.i, i32 4, i32 6
  br label %btrfs_chunk_max_errors.exit

btrfs_chunk_max_errors.exit:                      ; preds = %if.else24.i.i, %if.else20.i.i.btrfs_chunk_max_errors.exit_crit_edge, %if.else16.i.i.btrfs_chunk_max_errors.exit_crit_edge, %if.else12.i.i.btrfs_chunk_max_errors.exit_crit_edge, %if.else8.i.i.btrfs_chunk_max_errors.exit_crit_edge, %if.else4.i.i.btrfs_chunk_max_errors.exit_crit_edge, %if.else.i.i.btrfs_chunk_max_errors.exit_crit_edge, %for.end.btrfs_chunk_max_errors.exit_crit_edge
  %retval.0.i.i = phi i32 [ 0, %for.end.btrfs_chunk_max_errors.exit_crit_edge ], [ 1, %if.else.i.i.btrfs_chunk_max_errors.exit_crit_edge ], [ 7, %if.else4.i.i.btrfs_chunk_max_errors.exit_crit_edge ], [ 8, %if.else8.i.i.btrfs_chunk_max_errors.exit_crit_edge ], [ 2, %if.else12.i.i.btrfs_chunk_max_errors.exit_crit_edge ], [ 3, %if.else16.i.i.btrfs_chunk_max_errors.exit_crit_edge ], [ 5, %if.else20.i.i.btrfs_chunk_max_errors.exit_crit_edge ], [ %..i.i, %if.else24.i.i ]
  %tolerated_failures.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i, i32 4
  %13 = ptrtoint ptr %tolerated_failures.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %tolerated_failures.i, align 4
  %conv.i = zext i8 %14 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %miss_ndevs.0.lcssa, i32 %conv.i)
  %cmp15 = icmp sle i32 %miss_ndevs.0.lcssa, %conv.i
  br label %end

end:                                              ; preds = %btrfs_chunk_max_errors.exit, %if.end4.end_crit_edge
  %ret.0.off0 = phi i1 [ %cmp15, %btrfs_chunk_max_errors.exit ], [ false, %if.end4.end_crit_edge ]
  tail call void @free_extent_map(ptr noundef %call) #23
  br label %cleanup

cleanup:                                          ; preds = %end, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ %ret.0.off0, %end ], [ false, %entry.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_mapping_tree_free(ptr noundef %tree) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.extent_map_tree, ptr %tree, i32 0, i32 2
  tail call void @_raw_write_lock(ptr noundef %lock) #23
  %call12 = tail call ptr @lookup_extent_mapping(ptr noundef %tree, i64 noundef 0, i64 noundef -1) #23
  %tobool.not13 = icmp eq ptr %call12, null
  br i1 %tobool.not13, label %entry.while.end.critedge_crit_edge, label %entry.if.then_crit_edge

entry.if.then_crit_edge:                          ; preds = %entry
  br label %if.then

entry.while.end.critedge_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end.critedge

if.then:                                          ; preds = %if.then.if.then_crit_edge, %entry.if.then_crit_edge
  %call14 = phi ptr [ %call, %if.then.if.then_crit_edge ], [ %call12, %entry.if.then_crit_edge ]
  tail call void @remove_extent_mapping(ptr noundef %tree, ptr noundef nonnull %call14) #23
  tail call void @_raw_write_unlock(ptr noundef %lock) #23
  tail call void @free_extent_map(ptr noundef nonnull %call14) #23
  tail call void @free_extent_map(ptr noundef nonnull %call14) #23
  tail call void @_raw_write_lock(ptr noundef %lock) #23
  %call = tail call ptr @lookup_extent_mapping(ptr noundef %tree, i64 noundef 0, i64 noundef -1) #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then.while.end.critedge_crit_edge, label %if.then.if.then_crit_edge

if.then.if.then_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then

if.then.while.end.critedge_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end.critedge

while.end.critedge:                               ; preds = %if.then.while.end.critedge_crit_edge, %entry.while.end.critedge_crit_edge
  tail call void @_raw_write_unlock(ptr noundef %lock) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_lock(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @remove_extent_mapping(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_unlock(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_num_copies(ptr noundef %fs_info, i64 noundef %logical, i64 noundef %len) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @btrfs_get_chunk_map(ptr noundef %fs_info, i64 noundef %logical, i64 noundef %len)
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %map_lookup = getelementptr inbounds %struct.extent_map, ptr %call, i32 0, i32 12
  %0 = ptrtoint ptr %map_lookup to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %map_lookup, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %1, align 8
  %and = and i64 %3, 1584
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %num_stripes = getelementptr inbounds %struct.map_lookup, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %num_stripes to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_stripes, align 8
  br label %if.end22

if.else:                                          ; preds = %if.end
  %and4 = and i64 %3, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and4)
  %tobool5.not = icmp eq i64 %and4, 0
  br i1 %tobool5.not, label %if.else7, label %if.then6

if.then6:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  %sub_stripes = getelementptr inbounds %struct.map_lookup, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %sub_stripes to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sub_stripes, align 4
  br label %if.end22

if.else7:                                         ; preds = %if.else
  %and9 = and i64 %3, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and9)
  %tobool10.not = icmp eq i64 %and9, 0
  br i1 %tobool10.not, label %if.else12, label %if.else7.if.end22_crit_edge

if.else7.if.end22_crit_edge:                      ; preds = %if.else7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end22

if.else12:                                        ; preds = %if.else7
  %and14 = and i64 %3, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and14)
  %tobool15.not = icmp eq i64 %and14, 0
  br i1 %tobool15.not, label %if.else12.if.end22_crit_edge, label %if.then16

if.else12.if.end22_crit_edge:                     ; preds = %if.else12
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end22

if.then16:                                        ; preds = %if.else12
  call void @__sanitizer_cov_trace_pc() #25
  %num_stripes17 = getelementptr inbounds %struct.map_lookup, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %num_stripes17 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_stripes17, align 8
  br label %if.end22

if.end22:                                         ; preds = %if.then16, %if.else12.if.end22_crit_edge, %if.else7.if.end22_crit_edge, %if.then6, %if.then2
  %ret.0 = phi i32 [ %5, %if.then2 ], [ %7, %if.then6 ], [ %9, %if.then16 ], [ 2, %if.else7.if.end22_crit_edge ], [ 1, %if.else12.if.end22_crit_edge ]
  tail call void @free_extent_map(ptr noundef %call) #23
  %dev_replace = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 154
  %rwsem = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 154, i32 15
  tail call void @down_read(ptr noundef %rwsem) #23
  %call24 = tail call i32 @btrfs_dev_replace_is_ongoing(ptr noundef %dev_replace) #33
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.end22.if.end29_crit_edge, label %land.lhs.true

if.end22.if.end29_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end29

land.lhs.true:                                    ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #25
  %tgtdev = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 154, i32 13
  %10 = ptrtoint ptr %tgtdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %tgtdev, align 4
  %tobool27.not = icmp ne ptr %11, null
  %inc = zext i1 %tobool27.not to i32
  %spec.select = add i32 %ret.0, %inc
  br label %if.end29

if.end29:                                         ; preds = %land.lhs.true, %if.end22.if.end29_crit_edge
  %ret.1 = phi i32 [ %ret.0, %if.end22.if.end29_crit_edge ], [ %spec.select, %land.lhs.true ]
  tail call void @up_read(ptr noundef %rwsem) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end29, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.1, %if.end29 ], [ 1, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_read(ptr noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @btrfs_dev_replace_is_ongoing(ptr noundef) local_unnamed_addr #14

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_full_stripe_len(ptr noundef %fs_info, i64 noundef %logical) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 167
  %0 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sectorsize, align 4
  %conv = zext i32 %1 to i64
  %call = tail call ptr @btrfs_get_chunk_map(ptr noundef %fs_info, i64 noundef %logical, i64 noundef %conv)
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %do.end, label %if.then21.critedge, !prof !424

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 5806, i32 noundef 9, ptr noundef null) #23
  br label %if.end28

if.then21.critedge:                               ; preds = %entry
  %map_lookup = getelementptr inbounds %struct.extent_map, ptr %call, i32 0, i32 12
  %2 = ptrtoint ptr %map_lookup to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %map_lookup, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %3, align 8
  %and = and i64 %5, 384
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool22.not = icmp eq i64 %and, 0
  br i1 %tobool22.not, label %if.then21.critedge.if.end27_crit_edge, label %if.then23

if.then21.critedge.if.end27_crit_edge:            ; preds = %if.then21.critedge
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end27

if.then23:                                        ; preds = %if.then21.critedge
  call void @__sanitizer_cov_trace_pc() #25
  %stripe_len = getelementptr inbounds %struct.map_lookup, ptr %3, i32 0, i32 3
  %6 = ptrtoint ptr %stripe_len to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %stripe_len, align 8
  %num_stripes.i = getelementptr inbounds %struct.map_lookup, ptr %3, i32 0, i32 4
  %8 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_stripes.i, align 8
  %and.i.i = and i64 %5, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  %10 = trunc i64 %5 to i32
  %11 = lshr i32 %10, 7
  %12 = and i32 %11, 2
  %retval.0.i.i = select i1 %tobool.not.i.i, i32 %12, i32 1
  %sub.i = sub i32 %9, %retval.0.i.i
  %13 = trunc i64 %7 to i32
  %conv26 = mul i32 %sub.i, %13
  br label %if.end27

if.end27:                                         ; preds = %if.then23, %if.then21.critedge.if.end27_crit_edge
  %len.0 = phi i32 [ %conv26, %if.then23 ], [ %1, %if.then21.critedge.if.end27_crit_edge ]
  tail call void @free_extent_map(ptr noundef %call) #23
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %do.end
  %len.1 = phi i32 [ %len.0, %if.end27 ], [ %1, %do.end ]
  ret i32 %len.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_is_parity_mirror(ptr noundef %fs_info, i64 noundef %logical, i64 noundef %len) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @btrfs_get_chunk_map(ptr noundef %fs_info, i64 noundef %logical, i64 noundef %len)
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %do.end, label %if.then21.critedge, !prof !424

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 5823, i32 noundef 9, ptr noundef null) #23
  br label %if.end25

if.then21.critedge:                               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %map_lookup = getelementptr inbounds %struct.extent_map, ptr %call, i32 0, i32 12
  %0 = ptrtoint ptr %map_lookup to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %map_lookup, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %1, align 8
  %and = and i64 %3, 384
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool22.not = icmp ne i64 %and, 0
  %ret.0 = zext i1 %tobool22.not to i32
  tail call void @free_extent_map(ptr noundef %call) #23
  br label %if.end25

if.end25:                                         ; preds = %if.then21.critedge, %do.end
  %ret.1 = phi i32 [ %ret.0, %if.then21.critedge ], [ 0, %do.end ]
  ret i32 %ret.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_get_bioc(ptr noundef %bioc) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %bioc, i32 noundef 4) #23
  %0 = ptrtoint ptr %bioc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %bioc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %do.end, label %entry.if.end_crit_edge, !prof !424

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 5941, i32 noundef 9, ptr noundef null) #23
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %bioc, i32 noundef 4) #23
  tail call void @llvm.prefetch.p0(ptr %bioc, i32 1, i32 3, i32 1) #23
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %bioc, ptr %bioc, i32 1, ptr elementtype(i32) %bioc) #23, !srcloc !499
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %tobool1.not.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i, label %if.end.if.end15.sink.split.i.i.i_crit_edge, label %if.else.i.i.i, !prof !424

if.end.if.end15.sink.split.i.i.i_crit_edge:       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i:                                    ; preds = %if.end
  %add.i.i.i = add i32 %asmresult.i.i.i.i.i, 1
  %3 = or i32 %add.i.i.i, %asmresult.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %3)
  %.not.i.i.i = icmp sgt i32 %3, -1
  br i1 %.not.i.i.i, label %if.else.i.i.i.refcount_inc.exit_crit_edge, label %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, !prof !423

if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i.refcount_inc.exit_crit_edge:        ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %refcount_inc.exit

if.end15.sink.split.i.i.i:                        ; preds = %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, %if.end.if.end15.sink.split.i.i.i_crit_edge
  %.sink.i.i.i = phi i32 [ 2, %if.end.if.end15.sink.split.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %bioc, i32 noundef %.sink.i.i.i) #23
  br label %refcount_inc.exit

refcount_inc.exit:                                ; preds = %if.end15.sink.split.i.i.i, %if.else.i.i.i.refcount_inc.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_put_bioc(ptr noundef %bioc) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %bioc, null
  br i1 %tobool.not, label %entry.if.end2_crit_edge, label %if.end

entry.if.end2_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end2

if.end:                                           ; preds = %entry
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %bioc, i32 noundef 4) #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !500
  tail call void @llvm.prefetch.p0(ptr nonnull %bioc, i32 1, i32 3, i32 1) #23
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %bioc, ptr nonnull %bioc, i32 1, ptr nonnull elementtype(i32) %bioc) #23, !srcloc !501
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.then1, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.if.end2_crit_edge, label %if.then10.i.i.i, !prof !423

if.end5.i.i.i.if.end2_crit_edge:                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end2

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @refcount_warn_saturate(ptr noundef nonnull %bioc, i32 noundef 3) #23
  br label %if.end2

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !502
  tail call void @kfree(ptr noundef nonnull %bioc) #23
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %if.then10.i.i.i, %if.end5.i.i.i.if.end2_crit_edge, %entry.if.end2_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_get_io_geometry(ptr noundef %fs_info, ptr nocapture noundef readonly %em, i32 noundef %op, i64 noundef %logical, ptr nocapture noundef writeonly %io_geom) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %op)
  %cmp.not = icmp eq i32 %op, 2
  br i1 %cmp.not, label %cond.false, label %cond.end, !prof !424

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.53, i32 noundef 6333) #32
  unreachable

cond.end:                                         ; preds = %entry
  %map_lookup = getelementptr inbounds %struct.extent_map, ptr %em, i32 0, i32 12
  %0 = ptrtoint ptr %map_lookup to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %map_lookup, align 4
  %start = getelementptr inbounds %struct.extent_map, ptr %em, i32 0, i32 1
  %2 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %start, align 8
  %sub = sub i64 %logical, %3
  %stripe_len2 = getelementptr inbounds %struct.map_lookup, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %stripe_len2 to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %stripe_len2, align 8
  %call = tail call i64 @div64_u64(i64 noundef %sub, i64 noundef %5) #23
  %mul = mul i64 %call, %5
  call void @__sanitizer_cov_trace_cmp8(i64 %sub, i64 %mul)
  %cmp3 = icmp ult i64 %sub, %mul
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  %6 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %start, align 8
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.54, i64 noundef %mul, i64 noundef %sub, i64 noundef %7, i64 noundef %logical, i64 noundef %5) #28
  br label %cleanup

if.end:                                           ; preds = %cond.end
  %sub5 = sub i64 %sub, %mul
  %num_stripes.i = getelementptr inbounds %struct.map_lookup, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_stripes.i, align 8
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %1, align 8
  %and.i.i = and i64 %11, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  %12 = trunc i64 %11 to i32
  %13 = lshr i32 %12, 7
  %14 = and i32 %13, 2
  %retval.0.i.i = select i1 %tobool.not.i.i, i32 %14, i32 1
  %sub.i = sub i32 %9, %retval.0.i.i
  %and = and i64 %11, 456
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool7.not = icmp eq i64 %and, 0
  br i1 %tobool7.not, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.end
  %sub9 = sub i64 %5, %sub5
  %and11 = and i64 %11, 384
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and11)
  %tobool12.not = icmp eq i64 %and11, 0
  br i1 %tobool12.not, label %if.then8.if.end28_crit_edge, label %if.then13

if.then8.if.end28_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end28

if.then13:                                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #25
  %conv = sext i32 %sub.i to i64
  %mul14 = mul i64 %5, %conv
  %conv16 = and i64 %mul14, 4294967295
  %call17 = tail call i64 @div64_u64(i64 noundef %sub, i64 noundef %conv16) #23
  %mul19 = mul i64 %call17, %conv16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %op)
  %cmp20 = icmp eq i32 %op, 1
  %sub25.neg = sub i64 %mul14, %sub
  %sub26 = add i64 %sub25.neg, %mul19
  %max_len.0 = select i1 %cmp20, i64 %sub26, i64 %sub9
  br label %if.end28

if.end28:                                         ; preds = %if.then13, %if.then8.if.end28_crit_edge
  %raid56_full_stripe_start.0 = phi i64 [ %mul19, %if.then13 ], [ -1, %if.then8.if.end28_crit_edge ]
  %max_len.1 = phi i64 [ %max_len.0, %if.then13 ], [ %sub9, %if.then8.if.end28_crit_edge ]
  %len29 = getelementptr inbounds %struct.extent_map, ptr %em, i32 0, i32 2
  %15 = ptrtoint ptr %len29 to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %len29, align 8
  %sub30 = sub i64 %16, %sub
  %17 = tail call i64 @llvm.umin.i64(i64 %sub30, i64 %max_len.1)
  br label %if.end38

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %len36 = getelementptr inbounds %struct.extent_map, ptr %em, i32 0, i32 2
  %18 = ptrtoint ptr %len36 to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %len36, align 8
  %sub37 = sub i64 %19, %sub
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.end28
  %len.0 = phi i64 [ %17, %if.end28 ], [ %sub37, %if.else ]
  %raid56_full_stripe_start.1 = phi i64 [ %raid56_full_stripe_start.0, %if.end28 ], [ -1, %if.else ]
  %20 = ptrtoint ptr %io_geom to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %len.0, ptr %io_geom, align 8
  %offset40 = getelementptr inbounds %struct.btrfs_io_geometry, ptr %io_geom, i32 0, i32 1
  %21 = ptrtoint ptr %offset40 to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %sub, ptr %offset40, align 8
  %stripe_len41 = getelementptr inbounds %struct.btrfs_io_geometry, ptr %io_geom, i32 0, i32 2
  %22 = ptrtoint ptr %stripe_len41 to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %5, ptr %stripe_len41, align 8
  %stripe_nr42 = getelementptr inbounds %struct.btrfs_io_geometry, ptr %io_geom, i32 0, i32 3
  %23 = ptrtoint ptr %stripe_nr42 to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %call, ptr %stripe_nr42, align 8
  %stripe_offset43 = getelementptr inbounds %struct.btrfs_io_geometry, ptr %io_geom, i32 0, i32 4
  %24 = ptrtoint ptr %stripe_offset43 to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 %sub5, ptr %stripe_offset43, align 8
  %raid56_stripe_offset = getelementptr inbounds %struct.btrfs_io_geometry, ptr %io_geom, i32 0, i32 5
  %25 = ptrtoint ptr %raid56_stripe_offset to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %raid56_full_stripe_start.1, ptr %raid56_stripe_offset, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end38, %if.then
  %retval.0 = phi i32 [ -22, %if.then ], [ 0, %if.end38 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @div64_u64(i64 noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_map_block(ptr noundef %fs_info, i32 noundef %op, i64 noundef %logical, ptr nocapture noundef %length, ptr noundef %bioc_ret, i32 noundef %mirror_num) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %op)
  %cmp = icmp eq i32 %op, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = ptrtoint ptr %length to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %length, align 8
  %tobool.not.i = icmp eq ptr %bioc_ret, null
  br i1 %tobool.not.i, label %cond.false.i, label %cond.end.i, !prof !424

cond.false.i:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.143, i32 noundef 5984) #26
  unreachable

cond.end.i:                                       ; preds = %if.then
  %call.i = tail call ptr @btrfs_get_chunk_map(ptr noundef %fs_info, i64 noundef %logical, i64 noundef %1) #23
  %cmp.i.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #25
  %2 = ptrtoint ptr %call.i to i32
  br label %return

if.end.i:                                         ; preds = %cond.end.i
  %map_lookup.i = getelementptr inbounds %struct.extent_map, ptr %call.i, i32 0, i32 12
  %3 = ptrtoint ptr %map_lookup.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %map_lookup.i, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %4, align 8
  %and.i = and i64 %6, 384
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool5.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool5.not.i, label %if.end7.i, label %if.end.i.out.i_crit_edge

if.end.i.out.i_crit_edge:                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out.i

if.end7.i:                                        ; preds = %if.end.i
  %start.i = getelementptr inbounds %struct.extent_map, ptr %call.i, i32 0, i32 1
  %7 = ptrtoint ptr %start.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %start.i, align 8
  %sub.i = sub i64 %logical, %8
  %len.i = getelementptr inbounds %struct.extent_map, ptr %call.i, i32 0, i32 2
  %9 = ptrtoint ptr %len.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %len.i, align 8
  %add.i = sub i64 %8, %logical
  %sub9.i = add i64 %add.i, %10
  %11 = tail call i64 @llvm.umin.i64(i64 %sub9.i, i64 %1) #23
  %12 = ptrtoint ptr %length to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %length, align 8
  %stripe_len13.i = getelementptr inbounds %struct.map_lookup, ptr %4, i32 0, i32 3
  %13 = ptrtoint ptr %stripe_len13.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %stripe_len13.i, align 8
  %call14.i = tail call i64 @div64_u64(i64 noundef %sub.i, i64 noundef %14) #23
  %mul.i = mul i64 %call14.i, %14
  %sub15.i = sub i64 %sub.i, %mul.i
  %add16.i = add i64 %11, %sub.i
  %sub17.i = add i64 %add16.i, -1
  %15 = ptrtoint ptr %stripe_len13.i to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %stripe_len13.i, align 8
  %sub19.i = add i64 %16, -1
  %or.i = or i64 %sub19.i, %sub17.i
  %add20.i = add i64 %or.i, 1
  %call22.i = tail call i64 @div64_u64(i64 noundef %add20.i, i64 noundef %16) #23
  %sub23.i = sub i64 %call22.i, %call14.i
  %17 = ptrtoint ptr %stripe_len13.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %stripe_len13.i, align 8
  %mul25.i = mul i64 %18, %call22.i
  %sub27.neg.i = sub i64 %add16.i, %mul25.i
  %19 = ptrtoint ptr %4 to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %4, align 8
  %and29.i = and i64 %20, 72
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and29.i)
  %tobool30.not.i = icmp eq i64 %and29.i, 0
  br i1 %tobool30.not.i, label %if.else55.i, label %if.then31.i

if.then31.i:                                      ; preds = %if.end7.i
  %and33.i = and i64 %20, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and33.i)
  %tobool34.not.i = icmp eq i64 %and33.i, 0
  br i1 %tobool34.not.i, label %if.else.i, label %if.then31.i.if.end37.i_crit_edge

if.then31.i.if.end37.i_crit_edge:                 ; preds = %if.then31.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end37.i

if.else.i:                                        ; preds = %if.then31.i
  call void @__sanitizer_cov_trace_pc() #25
  %sub_stripes36.i = getelementptr inbounds %struct.map_lookup, ptr %4, i32 0, i32 5
  %21 = ptrtoint ptr %sub_stripes36.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %sub_stripes36.i, align 4
  br label %if.end37.i

if.end37.i:                                       ; preds = %if.else.i, %if.then31.i.if.end37.i_crit_edge
  %sub_stripes.0.i = phi i32 [ %22, %if.else.i ], [ 1, %if.then31.i.if.end37.i_crit_edge ]
  %num_stripes38.i = getelementptr inbounds %struct.map_lookup, ptr %4, i32 0, i32 4
  %23 = ptrtoint ptr %num_stripes38.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %num_stripes38.i, align 8
  %div.i = udiv i32 %24, %sub_stripes.0.i
  %conv.i = sext i32 %24 to i64
  %conv40.i = zext i32 %sub_stripes.0.i to i64
  %mul41.i = mul i64 %sub23.i, %conv40.i
  %25 = tail call i64 @llvm.umin.i64(i64 %mul41.i, i64 %conv.i) #23
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %call14.i)
  %cmp164.i.i = icmp ult i64 %call14.i, 4294967296
  br i1 %cmp164.i.i, label %if.then168.i.i, label %if.else174.i.i, !prof !423

if.then168.i.i:                                   ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i.i = trunc i64 %call14.i to i32
  %conv169.i.i.frozen = freeze i32 %conv169.i.i
  %div.i.frozen = freeze i32 %div.i
  %div172.i.i = udiv i32 %conv169.i.i.frozen, %div.i.frozen
  %26 = mul i32 %div172.i.i, %div.i.frozen
  %rem170.i.i.decomposed = sub i32 %conv169.i.i.frozen, %26
  %conv173.i.i = zext i32 %div172.i.i to i64
  br label %if.else162.i368.i

if.else174.i.i:                                   ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #25
  %27 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %div.i, i64 %call14.i) #35, !srcloc !491
  %asmresult.i261.i.i = extractvalue { i64, i64 } %27, 0
  %asmresult1.i.i.i = extractvalue { i64, i64 } %27, 1
  %shr.i.i.i = lshr i64 %asmresult.i261.i.i, 32
  %conv.i.i.i = trunc i64 %shr.i.i.i to i32
  br label %if.else162.i368.i

if.else162.i368.i:                                ; preds = %if.else174.i.i, %if.then168.i.i
  %dividend.addr.0.i.i = phi i64 [ %conv173.i.i, %if.then168.i.i ], [ %asmresult1.i.i.i, %if.else174.i.i ]
  %__rem.0.i.i = phi i32 [ %rem170.i.i.decomposed, %if.then168.i.i ], [ %conv.i.i.i, %if.else174.i.i ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %sub23.i)
  %cmp164.i367.i = icmp ult i64 %sub23.i, 4294967296
  br i1 %cmp164.i367.i, label %if.then168.i373.i, label %if.else174.i378.i, !prof !423

if.then168.i373.i:                                ; preds = %if.else162.i368.i
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i369.i = trunc i64 %sub23.i to i32
  %conv169.i369.i.frozen = freeze i32 %conv169.i369.i
  %div.i.frozen7 = freeze i32 %div.i
  %div172.i371.i = udiv i32 %conv169.i369.i.frozen, %div.i.frozen7
  %28 = mul i32 %div172.i371.i, %div.i.frozen7
  %rem170.i370.i.decomposed = sub i32 %conv169.i369.i.frozen, %28
  %conv173.i372.i = zext i32 %div172.i371.i to i64
  br label %if.else162.i496.i

if.else174.i378.i:                                ; preds = %if.else162.i368.i
  call void @__sanitizer_cov_trace_pc() #25
  %29 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %div.i, i64 %sub23.i) #35, !srcloc !491
  %asmresult.i261.i374.i = extractvalue { i64, i64 } %29, 0
  %asmresult1.i.i375.i = extractvalue { i64, i64 } %29, 1
  %shr.i.i376.i = lshr i64 %asmresult.i261.i374.i, 32
  %conv.i.i377.i = trunc i64 %shr.i.i376.i to i32
  br label %if.else162.i496.i

if.else162.i496.i:                                ; preds = %if.else174.i378.i, %if.then168.i373.i
  %dividend.addr.0.i379.i = phi i64 [ %conv173.i372.i, %if.then168.i373.i ], [ %asmresult1.i.i375.i, %if.else174.i378.i ]
  %__rem.0.i380.i = phi i32 [ %rem170.i370.i.decomposed, %if.then168.i373.i ], [ %conv.i.i377.i, %if.else174.i378.i ]
  %sub52.i = add i64 %call22.i, -1
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %sub52.i)
  %cmp164.i495.i = icmp ult i64 %sub52.i, 4294967296
  br i1 %cmp164.i495.i, label %if.then168.i501.i, label %if.else174.i506.i, !prof !423

if.then168.i501.i:                                ; preds = %if.else162.i496.i
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i497.i = trunc i64 %sub52.i to i32
  %rem170.i498.i = urem i32 %conv169.i497.i, %div.i
  br label %div_u64_rem.exit509.i

if.else174.i506.i:                                ; preds = %if.else162.i496.i
  call void @__sanitizer_cov_trace_pc() #25
  %30 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %div.i, i64 %sub52.i) #35, !srcloc !491
  %asmresult.i261.i502.i = extractvalue { i64, i64 } %30, 0
  %shr.i.i504.i = lshr i64 %asmresult.i261.i502.i, 32
  %conv.i.i505.i = trunc i64 %shr.i.i504.i to i32
  br label %div_u64_rem.exit509.i

div_u64_rem.exit509.i:                            ; preds = %if.else174.i506.i, %if.then168.i501.i
  %__rem.0.i508.i = phi i32 [ %rem170.i498.i, %if.then168.i501.i ], [ %conv.i.i505.i, %if.else174.i506.i ]
  %mul50650657.i = mul i32 %__rem.0.i.i, %sub_stripes.0.i
  %mul54.i = mul i32 %__rem.0.i508.i, %sub_stripes.0.i
  br label %if.end66.i

if.else55.i:                                      ; preds = %if.end7.i
  %and57.i = and i64 %20, 1584
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and57.i)
  %tobool58.not.i = icmp eq i64 %and57.i, 0
  %num_stripes63.i = getelementptr inbounds %struct.map_lookup, ptr %4, i32 0, i32 4
  %31 = ptrtoint ptr %num_stripes63.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %num_stripes63.i, align 8
  br i1 %tobool58.not.i, label %if.else162.i624.i, label %if.then59.i

if.then59.i:                                      ; preds = %if.else55.i
  call void @__sanitizer_cov_trace_pc() #25
  %conv61.i = sext i32 %32 to i64
  br label %if.end66.i

if.else162.i624.i:                                ; preds = %if.else55.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %call14.i)
  %cmp164.i623.i = icmp ult i64 %call14.i, 4294967296
  br i1 %cmp164.i623.i, label %if.then168.i629.i, label %if.else174.i634.i, !prof !423

if.then168.i629.i:                                ; preds = %if.else162.i624.i
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i625.i = trunc i64 %call14.i to i32
  %conv169.i625.i.frozen = freeze i32 %conv169.i625.i
  %.frozen = freeze i32 %32
  %div172.i627.i = udiv i32 %conv169.i625.i.frozen, %.frozen
  %33 = mul i32 %div172.i627.i, %.frozen
  %rem170.i626.i.decomposed = sub i32 %conv169.i625.i.frozen, %33
  %conv173.i628.i = zext i32 %div172.i627.i to i64
  br label %if.end66.i

if.else174.i634.i:                                ; preds = %if.else162.i624.i
  call void @__sanitizer_cov_trace_pc() #25
  %34 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %32, i64 %call14.i) #35, !srcloc !491
  %asmresult.i261.i630.i = extractvalue { i64, i64 } %34, 0
  %asmresult1.i.i631.i = extractvalue { i64, i64 } %34, 1
  %shr.i.i632.i = lshr i64 %asmresult.i261.i630.i, 32
  %conv.i.i633.i = trunc i64 %shr.i.i632.i to i32
  br label %if.end66.i

if.end66.i:                                       ; preds = %if.else174.i634.i, %if.then168.i629.i, %if.then59.i, %div_u64_rem.exit509.i
  %stripe_index.0.i = phi i32 [ 0, %if.then59.i ], [ %mul50650657.i, %div_u64_rem.exit509.i ], [ %rem170.i626.i.decomposed, %if.then168.i629.i ], [ %conv.i.i633.i, %if.else174.i634.i ]
  %remaining_stripes.0.i = phi i32 [ 0, %if.then59.i ], [ %__rem.0.i380.i, %div_u64_rem.exit509.i ], [ 0, %if.then168.i629.i ], [ 0, %if.else174.i634.i ]
  %last_stripe.0.i = phi i32 [ 0, %if.then59.i ], [ %mul54.i, %div_u64_rem.exit509.i ], [ 0, %if.then168.i629.i ], [ 0, %if.else174.i634.i ]
  %stripe_nr.0.i = phi i64 [ %call14.i, %if.then59.i ], [ %dividend.addr.0.i.i, %div_u64_rem.exit509.i ], [ %conv173.i628.i, %if.then168.i629.i ], [ %asmresult1.i.i631.i, %if.else174.i634.i ]
  %num_stripes.0.i = phi i64 [ %conv61.i, %if.then59.i ], [ %25, %div_u64_rem.exit509.i ], [ 1, %if.then168.i629.i ], [ 1, %if.else174.i634.i ]
  %sub_stripes.1.i = phi i32 [ 0, %if.then59.i ], [ %sub_stripes.0.i, %div_u64_rem.exit509.i ], [ 0, %if.then168.i629.i ], [ 0, %if.else174.i634.i ]
  %stripes_per_dev.0.i = phi i64 [ 0, %if.then59.i ], [ %dividend.addr.0.i379.i, %div_u64_rem.exit509.i ], [ 0, %if.then168.i629.i ], [ 0, %if.else174.i634.i ]
  %conv67.i = trunc i64 %num_stripes.0.i to i32
  %mul.i638.i = mul i32 %conv67.i, 24
  %add.i639.i = add i32 %mul.i638.i, 64
  %mul3.i.i = shl i32 %conv67.i, 3
  %add2.i.i = add i32 %add.i639.i, %mul3.i.i
  %call9.i.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add2.i.i, i32 noundef 36160) #30
  %error.i.i = getelementptr inbounds %struct.btrfs_io_context, ptr %call9.i.i.i.i, i32 0, i32 7
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %error.i.i, i32 noundef 4) #23
  %35 = ptrtoint ptr %error.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile i32 0, ptr %error.i.i, align 4
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %call9.i.i.i.i, i32 noundef 4) #23
  %36 = ptrtoint ptr %call9.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile i32 1, ptr %call9.i.i.i.i, align 128
  %fs_info5.i.i = getelementptr inbounds %struct.btrfs_io_context, ptr %call9.i.i.i.i, i32 0, i32 2
  %37 = ptrtoint ptr %fs_info5.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %fs_info, ptr %fs_info5.i.i, align 8
  %stripes.i.i = getelementptr inbounds %struct.btrfs_io_context, ptr %call9.i.i.i.i, i32 0, i32 14
  %add.ptr.i.i = getelementptr %struct.btrfs_io_stripe, ptr %stripes.i.i, i32 %conv67.i
  %tgtdev_map.i.i = getelementptr inbounds %struct.btrfs_io_context, ptr %call9.i.i.i.i, i32 0, i32 12
  %38 = ptrtoint ptr %tgtdev_map.i.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %add.ptr.i.i, ptr %tgtdev_map.i.i, align 8
  %raid_map.i.i = getelementptr inbounds %struct.btrfs_io_context, ptr %call9.i.i.i.i, i32 0, i32 13
  %39 = ptrtoint ptr %raid_map.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %add.ptr.i.i, ptr %raid_map.i.i, align 4
  %tobool69.not.i = icmp eq ptr %call9.i.i.i.i, null
  br i1 %tobool69.not.i, label %if.end66.i.out.i_crit_edge, label %for.cond.preheader.i

if.end66.i.out.i_crit_edge:                       ; preds = %if.end66.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out.i

for.cond.preheader.i:                             ; preds = %if.end66.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %num_stripes.0.i)
  %cmp73668.not.i = icmp eq i64 %num_stripes.0.i, 0
  br i1 %cmp73668.not.i, label %for.cond.preheader.i.for.end.i_crit_edge, label %for.body.lr.ph.i

for.cond.preheader.i.for.end.i_crit_edge:         ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %add116.i = add i32 %sub_stripes.1.i, -1
  %sub117.i = add i32 %add116.i, %last_stripe.0.i
  %num_stripes136.i = getelementptr inbounds %struct.map_lookup, ptr %4, i32 0, i32 4
  br label %for.body.i

for.body.i:                                       ; preds = %if.end135.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.0674.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc142.i, %if.end135.i.for.body.i_crit_edge ]
  %stripe_offset.0673.i = phi i64 [ %sub15.i, %for.body.lr.ph.i ], [ %stripe_offset.1.i, %if.end135.i.for.body.i_crit_edge ]
  %stripe_nr.1672.i = phi i64 [ %stripe_nr.0.i, %for.body.lr.ph.i ], [ %spec.select667.i, %if.end135.i.for.body.i_crit_edge ]
  %stripe_index.1669.i = phi i32 [ %stripe_index.0.i, %for.body.lr.ph.i ], [ %spec.select666.i, %if.end135.i.for.body.i_crit_edge ]
  %physical.i = getelementptr %struct.map_lookup, ptr %4, i32 0, i32 7, i32 %stripe_index.1669.i, i32 1
  %40 = ptrtoint ptr %physical.i to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %physical.i, align 8
  %add75.i = add i64 %41, %stripe_offset.0673.i
  %42 = ptrtoint ptr %stripe_len13.i to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %stripe_len13.i, align 8
  %mul77.i = mul i64 %43, %stripe_nr.1672.i
  %add78.i = add i64 %add75.i, %mul77.i
  %arrayidx80.i = getelementptr %struct.btrfs_io_context, ptr %call9.i.i.i.i, i32 0, i32 14, i32 %i.0674.i
  %physical81.i = getelementptr %struct.btrfs_io_context, ptr %call9.i.i.i.i, i32 0, i32 14, i32 %i.0674.i, i32 1
  %44 = ptrtoint ptr %physical81.i to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %add78.i, ptr %physical81.i, align 8
  %arrayidx83.i = getelementptr %struct.map_lookup, ptr %4, i32 0, i32 7, i32 %stripe_index.1669.i
  %45 = ptrtoint ptr %arrayidx83.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %arrayidx83.i, align 8
  %47 = ptrtoint ptr %arrayidx80.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %46, ptr %arrayidx80.i, align 8
  %48 = ptrtoint ptr %4 to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %4, align 8
  %and88.i = and i64 %49, 72
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and88.i)
  %tobool89.not.i = icmp eq i64 %and88.i, 0
  br i1 %tobool89.not.i, label %if.else131.i, label %if.then90.i

if.then90.i:                                      ; preds = %for.body.i
  %50 = ptrtoint ptr %stripe_len13.i to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %stripe_len13.i, align 8
  %mul92.i = mul i64 %51, %stripes_per_dev.0.i
  %length95.i = getelementptr %struct.btrfs_io_context, ptr %call9.i.i.i.i, i32 0, i32 14, i32 %i.0674.i, i32 2
  %52 = ptrtoint ptr %length95.i to i32
  call void @__asan_store8_noabort(i32 %52)
  store i64 %mul92.i, ptr %length95.i, align 8
  %div96.i = udiv i32 %i.0674.i, %sub_stripes.1.i
  call void @__sanitizer_cov_trace_cmp4(i32 %div96.i, i32 %remaining_stripes.0.i)
  %cmp97.i = icmp ult i32 %div96.i, %remaining_stripes.0.i
  br i1 %cmp97.i, label %if.then99.i, label %if.then90.i.if.end105.i_crit_edge

if.then90.i.if.end105.i_crit_edge:                ; preds = %if.then90.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end105.i

if.then99.i:                                      ; preds = %if.then90.i
  call void @__sanitizer_cov_trace_pc() #25
  %53 = ptrtoint ptr %stripe_len13.i to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %stripe_len13.i, align 8
  %add104.i = add i64 %54, %mul92.i
  %55 = ptrtoint ptr %length95.i to i32
  call void @__asan_store8_noabort(i32 %55)
  store i64 %add104.i, ptr %length95.i, align 8
  br label %if.end105.i

if.end105.i:                                      ; preds = %if.then99.i, %if.then90.i.if.end105.i_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0674.i, i32 %sub_stripes.1.i)
  %cmp106.i = icmp ult i32 %i.0674.i, %sub_stripes.1.i
  br i1 %cmp106.i, label %if.then108.i, label %if.end105.i.if.end113.i_crit_edge

if.end105.i.if.end113.i_crit_edge:                ; preds = %if.end105.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end113.i

if.then108.i:                                     ; preds = %if.end105.i
  call void @__sanitizer_cov_trace_pc() #25
  %56 = ptrtoint ptr %length95.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %length95.i, align 8
  %sub112.i = sub i64 %57, %stripe_offset.0673.i
  store i64 %sub112.i, ptr %length95.i, align 8
  br label %if.end113.i

if.end113.i:                                      ; preds = %if.then108.i, %if.end105.i.if.end113.i_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %stripe_index.1669.i, i32 %last_stripe.0.i)
  %cmp114.not.i = icmp ult i32 %stripe_index.1669.i, %last_stripe.0.i
  call void @__sanitizer_cov_trace_cmp4(i32 %stripe_index.1669.i, i32 %sub117.i)
  %cmp118.not.i = icmp ugt i32 %stripe_index.1669.i, %sub117.i
  %or.cond.i = select i1 %cmp114.not.i, i1 true, i1 %cmp118.not.i
  br i1 %or.cond.i, label %if.end113.i.if.end125.i_crit_edge, label %if.then120.i

if.end113.i.if.end125.i_crit_edge:                ; preds = %if.end113.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end125.i

if.then120.i:                                     ; preds = %if.end113.i
  call void @__sanitizer_cov_trace_pc() #25
  %58 = ptrtoint ptr %length95.i to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %length95.i, align 8
  %sub124.i = add i64 %sub27.neg.i, %59
  store i64 %sub124.i, ptr %length95.i, align 8
  br label %if.end125.i

if.end125.i:                                      ; preds = %if.then120.i, %if.end113.i.if.end125.i_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0674.i, i32 %add116.i)
  %cmp127.i = icmp eq i32 %i.0674.i, %add116.i
  %spec.select.i = select i1 %cmp127.i, i64 0, i64 %stripe_offset.0673.i
  br label %if.end135.i

if.else131.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #25
  %length134.i = getelementptr %struct.btrfs_io_context, ptr %call9.i.i.i.i, i32 0, i32 14, i32 %i.0674.i, i32 2
  %60 = ptrtoint ptr %length134.i to i32
  call void @__asan_store8_noabort(i32 %60)
  store i64 %11, ptr %length134.i, align 8
  br label %if.end135.i

if.end135.i:                                      ; preds = %if.else131.i, %if.end125.i
  %stripe_offset.1.i = phi i64 [ %stripe_offset.0673.i, %if.else131.i ], [ %spec.select.i, %if.end125.i ]
  %inc.i = add i32 %stripe_index.1669.i, 1
  %61 = ptrtoint ptr %num_stripes136.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %num_stripes136.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %62)
  %cmp137.i = icmp eq i32 %inc.i, %62
  %spec.select666.i = select i1 %cmp137.i, i32 0, i32 %inc.i
  %inc140.i = zext i1 %cmp137.i to i64
  %spec.select667.i = add i64 %stripe_nr.1672.i, %inc140.i
  %inc142.i = add i32 %i.0674.i, 1
  %conv72.i = sext i32 %inc142.i to i64
  %cmp73.i = icmp ugt i64 %num_stripes.0.i, %conv72.i
  br i1 %cmp73.i, label %if.end135.i.for.body.i_crit_edge, label %if.end135.i.for.end.i_crit_edge

if.end135.i.for.end.i_crit_edge:                  ; preds = %if.end135.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end.i

if.end135.i.for.body.i_crit_edge:                 ; preds = %if.end135.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body.i

for.end.i:                                        ; preds = %if.end135.i.for.end.i_crit_edge, %for.cond.preheader.i.for.end.i_crit_edge
  %63 = ptrtoint ptr %bioc_ret to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %call9.i.i.i.i, ptr %bioc_ret, align 4
  %64 = ptrtoint ptr %4 to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %4, align 8
  %map_type.i = getelementptr inbounds %struct.btrfs_io_context, ptr %call9.i.i.i.i, i32 0, i32 3
  %66 = ptrtoint ptr %map_type.i to i32
  call void @__asan_store8_noabort(i32 %66)
  store i64 %65, ptr %map_type.i, align 16
  %num_stripes145.i = getelementptr inbounds %struct.btrfs_io_context, ptr %call9.i.i.i.i, i32 0, i32 9
  %67 = ptrtoint ptr %num_stripes145.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %conv67.i, ptr %num_stripes145.i, align 4
  br label %out.i

out.i:                                            ; preds = %for.end.i, %if.end66.i.out.i_crit_edge, %if.end.i.out.i_crit_edge
  %ret.0.i = phi i32 [ 0, %for.end.i ], [ -95, %if.end.i.out.i_crit_edge ], [ -12, %if.end66.i.out.i_crit_edge ]
  tail call void @free_extent_map(ptr noundef %call.i) #23
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %call1 = tail call fastcc i32 @__btrfs_map_block(ptr noundef %fs_info, i32 noundef %op, i64 noundef %logical, ptr noundef %length, ptr noundef %bioc_ret, i32 noundef %mirror_num, i32 noundef 0)
  br label %return

return:                                           ; preds = %if.end, %out.i, %if.then.i
  %retval.0 = phi i32 [ %call1, %if.end ], [ %2, %if.then.i ], [ %ret.0.i, %out.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__btrfs_map_block(ptr noundef %fs_info, i32 noundef %op, i64 noundef %logical, ptr nocapture noundef %length, ptr noundef writeonly %bioc_ret, i32 noundef %mirror_num, i32 noundef %need_raid_map) unnamed_addr #4 align 64 {
entry:
  %__tmp.i = alloca %struct.btrfs_io_stripe, align 8
  %length.addr.i = alloca i64, align 8
  %bioc.i = alloca ptr, align 4
  %geom = alloca %struct.btrfs_io_geometry, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %dev_replace1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 154
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %geom) #23
  %0 = getelementptr inbounds %struct.btrfs_io_geometry, ptr %geom, i32 0, i32 2
  %1 = getelementptr inbounds %struct.btrfs_io_geometry, ptr %geom, i32 0, i32 3
  %2 = getelementptr inbounds %struct.btrfs_io_geometry, ptr %geom, i32 0, i32 4
  %3 = getelementptr inbounds %struct.btrfs_io_geometry, ptr %geom, i32 0, i32 5
  %tobool.not = icmp eq ptr %bioc_ret, null
  %4 = call ptr @memset(ptr %geom, i32 255, i32 48)
  br i1 %tobool.not, label %cond.false, label %cond.end, !prof !424

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.143, i32 noundef 6426) #32
  unreachable

cond.end:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %op)
  %cmp.not = icmp eq i32 %op, 2
  br i1 %cmp.not, label %cond.false11, label %cond.end12, !prof !424

cond.false11:                                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.53, i32 noundef 6427) #32
  unreachable

cond.end12:                                       ; preds = %cond.end
  %5 = ptrtoint ptr %length to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %length, align 8
  %call = tail call ptr @btrfs_get_chunk_map(ptr noundef %fs_info, i64 noundef %logical, i64 noundef %6)
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %cond.false23, label %cond.end24, !prof !424

cond.false23:                                     ; preds = %cond.end12
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.144, i32 noundef 6430) #32
  unreachable

cond.end24:                                       ; preds = %cond.end12
  %call25 = call i32 @btrfs_get_io_geometry(ptr noundef %fs_info, ptr noundef %call, i32 noundef %op, i64 noundef %logical, ptr noundef nonnull %geom)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %cmp26 = icmp slt i32 %call25, 0
  br i1 %cmp26, label %cond.end24.cleanup_crit_edge, label %if.end

cond.end24.cleanup_crit_edge:                     ; preds = %cond.end24
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %cond.end24
  %map_lookup = getelementptr inbounds %struct.extent_map, ptr %call, i32 0, i32 12
  %7 = ptrtoint ptr %map_lookup to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %map_lookup, align 4
  %9 = ptrtoint ptr %geom to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %geom, align 8
  %11 = ptrtoint ptr %length to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %length, align 8
  %12 = ptrtoint ptr %0 to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %0, align 8
  %14 = ptrtoint ptr %1 to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %1, align 8
  %16 = ptrtoint ptr %2 to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %2, align 8
  %18 = ptrtoint ptr %3 to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %3, align 8
  %num_stripes.i = getelementptr inbounds %struct.map_lookup, ptr %8, i32 0, i32 4
  %20 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_stripes.i, align 8
  %22 = ptrtoint ptr %8 to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %8, align 8
  %and.i.i = and i64 %23, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  %24 = trunc i64 %23 to i32
  %25 = lshr i32 %24, 7
  %26 = and i32 %25, 2
  %retval.0.i.i = select i1 %tobool.not.i.i, i32 %26, i32 1
  %sub.i = sub i32 %21, %retval.0.i.i
  %rwsem = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 154, i32 15
  tail call void @down_read(ptr noundef %rwsem) #23
  %call31 = tail call i32 @btrfs_dev_replace_is_ongoing(ptr noundef %dev_replace1) #33
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.then33, label %land.lhs.true.critedge

if.then33:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @up_read(ptr noundef %rwsem) #23
  br label %if.else48

land.lhs.true.critedge:                           ; preds = %if.end
  %27 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %num_stripes.i, align 8
  %add = add i32 %28, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %mirror_num)
  %cmp38 = icmp ne i32 %add, %mirror_num
  %29 = and i32 %op, -3
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %29)
  %30 = icmp eq i32 %29, 1
  %or.cond1208 = or i1 %30, %cmp38
  br i1 %or.cond1208, label %land.lhs.true.critedge.if.else48_crit_edge, label %land.lhs.true41

land.lhs.true.critedge.if.else48_crit_edge:       ; preds = %land.lhs.true.critedge
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else48

land.lhs.true41:                                  ; preds = %land.lhs.true.critedge
  %tgtdev = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 154, i32 13
  %31 = ptrtoint ptr %tgtdev to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %tgtdev, align 4
  %cmp42.not = icmp eq ptr %32, null
  br i1 %cmp42.not, label %land.lhs.true41.if.else48_crit_edge, label %if.then43

land.lhs.true41.if.else48_crit_edge:              ; preds = %land.lhs.true41
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else48

if.then43:                                        ; preds = %land.lhs.true41
  %33 = ptrtoint ptr %length to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %length, align 8
  %srcdev = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 154, i32 12
  %35 = ptrtoint ptr %srcdev to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %srcdev, align 8
  %devid = getelementptr inbounds %struct.btrfs_device, ptr %36, i32 0, i32 13
  %37 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %devid, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %length.addr.i)
  %39 = ptrtoint ptr %length.addr.i to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %34, ptr %length.addr.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %bioc.i) #23
  %40 = ptrtoint ptr %bioc.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr null, ptr %bioc.i, align 4
  %call.i = call fastcc i32 @__btrfs_map_block(ptr noundef %fs_info, i32 noundef 3, i64 noundef %logical, ptr noundef nonnull %length.addr.i, ptr noundef nonnull %bioc.i, i32 noundef 0, i32 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  %41 = ptrtoint ptr %bioc.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %bioc.i, align 4
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.then43
  %cmp.i483 = icmp eq ptr %42, null
  br i1 %cmp.i483, label %if.then.i.out.thread_crit_edge, label %cond.false.i, !prof !423

if.then.i.out.thread_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out.thread

cond.false.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.146, i32 noundef 6133) #26
  unreachable

if.end.i:                                         ; preds = %if.then43
  %num_stripes3.i = getelementptr inbounds %struct.btrfs_io_context, ptr %42, i32 0, i32 9
  %43 = ptrtoint ptr %num_stripes3.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %num_stripes3.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %44, i32 %mirror_num)
  %cmp4.i = icmp slt i32 %44, %mirror_num
  br i1 %cmp4.i, label %if.then5.i, label %for.cond.i.preheader

for.cond.i.preheader:                             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %cmp7.i1218 = icmp sgt i32 %44, 0
  br i1 %cmp7.i1218, label %for.cond.i.preheader.for.body.i_crit_edge, label %for.end.i.thread

for.cond.i.preheader.for.body.i_crit_edge:        ; preds = %for.cond.i.preheader
  br label %for.body.i

for.end.i.thread:                                 ; preds = %for.cond.i.preheader
  call void @__sanitizer_cov_trace_pc() #25
  call void @btrfs_put_bioc(ptr noundef %42) #23
  br label %cond.false29.i

if.then5.i:                                       ; preds = %if.end.i
  %tobool.not.i1238 = icmp eq ptr %42, null
  br i1 %tobool.not.i1238, label %if.then5.i.out.thread_crit_edge, label %if.end.i1240

if.then5.i.out.thread_crit_edge:                  ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out.thread

if.end.i1240:                                     ; preds = %if.then5.i
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %42, i32 noundef 4) #23
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !500
  call void @llvm.prefetch.p0(ptr nonnull %42, i32 1, i32 3, i32 1) #23
  %45 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %42, ptr nonnull %42, i32 1, ptr nonnull elementtype(i32) %42) #23, !srcloc !501
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %45, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i1239 = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i1239, label %if.then1.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.end.i1240
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.out.thread_crit_edge, label %if.then10.i.i.i.i, !prof !423

if.end5.i.i.i.i.out.thread_crit_edge:             ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out.thread

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @refcount_warn_saturate(ptr noundef nonnull %42, i32 noundef 3) #23
  br label %out.thread

if.then1.i:                                       ; preds = %if.end.i1240
  call void @__sanitizer_cov_trace_pc() #25
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !502
  call void @kfree(ptr noundef nonnull %42) #23
  br label %out.thread

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.cond.i.preheader.for.body.i_crit_edge
  %i.0.i1222 = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %for.cond.i.preheader.for.body.i_crit_edge ]
  %physical_of_found.0.i1221 = phi i64 [ %physical_of_found.1.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %for.cond.i.preheader.for.body.i_crit_edge ]
  %found.0.i1220 = phi i32 [ %found.1.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %for.cond.i.preheader.for.body.i_crit_edge ]
  %index_srcdev.0.i1219 = phi i32 [ %index_srcdev.1.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %for.cond.i.preheader.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.btrfs_io_context, ptr %42, i32 0, i32 14, i32 %i.0.i1222
  %46 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %arrayidx.i, align 8
  %devid.i = getelementptr inbounds %struct.btrfs_device, ptr %47, i32 0, i32 13
  %48 = ptrtoint ptr %devid.i to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %devid.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %49, i64 %38)
  %cmp8.not.i = icmp eq i64 %49, %38
  br i1 %cmp8.not.i, label %if.end10.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i

if.end10.i:                                       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %found.0.i1220)
  %tobool11.not.i = icmp eq i32 %found.0.i1220, 0
  br i1 %tobool11.not.i, label %if.end10.i.if.end17.i_crit_edge, label %land.lhs.true.i

if.end10.i.if.end17.i_crit_edge:                  ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end17.i

land.lhs.true.i:                                  ; preds = %if.end10.i
  %physical14.i = getelementptr %struct.btrfs_io_context, ptr %42, i32 0, i32 14, i32 %i.0.i1222, i32 1
  %50 = ptrtoint ptr %physical14.i to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %physical14.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %physical_of_found.0.i1221, i64 %51)
  %cmp15.not.i = icmp ugt i64 %physical_of_found.0.i1221, %51
  br i1 %cmp15.not.i, label %land.lhs.true.i.if.end17.i_crit_edge, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i

land.lhs.true.i.if.end17.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end17.i

if.end17.i:                                       ; preds = %land.lhs.true.i.if.end17.i_crit_edge, %if.end10.i.if.end17.i_crit_edge
  %physical20.i = getelementptr %struct.btrfs_io_context, ptr %42, i32 0, i32 14, i32 %i.0.i1222, i32 1
  %52 = ptrtoint ptr %physical20.i to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %physical20.i, align 8
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end17.i, %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %index_srcdev.1.i = phi i32 [ %index_srcdev.0.i1219, %for.body.i.for.inc.i_crit_edge ], [ %index_srcdev.0.i1219, %land.lhs.true.i.for.inc.i_crit_edge ], [ %i.0.i1222, %if.end17.i ]
  %found.1.i = phi i32 [ %found.0.i1220, %for.body.i.for.inc.i_crit_edge ], [ 1, %land.lhs.true.i.for.inc.i_crit_edge ], [ 1, %if.end17.i ]
  %physical_of_found.1.i = phi i64 [ %physical_of_found.0.i1221, %for.body.i.for.inc.i_crit_edge ], [ %physical_of_found.0.i1221, %land.lhs.true.i.for.inc.i_crit_edge ], [ %53, %if.end17.i ]
  %inc.i = add nuw nsw i32 %i.0.i1222, 1
  %exitcond.not = icmp eq i32 %inc.i, %44
  br i1 %exitcond.not, label %for.end.i, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i
  %tobool.not.i1241 = icmp eq ptr %42, null
  br i1 %tobool.not.i1241, label %for.end.i.btrfs_put_bioc.exit1250_crit_edge, label %if.end.i1245

for.end.i.btrfs_put_bioc.exit1250_crit_edge:      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_put_bioc.exit1250

if.end.i1245:                                     ; preds = %for.end.i
  %call.i.i.i.i.i.i1242 = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %42, i32 noundef 4) #23
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !500
  call void @llvm.prefetch.p0(ptr nonnull %42, i32 1, i32 3, i32 1) #23
  %54 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %42, ptr nonnull %42, i32 1, ptr nonnull elementtype(i32) %42) #23, !srcloc !501
  %asmresult.i.i.i.i.i.i.i1243 = extractvalue { i32, i32, i32 } %54, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i1243)
  %cmp.i.i.i.i1244 = icmp eq i32 %asmresult.i.i.i.i.i.i.i1243, 1
  br i1 %cmp.i.i.i.i1244, label %if.then1.i1249, label %if.end5.i.i.i.i1247

if.end5.i.i.i.i1247:                              ; preds = %if.end.i1245
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i1243)
  %.not.i.i.i.i1246 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i1243, 0
  br i1 %.not.i.i.i.i1246, label %if.end5.i.i.i.i1247.btrfs_put_bioc.exit1250_crit_edge, label %if.then10.i.i.i.i1248, !prof !423

if.end5.i.i.i.i1247.btrfs_put_bioc.exit1250_crit_edge: ; preds = %if.end5.i.i.i.i1247
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_put_bioc.exit1250

if.then10.i.i.i.i1248:                            ; preds = %if.end5.i.i.i.i1247
  call void @__sanitizer_cov_trace_pc() #25
  call void @refcount_warn_saturate(ptr noundef nonnull %42, i32 noundef 3) #23
  br label %btrfs_put_bioc.exit1250

if.then1.i1249:                                   ; preds = %if.end.i1245
  call void @__sanitizer_cov_trace_pc() #25
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !502
  call void @kfree(ptr noundef nonnull %42) #23
  br label %btrfs_put_bioc.exit1250

btrfs_put_bioc.exit1250:                          ; preds = %if.then1.i1249, %if.then10.i.i.i.i1248, %if.end5.i.i.i.i1247.btrfs_put_bioc.exit1250_crit_edge, %for.end.i.btrfs_put_bioc.exit1250_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %found.1.i)
  %tobool21.not.i = icmp eq i32 %found.1.i, 0
  br i1 %tobool21.not.i, label %btrfs_put_bioc.exit1250.cond.false29.i_crit_edge, label %get_extra_mirror_from_replace.exit, !prof !424

btrfs_put_bioc.exit1250.cond.false29.i_crit_edge: ; preds = %btrfs_put_bioc.exit1250
  call void @__sanitizer_cov_trace_pc() #25
  br label %cond.false29.i

cond.false29.i:                                   ; preds = %btrfs_put_bioc.exit1250.cond.false29.i_crit_edge, %for.end.i.thread
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.147, i32 noundef 6172) #26
  unreachable

out.thread:                                       ; preds = %if.then1.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.out.thread_crit_edge, %if.then5.i.out.thread_crit_edge, %if.then.i.out.thread_crit_edge
  %retval.0.i.ph = phi i32 [ %call.i, %if.then.i.out.thread_crit_edge ], [ -5, %if.then5.i.out.thread_crit_edge ], [ -5, %if.end5.i.i.i.i.out.thread_crit_edge ], [ -5, %if.then10.i.i.i.i ], [ -5, %if.then1.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %bioc.i) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %length.addr.i)
  br label %do.body307

get_extra_mirror_from_replace.exit:               ; preds = %btrfs_put_bioc.exit1250
  call void @__sanitizer_cov_trace_pc() #25
  %add.i = add i32 %index_srcdev.1.i, 1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %bioc.i) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %length.addr.i)
  br label %if.end53

if.else48:                                        ; preds = %land.lhs.true41.if.else48_crit_edge, %land.lhs.true.critedge.if.else48_crit_edge, %if.then33
  %55 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %num_stripes.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %56, i32 %mirror_num)
  %cmp50 = icmp slt i32 %56, %mirror_num
  %spec.select1209 = select i1 %cmp50, i32 0, i32 %mirror_num
  br label %if.end53

if.end53:                                         ; preds = %if.else48, %get_extra_mirror_from_replace.exit
  %mirror_num.addr.1 = phi i32 [ %add.i, %get_extra_mirror_from_replace.exit ], [ %spec.select1209, %if.else48 ]
  %physical_to_patch_in_first_stripe.1 = phi i64 [ %physical_of_found.1.i, %get_extra_mirror_from_replace.exit ], [ 0, %if.else48 ]
  %tobool261.not = phi i1 [ true, %get_extra_mirror_from_replace.exit ], [ false, %if.else48 ]
  %57 = ptrtoint ptr %8 to i32
  call void @__asan_load8_noabort(i32 %57)
  %58 = load i64, ptr %8, align 8
  %and = and i64 %58, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool54.not = icmp eq i64 %and, 0
  br i1 %tobool54.not, label %if.else61, label %if.then55

if.then55:                                        ; preds = %if.end53
  %59 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %num_stripes.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %15)
  %cmp164.i = icmp ult i64 %15, 4294967296
  br i1 %cmp164.i, label %if.then168.i, label %if.else174.i, !prof !423

if.then168.i:                                     ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i = trunc i64 %15 to i32
  %conv169.i.frozen = freeze i32 %conv169.i
  %.frozen = freeze i32 %60
  %div172.i = udiv i32 %conv169.i.frozen, %.frozen
  %61 = mul i32 %div172.i, %.frozen
  %rem170.i.decomposed = sub i32 %conv169.i.frozen, %61
  %conv173.i = zext i32 %div172.i to i64
  br label %div_u64_rem.exit

if.else174.i:                                     ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #25
  %62 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %60, i64 %15) #35, !srcloc !491
  %asmresult.i261.i = extractvalue { i64, i64 } %62, 0
  %asmresult1.i.i = extractvalue { i64, i64 } %62, 1
  %shr.i.i = lshr i64 %asmresult.i261.i, 32
  %conv.i.i = trunc i64 %shr.i.i to i32
  br label %div_u64_rem.exit

div_u64_rem.exit:                                 ; preds = %if.else174.i, %if.then168.i
  %dividend.addr.0.i = phi i64 [ %conv173.i, %if.then168.i ], [ %asmresult1.i.i, %if.else174.i ]
  %__rem.0.i = phi i32 [ %rem170.i.decomposed, %if.then168.i ], [ %conv.i.i, %if.else174.i ]
  %63 = and i32 %op, -3
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %63)
  %64 = icmp eq i32 %63, 1
  %spec.select1210 = select i1 %64, i32 %mirror_num.addr.1, i32 1
  br label %if.end156

if.else61:                                        ; preds = %if.end53
  %and63 = and i64 %58, 1552
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and63)
  %tobool64.not = icmp eq i64 %and63, 0
  br i1 %tobool64.not, label %if.else77, label %if.then65

if.then65:                                        ; preds = %if.else61
  %65 = and i32 %op, -3
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %65)
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %if.then67, label %if.else69

if.then67:                                        ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #25
  %67 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %num_stripes.i, align 8
  br label %if.end156

if.else69:                                        ; preds = %if.then65
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mirror_num.addr.1)
  %tobool70.not = icmp eq i32 %mirror_num.addr.1, 0
  br i1 %tobool70.not, label %if.else72, label %if.then71

if.then71:                                        ; preds = %if.else69
  call void @__sanitizer_cov_trace_pc() #25
  %sub = add i32 %mirror_num.addr.1, -1
  br label %if.end156

if.else72:                                        ; preds = %if.else69
  call void @__sanitizer_cov_trace_pc() #25
  %call73 = call fastcc i32 @find_live_mirror(ptr noundef %fs_info, ptr noundef %8, i32 noundef 0, i32 noundef %call31)
  %add74 = add i32 %call73, 1
  br label %if.end156

if.else77:                                        ; preds = %if.else61
  %and79 = and i64 %58, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and79)
  %tobool80.not = icmp eq i64 %and79, 0
  br i1 %tobool80.not, label %if.else92, label %if.then81

if.then81:                                        ; preds = %if.else77
  %69 = and i32 %op, -3
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %69)
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %if.then83, label %if.else85

if.then83:                                        ; preds = %if.then81
  call void @__sanitizer_cov_trace_pc() #25
  %71 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %num_stripes.i, align 8
  br label %if.end156

if.else85:                                        ; preds = %if.then81
  call void @__sanitizer_cov_trace_pc() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mirror_num.addr.1)
  %tobool86.not = icmp eq i32 %mirror_num.addr.1, 0
  %sub88 = add i32 %mirror_num.addr.1, -1
  %spec.select1211 = select i1 %tobool86.not, i32 1, i32 %mirror_num.addr.1
  %spec.select1212 = select i1 %tobool86.not, i32 0, i32 %sub88
  br label %if.end156

if.else92:                                        ; preds = %if.else77
  %and94 = and i64 %58, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and94)
  %tobool95.not = icmp eq i64 %and94, 0
  br i1 %tobool95.not, label %if.else114, label %if.then96

if.then96:                                        ; preds = %if.else92
  %73 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %num_stripes.i, align 8
  %sub_stripes = getelementptr inbounds %struct.map_lookup, ptr %8, i32 0, i32 5
  %75 = ptrtoint ptr %sub_stripes to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %sub_stripes, align 4
  %div = sdiv i32 %74, %76
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %15)
  %cmp164.i603 = icmp ult i64 %15, 4294967296
  br i1 %cmp164.i603, label %if.then168.i609, label %if.else174.i614, !prof !423

if.then168.i609:                                  ; preds = %if.then96
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i605 = trunc i64 %15 to i32
  %conv169.i605.frozen = freeze i32 %conv169.i605
  %div.frozen = freeze i32 %div
  %div172.i607 = udiv i32 %conv169.i605.frozen, %div.frozen
  %77 = mul i32 %div172.i607, %div.frozen
  %rem170.i606.decomposed = sub i32 %conv169.i605.frozen, %77
  %conv173.i608 = zext i32 %div172.i607 to i64
  br label %div_u64_rem.exit617

if.else174.i614:                                  ; preds = %if.then96
  call void @__sanitizer_cov_trace_pc() #25
  %78 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %div, i64 %15) #35, !srcloc !491
  %asmresult.i261.i610 = extractvalue { i64, i64 } %78, 0
  %asmresult1.i.i611 = extractvalue { i64, i64 } %78, 1
  %shr.i.i612 = lshr i64 %asmresult.i261.i610, 32
  %conv.i.i613 = trunc i64 %shr.i.i612 to i32
  br label %div_u64_rem.exit617

div_u64_rem.exit617:                              ; preds = %if.else174.i614, %if.then168.i609
  %dividend.addr.0.i615 = phi i64 [ %conv173.i608, %if.then168.i609 ], [ %asmresult1.i.i611, %if.else174.i614 ]
  %__rem.0.i616 = phi i32 [ %rem170.i606.decomposed, %if.then168.i609 ], [ %conv.i.i613, %if.else174.i614 ]
  %mul = mul i32 %__rem.0.i616, %76
  %79 = and i32 %op, -3
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %79)
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %div_u64_rem.exit617.if.end156_crit_edge, label %if.else103

div_u64_rem.exit617.if.end156_crit_edge:          ; preds = %div_u64_rem.exit617
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end156

if.else103:                                       ; preds = %div_u64_rem.exit617
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mirror_num.addr.1)
  %tobool104.not = icmp eq i32 %mirror_num.addr.1, 0
  br i1 %tobool104.not, label %if.else108, label %if.then105

if.then105:                                       ; preds = %if.else103
  call void @__sanitizer_cov_trace_pc() #25
  %sub106 = add i32 %mirror_num.addr.1, -1
  %add107 = add i32 %sub106, %mul
  br label %if.end156

if.else108:                                       ; preds = %if.else103
  call void @__sanitizer_cov_trace_pc() #25
  %call109 = call fastcc i32 @find_live_mirror(ptr noundef %fs_info, ptr noundef %8, i32 noundef %mul, i32 noundef %call31)
  %sub110 = sub i32 1, %mul
  %add111 = add i32 %sub110, %call109
  br label %if.end156

if.else114:                                       ; preds = %if.else92
  %and116 = and i64 %58, 384
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and116)
  %tobool117.not = icmp eq i64 %and116, 0
  br i1 %tobool117.not, label %if.else148, label %if.then118

if.then118:                                       ; preds = %if.else114
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %need_raid_map)
  %tobool119.not = icmp eq i32 %need_raid_map, 0
  br i1 %tobool119.not, label %if.then118.if.else162.i734_crit_edge, label %land.lhs.true120

if.then118.if.else162.i734_crit_edge:             ; preds = %if.then118
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else162.i734

land.lhs.true120:                                 ; preds = %if.then118
  %81 = and i32 %op, -3
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %81)
  %82 = icmp eq i32 %81, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %mirror_num.addr.1)
  %cmp122 = icmp sgt i32 %mirror_num.addr.1, 1
  %or.cond1213 = select i1 %82, i1 true, i1 %cmp122
  br i1 %or.cond1213, label %if.then123, label %land.lhs.true120.if.else162.i734_crit_edge

land.lhs.true120.if.else162.i734_crit_edge:       ; preds = %land.lhs.true120
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else162.i734

if.then123:                                       ; preds = %land.lhs.true120
  call void @__sanitizer_cov_trace_pc() #25
  %conv = sext i32 %sub.i to i64
  %mul124 = mul i64 %13, %conv
  %call125 = call i64 @div64_u64(i64 noundef %19, i64 noundef %mul124) #23
  %83 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %num_stripes.i, align 8
  %85 = ptrtoint ptr %8 to i32
  call void @__asan_load8_noabort(i32 %85)
  %86 = load i64, ptr %8, align 8
  %and.i = and i64 %86, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i618 = icmp eq i64 %and.i, 0
  %87 = trunc i64 %86 to i32
  %88 = lshr i32 %87, 7
  %89 = and i32 %88, 2
  %retval.0.i619 = select i1 %tobool.not.i618, i32 %89, i32 1
  %stripe_len128 = getelementptr inbounds %struct.map_lookup, ptr %8, i32 0, i32 3
  %90 = ptrtoint ptr %stripe_len128 to i32
  call void @__asan_load8_noabort(i32 %90)
  %91 = load i64, ptr %stripe_len128, align 8
  %92 = ptrtoint ptr %length to i32
  call void @__asan_store8_noabort(i32 %92)
  store i64 %91, ptr %length, align 8
  br label %if.end156

if.else162.i734:                                  ; preds = %land.lhs.true120.if.else162.i734_crit_edge, %if.then118.if.else162.i734_crit_edge
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %15)
  %cmp164.i733 = icmp ult i64 %15, 4294967296
  br i1 %cmp164.i733, label %if.then168.i739, label %if.else174.i744, !prof !423

if.then168.i739:                                  ; preds = %if.else162.i734
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i735 = trunc i64 %15 to i32
  %conv169.i735.frozen = freeze i32 %conv169.i735
  %sub.i.frozen = freeze i32 %sub.i
  %div172.i737 = udiv i32 %conv169.i735.frozen, %sub.i.frozen
  %93 = mul i32 %div172.i737, %sub.i.frozen
  %rem170.i736.decomposed = sub i32 %conv169.i735.frozen, %93
  %conv173.i738 = zext i32 %div172.i737 to i64
  br label %div_u64_rem.exit747

if.else174.i744:                                  ; preds = %if.else162.i734
  call void @__sanitizer_cov_trace_pc() #25
  %94 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %sub.i, i64 %15) #35, !srcloc !491
  %asmresult.i261.i740 = extractvalue { i64, i64 } %94, 0
  %asmresult1.i.i741 = extractvalue { i64, i64 } %94, 1
  %shr.i.i742 = lshr i64 %asmresult.i261.i740, 32
  %conv.i.i743 = trunc i64 %shr.i.i742 to i32
  br label %div_u64_rem.exit747

div_u64_rem.exit747:                              ; preds = %if.else174.i744, %if.then168.i739
  %dividend.addr.0.i745 = phi i64 [ %conv173.i738, %if.then168.i739 ], [ %asmresult1.i.i741, %if.else174.i744 ]
  %__rem.0.i746 = phi i32 [ %rem170.i736.decomposed, %if.then168.i739 ], [ %conv.i.i743, %if.else174.i744 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %mirror_num.addr.1)
  %cmp131 = icmp sgt i32 %mirror_num.addr.1, 1
  %add134 = add i32 %sub.i, -2
  %sub135 = add i32 %add134, %mirror_num.addr.1
  %stripe_index.0 = select i1 %cmp131, i32 %sub135, i32 %__rem.0.i746
  %conv137 = zext i32 %stripe_index.0 to i64
  %add138 = add i64 %dividend.addr.0.i745, %conv137
  %95 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %num_stripes.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %add138)
  %cmp164.i861 = icmp ult i64 %add138, 4294967296
  br i1 %cmp164.i861, label %if.then168.i867, label %if.else174.i872, !prof !423

if.then168.i867:                                  ; preds = %div_u64_rem.exit747
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i863 = trunc i64 %add138 to i32
  %rem170.i864 = urem i32 %conv169.i863, %96
  br label %div_u64_rem.exit875

if.else174.i872:                                  ; preds = %div_u64_rem.exit747
  call void @__sanitizer_cov_trace_pc() #25
  %97 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %96, i64 %add138) #35, !srcloc !491
  %asmresult.i261.i868 = extractvalue { i64, i64 } %97, 0
  %shr.i.i870 = lshr i64 %asmresult.i261.i868, 32
  %conv.i.i871 = trunc i64 %shr.i.i870 to i32
  br label %div_u64_rem.exit875

div_u64_rem.exit875:                              ; preds = %if.else174.i872, %if.then168.i867
  %__rem.0.i874 = phi i32 [ %rem170.i864, %if.then168.i867 ], [ %conv.i.i871, %if.else174.i872 ]
  %98 = and i32 %op, -3
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %98)
  %99 = icmp ne i32 %98, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %mirror_num.addr.1)
  %cmp143 = icmp slt i32 %mirror_num.addr.1, 2
  %or.cond1214 = select i1 %99, i1 %cmp143, i1 false
  %spec.select1217 = select i1 %or.cond1214, i32 1, i32 %mirror_num.addr.1
  br label %if.end156

if.else148:                                       ; preds = %if.else114
  %100 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %num_stripes.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %15)
  %cmp164.i989 = icmp ult i64 %15, 4294967296
  br i1 %cmp164.i989, label %if.then168.i995, label %if.else174.i1000, !prof !423

if.then168.i995:                                  ; preds = %if.else148
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i991 = trunc i64 %15 to i32
  %conv169.i991.frozen = freeze i32 %conv169.i991
  %.frozen1251 = freeze i32 %101
  %div172.i993 = udiv i32 %conv169.i991.frozen, %.frozen1251
  %102 = mul i32 %div172.i993, %.frozen1251
  %rem170.i992.decomposed = sub i32 %conv169.i991.frozen, %102
  %conv173.i994 = zext i32 %div172.i993 to i64
  br label %div_u64_rem.exit1003

if.else174.i1000:                                 ; preds = %if.else148
  call void @__sanitizer_cov_trace_pc() #25
  %103 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %101, i64 %15) #35, !srcloc !491
  %asmresult.i261.i996 = extractvalue { i64, i64 } %103, 0
  %asmresult1.i.i997 = extractvalue { i64, i64 } %103, 1
  %shr.i.i998 = lshr i64 %asmresult.i261.i996, 32
  %conv.i.i999 = trunc i64 %shr.i.i998 to i32
  br label %div_u64_rem.exit1003

div_u64_rem.exit1003:                             ; preds = %if.else174.i1000, %if.then168.i995
  %dividend.addr.0.i1001 = phi i64 [ %conv173.i994, %if.then168.i995 ], [ %asmresult1.i.i997, %if.else174.i1000 ]
  %__rem.0.i1002 = phi i32 [ %rem170.i992.decomposed, %if.then168.i995 ], [ %conv.i.i999, %if.else174.i1000 ]
  %add151 = add i32 %__rem.0.i1002, 1
  br label %if.end156

if.end156:                                        ; preds = %div_u64_rem.exit1003, %div_u64_rem.exit875, %if.then123, %if.else108, %if.then105, %div_u64_rem.exit617.if.end156_crit_edge, %if.else85, %if.then83, %if.else72, %if.then71, %if.then67, %div_u64_rem.exit
  %mirror_num.addr.2 = phi i32 [ %add151, %div_u64_rem.exit1003 ], [ %mirror_num.addr.1, %if.then123 ], [ %add111, %if.else108 ], [ %mirror_num.addr.1, %if.then105 ], [ %mirror_num.addr.1, %if.then83 ], [ %mirror_num.addr.1, %if.then67 ], [ %add74, %if.else72 ], [ %mirror_num.addr.1, %if.then71 ], [ %mirror_num.addr.1, %div_u64_rem.exit617.if.end156_crit_edge ], [ %spec.select1210, %div_u64_rem.exit ], [ %spec.select1211, %if.else85 ], [ %spec.select1217, %div_u64_rem.exit875 ]
  %stripe_index.1 = phi i32 [ %__rem.0.i1002, %div_u64_rem.exit1003 ], [ 0, %if.then123 ], [ %call109, %if.else108 ], [ %add107, %if.then105 ], [ 0, %if.then83 ], [ 0, %if.then67 ], [ %call73, %if.else72 ], [ %sub, %if.then71 ], [ %mul, %div_u64_rem.exit617.if.end156_crit_edge ], [ %__rem.0.i, %div_u64_rem.exit ], [ %spec.select1212, %if.else85 ], [ %__rem.0.i874, %div_u64_rem.exit875 ]
  %num_stripes.0 = phi i32 [ 1, %div_u64_rem.exit1003 ], [ %84, %if.then123 ], [ 1, %if.else108 ], [ 1, %if.then105 ], [ %72, %if.then83 ], [ %68, %if.then67 ], [ 1, %if.else72 ], [ 1, %if.then71 ], [ %76, %div_u64_rem.exit617.if.end156_crit_edge ], [ 1, %div_u64_rem.exit ], [ 1, %if.else85 ], [ 1, %div_u64_rem.exit875 ]
  %max_errors.0 = phi i32 [ 0, %div_u64_rem.exit1003 ], [ %retval.0.i619, %if.then123 ], [ 0, %if.else108 ], [ 0, %if.then105 ], [ 0, %if.then83 ], [ 0, %if.then67 ], [ 0, %if.else72 ], [ 0, %if.then71 ], [ 0, %div_u64_rem.exit617.if.end156_crit_edge ], [ 0, %div_u64_rem.exit ], [ 0, %if.else85 ], [ 0, %div_u64_rem.exit875 ]
  %stripe_nr.0 = phi i64 [ %dividend.addr.0.i1001, %div_u64_rem.exit1003 ], [ %call125, %if.then123 ], [ %dividend.addr.0.i615, %if.else108 ], [ %dividend.addr.0.i615, %if.then105 ], [ %15, %if.then83 ], [ %15, %if.then67 ], [ %15, %if.else72 ], [ %15, %if.then71 ], [ %dividend.addr.0.i615, %div_u64_rem.exit617.if.end156_crit_edge ], [ %dividend.addr.0.i, %div_u64_rem.exit ], [ %15, %if.else85 ], [ %dividend.addr.0.i745, %div_u64_rem.exit875 ]
  %stripe_offset.0 = phi i64 [ %17, %div_u64_rem.exit1003 ], [ 0, %if.then123 ], [ %17, %if.else108 ], [ %17, %if.then105 ], [ %17, %if.then83 ], [ %17, %if.then67 ], [ %17, %if.else72 ], [ %17, %if.then71 ], [ %17, %div_u64_rem.exit617.if.end156_crit_edge ], [ %17, %div_u64_rem.exit ], [ %17, %if.else85 ], [ %17, %div_u64_rem.exit875 ]
  %104 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %num_stripes.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %stripe_index.1, i32 %105)
  %cmp158.not = icmp ult i32 %stripe_index.1, %105
  br i1 %cmp158.not, label %if.end162, label %if.then160

if.then160:                                       ; preds = %if.end156
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.145, i32 noundef %stripe_index.1, i32 noundef %105) #28
  br label %out

if.end162:                                        ; preds = %if.end156
  br i1 %tobool32.not, label %if.end162.if.end8.i.i.i_crit_edge, label %land.lhs.true164

if.end162.if.end8.i.i.i_crit_edge:                ; preds = %if.end162
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end8.i.i.i

land.lhs.true164:                                 ; preds = %if.end162
  %tgtdev165 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 154, i32 13
  %106 = ptrtoint ptr %tgtdev165 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %tgtdev165, align 4
  %cmp166.not = icmp eq ptr %107, null
  br i1 %cmp166.not, label %land.lhs.true164.if.end8.i.i.i_crit_edge, label %if.then168

land.lhs.true164.if.end8.i.i.i_crit_edge:         ; preds = %land.lhs.true164
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end8.i.i.i

if.then168:                                       ; preds = %land.lhs.true164
  call void @__sanitizer_cov_trace_pc() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %op)
  %cmp169 = icmp eq i32 %op, 1
  %shl = zext i1 %cmp169 to i32
  %spec.select = shl i32 %num_stripes.0, %shl
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %op)
  %cmp173 = icmp eq i32 %op, 3
  %inc = zext i1 %cmp173 to i32
  %num_alloc_stripes.1 = add i32 %spec.select, %inc
  br label %if.end8.i.i.i

if.end8.i.i.i:                                    ; preds = %if.then168, %land.lhs.true164.if.end8.i.i.i_crit_edge, %if.end162.if.end8.i.i.i_crit_edge
  %tgtdev_indexes.0 = phi i32 [ %num_stripes.0, %if.then168 ], [ 0, %land.lhs.true164.if.end8.i.i.i_crit_edge ], [ 0, %if.end162.if.end8.i.i.i_crit_edge ]
  %num_alloc_stripes.2 = phi i32 [ %num_alloc_stripes.1, %if.then168 ], [ %num_stripes.0, %land.lhs.true164.if.end8.i.i.i_crit_edge ], [ %num_stripes.0, %if.end162.if.end8.i.i.i_crit_edge ]
  %mul1.i = shl i32 %tgtdev_indexes.0, 2
  %add2.i = add i32 %mul1.i, 64
  %reass.mul = shl i32 %num_alloc_stripes.2, 5
  %add4.i = add i32 %add2.i, %reass.mul
  %call9.i.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %add4.i, i32 noundef 36160) #30
  %error.i = getelementptr inbounds %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 7
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %error.i, i32 noundef 4) #23
  %108 = ptrtoint ptr %error.i to i32
  call void @__asan_store4_noabort(i32 %108)
  store volatile i32 0, ptr %error.i, align 4
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %call9.i.i.i, i32 noundef 4) #23
  %109 = ptrtoint ptr %call9.i.i.i to i32
  call void @__asan_store4_noabort(i32 %109)
  store volatile i32 1, ptr %call9.i.i.i, align 128
  %fs_info5.i = getelementptr inbounds %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 2
  %110 = ptrtoint ptr %fs_info5.i to i32
  call void @__asan_store4_noabort(i32 %110)
  store ptr %fs_info, ptr %fs_info5.i, align 8
  %stripes.i = getelementptr inbounds %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 14
  %add.ptr.i = getelementptr %struct.btrfs_io_stripe, ptr %stripes.i, i32 %num_alloc_stripes.2
  %tgtdev_map.i = getelementptr inbounds %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 12
  %111 = ptrtoint ptr %tgtdev_map.i to i32
  call void @__asan_store4_noabort(i32 %111)
  store ptr %add.ptr.i, ptr %tgtdev_map.i, align 8
  %add.ptr7.i = getelementptr i32, ptr %add.ptr.i, i32 %tgtdev_indexes.0
  %raid_map.i = getelementptr inbounds %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 13
  %112 = ptrtoint ptr %raid_map.i to i32
  call void @__asan_store4_noabort(i32 %112)
  store ptr %add.ptr7.i, ptr %raid_map.i, align 4
  %tobool179.not = icmp eq ptr %call9.i.i.i, null
  br i1 %tobool179.not, label %if.end8.i.i.i.out_crit_edge, label %for.cond.preheader

if.end8.i.i.i.out_crit_edge:                      ; preds = %if.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

for.cond.preheader:                               ; preds = %if.end8.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num_stripes.0)
  %cmp1821226 = icmp sgt i32 %num_stripes.0, 0
  br i1 %cmp1821226, label %for.body.lr.ph, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %stripe_len185 = getelementptr inbounds %struct.map_lookup, ptr %8, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.01228 = phi i32 [ 0, %for.body.lr.ph ], [ %inc197, %for.body.for.body_crit_edge ]
  %stripe_index.21227 = phi i32 [ %stripe_index.1, %for.body.lr.ph ], [ %inc196, %for.body.for.body_crit_edge ]
  %physical = getelementptr %struct.map_lookup, ptr %8, i32 0, i32 7, i32 %stripe_index.21227, i32 1
  %113 = ptrtoint ptr %physical to i32
  call void @__asan_load8_noabort(i32 %113)
  %114 = load i64, ptr %physical, align 8
  %add184 = add i64 %114, %stripe_offset.0
  %115 = ptrtoint ptr %stripe_len185 to i32
  call void @__asan_load8_noabort(i32 %115)
  %116 = load i64, ptr %stripe_len185, align 8
  %mul186 = mul i64 %116, %stripe_nr.0
  %add187 = add i64 %add184, %mul186
  %physical190 = getelementptr %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 14, i32 %i.01228, i32 1
  %117 = ptrtoint ptr %physical190 to i32
  call void @__asan_store8_noabort(i32 %117)
  store i64 %add187, ptr %physical190, align 8
  %arrayidx192 = getelementptr %struct.map_lookup, ptr %8, i32 0, i32 7, i32 %stripe_index.21227
  %118 = ptrtoint ptr %arrayidx192 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %arrayidx192, align 8
  %arrayidx194 = getelementptr %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 14, i32 %i.01228
  %120 = ptrtoint ptr %arrayidx194 to i32
  call void @__asan_store4_noabort(i32 %120)
  store ptr %119, ptr %arrayidx194, align 8
  %inc196 = add i32 %stripe_index.21227, 1
  %inc197 = add nuw nsw i32 %i.01228, 1
  %exitcond1232.not = icmp eq i32 %inc197, %num_stripes.0
  br i1 %exitcond1232.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %121 = ptrtoint ptr %8 to i32
  call void @__asan_load8_noabort(i32 %121)
  %122 = load i64, ptr %8, align 8
  %and199 = and i64 %122, 384
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and199)
  %tobool200.not = icmp eq i64 %and199, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %need_raid_map)
  %tobool202.not = icmp eq i32 %need_raid_map, 0
  %or.cond = or i1 %tobool202.not, %tobool200.not
  %.pre = and i32 %op, -3
  br i1 %or.cond, label %for.end.if.end242_crit_edge, label %land.lhs.true203

for.end.if.end242_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end242

land.lhs.true203:                                 ; preds = %for.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %.pre)
  %123 = icmp eq i32 %.pre, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %mirror_num.addr.2)
  %cmp207 = icmp sgt i32 %mirror_num.addr.2, 1
  %or.cond1215 = select i1 %123, i1 true, i1 %cmp207
  br i1 %or.cond1215, label %if.else162.i1120, label %land.lhs.true203.if.end242_crit_edge

land.lhs.true203.if.end242_crit_edge:             ; preds = %land.lhs.true203
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end242

if.else162.i1120:                                 ; preds = %land.lhs.true203
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %stripe_nr.0)
  %cmp164.i1119 = icmp ult i64 %stripe_nr.0, 4294967296
  br i1 %cmp164.i1119, label %if.then168.i1125, label %if.else174.i1130, !prof !423

if.then168.i1125:                                 ; preds = %if.else162.i1120
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i1121 = trunc i64 %stripe_nr.0 to i32
  %rem170.i1122 = urem i32 %conv169.i1121, %num_stripes.0
  br label %div_u64_rem.exit1133

if.else174.i1130:                                 ; preds = %if.else162.i1120
  call void @__sanitizer_cov_trace_pc() #25
  %124 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %num_stripes.0, i64 %stripe_nr.0) #35, !srcloc !491
  %asmresult.i261.i1126 = extractvalue { i64, i64 } %124, 0
  %shr.i.i1128 = lshr i64 %asmresult.i261.i1126, 32
  %conv.i.i1129 = trunc i64 %shr.i.i1128 to i32
  br label %div_u64_rem.exit1133

div_u64_rem.exit1133:                             ; preds = %if.else174.i1130, %if.then168.i1125
  %__rem.0.i1132 = phi i32 [ %rem170.i1122, %if.then168.i1125 ], [ %conv.i.i1129, %if.else174.i1130 ]
  %conv211 = sext i32 %sub.i to i64
  %mul212 = mul i64 %stripe_nr.0, %conv211
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp2141229 = icmp sgt i32 %sub.i, 0
  br i1 %cmp2141229, label %for.body216.lr.ph, label %div_u64_rem.exit1133.for.end226_crit_edge

div_u64_rem.exit1133.for.end226_crit_edge:        ; preds = %div_u64_rem.exit1133
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end226

for.body216.lr.ph:                                ; preds = %div_u64_rem.exit1133
  %start = getelementptr inbounds %struct.extent_map, ptr %call, i32 0, i32 1
  %stripe_len219 = getelementptr inbounds %struct.map_lookup, ptr %8, i32 0, i32 3
  br label %for.body216

for.body216:                                      ; preds = %for.body216.for.body216_crit_edge, %for.body216.lr.ph
  %i.11230 = phi i32 [ 0, %for.body216.lr.ph ], [ %inc225, %for.body216.for.body216_crit_edge ]
  %125 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %125)
  %126 = load i64, ptr %start, align 8
  %conv217 = zext i32 %i.11230 to i64
  %add218 = add i64 %mul212, %conv217
  %127 = ptrtoint ptr %stripe_len219 to i32
  call void @__asan_load8_noabort(i32 %127)
  %128 = load i64, ptr %stripe_len219, align 8
  %mul220 = mul i64 %128, %add218
  %add221 = add i64 %mul220, %126
  %129 = ptrtoint ptr %raid_map.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %raid_map.i, align 4
  %add222 = add i32 %i.11230, %__rem.0.i1132
  %rem = urem i32 %add222, %num_stripes.0
  %arrayidx223 = getelementptr i64, ptr %130, i32 %rem
  %131 = ptrtoint ptr %arrayidx223 to i32
  call void @__asan_store8_noabort(i32 %131)
  store i64 %add221, ptr %arrayidx223, align 8
  %inc225 = add nuw nsw i32 %i.11230, 1
  %exitcond1233.not = icmp eq i32 %inc225, %sub.i
  br i1 %exitcond1233.not, label %for.body216.for.end226_crit_edge, label %for.body216.for.body216_crit_edge

for.body216.for.body216_crit_edge:                ; preds = %for.body216
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body216

for.body216.for.end226_crit_edge:                 ; preds = %for.body216
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end226

for.end226:                                       ; preds = %for.body216.for.end226_crit_edge, %div_u64_rem.exit1133.for.end226_crit_edge
  %i.1.lcssa = phi i32 [ 0, %div_u64_rem.exit1133.for.end226_crit_edge ], [ %sub.i, %for.body216.for.end226_crit_edge ]
  %132 = ptrtoint ptr %raid_map.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %raid_map.i, align 4
  %add228 = add i32 %i.1.lcssa, %__rem.0.i1132
  %134 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %num_stripes.i, align 8
  %rem230 = urem i32 %add228, %135
  %arrayidx231 = getelementptr i64, ptr %133, i32 %rem230
  %136 = ptrtoint ptr %arrayidx231 to i32
  call void @__asan_store8_noabort(i32 %136)
  store i64 -2, ptr %arrayidx231, align 8
  %137 = ptrtoint ptr %8 to i32
  call void @__asan_load8_noabort(i32 %137)
  %138 = load i64, ptr %8, align 8
  %and233 = and i64 %138, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and233)
  %tobool234.not = icmp eq i64 %and233, 0
  br i1 %tobool234.not, label %for.end226.if.end241_crit_edge, label %if.then235

for.end226.if.end241_crit_edge:                   ; preds = %for.end226
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end241

if.then235:                                       ; preds = %for.end226
  call void @__sanitizer_cov_trace_pc() #25
  %139 = ptrtoint ptr %raid_map.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %raid_map.i, align 4
  %add238 = add i32 %add228, 1
  %rem239 = urem i32 %add238, %num_stripes.0
  %arrayidx240 = getelementptr i64, ptr %140, i32 %rem239
  %141 = ptrtoint ptr %arrayidx240 to i32
  call void @__asan_store8_noabort(i32 %141)
  store i64 -1, ptr %arrayidx240, align 8
  br label %if.end241

if.end241:                                        ; preds = %if.then235, %for.end226.if.end241_crit_edge
  %sub.i1134 = add i32 %num_stripes.0, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i1134)
  %cmp47.i = icmp sgt i32 %sub.i1134, 0
  br i1 %cmp47.i, label %if.end241.for.body.i1139_crit_edge, label %if.end241.if.end242_crit_edge

if.end241.if.end242_crit_edge:                    ; preds = %if.end241
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end242

if.end241.for.body.i1139_crit_edge:               ; preds = %if.end241
  br label %for.body.i1139

while.cond.loopexit.i:                            ; preds = %for.inc.i1140
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %again.2.i)
  %tobool.not.i1136.not = icmp eq i32 %again.2.i, 0
  br i1 %tobool.not.i1136.not, label %while.cond.loopexit.i.if.end242_crit_edge, label %while.cond.loopexit.i.for.body.i1139.backedge_crit_edge

while.cond.loopexit.i.for.body.i1139.backedge_crit_edge: ; preds = %while.cond.loopexit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body.i1139.backedge

while.cond.loopexit.i.if.end242_crit_edge:        ; preds = %while.cond.loopexit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end242

for.body.i1139:                                   ; preds = %for.body.i1139.backedge, %if.end241.for.body.i1139_crit_edge
  %i.049.i = phi i32 [ %i.049.i.be, %for.body.i1139.backedge ], [ 0, %if.end241.for.body.i1139_crit_edge ]
  %again.148.i = phi i32 [ %again.148.i.be, %for.body.i1139.backedge ], [ 0, %if.end241.for.body.i1139_crit_edge ]
  %142 = ptrtoint ptr %raid_map.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %raid_map.i, align 4
  %arrayidx.i1137 = getelementptr i64, ptr %143, i32 %i.049.i
  %144 = ptrtoint ptr %arrayidx.i1137 to i32
  call void @__asan_load8_noabort(i32 %144)
  %145 = load i64, ptr %arrayidx.i1137, align 8
  %add.i1138 = add nuw nsw i32 %i.049.i, 1
  %arrayidx2.i = getelementptr i64, ptr %143, i32 %add.i1138
  %146 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load8_noabort(i32 %146)
  %147 = load i64, ptr %arrayidx2.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %145, i64 %147)
  %cmp3.i = icmp ugt i64 %145, %147
  br i1 %cmp3.i, label %do.body.i, label %for.body.i1139.for.inc.i1140_crit_edge

for.body.i1139.for.inc.i1140_crit_edge:           ; preds = %for.body.i1139
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i1140

do.body.i:                                        ; preds = %for.body.i1139
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %__tmp.i)
  %arrayidx4.i = getelementptr %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 14, i32 %i.049.i
  %148 = call ptr @memcpy(ptr %__tmp.i, ptr %arrayidx4.i, i32 24)
  %arrayidx9.i = getelementptr %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 14, i32 %add.i1138
  %149 = call ptr @memcpy(ptr %arrayidx4.i, ptr %arrayidx9.i, i32 24)
  %150 = call ptr @memcpy(ptr %arrayidx9.i, ptr %__tmp.i, i32 24)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %__tmp.i)
  %151 = ptrtoint ptr %raid_map.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %raid_map.i, align 4
  %arrayidx16.i = getelementptr i64, ptr %152, i32 %i.049.i
  %153 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_load8_noabort(i32 %153)
  %154 = load i64, ptr %arrayidx16.i, align 8
  %arrayidx19.i = getelementptr i64, ptr %152, i32 %add.i1138
  %155 = ptrtoint ptr %arrayidx19.i to i32
  call void @__asan_load8_noabort(i32 %155)
  %156 = load i64, ptr %arrayidx19.i, align 8
  store i64 %156, ptr %arrayidx16.i, align 8
  %157 = load ptr, ptr %raid_map.i, align 4
  %arrayidx24.i = getelementptr i64, ptr %157, i32 %add.i1138
  %158 = ptrtoint ptr %arrayidx24.i to i32
  call void @__asan_store8_noabort(i32 %158)
  store i64 %154, ptr %arrayidx24.i, align 8
  br label %for.inc.i1140

for.inc.i1140:                                    ; preds = %do.body.i, %for.body.i1139.for.inc.i1140_crit_edge
  %again.2.i = phi i32 [ 1, %do.body.i ], [ %again.148.i, %for.body.i1139.for.inc.i1140_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i1138, i32 %sub.i1134)
  %exitcond.not.i = icmp eq i32 %add.i1138, %sub.i1134
  br i1 %exitcond.not.i, label %while.cond.loopexit.i, label %for.inc.i1140.for.body.i1139.backedge_crit_edge

for.inc.i1140.for.body.i1139.backedge_crit_edge:  ; preds = %for.inc.i1140
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body.i1139.backedge

for.body.i1139.backedge:                          ; preds = %for.inc.i1140.for.body.i1139.backedge_crit_edge, %while.cond.loopexit.i.for.body.i1139.backedge_crit_edge
  %i.049.i.be = phi i32 [ %add.i1138, %for.inc.i1140.for.body.i1139.backedge_crit_edge ], [ 0, %while.cond.loopexit.i.for.body.i1139.backedge_crit_edge ]
  %again.148.i.be = phi i32 [ %again.2.i, %for.inc.i1140.for.body.i1139.backedge_crit_edge ], [ 0, %while.cond.loopexit.i.for.body.i1139.backedge_crit_edge ]
  br label %for.body.i1139

if.end242:                                        ; preds = %while.cond.loopexit.i.if.end242_crit_edge, %if.end241.if.end242_crit_edge, %land.lhs.true203.if.end242_crit_edge, %for.end.if.end242_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %.pre)
  %159 = icmp eq i32 %.pre, 1
  br i1 %159, label %if.then244, label %if.end242.if.end246_crit_edge

if.end242.if.end246_crit_edge:                    ; preds = %if.end242
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end246

if.then244:                                       ; preds = %if.end242
  %160 = ptrtoint ptr %8 to i32
  call void @__asan_load8_noabort(i32 %160)
  %161 = load i64, ptr %8, align 8
  %and.i.i1141 = and i64 %161, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i1141)
  %tobool.not.i.i1142 = icmp eq i64 %and.i.i1141, 0
  br i1 %tobool.not.i.i1142, label %if.else.i.i1143, label %if.then244.btrfs_chunk_max_errors.exit_crit_edge

if.then244.btrfs_chunk_max_errors.exit_crit_edge: ; preds = %if.then244
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_chunk_max_errors.exit

if.else.i.i1143:                                  ; preds = %if.then244
  %and1.i.i = and i64 %161, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i.i)
  %tobool2.not.i.i = icmp eq i64 %and1.i.i, 0
  br i1 %tobool2.not.i.i, label %if.else4.i.i, label %if.else.i.i1143.btrfs_chunk_max_errors.exit_crit_edge

if.else.i.i1143.btrfs_chunk_max_errors.exit_crit_edge: ; preds = %if.else.i.i1143
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_chunk_max_errors.exit

if.else4.i.i:                                     ; preds = %if.else.i.i1143
  %and5.i.i = and i64 %161, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5.i.i)
  %tobool6.not.i.i = icmp eq i64 %and5.i.i, 0
  br i1 %tobool6.not.i.i, label %if.else8.i.i, label %if.else4.i.i.btrfs_chunk_max_errors.exit_crit_edge

if.else4.i.i.btrfs_chunk_max_errors.exit_crit_edge: ; preds = %if.else4.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_chunk_max_errors.exit

if.else8.i.i:                                     ; preds = %if.else4.i.i
  %and9.i.i = and i64 %161, 1024
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and9.i.i)
  %tobool10.not.i.i = icmp eq i64 %and9.i.i, 0
  br i1 %tobool10.not.i.i, label %if.else12.i.i, label %if.else8.i.i.btrfs_chunk_max_errors.exit_crit_edge

if.else8.i.i.btrfs_chunk_max_errors.exit_crit_edge: ; preds = %if.else8.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_chunk_max_errors.exit

if.else12.i.i:                                    ; preds = %if.else8.i.i
  %and13.i.i = and i64 %161, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and13.i.i)
  %tobool14.not.i.i = icmp eq i64 %and13.i.i, 0
  br i1 %tobool14.not.i.i, label %if.else16.i.i, label %if.else12.i.i.btrfs_chunk_max_errors.exit_crit_edge

if.else12.i.i.btrfs_chunk_max_errors.exit_crit_edge: ; preds = %if.else12.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_chunk_max_errors.exit

if.else16.i.i:                                    ; preds = %if.else12.i.i
  %and17.i.i = and i64 %161, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and17.i.i)
  %tobool18.not.i.i = icmp eq i64 %and17.i.i, 0
  br i1 %tobool18.not.i.i, label %if.else20.i.i, label %if.else16.i.i.btrfs_chunk_max_errors.exit_crit_edge

if.else16.i.i.btrfs_chunk_max_errors.exit_crit_edge: ; preds = %if.else16.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_chunk_max_errors.exit

if.else20.i.i:                                    ; preds = %if.else16.i.i
  %and21.i.i = and i64 %161, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and21.i.i)
  %tobool22.not.i.i = icmp eq i64 %and21.i.i, 0
  br i1 %tobool22.not.i.i, label %if.else24.i.i, label %if.else20.i.i.btrfs_chunk_max_errors.exit_crit_edge

if.else20.i.i.btrfs_chunk_max_errors.exit_crit_edge: ; preds = %if.else20.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_chunk_max_errors.exit

if.else24.i.i:                                    ; preds = %if.else20.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %and25.i.i = and i64 %161, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and25.i.i)
  %tobool26.not.i.i = icmp eq i64 %and25.i.i, 0
  %..i.i = select i1 %tobool26.not.i.i, i32 4, i32 6
  br label %btrfs_chunk_max_errors.exit

btrfs_chunk_max_errors.exit:                      ; preds = %if.else24.i.i, %if.else20.i.i.btrfs_chunk_max_errors.exit_crit_edge, %if.else16.i.i.btrfs_chunk_max_errors.exit_crit_edge, %if.else12.i.i.btrfs_chunk_max_errors.exit_crit_edge, %if.else8.i.i.btrfs_chunk_max_errors.exit_crit_edge, %if.else4.i.i.btrfs_chunk_max_errors.exit_crit_edge, %if.else.i.i1143.btrfs_chunk_max_errors.exit_crit_edge, %if.then244.btrfs_chunk_max_errors.exit_crit_edge
  %retval.0.i.i1144 = phi i32 [ 0, %if.then244.btrfs_chunk_max_errors.exit_crit_edge ], [ 1, %if.else.i.i1143.btrfs_chunk_max_errors.exit_crit_edge ], [ 7, %if.else4.i.i.btrfs_chunk_max_errors.exit_crit_edge ], [ 8, %if.else8.i.i.btrfs_chunk_max_errors.exit_crit_edge ], [ 2, %if.else12.i.i.btrfs_chunk_max_errors.exit_crit_edge ], [ 3, %if.else16.i.i.btrfs_chunk_max_errors.exit_crit_edge ], [ 5, %if.else20.i.i.btrfs_chunk_max_errors.exit_crit_edge ], [ %..i.i, %if.else24.i.i ]
  %tolerated_failures.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i1144, i32 4
  %162 = ptrtoint ptr %tolerated_failures.i to i32
  call void @__asan_load1_noabort(i32 %162)
  %163 = load i8, ptr %tolerated_failures.i, align 4
  %conv.i = zext i8 %163 to i32
  br label %if.end246

if.end246:                                        ; preds = %btrfs_chunk_max_errors.exit, %if.end242.if.end246_crit_edge
  %max_errors.1 = phi i32 [ %conv.i, %btrfs_chunk_max_errors.exit ], [ %max_errors.0, %if.end242.if.end246_crit_edge ]
  br i1 %tobool32.not, label %if.end246.if.end256_crit_edge, label %land.lhs.true248

if.end246.if.end256_crit_edge:                    ; preds = %if.end246
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end256

land.lhs.true248:                                 ; preds = %if.end246
  %tgtdev249 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 154, i32 13
  %164 = ptrtoint ptr %tgtdev249 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %tgtdev249, align 4
  %cmp250.not = icmp ne ptr %165, null
  %166 = and i1 %159, %cmp250.not
  br i1 %166, label %if.then255, label %land.lhs.true248.if.end256_crit_edge

land.lhs.true248.if.end256_crit_edge:             ; preds = %land.lhs.true248
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end256

if.then255:                                       ; preds = %land.lhs.true248
  %srcdev.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 154, i32 12
  %167 = ptrtoint ptr %srcdev.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %srcdev.i, align 8
  %devid.i1145 = getelementptr inbounds %struct.btrfs_device, ptr %168, i32 0, i32 13
  %169 = ptrtoint ptr %devid.i1145 to i32
  call void @__asan_load8_noabort(i32 %169)
  %170 = load i64, ptr %devid.i1145, align 8
  %171 = zext i32 %op to i64
  call void @__sanitizer_cov_trace_switch(i64 %171, ptr @__sancov_gen_cov_switch_values.209)
  switch i32 %op, label %if.then255.if.end61.i_crit_edge [
    i32 1, label %if.then.i1146
    i32 3, label %for.cond21.preheader.i
  ]

if.then255.if.end61.i_crit_edge:                  ; preds = %if.then255
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end61.i

for.cond21.preheader.i:                           ; preds = %if.then255
  br i1 %cmp1821226, label %for.cond21.preheader.i.for.body23.i_crit_edge, label %for.cond21.preheader.i.if.end61.i_crit_edge

for.cond21.preheader.i.if.end61.i_crit_edge:      ; preds = %for.cond21.preheader.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end61.i

for.cond21.preheader.i.for.body23.i_crit_edge:    ; preds = %for.cond21.preheader.i
  br label %for.body23.i

if.then.i1146:                                    ; preds = %if.then255
  %fs_info.i = getelementptr inbounds %struct.btrfs_device, ptr %168, i32 0, i32 4
  %172 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %fs_info.i, align 4
  %174 = getelementptr inbounds %struct.btrfs_fs_info, ptr %173, i32 0, i32 176
  %175 = ptrtoint ptr %174 to i32
  call void @__asan_load8_noabort(i32 %175)
  %176 = load i64, ptr %174, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %176)
  %cmp.i.not.i.i = icmp eq i64 %176, 0
  br i1 %cmp.i.not.i.i, label %if.then.i1146.for.cond.preheader.i_crit_edge, label %if.end.i.i

if.then.i1146.for.cond.preheader.i_crit_edge:     ; preds = %if.then.i1146
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.cond.preheader.i

if.end.i.i:                                       ; preds = %if.then.i1146
  %call1.i.i = call ptr @btrfs_lookup_block_group(ptr noundef %173, i64 noundef %logical) #23
  %lock.i.i = getelementptr inbounds %struct.btrfs_block_group, ptr %call1.i.i, i32 0, i32 2
  call void @_raw_spin_lock(ptr noundef %lock.i.i) #23
  %to_copy.i.i = getelementptr inbounds %struct.btrfs_block_group, ptr %call1.i.i, i32 0, i32 17
  %177 = ptrtoint ptr %to_copy.i.i to i32
  call void @__asan_load1_noabort(i32 %177)
  %bf.load.i.i = load i8, ptr %to_copy.i.i, align 8
  %178 = and i8 %bf.load.i.i, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %178)
  %tobool.i.not.i = icmp eq i8 %178, 0
  call void @_raw_spin_unlock(ptr noundef %lock.i.i) #23
  call void @btrfs_put_block_group(ptr noundef %call1.i.i) #23
  br i1 %tobool.i.not.i, label %if.end.i.i.for.cond.preheader.i_crit_edge, label %if.end.i.i.if.end256_crit_edge

if.end.i.i.if.end256_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end256

if.end.i.i.for.cond.preheader.i_crit_edge:        ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.end.i.i.for.cond.preheader.i_crit_edge, %if.then.i1146.for.cond.preheader.i_crit_edge
  br i1 %cmp1821226, label %for.cond.preheader.i.for.body.i1150_crit_edge, label %for.cond.preheader.i.if.end61.i_crit_edge

for.cond.preheader.i.if.end61.i_crit_edge:        ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end61.i

for.cond.preheader.i.for.body.i1150_crit_edge:    ; preds = %for.cond.preheader.i
  br label %for.body.i1150

for.body.i1150:                                   ; preds = %for.inc.i1153.for.body.i1150_crit_edge, %for.cond.preheader.i.for.body.i1150_crit_edge
  %tgtdev_indexes.0139.i = phi i32 [ %tgtdev_indexes.1.i, %for.inc.i1153.for.body.i1150_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i1150_crit_edge ]
  %index_where_to_add.0138.i = phi i32 [ %index_where_to_add.1.i, %for.inc.i1153.for.body.i1150_crit_edge ], [ %num_stripes.0, %for.cond.preheader.i.for.body.i1150_crit_edge ]
  %i.0136.i = phi i32 [ %inc18.i, %for.inc.i1153.for.body.i1150_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i1150_crit_edge ]
  %max_errors.0135.i = phi i32 [ %max_errors.1.i, %for.inc.i1153.for.body.i1150_crit_edge ], [ %max_errors.1, %for.cond.preheader.i.for.body.i1150_crit_edge ]
  %arrayidx.i1149 = getelementptr %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 14, i32 %i.0136.i
  %179 = ptrtoint ptr %arrayidx.i1149 to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %arrayidx.i1149, align 8
  %devid4.i = getelementptr inbounds %struct.btrfs_device, ptr %180, i32 0, i32 13
  %181 = ptrtoint ptr %devid4.i to i32
  call void @__asan_load8_noabort(i32 %181)
  %182 = load i64, ptr %devid4.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %182, i64 %170)
  %cmp5.i = icmp eq i64 %182, %170
  br i1 %cmp5.i, label %if.then6.i, label %for.body.i1150.for.inc.i1153_crit_edge

for.body.i1150.for.inc.i1153_crit_edge:           ; preds = %for.body.i1150
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i1153

if.then6.i:                                       ; preds = %for.body.i1150
  call void @__sanitizer_cov_trace_pc() #25
  %add.ptr.i1151 = getelementptr %struct.btrfs_io_stripe, ptr %stripes.i, i32 %index_where_to_add.0138.i
  %physical.i = getelementptr %struct.btrfs_io_stripe, ptr %stripes.i, i32 %i.0136.i, i32 1
  %183 = ptrtoint ptr %physical.i to i32
  call void @__asan_load8_noabort(i32 %183)
  %184 = load i64, ptr %physical.i, align 8
  %physical11.i = getelementptr %struct.btrfs_io_stripe, ptr %stripes.i, i32 %index_where_to_add.0138.i, i32 1
  %185 = ptrtoint ptr %physical11.i to i32
  call void @__asan_store8_noabort(i32 %185)
  store i64 %184, ptr %physical11.i, align 8
  %length.i = getelementptr %struct.btrfs_io_stripe, ptr %stripes.i, i32 %i.0136.i, i32 2
  %186 = ptrtoint ptr %length.i to i32
  call void @__asan_load8_noabort(i32 %186)
  %187 = load i64, ptr %length.i, align 8
  %length12.i = getelementptr %struct.btrfs_io_stripe, ptr %stripes.i, i32 %index_where_to_add.0138.i, i32 2
  %188 = ptrtoint ptr %length12.i to i32
  call void @__asan_store8_noabort(i32 %188)
  store i64 %187, ptr %length12.i, align 8
  %189 = ptrtoint ptr %tgtdev249 to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %tgtdev249, align 4
  %191 = ptrtoint ptr %add.ptr.i1151 to i32
  call void @__asan_store4_noabort(i32 %191)
  store ptr %190, ptr %add.ptr.i1151, align 8
  %192 = ptrtoint ptr %tgtdev_map.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load ptr, ptr %tgtdev_map.i, align 8
  %arrayidx14.i = getelementptr i32, ptr %193, i32 %i.0136.i
  %194 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_store4_noabort(i32 %194)
  store i32 %index_where_to_add.0138.i, ptr %arrayidx14.i, align 4
  %inc.i1152 = add i32 %index_where_to_add.0138.i, 1
  %inc15.i = add i32 %max_errors.0135.i, 1
  %inc16.i = add i32 %tgtdev_indexes.0139.i, 1
  br label %for.inc.i1153

for.inc.i1153:                                    ; preds = %if.then6.i, %for.body.i1150.for.inc.i1153_crit_edge
  %max_errors.1.i = phi i32 [ %inc15.i, %if.then6.i ], [ %max_errors.0135.i, %for.body.i1150.for.inc.i1153_crit_edge ]
  %index_where_to_add.1.i = phi i32 [ %inc.i1152, %if.then6.i ], [ %index_where_to_add.0138.i, %for.body.i1150.for.inc.i1153_crit_edge ]
  %tgtdev_indexes.1.i = phi i32 [ %inc16.i, %if.then6.i ], [ %tgtdev_indexes.0139.i, %for.body.i1150.for.inc.i1153_crit_edge ]
  %inc18.i = add nuw nsw i32 %i.0136.i, 1
  %exitcond143.not.i = icmp eq i32 %inc18.i, %num_stripes.0
  br i1 %exitcond143.not.i, label %for.inc.i1153.if.end61.i_crit_edge, label %for.inc.i1153.for.body.i1150_crit_edge

for.inc.i1153.for.body.i1150_crit_edge:           ; preds = %for.inc.i1153
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body.i1150

for.inc.i1153.if.end61.i_crit_edge:               ; preds = %for.inc.i1153
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end61.i

for.body23.i:                                     ; preds = %for.inc40.i.for.body23.i_crit_edge, %for.cond21.preheader.i.for.body23.i_crit_edge
  %physical_of_found.0131.i = phi i64 [ %physical_of_found.1.i1158, %for.inc40.i.for.body23.i_crit_edge ], [ 0, %for.cond21.preheader.i.for.body23.i_crit_edge ]
  %found.0130.i = phi i32 [ %found.1.i1157, %for.inc40.i.for.body23.i_crit_edge ], [ 0, %for.cond21.preheader.i.for.body23.i_crit_edge ]
  %index_srcdev.0129.i = phi i32 [ %index_srcdev.1.i1156, %for.inc40.i.for.body23.i_crit_edge ], [ 0, %for.cond21.preheader.i.for.body23.i_crit_edge ]
  %i.1126.i = phi i32 [ %inc41.i, %for.inc40.i.for.body23.i_crit_edge ], [ 0, %for.cond21.preheader.i.for.body23.i_crit_edge ]
  %arrayidx25.i = getelementptr %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 14, i32 %i.1126.i
  %195 = ptrtoint ptr %arrayidx25.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %arrayidx25.i, align 8
  %devid27.i = getelementptr inbounds %struct.btrfs_device, ptr %196, i32 0, i32 13
  %197 = ptrtoint ptr %devid27.i to i32
  call void @__asan_load8_noabort(i32 %197)
  %198 = load i64, ptr %devid27.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %198, i64 %170)
  %cmp28.i = icmp eq i64 %198, %170
  br i1 %cmp28.i, label %if.then29.i, label %for.body23.i.for.inc40.i_crit_edge

for.body23.i.for.inc40.i_crit_edge:               ; preds = %for.body23.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc40.i

if.then29.i:                                      ; preds = %for.body23.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %found.0130.i)
  %tobool.not.i1154 = icmp eq i32 %found.0130.i, 0
  br i1 %tobool.not.i1154, label %if.then29.i.if.end35.i_crit_edge, label %land.lhs.true.i1155

if.then29.i.if.end35.i_crit_edge:                 ; preds = %if.then29.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end35.i

land.lhs.true.i1155:                              ; preds = %if.then29.i
  %physical32.i = getelementptr %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 14, i32 %i.1126.i, i32 1
  %199 = ptrtoint ptr %physical32.i to i32
  call void @__asan_load8_noabort(i32 %199)
  %200 = load i64, ptr %physical32.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %physical_of_found.0131.i, i64 %200)
  %cmp33.not.i = icmp ugt i64 %physical_of_found.0131.i, %200
  br i1 %cmp33.not.i, label %land.lhs.true.i1155.if.end35.i_crit_edge, label %land.lhs.true.i1155.for.inc40.i_crit_edge

land.lhs.true.i1155.for.inc40.i_crit_edge:        ; preds = %land.lhs.true.i1155
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc40.i

land.lhs.true.i1155.if.end35.i_crit_edge:         ; preds = %land.lhs.true.i1155
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end35.i

if.end35.i:                                       ; preds = %land.lhs.true.i1155.if.end35.i_crit_edge, %if.then29.i.if.end35.i_crit_edge
  %physical38.i = getelementptr %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 14, i32 %i.1126.i, i32 1
  %201 = ptrtoint ptr %physical38.i to i32
  call void @__asan_load8_noabort(i32 %201)
  %202 = load i64, ptr %physical38.i, align 8
  br label %for.inc40.i

for.inc40.i:                                      ; preds = %if.end35.i, %land.lhs.true.i1155.for.inc40.i_crit_edge, %for.body23.i.for.inc40.i_crit_edge
  %index_srcdev.1.i1156 = phi i32 [ %index_srcdev.0129.i, %land.lhs.true.i1155.for.inc40.i_crit_edge ], [ %i.1126.i, %if.end35.i ], [ %index_srcdev.0129.i, %for.body23.i.for.inc40.i_crit_edge ]
  %found.1.i1157 = phi i32 [ 1, %land.lhs.true.i1155.for.inc40.i_crit_edge ], [ 1, %if.end35.i ], [ %found.0130.i, %for.body23.i.for.inc40.i_crit_edge ]
  %physical_of_found.1.i1158 = phi i64 [ %physical_of_found.0131.i, %land.lhs.true.i1155.for.inc40.i_crit_edge ], [ %202, %if.end35.i ], [ %physical_of_found.0131.i, %for.body23.i.for.inc40.i_crit_edge ]
  %inc41.i = add nuw nsw i32 %i.1126.i, 1
  %exitcond.not.i1159 = icmp eq i32 %inc41.i, %num_stripes.0
  br i1 %exitcond.not.i1159, label %for.end42.i, label %for.inc40.i.for.body23.i_crit_edge

for.inc40.i.for.body23.i_crit_edge:               ; preds = %for.inc40.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body23.i

for.end42.i:                                      ; preds = %for.inc40.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %found.1.i1157)
  %tobool43.not.i = icmp eq i32 %found.1.i1157, 0
  br i1 %tobool43.not.i, label %for.end42.i.if.end61.i_crit_edge, label %if.then44.i

for.end42.i.if.end61.i_crit_edge:                 ; preds = %for.end42.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end61.i

if.then44.i:                                      ; preds = %for.end42.i
  call void @__sanitizer_cov_trace_pc() #25
  %add.ptr47.i = getelementptr %struct.btrfs_io_stripe, ptr %stripes.i, i32 %num_stripes.0
  %physical48.i = getelementptr %struct.btrfs_io_stripe, ptr %stripes.i, i32 %num_stripes.0, i32 1
  %203 = ptrtoint ptr %physical48.i to i32
  call void @__asan_store8_noabort(i32 %203)
  store i64 %physical_of_found.1.i1158, ptr %physical48.i, align 8
  %length51.i = getelementptr %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 14, i32 %index_srcdev.1.i1156, i32 2
  %204 = ptrtoint ptr %length51.i to i32
  call void @__asan_load8_noabort(i32 %204)
  %205 = load i64, ptr %length51.i, align 8
  %length52.i = getelementptr %struct.btrfs_io_stripe, ptr %stripes.i, i32 %num_stripes.0, i32 2
  %206 = ptrtoint ptr %length52.i to i32
  call void @__asan_store8_noabort(i32 %206)
  store i64 %205, ptr %length52.i, align 8
  %207 = ptrtoint ptr %tgtdev249 to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load ptr, ptr %tgtdev249, align 4
  %209 = ptrtoint ptr %add.ptr47.i to i32
  call void @__asan_store4_noabort(i32 %209)
  store ptr %208, ptr %add.ptr47.i, align 8
  %210 = ptrtoint ptr %tgtdev_map.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %tgtdev_map.i, align 8
  %arrayidx56.i = getelementptr i32, ptr %211, i32 %index_srcdev.1.i1156
  %212 = ptrtoint ptr %arrayidx56.i to i32
  call void @__asan_store4_noabort(i32 %212)
  store i32 %num_stripes.0, ptr %arrayidx56.i, align 4
  %inc58.i = add i32 %num_stripes.0, 1
  br label %if.end61.i

if.end61.i:                                       ; preds = %if.then44.i, %for.end42.i.if.end61.i_crit_edge, %for.inc.i1153.if.end61.i_crit_edge, %for.cond.preheader.i.if.end61.i_crit_edge, %for.cond21.preheader.i.if.end61.i_crit_edge, %if.then255.if.end61.i_crit_edge
  %num_stripes.2.i = phi i32 [ %num_stripes.0, %if.then255.if.end61.i_crit_edge ], [ %inc58.i, %if.then44.i ], [ %num_stripes.0, %for.end42.i.if.end61.i_crit_edge ], [ %num_stripes.0, %for.cond.preheader.i.if.end61.i_crit_edge ], [ %num_stripes.0, %for.cond21.preheader.i.if.end61.i_crit_edge ], [ %index_where_to_add.1.i, %for.inc.i1153.if.end61.i_crit_edge ]
  %max_errors.3.i = phi i32 [ %max_errors.1, %if.then255.if.end61.i_crit_edge ], [ %max_errors.1, %if.then44.i ], [ %max_errors.1, %for.end42.i.if.end61.i_crit_edge ], [ %max_errors.1, %for.cond.preheader.i.if.end61.i_crit_edge ], [ %max_errors.1, %for.cond21.preheader.i.if.end61.i_crit_edge ], [ %max_errors.1.i, %for.inc.i1153.if.end61.i_crit_edge ]
  %tgtdev_indexes.4.i = phi i32 [ 0, %if.then255.if.end61.i_crit_edge ], [ 1, %if.then44.i ], [ 0, %for.end42.i.if.end61.i_crit_edge ], [ 0, %for.cond.preheader.i.if.end61.i_crit_edge ], [ 0, %for.cond21.preheader.i.if.end61.i_crit_edge ], [ %tgtdev_indexes.1.i, %for.inc.i1153.if.end61.i_crit_edge ]
  %num_tgtdevs.i = getelementptr inbounds %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 11
  %213 = ptrtoint ptr %num_tgtdevs.i to i32
  call void @__asan_store4_noabort(i32 %213)
  store i32 %tgtdev_indexes.4.i, ptr %num_tgtdevs.i, align 4
  br label %if.end256

if.end256:                                        ; preds = %if.end61.i, %if.end.i.i.if.end256_crit_edge, %land.lhs.true248.if.end256_crit_edge, %if.end246.if.end256_crit_edge
  %num_stripes.2 = phi i32 [ %num_stripes.0, %if.end246.if.end256_crit_edge ], [ %num_stripes.0, %land.lhs.true248.if.end256_crit_edge ], [ %num_stripes.2.i, %if.end61.i ], [ %num_stripes.0, %if.end.i.i.if.end256_crit_edge ]
  %max_errors.3 = phi i32 [ %max_errors.1, %if.end246.if.end256_crit_edge ], [ %max_errors.1, %land.lhs.true248.if.end256_crit_edge ], [ %max_errors.3.i, %if.end61.i ], [ %max_errors.1, %if.end.i.i.if.end256_crit_edge ]
  %214 = ptrtoint ptr %bioc_ret to i32
  call void @__asan_store4_noabort(i32 %214)
  store ptr %call9.i.i.i, ptr %bioc_ret, align 4
  %215 = ptrtoint ptr %8 to i32
  call void @__asan_load8_noabort(i32 %215)
  %216 = load i64, ptr %8, align 8
  %map_type = getelementptr inbounds %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 3
  %217 = ptrtoint ptr %map_type to i32
  call void @__asan_store8_noabort(i32 %217)
  store i64 %216, ptr %map_type, align 16
  %num_stripes258 = getelementptr inbounds %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 9
  %218 = ptrtoint ptr %num_stripes258 to i32
  call void @__asan_store4_noabort(i32 %218)
  store i32 %num_stripes.2, ptr %num_stripes258, align 4
  %max_errors259 = getelementptr inbounds %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 8
  %219 = ptrtoint ptr %max_errors259 to i32
  call void @__asan_store4_noabort(i32 %219)
  store i32 %max_errors.3, ptr %max_errors259, align 8
  %mirror_num260 = getelementptr inbounds %struct.btrfs_io_context, ptr %call9.i.i.i, i32 0, i32 10
  %220 = ptrtoint ptr %mirror_num260 to i32
  call void @__asan_store4_noabort(i32 %220)
  store i32 %mirror_num.addr.2, ptr %mirror_num260, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num_stripes.2)
  %cmp263 = icmp sgt i32 %num_stripes.2, 0
  %or.cond1216 = select i1 %tobool261.not, i1 %cmp263, i1 false
  br i1 %or.cond1216, label %if.then265, label %if.end256.out_crit_edge

if.end256.out_crit_edge:                          ; preds = %if.end256
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.then265:                                       ; preds = %if.end256
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %num_stripes.2)
  %cmp266.not = icmp eq i32 %num_stripes.2, 1
  br i1 %cmp266.not, label %if.then265.if.end286_crit_edge, label %do.end, !prof !423

if.then265.if.end286_crit_edge:                   ; preds = %if.then265
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end286

do.end:                                           ; preds = %if.then265
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 6627, i32 noundef 9, ptr noundef null) #23
  br label %if.end286

if.end286:                                        ; preds = %do.end, %if.then265.if.end286_crit_edge
  %tgtdev294 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 154, i32 13
  %221 = ptrtoint ptr %tgtdev294 to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load ptr, ptr %tgtdev294, align 4
  %223 = ptrtoint ptr %stripes.i to i32
  call void @__asan_store4_noabort(i32 %223)
  store ptr %222, ptr %stripes.i, align 64
  %physical300 = getelementptr inbounds %struct.btrfs_io_context, ptr %call9.i.i.i, i32 1, i32 2
  %224 = ptrtoint ptr %physical300 to i32
  call void @__asan_store8_noabort(i32 %224)
  store i64 %physical_to_patch_in_first_stripe.1, ptr %physical300, align 8
  %225 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load i32, ptr %num_stripes.i, align 8
  %add302 = add i32 %226, 1
  %227 = ptrtoint ptr %mirror_num260 to i32
  call void @__asan_store4_noabort(i32 %227)
  store i32 %add302, ptr %mirror_num260, align 16
  br label %out

out:                                              ; preds = %if.end286, %if.end256.out_crit_edge, %if.end8.i.i.i.out_crit_edge, %if.then160
  %ret.1 = phi i32 [ -22, %if.then160 ], [ 0, %if.end286 ], [ 0, %if.end256.out_crit_edge ], [ -12, %if.end8.i.i.i.out_crit_edge ]
  br i1 %tobool32.not, label %out.if.end348_crit_edge, label %out.do.body307_crit_edge

out.do.body307_crit_edge:                         ; preds = %out
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body307

out.if.end348_crit_edge:                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end348

do.body307:                                       ; preds = %out.do.body307_crit_edge, %out.thread
  %ret.11205 = phi i32 [ %retval.0.i.ph, %out.thread ], [ %ret.1, %out.do.body307_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %228 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %228)
  %tobool309.not = icmp eq i32 %228, 0
  br i1 %tobool309.not, label %do.body307.if.end337_crit_edge, label %land.rhs

do.body307.if.end337_crit_edge:                   ; preds = %do.body307
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end337

land.rhs:                                         ; preds = %do.body307
  %dep_map = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 154, i32 15, i32 6
  %call.i1160 = call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i1160)
  %cmp312.not = icmp eq i32 %call.i1160, 0
  br i1 %cmp312.not, label %do.end331, label %land.rhs.if.end337_crit_edge, !prof !424

land.rhs.if.end337_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end337

do.end331:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 6634, i32 noundef 9, ptr noundef null) #23
  br label %if.end337

if.end337:                                        ; preds = %do.end331, %land.rhs.if.end337_crit_edge, %do.body307.if.end337_crit_edge
  call void @up_read(ptr noundef %rwsem) #23
  br label %if.end348

if.end348:                                        ; preds = %if.end337, %out.if.end348_crit_edge
  %ret.11206 = phi i32 [ %ret.11205, %if.end337 ], [ %ret.1, %out.if.end348_crit_edge ]
  call void @free_extent_map(ptr noundef %call) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end348, %cond.end24.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.11206, %if.end348 ], [ %call25, %cond.end24.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %geom) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_map_sblock(ptr noundef %fs_info, i32 noundef %op, i64 noundef %logical, ptr nocapture noundef %length, ptr noundef %bioc_ret) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__btrfs_map_block(ptr noundef %fs_info, i32 noundef %op, i64 noundef %logical, ptr noundef %length, ptr noundef %bioc_ret, i32 noundef 0, i32 noundef 1)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i8 @btrfs_map_bio(ptr noundef %fs_info, ptr noundef %bio, i32 noundef %mirror_num) local_unnamed_addr #4 align 64 {
entry:
  %map_length = alloca i64, align 8
  %bioc = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %bi_iter = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 8
  %0 = ptrtoint ptr %bi_iter to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %bi_iter, align 8
  %shl = shl i64 %1, 9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %map_length) #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %bioc) #23
  %2 = ptrtoint ptr %bioc to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %bioc, align 4
  %bi_size = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 8, i32 1
  %3 = ptrtoint ptr %bi_size to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %bi_size, align 8
  %conv = zext i32 %4 to i64
  %5 = ptrtoint ptr %map_length to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %conv, ptr %map_length, align 8
  tail call void @btrfs_bio_counter_inc_blocked(ptr noundef %fs_info) #23
  %bi_opf.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 2
  %6 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %bi_opf.i, align 8
  %trunc.i = trunc i32 %7 to i8
  %8 = zext i8 %trunc.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.210)
  switch i8 %trunc.i, label %land.end.i [
    i8 3, label %entry.btrfs_op.exit_crit_edge
    i8 1, label %entry.sw.bb1.i_crit_edge
    i8 13, label %entry.sw.bb1.i_crit_edge143
    i8 0, label %entry.sw.bb34.i_crit_edge
  ]

entry.sw.bb34.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb34.i

entry.sw.bb1.i_crit_edge143:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb1.i

entry.sw.bb1.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb1.i

entry.btrfs_op.exit_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_op.exit

sw.bb1.i:                                         ; preds = %entry.sw.bb1.i_crit_edge, %entry.sw.bb1.i_crit_edge143
  br label %btrfs_op.exit

land.end.i:                                       ; preds = %entry
  %.b37.i = load i1, ptr @btrfs_op.__already_done, align 1
  br i1 %.b37.i, label %land.end.i.sw.bb34.i_crit_edge, label %if.then.i, !prof !423

land.end.i.sw.bb34.i_crit_edge:                   ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb34.i

if.then.i:                                        ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @btrfs_op.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 479, i32 noundef 9, ptr noundef null) #23
  br label %sw.bb34.i

sw.bb34.i:                                        ; preds = %if.then.i, %land.end.i.sw.bb34.i_crit_edge, %entry.sw.bb34.i_crit_edge
  br label %btrfs_op.exit

btrfs_op.exit:                                    ; preds = %sw.bb34.i, %sw.bb1.i, %entry.btrfs_op.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %sw.bb34.i ], [ 1, %sw.bb1.i ], [ 2, %entry.btrfs_op.exit_crit_edge ]
  %call2 = call fastcc i32 @__btrfs_map_block(ptr noundef %fs_info, i32 noundef %retval.0.i, i64 noundef %shl, ptr noundef nonnull %map_length, ptr noundef nonnull %bioc, i32 noundef %mirror_num, i32 noundef 1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %btrfs_op.exit
  call void @__sanitizer_cov_trace_pc() #25
  call void @btrfs_bio_counter_sub(ptr noundef %fs_info, i64 noundef 1) #23
  %call3 = call zeroext i8 @errno_to_blk_status(i32 noundef %call2) #23
  br label %cleanup

if.end:                                           ; preds = %btrfs_op.exit
  %9 = ptrtoint ptr %bioc to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %bioc, align 4
  %num_stripes = getelementptr inbounds %struct.btrfs_io_context, ptr %10, i32 0, i32 9
  %11 = ptrtoint ptr %num_stripes to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %num_stripes, align 4
  %orig_bio = getelementptr inbounds %struct.btrfs_io_context, ptr %10, i32 0, i32 5
  %13 = ptrtoint ptr %orig_bio to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %bio, ptr %orig_bio, align 4
  %bi_private = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 11
  %14 = ptrtoint ptr %bi_private to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bi_private, align 4
  %private = getelementptr inbounds %struct.btrfs_io_context, ptr %10, i32 0, i32 6
  %16 = ptrtoint ptr %private to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %15, ptr %private, align 8
  %bi_end_io = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 10
  %17 = ptrtoint ptr %bi_end_io to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %bi_end_io, align 8
  %end_io = getelementptr inbounds %struct.btrfs_io_context, ptr %10, i32 0, i32 4
  %19 = ptrtoint ptr %end_io to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %18, ptr %end_io, align 8
  %stripes_pending = getelementptr inbounds %struct.btrfs_io_context, ptr %10, i32 0, i32 1
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %stripes_pending, i32 noundef 4) #23
  %20 = ptrtoint ptr %stripes_pending to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile i32 %12, ptr %stripes_pending, align 4
  %21 = ptrtoint ptr %bioc to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %bioc, align 4
  %map_type = getelementptr inbounds %struct.btrfs_io_context, ptr %22, i32 0, i32 3
  %23 = ptrtoint ptr %map_type to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %map_type, align 8
  %and = and i64 %24, 384
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool5.not = icmp eq i64 %and, 0
  br i1 %tobool5.not, label %if.end.if.end19_crit_edge, label %land.lhs.true

if.end.if.end19_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end19

land.lhs.true:                                    ; preds = %if.end
  %25 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %bi_opf.i, align 8
  %trunc.i102 = trunc i32 %26 to i8
  %27 = zext i8 %trunc.i102 to i64
  call void @__sanitizer_cov_trace_switch(i64 %27, ptr @__sancov_gen_cov_switch_values.211)
  switch i8 %trunc.i102, label %land.end.i105 [
    i8 3, label %land.lhs.true.btrfs_op.exit109_crit_edge
    i8 1, label %land.lhs.true.if.then10_crit_edge
    i8 13, label %land.lhs.true.if.then10_crit_edge144
    i8 0, label %land.lhs.true.btrfs_op.exit109_crit_edge145
  ]

land.lhs.true.btrfs_op.exit109_crit_edge145:      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_op.exit109

land.lhs.true.if.then10_crit_edge144:             ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then10

land.lhs.true.if.then10_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then10

land.lhs.true.btrfs_op.exit109_crit_edge:         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_op.exit109

land.end.i105:                                    ; preds = %land.lhs.true
  %.b37.i104 = load i1, ptr @btrfs_op.__already_done, align 1
  br i1 %.b37.i104, label %land.end.i105.btrfs_op.exit109_crit_edge, label %if.then.i106, !prof !423

land.end.i105.btrfs_op.exit109_crit_edge:         ; preds = %land.end.i105
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_op.exit109

if.then.i106:                                     ; preds = %land.end.i105
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @btrfs_op.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 479, i32 noundef 9, ptr noundef null) #23
  br label %btrfs_op.exit109

btrfs_op.exit109:                                 ; preds = %if.then.i106, %land.end.i105.btrfs_op.exit109_crit_edge, %land.lhs.true.btrfs_op.exit109_crit_edge, %land.lhs.true.btrfs_op.exit109_crit_edge145
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %mirror_num)
  %cmp8 = icmp sgt i32 %mirror_num, 1
  br i1 %cmp8, label %btrfs_op.exit109.if.then10_crit_edge, label %btrfs_op.exit109.if.end19_crit_edge

btrfs_op.exit109.if.end19_crit_edge:              ; preds = %btrfs_op.exit109
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end19

btrfs_op.exit109.if.then10_crit_edge:             ; preds = %btrfs_op.exit109
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then10

if.then10:                                        ; preds = %btrfs_op.exit109.if.then10_crit_edge, %land.lhs.true.if.then10_crit_edge, %land.lhs.true.if.then10_crit_edge144
  %28 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %bi_opf.i, align 8
  %trunc.i111 = trunc i32 %29 to i8
  %30 = zext i8 %trunc.i111 to i64
  call void @__sanitizer_cov_trace_switch(i64 %30, ptr @__sancov_gen_cov_switch_values.212)
  switch i8 %trunc.i111, label %land.end.i114 [
    i8 3, label %if.then10.if.else_crit_edge
    i8 1, label %if.then10.if.then14_crit_edge
    i8 13, label %if.then10.if.then14_crit_edge146
    i8 0, label %if.then10.if.else_crit_edge147
  ]

if.then10.if.else_crit_edge147:                   ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

if.then10.if.then14_crit_edge146:                 ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then14

if.then10.if.then14_crit_edge:                    ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then14

if.then10.if.else_crit_edge:                      ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

land.end.i114:                                    ; preds = %if.then10
  %.b37.i113 = load i1, ptr @btrfs_op.__already_done, align 1
  br i1 %.b37.i113, label %land.end.i114.if.else_crit_edge, label %if.then.i115, !prof !423

land.end.i114.if.else_crit_edge:                  ; preds = %land.end.i114
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

if.then.i115:                                     ; preds = %land.end.i114
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @btrfs_op.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 479, i32 noundef 9, ptr noundef null) #23
  br label %if.else

if.then14:                                        ; preds = %if.then10.if.then14_crit_edge, %if.then10.if.then14_crit_edge146
  %31 = ptrtoint ptr %bioc to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %bioc, align 4
  %33 = ptrtoint ptr %map_length to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %map_length, align 8
  %call15 = call i32 @raid56_parity_write(ptr noundef %bio, ptr noundef %32, i64 noundef %34) #23
  br label %if.end17

if.else:                                          ; preds = %if.then.i115, %land.end.i114.if.else_crit_edge, %if.then10.if.else_crit_edge, %if.then10.if.else_crit_edge147
  %35 = ptrtoint ptr %bioc to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %bioc, align 4
  %37 = ptrtoint ptr %map_length to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %map_length, align 8
  %call16 = call i32 @raid56_parity_recover(ptr noundef %bio, ptr noundef %36, i64 noundef %38, i32 noundef %mirror_num, i32 noundef 1) #23
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then14
  %ret.0 = phi i32 [ %call15, %if.then14 ], [ %call16, %if.else ]
  call void @btrfs_bio_counter_sub(ptr noundef %fs_info, i64 noundef 1) #23
  %call18 = call zeroext i8 @errno_to_blk_status(i32 noundef %ret.0) #23
  br label %cleanup

if.end19:                                         ; preds = %btrfs_op.exit109.if.end19_crit_edge, %if.end.if.end19_crit_edge
  %39 = ptrtoint ptr %map_length to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %map_length, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %40, i64 %conv)
  %cmp20 = icmp ult i64 %40, %conv
  br i1 %cmp20, label %if.then22, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp27138 = icmp sgt i32 %12, 0
  br i1 %cmp27138, label %for.body.lr.ph, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %sub = add nsw i32 %12, -1
  %add.ptr.i.i = getelementptr i8, ptr %bio, i32 -96
  %shr.i129 = and i64 %1, 36028797018963967
  %41 = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 6
  br label %for.body

if.then22:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.55, i64 noundef %shl, i64 noundef %conv, i64 noundef %40) #28
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 6827, 0\0A.popsection", ""() #23, !srcloc !503
  unreachable

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %dev_nr.0139 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %42 = ptrtoint ptr %bioc to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %bioc, align 4
  %arrayidx = getelementptr %struct.btrfs_io_context, ptr %43, i32 0, i32 14, i32 %dev_nr.0139
  %44 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %arrayidx, align 8
  %tobool30.not = icmp eq ptr %45, null
  br i1 %tobool30.not, label %for.body.if.then44_crit_edge, label %lor.lhs.false31

for.body.if.then44_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then44

lor.lhs.false31:                                  ; preds = %for.body
  %bdev = getelementptr inbounds %struct.btrfs_device, ptr %45, i32 0, i32 7
  %46 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %bdev, align 8
  %tobool32.not = icmp eq ptr %47, null
  br i1 %tobool32.not, label %lor.lhs.false31.if.then44thread-pre-split_crit_edge, label %lor.lhs.false33

lor.lhs.false31.if.then44thread-pre-split_crit_edge: ; preds = %lor.lhs.false31
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then44thread-pre-split

lor.lhs.false33:                                  ; preds = %lor.lhs.false31
  %dev_state = getelementptr inbounds %struct.btrfs_device, ptr %45, i32 0, i32 10
  %48 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %dev_state, align 4
  %50 = and i32 %49, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %tobool35.not = icmp eq i32 %50, 0
  br i1 %tobool35.not, label %lor.lhs.false36, label %lor.lhs.false33.if.then44thread-pre-split_crit_edge

lor.lhs.false33.if.then44thread-pre-split_crit_edge: ; preds = %lor.lhs.false33
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then44thread-pre-split

lor.lhs.false36:                                  ; preds = %lor.lhs.false33
  %51 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %bi_opf.i, align 8
  %trunc.i120 = trunc i32 %52 to i8
  %53 = zext i8 %trunc.i120 to i64
  call void @__sanitizer_cov_trace_switch(i64 %53, ptr @__sancov_gen_cov_switch_values.213)
  switch i8 %trunc.i120, label %land.end.i123 [
    i8 3, label %lor.lhs.false36.if.end45_crit_edge
    i8 1, label %lor.lhs.false36.land.lhs.true40_crit_edge
    i8 13, label %lor.lhs.false36.land.lhs.true40_crit_edge148
    i8 0, label %lor.lhs.false36.if.end45_crit_edge149
  ]

lor.lhs.false36.if.end45_crit_edge149:            ; preds = %lor.lhs.false36
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end45

lor.lhs.false36.land.lhs.true40_crit_edge148:     ; preds = %lor.lhs.false36
  call void @__sanitizer_cov_trace_pc() #25
  br label %land.lhs.true40

lor.lhs.false36.land.lhs.true40_crit_edge:        ; preds = %lor.lhs.false36
  call void @__sanitizer_cov_trace_pc() #25
  br label %land.lhs.true40

lor.lhs.false36.if.end45_crit_edge:               ; preds = %lor.lhs.false36
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end45

land.end.i123:                                    ; preds = %lor.lhs.false36
  %.b37.i122 = load i1, ptr @btrfs_op.__already_done, align 1
  br i1 %.b37.i122, label %land.end.i123.if.end45_crit_edge, label %if.then.i124, !prof !423

land.end.i123.if.end45_crit_edge:                 ; preds = %land.end.i123
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end45

if.then.i124:                                     ; preds = %land.end.i123
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @btrfs_op.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 479, i32 noundef 9, ptr noundef null) #23
  br label %if.end45

land.lhs.true40:                                  ; preds = %lor.lhs.false36.land.lhs.true40_crit_edge, %lor.lhs.false36.land.lhs.true40_crit_edge148
  %54 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %dev_state, align 4
  %and1.i100 = and i32 %55, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i100)
  %tobool43.not = icmp eq i32 %and1.i100, 0
  br i1 %tobool43.not, label %land.lhs.true40.if.then44thread-pre-split_crit_edge, label %land.lhs.true40.if.end45_crit_edge

land.lhs.true40.if.end45_crit_edge:               ; preds = %land.lhs.true40
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end45

land.lhs.true40.if.then44thread-pre-split_crit_edge: ; preds = %land.lhs.true40
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then44thread-pre-split

if.then44thread-pre-split:                        ; preds = %land.lhs.true40.if.then44thread-pre-split_crit_edge, %lor.lhs.false33.if.then44thread-pre-split_crit_edge, %lor.lhs.false31.if.then44thread-pre-split_crit_edge
  %56 = ptrtoint ptr %bioc to i32
  call void @__asan_load4_noabort(i32 %56)
  %.pr = load ptr, ptr %bioc, align 4
  br label %if.then44

if.then44:                                        ; preds = %if.then44thread-pre-split, %for.body.if.then44_crit_edge
  %57 = phi ptr [ %.pr, %if.then44thread-pre-split ], [ %43, %for.body.if.then44_crit_edge ]
  %error.i = getelementptr inbounds %struct.btrfs_io_context, ptr %57, i32 0, i32 7
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %error.i, i32 noundef 4) #23
  call void @llvm.prefetch.p0(ptr %error.i, i32 1, i32 3, i32 1) #23
  %58 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %error.i, ptr %error.i, i32 1, ptr elementtype(i32) %error.i) #23, !srcloc !494
  %stripes_pending.i = getelementptr inbounds %struct.btrfs_io_context, ptr %57, i32 0, i32 1
  %call.i.i41.i = call zeroext i1 @__kasan_check_write(ptr noundef %stripes_pending.i, i32 noundef 4) #23
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !428
  call void @llvm.prefetch.p0(ptr %stripes_pending.i, i32 1, i32 3, i32 1) #23
  %59 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %stripes_pending.i, ptr %stripes_pending.i, i32 1, ptr elementtype(i32) %stripes_pending.i) #23, !srcloc !429
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %59, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !430
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then.i128, label %if.then44.for.inc_crit_edge

if.then44.for.inc_crit_edge:                      ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

if.then.i128:                                     ; preds = %if.then44
  %orig_bio.i = getelementptr inbounds %struct.btrfs_io_context, ptr %57, i32 0, i32 5
  %60 = ptrtoint ptr %orig_bio.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %orig_bio.i, align 4
  %cmp.not.i = icmp eq ptr %61, %bio
  br i1 %cmp.not.i, label %if.then.i128.if.end.i_crit_edge, label %do.end.i, !prof !423

if.then.i128.if.end.i_crit_edge:                  ; preds = %if.then.i128
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i

do.end.i:                                         ; preds = %if.then.i128
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 6766, i32 noundef 9, ptr noundef null) #23
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %if.then.i128.if.end.i_crit_edge
  %mirror_num.i = getelementptr inbounds %struct.btrfs_io_context, ptr %57, i32 0, i32 10
  %62 = ptrtoint ptr %mirror_num.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %mirror_num.i, align 8
  %64 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %63, ptr %add.ptr.i.i, align 8
  %65 = ptrtoint ptr %bi_iter to i32
  call void @__asan_store8_noabort(i32 %65)
  store i64 %shr.i129, ptr %bi_iter, align 8
  %call.i.i42.i = call zeroext i1 @__kasan_check_read(ptr noundef %error.i, i32 noundef 4) #23
  %66 = ptrtoint ptr %error.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %error.i, align 4
  %max_errors.i = getelementptr inbounds %struct.btrfs_io_context, ptr %57, i32 0, i32 8
  %68 = ptrtoint ptr %max_errors.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %max_errors.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %67, i32 %69)
  %cmp24.i = icmp sgt i32 %67, %69
  %spec.select.i = select i1 %cmp24.i, i8 10, i8 0
  %70 = ptrtoint ptr %41 to i32
  call void @__asan_store1_noabort(i32 %70)
  store i8 %spec.select.i, ptr %41, align 2
  %private.i.i = getelementptr inbounds %struct.btrfs_io_context, ptr %57, i32 0, i32 6
  %71 = ptrtoint ptr %private.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %private.i.i, align 8
  %73 = ptrtoint ptr %bi_private to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr %72, ptr %bi_private, align 4
  %end_io.i.i = getelementptr inbounds %struct.btrfs_io_context, ptr %57, i32 0, i32 4
  %74 = ptrtoint ptr %end_io.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %end_io.i.i, align 8
  %76 = ptrtoint ptr %bi_end_io to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr %75, ptr %bi_end_io, align 8
  call void @bio_endio(ptr noundef %bio) #23
  %tobool.not.i.i.i = icmp eq ptr %57, null
  br i1 %tobool.not.i.i.i, label %if.end.i.for.inc_crit_edge, label %if.end.i.i.i

if.end.i.for.inc_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

if.end.i.i.i:                                     ; preds = %if.end.i
  %call.i.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %57, i32 noundef 4) #23
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !500
  call void @llvm.prefetch.p0(ptr nonnull %57, i32 1, i32 3, i32 1) #23
  %77 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %57, ptr nonnull %57, i32 1, ptr nonnull elementtype(i32) %57) #23, !srcloc !501
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %77, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i.i, label %if.then1.i.i.i, label %if.end5.i.i.i.i.i.i

if.end5.i.i.i.i.i.i:                              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i.i, label %if.end5.i.i.i.i.i.i.for.inc_crit_edge, label %if.then10.i.i.i.i.i.i, !prof !423

if.end5.i.i.i.i.i.i.for.inc_crit_edge:            ; preds = %if.end5.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

if.then10.i.i.i.i.i.i:                            ; preds = %if.end5.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @refcount_warn_saturate(ptr noundef nonnull %57, i32 noundef 3) #23
  br label %for.inc

if.then1.i.i.i:                                   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !502
  call void @kfree(ptr noundef nonnull %57) #23
  br label %for.inc

if.end45:                                         ; preds = %land.lhs.true40.if.end45_crit_edge, %if.then.i124, %land.end.i123.if.end45_crit_edge, %lor.lhs.false36.if.end45_crit_edge, %lor.lhs.false36.if.end45_crit_edge149
  call void @__sanitizer_cov_trace_cmp4(i32 %dev_nr.0139, i32 %sub)
  %cmp46 = icmp slt i32 %dev_nr.0139, %sub
  br i1 %cmp46, label %if.then48, label %if.end45.if.end51_crit_edge

if.end45.if.end51_crit_edge:                      ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end51

if.then48:                                        ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #25
  %call49 = call ptr @btrfs_bio_clone(ptr noundef %bio) #23
  br label %if.end51

if.end51:                                         ; preds = %if.then48, %if.end45.if.end51_crit_edge
  %bio.addr.0 = phi ptr [ %call49, %if.then48 ], [ %bio, %if.end45.if.end51_crit_edge ]
  %78 = ptrtoint ptr %bioc to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %bioc, align 4
  %physical = getelementptr %struct.btrfs_io_context, ptr %79, i32 0, i32 14, i32 %dev_nr.0139, i32 1
  %80 = ptrtoint ptr %physical to i32
  call void @__asan_load8_noabort(i32 %80)
  %81 = load i64, ptr %physical, align 8
  call fastcc void @submit_stripe_bio(ptr noundef %79, ptr noundef %bio.addr.0, i64 noundef %81, ptr noundef nonnull %45)
  br label %for.inc

for.inc:                                          ; preds = %if.end51, %if.then1.i.i.i, %if.then10.i.i.i.i.i.i, %if.end5.i.i.i.i.i.i.for.inc_crit_edge, %if.end.i.for.inc_crit_edge, %if.then44.for.inc_crit_edge
  %inc = add nuw nsw i32 %dev_nr.0139, 1
  %exitcond.not = icmp eq i32 %inc, %12
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  call void @btrfs_bio_counter_sub(ptr noundef %fs_info, i64 noundef 1) #23
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.end17, %if.then
  %retval.0 = phi i8 [ %call3, %if.then ], [ %call18, %if.end17 ], [ 0, %for.end ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %bioc) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %map_length) #23
  ret i8 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_bio_counter_inc_blocked(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i8 @errno_to_blk_status(i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @raid56_parity_write(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @raid56_parity_recover(ptr noundef, ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_bio_clone(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @submit_stripe_bio(ptr noundef %bioc, ptr noundef %bio, i64 noundef %physical, ptr noundef %dev) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info1 = getelementptr inbounds %struct.btrfs_io_context, ptr %bioc, i32 0, i32 2
  %0 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info1, align 8
  %bi_private = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 11
  %2 = ptrtoint ptr %bi_private to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %bioc, ptr %bi_private, align 4
  %device = getelementptr i8, ptr %bio, i32 -92
  %3 = ptrtoint ptr %device to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %dev, ptr %device, align 4
  %bi_end_io = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 10
  %4 = ptrtoint ptr %bi_end_io to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @btrfs_end_bio, ptr %bi_end_io, align 8
  %shr = lshr i64 %physical, 9
  %bi_iter = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 8
  %5 = ptrtoint ptr %bi_iter to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %shr, ptr %bi_iter, align 8
  %bi_opf = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 2
  %6 = ptrtoint ptr %bi_opf to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %bi_opf, align 8
  %and = and i32 %7, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %and)
  %cmp = icmp eq i32 %and, 13
  br i1 %cmp, label %if.then, label %entry.do.body_crit_edge

entry.do.body_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body

if.then:                                          ; preds = %entry
  %zone_info1.i = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 8
  %8 = ptrtoint ptr %zone_info1.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %zone_info1.i, align 4
  %tobool.not.i68 = icmp eq ptr %9, null
  br i1 %tobool.not.i68, label %if.then.if.else_crit_edge, label %btrfs_dev_is_sequential.exit

if.then.if.else_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

btrfs_dev_is_sequential.exit:                     ; preds = %if.then
  %zone_size_shift.i = getelementptr inbounds %struct.btrfs_zoned_device_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %zone_size_shift.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %zone_size_shift.i, align 8
  %sh_prom.i = zext i8 %11 to i64
  %shr.i = lshr i64 %physical, %sh_prom.i
  %conv2.i = trunc i64 %shr.i to i32
  %seq_zones.i = getelementptr inbounds %struct.btrfs_zoned_device_info, ptr %9, i32 0, i32 5
  %12 = ptrtoint ptr %seq_zones.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %seq_zones.i, align 8
  %div3.i.i = lshr i32 %conv2.i, 5
  %arrayidx.i.i = getelementptr i32, ptr %13, i32 %div3.i.i
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %conv2.i, 31
  %16 = shl nuw i32 1, %and.i.i
  %17 = and i32 %16, %15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool3.i.not = icmp eq i32 %17, 0
  br i1 %tobool3.i.not, label %btrfs_dev_is_sequential.exit.if.else_crit_edge, label %if.then3

btrfs_dev_is_sequential.exit.if.else_crit_edge:   ; preds = %btrfs_dev_is_sequential.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

if.then3:                                         ; preds = %btrfs_dev_is_sequential.exit
  call void @__sanitizer_cov_trace_pc() #25
  %18 = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 176
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %18, align 8
  %neg = sub i64 0, %20
  %and4 = and i64 %neg, %physical
  %shr5 = lshr i64 %and4, 9
  %21 = ptrtoint ptr %bi_iter to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %shr5, ptr %bi_iter, align 8
  br label %do.body

if.else:                                          ; preds = %btrfs_dev_is_sequential.exit.if.else_crit_edge, %if.then.if.else_crit_edge
  %and9 = and i32 %7, -14
  %or = or i32 %and9, 1
  %22 = ptrtoint ptr %bi_opf to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %or, ptr %bi_opf, align 8
  br label %do.body

do.body:                                          ; preds = %if.else, %if.then3, %entry.do.body_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @submit_stripe_bio.__UNIQUE_ID_ddebug999, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@submit_stripe_bio, %do.body16)) #23
          to label %do.end42 [label %do.body16], !srcloc !431

do.body16:                                        ; preds = %do.body
  %23 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i.i = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %26, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !432
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #23
  %call.i = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i, label %do.body16.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

do.body16.rcu_read_lock.exit_crit_edge:           ; preds = %do.body16
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %do.body16
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 696, ptr noundef nonnull @.str.97) #23
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %do.body16.rcu_read_lock.exit_crit_edge
  %27 = ptrtoint ptr %bi_opf to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %bi_opf, align 8
  %and18 = and i32 %28, 255
  %29 = ptrtoint ptr %bi_iter to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %bi_iter, align 8
  %bdev = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 7
  %31 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %bdev, align 8
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %32, i32 0, i32 5
  %33 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %bd_dev, align 4
  %name = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 5
  %35 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile ptr, ptr %name, align 8
  %call25 = tail call i32 @rcu_read_lock_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end34_crit_edge

rcu_read_lock.exit.do.end34_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end34

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call27 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %land.lhs.true.do.end34_crit_edge, label %land.lhs.true29

land.lhs.true.do.end34_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end34

land.lhs.true29:                                  ; preds = %land.lhs.true
  %.b67 = load i1, ptr @submit_stripe_bio.__warned, align 1
  br i1 %.b67, label %land.lhs.true29.do.end34_crit_edge, label %if.then31

land.lhs.true29.do.end34_crit_edge:               ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end34

if.then31:                                        ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @submit_stripe_bio.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.9, i32 noundef 6753, ptr noundef nonnull @.str.13) #23
  br label %do.end34

do.end34:                                         ; preds = %if.then31, %land.lhs.true29.do.end34_crit_edge, %land.lhs.true.do.end34_crit_edge, %rcu_read_lock.exit.do.end34_crit_edge
  %str = getelementptr inbounds %struct.rcu_string, ptr %36, i32 0, i32 1
  %devid = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 13
  %37 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %devid, align 8
  %bi_size = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 8, i32 1
  %39 = ptrtoint ptr %bi_size to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %bi_size, align 8
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %1, ptr noundef nonnull @.str.154, i32 noundef %and18, i32 noundef %28, i64 noundef %30, i32 noundef %34, ptr noundef %str, i64 noundef %38, i32 noundef %40) #28
  %call.i70 = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i70, label %do.end34.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i73

do.end34.rcu_read_unlock.exit_crit_edge:          ; preds = %do.end34
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

land.lhs.true.i73:                                ; preds = %do.end34
  %call1.i71 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i71)
  %tobool.not.i72 = icmp eq i32 %call1.i71, 0
  br i1 %tobool.not.i72, label %land.lhs.true.i73.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i75

land.lhs.true.i73.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i73
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

land.lhs.true2.i75:                               ; preds = %land.lhs.true.i73
  %.b4.i74 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i74, label %land.lhs.true2.i75.rcu_read_unlock.exit_crit_edge, label %if.then.i76

land.lhs.true2.i75.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i75
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

if.then.i76:                                      ; preds = %land.lhs.true2.i75
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 724, ptr noundef nonnull @.str.98) #23
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i76, %land.lhs.true2.i75.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i73.rcu_read_unlock.exit_crit_edge, %do.end34.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !433
  %41 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i.i77 = and i32 %41, -16384
  %42 = inttoptr i32 %and.i.i.i.i.i77 to ptr
  %preempt_count.i.i.i.i78 = getelementptr inbounds %struct.thread_info, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %preempt_count.i.i.i.i78 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %preempt_count.i.i.i.i78, align 4
  %sub.i.i.i = add i32 %44, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i78, align 4
  tail call void @rcu_read_unlock_strict() #23
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #23
  br label %do.end42

do.end42:                                         ; preds = %rcu_read_unlock.exit, %do.body
  %bdev43 = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 7
  %45 = ptrtoint ptr %bdev43 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %bdev43, align 8
  %bi_flags.i.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 3
  %47 = ptrtoint ptr %bi_flags.i.i to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %bi_flags.i.i, align 4
  %conv1.i.i = and i16 %48, -2049
  store i16 %conv1.i.i, ptr %bi_flags.i.i, align 4
  %bi_bdev.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 1
  %49 = ptrtoint ptr %bi_bdev.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %bi_bdev.i, align 4
  %cmp.not.i = icmp eq ptr %50, %46
  br i1 %cmp.not.i, label %do.end42.bio_set_dev.exit_crit_edge, label %if.then.i79

do.end42.bio_set_dev.exit_crit_edge:              ; preds = %do.end42
  call void @__sanitizer_cov_trace_pc() #25
  br label %bio_set_dev.exit

if.then.i79:                                      ; preds = %do.end42
  call void @__sanitizer_cov_trace_pc() #25
  %conv1.i8.i = and i16 %48, -2177
  %51 = ptrtoint ptr %bi_flags.i.i to i32
  call void @__asan_store2_noabort(i32 %51)
  store i16 %conv1.i8.i, ptr %bi_flags.i.i, align 4
  br label %bio_set_dev.exit

bio_set_dev.exit:                                 ; preds = %if.then.i79, %do.end42.bio_set_dev.exit_crit_edge
  %52 = ptrtoint ptr %bi_bdev.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %46, ptr %bi_bdev.i, align 4
  tail call void @bio_associate_blkg(ptr noundef %bio) #23
  tail call void @btrfs_bio_counter_inc_noblocked(ptr noundef %1) #23
  tail call void @btrfsic_submit_bio(ptr noundef %bio) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bio_kmalloc(i32 noundef, i16 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @extent_io_tree_init(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @find_next_devid(ptr noundef %fs_info, ptr nocapture noundef writeonly %devid_ret) unnamed_addr #9 align 64 {
entry:
  %disk_key.i = alloca %struct.btrfs_disk_key, align 8
  %key = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #23
  %call = tail call ptr @btrfs_alloc_path() #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %1 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %2 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 1, ptr %key, align 8
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 -40, ptr %1, align 8
  %4 = ptrtoint ptr %0 to i32
  call void @__asan_storeN_noabort(i32 %4, i32 8)
  store i64 -1, ptr %0, align 1
  %chunk_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 3
  %5 = ptrtoint ptr %chunk_root to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %chunk_root, align 8
  %call1 = call i32 @btrfs_search_slot(ptr noundef null, ptr noundef %6, ptr noundef nonnull %key, ptr noundef nonnull %call, i32 noundef 0, i32 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %if.end.error_crit_edge, label %if.end3

if.end.error_crit_edge:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp4 = icmp eq i32 %call1, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.157) #28
  br label %error

if.end6:                                          ; preds = %if.end3
  %7 = ptrtoint ptr %chunk_root to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %chunk_root, align 8
  %call8 = call i32 @btrfs_previous_item(ptr noundef %8, ptr noundef nonnull %call, i64 noundef 1, i32 noundef 216) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.else, label %if.end6.if.end13_crit_edge

if.end6.if.end13_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end13

if.else:                                          ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #25
  %9 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %call, align 4
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %call, i32 0, i32 1
  %11 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %slots, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i) #23
  %13 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 2
  %mul.i.i.i.i = mul i32 %12, 25
  %add.i.i.i.i = add i32 %mul.i.i.i.i, 101
  %14 = call ptr @memset(ptr %disk_key.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %10, ptr noundef nonnull %disk_key.i, i32 noundef %add.i.i.i.i, i32 noundef 17) #23
  %15 = ptrtoint ptr %13 to i32
  call void @__asan_loadN_noabort(i32 %15, i32 8)
  %16 = load i64, ptr %13, align 1
  %17 = call i64 @llvm.bswap.i64(i64 %16) #23
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i) #23
  %add = add i64 %17, 1
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.end6.if.end13_crit_edge
  %storemerge = phi i64 [ %add, %if.else ], [ 1, %if.end6.if.end13_crit_edge ]
  %18 = ptrtoint ptr %devid_ret to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %storemerge, ptr %devid_ret, align 8
  br label %error

error:                                            ; preds = %if.end13, %if.then5, %if.end.error_crit_edge
  %ret.0 = phi i32 [ %call1, %if.end.error_crit_edge ], [ -117, %if.then5 ], [ 0, %if.end13 ]
  call void @btrfs_free_path(ptr noundef nonnull %call) #23
  br label %cleanup

cleanup:                                          ; preds = %error, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %error ], [ -12, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #23
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @generate_random_uuid(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_read_sys_array(ptr noundef %fs_info) local_unnamed_addr #4 align 64 {
entry:
  %key = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %tree_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 2
  %0 = ptrtoint ptr %tree_root to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tree_root, align 4
  %super_copy1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 43
  %2 = ptrtoint ptr %super_copy1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %super_copy1, align 8
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #23
  %4 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %5 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %nodesize = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 166
  %6 = ptrtoint ptr %nodesize to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nodesize, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4095, i32 %7)
  %cmp = icmp ugt i32 %7, 4095
  br i1 %cmp, label %cond.end, label %cond.false, !prof !423

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.57, i32 noundef 7391) #32
  unreachable

cond.end:                                         ; preds = %entry
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %1, i32 0, i32 7
  %8 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %8, i32 8)
  %9 = load i64, ptr %root_key, align 1
  %call = tail call ptr @btrfs_find_create_tree_block(ptr noundef %fs_info, i64 noundef 65536, i64 noundef %9, i32 noundef 0) #23
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  %10 = ptrtoint ptr %call to i32
  br label %cleanup

if.end:                                           ; preds = %cond.end
  tail call void @set_extent_buffer_uptodate(ptr noundef %call) #23
  tail call void @write_extent_buffer(ptr noundef %call, ptr noundef %3, i32 noundef 0, i32 noundef 4096) #23
  %sys_chunk_array_size.i = getelementptr inbounds %struct.btrfs_super_block, ptr %3, i32 0, i32 18
  %11 = ptrtoint ptr %sys_chunk_array_size.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 4)
  %12 = load i32, ptr %sys_chunk_array_size.i, align 1
  %13 = tail call i32 @llvm.bswap.i32(i32 %12) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp6118.not = icmp eq i32 %12, 0
  br i1 %cmp6118.not, label %if.end.while.end_crit_edge, label %while.body.preheader

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

while.body.preheader:                             ; preds = %if.end
  %sys_chunk_array = getelementptr inbounds %struct.btrfs_super_block, ptr %3, i32 0, i32 33
  br label %while.body

while.body:                                       ; preds = %if.end44.while.body_crit_edge, %while.body.preheader
  %cur_offset.0121 = phi i32 [ %add36, %if.end44.while.body_crit_edge ], [ 0, %while.body.preheader ]
  %sb_array_offset.0120 = phi i32 [ %add46, %if.end44.while.body_crit_edge ], [ 811, %while.body.preheader ]
  %array_ptr.0119 = phi ptr [ %add.ptr45, %if.end44.while.body_crit_edge ], [ %sys_chunk_array, %while.body.preheader ]
  %add = add i32 %cur_offset.0121, 17
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %13)
  %cmp7 = icmp ugt i32 %add, %13
  br i1 %cmp7, label %while.body.out_short_read_crit_edge, label %if.end9

while.body.out_short_read_crit_edge:              ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_short_read

if.end9:                                          ; preds = %while.body
  %offset.i = getelementptr inbounds %struct.btrfs_disk_key, ptr %array_ptr.0119, i32 0, i32 2
  %14 = ptrtoint ptr %offset.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 8)
  %15 = load i64, ptr %offset.i, align 1
  %16 = tail call i64 @llvm.bswap.i64(i64 %15) #23
  %17 = ptrtoint ptr %5 to i32
  call void @__asan_storeN_noabort(i32 %17, i32 8)
  store i64 %16, ptr %5, align 1
  %type.i = getelementptr inbounds %struct.btrfs_disk_key, ptr %array_ptr.0119, i32 0, i32 1
  %18 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %type.i, align 1
  %20 = ptrtoint ptr %4 to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %19, ptr %4, align 8
  %21 = ptrtoint ptr %array_ptr.0119 to i32
  call void @__asan_loadN_noabort(i32 %21, i32 8)
  %22 = load i64, ptr %array_ptr.0119, align 1
  %23 = tail call i64 @llvm.bswap.i64(i64 %22) #23
  %24 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 %23, ptr %key, align 8
  %add.ptr = getelementptr i8, ptr %array_ptr.0119, i32 17
  %add10 = add i32 %sb_array_offset.0120, 17
  call void @__sanitizer_cov_trace_const_cmp1(i8 -28, i8 %19)
  %cmp13.not = icmp eq i8 %19, -28
  br i1 %cmp13.not, label %if.end18, label %if.then15

if.then15:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #25
  %conv = zext i8 %19 to i32
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.58, i32 noundef %conv, i32 noundef %add) #28
  br label %while.end

if.end18:                                         ; preds = %if.end9
  %25 = inttoptr i32 %add10 to ptr
  %add20 = add i32 %cur_offset.0121, 97
  call void @__sanitizer_cov_trace_cmp4(i32 %add20, i32 %13)
  %cmp21 = icmp ugt i32 %add20, %13
  br i1 %cmp21, label %if.end18.out_short_read_crit_edge, label %if.end24

if.end18.out_short_read_crit_edge:                ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_short_read

if.end24:                                         ; preds = %if.end18
  %call.i = tail call zeroext i16 @btrfs_get_16(ptr noundef %call, ptr noundef %25, i32 noundef 44) #23
  %conv26 = zext i16 %call.i to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %call.i)
  %tobool27.not = icmp eq i16 %call.i, 0
  br i1 %tobool27.not, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.59, i32 noundef 0, i32 noundef %add) #28
  br label %while.end

if.end29:                                         ; preds = %if.end24
  %call.i111 = tail call i64 @btrfs_get_64(ptr noundef %call, ptr noundef %25, i32 noundef 24) #23
  %and = and i64 %call.i111, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %cmp31 = icmp eq i64 %and, 0
  br i1 %cmp31, label %if.then33, label %btrfs_chunk_item_size.exit

if.then33:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.60, i64 noundef %call.i111, i32 noundef %add) #28
  br label %while.end

btrfs_chunk_item_size.exit:                       ; preds = %if.end29
  %sub.i = shl nuw nsw i32 %conv26, 5
  %add.i = add nuw nsw i32 %sub.i, 48
  %add36 = add i32 %add.i, %add
  call void @__sanitizer_cov_trace_cmp4(i32 %add36, i32 %13)
  %cmp37 = icmp ugt i32 %add36, %13
  br i1 %cmp37, label %btrfs_chunk_item_size.exit.out_short_read_crit_edge, label %if.end40

btrfs_chunk_item_size.exit.out_short_read_crit_edge: ; preds = %btrfs_chunk_item_size.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_short_read

if.end40:                                         ; preds = %btrfs_chunk_item_size.exit
  %call41 = call fastcc i32 @read_one_chunk(ptr noundef nonnull %key, ptr noundef %call, ptr noundef %25)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %if.end44, label %if.end40.while.end_crit_edge

if.end40.while.end_crit_edge:                     ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

if.end44:                                         ; preds = %if.end40
  %add.ptr45 = getelementptr i8, ptr %add.ptr, i32 %add.i
  %add46 = add i32 %add.i, %add10
  %cmp6 = icmp ult i32 %add36, %13
  br i1 %cmp6, label %if.end44.while.body_crit_edge, label %if.end44.while.end_crit_edge

if.end44.while.end_crit_edge:                     ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

if.end44.while.body_crit_edge:                    ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body

while.end:                                        ; preds = %if.end44.while.end_crit_edge, %if.end40.while.end_crit_edge, %if.then33, %if.then28, %if.then15, %if.end.while.end_crit_edge
  %ret.1 = phi i32 [ -5, %if.then15 ], [ -5, %if.then33 ], [ -5, %if.then28 ], [ 0, %if.end.while.end_crit_edge ], [ 0, %if.end44.while.end_crit_edge ], [ %call41, %if.end40.while.end_crit_edge ]
  tail call void @clear_extent_buffer_uptodate(ptr noundef %call) #23
  tail call void @free_extent_buffer_stale(ptr noundef %call) #23
  br label %cleanup

out_short_read:                                   ; preds = %btrfs_chunk_item_size.exit.out_short_read_crit_edge, %if.end18.out_short_read_crit_edge, %while.body.out_short_read_crit_edge
  %len.0 = phi i32 [ 17, %while.body.out_short_read_crit_edge ], [ 80, %if.end18.out_short_read_crit_edge ], [ %add.i, %btrfs_chunk_item_size.exit.out_short_read_crit_edge ]
  %cur_offset.1 = phi i32 [ %cur_offset.0121, %while.body.out_short_read_crit_edge ], [ %add, %if.end18.out_short_read_crit_edge ], [ %add, %btrfs_chunk_item_size.exit.out_short_read_crit_edge ]
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.61, i32 noundef %len.0, i32 noundef %cur_offset.1) #28
  tail call void @clear_extent_buffer_uptodate(ptr noundef %call) #23
  tail call void @free_extent_buffer_stale(ptr noundef %call) #23
  br label %cleanup

cleanup:                                          ; preds = %out_short_read, %while.end, %if.then
  %retval.0 = phi i32 [ %10, %if.then ], [ -5, %out_short_read ], [ %ret.1, %while.end ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #23
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_find_create_tree_block(ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @set_extent_buffer_uptodate(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @write_extent_buffer(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @read_one_chunk(ptr nocapture noundef readonly %key, ptr noundef %leaf, ptr noundef %chunk) unnamed_addr #4 align 64 {
entry:
  %args = alloca %struct.btrfs_dev_lookup_args, align 8
  %uuid = alloca [16 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %args) #23
  %0 = call ptr @memcpy(ptr %args, ptr @__const.read_one_dev.args, i32 24)
  %fs_info1 = getelementptr inbounds %struct.extent_buffer, ptr %leaf, i32 0, i32 3
  %1 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %fs_info1, align 8
  %mapping_tree = getelementptr inbounds %struct.btrfs_fs_info, ptr %2, i32 0, i32 19
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %uuid) #23
  %offset = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %3 = call ptr @memset(ptr %uuid, i32 255, i32 16)
  %4 = ptrtoint ptr %offset to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %5 = load i64, ptr %offset, align 1
  %call.i = tail call i64 @btrfs_get_64(ptr noundef %leaf, ptr noundef %chunk, i32 noundef 0) #23
  %call.i237 = tail call i64 @btrfs_get_64(ptr noundef %leaf, ptr noundef %chunk, i32 noundef 24) #23
  %call.i238 = tail call zeroext i16 @btrfs_get_16(ptr noundef %leaf, ptr noundef %chunk, i32 noundef 44) #23
  %conv = zext i16 %call.i238 to i32
  %and.i = and i64 %call.i237, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i = icmp eq i64 %and.i, 0
  %add.i = add i64 %call.i, %5
  call void @__sanitizer_cov_trace_const_cmp8(i64 17592186040320, i64 %add.i)
  %cmp.i239 = icmp ult i64 %add.i, 17592186040320
  %or.cond.i = or i1 %cmp.i239, %tobool.not.i
  br i1 %or.cond.i, label %if.end, label %check_32bit_meta_chunk.exit.thread

check_32bit_meta_chunk.exit.thread:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @btrfs_err_32bit_limit(ptr noundef %2) #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp8(i64 10995116277760, i64 %add.i)
  %cmp.i243 = icmp ult i64 %add.i, 10995116277760
  %or.cond.i244 = or i1 %cmp.i243, %tobool.not.i
  br i1 %or.cond.i244, label %if.end.warn_32bit_meta_chunk.exit_crit_edge, label %if.end2.i245

if.end.warn_32bit_meta_chunk.exit_crit_edge:      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %warn_32bit_meta_chunk.exit

if.end2.i245:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @btrfs_warn_32bit_limit(ptr noundef %2) #23
  br label %warn_32bit_meta_chunk.exit

warn_32bit_meta_chunk.exit:                       ; preds = %if.end2.i245, %if.end.warn_32bit_meta_chunk.exit_crit_edge
  %6 = ptrtoint ptr %leaf to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %leaf, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 65536, i64 %7)
  %cmp6 = icmp eq i64 %7, 65536
  br i1 %cmp6, label %if.then8, label %warn_32bit_meta_chunk.exit.if.end12_crit_edge

warn_32bit_meta_chunk.exit.if.end12_crit_edge:    ; preds = %warn_32bit_meta_chunk.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end12

if.then8:                                         ; preds = %warn_32bit_meta_chunk.exit
  %call9 = tail call i32 @btrfs_check_chunk_valid(ptr noundef %leaf, ptr noundef %chunk, i64 noundef %5) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool.not = icmp eq i32 %call9, 0
  br i1 %tobool.not, label %if.then8.if.end12_crit_edge, label %if.then8.cleanup_crit_edge

if.then8.cleanup_crit_edge:                       ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then8.if.end12_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end12

if.end12:                                         ; preds = %if.then8.if.end12_crit_edge, %warn_32bit_meta_chunk.exit.if.end12_crit_edge
  %lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %2, i32 0, i32 19, i32 2
  tail call void @_raw_read_lock(ptr noundef %lock) #23
  %call13 = tail call ptr @lookup_extent_mapping(ptr noundef %mapping_tree, i64 noundef %5, i64 noundef 1) #23
  tail call void @_raw_read_unlock(ptr noundef %lock) #23
  %tobool15.not = icmp eq ptr %call13, null
  br i1 %tobool15.not, label %if.end12.if.end27_crit_edge, label %land.lhs.true

if.end12.if.end27_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end27

land.lhs.true:                                    ; preds = %if.end12
  %start16 = getelementptr inbounds %struct.extent_map, ptr %call13, i32 0, i32 1
  %8 = ptrtoint ptr %start16 to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %start16, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %9, i64 %5)
  %cmp17.not = icmp ugt i64 %9, %5
  br i1 %cmp17.not, label %land.lhs.true.if.then25_crit_edge, label %land.lhs.true19

land.lhs.true.if.then25_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then25

land.lhs.true19:                                  ; preds = %land.lhs.true
  %len = getelementptr inbounds %struct.extent_map, ptr %call13, i32 0, i32 2
  %10 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %len, align 8
  %add = add i64 %11, %9
  call void @__sanitizer_cov_trace_cmp8(i64 %add, i64 %5)
  %cmp21 = icmp ugt i64 %add, %5
  br i1 %cmp21, label %if.then23, label %land.lhs.true19.if.then25_crit_edge

land.lhs.true19.if.then25_crit_edge:              ; preds = %land.lhs.true19
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then25

if.then23:                                        ; preds = %land.lhs.true19
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @free_extent_map(ptr noundef nonnull %call13) #23
  br label %cleanup

if.then25:                                        ; preds = %land.lhs.true19.if.then25_crit_edge, %land.lhs.true.if.then25_crit_edge
  tail call void @free_extent_map(ptr noundef nonnull %call13) #23
  br label %if.end27

if.end27:                                         ; preds = %if.then25, %if.end12.if.end27_crit_edge
  %call28 = tail call ptr @alloc_extent_map() #23
  %tobool29.not = icmp eq ptr %call28, null
  br i1 %tobool29.not, label %if.end27.cleanup_crit_edge, label %if.end8.i

if.end27.cleanup_crit_edge:                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end8.i:                                        ; preds = %if.end27
  %mul = mul nuw nsw i32 %conv, 24
  %add32 = add nuw nsw i32 %mul, 40
  %call9.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add32, i32 noundef 3136) #30
  %tobool34.not = icmp eq ptr %call9.i, null
  br i1 %tobool34.not, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @free_extent_map(ptr noundef nonnull %call28) #23
  br label %cleanup

if.end36:                                         ; preds = %if.end8.i
  %flags = getelementptr inbounds %struct.extent_map, ptr %call28, i32 0, i32 11
  tail call void @_set_bit(i32 noundef 5, ptr noundef %flags) #23
  %map_lookup = getelementptr inbounds %struct.extent_map, ptr %call28, i32 0, i32 12
  %12 = ptrtoint ptr %map_lookup to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call9.i, ptr %map_lookup, align 4
  %start37 = getelementptr inbounds %struct.extent_map, ptr %call28, i32 0, i32 1
  %13 = ptrtoint ptr %start37 to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %5, ptr %start37, align 8
  %len38 = getelementptr inbounds %struct.extent_map, ptr %call28, i32 0, i32 2
  %14 = ptrtoint ptr %len38 to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %call.i, ptr %len38, align 8
  %orig_start = getelementptr inbounds %struct.extent_map, ptr %call28, i32 0, i32 5
  %15 = ptrtoint ptr %orig_start to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 0, ptr %orig_start, align 8
  %block_start = getelementptr inbounds %struct.extent_map, ptr %call28, i32 0, i32 8
  %16 = ptrtoint ptr %block_start to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 0, ptr %block_start, align 8
  %block_len = getelementptr inbounds %struct.extent_map, ptr %call28, i32 0, i32 9
  %17 = ptrtoint ptr %block_len to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %call.i, ptr %block_len, align 8
  %num_stripes40 = getelementptr inbounds %struct.map_lookup, ptr %call9.i, i32 0, i32 4
  %18 = ptrtoint ptr %num_stripes40 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %conv, ptr %num_stripes40, align 8
  %call.i246 = tail call i32 @btrfs_get_32(ptr noundef %leaf, ptr noundef %chunk, i32 noundef 36) #23
  %io_width = getelementptr inbounds %struct.map_lookup, ptr %call9.i, i32 0, i32 2
  %19 = ptrtoint ptr %io_width to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %call.i246, ptr %io_width, align 4
  %call.i247 = tail call i32 @btrfs_get_32(ptr noundef %leaf, ptr noundef %chunk, i32 noundef 32) #23
  %io_align = getelementptr inbounds %struct.map_lookup, ptr %call9.i, i32 0, i32 1
  %20 = ptrtoint ptr %io_align to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %call.i247, ptr %io_align, align 8
  %call.i248 = tail call i64 @btrfs_get_64(ptr noundef %leaf, ptr noundef %chunk, i32 noundef 16) #23
  %stripe_len = getelementptr inbounds %struct.map_lookup, ptr %call9.i, i32 0, i32 3
  %21 = ptrtoint ptr %stripe_len to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %call.i248, ptr %stripe_len, align 16
  %22 = ptrtoint ptr %call9.i to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %call.i237, ptr %call9.i, align 128
  %call.i249 = tail call zeroext i16 @btrfs_get_16(ptr noundef %leaf, ptr noundef %chunk, i32 noundef 46) #23
  %conv46 = zext i16 %call.i249 to i32
  %sub_stripes = getelementptr inbounds %struct.map_lookup, ptr %call9.i, i32 0, i32 5
  %23 = ptrtoint ptr %sub_stripes to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %conv46, ptr %sub_stripes, align 4
  %verified_stripes = getelementptr inbounds %struct.map_lookup, ptr %call9.i, i32 0, i32 6
  %24 = ptrtoint ptr %verified_stripes to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 0, ptr %verified_stripes, align 32
  %25 = ptrtoint ptr %len38 to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %len38, align 8
  %27 = ptrtoint ptr %num_stripes40 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %num_stripes40, align 8
  %and.i.i.i = and i64 %call.i237, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i64 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.else.i.i.i, label %if.end36.calc_data_stripes.exit.i_crit_edge

if.end36.calc_data_stripes.exit.i_crit_edge:      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i

if.else.i.i.i:                                    ; preds = %if.end36
  %and1.i.i.i = and i64 %call.i237, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i.i.i)
  %tobool2.not.i.i.i = icmp eq i64 %and1.i.i.i, 0
  br i1 %tobool2.not.i.i.i, label %if.else4.i.i.i, label %if.else.i.i.i.calc_data_stripes.exit.i_crit_edge

if.else.i.i.i.calc_data_stripes.exit.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i

if.else4.i.i.i:                                   ; preds = %if.else.i.i.i
  %and5.i.i.i = and i64 %call.i237, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5.i.i.i)
  %tobool6.not.i.i.i = icmp eq i64 %and5.i.i.i, 0
  br i1 %tobool6.not.i.i.i, label %if.else8.i.i.i, label %if.else4.i.i.i.calc_data_stripes.exit.i_crit_edge

if.else4.i.i.i.calc_data_stripes.exit.i_crit_edge: ; preds = %if.else4.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i

if.else8.i.i.i:                                   ; preds = %if.else4.i.i.i
  %and9.i.i.i = and i64 %call.i237, 1024
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and9.i.i.i)
  %tobool10.not.i.i.i = icmp eq i64 %and9.i.i.i, 0
  br i1 %tobool10.not.i.i.i, label %if.else12.i.i.i, label %if.else8.i.i.i.calc_data_stripes.exit.i_crit_edge

if.else8.i.i.i.calc_data_stripes.exit.i_crit_edge: ; preds = %if.else8.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i

if.else12.i.i.i:                                  ; preds = %if.else8.i.i.i
  %and13.i.i.i = and i64 %call.i237, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and13.i.i.i)
  %tobool14.not.i.i.i = icmp eq i64 %and13.i.i.i, 0
  br i1 %tobool14.not.i.i.i, label %if.else16.i.i.i, label %if.else12.i.i.i.calc_data_stripes.exit.i_crit_edge

if.else12.i.i.i.calc_data_stripes.exit.i_crit_edge: ; preds = %if.else12.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i

if.else16.i.i.i:                                  ; preds = %if.else12.i.i.i
  %and17.i.i.i = and i64 %call.i237, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and17.i.i.i)
  %tobool18.not.i.i.i = icmp eq i64 %and17.i.i.i, 0
  br i1 %tobool18.not.i.i.i, label %if.else20.i.i.i, label %if.else16.i.i.i.calc_data_stripes.exit.i_crit_edge

if.else16.i.i.i.calc_data_stripes.exit.i_crit_edge: ; preds = %if.else16.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i

if.else20.i.i.i:                                  ; preds = %if.else16.i.i.i
  %and21.i.i.i = and i64 %call.i237, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and21.i.i.i)
  %tobool22.not.i.i.i = icmp eq i64 %and21.i.i.i, 0
  br i1 %tobool22.not.i.i.i, label %if.else24.i.i.i, label %if.else20.i.i.i.calc_data_stripes.exit.i_crit_edge

if.else20.i.i.i.calc_data_stripes.exit.i_crit_edge: ; preds = %if.else20.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i

if.else24.i.i.i:                                  ; preds = %if.else20.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %and25.i.i.i = and i64 %call.i237, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and25.i.i.i)
  %tobool26.not.i.i.i = icmp eq i64 %and25.i.i.i, 0
  %..i.i.i = select i1 %tobool26.not.i.i.i, i32 4, i32 6
  br label %calc_data_stripes.exit.i

calc_data_stripes.exit.i:                         ; preds = %if.else24.i.i.i, %if.else20.i.i.i.calc_data_stripes.exit.i_crit_edge, %if.else16.i.i.i.calc_data_stripes.exit.i_crit_edge, %if.else12.i.i.i.calc_data_stripes.exit.i_crit_edge, %if.else8.i.i.i.calc_data_stripes.exit.i_crit_edge, %if.else4.i.i.i.calc_data_stripes.exit.i_crit_edge, %if.else.i.i.i.calc_data_stripes.exit.i_crit_edge, %if.end36.calc_data_stripes.exit.i_crit_edge
  %retval.0.i.i.i = phi i32 [ 0, %if.end36.calc_data_stripes.exit.i_crit_edge ], [ 1, %if.else.i.i.i.calc_data_stripes.exit.i_crit_edge ], [ 7, %if.else4.i.i.i.calc_data_stripes.exit.i_crit_edge ], [ 8, %if.else8.i.i.i.calc_data_stripes.exit.i_crit_edge ], [ 2, %if.else12.i.i.i.calc_data_stripes.exit.i_crit_edge ], [ 3, %if.else16.i.i.i.calc_data_stripes.exit.i_crit_edge ], [ 5, %if.else20.i.i.i.calc_data_stripes.exit.i_crit_edge ], [ %..i.i.i, %if.else24.i.i.i ]
  %ncopies1.i.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i.i, i32 6
  %29 = ptrtoint ptr %ncopies1.i.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %ncopies1.i.i, align 2
  %conv.i.i = zext i8 %30 to i32
  %nparity3.i.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i.i, i32 7
  %31 = ptrtoint ptr %nparity3.i.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %nparity3.i.i, align 1
  %conv4.i.i = zext i8 %32 to i32
  %sub.i.i = sub i32 %28, %conv4.i.i
  %div.i.i = sdiv i32 %sub.i.i, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %26)
  %cmp164.i.i.i = icmp ult i64 %26, 4294967296
  br i1 %cmp164.i.i.i, label %if.then168.i.i.i, label %if.else174.i.i.i, !prof !423

if.then168.i.i.i:                                 ; preds = %calc_data_stripes.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i.i.i = trunc i64 %26 to i32
  %div172.i.i.i = udiv i32 %conv169.i.i.i, %div.i.i
  %conv173.i.i.i = zext i32 %div172.i.i.i to i64
  br label %calc_stripe_length.exit

if.else174.i.i.i:                                 ; preds = %calc_data_stripes.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %33 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %div.i.i, i64 %26) #35, !srcloc !491
  %asmresult1.i.i.i.i = extractvalue { i64, i64 } %33, 1
  br label %calc_stripe_length.exit

calc_stripe_length.exit:                          ; preds = %if.else174.i.i.i, %if.then168.i.i.i
  %dividend.addr.0.i.i.i = phi i64 [ %conv173.i.i.i, %if.then168.i.i.i ], [ %asmresult1.i.i.i.i, %if.else174.i.i.i ]
  %orig_block_len = getelementptr inbounds %struct.extent_map, ptr %call28, i32 0, i32 6
  %34 = ptrtoint ptr %orig_block_len to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %dividend.addr.0.i.i.i, ptr %orig_block_len, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %call.i238)
  %cmp50265.not = icmp eq i16 %call.i238, 0
  br i1 %cmp50265.not, label %calc_stripe_length.exit.for.end_crit_edge, label %for.body.lr.ph

calc_stripe_length.exit.for.end_crit_edge:        ; preds = %calc_stripe_length.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.body.lr.ph:                                   ; preds = %calc_stripe_length.exit
  %35 = ptrtoint ptr %chunk to i32
  %add.i.i = add i32 %35, 48
  %uuid57 = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 1
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %2, i32 0, i32 100
  %mount_opt = getelementptr inbounds %struct.btrfs_fs_info, ptr %2, i32 0, i32 31
  br label %for.body

for.body:                                         ; preds = %if.end96.for.body_crit_edge, %for.body.lr.ph
  %i.0266 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end96.for.body_crit_edge ]
  %mul.i.i = shl i32 %i.0266, 5
  %add1.i.i = add i32 %add.i.i, %mul.i.i
  %36 = inttoptr i32 %add1.i.i to ptr
  %call.i.i = call i64 @btrfs_get_64(ptr noundef %leaf, ptr noundef %36, i32 noundef 8) #23
  %arrayidx = getelementptr %struct.map_lookup, ptr %call9.i, i32 0, i32 7, i32 %i.0266
  %physical = getelementptr %struct.map_lookup, ptr %call9.i, i32 0, i32 7, i32 %i.0266, i32 1
  %37 = ptrtoint ptr %physical to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %call.i.i, ptr %physical, align 8
  %call.i.i253 = call i64 @btrfs_get_64(ptr noundef %leaf, ptr noundef %36, i32 noundef 0) #23
  %38 = ptrtoint ptr %args to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %call.i.i253, ptr %args, align 8
  %add.ptr.i.i = getelementptr i8, ptr %36, i32 16
  %39 = ptrtoint ptr %add.ptr.i.i to i32
  call void @read_extent_buffer(ptr noundef %leaf, ptr noundef nonnull %uuid, i32 noundef %39, i32 noundef 16) #23
  %40 = ptrtoint ptr %uuid57 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %uuid, ptr %uuid57, align 8
  %41 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %fs_devices, align 8
  %call58 = call ptr @btrfs_find_device(ptr noundef %42, ptr noundef nonnull %args)
  %43 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %call58, ptr %arrayidx, align 8
  %tobool64.not = icmp eq ptr %call58, null
  br i1 %tobool64.not, label %land.lhs.true65, label %for.body.if.end96_crit_edge

for.body.if.end96_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end96

land.lhs.true65:                                  ; preds = %for.body
  %44 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %mount_opt, align 8
  %and = and i32 %45, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool66.not = icmp eq i32 %and, 0
  br i1 %tobool66.not, label %if.then67, label %if.then74

if.then67:                                        ; preds = %land.lhs.true65
  call void @free_extent_map(ptr noundef nonnull %call28) #23
  %call.i257 = call i32 @___ratelimit(ptr noundef nonnull @btrfs_report_missing_device._rs, ptr noundef nonnull @__func__.btrfs_report_missing_device) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i257)
  %tobool1.not.i = icmp eq i32 %call.i257, 0
  br i1 %tobool1.not.i, label %if.then67.cleanup_crit_edge, label %if.end9.sink.split.i

if.then67.cleanup_crit_edge:                      ; preds = %if.then67
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end9.sink.split.i:                             ; preds = %if.then67
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %2, ptr noundef nonnull @.str.160, i64 noundef %call.i.i253, ptr noundef nonnull %uuid) #28
  br label %cleanup

if.then74:                                        ; preds = %land.lhs.true65
  %46 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %fs_devices, align 8
  %call77 = call fastcc ptr @add_missing_dev(ptr noundef %47, i64 noundef %call.i.i253, ptr noundef nonnull %uuid)
  %48 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %call77, ptr %arrayidx, align 8
  %cmp.i258 = icmp ugt ptr %call77, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i258, label %if.then85, label %if.end94

if.then85:                                        ; preds = %if.then74
  call void @__sanitizer_cov_trace_pc() #25
  call void @free_extent_map(ptr noundef nonnull %call28) #23
  %49 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %arrayidx, align 8
  %51 = ptrtoint ptr %50 to i32
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %2, ptr noundef nonnull @.str.158, i64 noundef %call.i.i253, i32 noundef %51) #28
  %52 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %arrayidx, align 8
  %54 = ptrtoint ptr %53 to i32
  br label %cleanup

if.end94:                                         ; preds = %if.then74
  %call4.i = call i32 @___ratelimit(ptr noundef nonnull @btrfs_report_missing_device._rs.161, ptr noundef nonnull @__func__.btrfs_report_missing_device) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %if.end94.if.end96_crit_edge, label %if.end9.sink.split.i259

if.end94.if.end96_crit_edge:                      ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end96

if.end9.sink.split.i259:                          ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %2, ptr noundef nonnull @.str.162, i64 noundef %call.i.i253, ptr noundef nonnull %uuid) #28
  br label %if.end96

if.end96:                                         ; preds = %if.end9.sink.split.i259, %if.end94.if.end96_crit_edge, %for.body.if.end96_crit_edge
  %55 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %arrayidx, align 8
  %dev_state = getelementptr inbounds %struct.btrfs_device, ptr %56, i32 0, i32 10
  call void @_set_bit(i32 noundef 1, ptr noundef %dev_state) #23
  %inc = add nuw nsw i32 %i.0266, 1
  %exitcond.not = icmp eq i32 %inc, %conv
  br i1 %exitcond.not, label %if.end96.for.end_crit_edge, label %if.end96.for.body_crit_edge

if.end96.for.body_crit_edge:                      ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

if.end96.for.end_crit_edge:                       ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.end:                                          ; preds = %if.end96.for.end_crit_edge, %calc_stripe_length.exit.for.end_crit_edge
  call void @_raw_write_lock(ptr noundef %lock) #23
  %call101 = call i32 @add_extent_mapping(ptr noundef %mapping_tree, ptr noundef nonnull %call28, i32 noundef 0) #23
  call void @_raw_write_unlock(ptr noundef %lock) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call101)
  %cmp103 = icmp slt i32 %call101, 0
  br i1 %cmp103, label %if.then105, label %for.end.if.end108_crit_edge

for.end.if.end108_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end108

if.then105:                                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  %57 = ptrtoint ptr %start37 to i32
  call void @__asan_load8_noabort(i32 %57)
  %58 = load i64, ptr %start37, align 8
  %59 = ptrtoint ptr %len38 to i32
  call void @__asan_load8_noabort(i32 %59)
  %60 = load i64, ptr %len38, align 8
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %2, ptr noundef nonnull @.str.159, i64 noundef %58, i64 noundef %60, i32 noundef %call101) #28
  br label %if.end108

if.end108:                                        ; preds = %if.then105, %for.end.if.end108_crit_edge
  call void @free_extent_map(ptr noundef nonnull %call28) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end108, %if.then85, %if.end9.sink.split.i, %if.then67.cleanup_crit_edge, %if.then35, %if.end27.cleanup_crit_edge, %if.then23, %if.then8.cleanup_crit_edge, %check_32bit_meta_chunk.exit.thread
  %retval.0 = phi i32 [ 0, %if.then23 ], [ %54, %if.then85 ], [ %call101, %if.end108 ], [ -12, %if.then35 ], [ %call9, %if.then8.cleanup_crit_edge ], [ -12, %if.end27.cleanup_crit_edge ], [ -75, %check_32bit_meta_chunk.exit.thread ], [ -2, %if.then67.cleanup_crit_edge ], [ -2, %if.end9.sink.split.i ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %uuid) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args) #23
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @clear_extent_buffer_uptodate(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_extent_buffer_stale(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @btrfs_check_rw_degradable(ptr noundef %fs_info, ptr noundef readnone %failing_dev) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %mapping_tree = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 19
  %lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 19, i32 2
  tail call void @_raw_read_lock(ptr noundef %lock) #23
  %call = tail call ptr @lookup_extent_mapping(ptr noundef %mapping_tree, i64 noundef 0, i64 noundef -1) #23
  tail call void @_raw_read_unlock(ptr noundef %lock) #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup36_crit_edge, label %while.body.lr.ph

entry.cleanup36_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup36

while.body.lr.ph:                                 ; preds = %entry
  %tobool13.not = icmp ne ptr %failing_dev, null
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %em.080 = phi ptr [ %call, %while.body.lr.ph ], [ %call30, %cleanup.while.body_crit_edge ]
  %map_lookup = getelementptr inbounds %struct.extent_map, ptr %em.080, i32 0, i32 12
  %0 = ptrtoint ptr %map_lookup to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %map_lookup, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %1, align 8
  %call3 = tail call i32 @btrfs_get_num_tolerated_disk_barrier_failures(i64 noundef %3) #23
  %num_stripes = getelementptr inbounds %struct.map_lookup, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %num_stripes to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_stripes, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp75 = icmp sgt i32 %5, 0
  br i1 %cmp75, label %while.body.for.body_crit_edge, label %while.body.for.end_crit_edge

while.body.for.end_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

while.body.for.body_crit_edge:                    ; preds = %while.body
  br label %for.body

for.body:                                         ; preds = %if.end19.for.body_crit_edge, %while.body.for.body_crit_edge
  %i.078 = phi i32 [ %inc20, %if.end19.for.body_crit_edge ], [ 0, %while.body.for.body_crit_edge ]
  %missing.076 = phi i32 [ %spec.select, %if.end19.for.body_crit_edge ], [ 0, %while.body.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.map_lookup, ptr %1, i32 0, i32 7, i32 %i.078
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %tobool5.not = icmp eq ptr %7, null
  br i1 %tobool5.not, label %for.body.if.end19_crit_edge, label %lor.lhs.false

for.body.if.end19_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end19

lor.lhs.false:                                    ; preds = %for.body
  %bdev = getelementptr inbounds %struct.btrfs_device, ptr %7, i32 0, i32 7
  %8 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %bdev, align 8
  %tobool6.not = icmp eq ptr %9, null
  br i1 %tobool6.not, label %lor.lhs.false.if.end19_crit_edge, label %lor.lhs.false7

lor.lhs.false.if.end19_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end19

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %dev_state = getelementptr inbounds %struct.btrfs_device, ptr %7, i32 0, i32 10
  %10 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %dev_state, align 4
  %12 = and i32 %11, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool9.not = icmp eq i32 %12, 0
  br i1 %tobool9.not, label %lor.lhs.false10, label %lor.lhs.false7.if.end19_crit_edge

lor.lhs.false7.if.end19_crit_edge:                ; preds = %lor.lhs.false7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end19

lor.lhs.false10:                                  ; preds = %lor.lhs.false7
  %last_flush_error = getelementptr inbounds %struct.btrfs_device, ptr %7, i32 0, i32 11
  %13 = ptrtoint ptr %last_flush_error to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %last_flush_error, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool11.not = icmp eq i8 %14, 0
  br i1 %tobool11.not, label %if.else, label %lor.lhs.false10.if.end19_crit_edge

lor.lhs.false10.if.end19_crit_edge:               ; preds = %lor.lhs.false10
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end19

if.else:                                          ; preds = %lor.lhs.false10
  call void @__sanitizer_cov_trace_pc() #25
  %cmp14 = icmp eq ptr %7, %failing_dev
  %or.cond = select i1 %tobool13.not, i1 %cmp14, i1 false
  %inc17 = zext i1 %or.cond to i32
  br label %if.end19

if.end19:                                         ; preds = %if.else, %lor.lhs.false10.if.end19_crit_edge, %lor.lhs.false7.if.end19_crit_edge, %lor.lhs.false.if.end19_crit_edge, %for.body.if.end19_crit_edge
  %inc17.sink = phi i32 [ %inc17, %if.else ], [ 1, %lor.lhs.false10.if.end19_crit_edge ], [ 1, %lor.lhs.false7.if.end19_crit_edge ], [ 1, %lor.lhs.false.if.end19_crit_edge ], [ 1, %for.body.if.end19_crit_edge ]
  %spec.select = add i32 %missing.076, %inc17.sink
  %inc20 = add nuw nsw i32 %i.078, 1
  %exitcond.not = icmp eq i32 %inc20, %5
  br i1 %exitcond.not, label %if.end19.for.end_crit_edge, label %if.end19.for.body_crit_edge

if.end19.for.body_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

if.end19.for.end_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.end:                                          ; preds = %if.end19.for.end_crit_edge, %while.body.for.end_crit_edge
  %missing.0.lcssa = phi i32 [ 0, %while.body.for.end_crit_edge ], [ %spec.select, %if.end19.for.end_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %missing.0.lcssa, i32 %call3)
  %cmp21 = icmp sgt i32 %missing.0.lcssa, %call3
  br i1 %cmp21, label %if.then23, label %cleanup

if.then23:                                        ; preds = %for.end
  %tobool24.not = icmp eq ptr %failing_dev, null
  br i1 %tobool24.not, label %if.then25, label %if.then23.cleanup.thread_crit_edge

if.then23.cleanup.thread_crit_edge:               ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.thread

if.then25:                                        ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #25
  %start = getelementptr inbounds %struct.extent_map, ptr %em.080, i32 0, i32 1
  %15 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %start, align 8
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.62, i64 noundef %16, i32 noundef %missing.0.lcssa, i32 noundef %call3) #28
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %if.then25, %if.then23.cleanup.thread_crit_edge
  tail call void @free_extent_map(ptr noundef nonnull %em.080) #23
  br label %cleanup36

cleanup:                                          ; preds = %for.end
  %start.i = getelementptr inbounds %struct.extent_map, ptr %em.080, i32 0, i32 1
  %17 = ptrtoint ptr %start.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %start.i, align 8
  %len.i = getelementptr inbounds %struct.extent_map, ptr %em.080, i32 0, i32 2
  %19 = ptrtoint ptr %len.i to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %len.i, align 8
  %21 = tail call i64 @llvm.uadd.sat.i64(i64 %18, i64 %20) #23
  tail call void @free_extent_map(ptr noundef nonnull %em.080) #23
  tail call void @_raw_read_lock(ptr noundef %lock) #23
  %sub = xor i64 %21, -1
  %call30 = tail call ptr @lookup_extent_mapping(ptr noundef %mapping_tree, i64 noundef %21, i64 noundef %sub) #23
  tail call void @_raw_read_unlock(ptr noundef %lock) #23
  %tobool2.not = icmp eq ptr %call30, null
  br i1 %tobool2.not, label %cleanup.cleanup36_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body

cleanup.cleanup36_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup36

cleanup36:                                        ; preds = %cleanup.cleanup36_crit_edge, %cleanup.thread, %entry.cleanup36_crit_edge
  %ret.2.off0 = phi i1 [ false, %entry.cleanup36_crit_edge ], [ false, %cleanup.thread ], [ true, %cleanup.cleanup36_crit_edge ]
  ret i1 %ret.2.off0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_read_chunk_tree(ptr noundef %fs_info) local_unnamed_addr #4 align 64 {
entry:
  %args.i = alloca %struct.btrfs_dev_lookup_args, align 8
  %fs_uuid.i = alloca [16 x i8], align 1
  %dev_uuid.i = alloca [16 x i8], align 1
  %disk_key.i = alloca %struct.btrfs_disk_key, align 8
  %key = alloca %struct.btrfs_key, align 8
  %found_key = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %chunk_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 3
  %0 = ptrtoint ptr %chunk_root to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chunk_root, align 8
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #23
  %2 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %3 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %found_key) #23
  %4 = getelementptr inbounds %struct.btrfs_key, ptr %found_key, i32 0, i32 1
  %5 = getelementptr inbounds %struct.btrfs_key, ptr %found_key, i32 0, i32 2
  %call = tail call ptr @btrfs_alloc_path() #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup79_crit_edge, label %if.end

entry.cleanup79_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup79

if.end:                                           ; preds = %entry
  tail call void @mutex_lock_nested(ptr noundef nonnull @uuid_mutex, i32 noundef 0) #23
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %6 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %fs_devices, align 8
  %total_rw_bytes = getelementptr inbounds %struct.btrfs_fs_devices, ptr %7, i32 0, i32 8
  %8 = ptrtoint ptr %total_rw_bytes to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 0, ptr %total_rw_bytes, align 8
  %flags = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 1
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %flags, align 4
  %11 = and i32 %10, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool2.not = icmp eq i32 %11, 0
  br i1 %tobool2.not, label %cond.end, label %cond.false, !prof !423

cond.false:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.63, i32 noundef 7609) #32
  unreachable

cond.end:                                         ; preds = %if.end
  %skip_locking = getelementptr inbounds %struct.btrfs_path, ptr %call, i32 0, i32 5
  %12 = ptrtoint ptr %skip_locking to i32
  call void @__asan_load1_noabort(i32 %12)
  %bf.load = load i8, ptr %skip_locking, align 2
  %bf.set = or i8 %bf.load, 32
  store i8 %bf.set, ptr %skip_locking, align 2
  %13 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 1, ptr %key, align 8
  %14 = ptrtoint ptr %3 to i32
  call void @__asan_storeN_noabort(i32 %14, i32 8)
  store i64 0, ptr %3, align 1
  %15 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 0, ptr %2, align 8
  %call6 = call i32 @btrfs_search_slot(ptr noundef null, ptr noundef %1, ptr noundef nonnull %key, ptr noundef nonnull %call, i32 noundef 0, i32 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %cmp = icmp slt i32 %call6, 0
  br i1 %cmp, label %cond.end.error_crit_edge, label %while.cond.preheader

cond.end.error_crit_edge:                         ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

while.cond.preheader:                             ; preds = %cond.end
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %call, i32 0, i32 1
  %arrayidx22 = getelementptr [8 x ptr], ptr %call, i32 0, i32 1
  %16 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 1
  %17 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 2
  %uuid.i = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args.i, i32 0, i32 1
  %fsid.i = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args.i, i32 0, i32 2
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.end54, %while.cond.preheader
  %total_dev.0.ph = phi i64 [ %total_dev.2, %if.end54 ], [ 0, %while.cond.preheader ]
  %last_ra_node.0.ph = phi i64 [ %last_ra_node.1, %if.end54 ], [ 0, %while.cond.preheader ]
  br label %while.cond

while.cond:                                       ; preds = %if.then12.while.cond_crit_edge, %while.cond.outer
  %18 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %call, align 4
  %20 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %slots, align 4
  %pages.i = getelementptr inbounds %struct.extent_buffer, ptr %19, i32 0, i32 12
  %22 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pages.i, align 4
  %call.i = call ptr @page_address(ptr noundef %23) #23
  %24 = ptrtoint ptr %19 to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %19, align 8
  %conv.i = trunc i64 %25 to i32
  %and.i = and i32 %conv.i, 4095
  %add.ptr.i = getelementptr i8, ptr %call.i, i32 %and.i
  %nritems.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i, i32 0, i32 7
  %26 = ptrtoint ptr %nritems.i to i32
  call void @__asan_loadN_noabort(i32 %26, i32 4)
  %27 = load i32, ptr %nritems.i, align 1
  %28 = call i32 @llvm.bswap.i32(i32 %27) #23
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %28)
  %cmp11.not = icmp ult i32 %21, %28
  br i1 %cmp11.not, label %if.end20, label %if.then12

if.then12:                                        ; preds = %while.cond
  %call.i130 = call i32 @btrfs_next_old_leaf(ptr noundef %1, ptr noundef nonnull %call, i64 noundef 0) #23
  %cmp14 = icmp eq i32 %call.i130, 0
  br i1 %cmp14, label %if.then12.while.cond_crit_edge, label %if.end16

if.then12.while.cond_crit_edge:                   ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.cond

if.end16:                                         ; preds = %if.then12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i130)
  %cmp17 = icmp slt i32 %call.i130, 0
  br i1 %cmp17, label %if.end16.error_crit_edge, label %while.end

if.end16.error_crit_edge:                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

if.end20:                                         ; preds = %while.cond
  %29 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx22, align 4
  %tobool23.not = icmp eq ptr %30, null
  br i1 %tobool23.not, label %if.end20.if.end29_crit_edge, label %if.then24

if.end20.if.end29_crit_edge:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end29

if.then24:                                        ; preds = %if.end20
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %30, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %last_ra_node.0.ph, i64 %32)
  %cmp25.not = icmp eq i64 %last_ra_node.0.ph, %32
  br i1 %cmp25.not, label %if.then24.if.end29_crit_edge, label %if.then26

if.then24.if.end29_crit_edge:                     ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end29

if.then26:                                        ; preds = %if.then24
  %pages.i.i = getelementptr inbounds %struct.extent_buffer, ptr %30, i32 0, i32 12
  %33 = ptrtoint ptr %pages.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %pages.i.i, align 4
  %call.i.i = call ptr @page_address(ptr noundef %34) #23
  %35 = ptrtoint ptr %30 to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %30, align 8
  %conv.i.i = trunc i64 %36 to i32
  %and.i.i = and i32 %conv.i.i, 4095
  %add.ptr.i.i = getelementptr i8, ptr %call.i.i, i32 %and.i.i
  %nritems.i.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i.i, i32 0, i32 7
  %37 = ptrtoint ptr %nritems.i.i to i32
  call void @__asan_loadN_noabort(i32 %37, i32 4)
  %38 = load i32, ptr %nritems.i.i, align 1
  %39 = call i32 @llvm.bswap.i32(i32 %38) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %cmp4.i = icmp sgt i32 %39, 0
  br i1 %cmp4.i, label %if.then26.for.body.i_crit_edge, label %if.then26.readahead_tree_node_children.exit_crit_edge

if.then26.readahead_tree_node_children.exit_crit_edge: ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #25
  br label %readahead_tree_node_children.exit

if.then26.for.body.i_crit_edge:                   ; preds = %if.then26
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.then26.for.body.i_crit_edge
  %i.05.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %if.then26.for.body.i_crit_edge ]
  call void @btrfs_readahead_node_child(ptr noundef nonnull %30, i32 noundef %i.05.i) #23
  %inc.i = add nuw nsw i32 %i.05.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %39
  br i1 %exitcond.not.i, label %for.body.i.readahead_tree_node_children.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body.i

for.body.i.readahead_tree_node_children.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %readahead_tree_node_children.exit

readahead_tree_node_children.exit:                ; preds = %for.body.i.readahead_tree_node_children.exit_crit_edge, %if.then26.readahead_tree_node_children.exit_crit_edge
  %40 = ptrtoint ptr %30 to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %30, align 8
  br label %if.end29

if.end29:                                         ; preds = %readahead_tree_node_children.exit, %if.then24.if.end29_crit_edge, %if.end20.if.end29_crit_edge
  %last_ra_node.1 = phi i64 [ %41, %readahead_tree_node_children.exit ], [ %last_ra_node.0.ph, %if.then24.if.end29_crit_edge ], [ %last_ra_node.0.ph, %if.end20.if.end29_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i) #23
  %mul.i.i.i.i = mul i32 %21, 25
  %add.i.i.i.i = add i32 %mul.i.i.i.i, 101
  %42 = call ptr @memset(ptr %disk_key.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %19, ptr noundef nonnull %disk_key.i, i32 noundef %add.i.i.i.i, i32 noundef 17) #23
  %43 = ptrtoint ptr %17 to i32
  call void @__asan_loadN_noabort(i32 %43, i32 8)
  %44 = load i64, ptr %17, align 1
  %45 = call i64 @llvm.bswap.i64(i64 %44) #23
  %46 = ptrtoint ptr %5 to i32
  call void @__asan_storeN_noabort(i32 %46, i32 8)
  store i64 %45, ptr %5, align 1
  %47 = ptrtoint ptr %16 to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %16, align 8
  %49 = ptrtoint ptr %4 to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 %48, ptr %4, align 8
  %50 = ptrtoint ptr %disk_key.i to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %disk_key.i, align 8
  %52 = call i64 @llvm.bswap.i64(i64 %51) #23
  %53 = ptrtoint ptr %found_key to i32
  call void @__asan_store8_noabort(i32 %53)
  store i64 %52, ptr %found_key, align 8
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i) #23
  %54 = zext i8 %48 to i64
  call void @__sanitizer_cov_trace_switch(i64 %54, ptr @__sancov_gen_cov_switch_values.214)
  switch i8 %48, label %if.end29.if.end54_crit_edge [
    i8 -40, label %if.then33
    i8 -28, label %if.then43
  ]

if.end29.if.end54_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end54

if.then33:                                        ; preds = %if.end29
  %55 = inttoptr i32 %add.i.i.i.i to ptr
  %call.i.i131 = call i32 @btrfs_get_32(ptr noundef %19, ptr noundef %55, i32 noundef 17) #23
  %add = add i32 %call.i.i131, 101
  %56 = inttoptr i32 %add to ptr
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %args.i) #23
  %57 = call ptr @memcpy(ptr %args.i, ptr @__const.read_one_dev.args, i32 24)
  %fs_info1.i = getelementptr inbounds %struct.extent_buffer, ptr %19, i32 0, i32 3
  %58 = ptrtoint ptr %fs_info1.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %fs_info1.i, align 8
  %fs_devices2.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %59, i32 0, i32 100
  %60 = ptrtoint ptr %fs_devices2.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %fs_devices2.i, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %fs_uuid.i) #23
  %62 = call ptr @memset(ptr %fs_uuid.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %dev_uuid.i) #23
  %63 = call ptr @memset(ptr %dev_uuid.i, i32 255, i32 16)
  %call.i.i132 = call i64 @btrfs_get_64(ptr noundef %19, ptr noundef %56, i32 noundef 0) #23
  %64 = ptrtoint ptr %args.i to i32
  call void @__asan_store8_noabort(i32 %64)
  store i64 %call.i.i132, ptr %args.i, align 8
  %add.i.i = add i32 %call.i.i131, 167
  call void @read_extent_buffer(ptr noundef %19, ptr noundef nonnull %dev_uuid.i, i32 noundef %add.i.i, i32 noundef 16) #23
  %add.i198.i = add i32 %call.i.i131, 183
  call void @read_extent_buffer(ptr noundef %19, ptr noundef nonnull %fs_uuid.i, i32 noundef %add.i198.i, i32 noundef 16) #23
  %65 = ptrtoint ptr %uuid.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %dev_uuid.i, ptr %uuid.i, align 8
  %66 = ptrtoint ptr %fsid.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr %fs_uuid.i, ptr %fsid.i, align 4
  %metadata_uuid.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %61, i32 0, i32 1
  %bcmp.i = call i32 @bcmp(ptr noundef nonnull dereferenceable(16) %fs_uuid.i, ptr noundef dereferenceable(16) %metadata_uuid.i, i32 16) #27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %tobool.not.i = icmp eq i32 %bcmp.i, 0
  br i1 %tobool.not.i, label %if.then33.if.end17.i_crit_edge, label %if.then.i

if.then33.if.end17.i_crit_edge:                   ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end17.i

if.then.i:                                        ; preds = %if.then33
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %67 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %67)
  %tobool.not.i.i = icmp eq i32 %67, 0
  br i1 %tobool.not.i.i, label %if.then.i.if.end.i.i_crit_edge, label %land.rhs.i.i

if.then.i.if.end.i.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i.i

land.rhs.i.i:                                     ; preds = %if.then.i
  %call.i.i199.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @uuid_mutex, i32 0, i32 5), i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i199.i)
  %cmp.not.i.i = icmp eq i32 %call.i.i199.i, 0
  br i1 %cmp.not.i.i, label %do.end.i.i, label %land.rhs.i.i.if.end.i.i_crit_edge, !prof !424

land.rhs.i.i.if.end.i.i_crit_edge:                ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 7216, i32 noundef 9, ptr noundef null) #23
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %do.end.i.i, %land.rhs.i.i.if.end.i.i_crit_edge, %if.then.i.if.end.i.i_crit_edge
  %68 = ptrtoint ptr %fs_devices2.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %fs_devices2.i, align 8
  %seed_list.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %69, i32 0, i32 15
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %if.end.i.i
  %.pn.in.i.i = phi ptr [ %seed_list.i.i, %if.end.i.i ], [ %.pn.i.i, %for.body.i.i.for.cond.i.i_crit_edge ]
  %70 = ptrtoint ptr %.pn.in.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %.pn.i.i = load ptr, ptr %.pn.in.i.i, align 8
  %cmp36.not.i.i = icmp eq ptr %.pn.i.i, %seed_list.i.i
  br i1 %cmp36.not.i.i, label %for.end.i.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %fs_devices.0.i.i = getelementptr i8, ptr %.pn.i.i, i32 -216
  %bcmp.i.i = call i32 @bcmp(ptr noundef dereferenceable(16) %fs_devices.0.i.i, ptr noundef nonnull dereferenceable(16) %fs_uuid.i, i32 16) #27
  %tobool41.not.i.i = icmp eq i32 %bcmp.i.i, 0
  br i1 %tobool41.not.i.i, label %for.body.i.i.open_seed_devices.exit.i_crit_edge, label %for.body.i.i.for.cond.i.i_crit_edge

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.cond.i.i

for.body.i.i.open_seed_devices.exit.i_crit_edge:  ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %open_seed_devices.exit.i

for.end.i.i:                                      ; preds = %for.cond.i.i
  %call49.i.i = call fastcc ptr @find_fsid(ptr noundef nonnull %fs_uuid.i, ptr noundef null) #23
  %tobool50.not.i.i = icmp eq ptr %call49.i.i, null
  br i1 %tobool50.not.i.i, label %if.then51.i.i, label %if.end60.i.i

if.then51.i.i:                                    ; preds = %for.end.i.i
  %mount_opt.i.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %59, i32 0, i32 31
  %71 = ptrtoint ptr %mount_opt.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %mount_opt.i.i, align 8
  %and.i.i133 = and i32 %72, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i133)
  %tobool52.not.i.i = icmp eq i32 %and.i.i133, 0
  br i1 %tobool52.not.i.i, label %if.then51.i.i.if.then15.i_crit_edge, label %if.end55.i.i

if.then51.i.i.if.then15.i_crit_edge:              ; preds = %if.then51.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then15.i

if.end55.i.i:                                     ; preds = %if.then51.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %73 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i.i.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %73, i32 noundef 3520, i32 noundef 448) #29
  %tobool.not.i.i.i = icmp eq ptr %call7.i.i.i.i.i, null
  br i1 %tobool.not.i.i.i, label %if.end55.i.i.if.then15.i_crit_edge, label %alloc_fs_devices.exit.i.i

if.end55.i.i.if.then15.i_crit_edge:               ; preds = %if.end55.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then15.i

alloc_fs_devices.exit.i.i:                        ; preds = %if.end55.i.i
  %device_list_mutex.i.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i.i.i, i32 0, i32 12
  call void @__mutex_init(ptr noundef %device_list_mutex.i.i.i, ptr noundef nonnull @.str.87, ptr noundef nonnull @alloc_fs_devices.__key) #23
  %devices.i.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i.i.i, i32 0, i32 13
  %74 = ptrtoint ptr %devices.i.i.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store volatile ptr %devices.i.i.i, ptr %devices.i.i.i, align 8
  %prev.i.i.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i.i.i, i32 0, i32 13, i32 1
  %75 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %devices.i.i.i, ptr %prev.i.i.i.i, align 4
  %alloc_list.i.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i.i.i, i32 0, i32 14
  %76 = ptrtoint ptr %alloc_list.i.i.i to i32
  call void @__asan_store4_noabort(i32 %76)
  store volatile ptr %alloc_list.i.i.i, ptr %alloc_list.i.i.i, align 8
  %prev.i28.i.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i.i.i, i32 0, i32 14, i32 1
  %77 = ptrtoint ptr %prev.i28.i.i.i to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr %alloc_list.i.i.i, ptr %prev.i28.i.i.i, align 4
  %fs_list.i.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i.i.i, i32 0, i32 3
  %78 = ptrtoint ptr %fs_list.i.i.i to i32
  call void @__asan_store4_noabort(i32 %78)
  store volatile ptr %fs_list.i.i.i, ptr %fs_list.i.i.i, align 4
  %prev.i29.i.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i.i.i, i32 0, i32 3, i32 1
  %79 = ptrtoint ptr %prev.i29.i.i.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr %fs_list.i.i.i, ptr %prev.i29.i.i.i, align 8
  %seed_list.i.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i.i.i, i32 0, i32 15
  %80 = ptrtoint ptr %seed_list.i.i.i to i32
  call void @__asan_store4_noabort(i32 %80)
  store volatile ptr %seed_list.i.i.i, ptr %seed_list.i.i.i, align 8
  %prev.i30.i.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i.i.i, i32 0, i32 15, i32 1
  %81 = ptrtoint ptr %prev.i30.i.i.i to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr %seed_list.i.i.i, ptr %prev.i30.i.i.i, align 4
  %82 = call ptr @memcpy(ptr %call7.i.i.i.i.i, ptr %fs_uuid.i, i32 16)
  %metadata_uuid.i.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i.i.i, i32 0, i32 1
  %83 = call ptr @memcpy(ptr %metadata_uuid.i.i.i, ptr %fs_uuid.i, i32 16)
  %cmp.i.i.i = icmp ugt ptr %call7.i.i.i.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %alloc_fs_devices.exit.i.i.open_seed_devices.exit.i_crit_edge, label %if.end59.i.i

alloc_fs_devices.exit.i.i.open_seed_devices.exit.i_crit_edge: ; preds = %alloc_fs_devices.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %open_seed_devices.exit.i

if.end59.i.i:                                     ; preds = %alloc_fs_devices.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %seeding.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i.i.i, i32 0, i32 16
  %84 = ptrtoint ptr %seeding.i.i to i32
  call void @__asan_store1_noabort(i32 %84)
  store i8 1, ptr %seeding.i.i, align 8
  %opened.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i.i.i, i32 0, i32 17
  %85 = ptrtoint ptr %opened.i.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 1, ptr %opened.i.i, align 4
  br label %open_seed_devices.exit.i

if.end60.i.i:                                     ; preds = %for.end.i.i
  %call61.i.i = call fastcc ptr @clone_fs_devices(ptr noundef nonnull %call49.i.i) #23
  %cmp.i107.i.i = icmp ugt ptr %call61.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i107.i.i, label %if.end60.i.i.open_seed_devices.exit.i_crit_edge, label %if.end64.i.i

if.end60.i.i.open_seed_devices.exit.i_crit_edge:  ; preds = %if.end60.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %open_seed_devices.exit.i

if.end64.i.i:                                     ; preds = %if.end60.i.i
  %bdev_holder.i.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %59, i32 0, i32 122
  %86 = ptrtoint ptr %bdev_holder.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %bdev_holder.i.i, align 4
  %call65.i.i = call fastcc i32 @open_fs_devices(ptr noundef %call61.i.i, i32 noundef 1, ptr noundef %87) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call65.i.i)
  %tobool66.not.i.i = icmp eq i32 %call65.i.i, 0
  br i1 %tobool66.not.i.i, label %if.end69.i.i, label %if.then67.i.i

if.then67.i.i:                                    ; preds = %if.end64.i.i
  %opened.i.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call61.i.i, i32 0, i32 17
  %88 = ptrtoint ptr %opened.i.i.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %opened.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %89)
  %tobool.not.i108.i.i = icmp eq i32 %89, 0
  br i1 %tobool.not.i108.i.i, label %if.then67.i.i.if.end.i.i.i_crit_edge, label %do.end.i.i.i, !prof !423

if.then67.i.i.if.end.i.i.i_crit_edge:             ; preds = %if.then67.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i.i.i

do.end.i.i.i:                                     ; preds = %if.then67.i.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 416, i32 noundef 9, ptr noundef null) #23
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %do.end.i.i.i, %if.then67.i.i.if.end.i.i.i_crit_edge
  %devices.i109.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call61.i.i, i32 0, i32 13
  %90 = ptrtoint ptr %devices.i109.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load volatile ptr, ptr %devices.i109.i.i, align 4
  %cmp.i.not30.i.i.i = icmp eq ptr %91, %devices.i109.i.i
  br i1 %cmp.i.not30.i.i.i, label %if.end.i.i.i.free_fs_devices.exit.i.i_crit_edge, label %if.end.i.i.i.while.body.i.i.i_crit_edge

if.end.i.i.i.while.body.i.i.i_crit_edge:          ; preds = %if.end.i.i.i
  br label %while.body.i.i.i

if.end.i.i.i.free_fs_devices.exit.i.i_crit_edge:  ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_fs_devices.exit.i.i

while.body.i.i.i:                                 ; preds = %list_del.exit.i.i.i.while.body.i.i.i_crit_edge, %if.end.i.i.i.while.body.i.i.i_crit_edge
  %92 = phi ptr [ %102, %list_del.exit.i.i.i.while.body.i.i.i_crit_edge ], [ %91, %if.end.i.i.i.while.body.i.i.i_crit_edge ]
  %call.i.i.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %92) #23
  br i1 %call.i.i.i.i.i, label %if.end.i.i.i.i.i, label %while.body.i.i.i.list_del.exit.i.i.i_crit_edge

while.body.i.i.i.list_del.exit.i.i.i_crit_edge:   ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del.exit.i.i.i

if.end.i.i.i.i.i:                                 ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %92, i32 0, i32 1
  %93 = ptrtoint ptr %prev.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %prev.i.i.i.i.i, align 4
  %95 = ptrtoint ptr %92 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %92, align 4
  %prev1.i.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %96, i32 0, i32 1
  %97 = ptrtoint ptr %prev1.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %97)
  store ptr %94, ptr %prev1.i.i.i.i.i.i, align 4
  %98 = ptrtoint ptr %94 to i32
  call void @__asan_store4_noabort(i32 %98)
  store volatile ptr %96, ptr %94, align 4
  br label %list_del.exit.i.i.i

list_del.exit.i.i.i:                              ; preds = %if.end.i.i.i.i.i, %while.body.i.i.i.list_del.exit.i.i.i_crit_edge
  %99 = ptrtoint ptr %92 to i32
  call void @__asan_store4_noabort(i32 %99)
  store ptr inttoptr (i32 256 to ptr), ptr %92, align 4
  %prev.i.i110.i.i = getelementptr inbounds %struct.list_head, ptr %92, i32 0, i32 1
  %100 = ptrtoint ptr %prev.i.i110.i.i to i32
  call void @__asan_store4_noabort(i32 %100)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i110.i.i, align 4
  call void @btrfs_free_device(ptr noundef %92) #23
  %101 = ptrtoint ptr %devices.i109.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load volatile ptr, ptr %devices.i109.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %102, %devices.i109.i.i
  br i1 %cmp.i.not.i.i.i, label %list_del.exit.i.i.i.free_fs_devices.exit.i.i_crit_edge, label %list_del.exit.i.i.i.while.body.i.i.i_crit_edge

list_del.exit.i.i.i.while.body.i.i.i_crit_edge:   ; preds = %list_del.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body.i.i.i

list_del.exit.i.i.i.free_fs_devices.exit.i.i_crit_edge: ; preds = %list_del.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_fs_devices.exit.i.i

free_fs_devices.exit.i.i:                         ; preds = %list_del.exit.i.i.i.free_fs_devices.exit.i.i_crit_edge, %if.end.i.i.i.free_fs_devices.exit.i.i_crit_edge
  call void @kfree(ptr noundef %call61.i.i) #23
  %103 = inttoptr i32 %call65.i.i to ptr
  br label %open_seed_devices.exit.i

if.end69.i.i:                                     ; preds = %if.end64.i.i
  %seeding70.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call61.i.i, i32 0, i32 16
  %104 = ptrtoint ptr %seeding70.i.i to i32
  call void @__asan_load1_noabort(i32 %104)
  %105 = load i8, ptr %seeding70.i.i, align 8, !range !426
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %105)
  %tobool71.not.i.i = icmp eq i8 %105, 0
  br i1 %tobool71.not.i.i, label %if.then72.i.i, label %if.end74.i.i

if.then72.i.i:                                    ; preds = %if.end69.i.i
  call fastcc void @close_fs_devices(ptr noundef %call61.i.i) #23
  %opened.i111.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call61.i.i, i32 0, i32 17
  %106 = ptrtoint ptr %opened.i111.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %opened.i111.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %107)
  %tobool.not.i112.i.i = icmp eq i32 %107, 0
  br i1 %tobool.not.i112.i.i, label %if.then72.i.i.if.end.i116.i.i_crit_edge, label %do.end.i113.i.i, !prof !423

if.then72.i.i.if.end.i116.i.i_crit_edge:          ; preds = %if.then72.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i116.i.i

do.end.i113.i.i:                                  ; preds = %if.then72.i.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 416, i32 noundef 9, ptr noundef null) #23
  br label %if.end.i116.i.i

if.end.i116.i.i:                                  ; preds = %do.end.i113.i.i, %if.then72.i.i.if.end.i116.i.i_crit_edge
  %devices.i114.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call61.i.i, i32 0, i32 13
  %108 = ptrtoint ptr %devices.i114.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load volatile ptr, ptr %devices.i114.i.i, align 4
  %cmp.i.not30.i115.i.i = icmp eq ptr %109, %devices.i114.i.i
  br i1 %cmp.i.not30.i115.i.i, label %if.end.i116.i.i.free_fs_devices.exit125.i.i_crit_edge, label %if.end.i116.i.i.while.body.i118.i.i_crit_edge

if.end.i116.i.i.while.body.i118.i.i_crit_edge:    ; preds = %if.end.i116.i.i
  br label %while.body.i118.i.i

if.end.i116.i.i.free_fs_devices.exit125.i.i_crit_edge: ; preds = %if.end.i116.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_fs_devices.exit125.i.i

while.body.i118.i.i:                              ; preds = %list_del.exit.i124.i.i.while.body.i118.i.i_crit_edge, %if.end.i116.i.i.while.body.i118.i.i_crit_edge
  %110 = phi ptr [ %120, %list_del.exit.i124.i.i.while.body.i118.i.i_crit_edge ], [ %109, %if.end.i116.i.i.while.body.i118.i.i_crit_edge ]
  %call.i.i.i117.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %110) #23
  br i1 %call.i.i.i117.i.i, label %if.end.i.i.i121.i.i, label %while.body.i118.i.i.list_del.exit.i124.i.i_crit_edge

while.body.i118.i.i.list_del.exit.i124.i.i_crit_edge: ; preds = %while.body.i118.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del.exit.i124.i.i

if.end.i.i.i121.i.i:                              ; preds = %while.body.i118.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i.i119.i.i = getelementptr inbounds %struct.list_head, ptr %110, i32 0, i32 1
  %111 = ptrtoint ptr %prev.i.i.i119.i.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %prev.i.i.i119.i.i, align 4
  %113 = ptrtoint ptr %110 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %110, align 4
  %prev1.i.i.i.i120.i.i = getelementptr inbounds %struct.list_head, ptr %114, i32 0, i32 1
  %115 = ptrtoint ptr %prev1.i.i.i.i120.i.i to i32
  call void @__asan_store4_noabort(i32 %115)
  store ptr %112, ptr %prev1.i.i.i.i120.i.i, align 4
  %116 = ptrtoint ptr %112 to i32
  call void @__asan_store4_noabort(i32 %116)
  store volatile ptr %114, ptr %112, align 4
  br label %list_del.exit.i124.i.i

list_del.exit.i124.i.i:                           ; preds = %if.end.i.i.i121.i.i, %while.body.i118.i.i.list_del.exit.i124.i.i_crit_edge
  %117 = ptrtoint ptr %110 to i32
  call void @__asan_store4_noabort(i32 %117)
  store ptr inttoptr (i32 256 to ptr), ptr %110, align 4
  %prev.i.i122.i.i = getelementptr inbounds %struct.list_head, ptr %110, i32 0, i32 1
  %118 = ptrtoint ptr %prev.i.i122.i.i to i32
  call void @__asan_store4_noabort(i32 %118)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i122.i.i, align 4
  call void @btrfs_free_device(ptr noundef %110) #23
  %119 = ptrtoint ptr %devices.i114.i.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load volatile ptr, ptr %devices.i114.i.i, align 4
  %cmp.i.not.i123.i.i = icmp eq ptr %120, %devices.i114.i.i
  br i1 %cmp.i.not.i123.i.i, label %list_del.exit.i124.i.i.free_fs_devices.exit125.i.i_crit_edge, label %list_del.exit.i124.i.i.while.body.i118.i.i_crit_edge

list_del.exit.i124.i.i.while.body.i118.i.i_crit_edge: ; preds = %list_del.exit.i124.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body.i118.i.i

list_del.exit.i124.i.i.free_fs_devices.exit125.i.i_crit_edge: ; preds = %list_del.exit.i124.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_fs_devices.exit125.i.i

free_fs_devices.exit125.i.i:                      ; preds = %list_del.exit.i124.i.i.free_fs_devices.exit125.i.i_crit_edge, %if.end.i116.i.i.free_fs_devices.exit125.i.i_crit_edge
  call void @kfree(ptr noundef %call61.i.i) #23
  br label %if.then15.i

if.end74.i.i:                                     ; preds = %if.end69.i.i
  %seed_list75.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call61.i.i, i32 0, i32 15
  %121 = ptrtoint ptr %fs_devices2.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %fs_devices2.i, align 8
  %seed_list77.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %122, i32 0, i32 15
  %123 = ptrtoint ptr %seed_list77.i.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %seed_list77.i.i, align 4
  %call.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %seed_list75.i.i, ptr noundef %seed_list77.i.i, ptr noundef %124) #23
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %if.end74.i.i.open_seed_devices.exit.i_crit_edge

if.end74.i.i.open_seed_devices.exit.i_crit_edge:  ; preds = %if.end74.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %open_seed_devices.exit.i

if.end.i.i.i.i:                                   ; preds = %if.end74.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %124, i32 0, i32 1
  %125 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %125)
  store ptr %seed_list75.i.i, ptr %prev1.i.i.i.i, align 4
  %126 = ptrtoint ptr %seed_list75.i.i to i32
  call void @__asan_store4_noabort(i32 %126)
  store ptr %124, ptr %seed_list75.i.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call61.i.i, i32 0, i32 15, i32 1
  %127 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %127)
  store ptr %seed_list77.i.i, ptr %prev3.i.i.i.i, align 4
  %128 = ptrtoint ptr %seed_list77.i.i to i32
  call void @__asan_store4_noabort(i32 %128)
  store volatile ptr %seed_list75.i.i, ptr %seed_list77.i.i, align 4
  br label %open_seed_devices.exit.i

open_seed_devices.exit.i:                         ; preds = %if.end.i.i.i.i, %if.end74.i.i.open_seed_devices.exit.i_crit_edge, %free_fs_devices.exit.i.i, %if.end60.i.i.open_seed_devices.exit.i_crit_edge, %if.end59.i.i, %alloc_fs_devices.exit.i.i.open_seed_devices.exit.i_crit_edge, %for.body.i.i.open_seed_devices.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %103, %free_fs_devices.exit.i.i ], [ %call7.i.i.i.i.i, %if.end59.i.i ], [ %call7.i.i.i.i.i, %alloc_fs_devices.exit.i.i.open_seed_devices.exit.i_crit_edge ], [ %call61.i.i, %if.end60.i.i.open_seed_devices.exit.i_crit_edge ], [ %call61.i.i, %if.end74.i.i.open_seed_devices.exit.i_crit_edge ], [ %call61.i.i, %if.end.i.i.i.i ], [ %fs_devices.0.i.i, %for.body.i.i.open_seed_devices.exit.i_crit_edge ]
  %cmp.i.i = icmp ugt ptr %retval.0.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %open_seed_devices.exit.i.if.then15.i_crit_edge, label %open_seed_devices.exit.i.if.end17.i_crit_edge

open_seed_devices.exit.i.if.end17.i_crit_edge:    ; preds = %open_seed_devices.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end17.i

open_seed_devices.exit.i.if.then15.i_crit_edge:   ; preds = %open_seed_devices.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then15.i

if.then15.i:                                      ; preds = %open_seed_devices.exit.i.if.then15.i_crit_edge, %free_fs_devices.exit125.i.i, %if.end55.i.i.if.then15.i_crit_edge, %if.then51.i.i.if.then15.i_crit_edge
  %retval.0.i225.i = phi ptr [ %retval.0.i.i, %open_seed_devices.exit.i.if.then15.i_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end55.i.i.if.then15.i_crit_edge ], [ inttoptr (i32 -2 to ptr), %if.then51.i.i.if.then15.i_crit_edge ], [ inttoptr (i32 -22 to ptr), %free_fs_devices.exit125.i.i ]
  %129 = ptrtoint ptr %retval.0.i225.i to i32
  br label %read_one_dev.exit

if.end17.i:                                       ; preds = %open_seed_devices.exit.i.if.end17.i_crit_edge, %if.then33.if.end17.i_crit_edge
  %fs_devices.0.i = phi ptr [ %retval.0.i.i, %open_seed_devices.exit.i.if.end17.i_crit_edge ], [ %61, %if.then33.if.end17.i_crit_edge ]
  %130 = ptrtoint ptr %fs_devices2.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %fs_devices2.i, align 8
  %call19.i = call ptr @btrfs_find_device(ptr noundef %131, ptr noundef nonnull %args.i) #23
  %tobool20.not.i = icmp eq ptr %call19.i, null
  br i1 %tobool20.not.i, label %if.then21.i, label %if.else.i

if.then21.i:                                      ; preds = %if.end17.i
  %mount_opt.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %59, i32 0, i32 31
  %132 = ptrtoint ptr %mount_opt.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %mount_opt.i, align 8
  %and.i134 = and i32 %133, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i134)
  %tobool22.not.i = icmp eq i32 %and.i134, 0
  br i1 %tobool22.not.i, label %if.then23.i, label %if.end25.i

if.then23.i:                                      ; preds = %if.then21.i
  %call.i200.i = call i32 @___ratelimit(ptr noundef nonnull @btrfs_report_missing_device._rs, ptr noundef nonnull @__func__.btrfs_report_missing_device) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i200.i)
  %tobool1.not.i.i = icmp eq i32 %call.i200.i, 0
  br i1 %tobool1.not.i.i, label %if.then23.i.read_one_dev.exit.thread_crit_edge, label %if.end9.sink.split.i.i

if.then23.i.read_one_dev.exit.thread_crit_edge:   ; preds = %if.then23.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %read_one_dev.exit.thread

if.end9.sink.split.i.i:                           ; preds = %if.then23.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %59, ptr noundef nonnull @.str.160, i64 noundef %call.i.i132, ptr noundef nonnull %dev_uuid.i) #28
  br label %read_one_dev.exit.thread

if.end25.i:                                       ; preds = %if.then21.i
  %call27.i = call fastcc ptr @add_missing_dev(ptr noundef %fs_devices.0.i, i64 noundef %call.i.i132, ptr noundef nonnull %dev_uuid.i) #23
  %cmp.i201.i = icmp ugt ptr %call27.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i201.i, label %if.then29.i, label %if.end32.i

if.then29.i:                                      ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #25
  %134 = ptrtoint ptr %call27.i to i32
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %59, ptr noundef nonnull @.str.163, i64 noundef %call.i.i132, i32 noundef %134) #28
  br label %read_one_dev.exit

if.end32.i:                                       ; preds = %if.end25.i
  %call4.i.i = call i32 @___ratelimit(ptr noundef nonnull @btrfs_report_missing_device._rs.161, ptr noundef nonnull @__func__.btrfs_report_missing_device) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %if.end32.i.if.end69.i_crit_edge, label %if.end9.sink.split.i202.i

if.end32.i.if.end69.i_crit_edge:                  ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end69.i

if.end9.sink.split.i202.i:                        ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %59, ptr noundef nonnull @.str.162, i64 noundef %call.i.i132, ptr noundef nonnull %dev_uuid.i) #28
  br label %if.end69.i

if.else.i:                                        ; preds = %if.end17.i
  %bdev.i = getelementptr inbounds %struct.btrfs_device, ptr %call19.i, i32 0, i32 7
  %135 = ptrtoint ptr %bdev.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %bdev.i, align 8
  %tobool34.not.i = icmp eq ptr %136, null
  br i1 %tobool34.not.i, label %if.then35.i, label %if.else.i.if.end51.i_crit_edge

if.else.i.if.end51.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end51.i

if.then35.i:                                      ; preds = %if.else.i
  %mount_opt36.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %59, i32 0, i32 31
  %137 = ptrtoint ptr %mount_opt36.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %mount_opt36.i, align 8
  %and37.i = and i32 %138, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and37.i)
  %tobool38.not.i = icmp eq i32 %and37.i, 0
  br i1 %tobool38.not.i, label %if.then39.i, label %if.end41.i

if.then39.i:                                      ; preds = %if.then35.i
  %call.i204.i = call i32 @___ratelimit(ptr noundef nonnull @btrfs_report_missing_device._rs, ptr noundef nonnull @__func__.btrfs_report_missing_device) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i204.i)
  %tobool1.not.i205.i = icmp eq i32 %call.i204.i, 0
  br i1 %tobool1.not.i205.i, label %if.then39.i.read_one_dev.exit.thread_crit_edge, label %if.end9.sink.split.i206.i

if.then39.i.read_one_dev.exit.thread_crit_edge:   ; preds = %if.then39.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %read_one_dev.exit.thread

if.end9.sink.split.i206.i:                        ; preds = %if.then39.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %59, ptr noundef nonnull @.str.160, i64 noundef %call.i.i132, ptr noundef nonnull %dev_uuid.i) #28
  br label %read_one_dev.exit.thread

if.end41.i:                                       ; preds = %if.then35.i
  %call4.i208.i = call i32 @___ratelimit(ptr noundef nonnull @btrfs_report_missing_device._rs.161, ptr noundef nonnull @__func__.btrfs_report_missing_device) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i208.i)
  %tobool5.not.i209.i = icmp eq i32 %call4.i208.i, 0
  br i1 %tobool5.not.i209.i, label %if.end41.i.if.end43.i_crit_edge, label %if.end9.sink.split.i210.i

if.end41.i.if.end43.i_crit_edge:                  ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end43.i

if.end9.sink.split.i210.i:                        ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %59, ptr noundef nonnull @.str.162, i64 noundef %call.i.i132, ptr noundef nonnull %dev_uuid.i) #28
  br label %if.end43.i

if.end43.i:                                       ; preds = %if.end9.sink.split.i210.i, %if.end41.i.if.end43.i_crit_edge
  %139 = ptrtoint ptr %bdev.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %.pr.i = load ptr, ptr %bdev.i, align 8
  %tobool45.not.i = icmp eq ptr %.pr.i, null
  br i1 %tobool45.not.i, label %land.lhs.true.i, label %if.end43.i.if.end51.i_crit_edge

if.end43.i.if.end51.i_crit_edge:                  ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end51.i

land.lhs.true.i:                                  ; preds = %if.end43.i
  %dev_state.i = getelementptr inbounds %struct.btrfs_device, ptr %call19.i, i32 0, i32 10
  %140 = ptrtoint ptr %dev_state.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load volatile i32, ptr %dev_state.i, align 4
  %142 = and i32 %141, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %142)
  %tobool47.not.i = icmp eq i32 %142, 0
  br i1 %tobool47.not.i, label %if.then48.i, label %land.lhs.true.i.if.end51.i_crit_edge

land.lhs.true.i.if.end51.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end51.i

if.then48.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  %fs_devices49.i = getelementptr inbounds %struct.btrfs_device, ptr %call19.i, i32 0, i32 3
  %143 = ptrtoint ptr %fs_devices49.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %fs_devices49.i, align 8
  %missing_devices.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %144, i32 0, i32 7
  %145 = ptrtoint ptr %missing_devices.i to i32
  call void @__asan_load8_noabort(i32 %145)
  %146 = load i64, ptr %missing_devices.i, align 8
  %inc.i135 = add i64 %146, 1
  store i64 %inc.i135, ptr %missing_devices.i, align 8
  call void @_set_bit(i32 noundef 2, ptr noundef %dev_state.i) #23
  br label %if.end51.i

if.end51.i:                                       ; preds = %if.then48.i, %land.lhs.true.i.if.end51.i_crit_edge, %if.end43.i.if.end51.i_crit_edge, %if.else.i.if.end51.i_crit_edge
  %fs_devices52.i = getelementptr inbounds %struct.btrfs_device, ptr %call19.i, i32 0, i32 3
  %147 = ptrtoint ptr %fs_devices52.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %fs_devices52.i, align 8
  %cmp.not.i = icmp eq ptr %148, %fs_devices.0.i
  br i1 %cmp.not.i, label %if.end51.i.if.end69.i_crit_edge, label %if.then53.i

if.end51.i.if.end69.i_crit_edge:                  ; preds = %if.end51.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end69.i

if.then53.i:                                      ; preds = %if.end51.i
  %dev_state54.i = getelementptr inbounds %struct.btrfs_device, ptr %call19.i, i32 0, i32 10
  %149 = ptrtoint ptr %dev_state54.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load volatile i32, ptr %dev_state54.i, align 4
  %151 = and i32 %150, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %151)
  %tobool56.not.i = icmp eq i32 %151, 0
  br i1 %tobool56.not.i, label %cond.false.i, label %cond.end.i, !prof !424

cond.false.i:                                     ; preds = %if.then53.i
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.164, i32 noundef 7332) #26
  unreachable

cond.end.i:                                       ; preds = %if.then53.i
  %devices.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.0.i, i32 0, i32 13
  %call.i.i212.i = call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %call19.i) #23
  br i1 %call.i.i212.i, label %if.end.i.i214.i, label %cond.end.i.__list_del_entry.exit.i.i_crit_edge

cond.end.i.__list_del_entry.exit.i.i_crit_edge:   ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %__list_del_entry.exit.i.i

if.end.i.i214.i:                                  ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %call19.i, i32 0, i32 1
  %152 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %prev.i.i.i, align 4
  %154 = ptrtoint ptr %call19.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %call19.i, align 4
  %prev1.i.i.i213.i = getelementptr inbounds %struct.list_head, ptr %155, i32 0, i32 1
  %156 = ptrtoint ptr %prev1.i.i.i213.i to i32
  call void @__asan_store4_noabort(i32 %156)
  store ptr %153, ptr %prev1.i.i.i213.i, align 4
  %157 = ptrtoint ptr %153 to i32
  call void @__asan_store4_noabort(i32 %157)
  store volatile ptr %155, ptr %153, align 4
  br label %__list_del_entry.exit.i.i

__list_del_entry.exit.i.i:                        ; preds = %if.end.i.i214.i, %cond.end.i.__list_del_entry.exit.i.i_crit_edge
  %158 = ptrtoint ptr %devices.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %devices.i, align 4
  %call.i.i.i215.i = call zeroext i1 @__list_add_valid(ptr noundef nonnull %call19.i, ptr noundef %devices.i, ptr noundef %159) #23
  br i1 %call.i.i.i215.i, label %if.end.i.i.i217.i, label %__list_del_entry.exit.i.i.list_move.exit.i_crit_edge

__list_del_entry.exit.i.i.list_move.exit.i_crit_edge: ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_move.exit.i

if.end.i.i.i217.i:                                ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %prev1.i.i2.i.i = getelementptr inbounds %struct.list_head, ptr %159, i32 0, i32 1
  %160 = ptrtoint ptr %prev1.i.i2.i.i to i32
  call void @__asan_store4_noabort(i32 %160)
  store ptr %call19.i, ptr %prev1.i.i2.i.i, align 4
  %161 = ptrtoint ptr %call19.i to i32
  call void @__asan_store4_noabort(i32 %161)
  store ptr %159, ptr %call19.i, align 4
  %prev3.i.i.i216.i = getelementptr inbounds %struct.list_head, ptr %call19.i, i32 0, i32 1
  %162 = ptrtoint ptr %prev3.i.i.i216.i to i32
  call void @__asan_store4_noabort(i32 %162)
  store ptr %devices.i, ptr %prev3.i.i.i216.i, align 4
  %163 = ptrtoint ptr %devices.i to i32
  call void @__asan_store4_noabort(i32 %163)
  store volatile ptr %call19.i, ptr %devices.i, align 4
  br label %list_move.exit.i

list_move.exit.i:                                 ; preds = %if.end.i.i.i217.i, %__list_del_entry.exit.i.i.list_move.exit.i_crit_edge
  %164 = ptrtoint ptr %fs_devices52.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %fs_devices52.i, align 8
  %num_devices.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %165, i32 0, i32 4
  %166 = ptrtoint ptr %num_devices.i to i32
  call void @__asan_load8_noabort(i32 %166)
  %167 = load i64, ptr %num_devices.i, align 8
  %dec.i = add i64 %167, -1
  store i64 %dec.i, ptr %num_devices.i, align 8
  %num_devices60.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.0.i, i32 0, i32 4
  %168 = ptrtoint ptr %num_devices60.i to i32
  call void @__asan_load8_noabort(i32 %168)
  %169 = load i64, ptr %num_devices60.i, align 8
  %inc61.i = add i64 %169, 1
  store i64 %inc61.i, ptr %num_devices60.i, align 8
  %170 = load ptr, ptr %fs_devices52.i, align 8
  %missing_devices63.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %170, i32 0, i32 7
  %171 = ptrtoint ptr %missing_devices63.i to i32
  call void @__asan_load8_noabort(i32 %171)
  %172 = load i64, ptr %missing_devices63.i, align 8
  %dec64.i = add i64 %172, -1
  store i64 %dec64.i, ptr %missing_devices63.i, align 8
  %missing_devices65.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices.0.i, i32 0, i32 7
  %173 = ptrtoint ptr %missing_devices65.i to i32
  call void @__asan_load8_noabort(i32 %173)
  %174 = load i64, ptr %missing_devices65.i, align 8
  %inc66.i = add i64 %174, 1
  store i64 %inc66.i, ptr %missing_devices65.i, align 8
  store ptr %fs_devices.0.i, ptr %fs_devices52.i, align 8
  br label %if.end69.i

if.end69.i:                                       ; preds = %list_move.exit.i, %if.end51.i.if.end69.i_crit_edge, %if.end9.sink.split.i202.i, %if.end32.i.if.end69.i_crit_edge
  %device.0.i = phi ptr [ %call19.i, %list_move.exit.i ], [ %call19.i, %if.end51.i.if.end69.i_crit_edge ], [ %call27.i, %if.end32.i.if.end69.i_crit_edge ], [ %call27.i, %if.end9.sink.split.i202.i ]
  %fs_devices70.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0.i, i32 0, i32 3
  %175 = ptrtoint ptr %fs_devices70.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %fs_devices70.i, align 8
  %177 = ptrtoint ptr %fs_devices2.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %fs_devices2.i, align 8
  %cmp72.not.i = icmp eq ptr %176, %178
  br i1 %cmp72.not.i, label %if.end69.i.if.end95.i_crit_edge, label %do.body.i

if.end69.i.if.end95.i_crit_edge:                  ; preds = %if.end69.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end95.i

do.body.i:                                        ; preds = %if.end69.i
  %dev_state74.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0.i, i32 0, i32 10
  %179 = ptrtoint ptr %dev_state74.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load volatile i32, ptr %dev_state74.i, align 4
  %and1.i194.i = and i32 %180, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i194.i)
  %tobool76.not.i = icmp eq i32 %and1.i194.i, 0
  br i1 %tobool76.not.i, label %do.end90.i, label %do.body84.i, !prof !423

do.body84.i:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #25
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 7346, 0\0A.popsection", ""() #23, !srcloc !504
  unreachable

do.end90.i:                                       ; preds = %do.body.i
  %generation.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0.i, i32 0, i32 6
  %181 = ptrtoint ptr %generation.i to i32
  call void @__asan_load8_noabort(i32 %181)
  %182 = load i64, ptr %generation.i, align 8
  %call.i218.i = call i64 @btrfs_get_64(ptr noundef %19, ptr noundef %56, i32 noundef 44) #23
  call void @__sanitizer_cov_trace_cmp8(i64 %182, i64 %call.i218.i)
  %cmp92.not.i = icmp eq i64 %182, %call.i218.i
  br i1 %cmp92.not.i, label %do.end90.i.if.end95.i_crit_edge, label %do.end90.i.read_one_dev.exit.thread_crit_edge

do.end90.i.read_one_dev.exit.thread_crit_edge:    ; preds = %do.end90.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %read_one_dev.exit.thread

do.end90.i.if.end95.i_crit_edge:                  ; preds = %do.end90.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end95.i

if.end95.i:                                       ; preds = %do.end90.i.if.end95.i_crit_edge, %if.end69.i.if.end95.i_crit_edge
  %call.i.i219.i = call i64 @btrfs_get_64(ptr noundef %19, ptr noundef %56, i32 noundef 0) #23
  %devid.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0.i, i32 0, i32 13
  %183 = ptrtoint ptr %devid.i.i to i32
  call void @__asan_store8_noabort(i32 %183)
  store i64 %call.i.i219.i, ptr %devid.i.i, align 8
  %call.i60.i.i = call i64 @btrfs_get_64(ptr noundef %19, ptr noundef %56, i32 noundef 8) #23
  %disk_total_bytes.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0.i, i32 0, i32 15
  %184 = ptrtoint ptr %disk_total_bytes.i.i to i32
  call void @__asan_store8_noabort(i32 %184)
  store i64 %call.i60.i.i, ptr %disk_total_bytes.i.i, align 8
  %total_bytes.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0.i, i32 0, i32 14
  %185 = ptrtoint ptr %total_bytes.i.i to i32
  call void @__asan_store8_noabort(i32 %185)
  store i64 %call.i60.i.i, ptr %total_bytes.i.i, align 8
  %commit_total_bytes.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0.i, i32 0, i32 22
  %186 = ptrtoint ptr %commit_total_bytes.i.i to i32
  call void @__asan_store8_noabort(i32 %186)
  store i64 %call.i60.i.i, ptr %commit_total_bytes.i.i, align 8
  %call.i61.i.i = call i64 @btrfs_get_64(ptr noundef %19, ptr noundef %56, i32 noundef 16) #23
  %bytes_used.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0.i, i32 0, i32 16
  %187 = ptrtoint ptr %bytes_used.i.i to i32
  call void @__asan_store8_noabort(i32 %187)
  store i64 %call.i61.i.i, ptr %bytes_used.i.i, align 8
  %commit_bytes_used.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0.i, i32 0, i32 23
  %188 = ptrtoint ptr %commit_bytes_used.i.i to i32
  call void @__asan_store8_noabort(i32 %188)
  store i64 %call.i61.i.i, ptr %commit_bytes_used.i.i, align 8
  %call.i62.i.i = call i64 @btrfs_get_64(ptr noundef %19, ptr noundef %56, i32 noundef 36) #23
  %type.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0.i, i32 0, i32 19
  %189 = ptrtoint ptr %type.i.i to i32
  call void @__asan_store8_noabort(i32 %189)
  store i64 %call.i62.i.i, ptr %type.i.i, align 8
  %call.i63.i.i = call i32 @btrfs_get_32(ptr noundef %19, ptr noundef %56, i32 noundef 24) #23
  %io_align.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0.i, i32 0, i32 17
  %190 = ptrtoint ptr %io_align.i.i to i32
  call void @__asan_store4_noabort(i32 %190)
  store i32 %call.i63.i.i, ptr %io_align.i.i, align 8
  %call.i64.i.i = call i32 @btrfs_get_32(ptr noundef %19, ptr noundef %56, i32 noundef 28) #23
  %io_width.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0.i, i32 0, i32 18
  %191 = ptrtoint ptr %io_width.i.i to i32
  call void @__asan_store4_noabort(i32 %191)
  store i32 %call.i64.i.i, ptr %io_width.i.i, align 4
  %call.i65.i.i = call i32 @btrfs_get_32(ptr noundef %19, ptr noundef %56, i32 noundef 32) #23
  %sector_size.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0.i, i32 0, i32 20
  %192 = ptrtoint ptr %sector_size.i.i to i32
  call void @__asan_store4_noabort(i32 %192)
  store i32 %call.i65.i.i, ptr %sector_size.i.i, align 8
  %193 = ptrtoint ptr %devid.i.i to i32
  call void @__asan_load8_noabort(i32 %193)
  %194 = load i64, ptr %devid.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %194)
  %cmp.i220.i = icmp eq i64 %194, 0
  br i1 %cmp.i220.i, label %do.end.i221.i, label %if.end95.i.fill_device_from_item.exit.i_crit_edge, !prof !424

if.end95.i.fill_device_from_item.exit.i_crit_edge: ; preds = %if.end95.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %fill_device_from_item.exit.i

do.end.i221.i:                                    ; preds = %if.end95.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 7203, i32 noundef 9, ptr noundef null) #23
  br label %fill_device_from_item.exit.i

fill_device_from_item.exit.i:                     ; preds = %do.end.i221.i, %if.end95.i.fill_device_from_item.exit.i_crit_edge
  %dev_state.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0.i, i32 0, i32 10
  call void @_clear_bit(i32 noundef 3, ptr noundef %dev_state.i.i) #23
  %uuid.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0.i, i32 0, i32 21
  call void @read_extent_buffer(ptr noundef %19, ptr noundef %uuid.i.i, i32 noundef %add.i.i, i32 noundef 16) #23
  %bdev96.i = getelementptr inbounds %struct.btrfs_device, ptr %device.0.i, i32 0, i32 7
  %195 = ptrtoint ptr %bdev96.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %bdev96.i, align 8
  %tobool97.not.i = icmp eq ptr %196, null
  br i1 %tobool97.not.i, label %fill_device_from_item.exit.i.if.end105.i_crit_edge, label %if.then98.i

fill_device_from_item.exit.i.if.end105.i_crit_edge: ; preds = %fill_device_from_item.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end105.i

if.then98.i:                                      ; preds = %fill_device_from_item.exit.i
  %bd_nr_sectors.i.i.i = getelementptr inbounds %struct.block_device, ptr %196, i32 0, i32 1
  %197 = ptrtoint ptr %bd_nr_sectors.i.i.i to i32
  call void @__asan_load8_noabort(i32 %197)
  %198 = load i64, ptr %bd_nr_sectors.i.i.i, align 8
  %shl.i.i = shl i64 %198, 9
  %199 = ptrtoint ptr %total_bytes.i.i to i32
  call void @__asan_load8_noabort(i32 %199)
  %200 = load i64, ptr %total_bytes.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %200, i64 %shl.i.i)
  %cmp101.i = icmp ugt i64 %200, %shl.i.i
  br i1 %cmp101.i, label %if.then102.i, label %if.then98.i.if.end105.i_crit_edge

if.then98.i.if.end105.i_crit_edge:                ; preds = %if.then98.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end105.i

if.then102.i:                                     ; preds = %if.then98.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %59, ptr noundef nonnull @.str.165, i64 noundef %shl.i.i, i64 noundef %200) #28
  br label %read_one_dev.exit.thread

if.end105.i:                                      ; preds = %if.then98.i.if.end105.i_crit_edge, %fill_device_from_item.exit.i.if.end105.i_crit_edge
  call void @_set_bit(i32 noundef 1, ptr noundef %dev_state.i.i) #23
  %201 = ptrtoint ptr %dev_state.i.i to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load volatile i32, ptr %dev_state.i.i, align 4
  %and1.i195.i = and i32 %202, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i195.i)
  %tobool109.not.i = icmp eq i32 %and1.i195.i, 0
  br i1 %tobool109.not.i, label %if.end105.i.read_one_dev.exit.thread147_crit_edge, label %land.lhs.true110.i

if.end105.i.read_one_dev.exit.thread147_crit_edge: ; preds = %if.end105.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %read_one_dev.exit.thread147

land.lhs.true110.i:                               ; preds = %if.end105.i
  %203 = ptrtoint ptr %dev_state.i.i to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load volatile i32, ptr %dev_state.i.i, align 4
  %205 = and i32 %204, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %205)
  %tobool113.not.i = icmp eq i32 %205, 0
  br i1 %tobool113.not.i, label %if.then114.i, label %land.lhs.true110.i.read_one_dev.exit.thread147_crit_edge

land.lhs.true110.i.read_one_dev.exit.thread147_crit_edge: ; preds = %land.lhs.true110.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %read_one_dev.exit.thread147

if.then114.i:                                     ; preds = %land.lhs.true110.i
  call void @__sanitizer_cov_trace_pc() #25
  %206 = ptrtoint ptr %total_bytes.i.i to i32
  call void @__asan_load8_noabort(i32 %206)
  %207 = load i64, ptr %total_bytes.i.i, align 8
  %208 = ptrtoint ptr %fs_devices70.i to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %fs_devices70.i, align 8
  %total_rw_bytes.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %209, i32 0, i32 8
  %210 = ptrtoint ptr %total_rw_bytes.i to i32
  call void @__asan_load8_noabort(i32 %210)
  %211 = load i64, ptr %total_rw_bytes.i, align 8
  %add.i = add i64 %211, %207
  store i64 %add.i, ptr %total_rw_bytes.i, align 8
  %212 = load i64, ptr %total_bytes.i.i, align 8
  %213 = ptrtoint ptr %bytes_used.i.i to i32
  call void @__asan_load8_noabort(i32 %213)
  %214 = load i64, ptr %bytes_used.i.i, align 8
  %sub.i = sub i64 %212, %214
  %free_chunk_space.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %59, i32 0, i32 17
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %free_chunk_space.i, i32 noundef 8) #23
  call void @generic_atomic64_add(i64 noundef %sub.i, ptr noundef %free_chunk_space.i) #23
  br label %read_one_dev.exit.thread147

read_one_dev.exit.thread:                         ; preds = %if.then102.i, %do.end90.i.read_one_dev.exit.thread_crit_edge, %if.end9.sink.split.i206.i, %if.then39.i.read_one_dev.exit.thread_crit_edge, %if.end9.sink.split.i.i, %if.then23.i.read_one_dev.exit.thread_crit_edge
  %retval.1.i.ph = phi i32 [ -2, %if.end9.sink.split.i206.i ], [ -2, %if.then39.i.read_one_dev.exit.thread_crit_edge ], [ -2, %if.end9.sink.split.i.i ], [ -2, %if.then23.i.read_one_dev.exit.thread_crit_edge ], [ -22, %if.then102.i ], [ -22, %do.end90.i.read_one_dev.exit.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %dev_uuid.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %fs_uuid.i) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args.i) #23
  br label %error

read_one_dev.exit.thread147:                      ; preds = %if.then114.i, %land.lhs.true110.i.read_one_dev.exit.thread147_crit_edge, %if.end105.i.read_one_dev.exit.thread147_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %dev_uuid.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %fs_uuid.i) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args.i) #23
  %inc150 = add i64 %total_dev.0.ph, 1
  br label %if.end54

read_one_dev.exit:                                ; preds = %if.then29.i, %if.then15.i
  %retval.1.i = phi i32 [ %129, %if.then15.i ], [ %134, %if.then29.i ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %dev_uuid.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %fs_uuid.i) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.1.i)
  %tobool36.not = icmp eq i32 %retval.1.i, 0
  %inc = add i64 %total_dev.0.ph, 1
  br i1 %tobool36.not, label %read_one_dev.exit.if.end54_crit_edge, label %read_one_dev.exit.error_crit_edge

read_one_dev.exit.error_crit_edge:                ; preds = %read_one_dev.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

read_one_dev.exit.if.end54_crit_edge:             ; preds = %read_one_dev.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end54

if.then43:                                        ; preds = %if.end29
  %215 = inttoptr i32 %add.i.i.i.i to ptr
  %call.i.i138 = call i32 @btrfs_get_32(ptr noundef %19, ptr noundef %215, i32 noundef 17) #23
  %add45 = add i32 %call.i.i138, 101
  %216 = inttoptr i32 %add45 to ptr
  %call46 = call fastcc i32 @read_one_chunk(ptr noundef nonnull %found_key, ptr noundef %19, ptr noundef %216)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call46)
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %if.then43.if.end54_crit_edge, label %if.then43.error_crit_edge

if.then43.error_crit_edge:                        ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

if.then43.if.end54_crit_edge:                     ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end54

if.end54:                                         ; preds = %if.then43.if.end54_crit_edge, %read_one_dev.exit.if.end54_crit_edge, %read_one_dev.exit.thread147, %if.end29.if.end54_crit_edge
  %total_dev.2 = phi i64 [ %inc, %read_one_dev.exit.if.end54_crit_edge ], [ %total_dev.0.ph, %if.then43.if.end54_crit_edge ], [ %total_dev.0.ph, %if.end29.if.end54_crit_edge ], [ %inc150, %read_one_dev.exit.thread147 ]
  %217 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load i32, ptr %slots, align 4
  %inc57 = add i32 %218, 1
  store i32 %inc57, ptr %slots, align 4
  br label %while.cond.outer

while.end:                                        ; preds = %if.end16
  %219 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load ptr, ptr %fs_devices, align 8
  %total_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %220, i32 0, i32 9
  %221 = ptrtoint ptr %total_devices to i32
  call void @__asan_load8_noabort(i32 %221)
  %222 = load i64, ptr %total_devices, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %total_dev.0.ph, i64 %222)
  %cmp62.not = icmp eq i64 %total_dev.0.ph, %222
  %super_copy67 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 43
  %223 = ptrtoint ptr %super_copy67 to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load ptr, ptr %super_copy67, align 8
  br i1 %cmp62.not, label %if.end66, label %if.then64

if.then64:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #25
  %num_devices.i139 = getelementptr inbounds %struct.btrfs_super_block, ptr %224, i32 0, i32 13
  %225 = ptrtoint ptr %num_devices.i139 to i32
  call void @__asan_loadN_noabort(i32 %225, i32 8)
  %226 = load i64, ptr %num_devices.i139, align 1
  %227 = call i64 @llvm.bswap.i64(i64 %226) #23
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.64, i64 noundef %227, i64 noundef %total_dev.0.ph) #28
  br label %error

if.end66:                                         ; preds = %while.end
  %total_bytes.i = getelementptr inbounds %struct.btrfs_super_block, ptr %224, i32 0, i32 10
  %228 = ptrtoint ptr %total_bytes.i to i32
  call void @__asan_loadN_noabort(i32 %228, i32 8)
  %229 = load i64, ptr %total_bytes.i, align 1
  %230 = call i64 @llvm.bswap.i64(i64 %229) #23
  %total_rw_bytes70 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %220, i32 0, i32 8
  %231 = ptrtoint ptr %total_rw_bytes70 to i32
  call void @__asan_load8_noabort(i32 %231)
  %232 = load i64, ptr %total_rw_bytes70, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %230, i64 %232)
  %cmp71 = icmp ult i64 %230, %232
  br i1 %cmp71, label %if.then73, label %if.end66.error_crit_edge

if.end66.error_crit_edge:                         ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

if.then73:                                        ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.65, i64 noundef %230, i64 noundef %232) #28
  br label %error

error:                                            ; preds = %if.then73, %if.end66.error_crit_edge, %if.then64, %if.then43.error_crit_edge, %read_one_dev.exit.error_crit_edge, %read_one_dev.exit.thread, %if.end16.error_crit_edge, %cond.end.error_crit_edge
  %ret.3 = phi i32 [ %call6, %cond.end.error_crit_edge ], [ -22, %if.then64 ], [ -22, %if.then73 ], [ 0, %if.end66.error_crit_edge ], [ %retval.1.i.ph, %read_one_dev.exit.thread ], [ %call.i130, %if.end16.error_crit_edge ], [ %call46, %if.then43.error_crit_edge ], [ %retval.1.i, %read_one_dev.exit.error_crit_edge ]
  call void @mutex_unlock(ptr noundef nonnull @uuid_mutex) #23
  call void @btrfs_free_path(ptr noundef nonnull %call) #23
  br label %cleanup79

cleanup79:                                        ; preds = %error, %entry.cleanup79_crit_edge
  %retval.0 = phi i32 [ %ret.3, %error ], [ -12, %entry.cleanup79_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %found_key) #23
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_init_devices_late(ptr noundef %fs_info) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_devices1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %0 = ptrtoint ptr %fs_devices1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_devices1, align 8
  %fs_info2 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 19
  %2 = ptrtoint ptr %fs_info2 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %fs_info, ptr %fs_info2, align 4
  %device_list_mutex = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 12
  tail call void @mutex_lock_nested(ptr noundef %device_list_mutex, i32 noundef 0) #23
  %devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 13
  %3 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %device.067 = load ptr, ptr %devices, align 8
  %cmp.not68 = icmp eq ptr %device.067, %devices
  br i1 %cmp.not68, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %device.069 = phi ptr [ %device.0, %for.body.for.body_crit_edge ], [ %device.067, %entry.for.body_crit_edge ]
  %fs_info4 = getelementptr inbounds %struct.btrfs_device, ptr %device.069, i32 0, i32 4
  %4 = ptrtoint ptr %fs_info4 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %fs_info, ptr %fs_info4, align 4
  %5 = ptrtoint ptr %device.069 to i32
  call void @__asan_load4_noabort(i32 %5)
  %device.0 = load ptr, ptr %device.069, align 8
  %cmp.not = icmp eq ptr %device.0, %devices
  br i1 %cmp.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  %seed_list = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 15
  %6 = ptrtoint ptr %seed_list to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn73 = load ptr, ptr %seed_list, align 8
  %cmp17.not74 = icmp eq ptr %.pn73, %seed_list
  br i1 %cmp17.not74, label %for.end.for.end46_crit_edge, label %for.end.for.body19_crit_edge

for.end.for.body19_crit_edge:                     ; preds = %for.end
  br label %for.body19

for.end.for.end46_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end46

for.body19:                                       ; preds = %for.end38.for.body19_crit_edge, %for.end.for.body19_crit_edge
  %.pn75 = phi ptr [ %.pn, %for.end38.for.body19_crit_edge ], [ %.pn73, %for.end.for.body19_crit_edge ]
  %devices21 = getelementptr i8, ptr %.pn75, i32 -16
  %7 = ptrtoint ptr %devices21 to i32
  call void @__asan_load4_noabort(i32 %7)
  %device.170 = load ptr, ptr %devices21, align 8
  %cmp28.not71 = icmp eq ptr %device.170, %devices21
  br i1 %cmp28.not71, label %for.body19.for.end38_crit_edge, label %for.body19.for.body30_crit_edge

for.body19.for.body30_crit_edge:                  ; preds = %for.body19
  br label %for.body30

for.body19.for.end38_crit_edge:                   ; preds = %for.body19
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end38

for.body30:                                       ; preds = %for.body30.for.body30_crit_edge, %for.body19.for.body30_crit_edge
  %device.172 = phi ptr [ %device.1, %for.body30.for.body30_crit_edge ], [ %device.170, %for.body19.for.body30_crit_edge ]
  %fs_info31 = getelementptr inbounds %struct.btrfs_device, ptr %device.172, i32 0, i32 4
  %8 = ptrtoint ptr %fs_info31 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %fs_info, ptr %fs_info31, align 4
  %9 = ptrtoint ptr %device.172 to i32
  call void @__asan_load4_noabort(i32 %9)
  %device.1 = load ptr, ptr %device.172, align 8
  %cmp28.not = icmp eq ptr %device.1, %devices21
  br i1 %cmp28.not, label %for.body30.for.end38_crit_edge, label %for.body30.for.body30_crit_edge

for.body30.for.body30_crit_edge:                  ; preds = %for.body30
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body30

for.body30.for.end38_crit_edge:                   ; preds = %for.body30
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end38

for.end38:                                        ; preds = %for.body30.for.end38_crit_edge, %for.body19.for.end38_crit_edge
  %fs_info39 = getelementptr i8, ptr %.pn75, i32 20
  %10 = ptrtoint ptr %fs_info39 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %fs_info, ptr %fs_info39, align 4
  %11 = ptrtoint ptr %.pn75 to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pn = load ptr, ptr %.pn75, align 8
  %cmp17.not = icmp eq ptr %.pn, %seed_list
  br i1 %cmp17.not, label %for.end38.for.end46_crit_edge, label %for.end38.for.body19_crit_edge

for.end38.for.body19_crit_edge:                   ; preds = %for.end38
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body19

for.end38.for.end46_crit_edge:                    ; preds = %for.end38
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end46

for.end46:                                        ; preds = %for.end38.for.end46_crit_edge, %for.end.for.end46_crit_edge
  tail call void @mutex_unlock(ptr noundef %device_list_mutex) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_init_dev_stats(ptr nocapture noundef readonly %fs_info) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_devices1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %0 = ptrtoint ptr %fs_devices1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_devices1, align 8
  %call = tail call ptr @btrfs_alloc_path() #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %device_list_mutex = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 12
  tail call void @mutex_lock_nested(ptr noundef %device_list_mutex, i32 noundef 0) #23
  %devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 13
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.end
  %device.0.in = phi ptr [ %devices, %if.end ], [ %device.0, %for.body.for.cond_crit_edge ]
  %2 = ptrtoint ptr %device.0.in to i32
  call void @__asan_load4_noabort(i32 %2)
  %device.0 = load ptr, ptr %device.0.in, align 8
  %cmp.not = icmp eq ptr %device.0, %devices
  br i1 %cmp.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %call3 = tail call fastcc i32 @btrfs_device_init_dev_stats(ptr noundef %device.0, ptr noundef nonnull %call)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %for.body.for.cond_crit_edge, label %for.body.out_crit_edge

for.body.out_crit_edge:                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %seed_list = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 15
  %3 = ptrtoint ptr %seed_list to i32
  call void @__asan_load4_noabort(i32 %3)
  %.pn76 = load ptr, ptr %seed_list, align 8
  %cmp19.not77 = icmp eq ptr %.pn76, %seed_list
  br i1 %cmp19.not77, label %for.end.out_crit_edge, label %for.end.for.body21_crit_edge

for.end.for.body21_crit_edge:                     ; preds = %for.end
  br label %for.body21

for.end.out_crit_edge:                            ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

for.cond16.loopexit:                              ; preds = %for.cond27
  %4 = ptrtoint ptr %.pn78 to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pn = load ptr, ptr %.pn78, align 8
  %cmp19.not = icmp eq ptr %.pn, %seed_list
  br i1 %cmp19.not, label %for.cond16.loopexit.out_crit_edge, label %for.cond16.loopexit.for.body21_crit_edge

for.cond16.loopexit.for.body21_crit_edge:         ; preds = %for.cond16.loopexit
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body21

for.cond16.loopexit.out_crit_edge:                ; preds = %for.cond16.loopexit
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

for.body21:                                       ; preds = %for.cond16.loopexit.for.body21_crit_edge, %for.end.for.body21_crit_edge
  %.pn78 = phi ptr [ %.pn, %for.cond16.loopexit.for.body21_crit_edge ], [ %.pn76, %for.end.for.body21_crit_edge ]
  %devices23 = getelementptr i8, ptr %.pn78, i32 -16
  br label %for.cond27

for.cond27:                                       ; preds = %for.body32.for.cond27_crit_edge, %for.body21
  %device.1.in = phi ptr [ %devices23, %for.body21 ], [ %device.1, %for.body32.for.cond27_crit_edge ]
  %5 = ptrtoint ptr %device.1.in to i32
  call void @__asan_load4_noabort(i32 %5)
  %device.1 = load ptr, ptr %device.1.in, align 8
  %cmp30.not = icmp eq ptr %device.1, %devices23
  br i1 %cmp30.not, label %for.cond16.loopexit, label %for.body32

for.body32:                                       ; preds = %for.cond27
  %call33 = tail call fastcc i32 @btrfs_device_init_dev_stats(ptr noundef %device.1, ptr noundef nonnull %call)
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %for.body32.for.cond27_crit_edge, label %for.body32.out_crit_edge

for.body32.out_crit_edge:                         ; preds = %for.body32
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

for.body32.for.cond27_crit_edge:                  ; preds = %for.body32
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.cond27

out:                                              ; preds = %for.body32.out_crit_edge, %for.cond16.loopexit.out_crit_edge, %for.end.out_crit_edge, %for.body.out_crit_edge
  %ret.3 = phi i32 [ 0, %for.end.out_crit_edge ], [ %call33, %for.body32.out_crit_edge ], [ 0, %for.cond16.loopexit.out_crit_edge ], [ %call3, %for.body.out_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %device_list_mutex) #23
  tail call void @btrfs_free_path(ptr noundef nonnull %call) #23
  br label %cleanup

cleanup:                                          ; preds = %out, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.3, %out ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_device_init_dev_stats(ptr noundef %device, ptr noundef %path) unnamed_addr #4 align 64 {
entry:
  %val.i = alloca i64, align 8
  %key = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #23
  %fs_info = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 4
  %0 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info, align 4
  %dev_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %dev_root to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev_root, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %5 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %6 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 0, ptr %key, align 8
  %7 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 -7, ptr %5, align 8
  %devid = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 13
  %8 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %devid, align 8
  %10 = ptrtoint ptr %4 to i32
  call void @__asan_storeN_noabort(i32 %10, i32 8)
  store i64 %9, ptr %4, align 1
  %call = call i32 @btrfs_search_slot(ptr noundef null, ptr noundef nonnull %3, ptr noundef nonnull %key, ptr noundef %path, i32 noundef 0, i32 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool3.not = icmp eq i32 %call, 0
  br i1 %tobool3.not, label %if.end6, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %dev_stat_values.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 29
  %dev_stats_ccnt.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 28
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %dev_stat_values.i, i32 noundef 4) #23
  %11 = ptrtoint ptr %dev_stat_values.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile i32 0, ptr %dev_stat_values.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !505
  %call.i.i4.i = call zeroext i1 @__kasan_check_write(ptr noundef %dev_stats_ccnt.i, i32 noundef 4) #23
  call void @llvm.prefetch.p0(ptr %dev_stats_ccnt.i, i32 1, i32 3, i32 1) #23
  %12 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %dev_stats_ccnt.i, ptr %dev_stats_ccnt.i, i32 1, ptr elementtype(i32) %dev_stats_ccnt.i) #23, !srcloc !494
  %add.ptr.i.1 = getelementptr %struct.btrfs_device, ptr %device, i32 0, i32 29, i32 1
  %call.i.i.i.1 = call zeroext i1 @__kasan_check_write(ptr noundef %add.ptr.i.1, i32 noundef 4) #23
  %13 = ptrtoint ptr %add.ptr.i.1 to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile i32 0, ptr %add.ptr.i.1, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !505
  %call.i.i4.i.1 = call zeroext i1 @__kasan_check_write(ptr noundef %dev_stats_ccnt.i, i32 noundef 4) #23
  call void @llvm.prefetch.p0(ptr %dev_stats_ccnt.i, i32 1, i32 3, i32 1) #23
  %14 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %dev_stats_ccnt.i, ptr %dev_stats_ccnt.i, i32 1, ptr elementtype(i32) %dev_stats_ccnt.i) #23, !srcloc !494
  %add.ptr.i.2 = getelementptr %struct.btrfs_device, ptr %device, i32 0, i32 29, i32 2
  %call.i.i.i.2 = call zeroext i1 @__kasan_check_write(ptr noundef %add.ptr.i.2, i32 noundef 4) #23
  %15 = ptrtoint ptr %add.ptr.i.2 to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile i32 0, ptr %add.ptr.i.2, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !505
  %call.i.i4.i.2 = call zeroext i1 @__kasan_check_write(ptr noundef %dev_stats_ccnt.i, i32 noundef 4) #23
  call void @llvm.prefetch.p0(ptr %dev_stats_ccnt.i, i32 1, i32 3, i32 1) #23
  %16 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %dev_stats_ccnt.i, ptr %dev_stats_ccnt.i, i32 1, ptr elementtype(i32) %dev_stats_ccnt.i) #23, !srcloc !494
  %add.ptr.i.3 = getelementptr %struct.btrfs_device, ptr %device, i32 0, i32 29, i32 3
  %call.i.i.i.3 = call zeroext i1 @__kasan_check_write(ptr noundef %add.ptr.i.3, i32 noundef 4) #23
  %17 = ptrtoint ptr %add.ptr.i.3 to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile i32 0, ptr %add.ptr.i.3, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !505
  %call.i.i4.i.3 = call zeroext i1 @__kasan_check_write(ptr noundef %dev_stats_ccnt.i, i32 noundef 4) #23
  call void @llvm.prefetch.p0(ptr %dev_stats_ccnt.i, i32 1, i32 3, i32 1) #23
  %18 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %dev_stats_ccnt.i, ptr %dev_stats_ccnt.i, i32 1, ptr elementtype(i32) %dev_stats_ccnt.i) #23, !srcloc !494
  %add.ptr.i.4 = getelementptr %struct.btrfs_device, ptr %device, i32 0, i32 29, i32 4
  %call.i.i.i.4 = call zeroext i1 @__kasan_check_write(ptr noundef %add.ptr.i.4, i32 noundef 4) #23
  %19 = ptrtoint ptr %add.ptr.i.4 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile i32 0, ptr %add.ptr.i.4, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !505
  %call.i.i4.i.4 = call zeroext i1 @__kasan_check_write(ptr noundef %dev_stats_ccnt.i, i32 noundef 4) #23
  call void @llvm.prefetch.p0(ptr %dev_stats_ccnt.i, i32 1, i32 3, i32 1) #23
  %20 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %dev_stats_ccnt.i, ptr %dev_stats_ccnt.i, i32 1, ptr elementtype(i32) %dev_stats_ccnt.i) #23, !srcloc !494
  %dev_stats_valid = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 27
  %21 = ptrtoint ptr %dev_stats_valid to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 1, ptr %dev_stats_valid, align 8
  call void @btrfs_release_path(ptr noundef %path) #23
  %22 = call i32 @llvm.smin.i32(i32 %call, i32 0)
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %path, i32 0, i32 1
  %23 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %slots, align 4
  %25 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %path, align 4
  %mul.i.i.i = mul i32 %24, 25
  %add.i.i.i = add i32 %mul.i.i.i, 101
  %27 = inttoptr i32 %add.i.i.i to ptr
  %call.i.i = call i32 @btrfs_get_32(ptr noundef %26, ptr noundef %27, i32 noundef 21) #23
  %call.i.i55 = call i32 @btrfs_get_32(ptr noundef %26, ptr noundef %27, i32 noundef 17) #23
  %add = add i32 %call.i.i55, 101
  %dev_stat_values.i56 = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 29
  %dev_stats_ccnt.i59 = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 28
  br label %for.body12

for.body12:                                       ; preds = %for.inc18.for.body12_crit_edge, %if.end6
  %i.168 = phi i32 [ 0, %if.end6 ], [ %add13, %for.inc18.for.body12_crit_edge ]
  %add13 = add nuw nsw i32 %i.168, 1
  %mul = shl i32 %add13, 3
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i, i32 %mul)
  %cmp14.not = icmp ult i32 %call.i.i, %mul
  br i1 %cmp14.not, label %if.else, label %if.then15

if.then15:                                        ; preds = %for.body12
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %val.i) #23
  %28 = ptrtoint ptr %val.i to i32
  call void @__asan_store8_noabort(i32 %28)
  store i64 -1, ptr %val.i, align 8, !annotation !425
  %mul.i = shl i32 %i.168, 3
  %add1.i = add i32 %add, %mul.i
  call void @read_extent_buffer(ptr noundef %26, ptr noundef nonnull %val.i, i32 noundef %add1.i, i32 noundef 8) #23
  %29 = ptrtoint ptr %val.i to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %val.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %val.i) #23
  %conv = trunc i64 %30 to i32
  %add.ptr.i57 = getelementptr %struct.atomic_t, ptr %dev_stat_values.i56, i32 %i.168
  %call.i.i.i58 = call zeroext i1 @__kasan_check_write(ptr noundef %add.ptr.i57, i32 noundef 4) #23
  %31 = ptrtoint ptr %add.ptr.i57 to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile i32 %conv, ptr %add.ptr.i57, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !505
  %call.i.i4.i60 = call zeroext i1 @__kasan_check_write(ptr noundef %dev_stats_ccnt.i59, i32 noundef 4) #23
  call void @llvm.prefetch.p0(ptr %dev_stats_ccnt.i59, i32 1, i32 3, i32 1) #23
  %32 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %dev_stats_ccnt.i59, ptr %dev_stats_ccnt.i59, i32 1, ptr elementtype(i32) %dev_stats_ccnt.i59) #23, !srcloc !494
  br label %for.inc18

if.else:                                          ; preds = %for.body12
  call void @__sanitizer_cov_trace_pc() #25
  %add.ptr.i62 = getelementptr %struct.atomic_t, ptr %dev_stat_values.i56, i32 %i.168
  %call.i.i.i63 = call zeroext i1 @__kasan_check_write(ptr noundef %add.ptr.i62, i32 noundef 4) #23
  %33 = ptrtoint ptr %add.ptr.i62 to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile i32 0, ptr %add.ptr.i62, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !505
  %call.i.i4.i65 = call zeroext i1 @__kasan_check_write(ptr noundef %dev_stats_ccnt.i59, i32 noundef 4) #23
  call void @llvm.prefetch.p0(ptr %dev_stats_ccnt.i59, i32 1, i32 3, i32 1) #23
  %34 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %dev_stats_ccnt.i59, ptr %dev_stats_ccnt.i59, i32 1, ptr elementtype(i32) %dev_stats_ccnt.i59) #23, !srcloc !494
  br label %for.inc18

for.inc18:                                        ; preds = %if.else, %if.then15
  %exitcond.not = icmp eq i32 %add13, 5
  br i1 %exitcond.not, label %for.end20, label %for.inc18.for.body12_crit_edge

for.inc18.for.body12_crit_edge:                   ; preds = %for.inc18
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body12

for.end20:                                        ; preds = %for.inc18
  %dev_stats_valid21 = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 27
  %35 = ptrtoint ptr %dev_stats_valid21 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 1, ptr %dev_stats_valid21, align 8
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %dev_stat_values.i56, i32 noundef 4) #23
  %36 = ptrtoint ptr %dev_stat_values.i56 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %dev_stat_values.i56, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %cmp1.not.i = icmp eq i32 %37, 0
  br i1 %cmp1.not.i, label %for.inc.i, label %for.end20.do.body.i_crit_edge

for.end20.do.body.i_crit_edge:                    ; preds = %for.end20
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body.i

for.inc.i:                                        ; preds = %for.end20
  %add.ptr.i.1.i = getelementptr %struct.btrfs_device, ptr %device, i32 0, i32 29, i32 1
  %call.i.i.i.1.i = call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i.1.i, i32 noundef 4) #23
  %38 = ptrtoint ptr %add.ptr.i.1.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %add.ptr.i.1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %cmp1.not.1.i = icmp eq i32 %39, 0
  br i1 %cmp1.not.1.i, label %for.inc.1.i, label %for.inc.i.do.body.i_crit_edge

for.inc.i.do.body.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body.i

for.inc.1.i:                                      ; preds = %for.inc.i
  %add.ptr.i.2.i = getelementptr %struct.btrfs_device, ptr %device, i32 0, i32 29, i32 2
  %call.i.i.i.2.i = call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i.2.i, i32 noundef 4) #23
  %40 = ptrtoint ptr %add.ptr.i.2.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %add.ptr.i.2.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %cmp1.not.2.i = icmp eq i32 %41, 0
  br i1 %cmp1.not.2.i, label %for.inc.2.i, label %for.inc.1.i.do.body.i_crit_edge

for.inc.1.i.do.body.i_crit_edge:                  ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body.i

for.inc.2.i:                                      ; preds = %for.inc.1.i
  %add.ptr.i.3.i = getelementptr %struct.btrfs_device, ptr %device, i32 0, i32 29, i32 3
  %call.i.i.i.3.i = call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i.3.i, i32 noundef 4) #23
  %42 = ptrtoint ptr %add.ptr.i.3.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %add.ptr.i.3.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %cmp1.not.3.i = icmp eq i32 %43, 0
  br i1 %cmp1.not.3.i, label %for.inc.3.i, label %for.inc.2.i.do.body.i_crit_edge

for.inc.2.i.do.body.i_crit_edge:                  ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body.i

for.inc.3.i:                                      ; preds = %for.inc.2.i
  %add.ptr.i.4.i = getelementptr %struct.btrfs_device, ptr %device, i32 0, i32 29, i32 4
  %call.i.i.i.4.i = call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i.4.i, i32 noundef 4) #23
  %44 = ptrtoint ptr %add.ptr.i.4.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %add.ptr.i.4.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %cmp1.not.4.i = icmp eq i32 %45, 0
  br i1 %cmp1.not.4.i, label %for.inc.3.i.btrfs_dev_stat_print_on_load.exit_crit_edge, label %for.inc.3.i.do.body.i_crit_edge

for.inc.3.i.do.body.i_crit_edge:                  ; preds = %for.inc.3.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.body.i

for.inc.3.i.btrfs_dev_stat_print_on_load.exit_crit_edge: ; preds = %for.inc.3.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_dev_stat_print_on_load.exit

do.body.i:                                        ; preds = %for.inc.3.i.do.body.i_crit_edge, %for.inc.2.i.do.body.i_crit_edge, %for.inc.1.i.do.body.i_crit_edge, %for.inc.i.do.body.i_crit_edge, %for.end20.do.body.i_crit_edge
  %46 = call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i.i.i = and i32 %46, -16384
  %47 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %49, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !432
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #23
  %call.i.i66 = call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i.i66, label %do.body.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

do.body.i.rcu_read_lock.exit.i_crit_edge:         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %do.body.i
  %call1.i.i = call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 696, ptr noundef nonnull @.str.97) #23
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %do.body.i.rcu_read_lock.exit.i_crit_edge
  %50 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %fs_info, align 4
  %name.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 5
  %52 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile ptr, ptr %name.i, align 8
  %call7.i = call i32 @rcu_read_lock_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %rcu_read_lock.exit.i.do.end15.i_crit_edge

rcu_read_lock.exit.i.do.end15.i_crit_edge:        ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end15.i

land.lhs.true.i:                                  ; preds = %rcu_read_lock.exit.i
  %call8.i = call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool9.not.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.not.i, label %land.lhs.true.i.do.end15.i_crit_edge, label %land.lhs.true10.i

land.lhs.true.i.do.end15.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end15.i

land.lhs.true10.i:                                ; preds = %land.lhs.true.i
  %.b35.i = load i1, ptr @btrfs_dev_stat_print_on_load.__warned, align 1
  br i1 %.b35.i, label %land.lhs.true10.i.do.end15.i_crit_edge, label %if.then12.i

land.lhs.true10.i.do.end15.i_crit_edge:           ; preds = %land.lhs.true10.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end15.i

if.then12.i:                                      ; preds = %land.lhs.true10.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @btrfs_dev_stat_print_on_load.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.9, i32 noundef 7961, ptr noundef nonnull @.str.13) #23
  br label %do.end15.i

do.end15.i:                                       ; preds = %if.then12.i, %land.lhs.true10.i.do.end15.i_crit_edge, %land.lhs.true.i.do.end15.i_crit_edge, %rcu_read_lock.exit.i.do.end15.i_crit_edge
  %str.i = getelementptr inbounds %struct.rcu_string, ptr %53, i32 0, i32 1
  %call.i.i.i37.i = call zeroext i1 @__kasan_check_read(ptr noundef %dev_stat_values.i56, i32 noundef 4) #23
  %54 = ptrtoint ptr %dev_stat_values.i56 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %dev_stat_values.i56, align 4
  %add.ptr.i39.i = getelementptr %struct.btrfs_device, ptr %device, i32 0, i32 29, i32 1
  %call.i.i.i40.i = call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i39.i, i32 noundef 4) #23
  %56 = ptrtoint ptr %add.ptr.i39.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %add.ptr.i39.i, align 4
  %add.ptr.i42.i = getelementptr %struct.btrfs_device, ptr %device, i32 0, i32 29, i32 2
  %call.i.i.i43.i = call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i42.i, i32 noundef 4) #23
  %58 = ptrtoint ptr %add.ptr.i42.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %add.ptr.i42.i, align 4
  %add.ptr.i45.i = getelementptr %struct.btrfs_device, ptr %device, i32 0, i32 29, i32 3
  %call.i.i.i46.i = call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i45.i, i32 noundef 4) #23
  %60 = ptrtoint ptr %add.ptr.i45.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %add.ptr.i45.i, align 4
  %add.ptr.i48.i = getelementptr %struct.btrfs_device, ptr %device, i32 0, i32 29, i32 4
  %call.i.i.i49.i = call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i48.i, i32 noundef 4) #23
  %62 = ptrtoint ptr %add.ptr.i48.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %add.ptr.i48.i, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %51, ptr noundef nonnull @.str.166, ptr noundef %str.i, i32 noundef %55, i32 noundef %57, i32 noundef %59, i32 noundef %61, i32 noundef %63) #28
  %call.i50.i = call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i50.i, label %do.end15.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true.i53.i

do.end15.i.rcu_read_unlock.exit.i_crit_edge:      ; preds = %do.end15.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit.i

land.lhs.true.i53.i:                              ; preds = %do.end15.i
  %call1.i51.i = call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i51.i)
  %tobool.not.i52.i = icmp eq i32 %call1.i51.i, 0
  br i1 %tobool.not.i52.i, label %land.lhs.true.i53.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true2.i55.i

land.lhs.true.i53.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true.i53.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit.i

land.lhs.true2.i55.i:                             ; preds = %land.lhs.true.i53.i
  %.b4.i54.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i54.i, label %land.lhs.true2.i55.i.rcu_read_unlock.exit.i_crit_edge, label %if.then.i56.i

land.lhs.true2.i55.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true2.i55.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit.i

if.then.i56.i:                                    ; preds = %land.lhs.true2.i55.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 724, ptr noundef nonnull @.str.98) #23
  br label %rcu_read_unlock.exit.i

rcu_read_unlock.exit.i:                           ; preds = %if.then.i56.i, %land.lhs.true2.i55.i.rcu_read_unlock.exit.i_crit_edge, %land.lhs.true.i53.i.rcu_read_unlock.exit.i_crit_edge, %do.end15.i.rcu_read_unlock.exit.i_crit_edge
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !433
  %64 = call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i.i57.i = and i32 %64, -16384
  %65 = inttoptr i32 %and.i.i.i.i.i57.i to ptr
  %preempt_count.i.i.i.i58.i = getelementptr inbounds %struct.thread_info, ptr %65, i32 0, i32 1
  %66 = ptrtoint ptr %preempt_count.i.i.i.i58.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %preempt_count.i.i.i.i58.i, align 4
  %sub.i.i.i.i = add i32 %67, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i58.i, align 4
  call void @rcu_read_unlock_strict() #23
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #23
  br label %btrfs_dev_stat_print_on_load.exit

btrfs_dev_stat_print_on_load.exit:                ; preds = %rcu_read_unlock.exit.i, %for.inc.3.i.btrfs_dev_stat_print_on_load.exit_crit_edge
  call void @btrfs_release_path(ptr noundef %path) #23
  br label %cleanup

cleanup:                                          ; preds = %btrfs_dev_stat_print_on_load.exit, %for.cond.preheader, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %22, %for.cond.preheader ], [ 0, %btrfs_dev_stat_print_on_load.exit ], [ 0, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_run_dev_stats(ptr noundef %trans) local_unnamed_addr #4 align 64 {
entry:
  %val.addr.i.i = alloca i64, align 8
  %data_size.addr.i.i = alloca i32, align 4
  %batch.i.i = alloca %struct.btrfs_item_batch, align 4
  %key.i = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info1 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %trans, i32 0, i32 16
  %0 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info1, align 4
  %fs_devices2 = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 100
  %2 = ptrtoint ptr %fs_devices2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %fs_devices2, align 8
  %device_list_mutex = getelementptr inbounds %struct.btrfs_fs_devices, ptr %3, i32 0, i32 12
  tail call void @mutex_lock_nested(ptr noundef %device_list_mutex, i32 noundef 0) #23
  %devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %4)
  %device.051 = load ptr, ptr %devices, align 8
  %cmp.not52 = icmp eq ptr %device.051, %devices
  br i1 %cmp.not52, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %5 = getelementptr inbounds %struct.btrfs_key, ptr %key.i, i32 0, i32 1
  %6 = getelementptr inbounds %struct.btrfs_key, ptr %key.i, i32 0, i32 2
  %7 = getelementptr inbounds %struct.btrfs_item_batch, ptr %batch.i.i, i32 0, i32 1
  %8 = getelementptr inbounds %struct.btrfs_item_batch, ptr %batch.i.i, i32 0, i32 2
  %9 = getelementptr inbounds %struct.btrfs_item_batch, ptr %batch.i.i, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %device.054 = phi ptr [ %device.051, %for.body.lr.ph ], [ %device.0, %for.inc.for.body_crit_edge ]
  %ret.053 = phi i32 [ 0, %for.body.lr.ph ], [ %ret.1, %for.inc.for.body_crit_edge ]
  %dev_stats_ccnt = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 28
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %dev_stats_ccnt, i32 noundef 4) #23
  %10 = ptrtoint ptr %dev_stats_ccnt to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %dev_stats_ccnt, align 4
  %dev_stats_valid = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 27
  %12 = ptrtoint ptr %dev_stats_valid to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %dev_stats_valid, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not = icmp eq i32 %13, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp4 = icmp eq i32 %11, 0
  %or.cond = select i1 %tobool.not, i1 true, i1 %cmp4
  br i1 %or.cond, label %for.body.for.inc_crit_edge, label %do.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

do.end:                                           ; preds = %for.body
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !506
  %14 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %fs_info1, align 4
  %dev_root2.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %15, i32 0, i32 4
  %16 = ptrtoint ptr %dev_root2.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %dev_root2.i, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key.i) #23
  %18 = ptrtoint ptr %key.i to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 0, ptr %key.i, align 8
  %19 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 -7, ptr %5, align 8
  %devid.i = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 13
  %20 = ptrtoint ptr %devid.i to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %devid.i, align 8
  %22 = ptrtoint ptr %6 to i32
  call void @__asan_storeN_noabort(i32 %22, i32 8)
  store i64 %21, ptr %6, align 1
  %call.i = call ptr @btrfs_alloc_path() #23
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %update_dev_stat_item.exit.thread, label %if.end.i

update_dev_stat_item.exit.thread:                 ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key.i) #23
  br label %for.inc

if.end.i:                                         ; preds = %do.end
  %call3.i = call i32 @btrfs_search_slot(ptr noundef %trans, ptr noundef %17, ptr noundef nonnull %key.i, ptr noundef nonnull %call.i, i32 noundef -1, i32 noundef 1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %cmp.i = icmp slt i32 %call3.i, 0
  br i1 %cmp.i, label %do.body.i, label %if.end21.i

do.body.i:                                        ; preds = %if.end.i
  %23 = call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i.i.i = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %26, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !432
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #23
  %call.i.i31 = call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i.i31, label %do.body.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

do.body.i.rcu_read_lock.exit.i_crit_edge:         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %do.body.i
  %call1.i.i = call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 696, ptr noundef nonnull @.str.97) #23
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %do.body.i.rcu_read_lock.exit.i_crit_edge
  %name.i = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 5
  %27 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile ptr, ptr %name.i, align 8
  %call7.i = call i32 @rcu_read_lock_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %land.lhs.true.i, label %rcu_read_lock.exit.i.do.end16.i_crit_edge

rcu_read_lock.exit.i.do.end16.i_crit_edge:        ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end16.i

land.lhs.true.i:                                  ; preds = %rcu_read_lock.exit.i
  %call9.i = call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool10.not.i = icmp eq i32 %call9.i, 0
  br i1 %tobool10.not.i, label %land.lhs.true.i.do.end16.i_crit_edge, label %land.lhs.true11.i

land.lhs.true.i.do.end16.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end16.i

land.lhs.true11.i:                                ; preds = %land.lhs.true.i
  %.b142.i = load i1, ptr @update_dev_stat_item.__warned, align 1
  br i1 %.b142.i, label %land.lhs.true11.i.do.end16.i_crit_edge, label %if.then13.i

land.lhs.true11.i.do.end16.i_crit_edge:           ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end16.i

if.then13.i:                                      ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @update_dev_stat_item.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.9, i32 noundef 7842, ptr noundef nonnull @.str.13) #23
  br label %do.end16.i

do.end16.i:                                       ; preds = %if.then13.i, %land.lhs.true11.i.do.end16.i_crit_edge, %land.lhs.true.i.do.end16.i_crit_edge, %rcu_read_lock.exit.i.do.end16.i_crit_edge
  %str.i = getelementptr inbounds %struct.rcu_string, ptr %28, i32 0, i32 1
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %15, ptr noundef nonnull @.str.167, i32 noundef %call3.i, ptr noundef %str.i) #28
  %call.i165.i = call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i165.i, label %do.end16.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true.i168.i

do.end16.i.rcu_read_unlock.exit.i_crit_edge:      ; preds = %do.end16.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit.i

land.lhs.true.i168.i:                             ; preds = %do.end16.i
  %call1.i166.i = call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i166.i)
  %tobool.not.i167.i = icmp eq i32 %call1.i166.i, 0
  br i1 %tobool.not.i167.i, label %land.lhs.true.i168.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true2.i170.i

land.lhs.true.i168.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true.i168.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit.i

land.lhs.true2.i170.i:                            ; preds = %land.lhs.true.i168.i
  %.b4.i169.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i169.i, label %land.lhs.true2.i170.i.rcu_read_unlock.exit.i_crit_edge, label %if.then.i171.i

land.lhs.true2.i170.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true2.i170.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit.i

if.then.i171.i:                                   ; preds = %land.lhs.true2.i170.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 724, ptr noundef nonnull @.str.98) #23
  br label %rcu_read_unlock.exit.i

rcu_read_unlock.exit.i:                           ; preds = %if.then.i171.i, %land.lhs.true2.i170.i.rcu_read_unlock.exit.i_crit_edge, %land.lhs.true.i168.i.rcu_read_unlock.exit.i_crit_edge, %do.end16.i.rcu_read_unlock.exit.i_crit_edge
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !433
  br label %update_dev_stat_item.exit.thread48

if.end21.i:                                       ; preds = %if.end.i
  %29 = zext i32 %call3.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %29, ptr @__sancov_gen_cov_switch_values.215)
  switch i32 %call3.i, label %if.end21.i.update_dev_stat_item.exit_crit_edge [
    i32 0, label %land.lhs.true23.i
    i32 1, label %if.end21.i.if.then59.i_crit_edge
  ]

if.end21.i.if.then59.i_crit_edge:                 ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then59.i

if.end21.i.update_dev_stat_item.exit_crit_edge:   ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %update_dev_stat_item.exit

land.lhs.true23.i:                                ; preds = %if.end21.i
  %30 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %call.i, align 4
  %slots.i = getelementptr inbounds %struct.btrfs_path, ptr %call.i, i32 0, i32 1
  %32 = ptrtoint ptr %slots.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %slots.i, align 4
  %mul.i.i.i.i = mul i32 %33, 25
  %add.i.i.i174.i = add i32 %mul.i.i.i.i, 101
  %34 = inttoptr i32 %add.i.i.i174.i to ptr
  %call.i.i.i = call i32 @btrfs_get_32(ptr noundef %31, ptr noundef %34, i32 noundef 21) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 40, i32 %call.i.i.i)
  %cmp26.i = icmp ult i32 %call.i.i.i, 40
  br i1 %cmp26.i, label %if.then27.i, label %land.lhs.true23.i.update_dev_stat_item.exit_crit_edge

land.lhs.true23.i.update_dev_stat_item.exit_crit_edge: ; preds = %land.lhs.true23.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %update_dev_stat_item.exit

if.then27.i:                                      ; preds = %land.lhs.true23.i
  %35 = ptrtoint ptr %slots.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %slots.i, align 4
  %call.i175.i = call i32 @btrfs_del_items(ptr noundef %trans, ptr noundef %17, ptr noundef nonnull %call.i, i32 noundef %36, i32 noundef 1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i175.i)
  %cmp29.not.i = icmp eq i32 %call.i175.i, 0
  br i1 %cmp29.not.i, label %if.then27.i.if.then59.i_crit_edge, label %do.body31.i

if.then27.i.if.then59.i_crit_edge:                ; preds = %if.then27.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then59.i

do.body31.i:                                      ; preds = %if.then27.i
  %37 = call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i.i143.i = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i.i.i143.i to ptr
  %preempt_count.i.i.i.i144.i = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i.i.i144.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i.i.i144.i, align 4
  %add.i.i.i145.i = add i32 %40, 1
  store volatile i32 %add.i.i.i145.i, ptr %preempt_count.i.i.i.i144.i, align 4
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !432
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #23
  %call.i146.i = call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i146.i, label %do.body31.i.rcu_read_lock.exit153.i_crit_edge, label %land.lhs.true.i149.i

do.body31.i.rcu_read_lock.exit153.i_crit_edge:    ; preds = %do.body31.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit153.i

land.lhs.true.i149.i:                             ; preds = %do.body31.i
  %call1.i147.i = call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i147.i)
  %tobool.not.i148.i = icmp eq i32 %call1.i147.i, 0
  br i1 %tobool.not.i148.i, label %land.lhs.true.i149.i.rcu_read_lock.exit153.i_crit_edge, label %land.lhs.true2.i151.i

land.lhs.true.i149.i.rcu_read_lock.exit153.i_crit_edge: ; preds = %land.lhs.true.i149.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit153.i

land.lhs.true2.i151.i:                            ; preds = %land.lhs.true.i149.i
  %.b4.i150.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i150.i, label %land.lhs.true2.i151.i.rcu_read_lock.exit153.i_crit_edge, label %if.then.i152.i

land.lhs.true2.i151.i.rcu_read_lock.exit153.i_crit_edge: ; preds = %land.lhs.true2.i151.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit153.i

if.then.i152.i:                                   ; preds = %land.lhs.true2.i151.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 696, ptr noundef nonnull @.str.97) #23
  br label %rcu_read_lock.exit153.i

rcu_read_lock.exit153.i:                          ; preds = %if.then.i152.i, %land.lhs.true2.i151.i.rcu_read_lock.exit153.i_crit_edge, %land.lhs.true.i149.i.rcu_read_lock.exit153.i_crit_edge, %do.body31.i.rcu_read_lock.exit153.i_crit_edge
  %name37.i = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 5
  %41 = ptrtoint ptr %name37.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile ptr, ptr %name37.i, align 8
  %call39.i = call i32 @rcu_read_lock_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call39.i)
  %tobool40.not.i = icmp eq i32 %call39.i, 0
  br i1 %tobool40.not.i, label %land.lhs.true41.i, label %rcu_read_lock.exit153.i.do.end49.i_crit_edge

rcu_read_lock.exit153.i.do.end49.i_crit_edge:     ; preds = %rcu_read_lock.exit153.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end49.i

land.lhs.true41.i:                                ; preds = %rcu_read_lock.exit153.i
  %call42.i = call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42.i)
  %tobool43.not.i = icmp eq i32 %call42.i, 0
  br i1 %tobool43.not.i, label %land.lhs.true41.i.do.end49.i_crit_edge, label %land.lhs.true44.i

land.lhs.true41.i.do.end49.i_crit_edge:           ; preds = %land.lhs.true41.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end49.i

land.lhs.true44.i:                                ; preds = %land.lhs.true41.i
  %.b138141.i = load i1, ptr @update_dev_stat_item.__warned.169, align 1
  br i1 %.b138141.i, label %land.lhs.true44.i.do.end49.i_crit_edge, label %if.then46.i

land.lhs.true44.i.do.end49.i_crit_edge:           ; preds = %land.lhs.true44.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end49.i

if.then46.i:                                      ; preds = %land.lhs.true44.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @update_dev_stat_item.__warned.169, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.9, i32 noundef 7853, ptr noundef nonnull @.str.13) #23
  br label %do.end49.i

do.end49.i:                                       ; preds = %if.then46.i, %land.lhs.true44.i.do.end49.i_crit_edge, %land.lhs.true41.i.do.end49.i_crit_edge, %rcu_read_lock.exit153.i.do.end49.i_crit_edge
  %str52.i = getelementptr inbounds %struct.rcu_string, ptr %42, i32 0, i32 1
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %15, ptr noundef nonnull @.str.168, ptr noundef %str52.i, i32 noundef %call.i175.i) #28
  %call.i35 = call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i35, label %do.end49.i.rcu_read_unlock.exit45_crit_edge, label %land.lhs.true.i38

do.end49.i.rcu_read_unlock.exit45_crit_edge:      ; preds = %do.end49.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit45

land.lhs.true.i38:                                ; preds = %do.end49.i
  %call1.i36 = call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i36)
  %tobool.not.i37 = icmp eq i32 %call1.i36, 0
  br i1 %tobool.not.i37, label %land.lhs.true.i38.rcu_read_unlock.exit45_crit_edge, label %land.lhs.true2.i40

land.lhs.true.i38.rcu_read_unlock.exit45_crit_edge: ; preds = %land.lhs.true.i38
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit45

land.lhs.true2.i40:                               ; preds = %land.lhs.true.i38
  %.b4.i39 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i39, label %land.lhs.true2.i40.rcu_read_unlock.exit45_crit_edge, label %if.then.i41

land.lhs.true2.i40.rcu_read_unlock.exit45_crit_edge: ; preds = %land.lhs.true2.i40
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit45

if.then.i41:                                      ; preds = %land.lhs.true2.i40
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 724, ptr noundef nonnull @.str.98) #23
  br label %rcu_read_unlock.exit45

rcu_read_unlock.exit45:                           ; preds = %if.then.i41, %land.lhs.true2.i40.rcu_read_unlock.exit45_crit_edge, %land.lhs.true.i38.rcu_read_unlock.exit45_crit_edge, %do.end49.i.rcu_read_unlock.exit45_crit_edge
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !433
  br label %update_dev_stat_item.exit.thread48

if.then59.i:                                      ; preds = %if.then27.i.if.then59.i_crit_edge, %if.end21.i.if.then59.i_crit_edge
  call void @btrfs_release_path(ptr noundef nonnull %call.i) #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %data_size.addr.i.i) #23
  %43 = ptrtoint ptr %data_size.addr.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 40, ptr %data_size.addr.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %batch.i.i) #23
  %44 = ptrtoint ptr %batch.i.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %key.i, ptr %batch.i.i, align 4
  %45 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %data_size.addr.i.i, ptr %7, align 4
  %46 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 40, ptr %8, align 4
  %47 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 1, ptr %9, align 4
  %call.i176.i = call i32 @btrfs_insert_empty_items(ptr noundef %trans, ptr noundef %17, ptr noundef nonnull %call.i, ptr noundef nonnull %batch.i.i) #23
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %batch.i.i) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %data_size.addr.i.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i176.i)
  %cmp61.i = icmp slt i32 %call.i176.i, 0
  br i1 %cmp61.i, label %do.body63.i, label %if.then59.i.update_dev_stat_item.exit_crit_edge

if.then59.i.update_dev_stat_item.exit_crit_edge:  ; preds = %if.then59.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %update_dev_stat_item.exit

do.body63.i:                                      ; preds = %if.then59.i
  %48 = call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i.i154.i = and i32 %48, -16384
  %49 = inttoptr i32 %and.i.i.i.i.i154.i to ptr
  %preempt_count.i.i.i.i155.i = getelementptr inbounds %struct.thread_info, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %preempt_count.i.i.i.i155.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %preempt_count.i.i.i.i155.i, align 4
  %add.i.i.i156.i = add i32 %51, 1
  store volatile i32 %add.i.i.i156.i, ptr %preempt_count.i.i.i.i155.i, align 4
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !432
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #23
  %call.i157.i = call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i157.i, label %do.body63.i.rcu_read_lock.exit164.i_crit_edge, label %land.lhs.true.i160.i

do.body63.i.rcu_read_lock.exit164.i_crit_edge:    ; preds = %do.body63.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit164.i

land.lhs.true.i160.i:                             ; preds = %do.body63.i
  %call1.i158.i = call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i158.i)
  %tobool.not.i159.i = icmp eq i32 %call1.i158.i, 0
  br i1 %tobool.not.i159.i, label %land.lhs.true.i160.i.rcu_read_lock.exit164.i_crit_edge, label %land.lhs.true2.i162.i

land.lhs.true.i160.i.rcu_read_lock.exit164.i_crit_edge: ; preds = %land.lhs.true.i160.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit164.i

land.lhs.true2.i162.i:                            ; preds = %land.lhs.true.i160.i
  %.b4.i161.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i161.i, label %land.lhs.true2.i162.i.rcu_read_lock.exit164.i_crit_edge, label %if.then.i163.i

land.lhs.true2.i162.i.rcu_read_lock.exit164.i_crit_edge: ; preds = %land.lhs.true2.i162.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit164.i

if.then.i163.i:                                   ; preds = %land.lhs.true2.i162.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 696, ptr noundef nonnull @.str.97) #23
  br label %rcu_read_lock.exit164.i

rcu_read_lock.exit164.i:                          ; preds = %if.then.i163.i, %land.lhs.true2.i162.i.rcu_read_lock.exit164.i_crit_edge, %land.lhs.true.i160.i.rcu_read_lock.exit164.i_crit_edge, %do.body63.i.rcu_read_lock.exit164.i_crit_edge
  %name69.i = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 5
  %52 = ptrtoint ptr %name69.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile ptr, ptr %name69.i, align 8
  %call71.i = call i32 @rcu_read_lock_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call71.i)
  %tobool72.not.i = icmp eq i32 %call71.i, 0
  br i1 %tobool72.not.i, label %land.lhs.true73.i, label %rcu_read_lock.exit164.i.do.end81.i_crit_edge

rcu_read_lock.exit164.i.do.end81.i_crit_edge:     ; preds = %rcu_read_lock.exit164.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end81.i

land.lhs.true73.i:                                ; preds = %rcu_read_lock.exit164.i
  %call74.i = call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call74.i)
  %tobool75.not.i = icmp eq i32 %call74.i, 0
  br i1 %tobool75.not.i, label %land.lhs.true73.i.do.end81.i_crit_edge, label %land.lhs.true76.i

land.lhs.true73.i.do.end81.i_crit_edge:           ; preds = %land.lhs.true73.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end81.i

land.lhs.true76.i:                                ; preds = %land.lhs.true73.i
  %.b139140.i = load i1, ptr @update_dev_stat_item.__warned.171, align 1
  br i1 %.b139140.i, label %land.lhs.true76.i.do.end81.i_crit_edge, label %if.then78.i

land.lhs.true76.i.do.end81.i_crit_edge:           ; preds = %land.lhs.true76.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end81.i

if.then78.i:                                      ; preds = %land.lhs.true76.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @update_dev_stat_item.__warned.171, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.9, i32 noundef 7867, ptr noundef nonnull @.str.13) #23
  br label %do.end81.i

do.end81.i:                                       ; preds = %if.then78.i, %land.lhs.true76.i.do.end81.i_crit_edge, %land.lhs.true73.i.do.end81.i_crit_edge, %rcu_read_lock.exit164.i.do.end81.i_crit_edge
  %str84.i = getelementptr inbounds %struct.rcu_string, ptr %53, i32 0, i32 1
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %15, ptr noundef nonnull @.str.170, ptr noundef %str84.i, i32 noundef %call.i176.i) #28
  %call.i32 = call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i32, label %do.end81.i.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i34

do.end81.i.rcu_read_unlock.exit_crit_edge:        ; preds = %do.end81.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

land.lhs.true.i34:                                ; preds = %do.end81.i
  %call1.i = call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i33 = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i33, label %land.lhs.true.i34.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i34.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i34
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i34
  %.b4.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_unlock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_unlock.exit_crit_edge:  ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 724, ptr noundef nonnull @.str.98) #23
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i34.rcu_read_unlock.exit_crit_edge, %do.end81.i.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #23, !srcloc !433
  br label %update_dev_stat_item.exit.thread48

update_dev_stat_item.exit.thread48:               ; preds = %rcu_read_unlock.exit, %rcu_read_unlock.exit45, %rcu_read_unlock.exit.i
  %ret.2.i.ph = phi i32 [ %call.i176.i, %rcu_read_unlock.exit ], [ %call.i175.i, %rcu_read_unlock.exit45 ], [ %call3.i, %rcu_read_unlock.exit.i ]
  %54 = call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i.i172.i = and i32 %54, -16384
  %55 = inttoptr i32 %and.i.i.i.i.i172.i to ptr
  %preempt_count.i.i.i.i173.i = getelementptr inbounds %struct.thread_info, ptr %55, i32 0, i32 1
  %56 = ptrtoint ptr %preempt_count.i.i.i.i173.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %preempt_count.i.i.i.i173.i, align 4
  %sub.i.i.i.i = add i32 %57, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i173.i, align 4
  call void @rcu_read_unlock_strict() #23
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #23
  call void @btrfs_free_path(ptr noundef nonnull %call.i) #23
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key.i) #23
  br label %for.inc

update_dev_stat_item.exit:                        ; preds = %if.then59.i.update_dev_stat_item.exit_crit_edge, %land.lhs.true23.i.update_dev_stat_item.exit_crit_edge, %if.end21.i.update_dev_stat_item.exit_crit_edge
  %ret.1.i = phi i32 [ %call.i176.i, %if.then59.i.update_dev_stat_item.exit_crit_edge ], [ 0, %land.lhs.true23.i.update_dev_stat_item.exit_crit_edge ], [ %call3.i, %if.end21.i.update_dev_stat_item.exit_crit_edge ]
  %58 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %call.i, align 4
  %slots92.i = getelementptr inbounds %struct.btrfs_path, ptr %call.i, i32 0, i32 1
  %60 = ptrtoint ptr %slots92.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %slots92.i, align 4
  %mul.i.i.i177.i = mul i32 %61, 25
  %add.i.i.i178.i = add i32 %mul.i.i.i177.i, 101
  %62 = inttoptr i32 %add.i.i.i178.i to ptr
  %call.i.i179.i = call i32 @btrfs_get_32(ptr noundef %59, ptr noundef %62, i32 noundef 17) #23
  %add.i = add i32 %call.i.i179.i, 101
  %dev_stat_values.i.i = getelementptr inbounds %struct.btrfs_device, ptr %device.054, i32 0, i32 29
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %dev_stat_values.i.i, i32 noundef 4) #23
  %63 = ptrtoint ptr %dev_stat_values.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %dev_stat_values.i.i, align 4
  %conv.i = sext i32 %64 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %val.addr.i.i) #23
  %65 = ptrtoint ptr %val.addr.i.i to i32
  call void @__asan_store8_noabort(i32 %65)
  store i64 %conv.i, ptr %val.addr.i.i, align 8
  call void @write_extent_buffer(ptr noundef %59, ptr noundef nonnull %val.addr.i.i, i32 noundef %add.i, i32 noundef 8) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %val.addr.i.i) #23
  %add.ptr.i.1.i = getelementptr %struct.btrfs_device, ptr %device.054, i32 0, i32 29, i32 1
  %call.i.i.i.1.i = call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i.1.i, i32 noundef 4) #23
  %66 = ptrtoint ptr %add.ptr.i.1.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %add.ptr.i.1.i, align 4
  %conv.1.i = sext i32 %67 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %val.addr.i.i) #23
  %68 = ptrtoint ptr %val.addr.i.i to i32
  call void @__asan_store8_noabort(i32 %68)
  store i64 %conv.1.i, ptr %val.addr.i.i, align 8
  %add1.i.1.i = add i32 %call.i.i179.i, 109
  call void @write_extent_buffer(ptr noundef %59, ptr noundef nonnull %val.addr.i.i, i32 noundef %add1.i.1.i, i32 noundef 8) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %val.addr.i.i) #23
  %add.ptr.i.2.i = getelementptr %struct.btrfs_device, ptr %device.054, i32 0, i32 29, i32 2
  %call.i.i.i.2.i = call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i.2.i, i32 noundef 4) #23
  %69 = ptrtoint ptr %add.ptr.i.2.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %add.ptr.i.2.i, align 4
  %conv.2.i = sext i32 %70 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %val.addr.i.i) #23
  %71 = ptrtoint ptr %val.addr.i.i to i32
  call void @__asan_store8_noabort(i32 %71)
  store i64 %conv.2.i, ptr %val.addr.i.i, align 8
  %add1.i.2.i = add i32 %call.i.i179.i, 117
  call void @write_extent_buffer(ptr noundef %59, ptr noundef nonnull %val.addr.i.i, i32 noundef %add1.i.2.i, i32 noundef 8) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %val.addr.i.i) #23
  %add.ptr.i.3.i = getelementptr %struct.btrfs_device, ptr %device.054, i32 0, i32 29, i32 3
  %call.i.i.i.3.i = call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i.3.i, i32 noundef 4) #23
  %72 = ptrtoint ptr %add.ptr.i.3.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %add.ptr.i.3.i, align 4
  %conv.3.i = sext i32 %73 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %val.addr.i.i) #23
  %74 = ptrtoint ptr %val.addr.i.i to i32
  call void @__asan_store8_noabort(i32 %74)
  store i64 %conv.3.i, ptr %val.addr.i.i, align 8
  %add1.i.3.i = add i32 %call.i.i179.i, 125
  call void @write_extent_buffer(ptr noundef %59, ptr noundef nonnull %val.addr.i.i, i32 noundef %add1.i.3.i, i32 noundef 8) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %val.addr.i.i) #23
  %add.ptr.i.4.i = getelementptr %struct.btrfs_device, ptr %device.054, i32 0, i32 29, i32 4
  %call.i.i.i.4.i = call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i.4.i, i32 noundef 4) #23
  %75 = ptrtoint ptr %add.ptr.i.4.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load volatile i32, ptr %add.ptr.i.4.i, align 4
  %conv.4.i = sext i32 %76 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %val.addr.i.i) #23
  %77 = ptrtoint ptr %val.addr.i.i to i32
  call void @__asan_store8_noabort(i32 %77)
  store i64 %conv.4.i, ptr %val.addr.i.i, align 8
  %add1.i.4.i = add i32 %call.i.i179.i, 133
  call void @write_extent_buffer(ptr noundef %59, ptr noundef nonnull %val.addr.i.i, i32 noundef %add1.i.4.i, i32 noundef 8) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %val.addr.i.i) #23
  call void @btrfs_mark_buffer_dirty(ptr noundef %59) #23
  call void @btrfs_free_path(ptr noundef nonnull %call.i) #23
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key.i) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.1.i)
  %tobool9.not = icmp eq i32 %ret.1.i, 0
  br i1 %tobool9.not, label %if.then10, label %update_dev_stat_item.exit.for.inc_crit_edge

update_dev_stat_item.exit.for.inc_crit_edge:      ; preds = %update_dev_stat_item.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

if.then10:                                        ; preds = %update_dev_stat_item.exit
  call void @__sanitizer_cov_trace_pc() #25
  %call.i.i30 = call zeroext i1 @__kasan_check_write(ptr noundef %dev_stats_ccnt, i32 noundef 4) #23
  call void @llvm.prefetch.p0(ptr %dev_stats_ccnt, i32 1, i32 3, i32 1) #23
  %78 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %dev_stats_ccnt, ptr %dev_stats_ccnt, i32 %11, ptr elementtype(i32) %dev_stats_ccnt) #23, !srcloc !496
  br label %for.inc

for.inc:                                          ; preds = %if.then10, %update_dev_stat_item.exit.for.inc_crit_edge, %update_dev_stat_item.exit.thread48, %update_dev_stat_item.exit.thread, %for.body.for.inc_crit_edge
  %ret.1 = phi i32 [ %ret.1.i, %update_dev_stat_item.exit.for.inc_crit_edge ], [ 0, %if.then10 ], [ %ret.053, %for.body.for.inc_crit_edge ], [ -12, %update_dev_stat_item.exit.thread ], [ %ret.2.i.ph, %update_dev_stat_item.exit.thread48 ]
  %79 = ptrtoint ptr %device.054 to i32
  call void @__asan_load4_noabort(i32 %79)
  %device.0 = load ptr, ptr %device.054, align 8
  %cmp.not = icmp eq ptr %device.0, %devices
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %ret.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %ret.1, %for.inc.for.end_crit_edge ]
  call void @mutex_unlock(ptr noundef %device_list_mutex) #23
  ret i32 %ret.0.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_dev_stat_inc_and_print(ptr noundef %dev, i32 noundef %index) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %dev_stat_values.i = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 29
  %add.ptr.i = getelementptr %struct.atomic_t, ptr %dev_stat_values.i, i32 %index
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %add.ptr.i, i32 noundef 4) #23
  tail call void @llvm.prefetch.p0(ptr %add.ptr.i, i32 1, i32 3, i32 1) #23
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %add.ptr.i, ptr %add.ptr.i, i32 1, ptr elementtype(i32) %add.ptr.i) #23, !srcloc !494
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !507
  %dev_stats_ccnt.i = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 28
  %call.i.i4.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dev_stats_ccnt.i, i32 noundef 4) #23
  tail call void @llvm.prefetch.p0(ptr %dev_stats_ccnt.i, i32 1, i32 3, i32 1) #23
  %1 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %dev_stats_ccnt.i, ptr %dev_stats_ccnt.i, i32 1, ptr elementtype(i32) %dev_stats_ccnt.i) #23, !srcloc !494
  %dev_stats_valid.i = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 27
  %2 = ptrtoint ptr %dev_stats_valid.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev_stats_valid.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %entry.btrfs_dev_stat_print_on_error.exit_crit_edge, label %do.body.i

entry.btrfs_dev_stat_print_on_error.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_dev_stat_print_on_error.exit

do.body.i:                                        ; preds = %entry
  %4 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %7, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !432
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #23
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i.i, label %do.body.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

do.body.i.rcu_read_lock.exit.i_crit_edge:         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %do.body.i
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 696, ptr noundef nonnull @.str.97) #23
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %do.body.i.rcu_read_lock.exit.i_crit_edge
  %call.i = tail call i32 @___ratelimit(ptr noundef nonnull @btrfs_dev_stat_print_on_error._rs, ptr noundef nonnull @__func__.btrfs_dev_stat_print_on_error) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool2.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool2.not.i, label %rcu_read_lock.exit.i.do.end25.i_crit_edge, label %if.then3.i

rcu_read_lock.exit.i.do.end25.i_crit_edge:        ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end25.i

if.then3.i:                                       ; preds = %rcu_read_lock.exit.i
  %fs_info.i = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 4
  %8 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %fs_info.i, align 4
  %name.i = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 5
  %10 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %name.i, align 8
  %call6.i = tail call i32 @rcu_read_lock_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %land.lhs.true.i, label %if.then3.i.do.end15.i_crit_edge

if.then3.i.do.end15.i_crit_edge:                  ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end15.i

land.lhs.true.i:                                  ; preds = %if.then3.i
  %call8.i = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool9.not.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.not.i, label %land.lhs.true.i.do.end15.i_crit_edge, label %land.lhs.true10.i

land.lhs.true.i.do.end15.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end15.i

land.lhs.true10.i:                                ; preds = %land.lhs.true.i
  %.b35.i = load i1, ptr @btrfs_dev_stat_print_on_error.__warned, align 1
  br i1 %.b35.i, label %land.lhs.true10.i.do.end15.i_crit_edge, label %if.then12.i

land.lhs.true10.i.do.end15.i_crit_edge:           ; preds = %land.lhs.true10.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end15.i

if.then12.i:                                      ; preds = %land.lhs.true10.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @btrfs_dev_stat_print_on_error.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.9, i32 noundef 7941, ptr noundef nonnull @.str.13) #23
  br label %do.end15.i

do.end15.i:                                       ; preds = %if.then12.i, %land.lhs.true10.i.do.end15.i_crit_edge, %land.lhs.true.i.do.end15.i_crit_edge, %if.then3.i.do.end15.i_crit_edge
  %str.i = getelementptr inbounds %struct.rcu_string, ptr %11, i32 0, i32 1
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dev_stat_values.i, i32 noundef 4) #23
  %12 = ptrtoint ptr %dev_stat_values.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %dev_stat_values.i, align 4
  %add.ptr.i.i = getelementptr %struct.btrfs_device, ptr %dev, i32 0, i32 29, i32 1
  %call.i.i.i37.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i.i, i32 noundef 4) #23
  %14 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %add.ptr.i.i, align 4
  %add.ptr.i39.i = getelementptr %struct.btrfs_device, ptr %dev, i32 0, i32 29, i32 2
  %call.i.i.i40.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i39.i, i32 noundef 4) #23
  %16 = ptrtoint ptr %add.ptr.i39.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %add.ptr.i39.i, align 4
  %add.ptr.i42.i = getelementptr %struct.btrfs_device, ptr %dev, i32 0, i32 29, i32 3
  %call.i.i.i43.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i42.i, i32 noundef 4) #23
  %18 = ptrtoint ptr %add.ptr.i42.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %add.ptr.i42.i, align 4
  %add.ptr.i45.i = getelementptr %struct.btrfs_device, ptr %dev, i32 0, i32 29, i32 4
  %call.i.i.i46.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i45.i, i32 noundef 4) #23
  %20 = ptrtoint ptr %add.ptr.i45.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %add.ptr.i45.i, align 4
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %9, ptr noundef nonnull @.str.172, ptr noundef %str.i, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21) #28
  br label %do.end25.i

do.end25.i:                                       ; preds = %do.end15.i, %rcu_read_lock.exit.i.do.end25.i_crit_edge
  %call.i47.i = tail call zeroext i1 @rcu_is_watching() #23
  br i1 %call.i47.i, label %do.end25.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true.i50.i

do.end25.i.rcu_read_unlock.exit.i_crit_edge:      ; preds = %do.end25.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit.i

land.lhs.true.i50.i:                              ; preds = %do.end25.i
  %call1.i48.i = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i48.i)
  %tobool.not.i49.i = icmp eq i32 %call1.i48.i, 0
  br i1 %tobool.not.i49.i, label %land.lhs.true.i50.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true2.i52.i

land.lhs.true.i50.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true.i50.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit.i

land.lhs.true2.i52.i:                             ; preds = %land.lhs.true.i50.i
  %.b4.i51.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i51.i, label %land.lhs.true2.i52.i.rcu_read_unlock.exit.i_crit_edge, label %if.then.i53.i

land.lhs.true2.i52.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true2.i52.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %rcu_read_unlock.exit.i

if.then.i53.i:                                    ; preds = %land.lhs.true2.i52.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.96, i32 noundef 724, ptr noundef nonnull @.str.98) #23
  br label %rcu_read_unlock.exit.i

rcu_read_unlock.exit.i:                           ; preds = %if.then.i53.i, %land.lhs.true2.i52.i.rcu_read_unlock.exit.i_crit_edge, %land.lhs.true.i50.i.rcu_read_unlock.exit.i_crit_edge, %do.end25.i.rcu_read_unlock.exit.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !433
  %22 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i.i54.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i.i.i54.i to ptr
  %preempt_count.i.i.i.i55.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i.i.i55.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i.i.i55.i, align 4
  %sub.i.i.i.i = add i32 %25, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i55.i, align 4
  tail call void @rcu_read_unlock_strict() #23
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #23
  br label %btrfs_dev_stat_print_on_error.exit

btrfs_dev_stat_print_on_error.exit:               ; preds = %rcu_read_unlock.exit.i, %entry.btrfs_dev_stat_print_on_error.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_get_dev_stats(ptr noundef %fs_info, ptr nocapture noundef %stats) local_unnamed_addr #4 align 64 {
entry:
  %args = alloca %struct.btrfs_dev_lookup_args, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %args) #23
  %0 = call ptr @memcpy(ptr %args, ptr @__const.read_one_dev.args, i32 24)
  %fs_devices1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %1 = ptrtoint ptr %fs_devices1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %fs_devices1, align 8
  %device_list_mutex = getelementptr inbounds %struct.btrfs_fs_devices, ptr %2, i32 0, i32 12
  tail call void @mutex_lock_nested(ptr noundef %device_list_mutex, i32 noundef 0) #23
  %3 = ptrtoint ptr %stats to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %stats, align 8
  %5 = ptrtoint ptr %args to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %4, ptr %args, align 8
  %6 = ptrtoint ptr %fs_devices1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %fs_devices1, align 8
  %call = call ptr @btrfs_find_device(ptr noundef %7, ptr noundef nonnull %args)
  tail call void @mutex_unlock(ptr noundef %device_list_mutex) #23
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.66) #28
  br label %cleanup

if.else:                                          ; preds = %entry
  %dev_stats_valid = getelementptr inbounds %struct.btrfs_device, ptr %call, i32 0, i32 27
  %8 = ptrtoint ptr %dev_stats_valid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %dev_stats_valid, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool5.not = icmp eq i32 %9, 0
  br i1 %tobool5.not, label %if.then6, label %if.else7

if.then6:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.67) #28
  br label %cleanup

if.else7:                                         ; preds = %if.else
  %flags = getelementptr inbounds %struct.btrfs_ioctl_get_dev_stats, ptr %stats, i32 0, i32 2
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %flags, align 8
  %and = and i64 %11, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool8.not = icmp eq i64 %and, 0
  %nr_items25 = getelementptr inbounds %struct.btrfs_ioctl_get_dev_stats, ptr %stats, i32 0, i32 1
  br i1 %tobool8.not, label %for.cond21.preheader, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.else7
  %dev_stat_values.i76 = getelementptr inbounds %struct.btrfs_device, ptr %call, i32 0, i32 29
  %dev_stats_ccnt.i79 = getelementptr inbounds %struct.btrfs_device, ptr %call, i32 0, i32 28
  br label %for.body

for.cond21.preheader:                             ; preds = %if.else7
  %12 = ptrtoint ptr %nr_items25 to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %nr_items25, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %13)
  %cmp27.not = icmp eq i64 %13, 0
  br i1 %cmp27.not, label %for.cond21.preheader.if.end40_crit_edge, label %for.inc35

for.cond21.preheader.if.end40_crit_edge:          ; preds = %for.cond21.preheader
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end40

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.cond.preheader
  %i.083 = phi i32 [ 0, %for.cond.preheader ], [ %inc, %for.inc.for.body_crit_edge ]
  %14 = ptrtoint ptr %nr_items25 to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %nr_items25, align 8
  %conv = zext i32 %i.083 to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %15, i64 %conv)
  %cmp10 = icmp ugt i64 %15, %conv
  %add.ptr.i = getelementptr %struct.atomic_t, ptr %dev_stat_values.i76, i32 %i.083
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %add.ptr.i, i32 noundef 4) #23
  br i1 %cmp10, label %if.then12, label %if.else15

if.then12:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !508
  tail call void @llvm.prefetch.p0(ptr %add.ptr.i, i32 1, i32 3, i32 1) #23
  %16 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %add.ptr.i) #23, !srcloc !509
  %asmresult.i.i.i = extractvalue { i32, i32 } %16, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !510
  %call.i.i2.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dev_stats_ccnt.i79, i32 noundef 4) #23
  tail call void @llvm.prefetch.p0(ptr %dev_stats_ccnt.i79, i32 1, i32 3, i32 1) #23
  %17 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %dev_stats_ccnt.i79, ptr %dev_stats_ccnt.i79, i32 1, ptr elementtype(i32) %dev_stats_ccnt.i79) #23, !srcloc !494
  %conv14 = sext i32 %asmresult.i.i.i to i64
  %arrayidx = getelementptr %struct.btrfs_ioctl_get_dev_stats, ptr %stats, i32 0, i32 3, i32 %i.083
  %18 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %conv14, ptr %arrayidx, align 8
  br label %for.inc

if.else15:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  %19 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile i32 0, ptr %add.ptr.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !505
  %call.i.i4.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dev_stats_ccnt.i79, i32 noundef 4) #23
  tail call void @llvm.prefetch.p0(ptr %dev_stats_ccnt.i79, i32 1, i32 3, i32 1) #23
  %20 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %dev_stats_ccnt.i79, ptr %dev_stats_ccnt.i79, i32 1, ptr elementtype(i32) %dev_stats_ccnt.i79) #23, !srcloc !494
  br label %for.inc

for.inc:                                          ; preds = %if.else15, %if.then12
  %inc = add nuw nsw i32 %i.083, 1
  %exitcond.not = icmp eq i32 %inc, 5
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  %21 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i = and i32 %21, -16384
  %22 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %23 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %24, i32 0, i32 101
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %24, i32 0, i32 68
  %25 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %pid.i, align 8
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.68, ptr noundef %comm, i32 noundef %26) #28
  br label %if.end40

for.inc35:                                        ; preds = %for.cond21.preheader
  %dev_stat_values.i80 = getelementptr inbounds %struct.btrfs_device, ptr %call, i32 0, i32 29
  %call.i.i.i82 = tail call zeroext i1 @__kasan_check_read(ptr noundef %dev_stat_values.i80, i32 noundef 4) #23
  %27 = ptrtoint ptr %dev_stat_values.i80 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %dev_stat_values.i80, align 4
  %conv31 = sext i32 %28 to i64
  %arrayidx33 = getelementptr %struct.btrfs_ioctl_get_dev_stats, ptr %stats, i32 0, i32 3, i32 0
  %29 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %conv31, ptr %arrayidx33, align 8
  %30 = ptrtoint ptr %nr_items25 to i32
  call void @__asan_load8_noabort(i32 %30)
  %.pr = load i64, ptr %nr_items25, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %.pr)
  %cmp27.1 = icmp ugt i64 %.pr, 1
  br i1 %cmp27.1, label %for.inc35.1, label %for.inc35.if.end40_crit_edge

for.inc35.if.end40_crit_edge:                     ; preds = %for.inc35
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end40

for.inc35.1:                                      ; preds = %for.inc35
  %add.ptr.i81.1 = getelementptr %struct.btrfs_device, ptr %call, i32 0, i32 29, i32 1
  %call.i.i.i82.1 = tail call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i81.1, i32 noundef 4) #23
  %31 = ptrtoint ptr %add.ptr.i81.1 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %add.ptr.i81.1, align 4
  %conv31.1 = sext i32 %32 to i64
  %arrayidx33.1 = getelementptr %struct.btrfs_ioctl_get_dev_stats, ptr %stats, i32 0, i32 3, i32 1
  %33 = ptrtoint ptr %arrayidx33.1 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %conv31.1, ptr %arrayidx33.1, align 8
  %34 = ptrtoint ptr %nr_items25 to i32
  call void @__asan_load8_noabort(i32 %34)
  %.pr89 = load i64, ptr %nr_items25, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 2, i64 %.pr89)
  %cmp27.2 = icmp ugt i64 %.pr89, 2
  br i1 %cmp27.2, label %for.inc35.2, label %for.inc35.1.if.end40_crit_edge

for.inc35.1.if.end40_crit_edge:                   ; preds = %for.inc35.1
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end40

for.inc35.2:                                      ; preds = %for.inc35.1
  %add.ptr.i81.2 = getelementptr %struct.btrfs_device, ptr %call, i32 0, i32 29, i32 2
  %call.i.i.i82.2 = tail call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i81.2, i32 noundef 4) #23
  %35 = ptrtoint ptr %add.ptr.i81.2 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %add.ptr.i81.2, align 4
  %conv31.2 = sext i32 %36 to i64
  %arrayidx33.2 = getelementptr %struct.btrfs_ioctl_get_dev_stats, ptr %stats, i32 0, i32 3, i32 2
  %37 = ptrtoint ptr %arrayidx33.2 to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %conv31.2, ptr %arrayidx33.2, align 8
  %38 = ptrtoint ptr %nr_items25 to i32
  call void @__asan_load8_noabort(i32 %38)
  %.pr91.pr = load i64, ptr %nr_items25, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 3, i64 %.pr91.pr)
  %cmp27.3 = icmp ugt i64 %.pr91.pr, 3
  br i1 %cmp27.3, label %for.inc35.3, label %for.inc35.2.if.end40_crit_edge

for.inc35.2.if.end40_crit_edge:                   ; preds = %for.inc35.2
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end40

for.inc35.3:                                      ; preds = %for.inc35.2
  %add.ptr.i81.3 = getelementptr %struct.btrfs_device, ptr %call, i32 0, i32 29, i32 3
  %call.i.i.i82.3 = tail call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i81.3, i32 noundef 4) #23
  %39 = ptrtoint ptr %add.ptr.i81.3 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %add.ptr.i81.3, align 4
  %conv31.3 = sext i32 %40 to i64
  %arrayidx33.3 = getelementptr %struct.btrfs_ioctl_get_dev_stats, ptr %stats, i32 0, i32 3, i32 3
  %41 = ptrtoint ptr %arrayidx33.3 to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %conv31.3, ptr %arrayidx33.3, align 8
  %42 = ptrtoint ptr %nr_items25 to i32
  call void @__asan_load8_noabort(i32 %42)
  %.pr93 = load i64, ptr %nr_items25, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 4, i64 %.pr93)
  %cmp27.4 = icmp ugt i64 %.pr93, 4
  br i1 %cmp27.4, label %if.then29.4, label %for.inc35.3.if.end40_crit_edge

for.inc35.3.if.end40_crit_edge:                   ; preds = %for.inc35.3
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end40

if.then29.4:                                      ; preds = %for.inc35.3
  call void @__sanitizer_cov_trace_pc() #25
  %add.ptr.i81.4 = getelementptr %struct.btrfs_device, ptr %call, i32 0, i32 29, i32 4
  %call.i.i.i82.4 = tail call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr.i81.4, i32 noundef 4) #23
  %43 = ptrtoint ptr %add.ptr.i81.4 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %add.ptr.i81.4, align 4
  %conv31.4 = sext i32 %44 to i64
  %arrayidx33.4 = getelementptr %struct.btrfs_ioctl_get_dev_stats, ptr %stats, i32 0, i32 3, i32 4
  %45 = ptrtoint ptr %arrayidx33.4 to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %conv31.4, ptr %arrayidx33.4, align 8
  br label %if.end40

if.end40:                                         ; preds = %if.then29.4, %for.inc35.3.if.end40_crit_edge, %for.inc35.2.if.end40_crit_edge, %for.inc35.1.if.end40_crit_edge, %for.inc35.if.end40_crit_edge, %for.end, %for.cond21.preheader.if.end40_crit_edge
  %nr_items41 = getelementptr inbounds %struct.btrfs_ioctl_get_dev_stats, ptr %stats, i32 0, i32 1
  %46 = ptrtoint ptr %nr_items41 to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %nr_items41, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 5, i64 %47)
  %cmp42 = icmp ugt i64 %47, 5
  br i1 %cmp42, label %if.then44, label %if.end40.cleanup_crit_edge

if.end40.cleanup_crit_edge:                       ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then44:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #25
  %48 = ptrtoint ptr %nr_items41 to i32
  call void @__asan_store8_noabort(i32 %48)
  store i64 5, ptr %nr_items41, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.then44, %if.end40.cleanup_crit_edge, %if.then6, %if.then
  %retval.0 = phi i32 [ -19, %if.then6 ], [ -19, %if.then ], [ 0, %if.then44 ], [ 0, %if.end40.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_commit_device_sizes(ptr noundef %trans) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.btrfs_transaction, ptr %trans, i32 0, i32 5
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %state, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %cmp = icmp eq i32 %1, 2
  br i1 %cmp, label %cond.end, label %cond.false, !prof !423

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.69, i32 noundef 8014) #32
  unreachable

cond.end:                                         ; preds = %entry
  %dev_update_list = getelementptr inbounds %struct.btrfs_transaction, ptr %trans, i32 0, i32 13
  %2 = ptrtoint ptr %dev_update_list to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %dev_update_list, align 4
  %cmp.i.not = icmp eq ptr %3, %dev_update_list
  br i1 %cmp.i.not, label %cond.end.cleanup_crit_edge, label %if.end

cond.end.cleanup_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %cond.end
  %fs_info = getelementptr inbounds %struct.btrfs_transaction, ptr %trans, i32 0, i32 24
  %4 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %fs_info, align 8
  %chunk_mutex = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 50
  tail call void @mutex_lock_nested(ptr noundef %chunk_mutex, i32 noundef 0) #23
  %6 = ptrtoint ptr %dev_update_list to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev_update_list, align 8
  %cmp11.not36 = icmp eq ptr %7, %dev_update_list
  br i1 %cmp11.not36, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.body:                                         ; preds = %list_del_init.exit.for.body_crit_edge, %if.end.for.body_crit_edge
  %.pn.in37 = phi ptr [ %.pn, %list_del_init.exit.for.body_crit_edge ], [ %7, %if.end.for.body_crit_edge ]
  %8 = ptrtoint ptr %.pn.in37 to i32
  call void @__asan_load4_noabort(i32 %8)
  %.pn = load ptr, ptr %.pn.in37, align 8
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in37) #23
  br i1 %call.i.i, label %if.end.i.i, label %for.body.list_del_init.exit_crit_edge

for.body.list_del_init.exit_crit_edge:            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in37, i32 0, i32 1
  %9 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prev.i.i, align 4
  %11 = ptrtoint ptr %.pn.in37 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %.pn.in37, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %prev1.i.i.i, align 4
  %14 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %12, ptr %10, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %for.body.list_del_init.exit_crit_edge
  %15 = ptrtoint ptr %.pn.in37 to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %.pn.in37, ptr %.pn.in37, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %.pn.in37, i32 0, i32 1
  %16 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %.pn.in37, ptr %prev.i3.i, align 4
  %disk_total_bytes = getelementptr i8, ptr %.pn.in37, i32 104
  %17 = ptrtoint ptr %disk_total_bytes to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %disk_total_bytes, align 8
  %commit_total_bytes = getelementptr i8, ptr %.pn.in37, i32 160
  %19 = ptrtoint ptr %commit_total_bytes to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %18, ptr %commit_total_bytes, align 8
  %bytes_used = getelementptr i8, ptr %.pn.in37, i32 112
  %20 = ptrtoint ptr %bytes_used to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %bytes_used, align 8
  %commit_bytes_used = getelementptr i8, ptr %.pn.in37, i32 168
  %22 = ptrtoint ptr %commit_bytes_used to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %21, ptr %commit_bytes_used, align 8
  %cmp11.not = icmp eq ptr %.pn, %dev_update_list
  br i1 %cmp11.not, label %list_del_init.exit.for.end_crit_edge, label %list_del_init.exit.for.body_crit_edge

list_del_init.exit.for.body_crit_edge:            ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

list_del_init.exit.for.end_crit_edge:             ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

for.end:                                          ; preds = %list_del_init.exit.for.end_crit_edge, %if.end.for.end_crit_edge
  %23 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %fs_info, align 8
  %chunk_mutex21 = getelementptr inbounds %struct.btrfs_fs_info, ptr %24, i32 0, i32 50
  tail call void @mutex_unlock(ptr noundef %chunk_mutex21) #23
  br label %cleanup

cleanup:                                          ; preds = %for.end, %cond.end.cleanup_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @btrfs_bg_type_to_factor(i64 noundef %flags) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %and.i = and i64 %flags, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %if.else.i, label %entry.btrfs_bg_flags_to_raid_index.exit_crit_edge

entry.btrfs_bg_flags_to_raid_index.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit

if.else.i:                                        ; preds = %entry
  %and1.i = and i64 %flags, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i)
  %tobool2.not.i = icmp eq i64 %and1.i, 0
  br i1 %tobool2.not.i, label %if.else4.i, label %if.else.i.btrfs_bg_flags_to_raid_index.exit_crit_edge

if.else.i.btrfs_bg_flags_to_raid_index.exit_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit

if.else4.i:                                       ; preds = %if.else.i
  %and5.i = and i64 %flags, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5.i)
  %tobool6.not.i = icmp eq i64 %and5.i, 0
  br i1 %tobool6.not.i, label %if.else8.i, label %if.else4.i.btrfs_bg_flags_to_raid_index.exit_crit_edge

if.else4.i.btrfs_bg_flags_to_raid_index.exit_crit_edge: ; preds = %if.else4.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit

if.else8.i:                                       ; preds = %if.else4.i
  %and9.i = and i64 %flags, 1024
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and9.i)
  %tobool10.not.i = icmp eq i64 %and9.i, 0
  br i1 %tobool10.not.i, label %if.else12.i, label %if.else8.i.btrfs_bg_flags_to_raid_index.exit_crit_edge

if.else8.i.btrfs_bg_flags_to_raid_index.exit_crit_edge: ; preds = %if.else8.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit

if.else12.i:                                      ; preds = %if.else8.i
  %and13.i = and i64 %flags, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and13.i)
  %tobool14.not.i = icmp eq i64 %and13.i, 0
  br i1 %tobool14.not.i, label %if.else16.i, label %if.else12.i.btrfs_bg_flags_to_raid_index.exit_crit_edge

if.else12.i.btrfs_bg_flags_to_raid_index.exit_crit_edge: ; preds = %if.else12.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit

if.else16.i:                                      ; preds = %if.else12.i
  %and17.i = and i64 %flags, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and17.i)
  %tobool18.not.i = icmp eq i64 %and17.i, 0
  br i1 %tobool18.not.i, label %if.else20.i, label %if.else16.i.btrfs_bg_flags_to_raid_index.exit_crit_edge

if.else16.i.btrfs_bg_flags_to_raid_index.exit_crit_edge: ; preds = %if.else16.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit

if.else20.i:                                      ; preds = %if.else16.i
  %and21.i = and i64 %flags, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and21.i)
  %tobool22.not.i = icmp eq i64 %and21.i, 0
  br i1 %tobool22.not.i, label %if.else24.i, label %if.else20.i.btrfs_bg_flags_to_raid_index.exit_crit_edge

if.else20.i.btrfs_bg_flags_to_raid_index.exit_crit_edge: ; preds = %if.else20.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_flags_to_raid_index.exit

if.else24.i:                                      ; preds = %if.else20.i
  call void @__sanitizer_cov_trace_pc() #25
  %and25.i = and i64 %flags, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and25.i)
  %tobool26.not.i = icmp eq i64 %and25.i, 0
  %..i = select i1 %tobool26.not.i, i32 4, i32 6
  br label %btrfs_bg_flags_to_raid_index.exit

btrfs_bg_flags_to_raid_index.exit:                ; preds = %if.else24.i, %if.else20.i.btrfs_bg_flags_to_raid_index.exit_crit_edge, %if.else16.i.btrfs_bg_flags_to_raid_index.exit_crit_edge, %if.else12.i.btrfs_bg_flags_to_raid_index.exit_crit_edge, %if.else8.i.btrfs_bg_flags_to_raid_index.exit_crit_edge, %if.else4.i.btrfs_bg_flags_to_raid_index.exit_crit_edge, %if.else.i.btrfs_bg_flags_to_raid_index.exit_crit_edge, %entry.btrfs_bg_flags_to_raid_index.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %entry.btrfs_bg_flags_to_raid_index.exit_crit_edge ], [ 1, %if.else.i.btrfs_bg_flags_to_raid_index.exit_crit_edge ], [ 7, %if.else4.i.btrfs_bg_flags_to_raid_index.exit_crit_edge ], [ 8, %if.else8.i.btrfs_bg_flags_to_raid_index.exit_crit_edge ], [ 2, %if.else12.i.btrfs_bg_flags_to_raid_index.exit_crit_edge ], [ 3, %if.else16.i.btrfs_bg_flags_to_raid_index.exit_crit_edge ], [ 5, %if.else20.i.btrfs_bg_flags_to_raid_index.exit_crit_edge ], [ %..i, %if.else24.i ]
  %ncopies = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i, i32 6
  %0 = ptrtoint ptr %ncopies to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %ncopies, align 2
  %conv = zext i8 %1 to i32
  ret i32 %conv
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_verify_dev_extents(ptr noundef %fs_info) local_unnamed_addr #4 align 64 {
entry:
  %args.i = alloca %struct.btrfs_dev_lookup_args, align 8
  %disk_key.i = alloca %struct.btrfs_disk_key, align 8
  %key = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %dev_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 4
  %0 = ptrtoint ptr %dev_root to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev_root, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #23
  %2 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %3 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %mount_opt = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 31
  %4 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mount_opt, align 8
  %and = and i32 %5, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup61_crit_edge

entry.cleanup61_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup61

if.end:                                           ; preds = %entry
  %6 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 1, ptr %key, align 8
  %7 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 -52, ptr %2, align 8
  %8 = ptrtoint ptr %3 to i32
  call void @__asan_storeN_noabort(i32 %8, i32 8)
  store i64 0, ptr %3, align 1
  %call = tail call ptr @btrfs_alloc_path() #23
  %tobool1.not = icmp eq ptr %call, null
  br i1 %tobool1.not, label %if.end.cleanup61_crit_edge, label %if.end3

if.end.cleanup61_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup61

if.end3:                                          ; preds = %if.end
  %reada = getelementptr inbounds %struct.btrfs_path, ptr %call, i32 0, i32 3
  %9 = ptrtoint ptr %reada to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 2, ptr %reada, align 4
  %call4 = call i32 @btrfs_search_slot(ptr noundef null, ptr noundef %1, ptr noundef nonnull %key, ptr noundef nonnull %call, i32 noundef 0, i32 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %cmp = icmp slt i32 %call4, 0
  br i1 %cmp, label %if.end3.out_crit_edge, label %if.end6

if.end3.out_crit_edge:                            ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end6:                                          ; preds = %if.end3
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %call, i32 0, i32 1
  %10 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %slots, align 4
  %12 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %call, align 4
  %pages.i = getelementptr inbounds %struct.extent_buffer, ptr %13, i32 0, i32 12
  %14 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %pages.i, align 4
  %call.i = call ptr @page_address(ptr noundef %15) #23
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %13, align 8
  %conv.i = trunc i64 %17 to i32
  %and.i = and i32 %conv.i, 4095
  %add.ptr.i = getelementptr i8, ptr %call.i, i32 %and.i
  %nritems.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i, i32 0, i32 7
  %18 = ptrtoint ptr %nritems.i to i32
  call void @__asan_loadN_noabort(i32 %18, i32 4)
  %19 = load i32, ptr %nritems.i, align 1
  %20 = call i32 @llvm.bswap.i32(i32 %19) #23
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %20)
  %cmp9.not = icmp ult i32 %11, %20
  br i1 %cmp9.not, label %if.end6.if.end18_crit_edge, label %if.then10

if.end6.if.end18_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end18

if.then10:                                        ; preds = %if.end6
  %call.i102 = call i32 @btrfs_next_old_leaf(ptr noundef %1, ptr noundef nonnull %call, i64 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i102)
  %cmp12 = icmp slt i32 %call.i102, 0
  br i1 %cmp12, label %if.then10.out_crit_edge, label %if.end14

if.then10.out_crit_edge:                          ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end14:                                         ; preds = %if.then10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i102)
  %cmp15.not = icmp eq i32 %call.i102, 0
  br i1 %cmp15.not, label %if.end14.if.end18_crit_edge, label %if.end14.out_crit_edge

if.end14.out_crit_edge:                           ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end14.if.end18_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end18

if.end18:                                         ; preds = %if.end14.if.end18_crit_edge, %if.end6.if.end18_crit_edge
  %21 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 1
  %22 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 2
  %23 = getelementptr inbounds i8, ptr %args.i, i32 16
  %uuid.i = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args.i, i32 0, i32 1
  %fsid.i = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args.i, i32 0, i32 2
  %mapping_tree.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 19
  %lock.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 19, i32 2
  %fs_devices.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %if.end18
  %prev_devid.0 = phi i64 [ 0, %if.end18 ], [ %38, %while.cond.backedge ]
  %prev_dev_ext_end.0 = phi i64 [ 0, %if.end18 ], [ %add.i, %while.cond.backedge ]
  %24 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %call, align 4
  %26 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %slots, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i) #23
  %mul.i.i.i.i = mul i32 %27, 25
  %add.i.i.i.i = add i32 %mul.i.i.i.i, 101
  %28 = call ptr @memset(ptr %disk_key.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %25, ptr noundef nonnull %disk_key.i, i32 noundef %add.i.i.i.i, i32 noundef 17) #23
  %29 = ptrtoint ptr %22 to i32
  call void @__asan_loadN_noabort(i32 %29, i32 8)
  %30 = load i64, ptr %22, align 1
  %31 = call i64 @llvm.bswap.i64(i64 %30) #23
  %32 = ptrtoint ptr %3 to i32
  call void @__asan_storeN_noabort(i32 %32, i32 8)
  store i64 %31, ptr %3, align 1
  %33 = ptrtoint ptr %21 to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %21, align 8
  %35 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 %34, ptr %2, align 8
  %36 = ptrtoint ptr %disk_key.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %disk_key.i, align 8
  %38 = call i64 @llvm.bswap.i64(i64 %37) #23
  %39 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %38, ptr %key, align 8
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i) #23
  call void @__sanitizer_cov_trace_const_cmp1(i8 -52, i8 %34)
  %cmp24.not = icmp eq i8 %34, -52
  br i1 %cmp24.not, label %if.end27, label %while.cond.while.end_crit_edge

while.cond.while.end_crit_edge:                   ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

if.end27:                                         ; preds = %while.cond
  %40 = inttoptr i32 %add.i.i.i.i to ptr
  %call.i.i = call i32 @btrfs_get_32(ptr noundef %25, ptr noundef %40, i32 noundef 17) #23
  %add = add i32 %call.i.i, 101
  %41 = inttoptr i32 %add to ptr
  %call.i103 = call i64 @btrfs_get_64(ptr noundef %25, ptr noundef %41, i32 noundef 16) #23
  %call.i104 = call i64 @btrfs_get_64(ptr noundef %25, ptr noundef %41, i32 noundef 24) #23
  call void @__sanitizer_cov_trace_cmp8(i64 %38, i64 %prev_devid.0)
  %cmp33 = icmp eq i64 %38, %prev_devid.0
  call void @__sanitizer_cov_trace_cmp8(i64 %31, i64 %prev_dev_ext_end.0)
  %cmp35 = icmp ult i64 %31, %prev_dev_ext_end.0
  %or.cond = select i1 %cmp33, i1 %cmp35, i1 false
  br i1 %or.cond, label %if.then37, label %if.end38

if.then37:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.70, i64 noundef %prev_devid.0, i64 noundef %31, i64 noundef %prev_dev_ext_end.0) #28
  br label %out

if.end38:                                         ; preds = %if.end27
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %args.i) #23
  %42 = ptrtoint ptr %23 to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 72057594037927935, ptr %23, align 8
  %43 = ptrtoint ptr %args.i to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %38, ptr %args.i, align 8
  %44 = ptrtoint ptr %uuid.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %uuid.i, align 8
  %45 = ptrtoint ptr %fsid.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr null, ptr %fsid.i, align 4
  call void @_raw_read_lock(ptr noundef %lock.i) #23
  %call.i105 = call ptr @lookup_extent_mapping(ptr noundef %mapping_tree.i, i64 noundef %call.i103, i64 noundef 1) #23
  call void @_raw_read_unlock(ptr noundef %lock.i) #23
  %tobool.not.i = icmp eq ptr %call.i105, null
  br i1 %tobool.not.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.173, i64 noundef %31, i64 noundef %38) #28
  br label %verify_one_dev_extent.exit.thread

if.end.i:                                         ; preds = %if.end38
  %map_lookup.i = getelementptr inbounds %struct.extent_map, ptr %call.i105, i32 0, i32 12
  %46 = ptrtoint ptr %map_lookup.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %map_lookup.i, align 4
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %47, align 8
  %len.i = getelementptr inbounds %struct.extent_map, ptr %call.i105, i32 0, i32 2
  %50 = ptrtoint ptr %len.i to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %len.i, align 8
  %num_stripes.i = getelementptr inbounds %struct.map_lookup, ptr %47, i32 0, i32 4
  %52 = ptrtoint ptr %num_stripes.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %num_stripes.i, align 8
  %and.i.i.i.i = and i64 %49, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i64 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.else.i.i.i.i, label %if.end.i.calc_data_stripes.exit.i.i_crit_edge

if.end.i.calc_data_stripes.exit.i.i_crit_edge:    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i.i

if.else.i.i.i.i:                                  ; preds = %if.end.i
  %and1.i.i.i.i = and i64 %49, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i.i.i.i)
  %tobool2.not.i.i.i.i = icmp eq i64 %and1.i.i.i.i, 0
  br i1 %tobool2.not.i.i.i.i, label %if.else4.i.i.i.i, label %if.else.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge

if.else.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i.i

if.else4.i.i.i.i:                                 ; preds = %if.else.i.i.i.i
  %and5.i.i.i.i = and i64 %49, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5.i.i.i.i)
  %tobool6.not.i.i.i.i = icmp eq i64 %and5.i.i.i.i, 0
  br i1 %tobool6.not.i.i.i.i, label %if.else8.i.i.i.i, label %if.else4.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge

if.else4.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge: ; preds = %if.else4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i.i

if.else8.i.i.i.i:                                 ; preds = %if.else4.i.i.i.i
  %and9.i.i.i.i = and i64 %49, 1024
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and9.i.i.i.i)
  %tobool10.not.i.i.i.i = icmp eq i64 %and9.i.i.i.i, 0
  br i1 %tobool10.not.i.i.i.i, label %if.else12.i.i.i.i, label %if.else8.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge

if.else8.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge: ; preds = %if.else8.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i.i

if.else12.i.i.i.i:                                ; preds = %if.else8.i.i.i.i
  %and13.i.i.i.i = and i64 %49, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and13.i.i.i.i)
  %tobool14.not.i.i.i.i = icmp eq i64 %and13.i.i.i.i, 0
  br i1 %tobool14.not.i.i.i.i, label %if.else16.i.i.i.i, label %if.else12.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge

if.else12.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge: ; preds = %if.else12.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i.i

if.else16.i.i.i.i:                                ; preds = %if.else12.i.i.i.i
  %and17.i.i.i.i = and i64 %49, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and17.i.i.i.i)
  %tobool18.not.i.i.i.i = icmp eq i64 %and17.i.i.i.i, 0
  br i1 %tobool18.not.i.i.i.i, label %if.else20.i.i.i.i, label %if.else16.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge

if.else16.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge: ; preds = %if.else16.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i.i

if.else20.i.i.i.i:                                ; preds = %if.else16.i.i.i.i
  %and21.i.i.i.i = and i64 %49, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and21.i.i.i.i)
  %tobool22.not.i.i.i.i = icmp eq i64 %and21.i.i.i.i, 0
  br i1 %tobool22.not.i.i.i.i, label %if.else24.i.i.i.i, label %if.else20.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge

if.else20.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge: ; preds = %if.else20.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %calc_data_stripes.exit.i.i

if.else24.i.i.i.i:                                ; preds = %if.else20.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %and25.i.i.i.i = and i64 %49, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and25.i.i.i.i)
  %tobool26.not.i.i.i.i = icmp eq i64 %and25.i.i.i.i, 0
  %..i.i.i.i = select i1 %tobool26.not.i.i.i.i, i32 4, i32 6
  br label %calc_data_stripes.exit.i.i

calc_data_stripes.exit.i.i:                       ; preds = %if.else24.i.i.i.i, %if.else20.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge, %if.else16.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge, %if.else12.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge, %if.else8.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge, %if.else4.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge, %if.else.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge, %if.end.i.calc_data_stripes.exit.i.i_crit_edge
  %retval.0.i.i.i.i = phi i32 [ 0, %if.end.i.calc_data_stripes.exit.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge ], [ 7, %if.else4.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge ], [ 8, %if.else8.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge ], [ 2, %if.else12.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge ], [ 3, %if.else16.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge ], [ 5, %if.else20.i.i.i.i.calc_data_stripes.exit.i.i_crit_edge ], [ %..i.i.i.i, %if.else24.i.i.i.i ]
  %ncopies1.i.i.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i.i.i, i32 6
  %54 = ptrtoint ptr %ncopies1.i.i.i to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %ncopies1.i.i.i, align 2
  %conv.i.i.i = zext i8 %55 to i32
  %nparity3.i.i.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i.i.i, i32 7
  %56 = ptrtoint ptr %nparity3.i.i.i to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %nparity3.i.i.i, align 1
  %conv4.i.i.i = zext i8 %57 to i32
  %sub.i.i.i = sub i32 %53, %conv4.i.i.i
  %div.i.i.i = sdiv i32 %sub.i.i.i, %conv.i.i.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %51)
  %cmp164.i.i.i.i = icmp ult i64 %51, 4294967296
  br i1 %cmp164.i.i.i.i, label %if.then168.i.i.i.i, label %if.else174.i.i.i.i, !prof !423

if.then168.i.i.i.i:                               ; preds = %calc_data_stripes.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %conv169.i.i.i.i = trunc i64 %51 to i32
  %div172.i.i.i.i = udiv i32 %conv169.i.i.i.i, %div.i.i.i
  %conv173.i.i.i.i = zext i32 %div172.i.i.i.i to i64
  br label %calc_stripe_length.exit.i

if.else174.i.i.i.i:                               ; preds = %calc_data_stripes.exit.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %58 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %div.i.i.i, i64 %51) #35, !srcloc !491
  %asmresult1.i.i.i.i.i = extractvalue { i64, i64 } %58, 1
  br label %calc_stripe_length.exit.i

calc_stripe_length.exit.i:                        ; preds = %if.else174.i.i.i.i, %if.then168.i.i.i.i
  %dividend.addr.0.i.i.i.i = phi i64 [ %conv173.i.i.i.i, %if.then168.i.i.i.i ], [ %asmresult1.i.i.i.i.i, %if.else174.i.i.i.i ]
  call void @__sanitizer_cov_trace_cmp8(i64 %dividend.addr.0.i.i.i.i, i64 %call.i104)
  %cmp.not.i = icmp eq i64 %dividend.addr.0.i.i.i.i, %call.i104
  br i1 %cmp.not.i, label %for.cond.preheader.i, label %if.then4.i

for.cond.preheader.i:                             ; preds = %calc_stripe_length.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %cmp7107.i = icmp sgt i32 %53, 0
  br i1 %cmp7107.i, label %for.cond.preheader.i.for.body.i_crit_edge, label %for.cond.preheader.i.if.then24.critedge.i_crit_edge

for.cond.preheader.i.if.then24.critedge.i_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then24.critedge.i

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

if.then4.i:                                       ; preds = %calc_stripe_length.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  %start.i = getelementptr inbounds %struct.extent_map, ptr %call.i105, i32 0, i32 1
  %59 = ptrtoint ptr %start.i to i32
  call void @__asan_load8_noabort(i32 %59)
  %60 = load i64, ptr %start.i, align 8
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.174, i64 noundef %31, i64 noundef %38, i64 noundef %60, i64 noundef %call.i104, i64 noundef %dividend.addr.0.i.i.i.i) #28
  br label %verify_one_dev_extent.exit.thread

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %i.0108.i = phi i32 [ %inc22.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.map_lookup, ptr %47, i32 0, i32 7, i32 %i.0108.i
  %61 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %arrayidx.i, align 8
  %devid9.i = getelementptr inbounds %struct.btrfs_device, ptr %62, i32 0, i32 13
  %63 = ptrtoint ptr %devid9.i to i32
  call void @__asan_load8_noabort(i32 %63)
  %64 = load i64, ptr %devid9.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %64, i64 %38)
  %cmp10.i = icmp eq i64 %64, %38
  br i1 %cmp10.i, label %land.lhs.true.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %physical.i = getelementptr %struct.map_lookup, ptr %47, i32 0, i32 7, i32 %i.0108.i, i32 1
  %65 = ptrtoint ptr %physical.i to i32
  call void @__asan_load8_noabort(i32 %65)
  %66 = load i64, ptr %physical.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %66, i64 %31)
  %cmp13.i = icmp eq i64 %66, %31
  br i1 %cmp13.i, label %if.then14.i, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc.i

if.then14.i:                                      ; preds = %land.lhs.true.i
  %verified_stripes.i = getelementptr inbounds %struct.map_lookup, ptr %47, i32 0, i32 6
  %67 = ptrtoint ptr %verified_stripes.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %verified_stripes.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %68, i32 %53)
  %cmp16.not.i = icmp slt i32 %68, %53
  br i1 %cmp16.not.i, label %if.end19.i, label %if.then17.i

if.then17.i:                                      ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #25
  %start18.i = getelementptr inbounds %struct.extent_map, ptr %call.i105, i32 0, i32 1
  %69 = ptrtoint ptr %start18.i to i32
  call void @__asan_load8_noabort(i32 %69)
  %70 = load i64, ptr %start18.i, align 8
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.175, i64 noundef %70) #28
  br label %verify_one_dev_extent.exit.thread

if.end19.i:                                       ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #25
  %inc.i = add nsw i32 %68, 1
  %71 = ptrtoint ptr %verified_stripes.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %inc.i, ptr %verified_stripes.i, align 8
  br label %if.end25.i

for.inc.i:                                        ; preds = %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc22.i = add nuw nsw i32 %i.0108.i, 1
  %exitcond.not.i = icmp eq i32 %inc22.i, %53
  br i1 %exitcond.not.i, label %for.inc.i.if.then24.critedge.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body.i

for.inc.i.if.then24.critedge.i_crit_edge:         ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then24.critedge.i

if.then24.critedge.i:                             ; preds = %for.inc.i.if.then24.critedge.i_crit_edge, %for.cond.preheader.i.if.then24.critedge.i_crit_edge
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.176, i64 noundef %31, i64 noundef %38) #28
  br label %if.end25.i

if.end25.i:                                       ; preds = %if.then24.critedge.i, %if.end19.i
  %cmp40 = phi i1 [ true, %if.then24.critedge.i ], [ false, %if.end19.i ]
  %ret.0.i = phi i32 [ -117, %if.then24.critedge.i ], [ 0, %if.end19.i ]
  %72 = ptrtoint ptr %fs_devices.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %fs_devices.i, align 8
  %call26.i = call ptr @btrfs_find_device(ptr noundef %73, ptr noundef nonnull %args.i) #23
  %tobool27.not.i = icmp eq ptr %call26.i, null
  br i1 %tobool27.not.i, label %if.then28.i, label %if.end29.i

if.then28.i:                                      ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.177, i64 noundef %38) #28
  br label %verify_one_dev_extent.exit.thread

if.end29.i:                                       ; preds = %if.end25.i
  %add.i = add i64 %call.i104, %31
  %disk_total_bytes.i = getelementptr inbounds %struct.btrfs_device, ptr %call26.i, i32 0, i32 15
  %74 = ptrtoint ptr %disk_total_bytes.i to i32
  call void @__asan_load8_noabort(i32 %74)
  %75 = load i64, ptr %disk_total_bytes.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i, i64 %75)
  %cmp30.i = icmp ugt i64 %add.i, %75
  br i1 %cmp30.i, label %if.then31.i, label %if.end33.i

if.then31.i:                                      ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.178, i64 noundef %38, i64 noundef %31, i64 noundef %call.i104, i64 noundef %75) #28
  br label %verify_one_dev_extent.exit.thread

if.end33.i:                                       ; preds = %if.end29.i
  %zone_info.i = getelementptr inbounds %struct.btrfs_device, ptr %call26.i, i32 0, i32 8
  %76 = ptrtoint ptr %zone_info.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %zone_info.i, align 4
  %tobool34.not.i = icmp eq ptr %77, null
  br i1 %tobool34.not.i, label %if.end33.i.verify_one_dev_extent.exit_crit_edge, label %if.then35.i

if.end33.i.verify_one_dev_extent.exit_crit_edge:  ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %verify_one_dev_extent.exit

if.then35.i:                                      ; preds = %if.end33.i
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_load8_noabort(i32 %78)
  %79 = load i64, ptr %77, align 8
  %sub.i = add i64 %79, -1
  %80 = or i64 %call.i104, %31
  %81 = and i64 %sub.i, %80
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %81)
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %if.then35.i.verify_one_dev_extent.exit_crit_edge, label %if.then42.i

if.then35.i.verify_one_dev_extent.exit_crit_edge: ; preds = %if.then35.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %verify_one_dev_extent.exit

if.then42.i:                                      ; preds = %if.then35.i
  call void @__sanitizer_cov_trace_pc() #25
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.179, i64 noundef %38, i64 noundef %31, i64 noundef %call.i104) #28
  br label %verify_one_dev_extent.exit.thread

verify_one_dev_extent.exit.thread:                ; preds = %if.then42.i, %if.then31.i, %if.then28.i, %if.then17.i, %if.then4.i, %if.then.i
  call void @free_extent_map(ptr noundef %call.i105) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args.i) #23
  br label %out

verify_one_dev_extent.exit:                       ; preds = %if.then35.i.verify_one_dev_extent.exit_crit_edge, %if.end33.i.verify_one_dev_extent.exit_crit_edge
  call void @free_extent_map(ptr noundef nonnull %call.i105) #23
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args.i) #23
  br i1 %cmp40, label %verify_one_dev_extent.exit.out_crit_edge, label %if.end43

verify_one_dev_extent.exit.out_crit_edge:         ; preds = %verify_one_dev_extent.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end43:                                         ; preds = %verify_one_dev_extent.exit
  %83 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %slots, align 4
  %inc.i.i = add i32 %84, 1
  store i32 %inc.i.i, ptr %slots, align 4
  %85 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %call, align 4
  %pages.i.i.i = getelementptr inbounds %struct.extent_buffer, ptr %86, i32 0, i32 12
  %87 = ptrtoint ptr %pages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %pages.i.i.i, align 4
  %call.i.i.i = call ptr @page_address(ptr noundef %88) #23
  %89 = ptrtoint ptr %86 to i32
  call void @__asan_load8_noabort(i32 %89)
  %90 = load i64, ptr %86, align 8
  %conv.i.i.i108 = trunc i64 %90 to i32
  %and.i.i.i = and i32 %conv.i.i.i108, 4095
  %add.ptr.i.i.i = getelementptr i8, ptr %call.i.i.i, i32 %and.i.i.i
  %nritems.i.i.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i.i.i, i32 0, i32 7
  %91 = ptrtoint ptr %nritems.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %91, i32 4)
  %92 = load i32, ptr %nritems.i.i.i, align 1
  %93 = call i32 @llvm.bswap.i32(i32 %92) #23
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i.i, i32 %93)
  %cmp.not.i.i = icmp ult i32 %inc.i.i, %93
  br i1 %cmp.not.i.i, label %if.end43.while.cond.backedge_crit_edge, label %btrfs_next_item.exit

if.end43.while.cond.backedge_crit_edge:           ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end49.while.cond.backedge_crit_edge, %if.end43.while.cond.backedge_crit_edge
  br label %while.cond

btrfs_next_item.exit:                             ; preds = %if.end43
  %call4.i.i = call i32 @btrfs_next_old_leaf(ptr noundef %1, ptr noundef nonnull %call, i64 noundef 0) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %cmp46 = icmp slt i32 %call4.i.i, 0
  br i1 %cmp46, label %btrfs_next_item.exit.out_crit_edge, label %if.end49

btrfs_next_item.exit.out_crit_edge:               ; preds = %btrfs_next_item.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %out

if.end49:                                         ; preds = %btrfs_next_item.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %cmp50.not = icmp eq i32 %call4.i.i, 0
  br i1 %cmp50.not, label %if.end49.while.cond.backedge_crit_edge, label %if.end49.while.end_crit_edge

if.end49.while.end_crit_edge:                     ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.end

if.end49.while.cond.backedge_crit_edge:           ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.cond.backedge

while.end:                                        ; preds = %if.end49.while.end_crit_edge, %while.cond.while.end_crit_edge
  call void @_raw_read_lock(ptr noundef %lock.i) #23
  %rb_leftmost.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 19, i32 0, i32 1
  %94 = ptrtoint ptr %rb_leftmost.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %rb_leftmost.i, align 4
  %tobool.not19.i = icmp eq ptr %95, null
  br i1 %tobool.not19.i, label %while.end.verify_chunk_dev_extent_mapping.exit_crit_edge, label %while.end.for.body.i114_crit_edge

while.end.for.body.i114_crit_edge:                ; preds = %while.end
  br label %for.body.i114

while.end.verify_chunk_dev_extent_mapping.exit_crit_edge: ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %verify_chunk_dev_extent_mapping.exit

for.body.i114:                                    ; preds = %for.inc.i119.for.body.i114_crit_edge, %while.end.for.body.i114_crit_edge
  %node.020.i = phi ptr [ %call.i117, %for.inc.i119.for.body.i114_crit_edge ], [ %95, %while.end.for.body.i114_crit_edge ]
  %map_lookup.i110 = getelementptr inbounds %struct.extent_map, ptr %node.020.i, i32 0, i32 12
  %96 = ptrtoint ptr %map_lookup.i110 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %map_lookup.i110, align 4
  %num_stripes.i111 = getelementptr inbounds %struct.map_lookup, ptr %97, i32 0, i32 4
  %98 = ptrtoint ptr %num_stripes.i111 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %num_stripes.i111, align 8
  %verified_stripes.i112 = getelementptr inbounds %struct.map_lookup, ptr %97, i32 0, i32 6
  %100 = ptrtoint ptr %verified_stripes.i112 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %verified_stripes.i112, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %99, i32 %101)
  %cmp.not.i113 = icmp eq i32 %99, %101
  br i1 %cmp.not.i113, label %for.inc.i119, label %if.then.i116

if.then.i116:                                     ; preds = %for.body.i114
  call void @__sanitizer_cov_trace_pc() #25
  %start.i115 = getelementptr inbounds %struct.extent_map, ptr %node.020.i, i32 0, i32 1
  %102 = ptrtoint ptr %start.i115 to i32
  call void @__asan_load8_noabort(i32 %102)
  %103 = load i64, ptr %start.i115, align 8
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.180, i64 noundef %103, i32 noundef %101, i32 noundef %99) #28
  br label %verify_chunk_dev_extent_mapping.exit

for.inc.i119:                                     ; preds = %for.body.i114
  %call.i117 = call ptr @rb_next(ptr noundef nonnull %node.020.i) #23
  %tobool.not.i118 = icmp eq ptr %call.i117, null
  br i1 %tobool.not.i118, label %for.inc.i119.verify_chunk_dev_extent_mapping.exit_crit_edge, label %for.inc.i119.for.body.i114_crit_edge

for.inc.i119.for.body.i114_crit_edge:             ; preds = %for.inc.i119
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body.i114

for.inc.i119.verify_chunk_dev_extent_mapping.exit_crit_edge: ; preds = %for.inc.i119
  call void @__sanitizer_cov_trace_pc() #25
  br label %verify_chunk_dev_extent_mapping.exit

verify_chunk_dev_extent_mapping.exit:             ; preds = %for.inc.i119.verify_chunk_dev_extent_mapping.exit_crit_edge, %if.then.i116, %while.end.verify_chunk_dev_extent_mapping.exit_crit_edge
  %ret.0.i120 = phi i32 [ -117, %if.then.i116 ], [ 0, %while.end.verify_chunk_dev_extent_mapping.exit_crit_edge ], [ 0, %for.inc.i119.verify_chunk_dev_extent_mapping.exit_crit_edge ]
  call void @_raw_read_unlock(ptr noundef %lock.i) #23
  br label %out

out:                                              ; preds = %verify_chunk_dev_extent_mapping.exit, %btrfs_next_item.exit.out_crit_edge, %verify_one_dev_extent.exit.out_crit_edge, %verify_one_dev_extent.exit.thread, %if.then37, %if.end14.out_crit_edge, %if.then10.out_crit_edge, %if.end3.out_crit_edge
  %ret.3 = phi i32 [ %call4, %if.end3.out_crit_edge ], [ %call.i102, %if.then10.out_crit_edge ], [ %ret.0.i120, %verify_chunk_dev_extent_mapping.exit ], [ -117, %if.end14.out_crit_edge ], [ -117, %verify_one_dev_extent.exit.thread ], [ -117, %if.then37 ], [ %ret.0.i, %verify_one_dev_extent.exit.out_crit_edge ], [ %call4.i.i, %btrfs_next_item.exit.out_crit_edge ]
  call void @btrfs_free_path(ptr noundef nonnull %call) #23
  br label %cleanup61

cleanup61:                                        ; preds = %out, %if.end.cleanup61_crit_edge, %entry.cleanup61_crit_edge
  %retval.0 = phi i32 [ %ret.3, %out ], [ 0, %entry.cleanup61_crit_edge ], [ -12, %if.end.cleanup61_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #23
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @btrfs_repair_one_zone(ptr noundef %fs_info, i64 noundef %logical) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 176
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load8_noabort(i32 %1)
  %2 = load i64, ptr %0, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %2)
  %cmp.i = icmp ne i64 %2, 0
  br i1 %cmp.i, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %mount_opt = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 31
  %3 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %mount_opt, align 8
  %and = and i32 %4, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end2, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %call3 = tail call ptr @btrfs_lookup_block_group(ptr noundef %fs_info, i64 noundef %logical) #23
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %if.end2.cleanup_crit_edge, label %if.end6

if.end2.cleanup_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end6:                                          ; preds = %if.end2
  %lock = getelementptr inbounds %struct.btrfs_block_group, ptr %call3, i32 0, i32 2
  tail call void @_raw_spin_lock(ptr noundef %lock) #23
  %relocating_repair = getelementptr inbounds %struct.btrfs_block_group, ptr %call3, i32 0, i32 17
  %5 = ptrtoint ptr %relocating_repair to i32
  call void @__asan_load1_noabort(i32 %5)
  %bf.load = load i8, ptr %relocating_repair, align 8
  %6 = and i8 %bf.load, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool7.not = icmp eq i8 %6, 0
  br i1 %tobool7.not, label %if.end10, label %if.then8

if.then8:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @_raw_spin_unlock(ptr noundef %lock) #23
  tail call void @btrfs_put_block_group(ptr noundef nonnull %call3) #23
  br label %cleanup

if.end10:                                         ; preds = %if.end6
  %bf.set = or i8 %bf.load, 8
  %7 = ptrtoint ptr %relocating_repair to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %bf.set, ptr %relocating_repair, align 8
  tail call void @_raw_spin_unlock(ptr noundef %lock) #23
  %call15 = tail call ptr (ptr, ptr, i32, ptr, ...) @kthread_create_on_node(ptr noundef nonnull @relocating_repair_kthread, ptr noundef nonnull %call3, i32 noundef -1, ptr noundef nonnull @.str.71) #23
  %cmp.i31 = icmp ugt ptr %call15, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i31, label %if.end10.cleanup_crit_edge, label %if.then17

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.then17:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #25
  %call18 = tail call i32 @wake_up_process(ptr noundef %call15) #23
  br label %cleanup

cleanup:                                          ; preds = %if.then17, %if.end10.cleanup_crit_edge, %if.then8, %if.end2.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret i1 %cmp.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @relocating_repair_kthread(ptr noundef %data) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data, align 8
  %start = getelementptr inbounds %struct.btrfs_block_group, ptr %data, i32 0, i32 3
  %2 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %start, align 8
  tail call void @btrfs_put_block_group(ptr noundef %data) #23
  %call = tail call zeroext i1 @btrfs_exclop_start(ptr noundef %1, i32 noundef 2) #23
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %1, ptr noundef nonnull @.str.181, i64 noundef %3) #28
  br label %cleanup

if.end:                                           ; preds = %entry
  %reclaim_bgs_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 165
  tail call void @mutex_lock_nested(ptr noundef %reclaim_bgs_lock, i32 noundef 0) #23
  %call2 = tail call ptr @btrfs_lookup_block_group(ptr noundef %1, i64 noundef %3) #23
  %tobool.not = icmp eq ptr %call2, null
  br i1 %tobool.not, label %if.end.if.end14_crit_edge, label %if.end4

if.end.if.end14_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end14

if.end4:                                          ; preds = %if.end
  %relocating_repair = getelementptr inbounds %struct.btrfs_block_group, ptr %call2, i32 0, i32 17
  %4 = ptrtoint ptr %relocating_repair to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load = load i8, ptr %relocating_repair, align 8
  %5 = and i8 %bf.load, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool5.not = icmp eq i8 %5, 0
  br i1 %tobool5.not, label %if.end4.if.then13_crit_edge, label %if.end7

if.end4.if.then13_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then13

if.end7:                                          ; preds = %if.end4
  %call8 = tail call fastcc i32 @btrfs_may_alloc_data_chunk(ptr noundef %1, i64 noundef %3)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %cmp = icmp slt i32 %call8, 0
  br i1 %cmp, label %if.end7.if.then13_crit_edge, label %if.end10

if.end7.if.then13_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then13

if.end10:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %1, ptr noundef nonnull @.str.182, i64 noundef %3) #28
  %call11 = tail call i32 @btrfs_relocate_chunk(ptr noundef %1, i64 noundef %3)
  br label %if.then13

if.then13:                                        ; preds = %if.end10, %if.end7.if.then13_crit_edge, %if.end4.if.then13_crit_edge
  %ret.0.ph = phi i32 [ 0, %if.end4.if.then13_crit_edge ], [ %call11, %if.end10 ], [ %call8, %if.end7.if.then13_crit_edge ]
  tail call void @btrfs_put_block_group(ptr noundef nonnull %call2) #23
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end.if.end14_crit_edge
  %ret.040 = phi i32 [ %ret.0.ph, %if.then13 ], [ 0, %if.end.if.end14_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %reclaim_bgs_lock) #23
  tail call void @btrfs_exclop_finish(ptr noundef %1) #23
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.then
  %retval.0 = phi i32 [ %ret.040, %if.end14 ], [ -16, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree_call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #11

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.bswap.i64(i64) #15

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_page(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_page(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod_and_test(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #16

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_sysfs_remove_fsid(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @read_cache_page_gfp(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @find_fsid(ptr noundef readonly %fsid, ptr noundef readonly %metadata_fsid) unnamed_addr #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %fsid, null
  br i1 %tobool.not, label %cond.false, label %for.cond.preheader, !prof !424

for.cond.preheader:                               ; preds = %entry
  %.pn34 = load ptr, ptr @fs_uuids, align 4
  %cmp.not36 = icmp eq ptr %.pn34, @fs_uuids
  br i1 %cmp.not36, label %for.cond.preheader.cleanup_crit_edge, label %for.body.lr.ph

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %tobool5.not = icmp eq ptr %metadata_fsid, null
  br label %for.body

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.86, i32 noundef 443) #32
  unreachable

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %.pn37 = phi ptr [ %.pn34, %for.body.lr.ph ], [ %.pn, %for.inc.for.body_crit_edge ]
  %fs_devices.038 = getelementptr i8, ptr %.pn37, i32 -36
  %bcmp = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(16) %fsid, ptr noundef dereferenceable(16) %fs_devices.038, i32 16) #31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %cmp15 = icmp eq i32 %bcmp, 0
  br i1 %tobool5.not, label %if.else, label %if.then

if.then:                                          ; preds = %for.body
  br i1 %cmp15, label %land.lhs.true, label %if.then.for.inc_crit_edge

if.then.for.inc_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

land.lhs.true:                                    ; preds = %if.then
  %metadata_uuid = getelementptr i8, ptr %.pn37, i32 -20
  %bcmp33 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(16) %metadata_fsid, ptr noundef dereferenceable(16) %metadata_uuid, i32 16) #31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp33)
  %cmp10 = icmp eq i32 %bcmp33, 0
  br i1 %cmp10, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.for.inc_crit_edge

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.else:                                          ; preds = %for.body
  br i1 %cmp15, label %if.else.cleanup_crit_edge, label %if.else.for.inc_crit_edge

if.else.for.inc_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.inc

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

for.inc:                                          ; preds = %if.else.for.inc_crit_edge, %land.lhs.true.for.inc_crit_edge, %if.then.for.inc_crit_edge
  %0 = ptrtoint ptr %.pn37 to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn = load ptr, ptr %.pn37, align 4
  %cmp.not = icmp eq ptr %.pn, @fs_uuids
  br i1 %cmp.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.else.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %for.cond.preheader.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %for.cond.preheader.cleanup_crit_edge ], [ null, %for.inc.cleanup_crit_edge ], [ %fs_devices.038, %if.else.cleanup_crit_edge ], [ %fs_devices.038, %land.lhs.true.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lookup_bdev(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_search_backwards(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @dev_extent_hole_check(ptr noundef %device, ptr nocapture noundef %hole_start, ptr nocapture noundef %hole_size, i64 noundef %num_bytes) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hole_start to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %hole_start, align 8
  %2 = ptrtoint ptr %hole_size to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %hole_size, align 8
  %add = add i64 %3, %1
  %fs_devices = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 3
  %zone_info.i = getelementptr inbounds %struct.btrfs_device, ptr %device, i32 0, i32 8
  br label %for.cond

for.cond:                                         ; preds = %for.cond.backedge, %entry
  %changed.0.off0 = phi i1 [ false, %entry ], [ true, %for.cond.backedge ]
  %4 = ptrtoint ptr %hole_size to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %hole_size, align 8
  %call = tail call fastcc zeroext i1 @contains_pending_extent(ptr noundef %device, ptr noundef %hole_start, i64 noundef %5)
  br i1 %call, label %if.then, label %for.cond.if.end2_crit_edge

for.cond.if.end2_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end2

if.then:                                          ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #25
  %6 = ptrtoint ptr %hole_start to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %hole_start, align 8
  %8 = tail call i64 @llvm.usub.sat.i64(i64 %add, i64 %7)
  %9 = ptrtoint ptr %hole_size to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %hole_size, align 8
  br label %if.end2

if.end2:                                          ; preds = %if.then, %for.cond.if.end2_crit_edge
  %changed.1.off0 = phi i1 [ true, %if.then ], [ %changed.0.off0, %for.cond.if.end2_crit_edge ]
  %10 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %fs_devices, align 8
  %chunk_alloc_policy = getelementptr inbounds %struct.btrfs_fs_devices, ptr %11, i32 0, i32 24
  %12 = ptrtoint ptr %chunk_alloc_policy to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %chunk_alloc_policy, align 8
  %14 = zext i32 %13 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.216)
  switch i32 %13, label %do.body [
    i32 0, label %if.end2.for.end_crit_edge
    i32 1, label %sw.bb
  ]

if.end2.for.end_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

sw.bb:                                            ; preds = %if.end2
  %15 = ptrtoint ptr %zone_info.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %zone_info.i, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %16, align 8
  %19 = ptrtoint ptr %hole_start to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %hole_start, align 8
  %sub.i = add i64 %18, -1
  %and.i = and i64 %20, %sub.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %cmp.i = icmp eq i64 %and.i, 0
  br i1 %cmp.i, label %while.condthread-pre-split.i, label %cond.false.i, !prof !423

cond.false.i:                                     ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.88, i32 noundef 1457) #26
  unreachable

while.condthread-pre-split.i:                     ; preds = %sw.bb
  %21 = ptrtoint ptr %hole_size to i32
  call void @__asan_load8_noabort(i32 %21)
  %.pr.i = load i64, ptr %hole_size, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %.pr.i)
  %cmp3.not52.i = icmp eq i64 %.pr.i, 0
  br i1 %cmp3.not52.i, label %while.condthread-pre-split.i.for.end_crit_edge, label %while.condthread-pre-split.i.while.body.i_crit_edge

while.condthread-pre-split.i.while.body.i_crit_edge: ; preds = %while.condthread-pre-split.i
  br label %while.body.i

while.condthread-pre-split.i.for.end_crit_edge:   ; preds = %while.condthread-pre-split.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

while.body.i:                                     ; preds = %if.end18.i.while.body.i_crit_edge, %while.condthread-pre-split.i.while.body.i_crit_edge
  %changed.0.off053.i = phi i1 [ true, %if.end18.i.while.body.i_crit_edge ], [ false, %while.condthread-pre-split.i.while.body.i_crit_edge ]
  %22 = phi i64 [ %sub20.i, %if.end18.i.while.body.i_crit_edge ], [ %.pr.i, %while.condthread-pre-split.i.while.body.i_crit_edge ]
  %23 = ptrtoint ptr %hole_start to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %hole_start, align 8
  %add.i = add i64 %24, %22
  %call.i = tail call i64 @btrfs_find_allocatable_zones(ptr noundef %device, i64 noundef %24, i64 noundef %add.i, i64 noundef %num_bytes) #23
  %25 = ptrtoint ptr %hole_start to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %hole_start, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %26, i64 %call.i)
  %cmp4.not.i = icmp eq i64 %26, %call.i
  br i1 %cmp4.not.i, label %while.body.i.if.end9.i_crit_edge, label %if.then.i

while.body.i.if.end9.i_crit_edge:                 ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end9.i

if.then.i:                                        ; preds = %while.body.i
  %27 = ptrtoint ptr %hole_size to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %hole_size, align 8
  %add5.i = sub i64 %26, %call.i
  %sub6.i = add i64 %add5.i, %28
  store i64 %sub6.i, ptr %hole_size, align 8
  %29 = ptrtoint ptr %hole_start to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %call.i, ptr %hole_start, align 8
  %30 = load i64, ptr %hole_size, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %30, i64 %num_bytes)
  %cmp7.i = icmp ult i64 %30, %num_bytes
  br i1 %cmp7.i, label %if.then.i.for.cond.backedge_crit_edge, label %if.then.i.if.end9.i_crit_edge

if.then.i.if.end9.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end9.i

if.then.i.for.cond.backedge_crit_edge:            ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.cond.backedge

if.end9.i:                                        ; preds = %if.then.i.if.end9.i_crit_edge, %while.body.i.if.end9.i_crit_edge
  %changed.1.off0.i = phi i1 [ true, %if.then.i.if.end9.i_crit_edge ], [ %changed.0.off053.i, %while.body.i.if.end9.i_crit_edge ]
  %call10.i = tail call i32 @btrfs_ensure_empty_zones(ptr noundef %device, i64 noundef %call.i, i64 noundef %num_bytes) #23
  %31 = zext i32 %call10.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %31, ptr @__sancov_gen_cov_switch_values.217)
  switch i32 %call10.i, label %if.end18.i [
    i32 0, label %dev_extent_hole_check_zoned.exit
    i32 -34, label %if.then16.i
  ]

if.then16.i:                                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #25
  %32 = ptrtoint ptr %hole_size to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %hole_size, align 8
  %34 = ptrtoint ptr %hole_start to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %hole_start, align 8
  %add17.i = add i64 %35, %33
  store i64 %add17.i, ptr %hole_start, align 8
  store i64 0, ptr %hole_size, align 8
  br label %for.cond.backedge

if.end18.i:                                       ; preds = %if.end9.i
  %36 = ptrtoint ptr %hole_start to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %hole_start, align 8
  %add19.i = add i64 %37, %18
  store i64 %add19.i, ptr %hole_start, align 8
  %38 = ptrtoint ptr %hole_size to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %hole_size, align 8
  %sub20.i = sub i64 %39, %18
  store i64 %sub20.i, ptr %hole_size, align 8
  %cmp3.not.i = icmp eq i64 %sub20.i, 0
  br i1 %cmp3.not.i, label %if.end18.i.for.cond.backedge_crit_edge, label %if.end18.i.while.body.i_crit_edge

if.end18.i.while.body.i_crit_edge:                ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body.i

if.end18.i.for.cond.backedge_crit_edge:           ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.cond.backedge

dev_extent_hole_check_zoned.exit:                 ; preds = %if.end9.i
  br i1 %changed.1.off0.i, label %dev_extent_hole_check_zoned.exit.for.cond.backedge_crit_edge, label %dev_extent_hole_check_zoned.exit.for.end_crit_edge

dev_extent_hole_check_zoned.exit.for.end_crit_edge: ; preds = %dev_extent_hole_check_zoned.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.end

dev_extent_hole_check_zoned.exit.for.cond.backedge_crit_edge: ; preds = %dev_extent_hole_check_zoned.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %dev_extent_hole_check_zoned.exit.for.cond.backedge_crit_edge, %if.end18.i.for.cond.backedge_crit_edge, %if.then16.i, %if.then.i.for.cond.backedge_crit_edge
  br label %for.cond

do.body:                                          ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #25
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/volumes.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1537, 0\0A.popsection", ""() #23, !srcloc !511
  unreachable

for.end:                                          ; preds = %dev_extent_hole_check_zoned.exit.for.end_crit_edge, %while.condthread-pre-split.i.for.end_crit_edge, %if.end2.for.end_crit_edge
  ret i1 %changed.1.off0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @btrfs_find_allocatable_zones(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_ensure_empty_zones(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__folio_lock(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @folio_write_one(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kern_path(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @current_time(ptr sret(%struct.timespec64) align 8, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inode_update_time(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @path_put(ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_del_items(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #17

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #18

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_read_dev_super(ptr noundef) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strncpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly, i32 noundef) local_unnamed_addr #19

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @clone_fs_devices(ptr noundef readonly %orig) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @uuid_mutex, i32 0, i32 5), i32 noundef -1) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !424

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 1002, i32 noundef 9, ptr noundef null) #23
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %1 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %1, i32 noundef 3520, i32 noundef 448) #29
  %tobool.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i, label %if.end.cleanup97_crit_edge, label %do.body.i

if.end.cleanup97_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup97

do.body.i:                                        ; preds = %if.end
  %device_list_mutex.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 12
  tail call void @__mutex_init(ptr noundef %device_list_mutex.i, ptr noundef nonnull @.str.87, ptr noundef nonnull @alloc_fs_devices.__key) #23
  %devices.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 13
  %2 = ptrtoint ptr %devices.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %devices.i, ptr %devices.i, align 8
  %prev.i.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 13, i32 1
  %3 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %devices.i, ptr %prev.i.i, align 4
  %alloc_list.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 14
  %4 = ptrtoint ptr %alloc_list.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %alloc_list.i, ptr %alloc_list.i, align 8
  %prev.i28.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 14, i32 1
  %5 = ptrtoint ptr %prev.i28.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %alloc_list.i, ptr %prev.i28.i, align 4
  %fs_list.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 3
  %6 = ptrtoint ptr %fs_list.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %fs_list.i, ptr %fs_list.i, align 4
  %prev.i29.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 3, i32 1
  %7 = ptrtoint ptr %prev.i29.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %fs_list.i, ptr %prev.i29.i, align 8
  %seed_list.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 15
  %8 = ptrtoint ptr %seed_list.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %seed_list.i, ptr %seed_list.i, align 8
  %prev.i30.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 15, i32 1
  %9 = ptrtoint ptr %prev.i30.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %seed_list.i, ptr %prev.i30.i, align 4
  %tobool2.not.i = icmp eq ptr %orig, null
  br i1 %tobool2.not.i, label %do.body.i.alloc_fs_devices.exit_crit_edge, label %if.end5.thread.i

do.body.i.alloc_fs_devices.exit_crit_edge:        ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %alloc_fs_devices.exit

if.end5.thread.i:                                 ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #25
  %10 = call ptr @memcpy(ptr %call7.i.i.i, ptr %orig, i32 16)
  %metadata_uuid.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 1
  %11 = call ptr @memcpy(ptr %metadata_uuid.i, ptr %orig, i32 16)
  br label %alloc_fs_devices.exit

alloc_fs_devices.exit:                            ; preds = %if.end5.thread.i, %do.body.i.alloc_fs_devices.exit_crit_edge
  %cmp.i = icmp ugt ptr %call7.i.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %alloc_fs_devices.exit.cleanup97_crit_edge, label %if.end27

alloc_fs_devices.exit.cleanup97_crit_edge:        ; preds = %alloc_fs_devices.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup97

if.end27:                                         ; preds = %alloc_fs_devices.exit
  %total_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %orig, i32 0, i32 9
  %12 = ptrtoint ptr %total_devices to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %total_devices, align 8
  %total_devices28 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 9
  %14 = ptrtoint ptr %total_devices28 to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %13, ptr %total_devices28, align 8
  %devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %orig, i32 0, i32 13
  %15 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %15)
  %orig_dev.0140 = load ptr, ptr %devices, align 8
  %cmp31.not141 = icmp eq ptr %orig_dev.0140, %devices
  br i1 %cmp31.not141, label %if.end27.cleanup97_crit_edge, label %for.body.lr.ph

if.end27.cleanup97_crit_edge:                     ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup97

for.body.lr.ph:                                   ; preds = %if.end27
  %num_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 4
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %for.body.lr.ph
  %orig_dev.0142 = phi ptr [ %orig_dev.0140, %for.body.lr.ph ], [ %orig_dev.0, %cleanup.for.body_crit_edge ]
  %devid = getelementptr inbounds %struct.btrfs_device, ptr %orig_dev.0142, i32 0, i32 13
  %uuid = getelementptr inbounds %struct.btrfs_device, ptr %orig_dev.0142, i32 0, i32 21
  %call35 = tail call ptr @btrfs_alloc_device(ptr noundef null, ptr noundef %devid, ptr noundef %uuid)
  %cmp.i123 = icmp ugt ptr %call35, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i123, label %for.body.error_crit_edge, label %if.end39

for.body.error_crit_edge:                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %error

if.end39:                                         ; preds = %for.body
  %name40 = getelementptr inbounds %struct.btrfs_device, ptr %orig_dev.0142, i32 0, i32 5
  %16 = ptrtoint ptr %name40 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %name40, align 8
  %tobool41.not = icmp eq ptr %17, null
  br i1 %tobool41.not, label %if.end39.if.end87_crit_edge, label %if.then42

if.end39.if.end87_crit_edge:                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end87

if.then42:                                        ; preds = %if.end39
  %str = getelementptr inbounds %struct.rcu_string, ptr %17, i32 0, i32 1
  %call.i124 = tail call i32 @strlen(ptr noundef %str) #27
  %add1.i = add i32 %call.i124, 9
  %call9.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add1.i, i32 noundef 3520) #30
  %tobool.not.i126 = icmp eq ptr %call9.i.i.i, null
  br i1 %tobool.not.i126, label %if.then47, label %do.body49

if.then47:                                        ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @btrfs_free_device(ptr noundef %call35)
  br label %error

do.body49:                                        ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #25
  %add.i = add i32 %call.i124, 1
  %str.i = getelementptr inbounds %struct.rcu_string, ptr %call9.i.i.i, i32 0, i32 1
  %call3.i = tail call ptr @strncpy(ptr noundef %str.i, ptr noundef %str, i32 noundef %add.i) #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !512
  %name75 = getelementptr inbounds %struct.btrfs_device, ptr %call35, i32 0, i32 5
  %18 = ptrtoint ptr %name75 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %call9.i.i.i, ptr %name75, align 8
  br label %if.end87

if.end87:                                         ; preds = %do.body49, %if.end39.if.end87_crit_edge
  %19 = ptrtoint ptr %devices.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %devices.i, align 8
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %call35, ptr noundef %devices.i, ptr noundef %20) #23
  br i1 %call.i.i, label %if.end.i.i, label %if.end87.cleanup_crit_edge

if.end87.cleanup_crit_edge:                       ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end.i.i:                                       ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #25
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %call35, ptr %prev1.i.i, align 4
  %22 = ptrtoint ptr %call35 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %20, ptr %call35, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %call35, i32 0, i32 1
  %23 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %devices.i, ptr %prev3.i.i, align 4
  %24 = ptrtoint ptr %devices.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %call35, ptr %devices.i, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i, %if.end87.cleanup_crit_edge
  %fs_devices90 = getelementptr inbounds %struct.btrfs_device, ptr %call35, i32 0, i32 3
  %25 = ptrtoint ptr %fs_devices90 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %call7.i.i.i, ptr %fs_devices90, align 8
  %26 = ptrtoint ptr %num_devices to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %num_devices, align 8
  %inc = add i64 %27, 1
  store i64 %inc, ptr %num_devices, align 8
  %28 = ptrtoint ptr %orig_dev.0142 to i32
  call void @__asan_load4_noabort(i32 %28)
  %orig_dev.0 = load ptr, ptr %orig_dev.0142, align 8
  %cmp31.not = icmp eq ptr %orig_dev.0, %devices
  br i1 %cmp31.not, label %cleanup.cleanup97_crit_edge, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body

cleanup.cleanup97_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup97

error:                                            ; preds = %if.then47, %for.body.error_crit_edge
  %ret.1.ph = phi ptr [ inttoptr (i32 -12 to ptr), %if.then47 ], [ %call35, %for.body.error_crit_edge ]
  %opened.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %call7.i.i.i, i32 0, i32 17
  %29 = ptrtoint ptr %opened.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %opened.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool.not.i127 = icmp eq i32 %30, 0
  br i1 %tobool.not.i127, label %error.if.end.i129_crit_edge, label %do.end.i, !prof !423

error.if.end.i129_crit_edge:                      ; preds = %error
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end.i129

do.end.i:                                         ; preds = %error
  call void @__sanitizer_cov_trace_pc() #25
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 416, i32 noundef 9, ptr noundef null) #23
  br label %if.end.i129

if.end.i129:                                      ; preds = %do.end.i, %error.if.end.i129_crit_edge
  %31 = ptrtoint ptr %devices.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile ptr, ptr %devices.i, align 8
  %cmp.i.not30.i = icmp eq ptr %32, %devices.i
  br i1 %cmp.i.not30.i, label %if.end.i129.free_fs_devices.exit_crit_edge, label %if.end.i129.while.body.i_crit_edge

if.end.i129.while.body.i_crit_edge:               ; preds = %if.end.i129
  br label %while.body.i

if.end.i129.free_fs_devices.exit_crit_edge:       ; preds = %if.end.i129
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_fs_devices.exit

while.body.i:                                     ; preds = %list_del.exit.i.while.body.i_crit_edge, %if.end.i129.while.body.i_crit_edge
  %33 = phi ptr [ %43, %list_del.exit.i.while.body.i_crit_edge ], [ %32, %if.end.i129.while.body.i_crit_edge ]
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %33) #23
  br i1 %call.i.i.i, label %if.end.i.i.i130, label %while.body.i.list_del.exit.i_crit_edge

while.body.i.list_del.exit.i_crit_edge:           ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_del.exit.i

if.end.i.i.i130:                                  ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #25
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %prev.i.i.i, align 4
  %36 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %33, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %35, ptr %prev1.i.i.i.i, align 4
  %39 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %37, ptr %35, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i130, %while.body.i.list_del.exit.i_crit_edge
  %40 = ptrtoint ptr %33 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr inttoptr (i32 256 to ptr), ptr %33, align 4
  %prev.i.i131 = getelementptr inbounds %struct.list_head, ptr %33, i32 0, i32 1
  %41 = ptrtoint ptr %prev.i.i131 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i131, align 4
  tail call void @btrfs_free_device(ptr noundef %33) #23
  %42 = ptrtoint ptr %devices.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile ptr, ptr %devices.i, align 8
  %cmp.i.not.i = icmp eq ptr %43, %devices.i
  br i1 %cmp.i.not.i, label %list_del.exit.i.free_fs_devices.exit_crit_edge, label %list_del.exit.i.while.body.i_crit_edge

list_del.exit.i.while.body.i_crit_edge:           ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %while.body.i

list_del.exit.i.free_fs_devices.exit_crit_edge:   ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %free_fs_devices.exit

free_fs_devices.exit:                             ; preds = %list_del.exit.i.free_fs_devices.exit_crit_edge, %if.end.i129.free_fs_devices.exit_crit_edge
  tail call void @kfree(ptr noundef %call7.i.i.i) #23
  br label %cleanup97

cleanup97:                                        ; preds = %free_fs_devices.exit, %cleanup.cleanup97_crit_edge, %if.end27.cleanup97_crit_edge, %alloc_fs_devices.exit.cleanup97_crit_edge, %if.end.cleanup97_crit_edge
  %retval.0 = phi ptr [ %ret.1.ph, %free_fs_devices.exit ], [ %call7.i.i.i, %alloc_fs_devices.exit.cleanup97_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end.cleanup97_crit_edge ], [ %call7.i.i.i, %if.end27.cleanup97_crit_edge ], [ %call7.i.i.i, %cleanup.cleanup97_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @generic_atomic64_add(i64 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_mark_buffer_dirty(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_insert_empty_items(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_set_64(ptr noundef, ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_set_32(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @seqcount_lockdep_reader_access(ptr noundef %s) unnamed_addr #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #23, !srcloc !513
  %and.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.then, label %do.body24.critedge

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @trace_hardirqs_off() #23
  %dep_map.c = getelementptr inbounds %struct.seqcount, ptr %s, i32 0, i32 1
  %1 = tail call ptr @llvm.returnaddress(i32 0)
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %2) #23
  tail call void @lock_release(ptr noundef %dep_map.c, i32 noundef %2) #23
  tail call void @trace_hardirqs_on() #23
  br label %do.body24

do.body24.critedge:                               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  %dep_map.c48 = getelementptr inbounds %struct.seqcount, ptr %s, i32 0, i32 1
  %3 = tail call ptr @llvm.returnaddress(i32 0)
  %4 = ptrtoint ptr %3 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %4) #23
  tail call void @lock_release(ptr noundef %dep_map.c48, i32 noundef %4) #23
  br label %do.body24

do.body24:                                        ; preds = %do.body24.critedge, %if.then
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #23, !srcloc !514
  %and.i.i = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool32.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool32.not, label %if.then36, label %do.body24.do.end39_crit_edge, !prof !424

do.body24.do.end39_crit_edge:                     ; preds = %do.body24
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end39

if.then36:                                        ; preds = %do.body24
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @warn_bogus_irq_restore() #23
  br label %do.end39

do.end39:                                         ; preds = %if.then36, %do.body24.do.end39_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #23, !srcloc !515
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #20

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_set_8(ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @btrfs_get_64(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @generic_atomic64_sub(i64 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @btrfs_get_alloc_profile(ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_btrfs_chunk_free(ptr noundef, ptr noundef, ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #15

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #15

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @memzero_extent_buffer(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @describe_balance_args(ptr nocapture noundef readonly %bargs, ptr nocapture noundef writeonly %buf) unnamed_addr #2 align 64 {
entry:
  %tmp_buf = alloca [128 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %flags1 = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs, i32 0, i32 8
  %0 = ptrtoint ptr %flags1 to i32
  call void @__asan_loadN_noabort(i32 %0, i32 8)
  %1 = load i64, ptr %flags1, align 1
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %tmp_buf) #23
  %2 = call ptr @memset(ptr %tmp_buf, i32 0, i32 128)
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %1)
  %tobool.not = icmp eq i64 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %and = and i64 %1, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool2.not = icmp eq i64 %and, 0
  br i1 %tobool2.not, label %if.end.if.end8_crit_edge, label %do.body

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end8

do.body:                                          ; preds = %if.end
  %target = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs, i32 0, i32 7
  %3 = ptrtoint ptr %target to i32
  call void @__asan_loadN_noabort(i32 %3, i32 8)
  %4 = load i64, ptr %target, align 1
  %and.i.i = and i64 %4, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.else.i.i, label %do.body.btrfs_bg_type_to_raid_name.exit_crit_edge

do.body.btrfs_bg_type_to_raid_name.exit_crit_edge: ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit

if.else.i.i:                                      ; preds = %do.body
  %and1.i.i = and i64 %4, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i.i)
  %tobool2.not.i.i = icmp eq i64 %and1.i.i, 0
  br i1 %tobool2.not.i.i, label %if.else4.i.i, label %if.else.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge

if.else.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge: ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit

if.else4.i.i:                                     ; preds = %if.else.i.i
  %and5.i.i = and i64 %4, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5.i.i)
  %tobool6.not.i.i = icmp eq i64 %and5.i.i, 0
  br i1 %tobool6.not.i.i, label %if.else8.i.i, label %if.else4.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge

if.else4.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge: ; preds = %if.else4.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit

if.else8.i.i:                                     ; preds = %if.else4.i.i
  %and9.i.i = and i64 %4, 1024
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and9.i.i)
  %tobool10.not.i.i = icmp eq i64 %and9.i.i, 0
  br i1 %tobool10.not.i.i, label %if.else12.i.i, label %if.else8.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge

if.else8.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge: ; preds = %if.else8.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit

if.else12.i.i:                                    ; preds = %if.else8.i.i
  %and13.i.i = and i64 %4, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and13.i.i)
  %tobool14.not.i.i = icmp eq i64 %and13.i.i, 0
  br i1 %tobool14.not.i.i, label %if.else16.i.i, label %if.else12.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge

if.else12.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge: ; preds = %if.else12.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit

if.else16.i.i:                                    ; preds = %if.else12.i.i
  %and17.i.i = and i64 %4, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and17.i.i)
  %tobool18.not.i.i = icmp eq i64 %and17.i.i, 0
  br i1 %tobool18.not.i.i, label %if.else20.i.i, label %if.else16.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge

if.else16.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge: ; preds = %if.else16.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit

if.else20.i.i:                                    ; preds = %if.else16.i.i
  %and21.i.i = and i64 %4, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and21.i.i)
  %tobool22.not.i.i = icmp eq i64 %and21.i.i, 0
  br i1 %tobool22.not.i.i, label %if.else24.i.i, label %if.else20.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge

if.else20.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge: ; preds = %if.else20.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %btrfs_bg_type_to_raid_name.exit

if.else24.i.i:                                    ; preds = %if.else20.i.i
  call void @__sanitizer_cov_trace_pc() #25
  %and25.i.i = and i64 %4, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and25.i.i)
  %tobool26.not.i.i = icmp eq i64 %and25.i.i, 0
  %..i.i = select i1 %tobool26.not.i.i, i32 4, i32 6
  br label %btrfs_bg_type_to_raid_name.exit

btrfs_bg_type_to_raid_name.exit:                  ; preds = %if.else24.i.i, %if.else20.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge, %if.else16.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge, %if.else12.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge, %if.else8.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge, %if.else4.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge, %if.else.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge, %do.body.btrfs_bg_type_to_raid_name.exit_crit_edge
  %retval.0.i.i = phi i32 [ 0, %do.body.btrfs_bg_type_to_raid_name.exit_crit_edge ], [ 1, %if.else.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge ], [ 7, %if.else4.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge ], [ 8, %if.else8.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge ], [ 2, %if.else12.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge ], [ 3, %if.else16.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge ], [ 5, %if.else20.i.i.btrfs_bg_type_to_raid_name.exit_crit_edge ], [ %..i.i, %if.else24.i.i ]
  %raid_name.i = getelementptr [9 x %struct.btrfs_raid_attr], ptr @btrfs_raid_array, i32 0, i32 %retval.0.i.i, i32 9
  %call4 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %buf, i32 noundef 192, ptr noundef nonnull @.str.116, ptr noundef %raid_name.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 191, i32 %call4)
  %cmp5 = icmp ugt i32 %call4, 191
  br i1 %cmp5, label %btrfs_bg_type_to_raid_name.exit.cleanup.sink.split_crit_edge, label %if.end7

btrfs_bg_type_to_raid_name.exit.cleanup.sink.split_crit_edge: ; preds = %btrfs_bg_type_to_raid_name.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split

if.end7:                                          ; preds = %btrfs_bg_type_to_raid_name.exit
  call void @__sanitizer_cov_trace_pc() #25
  %sub = sub nuw nsw i32 192, %call4
  %add.ptr = getelementptr i8, ptr %buf, i32 %call4
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.end.if.end8_crit_edge
  %size_bp.0 = phi i32 [ %sub, %if.end7 ], [ 192, %if.end.if.end8_crit_edge ]
  %bp.0 = phi ptr [ %add.ptr, %if.end7 ], [ %buf, %if.end.if.end8_crit_edge ]
  %and9 = and i64 %1, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and9)
  %tobool10.not = icmp eq i64 %and9, 0
  br i1 %tobool10.not, label %if.end8.if.end23_crit_edge, label %do.body12

if.end8.if.end23_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end23

do.body12:                                        ; preds = %if.end8
  %call13 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %bp.0, i32 noundef %size_bp.0, ptr noundef nonnull @.str.117)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call13)
  %cmp14 = icmp sgt i32 %call13, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %size_bp.0, i32 %call13)
  %cmp16.not = icmp ugt i32 %size_bp.0, %call13
  %or.cond1 = and i1 %cmp14, %cmp16.not
  br i1 %or.cond1, label %if.end18, label %do.body12.out_overflow_crit_edge

do.body12.out_overflow_crit_edge:                 ; preds = %do.body12
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_overflow

if.end18:                                         ; preds = %do.body12
  call void @__sanitizer_cov_trace_pc() #25
  %sub19 = sub nsw i32 %size_bp.0, %call13
  %add.ptr20 = getelementptr i8, ptr %bp.0, i32 %call13
  br label %if.end23

if.end23:                                         ; preds = %if.end18, %if.end8.if.end23_crit_edge
  %size_bp.1 = phi i32 [ %sub19, %if.end18 ], [ %size_bp.0, %if.end8.if.end23_crit_edge ]
  %bp.1 = phi ptr [ %add.ptr20, %if.end18 ], [ %bp.0, %if.end8.if.end23_crit_edge ]
  %and24 = and i64 %1, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and24)
  %tobool25.not = icmp eq i64 %and24, 0
  br i1 %tobool25.not, label %if.end23.if.end39_crit_edge, label %if.then26

if.end23.if.end39_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end39

if.then26:                                        ; preds = %if.end23
  %5 = ptrtoint ptr %bargs to i32
  call void @__asan_loadN_noabort(i32 %5, i32 8)
  %6 = load i64, ptr %bargs, align 1
  call void @btrfs_describe_block_groups(i64 noundef %6, ptr noundef nonnull %tmp_buf, i32 noundef 128)
  %call29 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %bp.1, i32 noundef %size_bp.1, ptr noundef nonnull @.str.118, ptr noundef nonnull %tmp_buf)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call29)
  %cmp30 = icmp sgt i32 %call29, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %size_bp.1, i32 %call29)
  %cmp32.not = icmp ugt i32 %size_bp.1, %call29
  %or.cond2 = and i1 %cmp30, %cmp32.not
  br i1 %or.cond2, label %if.end34, label %if.then26.out_overflow_crit_edge

if.then26.out_overflow_crit_edge:                 ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_overflow

if.end34:                                         ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #25
  %sub35 = sub i32 %size_bp.1, %call29
  %add.ptr36 = getelementptr i8, ptr %bp.1, i32 %call29
  br label %if.end39

if.end39:                                         ; preds = %if.end34, %if.end23.if.end39_crit_edge
  %size_bp.2 = phi i32 [ %sub35, %if.end34 ], [ %size_bp.1, %if.end23.if.end39_crit_edge ]
  %bp.2 = phi ptr [ %add.ptr36, %if.end34 ], [ %bp.1, %if.end23.if.end39_crit_edge ]
  %and40 = and i64 %1, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and40)
  %tobool41.not = icmp eq i64 %and40, 0
  br i1 %tobool41.not, label %if.end39.if.end54_crit_edge, label %do.body43

if.end39.if.end54_crit_edge:                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end54

do.body43:                                        ; preds = %if.end39
  %7 = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs, i32 0, i32 1
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_loadN_noabort(i32 %8, i32 8)
  %9 = load i64, ptr %7, align 1
  %call44 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %bp.2, i32 noundef %size_bp.2, ptr noundef nonnull @.str.119, i64 noundef %9)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call44)
  %cmp45 = icmp sgt i32 %call44, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %size_bp.2, i32 %call44)
  %cmp47.not = icmp ugt i32 %size_bp.2, %call44
  %or.cond3 = and i1 %cmp45, %cmp47.not
  br i1 %or.cond3, label %if.end49, label %do.body43.out_overflow_crit_edge

do.body43.out_overflow_crit_edge:                 ; preds = %do.body43
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_overflow

if.end49:                                         ; preds = %do.body43
  call void @__sanitizer_cov_trace_pc() #25
  %sub50 = sub i32 %size_bp.2, %call44
  %add.ptr51 = getelementptr i8, ptr %bp.2, i32 %call44
  br label %if.end54

if.end54:                                         ; preds = %if.end49, %if.end39.if.end54_crit_edge
  %size_bp.3 = phi i32 [ %sub50, %if.end49 ], [ %size_bp.2, %if.end39.if.end54_crit_edge ]
  %bp.3 = phi ptr [ %add.ptr51, %if.end49 ], [ %bp.2, %if.end39.if.end54_crit_edge ]
  %and55 = and i64 %1, 1024
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and55)
  %tobool56.not = icmp eq i64 %and55, 0
  br i1 %tobool56.not, label %if.end54.if.end69_crit_edge, label %do.body58

if.end54.if.end69_crit_edge:                      ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end69

do.body58:                                        ; preds = %if.end54
  %10 = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs, i32 0, i32 1
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_loadN_noabort(i32 %11, i32 4)
  %12 = load i32, ptr %10, align 1
  %usage_max = getelementptr inbounds %struct.anon.81, ptr %10, i32 0, i32 1
  %13 = ptrtoint ptr %usage_max to i32
  call void @__asan_loadN_noabort(i32 %13, i32 4)
  %14 = load i32, ptr %usage_max, align 1
  %call59 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %bp.3, i32 noundef %size_bp.3, ptr noundef nonnull @.str.120, i32 noundef %12, i32 noundef %14)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call59)
  %cmp60 = icmp sgt i32 %call59, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %size_bp.3, i32 %call59)
  %cmp62.not = icmp ugt i32 %size_bp.3, %call59
  %or.cond4 = select i1 %cmp60, i1 %cmp62.not, i1 false
  br i1 %or.cond4, label %if.end64, label %do.body58.out_overflow_crit_edge

do.body58.out_overflow_crit_edge:                 ; preds = %do.body58
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_overflow

if.end64:                                         ; preds = %do.body58
  call void @__sanitizer_cov_trace_pc() #25
  %sub65 = sub i32 %size_bp.3, %call59
  %add.ptr66 = getelementptr i8, ptr %bp.3, i32 %call59
  br label %if.end69

if.end69:                                         ; preds = %if.end64, %if.end54.if.end69_crit_edge
  %size_bp.4 = phi i32 [ %sub65, %if.end64 ], [ %size_bp.3, %if.end54.if.end69_crit_edge ]
  %bp.4 = phi ptr [ %add.ptr66, %if.end64 ], [ %bp.3, %if.end54.if.end69_crit_edge ]
  %and70 = and i64 %1, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and70)
  %tobool71.not = icmp eq i64 %and70, 0
  br i1 %tobool71.not, label %if.end69.if.end84_crit_edge, label %do.body73

if.end69.if.end84_crit_edge:                      ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end84

do.body73:                                        ; preds = %if.end69
  %devid = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs, i32 0, i32 2
  %15 = ptrtoint ptr %devid to i32
  call void @__asan_loadN_noabort(i32 %15, i32 8)
  %16 = load i64, ptr %devid, align 1
  %call74 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %bp.4, i32 noundef %size_bp.4, ptr noundef nonnull @.str.121, i64 noundef %16)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call74)
  %cmp75 = icmp sgt i32 %call74, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %size_bp.4, i32 %call74)
  %cmp77.not = icmp ugt i32 %size_bp.4, %call74
  %or.cond5 = select i1 %cmp75, i1 %cmp77.not, i1 false
  br i1 %or.cond5, label %if.end79, label %do.body73.out_overflow_crit_edge

do.body73.out_overflow_crit_edge:                 ; preds = %do.body73
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_overflow

if.end79:                                         ; preds = %do.body73
  call void @__sanitizer_cov_trace_pc() #25
  %sub80 = sub i32 %size_bp.4, %call74
  %add.ptr81 = getelementptr i8, ptr %bp.4, i32 %call74
  br label %if.end84

if.end84:                                         ; preds = %if.end79, %if.end69.if.end84_crit_edge
  %size_bp.5 = phi i32 [ %sub80, %if.end79 ], [ %size_bp.4, %if.end69.if.end84_crit_edge ]
  %bp.5 = phi ptr [ %add.ptr81, %if.end79 ], [ %bp.4, %if.end69.if.end84_crit_edge ]
  %and85 = and i64 %1, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and85)
  %tobool86.not = icmp eq i64 %and85, 0
  br i1 %tobool86.not, label %if.end84.if.end99_crit_edge, label %do.body88

if.end84.if.end99_crit_edge:                      ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end99

do.body88:                                        ; preds = %if.end84
  %pstart = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs, i32 0, i32 3
  %17 = ptrtoint ptr %pstart to i32
  call void @__asan_loadN_noabort(i32 %17, i32 8)
  %18 = load i64, ptr %pstart, align 1
  %pend = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs, i32 0, i32 4
  %19 = ptrtoint ptr %pend to i32
  call void @__asan_loadN_noabort(i32 %19, i32 8)
  %20 = load i64, ptr %pend, align 1
  %call89 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %bp.5, i32 noundef %size_bp.5, ptr noundef nonnull @.str.122, i64 noundef %18, i64 noundef %20)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call89)
  %cmp90 = icmp sgt i32 %call89, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %size_bp.5, i32 %call89)
  %cmp92.not = icmp ugt i32 %size_bp.5, %call89
  %or.cond6 = select i1 %cmp90, i1 %cmp92.not, i1 false
  br i1 %or.cond6, label %if.end94, label %do.body88.out_overflow_crit_edge

do.body88.out_overflow_crit_edge:                 ; preds = %do.body88
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_overflow

if.end94:                                         ; preds = %do.body88
  call void @__sanitizer_cov_trace_pc() #25
  %sub95 = sub i32 %size_bp.5, %call89
  %add.ptr96 = getelementptr i8, ptr %bp.5, i32 %call89
  br label %if.end99

if.end99:                                         ; preds = %if.end94, %if.end84.if.end99_crit_edge
  %size_bp.6 = phi i32 [ %sub95, %if.end94 ], [ %size_bp.5, %if.end84.if.end99_crit_edge ]
  %bp.6 = phi ptr [ %add.ptr96, %if.end94 ], [ %bp.5, %if.end84.if.end99_crit_edge ]
  %and100 = and i64 %1, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and100)
  %tobool101.not = icmp eq i64 %and100, 0
  br i1 %tobool101.not, label %if.end99.if.end114_crit_edge, label %do.body103

if.end99.if.end114_crit_edge:                     ; preds = %if.end99
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end114

do.body103:                                       ; preds = %if.end99
  %vstart = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs, i32 0, i32 5
  %21 = ptrtoint ptr %vstart to i32
  call void @__asan_loadN_noabort(i32 %21, i32 8)
  %22 = load i64, ptr %vstart, align 1
  %vend = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs, i32 0, i32 6
  %23 = ptrtoint ptr %vend to i32
  call void @__asan_loadN_noabort(i32 %23, i32 8)
  %24 = load i64, ptr %vend, align 1
  %call104 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %bp.6, i32 noundef %size_bp.6, ptr noundef nonnull @.str.123, i64 noundef %22, i64 noundef %24)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call104)
  %cmp105 = icmp sgt i32 %call104, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %size_bp.6, i32 %call104)
  %cmp107.not = icmp ugt i32 %size_bp.6, %call104
  %or.cond7 = select i1 %cmp105, i1 %cmp107.not, i1 false
  br i1 %or.cond7, label %if.end109, label %do.body103.out_overflow_crit_edge

do.body103.out_overflow_crit_edge:                ; preds = %do.body103
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_overflow

if.end109:                                        ; preds = %do.body103
  call void @__sanitizer_cov_trace_pc() #25
  %sub110 = sub i32 %size_bp.6, %call104
  %add.ptr111 = getelementptr i8, ptr %bp.6, i32 %call104
  br label %if.end114

if.end114:                                        ; preds = %if.end109, %if.end99.if.end114_crit_edge
  %size_bp.7 = phi i32 [ %sub110, %if.end109 ], [ %size_bp.6, %if.end99.if.end114_crit_edge ]
  %bp.7 = phi ptr [ %add.ptr111, %if.end109 ], [ %bp.6, %if.end99.if.end114_crit_edge ]
  %and115 = and i64 %1, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and115)
  %tobool116.not = icmp eq i64 %and115, 0
  br i1 %tobool116.not, label %if.end114.if.end129_crit_edge, label %do.body118

if.end114.if.end129_crit_edge:                    ; preds = %if.end114
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end129

do.body118:                                       ; preds = %if.end114
  %25 = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs, i32 0, i32 9
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_loadN_noabort(i32 %26, i32 8)
  %27 = load i64, ptr %25, align 1
  %call119 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %bp.7, i32 noundef %size_bp.7, ptr noundef nonnull @.str.124, i64 noundef %27)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call119)
  %cmp120 = icmp sgt i32 %call119, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %size_bp.7, i32 %call119)
  %cmp122.not = icmp ugt i32 %size_bp.7, %call119
  %or.cond8 = select i1 %cmp120, i1 %cmp122.not, i1 false
  br i1 %or.cond8, label %if.end124, label %do.body118.out_overflow_crit_edge

do.body118.out_overflow_crit_edge:                ; preds = %do.body118
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_overflow

if.end124:                                        ; preds = %do.body118
  call void @__sanitizer_cov_trace_pc() #25
  %sub125 = sub i32 %size_bp.7, %call119
  %add.ptr126 = getelementptr i8, ptr %bp.7, i32 %call119
  br label %if.end129

if.end129:                                        ; preds = %if.end124, %if.end114.if.end129_crit_edge
  %size_bp.8 = phi i32 [ %sub125, %if.end124 ], [ %size_bp.7, %if.end114.if.end129_crit_edge ]
  %bp.8 = phi ptr [ %add.ptr126, %if.end124 ], [ %bp.7, %if.end114.if.end129_crit_edge ]
  %and130 = and i64 %1, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and130)
  %tobool131.not = icmp eq i64 %and130, 0
  br i1 %tobool131.not, label %if.end129.if.end144_crit_edge, label %do.body133

if.end129.if.end144_crit_edge:                    ; preds = %if.end129
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end144

do.body133:                                       ; preds = %if.end129
  %28 = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs, i32 0, i32 9
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_loadN_noabort(i32 %29, i32 4)
  %30 = load i32, ptr %28, align 1
  %limit_max = getelementptr inbounds %struct.anon.83, ptr %28, i32 0, i32 1
  %31 = ptrtoint ptr %limit_max to i32
  call void @__asan_loadN_noabort(i32 %31, i32 4)
  %32 = load i32, ptr %limit_max, align 1
  %call134 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %bp.8, i32 noundef %size_bp.8, ptr noundef nonnull @.str.125, i32 noundef %30, i32 noundef %32)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call134)
  %cmp135 = icmp sgt i32 %call134, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %size_bp.8, i32 %call134)
  %cmp137.not = icmp ugt i32 %size_bp.8, %call134
  %or.cond9 = select i1 %cmp135, i1 %cmp137.not, i1 false
  br i1 %or.cond9, label %if.end139, label %do.body133.out_overflow_crit_edge

do.body133.out_overflow_crit_edge:                ; preds = %do.body133
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_overflow

if.end139:                                        ; preds = %do.body133
  call void @__sanitizer_cov_trace_pc() #25
  %sub140 = sub i32 %size_bp.8, %call134
  %add.ptr141 = getelementptr i8, ptr %bp.8, i32 %call134
  br label %if.end144

if.end144:                                        ; preds = %if.end139, %if.end129.if.end144_crit_edge
  %size_bp.9 = phi i32 [ %sub140, %if.end139 ], [ %size_bp.8, %if.end129.if.end144_crit_edge ]
  %bp.9 = phi ptr [ %add.ptr141, %if.end139 ], [ %bp.8, %if.end129.if.end144_crit_edge ]
  %and145 = and i64 %1, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and145)
  %tobool146.not = icmp eq i64 %and145, 0
  br i1 %tobool146.not, label %if.end144.out_overflow_crit_edge, label %do.body148

if.end144.out_overflow_crit_edge:                 ; preds = %if.end144
  call void @__sanitizer_cov_trace_pc() #25
  br label %out_overflow

do.body148:                                       ; preds = %if.end144
  call void @__sanitizer_cov_trace_pc() #25
  %stripes_min = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs, i32 0, i32 10
  %33 = ptrtoint ptr %stripes_min to i32
  call void @__asan_loadN_noabort(i32 %33, i32 4)
  %34 = load i32, ptr %stripes_min, align 1
  %stripes_max = getelementptr inbounds %struct.btrfs_balance_args, ptr %bargs, i32 0, i32 11
  %35 = ptrtoint ptr %stripes_max to i32
  call void @__asan_loadN_noabort(i32 %35, i32 4)
  %36 = load i32, ptr %stripes_max, align 1
  %call149 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %bp.9, i32 noundef %size_bp.9, ptr noundef nonnull @.str.126, i32 noundef %34, i32 noundef %36)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call149)
  %cmp150 = icmp sgt i32 %call149, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %size_bp.9, i32 %call149)
  %cmp152.not = icmp ugt i32 %size_bp.9, %call149
  %or.cond10 = select i1 %cmp150, i1 %cmp152.not, i1 false
  %sub155 = select i1 %or.cond10, i32 %call149, i32 0
  %spec.select = sub i32 %size_bp.9, %sub155
  br label %out_overflow

out_overflow:                                     ; preds = %do.body148, %if.end144.out_overflow_crit_edge, %do.body133.out_overflow_crit_edge, %do.body118.out_overflow_crit_edge, %do.body103.out_overflow_crit_edge, %do.body88.out_overflow_crit_edge, %do.body73.out_overflow_crit_edge, %do.body58.out_overflow_crit_edge, %do.body43.out_overflow_crit_edge, %if.then26.out_overflow_crit_edge, %do.body12.out_overflow_crit_edge
  %size_bp.10 = phi i32 [ %size_bp.0, %do.body12.out_overflow_crit_edge ], [ %size_bp.1, %if.then26.out_overflow_crit_edge ], [ %size_bp.2, %do.body43.out_overflow_crit_edge ], [ %size_bp.3, %do.body58.out_overflow_crit_edge ], [ %size_bp.4, %do.body73.out_overflow_crit_edge ], [ %size_bp.5, %do.body88.out_overflow_crit_edge ], [ %size_bp.6, %do.body103.out_overflow_crit_edge ], [ %size_bp.7, %do.body118.out_overflow_crit_edge ], [ %size_bp.8, %do.body133.out_overflow_crit_edge ], [ %size_bp.9, %if.end144.out_overflow_crit_edge ], [ %spec.select, %do.body148 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 192, i32 %size_bp.10)
  %cmp160 = icmp ult i32 %size_bp.10, 192
  br i1 %cmp160, label %if.then161, label %out_overflow.cleanup.sink.split_crit_edge

out_overflow.cleanup.sink.split_crit_edge:        ; preds = %out_overflow
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup.sink.split

if.then161:                                       ; preds = %out_overflow
  call void @__sanitizer_cov_trace_pc() #25
  %sub163 = sub nuw nsw i32 191, %size_bp.10
  %arrayidx = getelementptr i8, ptr %buf, i32 %sub163
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.then161, %out_overflow.cleanup.sink.split_crit_edge, %btrfs_bg_type_to_raid_name.exit.cleanup.sink.split_crit_edge
  %arrayidx.sink = phi ptr [ %arrayidx, %if.then161 ], [ %buf, %btrfs_bg_type_to_raid_name.exit.cleanup.sink.split_crit_edge ], [ %buf, %out_overflow.cleanup.sink.split_crit_edge ]
  %37 = ptrtoint ptr %arrayidx.sink to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 0, ptr %arrayidx.sink, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %tmp_buf) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_start_transaction_fallback_global_rsv(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_get_32(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @find_first_extent_bit(ptr noundef, i64 noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_join_transaction(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_force_chunk_alloc(ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @clear_extent_bit(ptr noundef, i64 noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rb_last(ptr noundef) local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #15

; Function Attrs: null_pointer_is_valid
declare dso_local void @sort(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @btrfs_cmp_device_info(ptr nocapture noundef readonly %a, ptr nocapture noundef readonly %b) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %max_avail = getelementptr inbounds %struct.btrfs_device_info, ptr %a, i32 0, i32 2
  %0 = ptrtoint ptr %max_avail to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %max_avail, align 8
  %max_avail1 = getelementptr inbounds %struct.btrfs_device_info, ptr %b, i32 0, i32 2
  %2 = ptrtoint ptr %max_avail1 to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %max_avail1, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %1, i64 %3)
  %cmp = icmp ugt i64 %1, %3
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_cmp8(i64 %1, i64 %3)
  %cmp4 = icmp ult i64 %1, %3
  br i1 %cmp4, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %total_avail = getelementptr inbounds %struct.btrfs_device_info, ptr %a, i32 0, i32 3
  %4 = ptrtoint ptr %total_avail to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %total_avail, align 8
  %total_avail7 = getelementptr inbounds %struct.btrfs_device_info, ptr %b, i32 0, i32 3
  %6 = ptrtoint ptr %total_avail7 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %total_avail7, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %5, i64 %7)
  %cmp8 = icmp ugt i64 %5, %7
  br i1 %cmp8, label %if.end6.cleanup_crit_edge, label %if.end10

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end10:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #25
  call void @__sanitizer_cov_trace_cmp8(i64 %5, i64 %7)
  %cmp13 = icmp ult i64 %5, %7
  %. = zext i1 %cmp13 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %if.end6.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -1, %entry.cleanup_crit_edge ], [ 1, %if.end.cleanup_crit_edge ], [ -1, %if.end6.cleanup_crit_edge ], [ %., %if.end10 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_btrfs_chunk_alloc(ptr noundef %fs_info, ptr noundef %map, i64 noundef %offset, i64 noundef %size) unnamed_addr #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_btrfs_chunk_alloc, i32 0, i32 1), ptr blockaddress(@trace_btrfs_chunk_alloc, %do.body)) #23
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !423

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.105, i32 noundef 108, i32 noundef 9, ptr noundef null) #23
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #25
  %9 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !516
  %call42 = tail call i32 @__traceiter_btrfs_chunk_alloc(ptr noundef null, ptr noundef %fs_info, ptr noundef %map, i64 noundef %offset, i64 noundef %size) #23
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !517
  %13 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #25
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !423

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #25
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.105, i32 noundef 108, i32 noundef 9, ptr noundef null) #23
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !483
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_btrfs_chunk_alloc, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_btrfs_chunk_alloc, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_btrfs_chunk_alloc.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @trace_btrfs_chunk_alloc.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.104, i32 noundef 1007, ptr noundef nonnull @.str.13) #23
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #23, !srcloc !484
  %31 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_extent_map() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @add_extent_mapping(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_make_block_group(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_btrfs_chunk_alloc(ptr noundef, ptr noundef, ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @find_live_mirror(ptr noundef %fs_info, ptr nocapture noundef readonly %map, i32 noundef %first, i32 noundef %dev_replace_is_ongoing) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %map to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %map, align 8
  %and = and i64 %1, 1616
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %cond.false, label %cond.end, !prof !424

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.148, i32 noundef 5843) #32
  unreachable

cond.end:                                         ; preds = %entry
  %and4 = and i64 %1, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and4)
  %tobool5.not = icmp eq i64 %and4, 0
  %sub_stripes = getelementptr inbounds %struct.map_lookup, ptr %map, i32 0, i32 5
  %num_stripes6 = getelementptr inbounds %struct.map_lookup, ptr %map, i32 0, i32 4
  %num_stripes.0.in = select i1 %tobool5.not, ptr %num_stripes6, ptr %sub_stripes
  %2 = ptrtoint ptr %num_stripes.0.in to i32
  call void @__asan_load4_noabort(i32 %2)
  %num_stripes.0 = load i32, ptr %num_stripes.0.in, align 4
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %3 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_devices, align 8
  %read_policy = getelementptr inbounds %struct.btrfs_fs_devices, ptr %4, i32 0, i32 25
  %5 = ptrtoint ptr %read_policy to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %read_policy, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cond = icmp eq i32 %6, 0
  br i1 %cond, label %cond.end.sw.bb_crit_edge, label %do.body

cond.end.sw.bb_crit_edge:                         ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %sw.bb

do.body:                                          ; preds = %cond.end
  %call = tail call i32 @___ratelimit(ptr noundef nonnull @find_live_mirror._rs, ptr noundef nonnull @__func__.find_live_mirror) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool7.not = icmp eq i32 %call, 0
  br i1 %tobool7.not, label %do.body.do.end_crit_edge, label %if.then8

do.body.do.end_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #25
  br label %do.end

if.then8:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #25
  %7 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fs_devices, align 8
  %read_policy10 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %8, i32 0, i32 25
  %9 = ptrtoint ptr %read_policy10 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %read_policy10, align 4
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.150, i32 noundef %10) #28
  br label %do.end

do.end:                                           ; preds = %if.then8, %do.body.do.end_crit_edge
  %11 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %fs_devices, align 8
  %read_policy13 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %12, i32 0, i32 25
  %13 = ptrtoint ptr %read_policy13 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %read_policy13, align 4
  br label %sw.bb

sw.bb:                                            ; preds = %do.end, %cond.end.sw.bb_crit_edge
  %14 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 2
  %16 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %17, i32 0, i32 68
  %18 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %pid, align 8
  %rem = srem i32 %19, %num_stripes.0
  %add = add i32 %rem, %first
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dev_replace_is_ongoing)
  %tobool15.not = icmp eq i32 %dev_replace_is_ongoing, 0
  br i1 %tobool15.not, label %sw.bb.if.end20_crit_edge, label %land.lhs.true

sw.bb.if.end20_crit_edge:                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end20

land.lhs.true:                                    ; preds = %sw.bb
  %cont_reading_from_srcdev_mode = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 154, i32 9
  %20 = ptrtoint ptr %cont_reading_from_srcdev_mode to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %cont_reading_from_srcdev_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %21)
  %cmp = icmp eq i64 %21, 1
  br i1 %cmp, label %if.then16, label %land.lhs.true.if.end20_crit_edge

land.lhs.true.if.end20_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end20

if.then16:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #25
  %srcdev18 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 154, i32 12
  %22 = ptrtoint ptr %srcdev18 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %srcdev18, align 8
  br label %if.end20

if.end20:                                         ; preds = %if.then16, %land.lhs.true.if.end20_crit_edge, %sw.bb.if.end20_crit_edge
  %srcdev.0 = phi ptr [ %23, %if.then16 ], [ null, %land.lhs.true.if.end20_crit_edge ], [ null, %sw.bb.if.end20_crit_edge ]
  %arrayidx = getelementptr %struct.map_lookup, ptr %map, i32 0, i32 7, i32 %add
  %24 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx, align 8
  %bdev = getelementptr inbounds %struct.btrfs_device, ptr %25, i32 0, i32 7
  %26 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %bdev, align 8
  %tobool22.not = icmp eq ptr %27, null
  %cmp28.not = icmp ne ptr %25, %srcdev.0
  %add32 = add i32 %num_stripes.0, %first
  call void @__sanitizer_cov_trace_cmp4(i32 %add32, i32 %first)
  %cmp3385 = icmp sgt i32 %add32, %first
  %not.tobool22.not = xor i1 %tobool22.not, true
  %or.cond91 = select i1 %not.tobool22.not, i1 %cmp28.not, i1 false
  %cmp3385.not100 = xor i1 %cmp3385, true
  %brmerge101 = select i1 %or.cond91, i1 true, i1 %cmp3385.not100
  br i1 %brmerge101, label %if.end20.cleanup_crit_edge, label %if.end20.for.body34_crit_edge

if.end20.for.body34_crit_edge:                    ; preds = %if.end20
  br label %for.body34

if.end20.cleanup_crit_edge:                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

for.body34:                                       ; preds = %for.inc.for.body34_crit_edge, %if.end20.for.body34_crit_edge
  %i.086 = phi i32 [ %inc, %for.inc.for.body34_crit_edge ], [ %first, %if.end20.for.body34_crit_edge ]
  %arrayidx36 = getelementptr %struct.map_lookup, ptr %map, i32 0, i32 7, i32 %i.086
  %28 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx36, align 8
  %bdev38 = getelementptr inbounds %struct.btrfs_device, ptr %29, i32 0, i32 7
  %30 = ptrtoint ptr %bdev38 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %bdev38, align 8
  %tobool39.not = icmp eq ptr %31, null
  %cmp46.not = icmp eq ptr %29, %srcdev.0
  %or.cond92 = select i1 %tobool39.not, i1 true, i1 %cmp46.not
  br i1 %or.cond92, label %for.inc, label %for.body34.cleanup_crit_edge

for.body34.cleanup_crit_edge:                     ; preds = %for.body34
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

for.inc:                                          ; preds = %for.body34
  %inc = add i32 %i.086, 1
  %exitcond.not = icmp eq i32 %inc, %add32
  br i1 %exitcond.not, label %for.inc49, label %for.inc.for.body34_crit_edge

for.inc.for.body34_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body34

for.inc49:                                        ; preds = %for.inc
  %32 = select i1 %tobool22.not, i1 %cmp3385, i1 false
  br i1 %32, label %for.inc49.for.body34.1_crit_edge, label %for.inc49.cleanup_crit_edge

for.inc49.cleanup_crit_edge:                      ; preds = %for.inc49
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

for.inc49.for.body34.1_crit_edge:                 ; preds = %for.inc49
  br label %for.body34.1

for.body34.1:                                     ; preds = %for.inc.1.for.body34.1_crit_edge, %for.inc49.for.body34.1_crit_edge
  %i.086.1 = phi i32 [ %inc.1, %for.inc.1.for.body34.1_crit_edge ], [ %first, %for.inc49.for.body34.1_crit_edge ]
  %arrayidx36.1 = getelementptr %struct.map_lookup, ptr %map, i32 0, i32 7, i32 %i.086.1
  %33 = ptrtoint ptr %arrayidx36.1 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx36.1, align 8
  %bdev38.1 = getelementptr inbounds %struct.btrfs_device, ptr %34, i32 0, i32 7
  %35 = ptrtoint ptr %bdev38.1 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %bdev38.1, align 8
  %tobool39.not.1 = icmp eq ptr %36, null
  br i1 %tobool39.not.1, label %for.inc.1, label %for.body34.1.cleanup_crit_edge

for.body34.1.cleanup_crit_edge:                   ; preds = %for.body34.1
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

for.inc.1:                                        ; preds = %for.body34.1
  %inc.1 = add i32 %i.086.1, 1
  %exitcond.1.not = icmp eq i32 %inc.1, %add32
  br i1 %exitcond.1.not, label %for.inc.1.cleanup_crit_edge, label %for.inc.1.for.body34.1_crit_edge

for.inc.1.for.body34.1_crit_edge:                 ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #25
  br label %for.body34.1

for.inc.1.cleanup_crit_edge:                      ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

cleanup:                                          ; preds = %for.inc.1.cleanup_crit_edge, %for.body34.1.cleanup_crit_edge, %for.inc49.cleanup_crit_edge, %for.body34.cleanup_crit_edge, %if.end20.cleanup_crit_edge
  %retval.0 = phi i32 [ %add, %for.inc49.cleanup_crit_edge ], [ %add, %if.end20.cleanup_crit_edge ], [ %add, %for.inc.1.cleanup_crit_edge ], [ %i.086.1, %for.body34.1.cleanup_crit_edge ], [ %i.086, %for.body34.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_bio_counter_sub(ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_endio(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @btrfs_end_bio(ptr noundef %bio) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %bi_private = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 11
  %0 = ptrtoint ptr %bi_private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bi_private, align 4
  %bi_status = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 6
  %2 = ptrtoint ptr %bi_status to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %bi_status, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.if.end26_crit_edge, label %if.then

entry.if.end26_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26

if.then:                                          ; preds = %entry
  %error = getelementptr inbounds %struct.btrfs_io_context, ptr %1, i32 0, i32 7
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %error, i32 noundef 4) #23
  tail call void @llvm.prefetch.p0(ptr %error, i32 1, i32 3, i32 1) #23
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %error, ptr %error, i32 1, ptr elementtype(i32) %error) #23, !srcloc !494
  %5 = ptrtoint ptr %bi_status to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %bi_status, align 2
  %7 = zext i8 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.218)
  switch i8 %6, label %if.then.if.end26_crit_edge [
    i8 10, label %if.then.if.then7_crit_edge
    i8 5, label %if.then.if.then7_crit_edge85
  ]

if.then.if.then7_crit_edge85:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then7

if.then.if.then7_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.then7

if.then.if.end26_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26

if.then7:                                         ; preds = %if.then.if.then7_crit_edge, %if.then.if.then7_crit_edge85
  %device = getelementptr i8, ptr %bio, i32 -92
  %8 = ptrtoint ptr %device to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %device, align 4
  %bdev = getelementptr inbounds %struct.btrfs_device, ptr %9, i32 0, i32 7
  %10 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %bdev, align 8
  %tobool8.not = icmp eq ptr %11, null
  br i1 %tobool8.not, label %cond.false, label %cond.end, !prof !424

cond.false:                                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #25
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.155, i32 noundef 6682) #32
  unreachable

cond.end:                                         ; preds = %if.then7
  %bi_opf.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 2
  %12 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %bi_opf.i, align 8
  %trunc.i = trunc i32 %13 to i8
  %14 = zext i8 %trunc.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.219)
  switch i8 %trunc.i, label %land.end.i [
    i8 3, label %cond.end.if.else_crit_edge
    i8 1, label %cond.end.if.end18.sink.split_crit_edge
    i8 13, label %cond.end.if.end18.sink.split_crit_edge86
    i8 0, label %cond.end.if.else_crit_edge87
  ]

cond.end.if.else_crit_edge87:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

cond.end.if.end18.sink.split_crit_edge86:         ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end18.sink.split

cond.end.if.end18.sink.split_crit_edge:           ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end18.sink.split

cond.end.if.else_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

land.end.i:                                       ; preds = %cond.end
  %.b37.i = load i1, ptr @btrfs_op.__already_done, align 1
  br i1 %.b37.i, label %land.end.i.if.else_crit_edge, label %if.then.i, !prof !423

land.end.i.if.else_crit_edge:                     ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.else

if.then.i:                                        ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #25
  store i1 true, ptr @btrfs_op.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 479, i32 noundef 9, ptr noundef null) #23
  br label %if.else

if.else:                                          ; preds = %if.then.i, %land.end.i.if.else_crit_edge, %cond.end.if.else_crit_edge, %cond.end.if.else_crit_edge87
  %15 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %bi_opf.i, align 8
  %17 = and i32 %16, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool16.not = icmp eq i32 %17, 0
  br i1 %tobool16.not, label %if.else.if.end18.sink.split_crit_edge, label %if.else.if.end18_crit_edge

if.else.if.end18_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end18

if.else.if.end18.sink.split_crit_edge:            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end18.sink.split

if.end18.sink.split:                              ; preds = %if.else.if.end18.sink.split_crit_edge, %cond.end.if.end18.sink.split_crit_edge, %cond.end.if.end18.sink.split_crit_edge86
  %.sink84 = phi i32 [ 0, %cond.end.if.end18.sink.split_crit_edge ], [ 0, %cond.end.if.end18.sink.split_crit_edge86 ], [ 1, %if.else.if.end18.sink.split_crit_edge ]
  tail call void @btrfs_dev_stat_inc_and_print(ptr noundef %9, i32 noundef %.sink84)
  br label %if.end18

if.end18:                                         ; preds = %if.end18.sink.split, %if.else.if.end18_crit_edge
  %18 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %bi_opf.i, align 8
  %20 = and i32 %19, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool22.not = icmp eq i32 %20, 0
  br i1 %tobool22.not, label %if.end18.if.end26_crit_edge, label %if.then23

if.end18.if.end26_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end26

if.then23:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @btrfs_dev_stat_inc_and_print(ptr noundef %9, i32 noundef 2)
  br label %if.end26

if.end26:                                         ; preds = %if.then23, %if.end18.if.end26_crit_edge, %if.then.if.end26_crit_edge, %entry.if.end26_crit_edge
  %orig_bio = getelementptr inbounds %struct.btrfs_io_context, ptr %1, i32 0, i32 5
  %21 = ptrtoint ptr %orig_bio to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %orig_bio, align 4
  %cmp27 = icmp eq ptr %22, %bio
  %fs_info = getelementptr inbounds %struct.btrfs_io_context, ptr %1, i32 0, i32 2
  %23 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %fs_info, align 8
  tail call void @btrfs_bio_counter_sub(ptr noundef %24, i64 noundef 1) #23
  %stripes_pending = getelementptr inbounds %struct.btrfs_io_context, ptr %1, i32 0, i32 1
  %call.i.i79 = tail call zeroext i1 @__kasan_check_write(ptr noundef %stripes_pending, i32 noundef 4) #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !428
  tail call void @llvm.prefetch.p0(ptr %stripes_pending, i32 1, i32 3, i32 1) #23
  %25 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %stripes_pending, ptr %stripes_pending, i32 1, ptr elementtype(i32) %stripes_pending) #23, !srcloc !429
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %25, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !430
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i, label %if.then32, label %if.else48

if.then32:                                        ; preds = %if.end26
  br i1 %cmp27, label %if.then32.if.end36_crit_edge, label %if.then34

if.then32.if.end36_crit_edge:                     ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end36

if.then34:                                        ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @bio_put(ptr noundef %bio) #23
  %26 = ptrtoint ptr %orig_bio to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %orig_bio, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %if.then32.if.end36_crit_edge
  %bio.addr.0 = phi ptr [ %bio, %if.then32.if.end36_crit_edge ], [ %27, %if.then34 ]
  %mirror_num = getelementptr inbounds %struct.btrfs_io_context, ptr %1, i32 0, i32 10
  %28 = ptrtoint ptr %mirror_num to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %mirror_num, align 8
  %add.ptr.i81 = getelementptr i8, ptr %bio.addr.0, i32 -96
  %30 = ptrtoint ptr %add.ptr.i81 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %add.ptr.i81, align 8
  %error39 = getelementptr inbounds %struct.btrfs_io_context, ptr %1, i32 0, i32 7
  %call.i.i80 = tail call zeroext i1 @__kasan_check_read(ptr noundef %error39, i32 noundef 4) #23
  %31 = ptrtoint ptr %error39 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %error39, align 4
  %max_errors = getelementptr inbounds %struct.btrfs_io_context, ptr %1, i32 0, i32 8
  %33 = ptrtoint ptr %max_errors to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %max_errors, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %32, i32 %34)
  %cmp41 = icmp sgt i32 %32, %34
  %spec.select = select i1 %cmp41, i8 10, i8 0
  %35 = getelementptr inbounds %struct.bio, ptr %bio.addr.0, i32 0, i32 6
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 %spec.select, ptr %35, align 2
  %private.i = getelementptr inbounds %struct.btrfs_io_context, ptr %1, i32 0, i32 6
  %37 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %private.i, align 8
  %bi_private.i = getelementptr inbounds %struct.bio, ptr %bio.addr.0, i32 0, i32 11
  %39 = ptrtoint ptr %bi_private.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %38, ptr %bi_private.i, align 4
  %end_io.i = getelementptr inbounds %struct.btrfs_io_context, ptr %1, i32 0, i32 4
  %40 = ptrtoint ptr %end_io.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %end_io.i, align 8
  %bi_end_io.i = getelementptr inbounds %struct.bio, ptr %bio.addr.0, i32 0, i32 10
  %42 = ptrtoint ptr %bi_end_io.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %41, ptr %bi_end_io.i, align 8
  tail call void @bio_endio(ptr noundef %bio.addr.0) #23
  %tobool.not.i.i = icmp eq ptr %1, null
  br i1 %tobool.not.i.i, label %if.end36.if.end52_crit_edge, label %if.end.i.i

if.end36.if.end52_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end52

if.end.i.i:                                       ; preds = %if.end36
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %1, i32 noundef 4) #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !500
  tail call void @llvm.prefetch.p0(ptr nonnull %1, i32 1, i32 3, i32 1) #23
  %43 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %1, ptr nonnull %1, i32 1, ptr nonnull elementtype(i32) %1) #23, !srcloc !501
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %43, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then1.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.if.end52_crit_edge, label %if.then10.i.i.i.i.i, !prof !423

if.end5.i.i.i.i.i.if.end52_crit_edge:             ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end52

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @refcount_warn_saturate(ptr noundef nonnull %1, i32 noundef 3) #23
  br label %if.end52

if.then1.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #25
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #23, !srcloc !502
  tail call void @kfree(ptr noundef nonnull %1) #23
  br label %if.end52

if.else48:                                        ; preds = %if.end26
  br i1 %cmp27, label %if.else48.if.end52_crit_edge, label %if.then50

if.else48.if.end52_crit_edge:                     ; preds = %if.else48
  call void @__sanitizer_cov_trace_pc() #25
  br label %if.end52

if.then50:                                        ; preds = %if.else48
  call void @__sanitizer_cov_trace_pc() #25
  tail call void @bio_put(ptr noundef %bio) #23
  br label %if.end52

if.end52:                                         ; preds = %if.then50, %if.else48.if.end52_crit_edge, %if.then1.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.if.end52_crit_edge, %if.end36.if.end52_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_bio_counter_inc_noblocked(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfsic_submit_bio(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_associate_blkg(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @btrfs_get_16(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_check_chunk_valid(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @add_missing_dev(ptr noundef %fs_devices, i64 noundef %devid, ptr noundef %dev_uuid) unnamed_addr #4 align 64 {
entry:
  %devid.addr = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #25
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %devid.addr to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 %devid, ptr %devid.addr, align 8
  %1 = tail call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %flags1.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %flags1.i, align 4
  %and.i = and i32 %6, 262144
  %or.i = or i32 %6, 262144
  store i32 %or.i, ptr %flags1.i, align 4
  %call1 = call ptr @btrfs_alloc_device(ptr noundef null, ptr noundef nonnull %devid.addr, ptr noundef %dev_uuid)
  %7 = call i32 @llvm.read_register.i32(metadata !413) #23
  %and.i.i14 = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i14 to ptr
  %task.i15 = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %task.i15 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %task.i15, align 8
  %flags1.i16 = getelementptr inbounds %struct.task_struct, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %flags1.i16 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %flags1.i16, align 4
  %and.i17 = and i32 %12, -262145
  %or.i18 = or i32 %and.i17, %and.i
  store i32 %or.i18, ptr %flags1.i16, align 4
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #25
  br label %cleanup

if.end:                                           ; preds = %entry
  %devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 13
  %13 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %devices, align 4
  %call.i.i = call zeroext i1 @__list_add_valid(ptr noundef %call1, ptr noundef %devices, ptr noundef %14) #23
  br i1 %call.i.i, label %if.end.i.i, label %if.end.list_add.exit_crit_edge

if.end.list_add.exit_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #25
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %call1, ptr %prev1.i.i, align 4
  %16 = ptrtoint ptr %call1 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %14, ptr %call1, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %call1, i32 0, i32 1
  %17 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %devices, ptr %prev3.i.i, align 4
  %18 = ptrtoint ptr %devices to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %call1, ptr %devices, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end.list_add.exit_crit_edge
  %fs_devices3 = getelementptr inbounds %struct.btrfs_device, ptr %call1, i32 0, i32 3
  %19 = ptrtoint ptr %fs_devices3 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %fs_devices, ptr %fs_devices3, align 8
  %num_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 4
  %20 = ptrtoint ptr %num_devices to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %num_devices, align 8
  %inc = add i64 %21, 1
  store i64 %inc, ptr %num_devices, align 8
  %dev_state = getelementptr inbounds %struct.btrfs_device, ptr %call1, i32 0, i32 10
  call void @_set_bit(i32 noundef 2, ptr noundef %dev_state) #23
  %missing_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %fs_devices, i32 0, i32 7
  %22 = ptrtoint ptr %missing_devices to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %missing_devices, align 8
  %inc4 = add i64 %23, 1
  store i64 %inc4, ptr %missing_devices, align 8
  br label %cleanup

cleanup:                                          ; preds = %list_add.exit, %entry.cleanup_crit_edge
  ret ptr %call1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_err_32bit_limit(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_warn_32bit_limit(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_next_old_leaf(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_readahead_node_child(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #21

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rb_next(ptr noundef) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #22

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #15

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctpop.i64(i64) #15

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #15

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.usub.sat.i64(i64, i64) #15

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umin.i64(i64, i64) #15

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.uadd.sat.i64(i64, i64) #15

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #23

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memmove(ptr, ptr, i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_handle_no_return()

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #24 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 189)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #24 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 189)
  ret void
}

attributes #0 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { cold inlinehint noreturn nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #16 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #17 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #21 = { nounwind readonly }
attributes #22 = { argmemonly nofree nounwind readonly willreturn }
attributes #23 = { nounwind }
attributes #24 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #25 = { nomerge }
attributes #26 = { cold noreturn nounwind }
attributes #27 = { nobuiltin nounwind }
attributes #28 = { cold nounwind }
attributes #29 = { nounwind allocsize(2) }
attributes #30 = { nounwind allocsize(0) }
attributes #31 = { nobuiltin }
attributes #32 = { cold noreturn }
attributes #33 = { nounwind readonly willreturn }
attributes #34 = { cold }
attributes #35 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !4, !6, !7, !9, !11, !13, !15, !17, !18, !19, !21, !23, !25, !27, !28, !29, !31, !33, !35, !37, !38, !40, !41, !42, !43, !44, !45, !47, !49, !51, !53, !55, !57, !59, !61, !62, !64, !66, !68, !70, !72, !74, !76, !78, !80, !82, !84, !86, !88, !90, !92, !94, !96, !98, !100, !102, !104, !106, !108, !109, !111, !113, !115, !117, !118, !120, !121, !122, !123, !125, !127, !128, !130, !132, !134, !136, !138, !139, !141, !143, !145, !147, !149, !151, !153, !155, !157, !159, !161, !163, !165, !167, !169, !171, !173, !175, !177, !179, !181, !182, !183, !184, !186, !188, !190, !191, !192, !193, !195, !196, !197, !199, !201, !202, !204, !206, !207, !209, !211, !212, !213, !214, !215, !217, !219, !221, !223, !225, !226, !227, !229, !230, !232, !233, !235, !237, !238, !240, !241, !243, !244, !246, !248, !249, !250, !252, !253, !255, !257, !259, !260, !262, !264, !266, !268, !269, !270, !272, !274, !276, !278, !280, !282, !284, !286, !288, !290, !292, !294, !296, !298, !300, !302, !304, !305, !306, !307, !309, !311, !312, !313, !314, !316, !318, !320, !321, !323, !325, !327, !329, !331, !333, !335, !337, !339, !341, !342, !343, !344, !346, !347, !349, !350, !351, !352, !353, !355, !357, !359, !361, !363, !365, !366, !367, !369, !370, !372, !374, !376, !378, !379, !381, !382, !384, !385, !387, !388, !390, !391, !392, !393, !395, !397, !399, !401, !403, !405, !407, !409, !411}
!llvm.named.register.sp = !{!413}
!llvm.module.flags = !{!414, !415, !416, !417, !418, !419, !420, !421}
!llvm.ident = !{!422}

!0 = !{ptr @btrfs_raid_array, !1, !"btrfs_raid_array", i1 false, i1 false}
!1 = !{!"../fs/btrfs/volumes.c", i32 41, i32 30}
!2 = !{ptr @.str, !3, !"<string literal>", i1 false, i1 false}
!3 = !{!"../fs/btrfs/volumes.c", i32 210, i32 14}
!4 = !{ptr @.str.1, !5, !"<string literal>", i1 false, i1 false}
!5 = !{!"../fs/btrfs/volumes.c", i32 226, i32 2}
!6 = !{ptr @.str.2, !5, !"<string literal>", i1 false, i1 false}
!7 = !{ptr @.str.3, !8, !"<string literal>", i1 false, i1 false}
!8 = !{!"../fs/btrfs/volumes.c", i32 227, i32 2}
!9 = !{ptr @.str.4, !10, !"<string literal>", i1 false, i1 false}
!10 = !{!"../fs/btrfs/volumes.c", i32 228, i32 2}
!11 = !{ptr @.str.5, !12, !"<string literal>", i1 false, i1 false}
!12 = !{!"../fs/btrfs/volumes.c", i32 230, i32 2}
!13 = !{ptr @.str.6, !14, !"<string literal>", i1 false, i1 false}
!14 = !{!"../fs/btrfs/volumes.c", i32 237, i32 31}
!15 = !{ptr @.str.7, !16, !"<string literal>", i1 false, i1 false}
!16 = !{!"../fs/btrfs/volumes.c", i32 361, i32 1}
!17 = !{ptr @.str.8, !16, !"<string literal>", i1 false, i1 false}
!18 = !{ptr @uuid_mutex, !16, !"uuid_mutex", i1 false, i1 false}
!19 = !{ptr @.str.9, !20, !"<string literal>", i1 false, i1 false}
!20 = !{!"../fs/btrfs/volumes.c", i32 405, i32 2}
!21 = !{ptr @.str.10, !22, !"<string literal>", i1 false, i1 false}
!22 = !{!"../fs/btrfs/volumes.c", i32 2022, i32 2}
!23 = !{ptr @.str.11, !24, !"<string literal>", i1 false, i1 false}
!24 = !{!"../fs/btrfs/volumes.c", i32 2081, i32 4}
!25 = !{ptr @.str.12, !26, !"<string literal>", i1 false, i1 false}
!26 = !{!"../fs/btrfs/volumes.c", i32 2126, i32 3}
!27 = distinct !{null, !26, !"__warned", i1 false, i1 false}
!28 = !{ptr @.str.13, !26, !"<string literal>", i1 false, i1 false}
!29 = !{ptr @.str.14, !30, !"<string literal>", i1 false, i1 false}
!30 = !{!"../fs/btrfs/volumes.c", i32 2240, i32 3}
!31 = !{ptr @.str.15, !32, !"<string literal>", i1 false, i1 false}
!32 = !{!"../fs/btrfs/volumes.c", i32 2304, i32 3}
!33 = !{ptr @.str.16, !34, !"<string literal>", i1 false, i1 false}
!34 = !{!"../fs/btrfs/volumes.c", i32 2368, i32 20}
!35 = distinct !{null, !36, !"__warned", i1 false, i1 false}
!36 = !{!"../fs/btrfs/volumes.c", i32 2646, i32 2}
!37 = !{ptr @.str.17, !36, !"<string literal>", i1 false, i1 false}
!38 = !{ptr @.str.18, !39, !"<string literal>", i1 false, i1 false}
!39 = !{!"../fs/btrfs/volumes.c", i32 2705, i32 4}
!40 = !{ptr @.str.19, !39, !"<string literal>", i1 false, i1 false}
!41 = !{ptr @.str.20, !39, !"<string literal>", i1 false, i1 false}
!42 = !{ptr @.str.21, !39, !"<string literal>", i1 false, i1 false}
!43 = !{ptr @btrfs_init_new_device.__UNIQUE_ID_ddebug961, !39, !"__UNIQUE_ID_ddebug961", i1 false, i1 false}
!44 = !{ptr @.str.22, !39, !"<string literal>", i1 false, i1 false}
!45 = !{ptr @btrfs_init_new_device.__UNIQUE_ID_ddebug962, !46, !"__UNIQUE_ID_ddebug962", i1 false, i1 false}
!46 = !{!"../fs/btrfs/volumes.c", i32 2760, i32 4}
!47 = !{ptr @btrfs_init_new_device.__UNIQUE_ID_ddebug963, !48, !"__UNIQUE_ID_ddebug963", i1 false, i1 false}
!48 = !{!"../fs/btrfs/volumes.c", i32 2767, i32 3}
!49 = !{ptr @btrfs_init_new_device.__UNIQUE_ID_ddebug964, !50, !"__UNIQUE_ID_ddebug964", i1 false, i1 false}
!50 = !{!"../fs/btrfs/volumes.c", i32 2774, i32 4}
!51 = !{ptr @.str.23, !52, !"<string literal>", i1 false, i1 false}
!52 = !{!"../fs/btrfs/volumes.c", i32 2797, i32 4}
!53 = !{ptr @.str.24, !54, !"<string literal>", i1 false, i1 false}
!54 = !{!"../fs/btrfs/volumes.c", i32 3049, i32 3}
!55 = !{ptr @.str.25, !56, !"<string literal>", i1 false, i1 false}
!56 = !{!"../fs/btrfs/volumes.c", i32 3055, i32 3}
!57 = !{ptr @.str.26, !58, !"<string literal>", i1 false, i1 false}
!58 = !{!"../fs/btrfs/volumes.c", i32 3105, i32 3}
!59 = !{ptr @.str.27, !60, !"<string literal>", i1 false, i1 false}
!60 = !{!"../fs/btrfs/volumes.c", i32 3128, i32 4}
!61 = !{ptr @btrfs_remove_chunk.__UNIQUE_ID_ddebug965, !60, !"__UNIQUE_ID_ddebug965", i1 false, i1 false}
!62 = !{ptr @btrfs_remove_chunk.__UNIQUE_ID_ddebug966, !63, !"__UNIQUE_ID_ddebug966", i1 false, i1 false}
!63 = !{!"../fs/btrfs/volumes.c", i32 3191, i32 4}
!64 = !{ptr @btrfs_remove_chunk.__UNIQUE_ID_ddebug967, !65, !"__UNIQUE_ID_ddebug967", i1 false, i1 false}
!65 = !{!"../fs/btrfs/volumes.c", i32 3197, i32 4}
!66 = !{ptr @btrfs_remove_chunk.__UNIQUE_ID_ddebug968, !67, !"__UNIQUE_ID_ddebug968", i1 false, i1 false}
!67 = !{!"../fs/btrfs/volumes.c", i32 3203, i32 4}
!68 = !{ptr @btrfs_remove_chunk.__UNIQUE_ID_ddebug969, !69, !"__UNIQUE_ID_ddebug969", i1 false, i1 false}
!69 = !{!"../fs/btrfs/volumes.c", i32 3207, i32 3}
!70 = !{ptr @btrfs_remove_chunk.__UNIQUE_ID_ddebug970, !71, !"__UNIQUE_ID_ddebug970", i1 false, i1 false}
!71 = !{!"../fs/btrfs/volumes.c", i32 3216, i32 4}
!72 = !{ptr @btrfs_remove_chunk.__UNIQUE_ID_ddebug971, !73, !"__UNIQUE_ID_ddebug971", i1 false, i1 false}
!73 = !{!"../fs/btrfs/volumes.c", i32 3232, i32 3}
!74 = !{ptr @.str.28, !75, !"<string literal>", i1 false, i1 false}
!75 = !{!"../fs/btrfs/volumes.c", i32 3291, i32 4}
!76 = !{ptr @__func__.btrfs_relocate_chunk, !77, !"<string literal>", i1 false, i1 false}
!77 = !{!"../fs/btrfs/volumes.c", i32 3300, i32 3}
!78 = !{ptr @.str.29, !79, !"<string literal>", i1 false, i1 false}
!79 = !{!"../fs/btrfs/volumes.c", i32 4288, i32 4}
!80 = !{ptr @.str.30, !81, !"<string literal>", i1 false, i1 false}
!81 = !{!"../fs/btrfs/volumes.c", i32 4350, i32 4}
!82 = !{ptr @.str.31, !83, !"<string literal>", i1 false, i1 false}
!83 = !{!"../fs/btrfs/volumes.c", i32 4353, i32 4}
!84 = !{ptr @.str.32, !85, !"<string literal>", i1 false, i1 false}
!85 = !{!"../fs/btrfs/volumes.c", i32 4362, i32 3}
!86 = !{ptr @.str.33, !87, !"<string literal>", i1 false, i1 false}
!87 = !{!"../fs/btrfs/volumes.c", i32 4385, i32 2}
!88 = !{ptr @.str.34, !89, !"<string literal>", i1 false, i1 false}
!89 = !{!"../fs/btrfs/volumes.c", i32 4394, i32 3}
!90 = !{ptr @.str.35, !91, !"<string literal>", i1 false, i1 false}
!91 = !{!"../fs/btrfs/volumes.c", i32 4413, i32 3}
!92 = !{ptr @.str.36, !93, !"<string literal>", i1 false, i1 false}
!93 = !{!"../fs/btrfs/volumes.c", i32 4415, i32 3}
!94 = !{ptr @.str.37, !95, !"<string literal>", i1 false, i1 false}
!95 = !{!"../fs/btrfs/volumes.c", i32 4468, i32 3}
!96 = !{ptr @.str.38, !97, !"<string literal>", i1 false, i1 false}
!97 = !{!"../fs/btrfs/volumes.c", i32 4473, i32 2}
!98 = !{ptr @.str.39, !99, !"<string literal>", i1 false, i1 false}
!99 = !{!"../fs/btrfs/volumes.c", i32 4485, i32 8}
!100 = !{ptr @.str.40, !101, !"<string literal>", i1 false, i1 false}
!101 = !{!"../fs/btrfs/volumes.c", i32 4545, i32 3}
!102 = !{ptr @.str.41, !103, !"<string literal>", i1 false, i1 false}
!103 = !{!"../fs/btrfs/volumes.c", i32 4721, i32 5}
!104 = !{ptr @.str.42, !105, !"<string literal>", i1 false, i1 false}
!105 = !{!"../fs/btrfs/volumes.c", i32 4768, i32 3}
!106 = !{ptr @.str.43, !107, !"<string literal>", i1 false, i1 false}
!107 = !{!"../fs/btrfs/volumes.c", i32 4794, i32 3}
!108 = !{ptr @btrfs_create_uuid_tree.__UNIQUE_ID_ddebug972, !107, !"__UNIQUE_ID_ddebug972", i1 false, i1 false}
!109 = !{ptr @.str.44, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../fs/btrfs/volumes.c", i32 4806, i32 9}
!111 = !{ptr @.str.45, !112, !"<string literal>", i1 false, i1 false}
!112 = !{!"../fs/btrfs/volumes.c", i32 4809, i32 3}
!113 = !{ptr @.str.46, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../fs/btrfs/volumes.c", i32 4948, i32 5}
!115 = !{ptr @.str.47, !116, !"<string literal>", i1 false, i1 false}
!116 = !{!"../fs/btrfs/volumes.c", i32 4992, i32 3}
!117 = !{ptr @btrfs_shrink_device.__UNIQUE_ID_ddebug973, !116, !"__UNIQUE_ID_ddebug973", i1 false, i1 false}
!118 = !{ptr @.str.48, !119, !"<string literal>", i1 false, i1 false}
!119 = !{!"../fs/btrfs/volumes.c", i32 5496, i32 4}
!120 = !{ptr @.str.49, !119, !"<string literal>", i1 false, i1 false}
!121 = !{ptr @btrfs_create_chunk.__UNIQUE_ID_ddebug990, !119, !"__UNIQUE_ID_ddebug990", i1 false, i1 false}
!122 = !{ptr @.str.50, !119, !"<string literal>", i1 false, i1 false}
!123 = !{ptr @.str.51, !124, !"<string literal>", i1 false, i1 false}
!124 = !{!"../fs/btrfs/volumes.c", i32 5501, i32 3}
!125 = !{ptr @.str.52, !126, !"<string literal>", i1 false, i1 false}
!126 = !{!"../fs/btrfs/volumes.c", i32 5583, i32 3}
!127 = !{ptr @btrfs_chunk_alloc_add_chunk_item.__UNIQUE_ID_ddebug991, !126, !"__UNIQUE_ID_ddebug991", i1 false, i1 false}
!128 = distinct !{null, !129, !"__UNIQUE_ID_ddebug992", i1 false, i1 false}
!129 = !{!"../fs/btrfs/volumes.c", i32 5593, i32 3}
!130 = !{ptr @.str.53, !131, !"<string literal>", i1 false, i1 false}
!131 = !{!"../fs/btrfs/volumes.c", i32 6333, i32 2}
!132 = !{ptr @.str.54, !133, !"<string literal>", i1 false, i1 false}
!133 = !{!"../fs/btrfs/volumes.c", i32 6345, i32 3}
!134 = !{ptr @.str.55, !135, !"<string literal>", i1 false, i1 false}
!135 = !{!"../fs/btrfs/volumes.c", i32 6824, i32 3}
!136 = !{ptr @btrfs_alloc_device.__key, !137, !"__key", i1 false, i1 false}
!137 = !{!"../fs/btrfs/volumes.c", i32 6980, i32 2}
!138 = !{ptr @.str.56, !137, !"<string literal>", i1 false, i1 false}
!139 = !{ptr @.str.57, !140, !"<string literal>", i1 false, i1 false}
!140 = !{!"../fs/btrfs/volumes.c", i32 7391, i32 2}
!141 = !{ptr @.str.58, !142, !"<string literal>", i1 false, i1 false}
!142 = !{!"../fs/btrfs/volumes.c", i32 7437, i32 4}
!143 = !{ptr @.str.59, !144, !"<string literal>", i1 false, i1 false}
!144 = !{!"../fs/btrfs/volumes.c", i32 7455, i32 4}
!145 = !{ptr @.str.60, !146, !"<string literal>", i1 false, i1 false}
!146 = !{!"../fs/btrfs/volumes.c", i32 7464, i32 4}
!147 = !{ptr @.str.61, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../fs/btrfs/volumes.c", i32 7488, i32 2}
!149 = !{ptr @.str.62, !150, !"<string literal>", i1 false, i1 false}
!150 = !{!"../fs/btrfs/volumes.c", i32 7541, i32 5}
!151 = !{ptr @.str.63, !152, !"<string literal>", i1 false, i1 false}
!152 = !{!"../fs/btrfs/volumes.c", i32 7609, i32 2}
!153 = !{ptr @.str.64, !154, !"<string literal>", i1 false, i1 false}
!154 = !{!"../fs/btrfs/volumes.c", i32 7677, i32 3}
!155 = !{ptr @.str.65, !156, !"<string literal>", i1 false, i1 false}
!156 = !{!"../fs/btrfs/volumes.c", i32 7686, i32 3}
!157 = !{ptr @.str.66, !158, !"<string literal>", i1 false, i1 false}
!158 = !{!"../fs/btrfs/volumes.c", i32 7978, i32 3}
!159 = !{ptr @.str.67, !160, !"<string literal>", i1 false, i1 false}
!160 = !{!"../fs/btrfs/volumes.c", i32 7981, i32 3}
!161 = !{ptr @.str.68, !162, !"<string literal>", i1 false, i1 false}
!162 = !{!"../fs/btrfs/volumes.c", i32 7991, i32 3}
!163 = !{ptr @.str.69, !164, !"<string literal>", i1 false, i1 false}
!164 = !{!"../fs/btrfs/volumes.c", i32 8014, i32 2}
!165 = !{ptr @.str.70, !166, !"<string literal>", i1 false, i1 false}
!166 = !{!"../fs/btrfs/volumes.c", i32 8238, i32 4}
!167 = !{ptr @.str.71, !168, !"<string literal>", i1 false, i1 false}
!168 = !{!"../fs/btrfs/volumes.c", i32 8361, i32 2}
!169 = !{ptr @fs_uuids, !170, !"fs_uuids", i1 false, i1 false}
!170 = !{!"../fs/btrfs/volumes.c", i32 362, i32 8}
!171 = !{ptr @.str.72, !172, !"<string literal>", i1 false, i1 false}
!172 = !{!"../fs/btrfs/volumes.c", i32 1165, i32 2}
!173 = !{ptr @.str.73, !174, !"<string literal>", i1 false, i1 false}
!174 = !{!"../fs/btrfs/volumes.c", i32 1166, i32 2}
!175 = !{ptr @.str.74, !176, !"<string literal>", i1 false, i1 false}
!176 = !{!"../fs/btrfs/volumes.c", i32 1167, i32 2}
!177 = !{ptr @.str.75, !178, !"<string literal>", i1 false, i1 false}
!178 = !{!"../fs/btrfs/volumes.c", i32 1168, i32 2}
!179 = !{ptr @.str.76, !180, !"<string literal>", i1 false, i1 false}
!180 = !{!"../fs/btrfs/volumes.c", i32 645, i32 4}
!181 = !{ptr @.str.77, !180, !"<string literal>", i1 false, i1 false}
!182 = !{ptr @btrfs_open_one_device._entry, !180, !"_entry", i1 false, i1 false}
!183 = !{ptr @btrfs_open_one_device._entry_ptr, !180, !"_entry_ptr", i1 false, i1 false}
!184 = !{ptr @.str.78, !185, !"<string literal>", i1 false, i1 false}
!185 = !{!"../include/linux/mm.h", i32 717, i32 2}
!186 = distinct !{null, !187, !"__warned", i1 false, i1 false}
!187 = !{!"../fs/btrfs/volumes.c", i32 542, i32 17}
!188 = !{ptr @.str.79, !189, !"<string literal>", i1 false, i1 false}
!189 = !{!"../fs/btrfs/volumes.c", i32 879, i32 4}
!190 = !{ptr @.str.80, !189, !"<string literal>", i1 false, i1 false}
!191 = !{ptr @device_list_add._entry, !189, !"_entry", i1 false, i1 false}
!192 = !{ptr @device_list_add._entry_ptr, !189, !"_entry_ptr", i1 false, i1 false}
!193 = !{ptr @.str.82, !194, !"<string literal>", i1 false, i1 false}
!194 = !{!"../fs/btrfs/volumes.c", i32 884, i32 4}
!195 = !{ptr @device_list_add._entry.81, !194, !"_entry", i1 false, i1 false}
!196 = !{ptr @device_list_add._entry_ptr.83, !194, !"_entry_ptr", i1 false, i1 false}
!197 = !{ptr @.str.84, !198, !"<string literal>", i1 false, i1 false}
!198 = !{!"../fs/btrfs/volumes.c", i32 950, i32 5}
!199 = !{ptr @.str.85, !200, !"<string literal>", i1 false, i1 false}
!200 = !{!"../fs/btrfs/volumes.c", i32 957, i32 4}
!201 = distinct !{null, !200, !"__warned", i1 false, i1 false}
!202 = !{ptr @.str.86, !203, !"<string literal>", i1 false, i1 false}
!203 = !{!"../fs/btrfs/volumes.c", i32 443, i32 2}
!204 = !{ptr @alloc_fs_devices.__key, !205, !"__key", i1 false, i1 false}
!205 = !{!"../fs/btrfs/volumes.c", i32 386, i32 2}
!206 = !{ptr @.str.87, !205, !"<string literal>", i1 false, i1 false}
!207 = !{ptr @.str.88, !208, !"<string literal>", i1 false, i1 false}
!208 = !{!"../fs/btrfs/volumes.c", i32 1457, i32 2}
!209 = !{ptr @.str.89, !210, !"<string literal>", i1 false, i1 false}
!210 = !{!"../fs/btrfs/ctree.h", i32 3491, i32 2}
!211 = !{ptr @.str.90, !210, !"<string literal>", i1 false, i1 false}
!212 = !{ptr @.str.91, !210, !"<string literal>", i1 false, i1 false}
!213 = !{ptr @assertfail._entry, !210, !"_entry", i1 false, i1 false}
!214 = !{ptr @assertfail._entry_ptr, !210, !"_entry_ptr", i1 false, i1 false}
!215 = !{ptr @.str.92, !216, !"<string literal>", i1 false, i1 false}
!216 = !{!"../include/linux/pagemap.h", i32 788, i32 2}
!217 = !{ptr @.str.93, !218, !"<string literal>", i1 false, i1 false}
!218 = !{!"../include/linux/page-flags.h", i32 260, i32 2}
!219 = distinct !{null, !220, !"<string literal>", i1 false, i1 false}
!220 = !{!"../include/linux/page-flags.h", i32 261, i32 2}
!221 = !{ptr @.str.95, !222, !"<string literal>", i1 false, i1 false}
!222 = !{!"../fs/btrfs/volumes.c", i32 2042, i32 3}
!223 = distinct !{null, !224, !"__warned", i1 false, i1 false}
!224 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!225 = !{ptr @.str.96, !224, !"<string literal>", i1 false, i1 false}
!226 = !{ptr @.str.97, !224, !"<string literal>", i1 false, i1 false}
!227 = distinct !{null, !228, !"__warned", i1 false, i1 false}
!228 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!229 = !{ptr @.str.98, !228, !"<string literal>", i1 false, i1 false}
!230 = !{ptr @.str.99, !231, !"<string literal>", i1 false, i1 false}
!231 = !{!"../fs/btrfs/volumes.c", i32 1944, i32 3}
!232 = !{ptr @btrfs_rm_dev_item.__UNIQUE_ID_ddebug952, !231, !"__UNIQUE_ID_ddebug952", i1 false, i1 false}
!233 = !{ptr @btrfs_rm_dev_item.__UNIQUE_ID_ddebug953, !234, !"__UNIQUE_ID_ddebug953", i1 false, i1 false}
!234 = !{!"../fs/btrfs/volumes.c", i32 1951, i32 3}
!235 = !{ptr @btrfs_init_sprout.__key, !236, !"__key", i1 false, i1 false}
!236 = !{!"../fs/btrfs/volumes.c", i32 2470, i32 2}
!237 = !{ptr @.str.100, !236, !"<string literal>", i1 false, i1 false}
!238 = distinct !{null, !239, !"__already_done", i1 false, i1 false}
!239 = !{!"../include/linux/seqlock.h", i32 271, i32 2}
!240 = !{ptr @.str.101, !239, !"<string literal>", i1 false, i1 false}
!241 = !{ptr @__func__.btrfs_free_chunk, !242, !"<string literal>", i1 false, i1 false}
!242 = !{!"../fs/btrfs/volumes.c", i32 2969, i32 3}
!243 = !{ptr @.str.102, !242, !"<string literal>", i1 false, i1 false}
!244 = !{ptr @.str.103, !245, !"<string literal>", i1 false, i1 false}
!245 = !{!"../fs/btrfs/volumes.c", i32 2977, i32 3}
!246 = distinct !{null, !247, !"__already_done", i1 false, i1 false}
!247 = !{!"../include/trace/events/btrfs.h", i32 1009, i32 1}
!248 = !{ptr @.str.104, !247, !"<string literal>", i1 false, i1 false}
!249 = distinct !{null, !247, !"__warned", i1 false, i1 false}
!250 = distinct !{null, !251, !"__already_done", i1 false, i1 false}
!251 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!252 = !{ptr @.str.105, !251, !"<string literal>", i1 false, i1 false}
!253 = !{ptr @.str.106, !254, !"<string literal>", i1 false, i1 false}
!254 = !{!"../fs/btrfs/volumes.c", i32 4083, i32 3}
!255 = !{ptr @.str.107, !256, !"<string literal>", i1 false, i1 false}
!256 = !{!"../fs/btrfs/volumes.c", i32 4093, i32 2}
!257 = distinct !{null, !258, !"<string literal>", i1 false, i1 false}
!258 = !{!"../fs/btrfs/volumes.c", i32 4222, i32 3}
!259 = distinct !{null, !258, !"<string literal>", i1 false, i1 false}
!260 = !{ptr @.str.110, !261, !"<string literal>", i1 false, i1 false}
!261 = !{!"../fs/btrfs/volumes.c", i32 4226, i32 3}
!262 = !{ptr @.str.111, !263, !"<string literal>", i1 false, i1 false}
!263 = !{!"../fs/btrfs/volumes.c", i32 4231, i32 3}
!264 = !{ptr @.str.112, !265, !"<string literal>", i1 false, i1 false}
!265 = !{!"../fs/btrfs/volumes.c", i32 4236, i32 3}
!266 = !{ptr @.str.113, !267, !"<string literal>", i1 false, i1 false}
!267 = !{!"../fs/btrfs/volumes.c", i32 4245, i32 2}
!268 = !{ptr @.str.114, !267, !"<string literal>", i1 false, i1 false}
!269 = !{ptr @.str.115, !267, !"<string literal>", i1 false, i1 false}
!270 = !{ptr @.str.116, !271, !"<string literal>", i1 false, i1 false}
!271 = !{!"../fs/btrfs/volumes.c", i32 4143, i32 3}
!272 = !{ptr @.str.117, !273, !"<string literal>", i1 false, i1 false}
!273 = !{!"../fs/btrfs/volumes.c", i32 4147, i32 3}
!274 = !{ptr @.str.118, !275, !"<string literal>", i1 false, i1 false}
!275 = !{!"../fs/btrfs/volumes.c", i32 4152, i32 3}
!276 = !{ptr @.str.119, !277, !"<string literal>", i1 false, i1 false}
!277 = !{!"../fs/btrfs/volumes.c", i32 4156, i32 3}
!278 = !{ptr @.str.120, !279, !"<string literal>", i1 false, i1 false}
!279 = !{!"../fs/btrfs/volumes.c", i32 4159, i32 3}
!280 = !{ptr @.str.121, !281, !"<string literal>", i1 false, i1 false}
!281 = !{!"../fs/btrfs/volumes.c", i32 4163, i32 3}
!282 = !{ptr @.str.122, !283, !"<string literal>", i1 false, i1 false}
!283 = !{!"../fs/btrfs/volumes.c", i32 4166, i32 3}
!284 = !{ptr @.str.123, !285, !"<string literal>", i1 false, i1 false}
!285 = !{!"../fs/btrfs/volumes.c", i32 4170, i32 3}
!286 = !{ptr @.str.124, !287, !"<string literal>", i1 false, i1 false}
!287 = !{!"../fs/btrfs/volumes.c", i32 4174, i32 3}
!288 = !{ptr @.str.125, !289, !"<string literal>", i1 false, i1 false}
!289 = !{!"../fs/btrfs/volumes.c", i32 4177, i32 3}
!290 = !{ptr @.str.126, !291, !"<string literal>", i1 false, i1 false}
!291 = !{!"../fs/btrfs/volumes.c", i32 4181, i32 3}
!292 = !{ptr @.str.127, !293, !"<string literal>", i1 false, i1 false}
!293 = !{!"../fs/btrfs/volumes.c", i32 4005, i32 4}
!294 = !{ptr @.str.128, !295, !"<string literal>", i1 false, i1 false}
!295 = !{!"../fs/btrfs/volumes.c", i32 4030, i32 3}
!296 = !{ptr @__func__.reset_balance_state, !297, !"<string literal>", i1 false, i1 false}
!297 = !{!"../fs/btrfs/volumes.c", i32 3582, i32 3}
!298 = !{ptr @.str.129, !299, !"<string literal>", i1 false, i1 false}
!299 = !{!"../fs/btrfs/volumes.c", i32 3400, i32 2}
!300 = !{ptr @.str.130, !301, !"<string literal>", i1 false, i1 false}
!301 = !{!"../fs/btrfs/volumes.c", i32 5214, i32 4}
!302 = !{ptr @.str.131, !303, !"<string literal>", i1 false, i1 false}
!303 = !{!"../fs/btrfs/volumes.c", i32 5243, i32 5}
!304 = !{ptr @.str.132, !303, !"<string literal>", i1 false, i1 false}
!305 = !{ptr @gather_device_info.__UNIQUE_ID_ddebug984, !303, !"__UNIQUE_ID_ddebug984", i1 false, i1 false}
!306 = !{ptr @.str.133, !303, !"<string literal>", i1 false, i1 false}
!307 = !{ptr @.str.134, !308, !"<string literal>", i1 false, i1 false}
!308 = !{!"../fs/btrfs/volumes.c", i32 5251, i32 4}
!309 = !{ptr @.str.135, !310, !"<string literal>", i1 false, i1 false}
!310 = !{!"../fs/btrfs/volumes.c", i32 5363, i32 4}
!311 = !{ptr @.str.136, !310, !"<string literal>", i1 false, i1 false}
!312 = !{ptr @decide_stripe_size.__UNIQUE_ID_ddebug987, !310, !"__UNIQUE_ID_ddebug987", i1 false, i1 false}
!313 = !{ptr @.str.137, !310, !"<string literal>", i1 false, i1 false}
!314 = !{ptr @.str.138, !315, !"<string literal>", i1 false, i1 false}
!315 = !{!"../fs/btrfs/volumes.c", i32 5327, i32 2}
!316 = !{ptr @.str.139, !317, !"<string literal>", i1 false, i1 false}
!317 = !{!"../fs/btrfs/volumes.c", i32 5340, i32 3}
!318 = distinct !{null, !319, !"__already_done", i1 false, i1 false}
!319 = !{!"../include/trace/events/btrfs.h", i32 1001, i32 1}
!320 = distinct !{null, !319, !"__warned", i1 false, i1 false}
!321 = !{ptr @.str.140, !322, !"<string literal>", i1 false, i1 false}
!322 = !{!"../fs/btrfs/volumes.c", i32 5061, i32 2}
!323 = !{ptr @.str.141, !324, !"<string literal>", i1 false, i1 false}
!324 = !{!"../fs/btrfs/ctree.h", i32 3648, i32 4}
!325 = !{ptr @.str.142, !326, !"<string literal>", i1 false, i1 false}
!326 = !{!"../fs/btrfs/volumes.c", i32 5069, i32 2}
!327 = !{ptr @.str.143, !328, !"<string literal>", i1 false, i1 false}
!328 = !{!"../fs/btrfs/volumes.c", i32 5984, i32 2}
!329 = !{ptr @.str.144, !330, !"<string literal>", i1 false, i1 false}
!330 = !{!"../fs/btrfs/volumes.c", i32 6430, i32 2}
!331 = !{ptr @.str.145, !332, !"<string literal>", i1 false, i1 false}
!332 = !{!"../fs/btrfs/volumes.c", i32 6554, i32 3}
!333 = !{ptr @.str.146, !334, !"<string literal>", i1 false, i1 false}
!334 = !{!"../fs/btrfs/volumes.c", i32 6133, i32 3}
!335 = !{ptr @.str.147, !336, !"<string literal>", i1 false, i1 false}
!336 = !{!"../fs/btrfs/volumes.c", i32 6172, i32 2}
!337 = !{ptr @.str.148, !338, !"<string literal>", i1 false, i1 false}
!338 = !{!"../fs/btrfs/volumes.c", i32 5842, i32 2}
!339 = !{ptr @.str.149, !340, !"<string literal>", i1 false, i1 false}
!340 = !{!"../fs/btrfs/volumes.c", i32 5853, i32 3}
!341 = !{ptr @find_live_mirror._rs, !340, !"_rs", i1 false, i1 false}
!342 = !{ptr @__func__.find_live_mirror, !340, !"<string literal>", i1 false, i1 false}
!343 = !{ptr @.str.150, !340, !"<string literal>", i1 false, i1 false}
!344 = distinct !{null, !345, !"__already_done", i1 false, i1 false}
!345 = !{!"../fs/btrfs/volumes.h", i32 479, i32 3}
!346 = !{ptr @.str.151, !345, !"<string literal>", i1 false, i1 false}
!347 = !{ptr @.str.152, !348, !"<string literal>", i1 false, i1 false}
!348 = !{!"../fs/btrfs/volumes.c", i32 6749, i32 2}
!349 = !{ptr @.str.153, !348, !"<string literal>", i1 false, i1 false}
!350 = !{ptr @submit_stripe_bio.__UNIQUE_ID_ddebug999, !348, !"__UNIQUE_ID_ddebug999", i1 false, i1 false}
!351 = !{ptr @.str.154, !348, !"<string literal>", i1 false, i1 false}
!352 = distinct !{null, !348, !"__warned", i1 false, i1 false}
!353 = !{ptr @.str.155, !354, !"<string literal>", i1 false, i1 false}
!354 = !{!"../fs/btrfs/volumes.c", i32 6682, i32 4}
!355 = !{ptr @.str.156, !356, !"<string literal>", i1 false, i1 false}
!356 = !{!"../fs/btrfs/volumes.c", i32 6864, i32 2}
!357 = !{ptr @.str.157, !358, !"<string literal>", i1 false, i1 false}
!358 = !{!"../fs/btrfs/volumes.c", i32 1815, i32 3}
!359 = !{ptr @.str.158, !360, !"<string literal>", i1 false, i1 false}
!360 = !{!"../fs/btrfs/volumes.c", i32 7162, i32 5}
!361 = !{ptr @.str.159, !362, !"<string literal>", i1 false, i1 false}
!362 = !{!"../fs/btrfs/volumes.c", i32 7178, i32 3}
!363 = !{ptr @btrfs_report_missing_device._rs, !364, !"_rs", i1 false, i1 false}
!364 = !{!"../fs/btrfs/volumes.c", i32 7009, i32 3}
!365 = !{ptr @__func__.btrfs_report_missing_device, !364, !"<string literal>", i1 false, i1 false}
!366 = !{ptr @.str.160, !364, !"<string literal>", i1 false, i1 false}
!367 = !{ptr @btrfs_report_missing_device._rs.161, !368, !"_rs", i1 false, i1 false}
!368 = !{!"../fs/btrfs/volumes.c", i32 7012, i32 3}
!369 = !{ptr @.str.162, !368, !"<string literal>", i1 false, i1 false}
!370 = !{ptr @.str.163, !371, !"<string literal>", i1 false, i1 false}
!371 = !{!"../fs/btrfs/volumes.c", i32 7300, i32 4}
!372 = !{ptr @.str.164, !373, !"<string literal>", i1 false, i1 false}
!373 = !{!"../fs/btrfs/volumes.c", i32 7331, i32 4}
!374 = !{ptr @.str.165, !375, !"<string literal>", i1 false, i1 false}
!375 = !{!"../fs/btrfs/volumes.c", i32 7357, i32 4}
!376 = !{ptr @.str.166, !377, !"<string literal>", i1 false, i1 false}
!377 = !{!"../fs/btrfs/volumes.c", i32 7954, i32 2}
!378 = distinct !{null, !377, !"__warned", i1 false, i1 false}
!379 = !{ptr @.str.167, !380, !"<string literal>", i1 false, i1 false}
!380 = !{!"../fs/btrfs/volumes.c", i32 7840, i32 3}
!381 = distinct !{null, !380, !"__warned", i1 false, i1 false}
!382 = !{ptr @.str.168, !383, !"<string literal>", i1 false, i1 false}
!383 = !{!"../fs/btrfs/volumes.c", i32 7851, i32 4}
!384 = distinct !{null, !383, !"__warned", i1 false, i1 false}
!385 = !{ptr @.str.170, !386, !"<string literal>", i1 false, i1 false}
!386 = !{!"../fs/btrfs/volumes.c", i32 7865, i32 4}
!387 = distinct !{null, !386, !"__warned", i1 false, i1 false}
!388 = !{ptr @btrfs_dev_stat_print_on_error._rs, !389, !"_rs", i1 false, i1 false}
!389 = !{!"../fs/btrfs/volumes.c", i32 7934, i32 2}
!390 = !{ptr @__func__.btrfs_dev_stat_print_on_error, !389, !"<string literal>", i1 false, i1 false}
!391 = !{ptr @.str.172, !389, !"<string literal>", i1 false, i1 false}
!392 = distinct !{null, !389, !"__warned", i1 false, i1 false}
!393 = !{ptr @.str.173, !394, !"<string literal>", i1 false, i1 false}
!394 = !{!"../fs/btrfs/volumes.c", i32 8065, i32 3}
!395 = !{ptr @.str.174, !396, !"<string literal>", i1 false, i1 false}
!396 = !{!"../fs/btrfs/volumes.c", i32 8075, i32 3}
!397 = !{ptr @.str.175, !398, !"<string literal>", i1 false, i1 false}
!398 = !{!"../fs/btrfs/volumes.c", i32 8088, i32 5}
!399 = !{ptr @.str.176, !400, !"<string literal>", i1 false, i1 false}
!400 = !{!"../fs/btrfs/volumes.c", i32 8099, i32 3}
!401 = !{ptr @.str.177, !402, !"<string literal>", i1 false, i1 false}
!402 = !{!"../fs/btrfs/volumes.c", i32 8108, i32 3}
!403 = !{ptr @.str.178, !404, !"<string literal>", i1 false, i1 false}
!404 = !{!"../fs/btrfs/volumes.c", i32 8114, i32 3}
!405 = !{ptr @.str.179, !406, !"<string literal>", i1 false, i1 false}
!406 = !{!"../fs/btrfs/volumes.c", i32 8127, i32 4}
!407 = !{ptr @.str.180, !408, !"<string literal>", i1 false, i1 false}
!408 = !{!"../fs/btrfs/volumes.c", i32 8152, i32 4}
!409 = !{ptr @.str.181, !410, !"<string literal>", i1 false, i1 false}
!410 = !{!"../fs/btrfs/volumes.c", i32 8303, i32 3}
!411 = !{ptr @.str.182, !412, !"<string literal>", i1 false, i1 false}
!412 = !{!"../fs/btrfs/volumes.c", i32 8323, i32 2}
!413 = !{!"sp"}
!414 = !{i32 1, !"wchar_size", i32 2}
!415 = !{i32 1, !"min_enum_size", i32 4}
!416 = !{i32 8, !"branch-target-enforcement", i32 0}
!417 = !{i32 8, !"sign-return-address", i32 0}
!418 = !{i32 8, !"sign-return-address-all", i32 0}
!419 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!420 = !{i32 7, !"uwtable", i32 1}
!421 = !{i32 7, !"frame-pointer", i32 2}
!422 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!423 = !{!"branch_weights", i32 2000, i32 1}
!424 = !{!"branch_weights", i32 1, i32 2000}
!425 = !{!"auto-init"}
!426 = !{i8 0, i8 2}
!427 = !{i64 2153538346, i64 2153538829, i64 2153538383, i64 2153538439, i64 2153538473, i64 2153538497, i64 2153538538, i64 2153538559, i64 2153538587, i64 2153538621}
!428 = !{i64 2148735462}
!429 = !{i64 2148650195, i64 2148650227, i64 2148650256, i64 2148650290, i64 2148650321, i64 2148650344}
!430 = !{i64 2148735691}
!431 = !{i64 2148460403, i64 2148460408, i64 2148460421, i64 2148460465, i64 2148460499, i64 2148460520}
!432 = !{i64 2149474524}
!433 = !{i64 2149474790}
!434 = !{i64 2158831731}
!435 = !{i64 2158849221}
!436 = !{i64 2158906588, i64 2158907072, i64 2158906625, i64 2158906681, i64 2158906715, i64 2158906739, i64 2158906780, i64 2158906801, i64 2158906829, i64 2158906863}
!437 = !{i64 2158546805, i64 2158547287, i64 2158546842, i64 2158546898, i64 2158546932, i64 2158546956, i64 2158546997, i64 2158547018, i64 2158547046, i64 2158547080}
!438 = !{i64 2150888899, i64 2150889390, i64 2150888936, i64 2150888992, i64 2150889026, i64 2150889050, i64 2150889091, i64 2150889112, i64 2150889140, i64 2150889174}
!439 = !{i64 2148655868, i64 2148655900, i64 2148655929, i64 2148655963, i64 2148655994, i64 2148656017}
!440 = !{i64 2148744949}
!441 = !{i64 2150416814}
!442 = !{i64 2150416656}
!443 = !{i64 2150416984}
!444 = !{i64 2150402055}
!445 = !{i64 2158669115}
!446 = !{i64 2158668957}
!447 = !{i64 2158669285}
!448 = !{i64 2158989288}
!449 = !{i64 2149525166}
!450 = !{i64 2149499916}
!451 = !{i64 2158686911}
!452 = !{i64 2158686753}
!453 = !{i64 2158687081}
!454 = !{i64 2158704682}
!455 = !{i64 2158704524}
!456 = !{i64 2158704852}
!457 = !{i64 2158940925, i64 2158941409, i64 2158940962, i64 2158941018, i64 2158941052, i64 2158941076, i64 2158941117, i64 2158941138, i64 2158941166, i64 2158941200}
!458 = !{i64 2159038032, i64 2159038516, i64 2159038069, i64 2159038125, i64 2159038159, i64 2159038183, i64 2159038224, i64 2159038245, i64 2159038273, i64 2159038307}
!459 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!460 = !{i64 2159039860, i64 2159040344, i64 2159039897, i64 2159039953, i64 2159039987, i64 2159040011, i64 2159040052, i64 2159040073, i64 2159040101, i64 2159040135}
!461 = !{i64 2158671016}
!462 = !{i64 2150294307}
!463 = !{i64 2150299241}
!464 = !{i64 2150320959}
!465 = !{i64 2150325853}
!466 = !{i64 2150402380}
!467 = !{i64 2150402705}
!468 = !{i64 2158682598}
!469 = !{i64 2158688817}
!470 = !{i64 2158700399}
!471 = !{i64 2158911539, i64 2158912023, i64 2158911576, i64 2158911632, i64 2158911666, i64 2158911690, i64 2158911731, i64 2158911752, i64 2158911780, i64 2158911814}
!472 = !{i64 2157191184, i64 2157191665, i64 2157191221, i64 2157191277, i64 2157191311, i64 2157191335, i64 2157191376, i64 2157191397, i64 2157191425, i64 2157191459}
!473 = !{i64 2158706582}
!474 = !{i64 2158718164}
!475 = !{i64 0, i64 62}
!476 = !{i64 2159090084, i64 2159090568, i64 2159090121, i64 2159090177, i64 2159090211, i64 2159090235, i64 2159090276, i64 2159090297, i64 2159090325, i64 2159090359}
!477 = !{i64 999929, i64 999956}
!478 = !{i64 1000269, i64 1000296, i64 1000330, i64 1000351}
!479 = !{i64 2159097143, i64 2159097627, i64 2159097180, i64 2159097236, i64 2159097270, i64 2159097294, i64 2159097335, i64 2159097356, i64 2159097384, i64 2159097418}
!480 = !{i64 2159103467, i64 2159103951, i64 2159103504, i64 2159103560, i64 2159103594, i64 2159103618, i64 2159103659, i64 2159103680, i64 2159103708, i64 2159103742}
!481 = !{i64 2155828069}
!482 = !{i64 2155828316}
!483 = !{i64 2149483083}
!484 = !{i64 2149484119}
!485 = !{i64 2159055207, i64 2159055691, i64 2159055244, i64 2159055300, i64 2159055334, i64 2159055358, i64 2159055399, i64 2159055420, i64 2159055448, i64 2159055482}
!486 = !{i64 2159056803, i64 2159057287, i64 2159056840, i64 2159056896, i64 2159056930, i64 2159056954, i64 2159056995, i64 2159057016, i64 2159057044, i64 2159057078}
!487 = !{i64 2159058384, i64 2159058868, i64 2159058421, i64 2159058477, i64 2159058511, i64 2159058535, i64 2159058576, i64 2159058597, i64 2159058625, i64 2159058659}
!488 = !{i64 2159045753, i64 2159046237, i64 2159045790, i64 2159045846, i64 2159045880, i64 2159045904, i64 2159045945, i64 2159045966, i64 2159045994, i64 2159046028}
!489 = !{i64 1000046, i64 1000073, i64 1000095, i64 1000123}
!490 = !{i64 1000454, i64 1000481, i64 1000514, i64 1000535, i64 1000562, i64 1000588}
!491 = !{i64 2148485590, i64 2148485870, i64 2148486204, i64 2148486538}
!492 = !{i64 2159042628, i64 2159043112, i64 2159042665, i64 2159042721, i64 2159042755, i64 2159042779, i64 2159042820, i64 2159042841, i64 2159042869, i64 2159042903}
!493 = !{i64 2159062673, i64 2159063157, i64 2159062710, i64 2159062766, i64 2159062800, i64 2159062824, i64 2159062865, i64 2159062886, i64 2159062914, i64 2159062948}
!494 = !{i64 2148647010, i64 2148647036, i64 2148647065, i64 2148647099, i64 2148647130, i64 2148647153}
!495 = !{i64 2159065978, i64 2159066462, i64 2159066015, i64 2159066071, i64 2159066105, i64 2159066129, i64 2159066170, i64 2159066191, i64 2159066219, i64 2159066253}
!496 = !{i64 2148649475, i64 2148649501, i64 2148649530, i64 2148649564, i64 2148649595, i64 2148649618}
!497 = !{i64 2159073543, i64 2159074027, i64 2159073580, i64 2159073636, i64 2159073670, i64 2159073694, i64 2159073735, i64 2159073756, i64 2159073784, i64 2159073818}
!498 = !{i64 2159121266, i64 2159121750, i64 2159121303, i64 2159121359, i64 2159121393, i64 2159121417, i64 2159121458, i64 2159121479, i64 2159121507, i64 2159121541}
!499 = !{i64 2148648540, i64 2148648572, i64 2148648601, i64 2148648635, i64 2148648666, i64 2148648689}
!500 = !{i64 2148736541}
!501 = !{i64 2148651005, i64 2148651037, i64 2148651066, i64 2148651100, i64 2148651131, i64 2148651154}
!502 = !{i64 2149782511}
!503 = !{i64 2159165646, i64 2159166130, i64 2159165683, i64 2159165739, i64 2159165773, i64 2159165797, i64 2159165838, i64 2159165859, i64 2159165887, i64 2159165921}
!504 = !{i64 2159189813, i64 2159190297, i64 2159189850, i64 2159189906, i64 2159189940, i64 2159189964, i64 2159190005, i64 2159190026, i64 2159190054, i64 2159190088}
!505 = !{i64 2158722122}
!506 = !{i64 2159238473}
!507 = !{i64 2158721437}
!508 = !{i64 2148906850}
!509 = !{i64 1153778, i64 1153795, i64 1153819, i64 1153845, i64 1153863}
!510 = !{i64 2148907220}
!511 = !{i64 2158908434, i64 2158908918, i64 2158908471, i64 2158908527, i64 2158908561, i64 2158908585, i64 2158908626, i64 2158908647, i64 2158908675, i64 2158908709}
!512 = !{i64 2158863382}
!513 = !{i64 1041268, i64 1041329}
!514 = !{i64 1044000}
!515 = !{i64 1044285}
!516 = !{i64 2155810406}
!517 = !{i64 2155810655}
