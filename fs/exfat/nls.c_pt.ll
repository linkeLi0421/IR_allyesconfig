; ModuleID = '/llk/IR_all_yes/fs/exfat/nls.c_pt.bc'
source_filename = "../fs/exfat/nls.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, i16, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [24 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [24 x i8] }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.hlist_bl_head = type { ptr }
%struct.hlist_node = type { ptr, ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { ptr }
%struct.list_lru = type { ptr, %struct.list_head, i32, i8 }
%struct.callback_head = type { ptr, ptr }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.list_head = type { ptr, ptr }
%struct.exfat_sb_info = type { i64, i32, i32, i32, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, ptr, i32, i32, ptr, ptr, i32, i32, %struct.mutex, %struct.mutex, %struct.exfat_mount_options, ptr, %struct.ratelimit_state, %struct.spinlock, [256 x %struct.hlist_head], %struct.callback_head }
%struct.exfat_mount_options = type { %struct.kuid_t, %struct.kgid_t, i16, i16, i16, ptr, i32, i8, i32 }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.nls_table = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.exfat_uni_name = type { [258 x i16], i16, i8 }
%struct.exfat_chain = type { i32, i32, i8 }
%struct.exfat_dentry = type { i8, %union.anon.70 }
%union.anon.70 = type { %struct.anon.71 }
%struct.anon.71 = type <{ i8, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, [7 x i8] }>
%struct.buffer_head = type { i32, ptr, ptr, i64, i32, ptr, ptr, ptr, ptr, %struct.list_head, ptr, %struct.atomic_t, %struct.spinlock }

@.str = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"fs/exfat/nls.c\00", [17 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"failed to %s (err : %d) nls len : %d\00", [59 x i8] zeroinitializer }, align 32
@__func__.exfat_utf8_to_utf16 = private unnamed_addr constant [20 x i8] c"exfat_utf8_to_utf16\00", align 1
@.str.3 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"failed to %s (estr:ENAMETOOLONG) nls len : %d, unilen : %d > %d\00", [32 x i8] zeroinitializer }, align 32
@bad_uni_chars = internal constant { [10 x i16], [44 x i8] } { [10 x i16] [i16 34, i16 42, i16 47, i16 58, i16 60, i16 62, i16 63, i16 92, i16 124, i16 0], [44 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"failed to read sector(0x%llx)\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [82 x i8], [46 x i8] } { [82 x i8] c"failed to load upcase table (idx : 0x%08x, chksum : 0x%08x, utbl_chksum : 0x%08x)\00", [46 x i8] zeroinitializer }, align 32
@uni_def_upcase = internal constant { [2918 x i16], [1460 x i8] } { [2918 x i16] [i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 129, i16 130, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 141, i16 142, i16 143, i16 144, i16 145, i16 146, i16 147, i16 148, i16 149, i16 150, i16 151, i16 152, i16 153, i16 154, i16 155, i16 156, i16 157, i16 158, i16 159, i16 160, i16 161, i16 162, i16 163, i16 164, i16 165, i16 166, i16 167, i16 168, i16 169, i16 170, i16 171, i16 172, i16 173, i16 174, i16 175, i16 176, i16 177, i16 178, i16 179, i16 180, i16 181, i16 182, i16 183, i16 184, i16 185, i16 186, i16 187, i16 188, i16 189, i16 190, i16 191, i16 192, i16 193, i16 194, i16 195, i16 196, i16 197, i16 198, i16 199, i16 200, i16 201, i16 202, i16 203, i16 204, i16 205, i16 206, i16 207, i16 208, i16 209, i16 210, i16 211, i16 212, i16 213, i16 214, i16 215, i16 216, i16 217, i16 218, i16 219, i16 220, i16 221, i16 222, i16 223, i16 192, i16 193, i16 194, i16 195, i16 196, i16 197, i16 198, i16 199, i16 200, i16 201, i16 202, i16 203, i16 204, i16 205, i16 206, i16 207, i16 208, i16 209, i16 210, i16 211, i16 212, i16 213, i16 214, i16 247, i16 216, i16 217, i16 218, i16 219, i16 220, i16 221, i16 222, i16 376, i16 256, i16 256, i16 258, i16 258, i16 260, i16 260, i16 262, i16 262, i16 264, i16 264, i16 266, i16 266, i16 268, i16 268, i16 270, i16 270, i16 272, i16 272, i16 274, i16 274, i16 276, i16 276, i16 278, i16 278, i16 280, i16 280, i16 282, i16 282, i16 284, i16 284, i16 286, i16 286, i16 288, i16 288, i16 290, i16 290, i16 292, i16 292, i16 294, i16 294, i16 296, i16 296, i16 298, i16 298, i16 300, i16 300, i16 302, i16 302, i16 304, i16 305, i16 306, i16 306, i16 308, i16 308, i16 310, i16 310, i16 312, i16 313, i16 313, i16 315, i16 315, i16 317, i16 317, i16 319, i16 319, i16 321, i16 321, i16 323, i16 323, i16 325, i16 325, i16 327, i16 327, i16 329, i16 330, i16 330, i16 332, i16 332, i16 334, i16 334, i16 336, i16 336, i16 338, i16 338, i16 340, i16 340, i16 342, i16 342, i16 344, i16 344, i16 346, i16 346, i16 348, i16 348, i16 350, i16 350, i16 352, i16 352, i16 354, i16 354, i16 356, i16 356, i16 358, i16 358, i16 360, i16 360, i16 362, i16 362, i16 364, i16 364, i16 366, i16 366, i16 368, i16 368, i16 370, i16 370, i16 372, i16 372, i16 374, i16 374, i16 376, i16 377, i16 377, i16 379, i16 379, i16 381, i16 381, i16 383, i16 579, i16 385, i16 386, i16 386, i16 388, i16 388, i16 390, i16 391, i16 391, i16 393, i16 394, i16 395, i16 395, i16 397, i16 398, i16 399, i16 400, i16 401, i16 401, i16 403, i16 404, i16 502, i16 406, i16 407, i16 408, i16 408, i16 573, i16 411, i16 412, i16 413, i16 544, i16 415, i16 416, i16 416, i16 418, i16 418, i16 420, i16 420, i16 422, i16 423, i16 423, i16 425, i16 426, i16 427, i16 428, i16 428, i16 430, i16 431, i16 431, i16 433, i16 434, i16 435, i16 435, i16 437, i16 437, i16 439, i16 440, i16 440, i16 442, i16 443, i16 444, i16 444, i16 446, i16 503, i16 448, i16 449, i16 450, i16 451, i16 452, i16 453, i16 452, i16 455, i16 456, i16 455, i16 458, i16 459, i16 458, i16 461, i16 461, i16 463, i16 463, i16 465, i16 465, i16 467, i16 467, i16 469, i16 469, i16 471, i16 471, i16 473, i16 473, i16 475, i16 475, i16 398, i16 478, i16 478, i16 480, i16 480, i16 482, i16 482, i16 484, i16 484, i16 486, i16 486, i16 488, i16 488, i16 490, i16 490, i16 492, i16 492, i16 494, i16 494, i16 496, i16 497, i16 498, i16 497, i16 500, i16 500, i16 502, i16 503, i16 504, i16 504, i16 506, i16 506, i16 508, i16 508, i16 510, i16 510, i16 512, i16 512, i16 514, i16 514, i16 516, i16 516, i16 518, i16 518, i16 520, i16 520, i16 522, i16 522, i16 524, i16 524, i16 526, i16 526, i16 528, i16 528, i16 530, i16 530, i16 532, i16 532, i16 534, i16 534, i16 536, i16 536, i16 538, i16 538, i16 540, i16 540, i16 542, i16 542, i16 544, i16 545, i16 546, i16 546, i16 548, i16 548, i16 550, i16 550, i16 552, i16 552, i16 554, i16 554, i16 556, i16 556, i16 558, i16 558, i16 560, i16 560, i16 562, i16 562, i16 564, i16 565, i16 566, i16 567, i16 568, i16 569, i16 11365, i16 571, i16 571, i16 573, i16 11366, i16 575, i16 576, i16 577, i16 577, i16 579, i16 580, i16 581, i16 582, i16 582, i16 584, i16 584, i16 586, i16 586, i16 588, i16 588, i16 590, i16 590, i16 592, i16 593, i16 594, i16 385, i16 390, i16 597, i16 393, i16 394, i16 600, i16 399, i16 602, i16 400, i16 604, i16 605, i16 606, i16 607, i16 403, i16 609, i16 610, i16 404, i16 612, i16 613, i16 614, i16 615, i16 407, i16 406, i16 618, i16 11362, i16 620, i16 621, i16 622, i16 412, i16 624, i16 625, i16 413, i16 627, i16 628, i16 415, i16 630, i16 631, i16 632, i16 633, i16 634, i16 635, i16 636, i16 11364, i16 638, i16 639, i16 422, i16 641, i16 642, i16 425, i16 644, i16 645, i16 646, i16 647, i16 430, i16 580, i16 433, i16 434, i16 581, i16 653, i16 654, i16 655, i16 656, i16 657, i16 439, i16 659, i16 660, i16 661, i16 662, i16 663, i16 664, i16 665, i16 666, i16 667, i16 668, i16 669, i16 670, i16 671, i16 672, i16 673, i16 674, i16 675, i16 676, i16 677, i16 678, i16 679, i16 680, i16 681, i16 682, i16 683, i16 684, i16 685, i16 686, i16 687, i16 688, i16 689, i16 690, i16 691, i16 692, i16 693, i16 694, i16 695, i16 696, i16 697, i16 698, i16 699, i16 700, i16 701, i16 702, i16 703, i16 704, i16 705, i16 706, i16 707, i16 708, i16 709, i16 710, i16 711, i16 712, i16 713, i16 714, i16 715, i16 716, i16 717, i16 718, i16 719, i16 720, i16 721, i16 722, i16 723, i16 724, i16 725, i16 726, i16 727, i16 728, i16 729, i16 730, i16 731, i16 732, i16 733, i16 734, i16 735, i16 736, i16 737, i16 738, i16 739, i16 740, i16 741, i16 742, i16 743, i16 744, i16 745, i16 746, i16 747, i16 748, i16 749, i16 750, i16 751, i16 752, i16 753, i16 754, i16 755, i16 756, i16 757, i16 758, i16 759, i16 760, i16 761, i16 762, i16 763, i16 764, i16 765, i16 766, i16 767, i16 768, i16 769, i16 770, i16 771, i16 772, i16 773, i16 774, i16 775, i16 776, i16 777, i16 778, i16 779, i16 780, i16 781, i16 782, i16 783, i16 784, i16 785, i16 786, i16 787, i16 788, i16 789, i16 790, i16 791, i16 792, i16 793, i16 794, i16 795, i16 796, i16 797, i16 798, i16 799, i16 800, i16 801, i16 802, i16 803, i16 804, i16 805, i16 806, i16 807, i16 808, i16 809, i16 810, i16 811, i16 812, i16 813, i16 814, i16 815, i16 816, i16 817, i16 818, i16 819, i16 820, i16 821, i16 822, i16 823, i16 824, i16 825, i16 826, i16 827, i16 828, i16 829, i16 830, i16 831, i16 832, i16 833, i16 834, i16 835, i16 836, i16 837, i16 838, i16 839, i16 840, i16 841, i16 842, i16 843, i16 844, i16 845, i16 846, i16 847, i16 848, i16 849, i16 850, i16 851, i16 852, i16 853, i16 854, i16 855, i16 856, i16 857, i16 858, i16 859, i16 860, i16 861, i16 862, i16 863, i16 864, i16 865, i16 866, i16 867, i16 868, i16 869, i16 870, i16 871, i16 872, i16 873, i16 874, i16 875, i16 876, i16 877, i16 878, i16 879, i16 880, i16 881, i16 882, i16 883, i16 884, i16 885, i16 886, i16 887, i16 888, i16 889, i16 890, i16 1021, i16 1022, i16 1023, i16 894, i16 895, i16 896, i16 897, i16 898, i16 899, i16 900, i16 901, i16 902, i16 903, i16 904, i16 905, i16 906, i16 907, i16 908, i16 909, i16 910, i16 911, i16 912, i16 913, i16 914, i16 915, i16 916, i16 917, i16 918, i16 919, i16 920, i16 921, i16 922, i16 923, i16 924, i16 925, i16 926, i16 927, i16 928, i16 929, i16 930, i16 931, i16 932, i16 933, i16 934, i16 935, i16 936, i16 937, i16 938, i16 939, i16 902, i16 904, i16 905, i16 906, i16 944, i16 913, i16 914, i16 915, i16 916, i16 917, i16 918, i16 919, i16 920, i16 921, i16 922, i16 923, i16 924, i16 925, i16 926, i16 927, i16 928, i16 929, i16 931, i16 931, i16 932, i16 933, i16 934, i16 935, i16 936, i16 937, i16 938, i16 939, i16 908, i16 910, i16 911, i16 975, i16 976, i16 977, i16 978, i16 979, i16 980, i16 981, i16 982, i16 983, i16 984, i16 984, i16 986, i16 986, i16 988, i16 988, i16 990, i16 990, i16 992, i16 992, i16 994, i16 994, i16 996, i16 996, i16 998, i16 998, i16 1000, i16 1000, i16 1002, i16 1002, i16 1004, i16 1004, i16 1006, i16 1006, i16 1008, i16 1009, i16 1017, i16 1011, i16 1012, i16 1013, i16 1014, i16 1015, i16 1015, i16 1017, i16 1018, i16 1018, i16 1020, i16 1021, i16 1022, i16 1023, i16 1024, i16 1025, i16 1026, i16 1027, i16 1028, i16 1029, i16 1030, i16 1031, i16 1032, i16 1033, i16 1034, i16 1035, i16 1036, i16 1037, i16 1038, i16 1039, i16 1040, i16 1041, i16 1042, i16 1043, i16 1044, i16 1045, i16 1046, i16 1047, i16 1048, i16 1049, i16 1050, i16 1051, i16 1052, i16 1053, i16 1054, i16 1055, i16 1056, i16 1057, i16 1058, i16 1059, i16 1060, i16 1061, i16 1062, i16 1063, i16 1064, i16 1065, i16 1066, i16 1067, i16 1068, i16 1069, i16 1070, i16 1071, i16 1040, i16 1041, i16 1042, i16 1043, i16 1044, i16 1045, i16 1046, i16 1047, i16 1048, i16 1049, i16 1050, i16 1051, i16 1052, i16 1053, i16 1054, i16 1055, i16 1056, i16 1057, i16 1058, i16 1059, i16 1060, i16 1061, i16 1062, i16 1063, i16 1064, i16 1065, i16 1066, i16 1067, i16 1068, i16 1069, i16 1070, i16 1071, i16 1024, i16 1025, i16 1026, i16 1027, i16 1028, i16 1029, i16 1030, i16 1031, i16 1032, i16 1033, i16 1034, i16 1035, i16 1036, i16 1037, i16 1038, i16 1039, i16 1120, i16 1120, i16 1122, i16 1122, i16 1124, i16 1124, i16 1126, i16 1126, i16 1128, i16 1128, i16 1130, i16 1130, i16 1132, i16 1132, i16 1134, i16 1134, i16 1136, i16 1136, i16 1138, i16 1138, i16 1140, i16 1140, i16 1142, i16 1142, i16 1144, i16 1144, i16 1146, i16 1146, i16 1148, i16 1148, i16 1150, i16 1150, i16 1152, i16 1152, i16 1154, i16 1155, i16 1156, i16 1157, i16 1158, i16 1159, i16 1160, i16 1161, i16 1162, i16 1162, i16 1164, i16 1164, i16 1166, i16 1166, i16 1168, i16 1168, i16 1170, i16 1170, i16 1172, i16 1172, i16 1174, i16 1174, i16 1176, i16 1176, i16 1178, i16 1178, i16 1180, i16 1180, i16 1182, i16 1182, i16 1184, i16 1184, i16 1186, i16 1186, i16 1188, i16 1188, i16 1190, i16 1190, i16 1192, i16 1192, i16 1194, i16 1194, i16 1196, i16 1196, i16 1198, i16 1198, i16 1200, i16 1200, i16 1202, i16 1202, i16 1204, i16 1204, i16 1206, i16 1206, i16 1208, i16 1208, i16 1210, i16 1210, i16 1212, i16 1212, i16 1214, i16 1214, i16 1216, i16 1217, i16 1217, i16 1219, i16 1219, i16 1221, i16 1221, i16 1223, i16 1223, i16 1225, i16 1225, i16 1227, i16 1227, i16 1229, i16 1229, i16 1216, i16 1232, i16 1232, i16 1234, i16 1234, i16 1236, i16 1236, i16 1238, i16 1238, i16 1240, i16 1240, i16 1242, i16 1242, i16 1244, i16 1244, i16 1246, i16 1246, i16 1248, i16 1248, i16 1250, i16 1250, i16 1252, i16 1252, i16 1254, i16 1254, i16 1256, i16 1256, i16 1258, i16 1258, i16 1260, i16 1260, i16 1262, i16 1262, i16 1264, i16 1264, i16 1266, i16 1266, i16 1268, i16 1268, i16 1270, i16 1270, i16 1272, i16 1272, i16 1274, i16 1274, i16 1276, i16 1276, i16 1278, i16 1278, i16 1280, i16 1280, i16 1282, i16 1282, i16 1284, i16 1284, i16 1286, i16 1286, i16 1288, i16 1288, i16 1290, i16 1290, i16 1292, i16 1292, i16 1294, i16 1294, i16 1296, i16 1296, i16 1298, i16 1298, i16 1300, i16 1301, i16 1302, i16 1303, i16 1304, i16 1305, i16 1306, i16 1307, i16 1308, i16 1309, i16 1310, i16 1311, i16 1312, i16 1313, i16 1314, i16 1315, i16 1316, i16 1317, i16 1318, i16 1319, i16 1320, i16 1321, i16 1322, i16 1323, i16 1324, i16 1325, i16 1326, i16 1327, i16 1328, i16 1329, i16 1330, i16 1331, i16 1332, i16 1333, i16 1334, i16 1335, i16 1336, i16 1337, i16 1338, i16 1339, i16 1340, i16 1341, i16 1342, i16 1343, i16 1344, i16 1345, i16 1346, i16 1347, i16 1348, i16 1349, i16 1350, i16 1351, i16 1352, i16 1353, i16 1354, i16 1355, i16 1356, i16 1357, i16 1358, i16 1359, i16 1360, i16 1361, i16 1362, i16 1363, i16 1364, i16 1365, i16 1366, i16 1367, i16 1368, i16 1369, i16 1370, i16 1371, i16 1372, i16 1373, i16 1374, i16 1375, i16 1376, i16 1329, i16 1330, i16 1331, i16 1332, i16 1333, i16 1334, i16 1335, i16 1336, i16 1337, i16 1338, i16 1339, i16 1340, i16 1341, i16 1342, i16 1343, i16 1344, i16 1345, i16 1346, i16 1347, i16 1348, i16 1349, i16 1350, i16 1351, i16 1352, i16 1353, i16 1354, i16 1355, i16 1356, i16 1357, i16 1358, i16 1359, i16 1360, i16 1361, i16 1362, i16 1363, i16 1364, i16 1365, i16 1366, i16 -1, i16 6134, i16 11363, i16 7550, i16 7551, i16 7552, i16 7553, i16 7554, i16 7555, i16 7556, i16 7557, i16 7558, i16 7559, i16 7560, i16 7561, i16 7562, i16 7563, i16 7564, i16 7565, i16 7566, i16 7567, i16 7568, i16 7569, i16 7570, i16 7571, i16 7572, i16 7573, i16 7574, i16 7575, i16 7576, i16 7577, i16 7578, i16 7579, i16 7580, i16 7581, i16 7582, i16 7583, i16 7584, i16 7585, i16 7586, i16 7587, i16 7588, i16 7589, i16 7590, i16 7591, i16 7592, i16 7593, i16 7594, i16 7595, i16 7596, i16 7597, i16 7598, i16 7599, i16 7600, i16 7601, i16 7602, i16 7603, i16 7604, i16 7605, i16 7606, i16 7607, i16 7608, i16 7609, i16 7610, i16 7611, i16 7612, i16 7613, i16 7614, i16 7615, i16 7616, i16 7617, i16 7618, i16 7619, i16 7620, i16 7621, i16 7622, i16 7623, i16 7624, i16 7625, i16 7626, i16 7627, i16 7628, i16 7629, i16 7630, i16 7631, i16 7632, i16 7633, i16 7634, i16 7635, i16 7636, i16 7637, i16 7638, i16 7639, i16 7640, i16 7641, i16 7642, i16 7643, i16 7644, i16 7645, i16 7646, i16 7647, i16 7648, i16 7649, i16 7650, i16 7651, i16 7652, i16 7653, i16 7654, i16 7655, i16 7656, i16 7657, i16 7658, i16 7659, i16 7660, i16 7661, i16 7662, i16 7663, i16 7664, i16 7665, i16 7666, i16 7667, i16 7668, i16 7669, i16 7670, i16 7671, i16 7672, i16 7673, i16 7674, i16 7675, i16 7676, i16 7677, i16 7678, i16 7679, i16 7680, i16 7680, i16 7682, i16 7682, i16 7684, i16 7684, i16 7686, i16 7686, i16 7688, i16 7688, i16 7690, i16 7690, i16 7692, i16 7692, i16 7694, i16 7694, i16 7696, i16 7696, i16 7698, i16 7698, i16 7700, i16 7700, i16 7702, i16 7702, i16 7704, i16 7704, i16 7706, i16 7706, i16 7708, i16 7708, i16 7710, i16 7710, i16 7712, i16 7712, i16 7714, i16 7714, i16 7716, i16 7716, i16 7718, i16 7718, i16 7720, i16 7720, i16 7722, i16 7722, i16 7724, i16 7724, i16 7726, i16 7726, i16 7728, i16 7728, i16 7730, i16 7730, i16 7732, i16 7732, i16 7734, i16 7734, i16 7736, i16 7736, i16 7738, i16 7738, i16 7740, i16 7740, i16 7742, i16 7742, i16 7744, i16 7744, i16 7746, i16 7746, i16 7748, i16 7748, i16 7750, i16 7750, i16 7752, i16 7752, i16 7754, i16 7754, i16 7756, i16 7756, i16 7758, i16 7758, i16 7760, i16 7760, i16 7762, i16 7762, i16 7764, i16 7764, i16 7766, i16 7766, i16 7768, i16 7768, i16 7770, i16 7770, i16 7772, i16 7772, i16 7774, i16 7774, i16 7776, i16 7776, i16 7778, i16 7778, i16 7780, i16 7780, i16 7782, i16 7782, i16 7784, i16 7784, i16 7786, i16 7786, i16 7788, i16 7788, i16 7790, i16 7790, i16 7792, i16 7792, i16 7794, i16 7794, i16 7796, i16 7796, i16 7798, i16 7798, i16 7800, i16 7800, i16 7802, i16 7802, i16 7804, i16 7804, i16 7806, i16 7806, i16 7808, i16 7808, i16 7810, i16 7810, i16 7812, i16 7812, i16 7814, i16 7814, i16 7816, i16 7816, i16 7818, i16 7818, i16 7820, i16 7820, i16 7822, i16 7822, i16 7824, i16 7824, i16 7826, i16 7826, i16 7828, i16 7828, i16 7830, i16 7831, i16 7832, i16 7833, i16 7834, i16 7835, i16 7836, i16 7837, i16 7838, i16 7839, i16 7840, i16 7840, i16 7842, i16 7842, i16 7844, i16 7844, i16 7846, i16 7846, i16 7848, i16 7848, i16 7850, i16 7850, i16 7852, i16 7852, i16 7854, i16 7854, i16 7856, i16 7856, i16 7858, i16 7858, i16 7860, i16 7860, i16 7862, i16 7862, i16 7864, i16 7864, i16 7866, i16 7866, i16 7868, i16 7868, i16 7870, i16 7870, i16 7872, i16 7872, i16 7874, i16 7874, i16 7876, i16 7876, i16 7878, i16 7878, i16 7880, i16 7880, i16 7882, i16 7882, i16 7884, i16 7884, i16 7886, i16 7886, i16 7888, i16 7888, i16 7890, i16 7890, i16 7892, i16 7892, i16 7894, i16 7894, i16 7896, i16 7896, i16 7898, i16 7898, i16 7900, i16 7900, i16 7902, i16 7902, i16 7904, i16 7904, i16 7906, i16 7906, i16 7908, i16 7908, i16 7910, i16 7910, i16 7912, i16 7912, i16 7914, i16 7914, i16 7916, i16 7916, i16 7918, i16 7918, i16 7920, i16 7920, i16 7922, i16 7922, i16 7924, i16 7924, i16 7926, i16 7926, i16 7928, i16 7928, i16 7930, i16 7931, i16 7932, i16 7933, i16 7934, i16 7935, i16 7944, i16 7945, i16 7946, i16 7947, i16 7948, i16 7949, i16 7950, i16 7951, i16 7944, i16 7945, i16 7946, i16 7947, i16 7948, i16 7949, i16 7950, i16 7951, i16 7960, i16 7961, i16 7962, i16 7963, i16 7964, i16 7965, i16 7958, i16 7959, i16 7960, i16 7961, i16 7962, i16 7963, i16 7964, i16 7965, i16 7966, i16 7967, i16 7976, i16 7977, i16 7978, i16 7979, i16 7980, i16 7981, i16 7982, i16 7983, i16 7976, i16 7977, i16 7978, i16 7979, i16 7980, i16 7981, i16 7982, i16 7983, i16 7992, i16 7993, i16 7994, i16 7995, i16 7996, i16 7997, i16 7998, i16 7999, i16 7992, i16 7993, i16 7994, i16 7995, i16 7996, i16 7997, i16 7998, i16 7999, i16 8008, i16 8009, i16 8010, i16 8011, i16 8012, i16 8013, i16 8006, i16 8007, i16 8008, i16 8009, i16 8010, i16 8011, i16 8012, i16 8013, i16 8014, i16 8015, i16 8016, i16 8025, i16 8018, i16 8027, i16 8020, i16 8029, i16 8022, i16 8031, i16 8024, i16 8025, i16 8026, i16 8027, i16 8028, i16 8029, i16 8030, i16 8031, i16 8040, i16 8041, i16 8042, i16 8043, i16 8044, i16 8045, i16 8046, i16 8047, i16 8040, i16 8041, i16 8042, i16 8043, i16 8044, i16 8045, i16 8046, i16 8047, i16 8122, i16 8123, i16 8136, i16 8137, i16 8138, i16 8139, i16 8154, i16 8155, i16 8184, i16 8185, i16 8170, i16 8171, i16 8186, i16 8187, i16 8062, i16 8063, i16 8072, i16 8073, i16 8074, i16 8075, i16 8076, i16 8077, i16 8078, i16 8079, i16 8072, i16 8073, i16 8074, i16 8075, i16 8076, i16 8077, i16 8078, i16 8079, i16 8088, i16 8089, i16 8090, i16 8091, i16 8092, i16 8093, i16 8094, i16 8095, i16 8088, i16 8089, i16 8090, i16 8091, i16 8092, i16 8093, i16 8094, i16 8095, i16 8104, i16 8105, i16 8106, i16 8107, i16 8108, i16 8109, i16 8110, i16 8111, i16 8104, i16 8105, i16 8106, i16 8107, i16 8108, i16 8109, i16 8110, i16 8111, i16 8120, i16 8121, i16 8114, i16 8124, i16 8116, i16 8117, i16 8118, i16 8119, i16 8120, i16 8121, i16 8122, i16 8123, i16 8124, i16 8125, i16 8126, i16 8127, i16 8128, i16 8129, i16 8130, i16 8131, i16 8132, i16 8133, i16 8134, i16 8135, i16 8136, i16 8137, i16 8138, i16 8139, i16 8131, i16 8141, i16 8142, i16 8143, i16 8152, i16 8153, i16 8146, i16 8147, i16 8148, i16 8149, i16 8150, i16 8151, i16 8152, i16 8153, i16 8154, i16 8155, i16 8156, i16 8157, i16 8158, i16 8159, i16 8168, i16 8169, i16 8162, i16 8163, i16 8164, i16 8172, i16 8166, i16 8167, i16 8168, i16 8169, i16 8170, i16 8171, i16 8172, i16 8173, i16 8174, i16 8175, i16 8176, i16 8177, i16 8178, i16 8179, i16 8180, i16 8181, i16 8182, i16 8183, i16 8184, i16 8185, i16 8186, i16 8187, i16 8179, i16 8189, i16 8190, i16 8191, i16 8192, i16 8193, i16 8194, i16 8195, i16 8196, i16 8197, i16 8198, i16 8199, i16 8200, i16 8201, i16 8202, i16 8203, i16 8204, i16 8205, i16 8206, i16 8207, i16 8208, i16 8209, i16 8210, i16 8211, i16 8212, i16 8213, i16 8214, i16 8215, i16 8216, i16 8217, i16 8218, i16 8219, i16 8220, i16 8221, i16 8222, i16 8223, i16 8224, i16 8225, i16 8226, i16 8227, i16 8228, i16 8229, i16 8230, i16 8231, i16 8232, i16 8233, i16 8234, i16 8235, i16 8236, i16 8237, i16 8238, i16 8239, i16 8240, i16 8241, i16 8242, i16 8243, i16 8244, i16 8245, i16 8246, i16 8247, i16 8248, i16 8249, i16 8250, i16 8251, i16 8252, i16 8253, i16 8254, i16 8255, i16 8256, i16 8257, i16 8258, i16 8259, i16 8260, i16 8261, i16 8262, i16 8263, i16 8264, i16 8265, i16 8266, i16 8267, i16 8268, i16 8269, i16 8270, i16 8271, i16 8272, i16 8273, i16 8274, i16 8275, i16 8276, i16 8277, i16 8278, i16 8279, i16 8280, i16 8281, i16 8282, i16 8283, i16 8284, i16 8285, i16 8286, i16 8287, i16 8288, i16 8289, i16 8290, i16 8291, i16 8292, i16 8293, i16 8294, i16 8295, i16 8296, i16 8297, i16 8298, i16 8299, i16 8300, i16 8301, i16 8302, i16 8303, i16 8304, i16 8305, i16 8306, i16 8307, i16 8308, i16 8309, i16 8310, i16 8311, i16 8312, i16 8313, i16 8314, i16 8315, i16 8316, i16 8317, i16 8318, i16 8319, i16 8320, i16 8321, i16 8322, i16 8323, i16 8324, i16 8325, i16 8326, i16 8327, i16 8328, i16 8329, i16 8330, i16 8331, i16 8332, i16 8333, i16 8334, i16 8335, i16 8336, i16 8337, i16 8338, i16 8339, i16 8340, i16 8341, i16 8342, i16 8343, i16 8344, i16 8345, i16 8346, i16 8347, i16 8348, i16 8349, i16 8350, i16 8351, i16 8352, i16 8353, i16 8354, i16 8355, i16 8356, i16 8357, i16 8358, i16 8359, i16 8360, i16 8361, i16 8362, i16 8363, i16 8364, i16 8365, i16 8366, i16 8367, i16 8368, i16 8369, i16 8370, i16 8371, i16 8372, i16 8373, i16 8374, i16 8375, i16 8376, i16 8377, i16 8378, i16 8379, i16 8380, i16 8381, i16 8382, i16 8383, i16 8384, i16 8385, i16 8386, i16 8387, i16 8388, i16 8389, i16 8390, i16 8391, i16 8392, i16 8393, i16 8394, i16 8395, i16 8396, i16 8397, i16 8398, i16 8399, i16 8400, i16 8401, i16 8402, i16 8403, i16 8404, i16 8405, i16 8406, i16 8407, i16 8408, i16 8409, i16 8410, i16 8411, i16 8412, i16 8413, i16 8414, i16 8415, i16 8416, i16 8417, i16 8418, i16 8419, i16 8420, i16 8421, i16 8422, i16 8423, i16 8424, i16 8425, i16 8426, i16 8427, i16 8428, i16 8429, i16 8430, i16 8431, i16 8432, i16 8433, i16 8434, i16 8435, i16 8436, i16 8437, i16 8438, i16 8439, i16 8440, i16 8441, i16 8442, i16 8443, i16 8444, i16 8445, i16 8446, i16 8447, i16 8448, i16 8449, i16 8450, i16 8451, i16 8452, i16 8453, i16 8454, i16 8455, i16 8456, i16 8457, i16 8458, i16 8459, i16 8460, i16 8461, i16 8462, i16 8463, i16 8464, i16 8465, i16 8466, i16 8467, i16 8468, i16 8469, i16 8470, i16 8471, i16 8472, i16 8473, i16 8474, i16 8475, i16 8476, i16 8477, i16 8478, i16 8479, i16 8480, i16 8481, i16 8482, i16 8483, i16 8484, i16 8485, i16 8486, i16 8487, i16 8488, i16 8489, i16 8490, i16 8491, i16 8492, i16 8493, i16 8494, i16 8495, i16 8496, i16 8497, i16 8498, i16 8499, i16 8500, i16 8501, i16 8502, i16 8503, i16 8504, i16 8505, i16 8506, i16 8507, i16 8508, i16 8509, i16 8510, i16 8511, i16 8512, i16 8513, i16 8514, i16 8515, i16 8516, i16 8517, i16 8518, i16 8519, i16 8520, i16 8521, i16 8522, i16 8523, i16 8524, i16 8525, i16 8498, i16 8527, i16 8528, i16 8529, i16 8530, i16 8531, i16 8532, i16 8533, i16 8534, i16 8535, i16 8536, i16 8537, i16 8538, i16 8539, i16 8540, i16 8541, i16 8542, i16 8543, i16 8544, i16 8545, i16 8546, i16 8547, i16 8548, i16 8549, i16 8550, i16 8551, i16 8552, i16 8553, i16 8554, i16 8555, i16 8556, i16 8557, i16 8558, i16 8559, i16 8544, i16 8545, i16 8546, i16 8547, i16 8548, i16 8549, i16 8550, i16 8551, i16 8552, i16 8553, i16 8554, i16 8555, i16 8556, i16 8557, i16 8558, i16 8559, i16 8576, i16 8577, i16 8578, i16 8579, i16 8579, i16 -1, i16 843, i16 9398, i16 9399, i16 9400, i16 9401, i16 9402, i16 9403, i16 9404, i16 9405, i16 9406, i16 9407, i16 9408, i16 9409, i16 9410, i16 9411, i16 9412, i16 9413, i16 9414, i16 9415, i16 9416, i16 9417, i16 9418, i16 9419, i16 9420, i16 9421, i16 9422, i16 9423, i16 -1, i16 1862, i16 11264, i16 11265, i16 11266, i16 11267, i16 11268, i16 11269, i16 11270, i16 11271, i16 11272, i16 11273, i16 11274, i16 11275, i16 11276, i16 11277, i16 11278, i16 11279, i16 11280, i16 11281, i16 11282, i16 11283, i16 11284, i16 11285, i16 11286, i16 11287, i16 11288, i16 11289, i16 11290, i16 11291, i16 11292, i16 11293, i16 11294, i16 11295, i16 11296, i16 11297, i16 11298, i16 11299, i16 11300, i16 11301, i16 11302, i16 11303, i16 11304, i16 11305, i16 11306, i16 11307, i16 11308, i16 11309, i16 11310, i16 11359, i16 11360, i16 11360, i16 11362, i16 11363, i16 11364, i16 11365, i16 11366, i16 11367, i16 11367, i16 11369, i16 11369, i16 11371, i16 11371, i16 11373, i16 11374, i16 11375, i16 11376, i16 11377, i16 11378, i16 11379, i16 11380, i16 11381, i16 11381, i16 11383, i16 11384, i16 11385, i16 11386, i16 11387, i16 11388, i16 11389, i16 11390, i16 11391, i16 11392, i16 11392, i16 11394, i16 11394, i16 11396, i16 11396, i16 11398, i16 11398, i16 11400, i16 11400, i16 11402, i16 11402, i16 11404, i16 11404, i16 11406, i16 11406, i16 11408, i16 11408, i16 11410, i16 11410, i16 11412, i16 11412, i16 11414, i16 11414, i16 11416, i16 11416, i16 11418, i16 11418, i16 11420, i16 11420, i16 11422, i16 11422, i16 11424, i16 11424, i16 11426, i16 11426, i16 11428, i16 11428, i16 11430, i16 11430, i16 11432, i16 11432, i16 11434, i16 11434, i16 11436, i16 11436, i16 11438, i16 11438, i16 11440, i16 11440, i16 11442, i16 11442, i16 11444, i16 11444, i16 11446, i16 11446, i16 11448, i16 11448, i16 11450, i16 11450, i16 11452, i16 11452, i16 11454, i16 11454, i16 11456, i16 11456, i16 11458, i16 11458, i16 11460, i16 11460, i16 11462, i16 11462, i16 11464, i16 11464, i16 11466, i16 11466, i16 11468, i16 11468, i16 11470, i16 11470, i16 11472, i16 11472, i16 11474, i16 11474, i16 11476, i16 11476, i16 11478, i16 11478, i16 11480, i16 11480, i16 11482, i16 11482, i16 11484, i16 11484, i16 11486, i16 11486, i16 11488, i16 11488, i16 11490, i16 11490, i16 11492, i16 11493, i16 11494, i16 11495, i16 11496, i16 11497, i16 11498, i16 11499, i16 11500, i16 11501, i16 11502, i16 11503, i16 11504, i16 11505, i16 11506, i16 11507, i16 11508, i16 11509, i16 11510, i16 11511, i16 11512, i16 11513, i16 11514, i16 11515, i16 11516, i16 11517, i16 11518, i16 11519, i16 4256, i16 4257, i16 4258, i16 4259, i16 4260, i16 4261, i16 4262, i16 4263, i16 4264, i16 4265, i16 4266, i16 4267, i16 4268, i16 4269, i16 4270, i16 4271, i16 4272, i16 4273, i16 4274, i16 4275, i16 4276, i16 4277, i16 4278, i16 4279, i16 4280, i16 4281, i16 4282, i16 4283, i16 4284, i16 4285, i16 4286, i16 4287, i16 4288, i16 4289, i16 4290, i16 4291, i16 4292, i16 4293, i16 -1, i16 -11749, i16 -223, i16 -222, i16 -221, i16 -220, i16 -219, i16 -218, i16 -217, i16 -216, i16 -215, i16 -214, i16 -213, i16 -212, i16 -211, i16 -210, i16 -209, i16 -208, i16 -207, i16 -206, i16 -205, i16 -204, i16 -203, i16 -202, i16 -201, i16 -200, i16 -199, i16 -198, i16 -165, i16 -164, i16 -163, i16 -162, i16 -161, i16 -160, i16 -159, i16 -158, i16 -157, i16 -156, i16 -155, i16 -154, i16 -153, i16 -152, i16 -151, i16 -150, i16 -149, i16 -148, i16 -147, i16 -146, i16 -145, i16 -144, i16 -143, i16 -142, i16 -141, i16 -140, i16 -139, i16 -138, i16 -137, i16 -136, i16 -135, i16 -134, i16 -133, i16 -132, i16 -131, i16 -130, i16 -129, i16 -128, i16 -127, i16 -126, i16 -125, i16 -124, i16 -123, i16 -122, i16 -121, i16 -120, i16 -119, i16 -118, i16 -117, i16 -116, i16 -115, i16 -114, i16 -113, i16 -112, i16 -111, i16 -110, i16 -109, i16 -108, i16 -107, i16 -106, i16 -105, i16 -104, i16 -103, i16 -102, i16 -101, i16 -100, i16 -99, i16 -98, i16 -97, i16 -96, i16 -95, i16 -94, i16 -93, i16 -92, i16 -91, i16 -90, i16 -89, i16 -88, i16 -87, i16 -86, i16 -85, i16 -84, i16 -83, i16 -82, i16 -81, i16 -80, i16 -79, i16 -78, i16 -77, i16 -76, i16 -75, i16 -74, i16 -73, i16 -72, i16 -71, i16 -70, i16 -69, i16 -68, i16 -67, i16 -66, i16 -65, i16 -64, i16 -63, i16 -62, i16 -61, i16 -60, i16 -59, i16 -58, i16 -57, i16 -56, i16 -55, i16 -54, i16 -53, i16 -52, i16 -51, i16 -50, i16 -49, i16 -48, i16 -47, i16 -46, i16 -45, i16 -44, i16 -43, i16 -42, i16 -41, i16 -40, i16 -39, i16 -38, i16 -37, i16 -36, i16 -35, i16 -34, i16 -33, i16 -32, i16 -31, i16 -30, i16 -29, i16 -28, i16 -27, i16 -26, i16 -25, i16 -24, i16 -23, i16 -22, i16 -21, i16 -20, i16 -19, i16 -18, i16 -17, i16 -16, i16 -15, i16 -14, i16 -13, i16 -12, i16 -11, i16 -10, i16 -9, i16 -8, i16 -7, i16 -6, i16 -5, i16 -4, i16 -3, i16 -2, i16 -1], [1460 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [11 x i64] [i64 9, i64 16, i64 34, i64 42, i64 47, i64 58, i64 60, i64 62, i64 63, i64 92, i64 124]
@__sancov_gen_cov_switch_values.6 = internal global [11 x i64] [i64 9, i64 16, i64 34, i64 42, i64 47, i64 58, i64 60, i64 62, i64 63, i64 92, i64 124]
@__sancov_gen_cov_switch_values.7 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 258]
@__sancov_gen_cov_switch_values.8 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967291]
@___asan_gen_.11 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.31, i32 501, i32 2 }
@___asan_gen_.17 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.31, i32 506, i32 3 }
@___asan_gen_.20 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.31, i32 512, i32 3 }
@___asan_gen_.21 = private unnamed_addr constant [14 x i8] c"bad_uni_chars\00", align 1
@___asan_gen_.23 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.31, i32 399, i32 23 }
@___asan_gen_.26 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.31, i32 674, i32 4 }
@___asan_gen_.27 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.29 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.31, i32 702, i32 2 }
@___asan_gen_.30 = private unnamed_addr constant [15 x i8] c"uni_def_upcase\00", align 1
@___asan_gen_.31 = private constant [18 x i8] c"../fs/exfat/nls.c\00", align 1
@___asan_gen_.32 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.31, i32 23, i32 29 }
@llvm.compiler.used = appending global [8 x ptr] [ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @bad_uni_chars, ptr @.str.4, ptr @.str.5, ptr @uni_def_upcase], section "llvm.metadata"
@0 = internal global [8 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.27 to i32), i32 ptrtoint (ptr @___asan_gen_.31 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.11 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.27 to i32), i32 ptrtoint (ptr @___asan_gen_.31 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.17 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.27 to i32), i32 ptrtoint (ptr @___asan_gen_.31 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.17 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.27 to i32), i32 ptrtoint (ptr @___asan_gen_.31 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.20 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bad_uni_chars to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.21 to i32), i32 ptrtoint (ptr @___asan_gen_.31 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.23 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.27 to i32), i32 ptrtoint (ptr @___asan_gen_.31 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.26 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 82, i32 128, i32 ptrtoint (ptr @___asan_gen_.27 to i32), i32 ptrtoint (ptr @___asan_gen_.31 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.29 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uni_def_upcase to i32), i32 5836, i32 7296, i32 ptrtoint (ptr @___asan_gen_.30 to i32), i32 ptrtoint (ptr @___asan_gen_.31 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.32 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i16 @exfat_toupper(ptr nocapture noundef readonly %sb, i16 noundef zeroext %a) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 33
  %0 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_fs_info.i, align 16
  %vol_utbl = getelementptr inbounds %struct.exfat_sb_info, ptr %1, i32 0, i32 18
  %2 = ptrtoint ptr %vol_utbl to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vol_utbl, align 4
  %idxprom = zext i16 %a to i32
  %arrayidx = getelementptr i16, ptr %3, i32 %idxprom
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %arrayidx, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool.not = icmp eq i16 %5, 0
  %a. = select i1 %tobool.not, i16 %a, i16 %5
  ret i16 %a.
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local i32 @exfat_uniname_ncmp(ptr nocapture noundef readonly %sb, ptr nocapture noundef readonly %a, ptr nocapture noundef readonly %b, i32 noundef %len) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %cmp16.not = icmp eq i32 %len, 0
  br i1 %cmp16.not, label %entry.cleanup_crit_edge, label %for.body.lr.ph

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 33
  %0 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_fs_info.i.i, align 16
  %vol_utbl.i = getelementptr inbounds %struct.exfat_sb_info, ptr %1, i32 0, i32 18
  %2 = ptrtoint ptr %vol_utbl.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vol_utbl.i, align 4
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.019 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %b.addr.018 = phi ptr [ %b, %for.body.lr.ph ], [ %incdec.ptr5, %for.inc.for.body_crit_edge ]
  %a.addr.017 = phi ptr [ %a, %for.body.lr.ph ], [ %incdec.ptr, %for.inc.for.body_crit_edge ]
  %4 = ptrtoint ptr %a.addr.017 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %a.addr.017, align 2
  %idxprom.i = zext i16 %5 to i32
  %arrayidx.i = getelementptr i16, ptr %3, i32 %idxprom.i
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %arrayidx.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool.not.i = icmp eq i16 %7, 0
  %a..i = select i1 %tobool.not.i, i16 %5, i16 %7
  %8 = ptrtoint ptr %b.addr.018 to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %b.addr.018, align 2
  %idxprom.i12 = zext i16 %9 to i32
  %arrayidx.i13 = getelementptr i16, ptr %3, i32 %idxprom.i12
  %10 = ptrtoint ptr %arrayidx.i13 to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %arrayidx.i13, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %tobool.not.i14 = icmp eq i16 %11, 0
  %a..i15 = select i1 %tobool.not.i14, i16 %9, i16 %11
  call void @__sanitizer_cov_trace_cmp2(i16 %a..i, i16 %a..i15)
  %cmp3.not = icmp eq i16 %a..i, %a..i15
  br i1 %cmp3.not, label %for.inc, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %inc = add nuw i32 %i.019, 1
  %incdec.ptr = getelementptr i16, ptr %a.addr.017, i32 1
  %incdec.ptr5 = getelementptr i16, ptr %b.addr.018, i32 1
  %exitcond.not = icmp eq i32 %inc, %len
  br i1 %exitcond.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %for.body.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ], [ 1, %for.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @exfat_utf16_to_nls(ptr nocapture noundef readonly %sb, ptr noundef %uniname, ptr noundef %p_cstring, i32 noundef %buflen) local_unnamed_addr #3 align 64 {
entry:
  %buf.i = alloca [6 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 33
  %0 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_fs_info.i, align 16
  %utf8 = getelementptr inbounds %struct.exfat_sb_info, ptr %1, i32 0, i32 23, i32 7
  %2 = ptrtoint ptr %utf8 to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %utf8, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %call.i = tail call i32 @utf16s_to_utf8s(ptr noundef %uniname, i32 noundef 255, i32 noundef 0, ptr noundef %p_cstring, i32 noundef %buflen) #8
  %arrayidx.i = getelementptr i8, ptr %p_cstring, i32 %call.i
  %3 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %arrayidx.i, align 1
  br label %return

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %buf.i) #8
  %sub.i = add i32 %buflen, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp177.i = icmp sgt i32 %sub.i, 0
  %4 = call ptr @memset(ptr %buf.i, i32 255, i32 6)
  br i1 %cmp177.i, label %while.body.lr.ph.i, label %if.end.__exfat_utf16_to_nls.exit_crit_edge

if.end.__exfat_utf16_to_nls.exit_crit_edge:       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %__exfat_utf16_to_nls.exit

while.body.lr.ph.i:                               ; preds = %if.end
  %nls_io.i = getelementptr inbounds %struct.exfat_sb_info, ptr %1, i32 0, i32 24
  %5 = ptrtoint ptr %nls_io.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %nls_io.i, align 8
  %uni2char.i.i = getelementptr inbounds %struct.nls_table, ptr %6, i32 0, i32 2
  br label %while.body.i

while.body.i:                                     ; preds = %if.end46.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %uniname.081.i = phi ptr [ %uniname, %while.body.lr.ph.i ], [ %incdec.ptr47.i, %if.end46.i.while.body.i_crit_edge ]
  %out_len.080.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %add34.i, %if.end46.i.while.body.i_crit_edge ]
  %i.079.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %inc48.i, %if.end46.i.while.body.i_crit_edge ]
  %p_cstring.addr.078.i = phi ptr [ %p_cstring, %while.body.lr.ph.i ], [ %p_cstring.addr.2.i, %if.end46.i.while.body.i_crit_edge ]
  %7 = ptrtoint ptr %uniname.081.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %uniname.081.i, align 2
  %conv.i = zext i16 %8 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %cmp2.i = icmp eq i16 %8, 0
  br i1 %cmp2.i, label %while.body.i.__exfat_utf16_to_nls.exit_crit_edge, label %if.end.i

while.body.i.__exfat_utf16_to_nls.exit_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %__exfat_utf16_to_nls.exit

if.end.i:                                         ; preds = %while.body.i
  %and.i = and i32 %conv.i, 63488
  call void @__sanitizer_cov_trace_const_cmp4(i32 55296, i32 %and.i)
  %cmp5.not.i = icmp eq i32 %and.i, 55296
  br i1 %cmp5.not.i, label %if.else.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.end.i
  %9 = ptrtoint ptr %buf.i to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 0, ptr %buf.i, align 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 128, i16 %8)
  %cmp.i.i = icmp ult i16 %8, 128
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #10
  %conv2.i.i = trunc i16 %8 to i8
  br label %cleanup.sink.split.i.i

if.end.i.i:                                       ; preds = %if.then7.i
  %10 = ptrtoint ptr %uni2char.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %uni2char.i.i, align 4
  %call.i.i = call i32 %11(i16 noundef zeroext %8, ptr noundef nonnull %buf.i, i32 noundef 6) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp4.i.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp4.i.i, label %if.end.i.i.cleanup.sink.split.i.i_crit_edge, label %if.end.i.i.if.end26.i_crit_edge

if.end.i.i.if.end26.i_crit_edge:                  ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end26.i

if.end.i.i.cleanup.sink.split.i.i_crit_edge:      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup.sink.split.i.i

cleanup.sink.split.i.i:                           ; preds = %if.end.i.i.cleanup.sink.split.i.i_crit_edge, %if.then.i.i
  %.sink.i.i = phi i8 [ %conv2.i.i, %if.then.i.i ], [ 95, %if.end.i.i.cleanup.sink.split.i.i_crit_edge ]
  %12 = ptrtoint ptr %buf.i to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %.sink.i.i, ptr %buf.i, align 1
  br label %if.end26.i

if.else.i:                                        ; preds = %if.end.i
  %and11.i = and i32 %conv.i, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11.i)
  %tobool.not.i = icmp eq i32 %and11.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.else.i.if.end25.i_crit_edge

if.else.i.if.end25.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end25.i

land.lhs.true.i:                                  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 254, i32 %i.079.i)
  %cmp12.i = icmp slt i32 %i.079.i, 254
  br i1 %cmp12.i, label %land.lhs.true14.i, label %land.lhs.true.i.if.end25.i_crit_edge

land.lhs.true.i.if.end25.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end25.i

land.lhs.true14.i:                                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #10
  %add.ptr.i = getelementptr i16, ptr %uniname.081.i, i32 1
  %13 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %add.ptr.i, align 2
  %15 = and i16 %14, -1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 -9216, i16 %15)
  %.not.i = icmp eq i16 %15, -9216
  %add.i = zext i1 %.not.i to i32
  %spec.select72.i = add nsw i32 %i.079.i, %add.i
  %spec.select73.i = select i1 %.not.i, ptr %add.ptr.i, ptr %uniname.081.i
  br label %if.end25.i

if.end25.i:                                       ; preds = %land.lhs.true14.i, %land.lhs.true.i.if.end25.i_crit_edge, %if.else.i.if.end25.i_crit_edge
  %i.1.i = phi i32 [ %i.079.i, %if.else.i.if.end25.i_crit_edge ], [ 254, %land.lhs.true.i.if.end25.i_crit_edge ], [ %spec.select72.i, %land.lhs.true14.i ]
  %uniname.1.i = phi ptr [ %uniname.081.i, %if.else.i.if.end25.i_crit_edge ], [ %uniname.081.i, %land.lhs.true.i.if.end25.i_crit_edge ], [ %spec.select73.i, %land.lhs.true14.i ]
  %16 = ptrtoint ptr %buf.i to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 95, ptr %buf.i, align 1
  br label %if.end26.i

if.end26.i:                                       ; preds = %if.end25.i, %cleanup.sink.split.i.i, %if.end.i.i.if.end26.i_crit_edge
  %i.2.i = phi i32 [ %i.1.i, %if.end25.i ], [ %i.079.i, %if.end.i.i.if.end26.i_crit_edge ], [ %i.079.i, %cleanup.sink.split.i.i ]
  %len.0.i = phi i32 [ 1, %if.end25.i ], [ %call.i.i, %if.end.i.i.if.end26.i_crit_edge ], [ 1, %cleanup.sink.split.i.i ]
  %uniname.2.i = phi ptr [ %uniname.1.i, %if.end25.i ], [ %uniname.081.i, %if.end.i.i.if.end26.i_crit_edge ], [ %uniname.081.i, %cleanup.sink.split.i.i ]
  %add27.i = add i32 %len.0.i, %out_len.080.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add27.i, i32 %buflen)
  %cmp28.not.i = icmp slt i32 %add27.i, %buflen
  %sub32.i = sub i32 %sub.i, %out_len.080.i
  %spec.select.i = select i1 %cmp28.not.i, i32 %len.0.i, i32 %sub32.i
  %add34.i = add i32 %spec.select.i, %out_len.080.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %spec.select.i)
  %cmp35.i = icmp sgt i32 %spec.select.i, 1
  br i1 %cmp35.i, label %if.end26.i.for.body.i_crit_edge, label %if.else43.i

if.end26.i.for.body.i_crit_edge:                  ; preds = %if.end26.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end26.i.for.body.i_crit_edge
  %j.076.i = phi i32 [ %inc42.i, %for.body.i.for.body.i_crit_edge ], [ 0, %if.end26.i.for.body.i_crit_edge ]
  %p_cstring.addr.175.i = phi ptr [ %incdec.ptr41.i, %for.body.i.for.body.i_crit_edge ], [ %p_cstring.addr.078.i, %if.end26.i.for.body.i_crit_edge ]
  %arrayidx40.i = getelementptr [6 x i8], ptr %buf.i, i32 0, i32 %j.076.i
  %17 = ptrtoint ptr %arrayidx40.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %arrayidx40.i, align 1
  %incdec.ptr41.i = getelementptr i8, ptr %p_cstring.addr.175.i, i32 1
  %19 = ptrtoint ptr %p_cstring.addr.175.i to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %18, ptr %p_cstring.addr.175.i, align 1
  %inc42.i = add nuw nsw i32 %j.076.i, 1
  %exitcond.not.i = icmp eq i32 %inc42.i, %spec.select.i
  br i1 %exitcond.not.i, label %for.body.i.if.end46.i_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i

for.body.i.if.end46.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end46.i

if.else43.i:                                      ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #10
  %20 = ptrtoint ptr %buf.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %buf.i, align 1
  %incdec.ptr45.i = getelementptr i8, ptr %p_cstring.addr.078.i, i32 1
  %22 = ptrtoint ptr %p_cstring.addr.078.i to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 %21, ptr %p_cstring.addr.078.i, align 1
  br label %if.end46.i

if.end46.i:                                       ; preds = %if.else43.i, %for.body.i.if.end46.i_crit_edge
  %p_cstring.addr.2.i = phi ptr [ %incdec.ptr45.i, %if.else43.i ], [ %incdec.ptr41.i, %for.body.i.if.end46.i_crit_edge ]
  %incdec.ptr47.i = getelementptr i16, ptr %uniname.2.i, i32 1
  %inc48.i = add i32 %i.2.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %inc48.i)
  %cmp.i = icmp slt i32 %inc48.i, 255
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %add34.i)
  %cmp1.i = icmp sgt i32 %sub.i, %add34.i
  %or.cond.i = select i1 %cmp.i, i1 %cmp1.i, i1 false
  br i1 %or.cond.i, label %if.end46.i.while.body.i_crit_edge, label %if.end46.i.__exfat_utf16_to_nls.exit_crit_edge

if.end46.i.__exfat_utf16_to_nls.exit_crit_edge:   ; preds = %if.end46.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %__exfat_utf16_to_nls.exit

if.end46.i.while.body.i_crit_edge:                ; preds = %if.end46.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %while.body.i

__exfat_utf16_to_nls.exit:                        ; preds = %if.end46.i.__exfat_utf16_to_nls.exit_crit_edge, %while.body.i.__exfat_utf16_to_nls.exit_crit_edge, %if.end.__exfat_utf16_to_nls.exit_crit_edge
  %p_cstring.addr.0.lcssa.i = phi ptr [ %p_cstring, %if.end.__exfat_utf16_to_nls.exit_crit_edge ], [ %p_cstring.addr.078.i, %while.body.i.__exfat_utf16_to_nls.exit_crit_edge ], [ %p_cstring.addr.2.i, %if.end46.i.__exfat_utf16_to_nls.exit_crit_edge ]
  %out_len.0.lcssa.i = phi i32 [ 0, %if.end.__exfat_utf16_to_nls.exit_crit_edge ], [ %out_len.080.i, %while.body.i.__exfat_utf16_to_nls.exit_crit_edge ], [ %add34.i, %if.end46.i.__exfat_utf16_to_nls.exit_crit_edge ]
  %23 = ptrtoint ptr %p_cstring.addr.0.lcssa.i to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 0, ptr %p_cstring.addr.0.lcssa.i, align 1
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %buf.i) #8
  br label %return

return:                                           ; preds = %__exfat_utf16_to_nls.exit, %if.then
  %retval.0 = phi i32 [ %call.i, %if.then ], [ %out_len.0.lcssa.i, %__exfat_utf16_to_nls.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @exfat_nls_to_utf16(ptr noundef %sb, ptr noundef %p_cstring, i32 noundef %len, ptr noundef %uniname, ptr noundef writeonly %p_lossy) local_unnamed_addr #3 align 64 {
entry:
  %upname.i9 = alloca [256 x i16], align 2
  %upname.i = alloca [256 x i16], align 2
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 33
  %0 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_fs_info.i, align 16
  %utf8 = getelementptr inbounds %struct.exfat_sb_info, ptr %1, i32 0, i32 23, i32 7
  %2 = ptrtoint ptr %utf8 to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %utf8, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 512, ptr nonnull %upname.i) #8
  %3 = call ptr @memset(ptr %upname.i, i32 255, i32 512)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %tobool.not.i = icmp eq i32 %len, 0
  br i1 %tobool.not.i, label %do.end.i, label %if.then.if.end.i_crit_edge, !prof !25

if.then.if.end.i_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i

do.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #10
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 501, i32 noundef 9, ptr noundef null) #8
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %if.then.if.end.i_crit_edge
  %call.i = tail call i32 @utf8s_to_utf16s(ptr noundef %p_cstring, i32 noundef %len, i32 noundef 0, ptr noundef %uniname, i32 noundef 257) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp slt i32 %call.i, 0
  br i1 %cmp.i, label %if.then21.i, label %if.end22.i

if.then21.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void (ptr, ptr, ptr, ...) @exfat_msg(ptr noundef %sb, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef nonnull @__func__.exfat_utf8_to_utf16, i32 noundef %call.i, i32 noundef %len) #11
  br label %exfat_utf8_to_utf16.exit

if.end22.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %call.i)
  %cmp23.i = icmp ugt i32 %call.i, 255
  br i1 %cmp23.i, label %if.then24.i, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp2672.not.i = icmp eq i32 %call.i, 0
  br i1 %cmp2672.not.i, label %for.cond.preheader.i.for.end.i_crit_edge, label %for.body.lr.ph.i

for.cond.preheader.i.for.end.i_crit_edge:         ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %4 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i, align 16
  %vol_utbl.i.i = getelementptr inbounds %struct.exfat_sb_info, ptr %5, i32 0, i32 18
  br label %for.body.i

if.then24.i:                                      ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void (ptr, ptr, ptr, ...) @exfat_msg(ptr noundef %sb, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3, ptr noundef nonnull @__func__.exfat_utf8_to_utf16, i32 noundef %len, i32 noundef %call.i, i32 noundef 255) #11
  br label %exfat_utf8_to_utf16.exit

for.body.i:                                       ; preds = %if.end32.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %uniname.076.i = phi ptr [ %uniname, %for.body.lr.ph.i ], [ %incdec.ptr.i, %if.end32.i.for.body.i_crit_edge ]
  %lossy.074.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %lossy.1.i, %if.end32.i.for.body.i_crit_edge ]
  %i.073.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %if.end32.i.for.body.i_crit_edge ]
  %6 = ptrtoint ptr %uniname.076.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %uniname.076.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 32, i16 %7)
  %cmp27.i = icmp ult i16 %7, 32
  br i1 %cmp27.i, label %for.body.i.if.then31.i_crit_edge, label %while.body.i.i

for.body.i.if.then31.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then31.i

while.body.i.i:                                   ; preds = %for.body.i
  %8 = zext i16 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values)
  switch i16 %7, label %while.body.i.i.if.end32.i_crit_edge [
    i16 34, label %while.body.i.i.if.then31.i_crit_edge
    i16 42, label %while.body.i.i.if.then31.i_crit_edge37
    i16 47, label %while.body.i.i.if.then31.i_crit_edge38
    i16 58, label %while.body.i.i.if.then31.i_crit_edge39
    i16 60, label %while.body.i.i.if.then31.i_crit_edge40
    i16 62, label %while.body.i.i.if.then31.i_crit_edge41
    i16 63, label %while.body.i.i.if.then31.i_crit_edge42
    i16 92, label %while.body.i.i.if.then31.i_crit_edge43
    i16 124, label %while.body.i.i.if.then31.i_crit_edge44
  ]

while.body.i.i.if.then31.i_crit_edge44:           ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then31.i

while.body.i.i.if.then31.i_crit_edge43:           ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then31.i

while.body.i.i.if.then31.i_crit_edge42:           ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then31.i

while.body.i.i.if.then31.i_crit_edge41:           ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then31.i

while.body.i.i.if.then31.i_crit_edge40:           ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then31.i

while.body.i.i.if.then31.i_crit_edge39:           ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then31.i

while.body.i.i.if.then31.i_crit_edge38:           ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then31.i

while.body.i.i.if.then31.i_crit_edge37:           ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then31.i

while.body.i.i.if.then31.i_crit_edge:             ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then31.i

while.body.i.i.if.end32.i_crit_edge:              ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end32.i

if.then31.i:                                      ; preds = %while.body.i.i.if.then31.i_crit_edge, %while.body.i.i.if.then31.i_crit_edge37, %while.body.i.i.if.then31.i_crit_edge38, %while.body.i.i.if.then31.i_crit_edge39, %while.body.i.i.if.then31.i_crit_edge40, %while.body.i.i.if.then31.i_crit_edge41, %while.body.i.i.if.then31.i_crit_edge42, %while.body.i.i.if.then31.i_crit_edge43, %while.body.i.i.if.then31.i_crit_edge44, %for.body.i.if.then31.i_crit_edge
  %or.i = or i32 %lossy.074.i, 1
  br label %if.end32.i

if.end32.i:                                       ; preds = %if.then31.i, %while.body.i.i.if.end32.i_crit_edge
  %lossy.1.i = phi i32 [ %or.i, %if.then31.i ], [ %lossy.074.i, %while.body.i.i.if.end32.i_crit_edge ]
  %9 = ptrtoint ptr %vol_utbl.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %vol_utbl.i.i, align 4
  %idxprom.i.i = zext i16 %7 to i32
  %arrayidx.i.i = getelementptr i16, ptr %10, i32 %idxprom.i.i
  %11 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %arrayidx.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %12)
  %tobool.not.i69.i = icmp eq i16 %12, 0
  %a..i.i = select i1 %tobool.not.i69.i, i16 %7, i16 %12
  %13 = tail call i16 @llvm.bswap.i16(i16 %a..i.i) #8
  %arrayidx.i = getelementptr [256 x i16], ptr %upname.i, i32 0, i32 %i.073.i
  %14 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %13, ptr %arrayidx.i, align 2
  %incdec.ptr.i = getelementptr i16, ptr %uniname.076.i, i32 1
  %inc.i = add nuw nsw i32 %i.073.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %call.i
  br i1 %exitcond.not.i, label %if.end32.i.for.end.i_crit_edge, label %if.end32.i.for.body.i_crit_edge

if.end32.i.for.body.i_crit_edge:                  ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i

if.end32.i.for.end.i_crit_edge:                   ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end.i

for.end.i:                                        ; preds = %if.end32.i.for.end.i_crit_edge, %for.cond.preheader.i.for.end.i_crit_edge
  %lossy.0.lcssa.i = phi i32 [ 0, %for.cond.preheader.i.for.end.i_crit_edge ], [ %lossy.1.i, %if.end32.i.for.end.i_crit_edge ]
  %uniname.0.lcssa.i = phi ptr [ %uniname, %for.cond.preheader.i.for.end.i_crit_edge ], [ %incdec.ptr.i, %if.end32.i.for.end.i_crit_edge ]
  %15 = ptrtoint ptr %uniname.0.lcssa.i to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 0, ptr %uniname.0.lcssa.i, align 2
  %conv34.i = trunc i32 %call.i to i8
  %name_len.i = getelementptr inbounds %struct.exfat_uni_name, ptr %uniname, i32 0, i32 2
  %16 = ptrtoint ptr %name_len.i to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %conv34.i, ptr %name_len.i, align 2
  %shl.i = shl i32 %call.i, 1
  %call36.i = call zeroext i16 @exfat_calc_chksum16(ptr noundef nonnull %upname.i, i32 noundef %shl.i, i16 noundef zeroext 0, i32 noundef 2) #8
  %name_hash.i = getelementptr inbounds %struct.exfat_uni_name, ptr %uniname, i32 0, i32 1
  %17 = ptrtoint ptr %name_hash.i to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 %call36.i, ptr %name_hash.i, align 2
  %tobool37.not.i = icmp eq ptr %p_lossy, null
  br i1 %tobool37.not.i, label %for.end.i.exfat_utf8_to_utf16.exit_crit_edge, label %if.then38.i

for.end.i.exfat_utf8_to_utf16.exit_crit_edge:     ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %exfat_utf8_to_utf16.exit

if.then38.i:                                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #10
  %18 = ptrtoint ptr %p_lossy to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %lossy.0.lcssa.i, ptr %p_lossy, align 4
  br label %exfat_utf8_to_utf16.exit

exfat_utf8_to_utf16.exit:                         ; preds = %if.then38.i, %for.end.i.exfat_utf8_to_utf16.exit_crit_edge, %if.then24.i, %if.then21.i
  %retval.0.i = phi i32 [ %call.i, %if.then21.i ], [ -36, %if.then24.i ], [ %call.i, %if.then38.i ], [ %call.i, %for.end.i.exfat_utf8_to_utf16.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 512, ptr nonnull %upname.i) #8
  br label %return

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 512, ptr nonnull %upname.i9) #8
  %19 = call ptr @memset(ptr %upname.i9, i32 255, i32 512)
  %nls_io.i = getelementptr inbounds %struct.exfat_sb_info, ptr %1, i32 0, i32 24
  %20 = ptrtoint ptr %nls_io.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %nls_io.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %tobool.not.i10 = icmp eq i32 %len, 0
  br i1 %tobool.not.i10, label %if.end.thread.i, label %if.end.i11, !prof !25

if.end.thread.i:                                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 604, i32 noundef 9, ptr noundef null) #8
  br label %while.end.i

if.end.i11:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %cmp2173.i = icmp sgt i32 %len, 0
  br i1 %cmp2173.i, label %while.body.lr.ph.i, label %if.end.i11.while.end.i_crit_edge

if.end.i11.while.end.i_crit_edge:                 ; preds = %if.end.i11
  call void @__sanitizer_cov_trace_pc() #10
  br label %while.end.i

while.body.lr.ph.i:                               ; preds = %if.end.i11
  %char2uni.i.i = getelementptr inbounds %struct.nls_table, ptr %21, i32 0, i32 3
  br label %while.body.i

while.body.i:                                     ; preds = %if.end28.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %i.079.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %add.i, %if.end28.i.while.body.i_crit_edge ]
  %uniname.076.i12 = phi ptr [ %uniname, %while.body.lr.ph.i ], [ %incdec.ptr.i29, %if.end28.i.while.body.i_crit_edge ]
  %unilen.075.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %inc.i30, %if.end28.i.while.body.i_crit_edge ]
  %lossy.074.i13 = phi i32 [ 0, %while.body.lr.ph.i ], [ %lossy.3.i, %if.end28.i.while.body.i_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %p_cstring, i32 %i.079.i
  %22 = ptrtoint ptr %uniname.076.i12 to i32
  call void @__asan_store2_noabort(i32 %22)
  store i16 0, ptr %uniname.076.i12, align 2
  %23 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %add.ptr.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %24)
  %cmp.i.i14 = icmp sgt i8 %24, -1
  br i1 %cmp.i.i14, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #10
  %conv3.i.i = zext i8 %24 to i16
  br label %cleanup.sink.split.i.i

if.end.i.i:                                       ; preds = %while.body.i
  %sub.i = sub i32 %len, %i.079.i
  %25 = ptrtoint ptr %char2uni.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %char2uni.i.i, align 4
  %call.i.i = tail call i32 %26(ptr noundef %add.ptr.i, i32 noundef %sub.i, ptr noundef %uniname.076.i12) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp4.i.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp4.i.i, label %if.then6.i.i, label %exfat_convert_char_to_ucs2.exitthread-pre-split.i

if.then6.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %or.i.i = or i32 %lossy.074.i13, 1
  br label %cleanup.sink.split.i.i

cleanup.sink.split.i.i:                           ; preds = %if.then6.i.i, %if.then.i.i
  %lossy.1.i15 = phi i32 [ %lossy.074.i13, %if.then.i.i ], [ %or.i.i, %if.then6.i.i ]
  %.sink.i.i = phi i16 [ %conv3.i.i, %if.then.i.i ], [ 95, %if.then6.i.i ]
  %27 = ptrtoint ptr %uniname.076.i12 to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 %.sink.i.i, ptr %uniname.076.i12, align 2
  br label %exfat_convert_char_to_ucs2.exit.i

exfat_convert_char_to_ucs2.exitthread-pre-split.i: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %28 = ptrtoint ptr %uniname.076.i12 to i32
  call void @__asan_load2_noabort(i32 %28)
  %.pr.i = load i16, ptr %uniname.076.i12, align 2
  br label %exfat_convert_char_to_ucs2.exit.i

exfat_convert_char_to_ucs2.exit.i:                ; preds = %exfat_convert_char_to_ucs2.exitthread-pre-split.i, %cleanup.sink.split.i.i
  %29 = phi i16 [ %.pr.i, %exfat_convert_char_to_ucs2.exitthread-pre-split.i ], [ %.sink.i.i, %cleanup.sink.split.i.i ]
  %lossy.2.i = phi i32 [ %lossy.074.i13, %exfat_convert_char_to_ucs2.exitthread-pre-split.i ], [ %lossy.1.i15, %cleanup.sink.split.i.i ]
  %retval.0.i.i = phi i32 [ %call.i.i, %exfat_convert_char_to_ucs2.exitthread-pre-split.i ], [ 1, %cleanup.sink.split.i.i ]
  %add.i = add i32 %retval.0.i.i, %i.079.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 32, i16 %29)
  %cmp23.i16 = icmp ult i16 %29, 32
  br i1 %cmp23.i16, label %exfat_convert_char_to_ucs2.exit.i.if.then27.i_crit_edge, label %while.body.i.i21

exfat_convert_char_to_ucs2.exit.i.if.then27.i_crit_edge: ; preds = %exfat_convert_char_to_ucs2.exit.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then27.i

while.body.i.i21:                                 ; preds = %exfat_convert_char_to_ucs2.exit.i
  %30 = zext i16 %29 to i64
  call void @__sanitizer_cov_trace_switch(i64 %30, ptr @__sancov_gen_cov_switch_values.6)
  switch i16 %29, label %while.body.i.i21.if.end28.i_crit_edge [
    i16 34, label %while.body.i.i21.if.then27.i_crit_edge
    i16 42, label %while.body.i.i21.if.then27.i_crit_edge45
    i16 47, label %while.body.i.i21.if.then27.i_crit_edge46
    i16 58, label %while.body.i.i21.if.then27.i_crit_edge47
    i16 60, label %while.body.i.i21.if.then27.i_crit_edge48
    i16 62, label %while.body.i.i21.if.then27.i_crit_edge49
    i16 63, label %while.body.i.i21.if.then27.i_crit_edge50
    i16 92, label %while.body.i.i21.if.then27.i_crit_edge51
    i16 124, label %while.body.i.i21.if.then27.i_crit_edge52
  ]

while.body.i.i21.if.then27.i_crit_edge52:         ; preds = %while.body.i.i21
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then27.i

while.body.i.i21.if.then27.i_crit_edge51:         ; preds = %while.body.i.i21
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then27.i

while.body.i.i21.if.then27.i_crit_edge50:         ; preds = %while.body.i.i21
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then27.i

while.body.i.i21.if.then27.i_crit_edge49:         ; preds = %while.body.i.i21
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then27.i

while.body.i.i21.if.then27.i_crit_edge48:         ; preds = %while.body.i.i21
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then27.i

while.body.i.i21.if.then27.i_crit_edge47:         ; preds = %while.body.i.i21
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then27.i

while.body.i.i21.if.then27.i_crit_edge46:         ; preds = %while.body.i.i21
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then27.i

while.body.i.i21.if.then27.i_crit_edge45:         ; preds = %while.body.i.i21
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then27.i

while.body.i.i21.if.then27.i_crit_edge:           ; preds = %while.body.i.i21
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then27.i

while.body.i.i21.if.end28.i_crit_edge:            ; preds = %while.body.i.i21
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end28.i

if.then27.i:                                      ; preds = %while.body.i.i21.if.then27.i_crit_edge, %while.body.i.i21.if.then27.i_crit_edge45, %while.body.i.i21.if.then27.i_crit_edge46, %while.body.i.i21.if.then27.i_crit_edge47, %while.body.i.i21.if.then27.i_crit_edge48, %while.body.i.i21.if.then27.i_crit_edge49, %while.body.i.i21.if.then27.i_crit_edge50, %while.body.i.i21.if.then27.i_crit_edge51, %while.body.i.i21.if.then27.i_crit_edge52, %exfat_convert_char_to_ucs2.exit.i.if.then27.i_crit_edge
  %or.i23 = or i32 %lossy.2.i, 1
  br label %if.end28.i

if.end28.i:                                       ; preds = %if.then27.i, %while.body.i.i21.if.end28.i_crit_edge
  %lossy.3.i = phi i32 [ %or.i23, %if.then27.i ], [ %lossy.2.i, %while.body.i.i21.if.end28.i_crit_edge ]
  %31 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %s_fs_info.i, align 16
  %vol_utbl.i.i24 = getelementptr inbounds %struct.exfat_sb_info, ptr %32, i32 0, i32 18
  %33 = ptrtoint ptr %vol_utbl.i.i24 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %vol_utbl.i.i24, align 4
  %idxprom.i.i25 = zext i16 %29 to i32
  %arrayidx.i.i26 = getelementptr i16, ptr %34, i32 %idxprom.i.i25
  %35 = ptrtoint ptr %arrayidx.i.i26 to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %arrayidx.i.i26, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %36)
  %tobool.not.i67.i = icmp eq i16 %36, 0
  %a..i.i27 = select i1 %tobool.not.i67.i, i16 %29, i16 %36
  %37 = tail call i16 @llvm.bswap.i16(i16 %a..i.i27) #8
  %arrayidx.i28 = getelementptr [256 x i16], ptr %upname.i9, i32 0, i32 %unilen.075.i
  %38 = ptrtoint ptr %arrayidx.i28 to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %37, ptr %arrayidx.i28, align 2
  %incdec.ptr.i29 = getelementptr i16, ptr %uniname.076.i12, i32 1
  %inc.i30 = add nuw nsw i32 %unilen.075.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 254, i32 %unilen.075.i)
  %cmp.i31 = icmp ult i32 %unilen.075.i, 254
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %len)
  %cmp21.i = icmp slt i32 %add.i, %len
  %or.cond.i = select i1 %cmp.i31, i1 %cmp21.i, i1 false
  br i1 %or.cond.i, label %if.end28.i.while.body.i_crit_edge, label %if.end28.i.while.end.i_crit_edge

if.end28.i.while.end.i_crit_edge:                 ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %while.end.i

if.end28.i.while.body.i_crit_edge:                ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %while.body.i

while.end.i:                                      ; preds = %if.end28.i.while.end.i_crit_edge, %if.end.i11.while.end.i_crit_edge, %if.end.thread.i
  %lossy.0.lcssa.i32 = phi i32 [ 0, %if.end.i11.while.end.i_crit_edge ], [ 0, %if.end.thread.i ], [ %lossy.3.i, %if.end28.i.while.end.i_crit_edge ]
  %unilen.0.lcssa.i = phi i32 [ 0, %if.end.i11.while.end.i_crit_edge ], [ 0, %if.end.thread.i ], [ %inc.i30, %if.end28.i.while.end.i_crit_edge ]
  %uniname.0.lcssa.i33 = phi ptr [ %uniname, %if.end.i11.while.end.i_crit_edge ], [ %uniname, %if.end.thread.i ], [ %incdec.ptr.i29, %if.end28.i.while.end.i_crit_edge ]
  %i.0.lcssa.i = phi i32 [ 0, %if.end.i11.while.end.i_crit_edge ], [ 0, %if.end.thread.i ], [ %add.i, %if.end28.i.while.end.i_crit_edge ]
  %arrayidx30.i = getelementptr i8, ptr %p_cstring, i32 %i.0.lcssa.i
  %39 = ptrtoint ptr %arrayidx30.i to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %arrayidx30.i, align 1
  %41 = ptrtoint ptr %uniname.0.lcssa.i33 to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 0, ptr %uniname.0.lcssa.i33, align 2
  %conv37.i = trunc i32 %unilen.0.lcssa.i to i8
  %name_len.i34 = getelementptr inbounds %struct.exfat_uni_name, ptr %uniname, i32 0, i32 2
  %42 = ptrtoint ptr %name_len.i34 to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 %conv37.i, ptr %name_len.i34, align 2
  %shl.i35 = shl i32 %unilen.0.lcssa.i, 1
  %call39.i = call zeroext i16 @exfat_calc_chksum16(ptr noundef nonnull %upname.i9, i32 noundef %shl.i35, i16 noundef zeroext 0, i32 noundef 2) #8
  %name_hash.i36 = getelementptr inbounds %struct.exfat_uni_name, ptr %uniname, i32 0, i32 1
  %43 = ptrtoint ptr %name_hash.i36 to i32
  call void @__asan_store2_noabort(i32 %43)
  store i16 %call39.i, ptr %name_hash.i36, align 2
  %tobool40.not.i = icmp eq ptr %p_lossy, null
  br i1 %tobool40.not.i, label %while.end.i.exfat_nls_to_ucs2.exit_crit_edge, label %if.then41.i

while.end.i.exfat_nls_to_ucs2.exit_crit_edge:     ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %exfat_nls_to_ucs2.exit

if.then41.i:                                      ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #10
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %40)
  %cmp32.not.i = icmp eq i8 %40, 0
  %or35.i = or i32 %lossy.0.lcssa.i32, 2
  %spec.select.i = select i1 %cmp32.not.i, i32 %lossy.0.lcssa.i32, i32 %or35.i
  %44 = ptrtoint ptr %p_lossy to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %spec.select.i, ptr %p_lossy, align 4
  br label %exfat_nls_to_ucs2.exit

exfat_nls_to_ucs2.exit:                           ; preds = %if.then41.i, %while.end.i.exfat_nls_to_ucs2.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 512, ptr nonnull %upname.i9) #8
  br label %return

return:                                           ; preds = %exfat_nls_to_ucs2.exit, %exfat_utf8_to_utf16.exit
  %retval.0 = phi i32 [ %retval.0.i, %exfat_utf8_to_utf16.exit ], [ %unilen.0.lcssa.i, %exfat_nls_to_ucs2.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @exfat_create_upcase_table(ptr noundef %sb) local_unnamed_addr #3 align 64 {
entry:
  %clu = alloca %struct.exfat_chain, align 4
  %bh = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %s_blocksize_bits = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 2
  %0 = ptrtoint ptr %s_blocksize_bits to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %s_blocksize_bits, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %clu) #8
  %2 = getelementptr inbounds i8, ptr %clu, i32 4
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_storeN_noabort(i32 %3, i32 8)
  store i64 -1, ptr %2, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i, align 16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %bh) #8
  %6 = ptrtoint ptr %bh to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr inttoptr (i32 -1 to ptr), ptr %bh, align 4, !annotation !26
  %root_dir = getelementptr inbounds %struct.exfat_sb_info, ptr %5, i32 0, i32 10
  %7 = ptrtoint ptr %root_dir to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %root_dir, align 4
  %9 = ptrtoint ptr %clu to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %clu, align 4
  %flags = getelementptr inbounds %struct.exfat_chain, ptr %clu, i32 0, i32 2
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 1, ptr %flags, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %8)
  %cmp.not86 = icmp eq i32 %8, -1
  br i1 %cmp.not86, label %entry.load_default_crit_edge, label %for.cond.preheader.lr.ph

entry.load_default_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %load_default

for.cond.preheader.lr.ph:                         ; preds = %entry
  %dentries_per_clu = getelementptr inbounds %struct.exfat_sb_info, ptr %5, i32 0, i32 11
  br label %for.cond.preheader

while.condthread-pre-split:                       ; preds = %for.end
  %11 = ptrtoint ptr %clu to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pr = load i32, ptr %clu, align 4
  %cmp.not = icmp eq i32 %.pr, -1
  br i1 %cmp.not, label %while.condthread-pre-split.load_default_crit_edge, label %while.condthread-pre-split.for.cond.preheader_crit_edge

while.condthread-pre-split.for.cond.preheader_crit_edge: ; preds = %while.condthread-pre-split
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.cond.preheader

while.condthread-pre-split.load_default_crit_edge: ; preds = %while.condthread-pre-split
  call void @__sanitizer_cov_trace_pc() #10
  br label %load_default

for.cond.preheader:                               ; preds = %while.condthread-pre-split.for.cond.preheader_crit_edge, %for.cond.preheader.lr.ph
  %12 = ptrtoint ptr %dentries_per_clu to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %dentries_per_clu, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp284.not = icmp eq i32 %13, 0
  br i1 %cmp284.not, label %for.cond.preheader.for.end_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end

for.body:                                         ; preds = %brelse.exit56.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.085 = phi i32 [ %inc, %brelse.exit56.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %call3 = call ptr @exfat_get_dentry(ptr noundef %sb, ptr noundef nonnull %clu, i32 noundef %i.085, ptr noundef nonnull %bh) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %for.body.cleanup_crit_edge, label %if.end

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %for.body
  %call4 = call i32 @exfat_get_entry_type(ptr noundef nonnull %call3) #8
  %14 = zext i32 %call4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.7)
  switch i32 %call4, label %if.then9 [
    i32 0, label %if.then6
    i32 258, label %if.end10
  ]

if.then6:                                         ; preds = %if.end
  %15 = ptrtoint ptr %bh to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %bh, align 4
  %tobool.not.i = icmp eq ptr %16, null
  br i1 %tobool.not.i, label %if.then6.for.end_crit_edge, label %if.then.i

if.then6.for.end_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end

if.then.i:                                        ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #10
  call void @__brelse(ptr noundef nonnull %16) #8
  br label %for.end

if.then9:                                         ; preds = %if.end
  %17 = ptrtoint ptr %bh to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %bh, align 4
  %tobool.not.i54 = icmp eq ptr %18, null
  br i1 %tobool.not.i54, label %if.then9.brelse.exit56_crit_edge, label %if.then.i55

if.then9.brelse.exit56_crit_edge:                 ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #10
  br label %brelse.exit56

if.then.i55:                                      ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #10
  call void @__brelse(ptr noundef nonnull %18) #8
  br label %brelse.exit56

brelse.exit56:                                    ; preds = %if.then.i55, %if.then9.brelse.exit56_crit_edge
  %inc = add nuw i32 %i.085, 1
  %19 = ptrtoint ptr %dentries_per_clu to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %dentries_per_clu, align 8
  %cmp2 = icmp ult i32 %inc, %20
  br i1 %cmp2, label %brelse.exit56.for.body_crit_edge, label %brelse.exit56.for.end_crit_edge

brelse.exit56.for.end_crit_edge:                  ; preds = %brelse.exit56
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end

brelse.exit56.for.body_crit_edge:                 ; preds = %brelse.exit56
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body

if.end10:                                         ; preds = %if.end
  %start_clu = getelementptr inbounds %struct.exfat_dentry, ptr %call3, i32 0, i32 1, i32 0, i32 10
  %21 = ptrtoint ptr %start_clu to i32
  call void @__asan_loadN_noabort(i32 %21, i32 4)
  %22 = load i32, ptr %start_clu, align 1
  %23 = call i32 @llvm.bswap.i32(i32 %22)
  %size = getelementptr inbounds %struct.exfat_dentry, ptr %call3, i32 0, i32 1, i32 0, i32 14
  %24 = ptrtoint ptr %size to i32
  call void @__asan_loadN_noabort(i32 %24, i32 8)
  %25 = load i64, ptr %size, align 1
  %sub.i = add i32 %23, -2
  %conv.i = zext i32 %sub.i to i64
  %sect_per_clus_bits.i = getelementptr inbounds %struct.exfat_sb_info, ptr %5, i32 0, i32 5
  %26 = ptrtoint ptr %sect_per_clus_bits.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %sect_per_clus_bits.i, align 8
  %sh_prom.i = zext i32 %27 to i64
  %shl.i = shl i64 %conv.i, %sh_prom.i
  %data_start_sector.i = getelementptr inbounds %struct.exfat_sb_info, ptr %5, i32 0, i32 8
  %28 = ptrtoint ptr %data_start_sector.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %data_start_sector.i, align 8
  %add.i = add i64 %shl.i, %29
  %checksum = getelementptr inbounds %struct.exfat_dentry, ptr %call3, i32 0, i32 1, i32 0, i32 2
  %30 = ptrtoint ptr %checksum to i32
  call void @__asan_loadN_noabort(i32 %30, i32 4)
  %31 = load i32, ptr %checksum, align 1
  %32 = call i32 @llvm.bswap.i32(i32 %31)
  %33 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %s_fs_info.i, align 16
  %s_blocksize.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 3
  %35 = ptrtoint ptr %s_blocksize.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %s_blocksize.i, align 16
  %call.i.i.i.i = call noalias ptr @kvmalloc_node(i32 noundef 131072, i32 noundef 3520, i32 noundef -1) #12
  %tobool.not.i57 = icmp eq ptr %call.i.i.i.i, null
  br i1 %tobool.not.i57, label %if.end10.exfat_load_upcase_table.exit_crit_edge, label %if.end.i

if.end10.exfat_load_upcase_table.exit_crit_edge:  ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #10
  br label %exfat_load_upcase_table.exit

if.end.i:                                         ; preds = %if.end10
  %37 = call i64 @llvm.bswap.i64(i64 %25)
  %sub = add i64 %37, -1
  %sh_prom = zext i8 %1 to i64
  %shr = lshr i64 %sub, %sh_prom
  %add = add i64 %shr, 1
  %vol_utbl.i = getelementptr inbounds %struct.exfat_sb_info, ptr %34, i32 0, i32 18
  %38 = ptrtoint ptr %vol_utbl.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %call.i.i.i.i, ptr %vol_utbl.i, align 4
  %add.i58 = add i64 %add, %add.i
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i58, i64 %add.i)
  %cmp95.i = icmp ugt i64 %add.i58, %add.i
  br i1 %cmp95.i, label %while.body.lr.ph.i, label %if.end.i.if.end35.i_crit_edge

if.end.i.if.end35.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end35.i

while.body.lr.ph.i:                               ; preds = %if.end.i
  %s_bdev.i.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %cmp687.i = icmp ne i32 %36, 0
  br label %while.body.i

while.body.i:                                     ; preds = %cleanup.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %skip.099.i = phi i8 [ 0, %while.body.lr.ph.i ], [ %skip.1.lcssa.i, %cleanup.i.while.body.i_crit_edge ]
  %chksum.098.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %call29.i, %cleanup.i.while.body.i_crit_edge ]
  %index.097.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %index.1.lcssa.i, %cleanup.i.while.body.i_crit_edge ]
  %sector.addr.096.i = phi i64 [ %add.i, %while.body.lr.ph.i ], [ %inc.i, %cleanup.i.while.body.i_crit_edge ]
  %39 = ptrtoint ptr %s_bdev.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %s_bdev.i.i, align 4
  %41 = ptrtoint ptr %s_blocksize.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %s_blocksize.i, align 16
  %call.i.i = call ptr @__bread_gfp(ptr noundef %40, i64 noundef %sector.addr.096.i, i32 noundef %42, i32 noundef 8) #8
  %tobool3.not.i = icmp eq ptr %call.i.i, null
  br i1 %tobool3.not.i, label %cleanup.thread.i, label %if.end5.i

cleanup.thread.i:                                 ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #10
  call void (ptr, ptr, ptr, ...) @exfat_msg(ptr noundef %sb, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4, i64 noundef %sector.addr.096.i) #11
  br label %free_table.i

if.end5.i:                                        ; preds = %while.body.i
  %inc.i = add nuw i64 %sector.addr.096.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %index.097.i)
  %cmp788.i = icmp ult i32 %index.097.i, 65536
  %or.cond89.i = select i1 %cmp687.i, i1 %cmp788.i, i1 false
  br i1 %or.cond89.i, label %for.body.lr.ph.i, label %if.end5.i.cleanup.i_crit_edge

if.end5.i.cleanup.i_crit_edge:                    ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup.i

for.body.lr.ph.i:                                 ; preds = %if.end5.i
  %b_data.i = getelementptr inbounds %struct.buffer_head, ptr %call.i.i, i32 0, i32 5
  br label %for.body.i

for.body.i:                                       ; preds = %if.end26.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %skip.192.i = phi i8 [ %skip.099.i, %for.body.lr.ph.i ], [ %skip.2.i, %if.end26.i.for.body.i_crit_edge ]
  %index.191.i = phi i32 [ %index.097.i, %for.body.lr.ph.i ], [ %index.2.i, %if.end26.i.for.body.i_crit_edge ]
  %i.090.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %add27.i, %if.end26.i.for.body.i_crit_edge ]
  %43 = ptrtoint ptr %b_data.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %b_data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %44, i32 %i.090.i
  %45 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_loadN_noabort(i32 %45, i32 2)
  %46 = load i16, ptr %add.ptr.i, align 1
  %47 = call i16 @llvm.bswap.i16(i16 %46) #8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %skip.192.i)
  %tobool9.not.i = icmp eq i8 %skip.192.i, 0
  %conv12.i = zext i16 %47 to i32
  br i1 %tobool9.not.i, label %if.else.i, label %if.then10.i

if.then10.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #10
  %add11.i = add nuw nsw i32 %index.191.i, %conv12.i
  br label %if.end26.i

if.else.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_cmp4(i32 %index.191.i, i32 %conv12.i)
  %cmp13.i = icmp eq i32 %index.191.i, %conv12.i
  br i1 %cmp13.i, label %if.then15.i, label %if.else17.i

if.then15.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #10
  %inc16.i = add nuw nsw i32 %index.191.i, 1
  br label %if.end26.i

if.else17.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %46)
  %cmp19.i = icmp eq i16 %46, -1
  br i1 %cmp19.i, label %if.else17.i.if.end26.i_crit_edge, label %if.else22.i

if.else17.i.if.end26.i_crit_edge:                 ; preds = %if.else17.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end26.i

if.else22.i:                                      ; preds = %if.else17.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx.i = getelementptr i16, ptr %call.i.i.i.i, i32 %index.191.i
  %48 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store2_noabort(i32 %48)
  store i16 %47, ptr %arrayidx.i, align 2
  %inc23.i = add nuw nsw i32 %index.191.i, 1
  br label %if.end26.i

if.end26.i:                                       ; preds = %if.else22.i, %if.else17.i.if.end26.i_crit_edge, %if.then15.i, %if.then10.i
  %index.2.i = phi i32 [ %add11.i, %if.then10.i ], [ %inc16.i, %if.then15.i ], [ %inc23.i, %if.else22.i ], [ %index.191.i, %if.else17.i.if.end26.i_crit_edge ]
  %skip.2.i = phi i8 [ 0, %if.then10.i ], [ 0, %if.then15.i ], [ 0, %if.else22.i ], [ 1, %if.else17.i.if.end26.i_crit_edge ]
  %add27.i = add i32 %i.090.i, 2
  call void @__sanitizer_cov_trace_cmp4(i32 %add27.i, i32 %36)
  %cmp6.i = icmp ult i32 %add27.i, %36
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %index.2.i)
  %cmp7.i = icmp ult i32 %index.2.i, 65536
  %or.cond.i = select i1 %cmp6.i, i1 %cmp7.i, i1 false
  br i1 %or.cond.i, label %if.end26.i.for.body.i_crit_edge, label %if.end26.i.cleanup.i_crit_edge

if.end26.i.cleanup.i_crit_edge:                   ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup.i

if.end26.i.for.body.i_crit_edge:                  ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i

cleanup.i:                                        ; preds = %if.end26.i.cleanup.i_crit_edge, %if.end5.i.cleanup.i_crit_edge
  %i.0.lcssa.i = phi i32 [ 0, %if.end5.i.cleanup.i_crit_edge ], [ %add27.i, %if.end26.i.cleanup.i_crit_edge ]
  %index.1.lcssa.i = phi i32 [ %index.097.i, %if.end5.i.cleanup.i_crit_edge ], [ %index.2.i, %if.end26.i.cleanup.i_crit_edge ]
  %skip.1.lcssa.i = phi i8 [ %skip.099.i, %if.end5.i.cleanup.i_crit_edge ], [ %skip.2.i, %if.end26.i.cleanup.i_crit_edge ]
  %b_data28.i = getelementptr inbounds %struct.buffer_head, ptr %call.i.i, i32 0, i32 5
  %49 = ptrtoint ptr %b_data28.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %b_data28.i, align 4
  %call29.i = call i32 @exfat_calc_chksum32(ptr noundef %50, i32 noundef %i.0.lcssa.i, i32 noundef %chksum.098.i, i32 noundef 2) #8
  call void @__brelse(ptr noundef nonnull %call.i.i) #8
  %cmp.i = icmp ult i64 %inc.i, %add.i58
  br i1 %cmp.i, label %cleanup.i.while.body.i_crit_edge, label %while.end.i

cleanup.i.while.body.i_crit_edge:                 ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %while.body.i

while.end.i:                                      ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 65534, i32 %index.1.lcssa.i)
  %cmp30.i = icmp ugt i32 %index.1.lcssa.i, 65534
  call void @__sanitizer_cov_trace_cmp4(i32 %call29.i, i32 %32)
  %cmp32.i = icmp eq i32 %call29.i, %32
  %or.cond76.i = select i1 %cmp30.i, i1 %cmp32.i, i1 false
  br i1 %or.cond76.i, label %while.end.i.exfat_load_upcase_table.exit_crit_edge, label %while.end.i.if.end35.i_crit_edge

while.end.i.if.end35.i_crit_edge:                 ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end35.i

while.end.i.exfat_load_upcase_table.exit_crit_edge: ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %exfat_load_upcase_table.exit

if.end35.i:                                       ; preds = %while.end.i.if.end35.i_crit_edge, %if.end.i.if.end35.i_crit_edge
  %chksum.0.lcssa109.i = phi i32 [ %call29.i, %while.end.i.if.end35.i_crit_edge ], [ 0, %if.end.i.if.end35.i_crit_edge ]
  %index.0.lcssa108.i = phi i32 [ %index.1.lcssa.i, %while.end.i.if.end35.i_crit_edge ], [ 0, %if.end.i.if.end35.i_crit_edge ]
  call void (ptr, ptr, ptr, ...) @exfat_msg(ptr noundef %sb, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.5, i32 noundef %index.0.lcssa108.i, i32 noundef %chksum.0.lcssa109.i, i32 noundef %32) #11
  br label %free_table.i

free_table.i:                                     ; preds = %if.end35.i, %cleanup.thread.i
  %ret.2.i = phi i32 [ -22, %if.end35.i ], [ -5, %cleanup.thread.i ]
  %51 = ptrtoint ptr %vol_utbl.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %vol_utbl.i, align 4
  call void @kvfree(ptr noundef %52) #8
  br label %exfat_load_upcase_table.exit

exfat_load_upcase_table.exit:                     ; preds = %free_table.i, %while.end.i.exfat_load_upcase_table.exit_crit_edge, %if.end10.exfat_load_upcase_table.exit_crit_edge
  %retval.0.i = phi i32 [ %ret.2.i, %free_table.i ], [ -12, %if.end10.exfat_load_upcase_table.exit_crit_edge ], [ 0, %while.end.i.exfat_load_upcase_table.exit_crit_edge ]
  %53 = ptrtoint ptr %bh to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %bh, align 4
  %tobool.not.i59 = icmp eq ptr %54, null
  br i1 %tobool.not.i59, label %exfat_load_upcase_table.exit.brelse.exit62_crit_edge, label %if.then.i60

exfat_load_upcase_table.exit.brelse.exit62_crit_edge: ; preds = %exfat_load_upcase_table.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %brelse.exit62

if.then.i60:                                      ; preds = %exfat_load_upcase_table.exit
  call void @__sanitizer_cov_trace_pc() #10
  call void @__brelse(ptr noundef nonnull %54) #8
  br label %brelse.exit62

brelse.exit62:                                    ; preds = %if.then.i60, %exfat_load_upcase_table.exit.brelse.exit62_crit_edge
  %55 = zext i32 %retval.0.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %55, ptr @__sancov_gen_cov_switch_values.8)
  switch i32 %retval.0.i, label %brelse.exit62.load_default_crit_edge [
    i32 0, label %brelse.exit62.cleanup_crit_edge
    i32 -5, label %brelse.exit62.cleanup_crit_edge111
  ]

brelse.exit62.cleanup_crit_edge111:               ; preds = %brelse.exit62
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

brelse.exit62.cleanup_crit_edge:                  ; preds = %brelse.exit62
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

brelse.exit62.load_default_crit_edge:             ; preds = %brelse.exit62
  call void @__sanitizer_cov_trace_pc() #10
  br label %load_default

for.end:                                          ; preds = %brelse.exit56.for.end_crit_edge, %if.then.i, %if.then6.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %56 = ptrtoint ptr %clu to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %clu, align 4
  %call22 = call i32 @exfat_ent_get(ptr noundef %sb, i32 noundef %57, ptr noundef nonnull %clu) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %while.condthread-pre-split, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

load_default:                                     ; preds = %brelse.exit62.load_default_crit_edge, %while.condthread-pre-split.load_default_crit_edge, %entry.load_default_crit_edge
  %58 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %s_fs_info.i, align 16
  %call.i.i.i.i64 = call noalias ptr @kvmalloc_node(i32 noundef 131072, i32 noundef 3520, i32 noundef -1) #12
  %tobool.not.i65 = icmp eq ptr %call.i.i.i.i64, null
  br i1 %tobool.not.i65, label %load_default.cleanup_crit_edge, label %if.end.i67

load_default.cleanup_crit_edge:                   ; preds = %load_default
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end.i67:                                       ; preds = %load_default
  %vol_utbl.i66 = getelementptr inbounds %struct.exfat_sb_info, ptr %59, i32 0, i32 18
  %60 = ptrtoint ptr %vol_utbl.i66 to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %call.i.i.i.i64, ptr %vol_utbl.i66, align 4
  br label %for.body.i70

for.body.i70:                                     ; preds = %for.inc.i.for.body.i70_crit_edge, %if.end.i67
  %index.047.i = phi i32 [ 0, %if.end.i67 ], [ %index.1.i, %for.inc.i.for.body.i70_crit_edge ]
  %skip.046.i = phi i8 [ 0, %if.end.i67 ], [ %skip.1.i, %for.inc.i.for.body.i70_crit_edge ]
  %i.045.i = phi i32 [ 0, %if.end.i67 ], [ %inc20.i, %for.inc.i.for.body.i70_crit_edge ]
  %arrayidx.i68 = getelementptr [2918 x i16], ptr @uni_def_upcase, i32 0, i32 %i.045.i
  %61 = ptrtoint ptr %arrayidx.i68 to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %arrayidx.i68, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %skip.046.i)
  %tobool3.not.i69 = icmp eq i8 %skip.046.i, 0
  %conv5.i = zext i16 %62 to i32
  br i1 %tobool3.not.i69, label %if.else.i73, label %if.then4.i

if.then4.i:                                       ; preds = %for.body.i70
  call void @__sanitizer_cov_trace_pc() #10
  %add.i71 = add nuw nsw i32 %index.047.i, %conv5.i
  br label %for.inc.i

if.else.i73:                                      ; preds = %for.body.i70
  call void @__sanitizer_cov_trace_cmp4(i32 %index.047.i, i32 %conv5.i)
  %cmp6.i72 = icmp eq i32 %index.047.i, %conv5.i
  br i1 %cmp6.i72, label %if.then8.i, label %if.else9.i

if.then8.i:                                       ; preds = %if.else.i73
  call void @__sanitizer_cov_trace_pc() #10
  %inc.i74 = add nuw nsw i32 %index.047.i, 1
  br label %for.inc.i

if.else9.i:                                       ; preds = %if.else.i73
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %62)
  %cmp11.i = icmp eq i16 %62, -1
  br i1 %cmp11.i, label %if.else9.i.for.inc.i_crit_edge, label %if.else14.i

if.else9.i.for.inc.i_crit_edge:                   ; preds = %if.else9.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.inc.i

if.else14.i:                                      ; preds = %if.else9.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx15.i = getelementptr i16, ptr %call.i.i.i.i64, i32 %index.047.i
  %63 = ptrtoint ptr %arrayidx15.i to i32
  call void @__asan_store2_noabort(i32 %63)
  store i16 %62, ptr %arrayidx15.i, align 2
  %inc16.i75 = add nuw nsw i32 %index.047.i, 1
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.else14.i, %if.else9.i.for.inc.i_crit_edge, %if.then8.i, %if.then4.i
  %skip.1.i = phi i8 [ 0, %if.then4.i ], [ 0, %if.then8.i ], [ 0, %if.else14.i ], [ 1, %if.else9.i.for.inc.i_crit_edge ]
  %index.1.i = phi i32 [ %add.i71, %if.then4.i ], [ %inc.i74, %if.then8.i ], [ %inc16.i75, %if.else14.i ], [ %index.047.i, %if.else9.i.for.inc.i_crit_edge ]
  %inc20.i = add nuw nsw i32 %i.045.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %index.1.i)
  %cmp.i76 = icmp ult i32 %index.1.i, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 2917, i32 %i.045.i)
  %cmp2.i = icmp ult i32 %i.045.i, 2917
  %or.cond.i77 = select i1 %cmp.i76, i1 %cmp2.i, i1 false
  br i1 %or.cond.i77, label %for.inc.i.for.body.i70_crit_edge, label %for.end.i

for.inc.i.for.body.i70_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i70

for.end.i:                                        ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 65534, i32 %index.1.i)
  %cmp21.i = icmp ugt i32 %index.1.i, 65534
  br i1 %cmp21.i, label %for.end.i.cleanup_crit_edge, label %if.end24.i

for.end.i.cleanup_crit_edge:                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end24.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #10
  %64 = ptrtoint ptr %vol_utbl.i66 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %vol_utbl.i66, align 4
  call void @kvfree(ptr noundef %65) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end24.i, %for.end.i.cleanup_crit_edge, %load_default.cleanup_crit_edge, %for.end.cleanup_crit_edge, %brelse.exit62.cleanup_crit_edge, %brelse.exit62.cleanup_crit_edge111, %for.body.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i, %brelse.exit62.cleanup_crit_edge ], [ %retval.0.i, %brelse.exit62.cleanup_crit_edge111 ], [ -5, %if.end24.i ], [ -12, %load_default.cleanup_crit_edge ], [ 0, %for.end.i.cleanup_crit_edge ], [ -5, %for.body.cleanup_crit_edge ], [ -5, %for.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %bh) #8
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %clu) #8
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @exfat_get_dentry(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @exfat_get_entry_type(ptr noundef) local_unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.bswap.i64(i64) #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @exfat_ent_get(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @exfat_free_upcase_table(ptr nocapture noundef readonly %sbi) local_unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %vol_utbl = getelementptr inbounds %struct.exfat_sb_info, ptr %sbi, i32 0, i32 18
  %0 = ptrtoint ptr %vol_utbl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vol_utbl, align 4
  tail call void @kvfree(ptr noundef %1) #8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @utf16s_to_utf8s(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @utf8s_to_utf16s(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @exfat_msg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @exfat_calc_chksum16(ptr noundef, i32 noundef, i16 noundef zeroext, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @__brelse(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @exfat_calc_chksum32(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @kvmalloc_node(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__bread_gfp(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #8

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #9 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 8)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #9 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 8)
  ret void
}

attributes #0 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nounwind }
attributes #9 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #10 = { nomerge }
attributes #11 = { cold nounwind }
attributes #12 = { nounwind allocsize(0) }

!llvm.asan.globals = !{!0, !2, !4, !5, !6, !8, !10, !12, !14}
!llvm.module.flags = !{!16, !17, !18, !19, !20, !21, !22, !23}
!llvm.ident = !{!24}

!0 = !{ptr @.str, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../fs/exfat/nls.c", i32 501, i32 2}
!2 = !{ptr @.str.1, !3, !"<string literal>", i1 false, i1 false}
!3 = !{!"../fs/exfat/nls.c", i32 506, i32 3}
!4 = !{ptr @.str.2, !3, !"<string literal>", i1 false, i1 false}
!5 = !{ptr @__func__.exfat_utf8_to_utf16, !3, !"<string literal>", i1 false, i1 false}
!6 = !{ptr @.str.3, !7, !"<string literal>", i1 false, i1 false}
!7 = !{!"../fs/exfat/nls.c", i32 512, i32 3}
!8 = !{ptr @bad_uni_chars, !9, !"bad_uni_chars", i1 false, i1 false}
!9 = !{!"../fs/exfat/nls.c", i32 399, i32 23}
!10 = !{ptr @.str.4, !11, !"<string literal>", i1 false, i1 false}
!11 = !{!"../fs/exfat/nls.c", i32 674, i32 4}
!12 = !{ptr @.str.5, !13, !"<string literal>", i1 false, i1 false}
!13 = !{!"../fs/exfat/nls.c", i32 702, i32 2}
!14 = !{ptr @uni_def_upcase, !15, !"uni_def_upcase", i1 false, i1 false}
!15 = !{!"../fs/exfat/nls.c", i32 23, i32 29}
!16 = !{i32 1, !"wchar_size", i32 2}
!17 = !{i32 1, !"min_enum_size", i32 4}
!18 = !{i32 8, !"branch-target-enforcement", i32 0}
!19 = !{i32 8, !"sign-return-address", i32 0}
!20 = !{i32 8, !"sign-return-address-all", i32 0}
!21 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!22 = !{i32 7, !"uwtable", i32 1}
!23 = !{i32 7, !"frame-pointer", i32 2}
!24 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!25 = !{!"branch_weights", i32 1, i32 2000}
!26 = !{!"auto-init"}
