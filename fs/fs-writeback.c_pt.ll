; ModuleID = '/llk/IR_all_yes/fs/fs-writeback.c_pt.bc'
source_filename = "../fs/fs-writeback.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+__tracepoint_wbc_writepage\22, \22a\22\09"
module asm "\09.weak\09__crc___tracepoint_wbc_writepage\09\09\09\09"
module asm "\09.long\09__crc___tracepoint_wbc_writepage\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_wbc_writepage:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_wbc_writepage\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_wbc_writepage:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__traceiter_wbc_writepage\22, \22a\22\09"
module asm "\09.weak\09__crc___traceiter_wbc_writepage\09\09\09\09"
module asm "\09.long\09__crc___traceiter_wbc_writepage\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_wbc_writepage:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_wbc_writepage\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_wbc_writepage:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__SCK__tp_func_wbc_writepage\22, \22a\22\09"
module asm "\09.weak\09__crc___SCK__tp_func_wbc_writepage\09\09\09\09"
module asm "\09.long\09__crc___SCK__tp_func_wbc_writepage\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_wbc_writepage:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_wbc_writepage\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_wbc_writepage:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__inode_attach_wb\22, \22a\22\09"
module asm "\09.weak\09__crc___inode_attach_wb\09\09\09\09"
module asm "\09.long\09__crc___inode_attach_wb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___inode_attach_wb:\09\09\09\09\09"
module asm "\09.asciz \09\22__inode_attach_wb\22\09\09\09\09\09"
module asm "__kstrtabns___inode_attach_wb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+wbc_attach_and_unlock_inode\22, \22a\22\09"
module asm "\09.weak\09__crc_wbc_attach_and_unlock_inode\09\09\09\09"
module asm "\09.long\09__crc_wbc_attach_and_unlock_inode\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_wbc_attach_and_unlock_inode:\09\09\09\09\09"
module asm "\09.asciz \09\22wbc_attach_and_unlock_inode\22\09\09\09\09\09"
module asm "__kstrtabns_wbc_attach_and_unlock_inode:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+wbc_detach_inode\22, \22a\22\09"
module asm "\09.weak\09__crc_wbc_detach_inode\09\09\09\09"
module asm "\09.long\09__crc_wbc_detach_inode\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_wbc_detach_inode:\09\09\09\09\09"
module asm "\09.asciz \09\22wbc_detach_inode\22\09\09\09\09\09"
module asm "__kstrtabns_wbc_detach_inode:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+wbc_account_cgroup_owner\22, \22a\22\09"
module asm "\09.weak\09__crc_wbc_account_cgroup_owner\09\09\09\09"
module asm "\09.long\09__crc_wbc_account_cgroup_owner\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_wbc_account_cgroup_owner:\09\09\09\09\09"
module asm "\09.asciz \09\22wbc_account_cgroup_owner\22\09\09\09\09\09"
module asm "__kstrtabns_wbc_account_cgroup_owner:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+inode_congested\22, \22a\22\09"
module asm "\09.weak\09__crc_inode_congested\09\09\09\09"
module asm "\09.long\09__crc_inode_congested\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_inode_congested:\09\09\09\09\09"
module asm "\09.asciz \09\22inode_congested\22\09\09\09\09\09"
module asm "__kstrtabns_inode_congested:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+inode_io_list_del\22, \22a\22\09"
module asm "\09.weak\09__crc_inode_io_list_del\09\09\09\09"
module asm "\09.long\09__crc_inode_io_list_del\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_inode_io_list_del:\09\09\09\09\09"
module asm "\09.asciz \09\22inode_io_list_del\22\09\09\09\09\09"
module asm "__kstrtabns_inode_io_list_del:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__mark_inode_dirty\22, \22a\22\09"
module asm "\09.weak\09__crc___mark_inode_dirty\09\09\09\09"
module asm "\09.long\09__crc___mark_inode_dirty\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___mark_inode_dirty:\09\09\09\09\09"
module asm "\09.asciz \09\22__mark_inode_dirty\22\09\09\09\09\09"
module asm "__kstrtabns___mark_inode_dirty:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+writeback_inodes_sb_nr\22, \22a\22\09"
module asm "\09.weak\09__crc_writeback_inodes_sb_nr\09\09\09\09"
module asm "\09.long\09__crc_writeback_inodes_sb_nr\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_writeback_inodes_sb_nr:\09\09\09\09\09"
module asm "\09.asciz \09\22writeback_inodes_sb_nr\22\09\09\09\09\09"
module asm "__kstrtabns_writeback_inodes_sb_nr:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+writeback_inodes_sb\22, \22a\22\09"
module asm "\09.weak\09__crc_writeback_inodes_sb\09\09\09\09"
module asm "\09.long\09__crc_writeback_inodes_sb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_writeback_inodes_sb:\09\09\09\09\09"
module asm "\09.asciz \09\22writeback_inodes_sb\22\09\09\09\09\09"
module asm "__kstrtabns_writeback_inodes_sb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+try_to_writeback_inodes_sb\22, \22a\22\09"
module asm "\09.weak\09__crc_try_to_writeback_inodes_sb\09\09\09\09"
module asm "\09.long\09__crc_try_to_writeback_inodes_sb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_try_to_writeback_inodes_sb:\09\09\09\09\09"
module asm "\09.asciz \09\22try_to_writeback_inodes_sb\22\09\09\09\09\09"
module asm "__kstrtabns_try_to_writeback_inodes_sb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sync_inodes_sb\22, \22a\22\09"
module asm "\09.weak\09__crc_sync_inodes_sb\09\09\09\09"
module asm "\09.long\09__crc_sync_inodes_sb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sync_inodes_sb:\09\09\09\09\09"
module asm "\09.asciz \09\22sync_inodes_sb\22\09\09\09\09\09"
module asm "__kstrtabns_sync_inodes_sb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+write_inode_now\22, \22a\22\09"
module asm "\09.weak\09__crc_write_inode_now\09\09\09\09"
module asm "\09.long\09__crc_write_inode_now\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_write_inode_now:\09\09\09\09\09"
module asm "\09.asciz \09\22write_inode_now\22\09\09\09\09\09"
module asm "__kstrtabns_write_inode_now:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sync_inode_metadata\22, \22a\22\09"
module asm "\09.weak\09__crc_sync_inode_metadata\09\09\09\09"
module asm "\09.long\09__crc_sync_inode_metadata\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sync_inode_metadata:\09\09\09\09\09"
module asm "\09.asciz \09\22sync_inode_metadata\22\09\09\09\09\09"
module asm "__kstrtabns_sync_inode_metadata:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_eval_map = type { ptr, ptr, i32 }
%struct.trace_event_fields = type { ptr, %union.anon.104 }
%union.anon.104 = type { %struct.anon.105 }
%struct.anon.105 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.106, %struct.trace_event, ptr, ptr, %union.anon.107, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.106 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.107 = type { ptr }
%union.anon.108 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.109 = type { %struct.bpf_raw_event_map }
%union.anon.110 = type { %struct.bpf_raw_event_map }
%union.anon.111 = type { %struct.bpf_raw_event_map }
%union.anon.112 = type { %struct.bpf_raw_event_map }
%union.anon.113 = type { %struct.bpf_raw_event_map }
%union.anon.114 = type { %struct.bpf_raw_event_map }
%union.anon.115 = type { %struct.bpf_raw_event_map }
%union.anon.116 = type { %struct.bpf_raw_event_map }
%union.anon.117 = type { %struct.bpf_raw_event_map }
%union.anon.118 = type { %struct.bpf_raw_event_map }
%union.anon.119 = type { %struct.bpf_raw_event_map }
%union.anon.120 = type { %struct.bpf_raw_event_map }
%union.anon.121 = type { %struct.bpf_raw_event_map }
%union.anon.122 = type { %struct.bpf_raw_event_map }
%union.anon.123 = type { %struct.bpf_raw_event_map }
%union.anon.124 = type { %struct.bpf_raw_event_map }
%union.anon.125 = type { %struct.bpf_raw_event_map }
%union.anon.126 = type { %struct.bpf_raw_event_map }
%union.anon.127 = type { %struct.bpf_raw_event_map }
%union.anon.128 = type { %struct.bpf_raw_event_map }
%union.anon.129 = type { %struct.bpf_raw_event_map }
%union.anon.130 = type { %struct.bpf_raw_event_map }
%union.anon.131 = type { %struct.bpf_raw_event_map }
%union.anon.132 = type { %struct.bpf_raw_event_map }
%union.anon.133 = type { %struct.bpf_raw_event_map }
%union.anon.134 = type { %struct.bpf_raw_event_map }
%union.anon.135 = type { %struct.bpf_raw_event_map }
%union.anon.136 = type { %struct.bpf_raw_event_map }
%union.anon.137 = type { %struct.bpf_raw_event_map }
%union.anon.138 = type { %struct.bpf_raw_event_map }
%union.anon.139 = type { %struct.bpf_raw_event_map }
%union.anon.140 = type { %struct.bpf_raw_event_map }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.lock_class_key = type { %union.anon.3 }
%union.anon.3 = type { %struct.hlist_node }
%struct.cgroup_subsys = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, %struct.idr, %struct.list_head, ptr, ptr, i32 }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.2 }
%union.anon.2 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i32, i32, %struct.kref, i32, i32, i32, i32, %struct.atomic_t, %struct.bdi_writeback, %struct.list_head, %struct.xarray, %struct.mutex, %struct.rw_semaphore, %struct.wait_queue_head, ptr, [64 x i8], ptr, %struct.timer_list, ptr }
%struct.rb_node = type { i32, ptr, ptr }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.bdi_writeback = type { ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.atomic_t, [4 x %struct.percpu_counter], i32, i32, i32, i32, i32, i32, i32, i32, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, %struct.delayed_work, i32, %struct.list_head, %struct.percpu_ref, %struct.fprop_local_percpu, ptr, ptr, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.66 }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.percpu_ref = type { i32, ptr }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%union.anon.66 = type { %struct.work_struct }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.trace_print_flags = type { i32, ptr }
%struct.wb_domain = type { %struct.spinlock, %struct.fprop_global, %struct.timer_list, i32, i32, i32 }
%struct.fprop_global = type { %struct.percpu_counter, i32, %struct.seqcount }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.static_key_true = type { %struct.static_key }
%struct.static_key = type { %struct.atomic_t, %union.anon }
%union.anon = type { i32 }
%struct.cpumask = type { [1 x i32] }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.trace_event_raw_writeback_folio_template = type { %struct.trace_entry, [32 x i8], i32, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.80, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.81, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.82, ptr, %struct.address_space, %struct.list_head, %union.anon.83, i32, i32, ptr, ptr, ptr, ptr }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%union.anon.80 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%union.anon.81 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.atomic64_t = type { i64 }
%union.anon.82 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%union.anon.83 = type { ptr }
%struct.anon = type { i32, %struct.list_head, ptr, i32, ptr, %struct.atomic_t, %struct.atomic_t, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_writeback_dirty_inode_template = type { %struct.trace_entry, [32 x i8], i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_inode_foreign_history = type { %struct.trace_entry, [32 x i8], i32, i32, i32, [0 x i8] }
%struct.writeback_control = type { i32, i32, i64, i64, i32, i16, ptr, ptr, i32, i32, i32, i32, i32, i32 }
%struct.cgroup = type { %struct.cgroup_subsys_state, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, %struct.cgroup_file, %struct.cgroup_file, i16, i16, i16, i16, [14 x ptr], ptr, %struct.list_head, [14 x %struct.list_head], ptr, ptr, ptr, %struct.list_head, %struct.cgroup_base_stat, %struct.cgroup_base_stat, %struct.prev_cputime, %struct.list_head, %struct.mutex, %struct.wait_queue_head, %struct.work_struct, %struct.psi_group, %struct.cgroup_bpf, %struct.atomic_t, %struct.cgroup_freezer_state, [0 x i64] }
%struct.cgroup_subsys_state = type { ptr, ptr, %struct.percpu_ref, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i64, %struct.atomic_t, %struct.work_struct, %struct.rcu_work, ptr }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, ptr }
%struct.cgroup_file = type { ptr, i32, %struct.timer_list }
%struct.cgroup_base_stat = type { %struct.task_cputime }
%struct.task_cputime = type { i64, i64, i64 }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.psi_group = type { %struct.mutex, ptr, [6 x i64], i64, i64, %struct.delayed_work, [2 x [6 x i64]], [6 x [3 x i32]], ptr, %struct.timer_list, %struct.wait_queue_head, %struct.atomic_t, %struct.mutex, %struct.list_head, [6 x i32], i32, i64, [6 x i64], i64, i64 }
%struct.cgroup_bpf = type { [23 x ptr], [23 x %struct.list_head], [23 x i32], %struct.list_head, ptr, %struct.percpu_ref, %struct.work_struct }
%struct.cgroup_freezer_state = type { i8, i32, i32, i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.lockdep_map, ptr, ptr, %struct.rb_node, ptr, i32, %union.anon.23, ptr, i64, i16, i16, ptr }
%union.anon.23 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { ptr, ptr, i64, ptr }
%struct.trace_event_raw_inode_switch_wbs = type { %struct.trace_entry, [32 x i8], i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_track_foreign_dirty = type { %struct.trace_entry, [32 x i8], i64, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_flush_foreign = type { %struct.trace_entry, [32 x i8], i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_writeback_write_inode_template = type { %struct.trace_entry, [32 x i8], i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_writeback_work_class = type { %struct.trace_entry, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.wb_writeback_work = type { i32, ptr, i32, i8, i32, %struct.list_head, ptr }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, i16, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [24 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [24 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.hlist_head = type { ptr }
%struct.list_lru = type { ptr, %struct.list_head, i32, i8 }
%struct.trace_event_raw_writeback_pages_written = type { %struct.trace_entry, i32, [0 x i8] }
%struct.trace_event_raw_writeback_class = type { %struct.trace_entry, [32 x i8], i32, [0 x i8] }
%struct.trace_event_raw_writeback_bdi_register = type { %struct.trace_entry, [32 x i8], [0 x i8] }
%struct.trace_event_raw_wbc_class = type { %struct.trace_entry, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_writeback_queue_io = type { %struct.trace_entry, [32 x i8], i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_global_dirty_state = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_bdi_dirty_ratelimit = type { %struct.trace_entry, [32 x i8], i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_balance_dirty_pages = type { %struct.trace_entry, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.62, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.25 }
%struct.llist_node = type { ptr }
%union.anon.25 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.27 }
%union.anon.27 = type { %struct.anon.28 }
%struct.anon.28 = type { ptr, i32, i32, i32, i64, ptr }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.tlbflush_unmap_batch = type {}
%union.anon.62 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.trace_event_raw_writeback_sb_inodes_requeue = type { %struct.trace_entry, [32 x i8], i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_writeback_congest_waited_template = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_writeback_single_inode_template = type { %struct.trace_entry, [32 x i8], i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_writeback_inode_template = type { %struct.trace_entry, i32, i32, i32, i16, i32, [0 x i8] }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.wb_completion = type { %struct.atomic_t, ptr }
%struct.inode_switch_wbs_context = type { %struct.rcu_work, ptr, [0 x ptr] }
%struct.xa_state = type { ptr, i32, i8, i8, i8, i8, ptr, ptr, ptr }
%struct.page = type { i32, %union.anon.5, %union.anon.79, %struct.atomic_t, i32 }
%union.anon.5 = type { %struct.anon.6 }
%struct.anon.6 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.79 = type { %struct.atomic_t }
%struct.mem_cgroup = type { %struct.cgroup_subsys_state, %struct.mem_cgroup_id, %struct.page_counter, %union.anon.68, %struct.page_counter, %struct.page_counter, %struct.work_struct, i32, %struct.vmpressure, i8, i8, i32, i32, i32, %struct.cgroup_file, %struct.cgroup_file, %struct.cgroup_file, %struct.mutex, %struct.mem_cgroup_thresholds, %struct.mem_cgroup_thresholds, %struct.list_head, i32, %struct.spinlock, i32, [20 x i8], %struct.memcg_padding, %struct.memcg_vmstats, [9 x %struct.atomic_t], [9 x %struct.atomic_t], i32, i8, i32, i32, ptr, %struct.list_head, [92 x i8], %struct.memcg_padding, %struct.atomic_t, ptr, ptr, %struct.list_head, %struct.wb_domain, [4 x %struct.memcg_cgwb_frn], %struct.list_head, %struct.spinlock, [0 x ptr], [84 x i8] }
%struct.mem_cgroup_id = type { i32, %struct.refcount_struct }
%union.anon.68 = type { %struct.page_counter }
%struct.page_counter = type { %struct.atomic_t, i32, i32, i32, i32, i32, %struct.atomic_t, %struct.atomic_t, i32, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr }
%struct.vmpressure = type { i32, i32, i32, i32, %struct.spinlock, %struct.list_head, %struct.mutex, %struct.work_struct }
%struct.mem_cgroup_thresholds = type { ptr, ptr }
%struct.memcg_vmstats = type { [44 x i32], [76 x i32], [44 x i32], [76 x i32] }
%struct.memcg_padding = type { [0 x i8] }
%struct.memcg_cgwb_frn = type { i64, i32, i64, %struct.wb_completion }
%struct.wait_bit_queue_entry = type { %struct.wait_bit_key, %struct.wait_queue_entry }
%struct.wait_bit_key = type { ptr, i32, i32 }
%struct.blk_plug = type { ptr, ptr, i16, i16, i8, i8, i8, %struct.list_head }
%struct.super_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }
%struct.obj_cgroup = type { %struct.percpu_ref, ptr, %struct.atomic_t, %union.anon.69 }
%union.anon.69 = type { %struct.list_head }
%struct.percpu_ref_data = type { %struct.atomic_t, ptr, ptr, i8, %struct.callback_head, ptr }
%struct.xa_node = type { i8, i8, i8, i8, ptr, ptr, %union.anon.141, [64 x ptr], %union.anon.142 }
%union.anon.141 = type { %struct.list_head }
%union.anon.142 = type { [3 x [2 x i32]] }
%struct.anon.4 = type { [16 x i8], %struct.lockdep_map }

@dirtytime_expire_interval = dso_local global { i32, [28 x i8] } { i32 43200, [28 x i8] zeroinitializer }, align 32
@__tpstrtab_writeback_dirty_folio = internal constant [22 x i8] c"writeback_dirty_folio\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_dirty_folio = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_dirty_folio }, align 4
@__tracepoint_writeback_dirty_folio = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_dirty_folio, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_dirty_folio, ptr null, ptr @__traceiter_writeback_dirty_folio, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_dirty_folio = internal constant ptr @__tracepoint_writeback_dirty_folio, section "__tracepoints_ptrs", align 4
@__tpstrtab_folio_wait_writeback = internal constant [21 x i8] c"folio_wait_writeback\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_folio_wait_writeback = dso_local global %struct.static_call_key { ptr @__traceiter_folio_wait_writeback }, align 4
@__tracepoint_folio_wait_writeback = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_folio_wait_writeback, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_folio_wait_writeback, ptr null, ptr @__traceiter_folio_wait_writeback, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_folio_wait_writeback = internal constant ptr @__tracepoint_folio_wait_writeback, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_mark_inode_dirty = internal constant [27 x i8] c"writeback_mark_inode_dirty\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_mark_inode_dirty = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_mark_inode_dirty }, align 4
@__tracepoint_writeback_mark_inode_dirty = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_mark_inode_dirty, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_mark_inode_dirty, ptr null, ptr @__traceiter_writeback_mark_inode_dirty, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_mark_inode_dirty = internal constant ptr @__tracepoint_writeback_mark_inode_dirty, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_dirty_inode_start = internal constant [28 x i8] c"writeback_dirty_inode_start\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_dirty_inode_start = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_dirty_inode_start }, align 4
@__tracepoint_writeback_dirty_inode_start = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_dirty_inode_start, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_dirty_inode_start, ptr null, ptr @__traceiter_writeback_dirty_inode_start, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_dirty_inode_start = internal constant ptr @__tracepoint_writeback_dirty_inode_start, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_dirty_inode = internal constant [22 x i8] c"writeback_dirty_inode\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_dirty_inode = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_dirty_inode }, align 4
@__tracepoint_writeback_dirty_inode = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_dirty_inode, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_dirty_inode, ptr null, ptr @__traceiter_writeback_dirty_inode, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_dirty_inode = internal constant ptr @__tracepoint_writeback_dirty_inode, section "__tracepoints_ptrs", align 4
@__tpstrtab_inode_foreign_history = internal constant [22 x i8] c"inode_foreign_history\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_inode_foreign_history = dso_local global %struct.static_call_key { ptr @__traceiter_inode_foreign_history }, align 4
@__tracepoint_inode_foreign_history = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_inode_foreign_history, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_inode_foreign_history, ptr null, ptr @__traceiter_inode_foreign_history, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_inode_foreign_history = internal constant ptr @__tracepoint_inode_foreign_history, section "__tracepoints_ptrs", align 4
@__tpstrtab_inode_switch_wbs = internal constant [17 x i8] c"inode_switch_wbs\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_inode_switch_wbs = dso_local global %struct.static_call_key { ptr @__traceiter_inode_switch_wbs }, align 4
@__tracepoint_inode_switch_wbs = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_inode_switch_wbs, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_inode_switch_wbs, ptr null, ptr @__traceiter_inode_switch_wbs, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_inode_switch_wbs = internal constant ptr @__tracepoint_inode_switch_wbs, section "__tracepoints_ptrs", align 4
@__tpstrtab_track_foreign_dirty = internal constant [20 x i8] c"track_foreign_dirty\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_track_foreign_dirty = dso_local global %struct.static_call_key { ptr @__traceiter_track_foreign_dirty }, align 4
@__tracepoint_track_foreign_dirty = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_track_foreign_dirty, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_track_foreign_dirty, ptr null, ptr @__traceiter_track_foreign_dirty, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_track_foreign_dirty = internal constant ptr @__tracepoint_track_foreign_dirty, section "__tracepoints_ptrs", align 4
@__tpstrtab_flush_foreign = internal constant [14 x i8] c"flush_foreign\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_flush_foreign = dso_local global %struct.static_call_key { ptr @__traceiter_flush_foreign }, align 4
@__tracepoint_flush_foreign = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_flush_foreign, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_flush_foreign, ptr null, ptr @__traceiter_flush_foreign, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_flush_foreign = internal constant ptr @__tracepoint_flush_foreign, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_write_inode_start = internal constant [28 x i8] c"writeback_write_inode_start\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_write_inode_start = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_write_inode_start }, align 4
@__tracepoint_writeback_write_inode_start = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_write_inode_start, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_write_inode_start, ptr null, ptr @__traceiter_writeback_write_inode_start, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_write_inode_start = internal constant ptr @__tracepoint_writeback_write_inode_start, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_write_inode = internal constant [22 x i8] c"writeback_write_inode\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_write_inode = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_write_inode }, align 4
@__tracepoint_writeback_write_inode = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_write_inode, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_write_inode, ptr null, ptr @__traceiter_writeback_write_inode, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_write_inode = internal constant ptr @__tracepoint_writeback_write_inode, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_queue = internal constant [16 x i8] c"writeback_queue\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_queue = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_queue }, align 4
@__tracepoint_writeback_queue = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_queue, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_queue, ptr null, ptr @__traceiter_writeback_queue, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_queue = internal constant ptr @__tracepoint_writeback_queue, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_exec = internal constant [15 x i8] c"writeback_exec\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_exec = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_exec }, align 4
@__tracepoint_writeback_exec = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_exec, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_exec, ptr null, ptr @__traceiter_writeback_exec, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_exec = internal constant ptr @__tracepoint_writeback_exec, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_start = internal constant [16 x i8] c"writeback_start\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_start = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_start }, align 4
@__tracepoint_writeback_start = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_start, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_start, ptr null, ptr @__traceiter_writeback_start, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_start = internal constant ptr @__tracepoint_writeback_start, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_written = internal constant [18 x i8] c"writeback_written\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_written = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_written }, align 4
@__tracepoint_writeback_written = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_written, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_written, ptr null, ptr @__traceiter_writeback_written, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_written = internal constant ptr @__tracepoint_writeback_written, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_wait = internal constant [15 x i8] c"writeback_wait\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_wait = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_wait }, align 4
@__tracepoint_writeback_wait = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_wait, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_wait, ptr null, ptr @__traceiter_writeback_wait, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_wait = internal constant ptr @__tracepoint_writeback_wait, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_pages_written = internal constant [24 x i8] c"writeback_pages_written\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_pages_written = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_pages_written }, align 4
@__tracepoint_writeback_pages_written = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_pages_written, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_pages_written, ptr null, ptr @__traceiter_writeback_pages_written, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_pages_written = internal constant ptr @__tracepoint_writeback_pages_written, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_wake_background = internal constant [26 x i8] c"writeback_wake_background\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_wake_background = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_wake_background }, align 4
@__tracepoint_writeback_wake_background = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_wake_background, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_wake_background, ptr null, ptr @__traceiter_writeback_wake_background, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_wake_background = internal constant ptr @__tracepoint_writeback_wake_background, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_bdi_register = internal constant [23 x i8] c"writeback_bdi_register\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_bdi_register = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_bdi_register }, align 4
@__tracepoint_writeback_bdi_register = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_bdi_register, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_bdi_register, ptr null, ptr @__traceiter_writeback_bdi_register, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_bdi_register = internal constant ptr @__tracepoint_writeback_bdi_register, section "__tracepoints_ptrs", align 4
@__tpstrtab_wbc_writepage = internal constant [14 x i8] c"wbc_writepage\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_wbc_writepage = dso_local global %struct.static_call_key { ptr @__traceiter_wbc_writepage }, align 4
@__tracepoint_wbc_writepage = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_wbc_writepage, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_wbc_writepage, ptr null, ptr @__traceiter_wbc_writepage, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_wbc_writepage = internal constant ptr @__tracepoint_wbc_writepage, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_queue_io = internal constant [19 x i8] c"writeback_queue_io\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_queue_io = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_queue_io }, align 4
@__tracepoint_writeback_queue_io = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_queue_io, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_queue_io, ptr null, ptr @__traceiter_writeback_queue_io, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_queue_io = internal constant ptr @__tracepoint_writeback_queue_io, section "__tracepoints_ptrs", align 4
@__tpstrtab_global_dirty_state = internal constant [19 x i8] c"global_dirty_state\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_global_dirty_state = dso_local global %struct.static_call_key { ptr @__traceiter_global_dirty_state }, align 4
@__tracepoint_global_dirty_state = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_global_dirty_state, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_global_dirty_state, ptr null, ptr @__traceiter_global_dirty_state, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_global_dirty_state = internal constant ptr @__tracepoint_global_dirty_state, section "__tracepoints_ptrs", align 4
@__tpstrtab_bdi_dirty_ratelimit = internal constant [20 x i8] c"bdi_dirty_ratelimit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_bdi_dirty_ratelimit = dso_local global %struct.static_call_key { ptr @__traceiter_bdi_dirty_ratelimit }, align 4
@__tracepoint_bdi_dirty_ratelimit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_bdi_dirty_ratelimit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_bdi_dirty_ratelimit, ptr null, ptr @__traceiter_bdi_dirty_ratelimit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_bdi_dirty_ratelimit = internal constant ptr @__tracepoint_bdi_dirty_ratelimit, section "__tracepoints_ptrs", align 4
@__tpstrtab_balance_dirty_pages = internal constant [20 x i8] c"balance_dirty_pages\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_balance_dirty_pages = dso_local global %struct.static_call_key { ptr @__traceiter_balance_dirty_pages }, align 4
@__tracepoint_balance_dirty_pages = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_balance_dirty_pages, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_balance_dirty_pages, ptr null, ptr @__traceiter_balance_dirty_pages, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_balance_dirty_pages = internal constant ptr @__tracepoint_balance_dirty_pages, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_sb_inodes_requeue = internal constant [28 x i8] c"writeback_sb_inodes_requeue\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_sb_inodes_requeue = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_sb_inodes_requeue }, align 4
@__tracepoint_writeback_sb_inodes_requeue = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_sb_inodes_requeue, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_sb_inodes_requeue, ptr null, ptr @__traceiter_writeback_sb_inodes_requeue, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_sb_inodes_requeue = internal constant ptr @__tracepoint_writeback_sb_inodes_requeue, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_congestion_wait = internal constant [26 x i8] c"writeback_congestion_wait\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_congestion_wait = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_congestion_wait }, align 4
@__tracepoint_writeback_congestion_wait = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_congestion_wait, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_congestion_wait, ptr null, ptr @__traceiter_writeback_congestion_wait, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_congestion_wait = internal constant ptr @__tracepoint_writeback_congestion_wait, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_single_inode_start = internal constant [29 x i8] c"writeback_single_inode_start\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_single_inode_start = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_single_inode_start }, align 4
@__tracepoint_writeback_single_inode_start = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_single_inode_start, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_single_inode_start, ptr null, ptr @__traceiter_writeback_single_inode_start, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_single_inode_start = internal constant ptr @__tracepoint_writeback_single_inode_start, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_single_inode = internal constant [23 x i8] c"writeback_single_inode\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_single_inode = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_single_inode }, align 4
@__tracepoint_writeback_single_inode = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_single_inode, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_single_inode, ptr null, ptr @__traceiter_writeback_single_inode, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_single_inode = internal constant ptr @__tracepoint_writeback_single_inode, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_lazytime = internal constant [19 x i8] c"writeback_lazytime\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_lazytime = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_lazytime }, align 4
@__tracepoint_writeback_lazytime = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_lazytime, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_lazytime, ptr null, ptr @__traceiter_writeback_lazytime, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_lazytime = internal constant ptr @__tracepoint_writeback_lazytime, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_lazytime_iput = internal constant [24 x i8] c"writeback_lazytime_iput\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_lazytime_iput = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_lazytime_iput }, align 4
@__tracepoint_writeback_lazytime_iput = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_lazytime_iput, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_lazytime_iput, ptr null, ptr @__traceiter_writeback_lazytime_iput, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_lazytime_iput = internal constant ptr @__tracepoint_writeback_lazytime_iput, section "__tracepoints_ptrs", align 4
@__tpstrtab_writeback_dirty_inode_enqueue = internal constant [30 x i8] c"writeback_dirty_inode_enqueue\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_writeback_dirty_inode_enqueue = dso_local global %struct.static_call_key { ptr @__traceiter_writeback_dirty_inode_enqueue }, align 4
@__tracepoint_writeback_dirty_inode_enqueue = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_writeback_dirty_inode_enqueue, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_writeback_dirty_inode_enqueue, ptr null, ptr @__traceiter_writeback_dirty_inode_enqueue, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_writeback_dirty_inode_enqueue = internal constant ptr @__tracepoint_writeback_dirty_inode_enqueue, section "__tracepoints_ptrs", align 4
@__tpstrtab_sb_mark_inode_writeback = internal constant [24 x i8] c"sb_mark_inode_writeback\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_sb_mark_inode_writeback = dso_local global %struct.static_call_key { ptr @__traceiter_sb_mark_inode_writeback }, align 4
@__tracepoint_sb_mark_inode_writeback = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_sb_mark_inode_writeback, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_sb_mark_inode_writeback, ptr null, ptr @__traceiter_sb_mark_inode_writeback, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_sb_mark_inode_writeback = internal constant ptr @__tracepoint_sb_mark_inode_writeback, section "__tracepoints_ptrs", align 4
@__tpstrtab_sb_clear_inode_writeback = internal constant [25 x i8] c"sb_clear_inode_writeback\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_sb_clear_inode_writeback = dso_local global %struct.static_call_key { ptr @__traceiter_sb_clear_inode_writeback }, align 4
@__tracepoint_sb_clear_inode_writeback = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_sb_clear_inode_writeback, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_sb_clear_inode_writeback, ptr null, ptr @__traceiter_sb_clear_inode_writeback, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_sb_clear_inode_writeback = internal constant ptr @__tracepoint_sb_clear_inode_writeback, section "__tracepoints_ptrs", align 4
@str__writeback__trace_system_name = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"writeback\00", [22 x i8] zeroinitializer }, align 32
@.str = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"WB_REASON_BACKGROUND\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_WB_REASON_BACKGROUND = internal global %struct.trace_eval_map { ptr @str__writeback__trace_system_name, ptr @.str, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_WB_REASON_BACKGROUND = internal global ptr @__TRACE_SYSTEM_WB_REASON_BACKGROUND, section "_ftrace_eval_map", align 4
@.str.1 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"WB_REASON_VMSCAN\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_WB_REASON_VMSCAN = internal global %struct.trace_eval_map { ptr @str__writeback__trace_system_name, ptr @.str.1, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_WB_REASON_VMSCAN = internal global ptr @__TRACE_SYSTEM_WB_REASON_VMSCAN, section "_ftrace_eval_map", align 4
@.str.2 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"WB_REASON_SYNC\00", [17 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_WB_REASON_SYNC = internal global %struct.trace_eval_map { ptr @str__writeback__trace_system_name, ptr @.str.2, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_WB_REASON_SYNC = internal global ptr @__TRACE_SYSTEM_WB_REASON_SYNC, section "_ftrace_eval_map", align 4
@.str.3 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"WB_REASON_PERIODIC\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_WB_REASON_PERIODIC = internal global %struct.trace_eval_map { ptr @str__writeback__trace_system_name, ptr @.str.3, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_WB_REASON_PERIODIC = internal global ptr @__TRACE_SYSTEM_WB_REASON_PERIODIC, section "_ftrace_eval_map", align 4
@.str.4 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"WB_REASON_LAPTOP_TIMER\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_WB_REASON_LAPTOP_TIMER = internal global %struct.trace_eval_map { ptr @str__writeback__trace_system_name, ptr @.str.4, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_WB_REASON_LAPTOP_TIMER = internal global ptr @__TRACE_SYSTEM_WB_REASON_LAPTOP_TIMER, section "_ftrace_eval_map", align 4
@.str.5 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"WB_REASON_FS_FREE_SPACE\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_WB_REASON_FS_FREE_SPACE = internal global %struct.trace_eval_map { ptr @str__writeback__trace_system_name, ptr @.str.5, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_WB_REASON_FS_FREE_SPACE = internal global ptr @__TRACE_SYSTEM_WB_REASON_FS_FREE_SPACE, section "_ftrace_eval_map", align 4
@.str.6 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"WB_REASON_FORKER_THREAD\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_WB_REASON_FORKER_THREAD = internal global %struct.trace_eval_map { ptr @str__writeback__trace_system_name, ptr @.str.6, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_WB_REASON_FORKER_THREAD = internal global ptr @__TRACE_SYSTEM_WB_REASON_FORKER_THREAD, section "_ftrace_eval_map", align 4
@.str.7 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"WB_REASON_FOREIGN_FLUSH\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_WB_REASON_FOREIGN_FLUSH = internal global %struct.trace_eval_map { ptr @str__writeback__trace_system_name, ptr @.str.7, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_WB_REASON_FOREIGN_FLUSH = internal global ptr @__TRACE_SYSTEM_WB_REASON_FOREIGN_FLUSH, section "_ftrace_eval_map", align 4
@trace_event_fields_writeback_folio_template = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.12, %union.anon.104 { %struct.anon.105 { ptr @.str.13, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.15, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.17, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_writeback_folio_template = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_writeback_folio_template, ptr @perf_trace_writeback_folio_template, ptr @trace_event_reg, ptr @trace_event_fields_writeback_folio_template, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_writeback_folio_template, i64 24), ptr getelementptr (i8, ptr @event_class_writeback_folio_template, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_writeback_folio_template = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_writeback_folio_template, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_writeback_folio_template = internal global { [76 x i8], [52 x i8] } { [76 x i8] c"\22bdi %s: ino=%lu index=%lu\22, REC->name, (unsigned long)REC->ino, REC->index\00", [52 x i8] zeroinitializer }, align 32
@event_writeback_dirty_folio = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_folio_template, %union.anon.106 { ptr @__tracepoint_writeback_dirty_folio }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_folio_template }, ptr @print_fmt_writeback_folio_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_dirty_folio = internal global ptr @event_writeback_dirty_folio, section "_ftrace_events", align 4
@event_folio_wait_writeback = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_folio_template, %union.anon.106 { ptr @__tracepoint_folio_wait_writeback }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_folio_template }, ptr @print_fmt_writeback_folio_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_folio_wait_writeback = internal global ptr @event_folio_wait_writeback, section "_ftrace_events", align 4
@trace_event_fields_writeback_dirty_inode_template = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.12, %union.anon.104 { %struct.anon.105 { ptr @.str.13, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.15, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.19, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.20, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_writeback_dirty_inode_template = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_writeback_dirty_inode_template, ptr @perf_trace_writeback_dirty_inode_template, ptr @trace_event_reg, ptr @trace_event_fields_writeback_dirty_inode_template, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_writeback_dirty_inode_template, i64 24), ptr getelementptr (i8, ptr @event_class_writeback_dirty_inode_template, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_writeback_dirty_inode_template = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_writeback_dirty_inode_template, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_writeback_dirty_inode_template = internal global { [666 x i8], [166 x i8] } { [666 x i8] c"\22bdi %s: ino=%lu state=%s flags=%s\22, REC->name, (unsigned long)REC->ino, __print_flags(REC->state, \22|\22, {(1 << 0), \22I_DIRTY_SYNC\22}, {(1 << 1), \22I_DIRTY_DATASYNC\22}, {(1 << 2), \22I_DIRTY_PAGES\22}, {(1 << 3), \22I_NEW\22}, {(1 << 4), \22I_WILL_FREE\22}, {(1 << 5), \22I_FREEING\22}, {(1 << 6), \22I_CLEAR\22}, {(1 << 7), \22I_SYNC\22}, {(1 << 11), \22I_DIRTY_TIME\22}, {(1 << 8), \22I_REFERENCED\22} ), __print_flags(REC->flags, \22|\22, {(1 << 0), \22I_DIRTY_SYNC\22}, {(1 << 1), \22I_DIRTY_DATASYNC\22}, {(1 << 2), \22I_DIRTY_PAGES\22}, {(1 << 3), \22I_NEW\22}, {(1 << 4), \22I_WILL_FREE\22}, {(1 << 5), \22I_FREEING\22}, {(1 << 6), \22I_CLEAR\22}, {(1 << 7), \22I_SYNC\22}, {(1 << 11), \22I_DIRTY_TIME\22}, {(1 << 8), \22I_REFERENCED\22} )\00", [166 x i8] zeroinitializer }, align 32
@event_writeback_mark_inode_dirty = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_dirty_inode_template, %union.anon.106 { ptr @__tracepoint_writeback_mark_inode_dirty }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_dirty_inode_template }, ptr @print_fmt_writeback_dirty_inode_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_mark_inode_dirty = internal global ptr @event_writeback_mark_inode_dirty, section "_ftrace_events", align 4
@event_writeback_dirty_inode_start = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_dirty_inode_template, %union.anon.106 { ptr @__tracepoint_writeback_dirty_inode_start }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_dirty_inode_template }, ptr @print_fmt_writeback_dirty_inode_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_dirty_inode_start = internal global ptr @event_writeback_dirty_inode_start, section "_ftrace_events", align 4
@event_writeback_dirty_inode = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_dirty_inode_template, %union.anon.106 { ptr @__tracepoint_writeback_dirty_inode }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_dirty_inode_template }, ptr @print_fmt_writeback_dirty_inode_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_dirty_inode = internal global ptr @event_writeback_dirty_inode, section "_ftrace_events", align 4
@trace_event_fields_inode_foreign_history = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.12, %union.anon.104 { %struct.anon.105 { ptr @.str.13, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.15, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.104 { %struct.anon.105 { ptr @.str.36, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_inode_foreign_history = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_inode_foreign_history, ptr @perf_trace_inode_foreign_history, ptr @trace_event_reg, ptr @trace_event_fields_inode_foreign_history, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_inode_foreign_history, i64 24), ptr getelementptr (i8, ptr @event_class_inode_foreign_history, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_inode_foreign_history = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_inode_foreign_history, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_inode_foreign_history = internal global { [128 x i8], [32 x i8] } { [128 x i8] c"\22bdi %s: ino=%lu cgroup_ino=%lu history=0x%x\22, REC->name, (unsigned long)REC->ino, (unsigned long)REC->cgroup_ino, REC->history\00", [32 x i8] zeroinitializer }, align 32
@event_inode_foreign_history = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_inode_foreign_history, %union.anon.106 { ptr @__tracepoint_inode_foreign_history }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_inode_foreign_history }, ptr @print_fmt_inode_foreign_history, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_inode_foreign_history = internal global ptr @event_inode_foreign_history, section "_ftrace_events", align 4
@trace_event_fields_inode_switch_wbs = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.12, %union.anon.104 { %struct.anon.105 { ptr @.str.13, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.15, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.38, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_inode_switch_wbs = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_inode_switch_wbs, ptr @perf_trace_inode_switch_wbs, ptr @trace_event_reg, ptr @trace_event_fields_inode_switch_wbs, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_inode_switch_wbs, i64 24), ptr getelementptr (i8, ptr @event_class_inode_switch_wbs, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_inode_switch_wbs = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_inode_switch_wbs, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_inode_switch_wbs = internal global { [164 x i8], [60 x i8] } { [164 x i8] c"\22bdi %s: ino=%lu old_cgroup_ino=%lu new_cgroup_ino=%lu\22, REC->name, (unsigned long)REC->ino, (unsigned long)REC->old_cgroup_ino, (unsigned long)REC->new_cgroup_ino\00", [60 x i8] zeroinitializer }, align 32
@event_inode_switch_wbs = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_inode_switch_wbs, %union.anon.106 { ptr @__tracepoint_inode_switch_wbs }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_inode_switch_wbs }, ptr @print_fmt_inode_switch_wbs, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_inode_switch_wbs = internal global ptr @event_inode_switch_wbs, section "_ftrace_events", align 4
@trace_event_fields_track_foreign_dirty = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.12, %union.anon.104 { %struct.anon.105 { ptr @.str.13, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.49, %union.anon.104 { %struct.anon.105 { ptr @.str.50, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.15, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.104 { %struct.anon.105 { ptr @.str.51, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_track_foreign_dirty = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_track_foreign_dirty, ptr @perf_trace_track_foreign_dirty, ptr @trace_event_reg, ptr @trace_event_fields_track_foreign_dirty, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_track_foreign_dirty, i64 24), ptr getelementptr (i8, ptr @event_class_track_foreign_dirty, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_track_foreign_dirty = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_track_foreign_dirty, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_track_foreign_dirty = internal global { [204 x i8], [52 x i8] } { [204 x i8] c"\22bdi %s[%llu]: ino=%lu memcg_id=%u cgroup_ino=%lu page_cgroup_ino=%lu\22, REC->name, REC->bdi_id, (unsigned long)REC->ino, REC->memcg_id, (unsigned long)REC->cgroup_ino, (unsigned long)REC->page_cgroup_ino\00", [52 x i8] zeroinitializer }, align 32
@event_track_foreign_dirty = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_track_foreign_dirty, %union.anon.106 { ptr @__tracepoint_track_foreign_dirty }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_track_foreign_dirty }, ptr @print_fmt_track_foreign_dirty, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_track_foreign_dirty = internal global ptr @event_track_foreign_dirty, section "_ftrace_events", align 4
@trace_event_fields_flush_foreign = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.12, %union.anon.104 { %struct.anon.105 { ptr @.str.13, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.104 { %struct.anon.105 { ptr @.str.54, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.104 { %struct.anon.105 { ptr @.str.55, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_flush_foreign = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_flush_foreign, ptr @perf_trace_flush_foreign, ptr @trace_event_reg, ptr @trace_event_fields_flush_foreign, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_flush_foreign, i64 24), ptr getelementptr (i8, ptr @event_class_flush_foreign, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_flush_foreign = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_flush_foreign, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_flush_foreign = internal global { [134 x i8], [58 x i8] } { [134 x i8] c"\22bdi %s: cgroup_ino=%lu frn_bdi_id=%u frn_memcg_id=%u\22, REC->name, (unsigned long)REC->cgroup_ino, REC->frn_bdi_id, REC->frn_memcg_id\00", [58 x i8] zeroinitializer }, align 32
@event_flush_foreign = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_flush_foreign, %union.anon.106 { ptr @__tracepoint_flush_foreign }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_flush_foreign }, ptr @print_fmt_flush_foreign, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_flush_foreign = internal global ptr @event_flush_foreign, section "_ftrace_events", align 4
@trace_event_fields_writeback_write_inode_template = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.12, %union.anon.104 { %struct.anon.105 { ptr @.str.13, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.15, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.58, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_writeback_write_inode_template = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_writeback_write_inode_template, ptr @perf_trace_writeback_write_inode_template, ptr @trace_event_reg, ptr @trace_event_fields_writeback_write_inode_template, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_writeback_write_inode_template, i64 24), ptr getelementptr (i8, ptr @event_class_writeback_write_inode_template, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_writeback_write_inode_template = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_writeback_write_inode_template, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_writeback_write_inode_template = internal global { [130 x i8], [62 x i8] } { [130 x i8] c"\22bdi %s: ino=%lu sync_mode=%d cgroup_ino=%lu\22, REC->name, (unsigned long)REC->ino, REC->sync_mode, (unsigned long)REC->cgroup_ino\00", [62 x i8] zeroinitializer }, align 32
@event_writeback_write_inode_start = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_write_inode_template, %union.anon.106 { ptr @__tracepoint_writeback_write_inode_start }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_write_inode_template }, ptr @print_fmt_writeback_write_inode_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_write_inode_start = internal global ptr @event_writeback_write_inode_start, section "_ftrace_events", align 4
@event_writeback_write_inode = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_write_inode_template, %union.anon.106 { ptr @__tracepoint_writeback_write_inode }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_write_inode_template }, ptr @print_fmt_writeback_write_inode_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_write_inode = internal global ptr @event_writeback_write_inode, section "_ftrace_events", align 4
@trace_event_fields_writeback_work_class = internal global { [10 x %struct.trace_event_fields], [48 x i8] } { [10 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.12, %union.anon.104 { %struct.anon.105 { ptr @.str.13, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.60, %union.anon.104 { %struct.anon.105 { ptr @.str.61, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.62, %union.anon.104 { %struct.anon.105 { ptr @.str.63, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.58, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.64, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.65, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.66, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.67, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_writeback_work_class = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_writeback_work_class, ptr @perf_trace_writeback_work_class, ptr @trace_event_reg, ptr @trace_event_fields_writeback_work_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_writeback_work_class, i64 24), ptr getelementptr (i8, ptr @event_class_writeback_work_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_writeback_work_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_writeback_work_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_writeback_work_class = internal global { [689 x i8], [175 x i8] } { [689 x i8] c"\22bdi %s: sb_dev %d:%d nr_pages=%ld sync_mode=%d kupdate=%d range_cyclic=%d background=%d reason=%s cgroup_ino=%lu\22, REC->name, ((unsigned int) ((REC->sb_dev) >> 20)), ((unsigned int) ((REC->sb_dev) & ((1U << 20) - 1))), REC->nr_pages, REC->sync_mode, REC->for_kupdate, REC->range_cyclic, REC->for_background, __print_symbolic(REC->reason, { WB_REASON_BACKGROUND, \22background\22 }, { WB_REASON_VMSCAN, \22vmscan\22 }, { WB_REASON_SYNC, \22sync\22 }, { WB_REASON_PERIODIC, \22periodic\22 }, { WB_REASON_LAPTOP_TIMER, \22laptop_timer\22 }, { WB_REASON_FS_FREE_SPACE, \22fs_free_space\22 }, { WB_REASON_FORKER_THREAD, \22forker_thread\22 }, { WB_REASON_FOREIGN_FLUSH, \22foreign_flush\22 }), (unsigned long)REC->cgroup_ino\00", [175 x i8] zeroinitializer }, align 32
@event_writeback_queue = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_work_class, %union.anon.106 { ptr @__tracepoint_writeback_queue }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_work_class }, ptr @print_fmt_writeback_work_class, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_queue = internal global ptr @event_writeback_queue, section "_ftrace_events", align 4
@event_writeback_exec = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_work_class, %union.anon.106 { ptr @__tracepoint_writeback_exec }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_work_class }, ptr @print_fmt_writeback_work_class, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_exec = internal global ptr @event_writeback_exec, section "_ftrace_events", align 4
@event_writeback_start = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_work_class, %union.anon.106 { ptr @__tracepoint_writeback_start }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_work_class }, ptr @print_fmt_writeback_work_class, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_start = internal global ptr @event_writeback_start, section "_ftrace_events", align 4
@event_writeback_written = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_work_class, %union.anon.106 { ptr @__tracepoint_writeback_written }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_work_class }, ptr @print_fmt_writeback_work_class, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_written = internal global ptr @event_writeback_written, section "_ftrace_events", align 4
@event_writeback_wait = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_work_class, %union.anon.106 { ptr @__tracepoint_writeback_wait }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_work_class }, ptr @print_fmt_writeback_work_class, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_wait = internal global ptr @event_writeback_wait, section "_ftrace_events", align 4
@trace_event_fields_writeback_pages_written = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.60, %union.anon.104 { %struct.anon.105 { ptr @.str.77, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_writeback_pages_written = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_writeback_pages_written, ptr @perf_trace_writeback_pages_written, ptr @trace_event_reg, ptr @trace_event_fields_writeback_pages_written, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_writeback_pages_written, i64 24), ptr getelementptr (i8, ptr @event_class_writeback_pages_written, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_writeback_pages_written = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_writeback_pages_written, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_writeback_pages_written = internal global { [18 x i8], [46 x i8] } { [18 x i8] c"\22%ld\22, REC->pages\00", [46 x i8] zeroinitializer }, align 32
@event_writeback_pages_written = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_pages_written, %union.anon.106 { ptr @__tracepoint_writeback_pages_written }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_pages_written }, ptr @print_fmt_writeback_pages_written, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_pages_written = internal global ptr @event_writeback_pages_written, section "_ftrace_events", align 4
@trace_event_fields_writeback_class = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.12, %union.anon.104 { %struct.anon.105 { ptr @.str.13, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_writeback_class = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_writeback_class, ptr @perf_trace_writeback_class, ptr @trace_event_reg, ptr @trace_event_fields_writeback_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_writeback_class, i64 24), ptr getelementptr (i8, ptr @event_class_writeback_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_writeback_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_writeback_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_writeback_class = internal global { [68 x i8], [60 x i8] } { [68 x i8] c"\22bdi %s: cgroup_ino=%lu\22, REC->name, (unsigned long)REC->cgroup_ino\00", [60 x i8] zeroinitializer }, align 32
@event_writeback_wake_background = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_class, %union.anon.106 { ptr @__tracepoint_writeback_wake_background }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_class }, ptr @print_fmt_writeback_class, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_wake_background = internal global ptr @event_writeback_wake_background, section "_ftrace_events", align 4
@trace_event_fields_writeback_bdi_register = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.12, %union.anon.104 { %struct.anon.105 { ptr @.str.13, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_writeback_bdi_register = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_writeback_bdi_register, ptr @perf_trace_writeback_bdi_register, ptr @trace_event_reg, ptr @trace_event_fields_writeback_bdi_register, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_writeback_bdi_register, i64 24), ptr getelementptr (i8, ptr @event_class_writeback_bdi_register, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_writeback_bdi_register = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_writeback_bdi_register, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_writeback_bdi_register = internal global { [20 x i8], [44 x i8] } { [20 x i8] c"\22bdi %s\22, REC->name\00", [44 x i8] zeroinitializer }, align 32
@event_writeback_bdi_register = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_bdi_register, %union.anon.106 { ptr @__tracepoint_writeback_bdi_register }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_bdi_register }, ptr @print_fmt_writeback_bdi_register, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_bdi_register = internal global ptr @event_writeback_bdi_register, section "_ftrace_events", align 4
@trace_event_fields_wbc_class = internal global { [12 x %struct.trace_event_fields], [64 x i8] } { [12 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.12, %union.anon.104 { %struct.anon.105 { ptr @.str.13, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.60, %union.anon.104 { %struct.anon.105 { ptr @.str.81, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.60, %union.anon.104 { %struct.anon.105 { ptr @.str.82, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.58, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.64, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.66, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.65, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.60, %union.anon.104 { %struct.anon.105 { ptr @.str.84, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.60, %union.anon.104 { %struct.anon.105 { ptr @.str.85, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [64 x i8] zeroinitializer }, align 32
@event_class_wbc_class = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_wbc_class, ptr @perf_trace_wbc_class, ptr @trace_event_reg, ptr @trace_event_fields_wbc_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_wbc_class, i64 24), ptr getelementptr (i8, ptr @event_class_wbc_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_wbc_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_wbc_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_wbc_class = internal global { [316 x i8], [68 x i8] } { [316 x i8] c"\22bdi %s: towrt=%ld skip=%ld mode=%d kupd=%d bgrd=%d reclm=%d cyclic=%d start=0x%lx end=0x%lx cgroup_ino=%lu\22, REC->name, REC->nr_to_write, REC->pages_skipped, REC->sync_mode, REC->for_kupdate, REC->for_background, REC->for_reclaim, REC->range_cyclic, REC->range_start, REC->range_end, (unsigned long)REC->cgroup_ino\00", [68 x i8] zeroinitializer }, align 32
@event_wbc_writepage = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_wbc_class, %union.anon.106 { ptr @__tracepoint_wbc_writepage }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_wbc_class }, ptr @print_fmt_wbc_class, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_wbc_writepage = internal global ptr @event_wbc_writepage, section "_ftrace_events", align 4
@trace_event_fields_writeback_queue_io = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.12, %union.anon.104 { %struct.anon.105 { ptr @.str.13, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.87, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.60, %union.anon.104 { %struct.anon.105 { ptr @.str.88, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.89, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.67, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_writeback_queue_io = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_writeback_queue_io, ptr @perf_trace_writeback_queue_io, ptr @trace_event_reg, ptr @trace_event_fields_writeback_queue_io, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_writeback_queue_io, i64 24), ptr getelementptr (i8, ptr @event_class_writeback_queue_io, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_writeback_queue_io = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_writeback_queue_io, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_writeback_queue_io = internal global { [490 x i8], [118 x i8] } { [490 x i8] c"\22bdi %s: older=%lu age=%ld enqueue=%d reason=%s cgroup_ino=%lu\22, REC->name, REC->older, REC->age, REC->moved, __print_symbolic(REC->reason, { WB_REASON_BACKGROUND, \22background\22 }, { WB_REASON_VMSCAN, \22vmscan\22 }, { WB_REASON_SYNC, \22sync\22 }, { WB_REASON_PERIODIC, \22periodic\22 }, { WB_REASON_LAPTOP_TIMER, \22laptop_timer\22 }, { WB_REASON_FS_FREE_SPACE, \22fs_free_space\22 }, { WB_REASON_FORKER_THREAD, \22forker_thread\22 }, { WB_REASON_FOREIGN_FLUSH, \22foreign_flush\22 }), (unsigned long)REC->cgroup_ino\00", [118 x i8] zeroinitializer }, align 32
@event_writeback_queue_io = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_queue_io, %union.anon.106 { ptr @__tracepoint_writeback_queue_io }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_queue_io }, ptr @print_fmt_writeback_queue_io, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_queue_io = internal global ptr @event_writeback_queue_io, section "_ftrace_events", align 4
@trace_event_fields_global_dirty_state = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.92, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.94, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.95, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.96, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.98, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_global_dirty_state = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_global_dirty_state, ptr @perf_trace_global_dirty_state, ptr @trace_event_reg, ptr @trace_event_fields_global_dirty_state, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_global_dirty_state, i64 24), ptr getelementptr (i8, ptr @event_class_global_dirty_state, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_global_dirty_state = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_global_dirty_state, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_global_dirty_state = internal global { [214 x i8], [42 x i8] } { [214 x i8] c"\22dirty=%lu writeback=%lu bg_thresh=%lu thresh=%lu limit=%lu dirtied=%lu written=%lu\22, REC->nr_dirty, REC->nr_writeback, REC->background_thresh, REC->dirty_thresh, REC->dirty_limit, REC->nr_dirtied, REC->nr_written\00", [42 x i8] zeroinitializer }, align 32
@event_global_dirty_state = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_global_dirty_state, %union.anon.106 { ptr @__tracepoint_global_dirty_state }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_global_dirty_state }, ptr @print_fmt_global_dirty_state, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_global_dirty_state = internal global ptr @event_global_dirty_state, section "_ftrace_events", align 4
@trace_event_fields_bdi_dirty_ratelimit = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.12, %union.anon.104 { %struct.anon.105 { ptr @.str.100, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.101, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.102, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.103, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.104, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.105, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.106, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_bdi_dirty_ratelimit = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_bdi_dirty_ratelimit, ptr @perf_trace_bdi_dirty_ratelimit, ptr @trace_event_reg, ptr @trace_event_fields_bdi_dirty_ratelimit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_bdi_dirty_ratelimit, i64 24), ptr getelementptr (i8, ptr @event_class_bdi_dirty_ratelimit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_bdi_dirty_ratelimit = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_bdi_dirty_ratelimit, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_bdi_dirty_ratelimit = internal global { [302 x i8], [82 x i8] } { [302 x i8] c"\22bdi %s: write_bw=%lu awrite_bw=%lu dirty_rate=%lu dirty_ratelimit=%lu task_ratelimit=%lu balanced_dirty_ratelimit=%lu cgroup_ino=%lu\22, REC->bdi, REC->write_bw, REC->avg_write_bw, REC->dirty_rate, REC->dirty_ratelimit, REC->task_ratelimit, REC->balanced_dirty_ratelimit, (unsigned long)REC->cgroup_ino\00", [82 x i8] zeroinitializer }, align 32
@event_bdi_dirty_ratelimit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_bdi_dirty_ratelimit, %union.anon.106 { ptr @__tracepoint_bdi_dirty_ratelimit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_bdi_dirty_ratelimit }, ptr @print_fmt_bdi_dirty_ratelimit, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_bdi_dirty_ratelimit = internal global ptr @event_bdi_dirty_ratelimit, section "_ftrace_events", align 4
@trace_event_fields_balance_dirty_pages = internal global { [16 x %struct.trace_event_fields], [96 x i8] } { [16 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.12, %union.anon.104 { %struct.anon.105 { ptr @.str.100, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.108, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.109, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.111, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.112, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.104, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.105, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.104 { %struct.anon.105 { ptr @.str.113, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.104 { %struct.anon.105 { ptr @.str.114, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.115, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.60, %union.anon.104 { %struct.anon.105 { ptr @.str.116, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.117, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.60, %union.anon.104 { %struct.anon.105 { ptr @.str.118, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [96 x i8] zeroinitializer }, align 32
@event_class_balance_dirty_pages = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_balance_dirty_pages, ptr @perf_trace_balance_dirty_pages, ptr @trace_event_reg, ptr @trace_event_fields_balance_dirty_pages, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_balance_dirty_pages, i64 24), ptr getelementptr (i8, ptr @event_class_balance_dirty_pages, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_balance_dirty_pages = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_balance_dirty_pages, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_balance_dirty_pages = internal global { [441 x i8], [103 x i8] } { [441 x i8] c"\22bdi %s: limit=%lu setpoint=%lu dirty=%lu bdi_setpoint=%lu bdi_dirty=%lu dirty_ratelimit=%lu task_ratelimit=%lu dirtied=%u dirtied_pause=%u paused=%lu pause=%ld period=%lu think=%ld cgroup_ino=%lu\22, REC->bdi, REC->limit, REC->setpoint, REC->dirty, REC->bdi_setpoint, REC->bdi_dirty, REC->dirty_ratelimit, REC->task_ratelimit, REC->dirtied, REC->dirtied_pause, REC->paused, REC->pause, REC->period, REC->think, (unsigned long)REC->cgroup_ino\00", [103 x i8] zeroinitializer }, align 32
@event_balance_dirty_pages = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_balance_dirty_pages, %union.anon.106 { ptr @__tracepoint_balance_dirty_pages }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_balance_dirty_pages }, ptr @print_fmt_balance_dirty_pages, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_balance_dirty_pages = internal global ptr @event_balance_dirty_pages, section "_ftrace_events", align 4
@trace_event_fields_writeback_sb_inodes_requeue = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.12, %union.anon.104 { %struct.anon.105 { ptr @.str.13, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.15, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.19, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.120, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_writeback_sb_inodes_requeue = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_writeback_sb_inodes_requeue, ptr @perf_trace_writeback_sb_inodes_requeue, ptr @trace_event_reg, ptr @trace_event_fields_writeback_sb_inodes_requeue, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_writeback_sb_inodes_requeue, i64 24), ptr getelementptr (i8, ptr @event_class_writeback_sb_inodes_requeue, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_writeback_sb_inodes_requeue = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_writeback_sb_inodes_requeue, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_writeback_sb_inodes_requeue = internal global { [488 x i8], [120 x i8] } { [488 x i8] c"\22bdi %s: ino=%lu state=%s dirtied_when=%lu age=%lu cgroup_ino=%lu\22, REC->name, (unsigned long)REC->ino, __print_flags(REC->state, \22|\22, {(1 << 0), \22I_DIRTY_SYNC\22}, {(1 << 1), \22I_DIRTY_DATASYNC\22}, {(1 << 2), \22I_DIRTY_PAGES\22}, {(1 << 3), \22I_NEW\22}, {(1 << 4), \22I_WILL_FREE\22}, {(1 << 5), \22I_FREEING\22}, {(1 << 6), \22I_CLEAR\22}, {(1 << 7), \22I_SYNC\22}, {(1 << 11), \22I_DIRTY_TIME\22}, {(1 << 8), \22I_REFERENCED\22} ), REC->dirtied_when, (jiffies - REC->dirtied_when) / 100, (unsigned long)REC->cgroup_ino\00", [120 x i8] zeroinitializer }, align 32
@event_writeback_sb_inodes_requeue = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_sb_inodes_requeue, %union.anon.106 { ptr @__tracepoint_writeback_sb_inodes_requeue }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_sb_inodes_requeue }, ptr @print_fmt_writeback_sb_inodes_requeue, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_sb_inodes_requeue = internal global ptr @event_writeback_sb_inodes_requeue, section "_ftrace_events", align 4
@trace_event_fields_writeback_congest_waited_template = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.35, %union.anon.104 { %struct.anon.105 { ptr @.str.122, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.104 { %struct.anon.105 { ptr @.str.123, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_writeback_congest_waited_template = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_writeback_congest_waited_template, ptr @perf_trace_writeback_congest_waited_template, ptr @trace_event_reg, ptr @trace_event_fields_writeback_congest_waited_template, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_writeback_congest_waited_template, i64 24), ptr getelementptr (i8, ptr @event_class_writeback_congest_waited_template, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_writeback_congest_waited_template = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_writeback_congest_waited_template, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_writeback_congest_waited_template = internal global { [72 x i8], [56 x i8] } { [72 x i8] c"\22usec_timeout=%u usec_delayed=%u\22, REC->usec_timeout, REC->usec_delayed\00", [56 x i8] zeroinitializer }, align 32
@event_writeback_congestion_wait = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_congest_waited_template, %union.anon.106 { ptr @__tracepoint_writeback_congestion_wait }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_congest_waited_template }, ptr @print_fmt_writeback_congest_waited_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_congestion_wait = internal global ptr @event_writeback_congestion_wait, section "_ftrace_events", align 4
@trace_event_fields_writeback_single_inode_template = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.12, %union.anon.104 { %struct.anon.105 { ptr @.str.13, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.15, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.19, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.120, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.125, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.60, %union.anon.104 { %struct.anon.105 { ptr @.str.81, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.126, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_writeback_single_inode_template = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_writeback_single_inode_template, ptr @perf_trace_writeback_single_inode_template, ptr @trace_event_reg, ptr @trace_event_fields_writeback_single_inode_template, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_writeback_single_inode_template, i64 24), ptr getelementptr (i8, ptr @event_class_writeback_single_inode_template, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_writeback_single_inode_template = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_writeback_single_inode_template, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_writeback_single_inode_template = internal global { [573 x i8], [131 x i8] } { [573 x i8] c"\22bdi %s: ino=%lu state=%s dirtied_when=%lu age=%lu index=%lu to_write=%ld wrote=%lu cgroup_ino=%lu\22, REC->name, (unsigned long)REC->ino, __print_flags(REC->state, \22|\22, {(1 << 0), \22I_DIRTY_SYNC\22}, {(1 << 1), \22I_DIRTY_DATASYNC\22}, {(1 << 2), \22I_DIRTY_PAGES\22}, {(1 << 3), \22I_NEW\22}, {(1 << 4), \22I_WILL_FREE\22}, {(1 << 5), \22I_FREEING\22}, {(1 << 6), \22I_CLEAR\22}, {(1 << 7), \22I_SYNC\22}, {(1 << 11), \22I_DIRTY_TIME\22}, {(1 << 8), \22I_REFERENCED\22} ), REC->dirtied_when, (jiffies - REC->dirtied_when) / 100, REC->writeback_index, REC->nr_to_write, REC->wrote, (unsigned long)REC->cgroup_ino\00", [131 x i8] zeroinitializer }, align 32
@event_writeback_single_inode_start = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_single_inode_template, %union.anon.106 { ptr @__tracepoint_writeback_single_inode_start }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_single_inode_template }, ptr @print_fmt_writeback_single_inode_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_single_inode_start = internal global ptr @event_writeback_single_inode_start, section "_ftrace_events", align 4
@event_writeback_single_inode = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_single_inode_template, %union.anon.106 { ptr @__tracepoint_writeback_single_inode }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_single_inode_template }, ptr @print_fmt_writeback_single_inode_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_single_inode = internal global ptr @event_writeback_single_inode, section "_ftrace_events", align 4
@trace_event_fields_writeback_inode_template = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.62, %union.anon.104 { %struct.anon.105 { ptr @.str.128, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.104 { %struct.anon.105 { ptr @.str.15, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.19, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.129, %union.anon.104 { %struct.anon.105 { ptr @.str.130, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.104 { %struct.anon.105 { ptr @.str.120, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_writeback_inode_template = internal global %struct.trace_event_class { ptr @str__writeback__trace_system_name, ptr @trace_event_raw_event_writeback_inode_template, ptr @perf_trace_writeback_inode_template, ptr @trace_event_reg, ptr @trace_event_fields_writeback_inode_template, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_writeback_inode_template, i64 24), ptr getelementptr (i8, ptr @event_class_writeback_inode_template, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_writeback_inode_template = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_writeback_inode_template, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_writeback_inode_template = internal global { [489 x i8], [119 x i8] } { [489 x i8] c"\22dev %d,%d ino %lu dirtied %lu state %s mode 0%o\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long)REC->ino, REC->dirtied_when, __print_flags(REC->state, \22|\22, {(1 << 0), \22I_DIRTY_SYNC\22}, {(1 << 1), \22I_DIRTY_DATASYNC\22}, {(1 << 2), \22I_DIRTY_PAGES\22}, {(1 << 3), \22I_NEW\22}, {(1 << 4), \22I_WILL_FREE\22}, {(1 << 5), \22I_FREEING\22}, {(1 << 6), \22I_CLEAR\22}, {(1 << 7), \22I_SYNC\22}, {(1 << 11), \22I_DIRTY_TIME\22}, {(1 << 8), \22I_REFERENCED\22} ), REC->mode\00", [119 x i8] zeroinitializer }, align 32
@event_writeback_lazytime = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_inode_template, %union.anon.106 { ptr @__tracepoint_writeback_lazytime }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_inode_template }, ptr @print_fmt_writeback_inode_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_lazytime = internal global ptr @event_writeback_lazytime, section "_ftrace_events", align 4
@event_writeback_lazytime_iput = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_inode_template, %union.anon.106 { ptr @__tracepoint_writeback_lazytime_iput }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_inode_template }, ptr @print_fmt_writeback_inode_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_lazytime_iput = internal global ptr @event_writeback_lazytime_iput, section "_ftrace_events", align 4
@event_writeback_dirty_inode_enqueue = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_inode_template, %union.anon.106 { ptr @__tracepoint_writeback_dirty_inode_enqueue }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_inode_template }, ptr @print_fmt_writeback_inode_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_writeback_dirty_inode_enqueue = internal global ptr @event_writeback_dirty_inode_enqueue, section "_ftrace_events", align 4
@event_sb_mark_inode_writeback = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_inode_template, %union.anon.106 { ptr @__tracepoint_sb_mark_inode_writeback }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_inode_template }, ptr @print_fmt_writeback_inode_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_sb_mark_inode_writeback = internal global ptr @event_sb_mark_inode_writeback, section "_ftrace_events", align 4
@event_sb_clear_inode_writeback = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_writeback_inode_template, %union.anon.106 { ptr @__tracepoint_sb_clear_inode_writeback }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_writeback_inode_template }, ptr @print_fmt_writeback_inode_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_sb_clear_inode_writeback = internal global ptr @event_sb_clear_inode_writeback, section "_ftrace_events", align 4
@__bpf_trace_tp_map_writeback_dirty_folio = internal global %union.anon.108 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_dirty_folio, ptr @__bpf_trace_writeback_folio_template, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_folio_wait_writeback = internal global %union.anon.109 { %struct.bpf_raw_event_map { ptr @__tracepoint_folio_wait_writeback, ptr @__bpf_trace_writeback_folio_template, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_mark_inode_dirty = internal global %union.anon.110 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_mark_inode_dirty, ptr @__bpf_trace_writeback_dirty_inode_template, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_dirty_inode_start = internal global %union.anon.111 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_dirty_inode_start, ptr @__bpf_trace_writeback_dirty_inode_template, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_dirty_inode = internal global %union.anon.112 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_dirty_inode, ptr @__bpf_trace_writeback_dirty_inode_template, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_inode_foreign_history = internal global %union.anon.113 { %struct.bpf_raw_event_map { ptr @__tracepoint_inode_foreign_history, ptr @__bpf_trace_inode_foreign_history, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_inode_switch_wbs = internal global %union.anon.114 { %struct.bpf_raw_event_map { ptr @__tracepoint_inode_switch_wbs, ptr @__bpf_trace_inode_switch_wbs, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_track_foreign_dirty = internal global %union.anon.115 { %struct.bpf_raw_event_map { ptr @__tracepoint_track_foreign_dirty, ptr @__bpf_trace_track_foreign_dirty, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_flush_foreign = internal global %union.anon.116 { %struct.bpf_raw_event_map { ptr @__tracepoint_flush_foreign, ptr @__bpf_trace_flush_foreign, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_write_inode_start = internal global %union.anon.117 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_write_inode_start, ptr @__bpf_trace_writeback_write_inode_template, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_write_inode = internal global %union.anon.118 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_write_inode, ptr @__bpf_trace_writeback_write_inode_template, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_queue = internal global %union.anon.119 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_queue, ptr @__bpf_trace_writeback_work_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_exec = internal global %union.anon.120 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_exec, ptr @__bpf_trace_writeback_work_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_start = internal global %union.anon.121 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_start, ptr @__bpf_trace_writeback_work_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_written = internal global %union.anon.122 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_written, ptr @__bpf_trace_writeback_work_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_wait = internal global %union.anon.123 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_wait, ptr @__bpf_trace_writeback_work_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_pages_written = internal global %union.anon.124 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_pages_written, ptr @__bpf_trace_writeback_pages_written, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_wake_background = internal global %union.anon.125 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_wake_background, ptr @__bpf_trace_writeback_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_bdi_register = internal global %union.anon.126 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_bdi_register, ptr @__bpf_trace_writeback_bdi_register, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_wbc_writepage = internal global %union.anon.127 { %struct.bpf_raw_event_map { ptr @__tracepoint_wbc_writepage, ptr @__bpf_trace_wbc_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_queue_io = internal global %union.anon.128 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_queue_io, ptr @__bpf_trace_writeback_queue_io, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_global_dirty_state = internal global %union.anon.129 { %struct.bpf_raw_event_map { ptr @__tracepoint_global_dirty_state, ptr @__bpf_trace_global_dirty_state, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_bdi_dirty_ratelimit = internal global %union.anon.130 { %struct.bpf_raw_event_map { ptr @__tracepoint_bdi_dirty_ratelimit, ptr @__bpf_trace_bdi_dirty_ratelimit, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_balance_dirty_pages = internal global %union.anon.131 { %struct.bpf_raw_event_map { ptr @__tracepoint_balance_dirty_pages, ptr @__bpf_trace_balance_dirty_pages, i32 12, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_sb_inodes_requeue = internal global %union.anon.132 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_sb_inodes_requeue, ptr @__bpf_trace_writeback_sb_inodes_requeue, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_congestion_wait = internal global %union.anon.133 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_congestion_wait, ptr @__bpf_trace_writeback_congest_waited_template, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_single_inode_start = internal global %union.anon.134 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_single_inode_start, ptr @__bpf_trace_writeback_single_inode_template, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_single_inode = internal global %union.anon.135 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_single_inode, ptr @__bpf_trace_writeback_single_inode_template, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_lazytime = internal global %union.anon.136 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_lazytime, ptr @__bpf_trace_writeback_inode_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_lazytime_iput = internal global %union.anon.137 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_lazytime_iput, ptr @__bpf_trace_writeback_inode_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_writeback_dirty_inode_enqueue = internal global %union.anon.138 { %struct.bpf_raw_event_map { ptr @__tracepoint_writeback_dirty_inode_enqueue, ptr @__bpf_trace_writeback_inode_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_sb_mark_inode_writeback = internal global %union.anon.139 { %struct.bpf_raw_event_map { ptr @__tracepoint_sb_mark_inode_writeback, ptr @__bpf_trace_writeback_inode_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_sb_clear_inode_writeback = internal global %union.anon.140 { %struct.bpf_raw_event_map { ptr @__tracepoint_sb_clear_inode_writeback, ptr @__bpf_trace_writeback_inode_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__kstrtab___tracepoint_wbc_writepage = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_wbc_writepage = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_wbc_writepage = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_wbc_writepage to i32), ptr @__kstrtab___tracepoint_wbc_writepage, ptr @__kstrtabns___tracepoint_wbc_writepage }, section "___ksymtab_gpl+__tracepoint_wbc_writepage", align 4
@__kstrtab___traceiter_wbc_writepage = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_wbc_writepage = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_wbc_writepage = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_wbc_writepage to i32), ptr @__kstrtab___traceiter_wbc_writepage, ptr @__kstrtabns___traceiter_wbc_writepage }, section "___ksymtab_gpl+__traceiter_wbc_writepage", align 4
@__kstrtab___SCK__tp_func_wbc_writepage = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_wbc_writepage = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_wbc_writepage = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_wbc_writepage to i32), ptr @__kstrtab___SCK__tp_func_wbc_writepage, ptr @__kstrtabns___SCK__tp_func_wbc_writepage }, section "___ksymtab_gpl+__SCK__tp_func_wbc_writepage", align 4
@.str.8 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"fs/fs-writeback.c\00", [46 x i8] zeroinitializer }, align 32
@__kstrtab___inode_attach_wb = external dso_local constant [0 x i8], align 1
@__kstrtabns___inode_attach_wb = external dso_local constant [0 x i8], align 1
@__ksymtab___inode_attach_wb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__inode_attach_wb to i32), ptr @__kstrtab___inode_attach_wb, ptr @__kstrtabns___inode_attach_wb }, section "___ksymtab_gpl+__inode_attach_wb", align 4
@isw_nr_in_flight = internal global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@cleanup_offline_cgwb.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.9 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"(work_completion)(&(&isw->work)->work)\00", [57 x i8] zeroinitializer }, align 32
@isw_wq = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@__kstrtab_wbc_attach_and_unlock_inode = external dso_local constant [0 x i8], align 1
@__kstrtabns_wbc_attach_and_unlock_inode = external dso_local constant [0 x i8], align 1
@__ksymtab_wbc_attach_and_unlock_inode = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @wbc_attach_and_unlock_inode to i32), ptr @__kstrtab_wbc_attach_and_unlock_inode, ptr @__kstrtabns_wbc_attach_and_unlock_inode }, section "___ksymtab_gpl+wbc_attach_and_unlock_inode", align 4
@__kstrtab_wbc_detach_inode = external dso_local constant [0 x i8], align 1
@__kstrtabns_wbc_detach_inode = external dso_local constant [0 x i8], align 1
@__ksymtab_wbc_detach_inode = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @wbc_detach_inode to i32), ptr @__kstrtab_wbc_detach_inode, ptr @__kstrtabns_wbc_detach_inode }, section "___ksymtab_gpl+wbc_detach_inode", align 4
@__kstrtab_wbc_account_cgroup_owner = external dso_local constant [0 x i8], align 1
@__kstrtabns_wbc_account_cgroup_owner = external dso_local constant [0 x i8], align 1
@__ksymtab_wbc_account_cgroup_owner = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @wbc_account_cgroup_owner to i32), ptr @__kstrtab_wbc_account_cgroup_owner, ptr @__kstrtabns_wbc_account_cgroup_owner }, section "___ksymtab_gpl+wbc_account_cgroup_owner", align 4
@__kstrtab_inode_congested = external dso_local constant [0 x i8], align 1
@__kstrtabns_inode_congested = external dso_local constant [0 x i8], align 1
@__ksymtab_inode_congested = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @inode_congested to i32), ptr @__kstrtab_inode_congested, ptr @__kstrtabns_inode_congested }, section "___ksymtab_gpl+inode_congested", align 4
@memory_cgrp_subsys = external dso_local global %struct.cgroup_subsys, align 4
@__initcall__kmod_fs_writeback__489_1156_cgroup_writeback_init5 = internal global ptr @cgroup_writeback_init, section ".initcall5.init", align 4
@__kstrtab_inode_io_list_del = external dso_local constant [0 x i8], align 1
@__kstrtabns_inode_io_list_del = external dso_local constant [0 x i8], align 1
@__ksymtab_inode_io_list_del = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @inode_io_list_del to i32), ptr @__kstrtab_inode_io_list_del, ptr @__kstrtabns_inode_io_list_del }, section "___ksymtab+inode_io_list_del", align 4
@.str.10 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"flush-%s\00", [23 x i8] zeroinitializer }, align 32
@dirty_writeback_interval = external dso_local local_unnamed_addr global i32, align 4
@wakeup_flusher_threads.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.11 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RCU-list traversed in non-reader section!\00", [54 x i8] zeroinitializer }, align 32
@bdi_list = external dso_local global %struct.list_head, align 4
@__initcall__kmod_fs_writeback__502_2352_start_dirtytime_writeback6 = internal global ptr @start_dirtytime_writeback, section ".initcall6.init", align 4
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@dirtytime_work = internal global { %struct.delayed_work, [60 x i8] } { %struct.delayed_work { %struct.work_struct { %struct.atomic_t { i32 -48 }, %struct.list_head { ptr getelementptr (i8, ptr @dirtytime_work, i64 4), ptr getelementptr (i8, ptr @dirtytime_work, i64 4) }, ptr @wakeup_dirtytime_writeback, %struct.lockdep_map { ptr @dirtytime_work, [2 x ptr] zeroinitializer, ptr @.str.144, i8 0, i8 0, i8 0, i32 0, i32 0 } }, %struct.timer_list { %struct.hlist_node { ptr inttoptr (i32 768 to ptr), ptr null }, i32 0, ptr @delayed_work_timer_fn, i32 2097152, %struct.lockdep_map { ptr @.str.145, [2 x ptr] zeroinitializer, ptr @.str.145, i8 0, i8 0, i8 0, i32 0, i32 0 } }, ptr null, i32 0 }, [60 x i8] zeroinitializer }, align 32
@__mark_inode_dirty.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@__kstrtab___mark_inode_dirty = external dso_local constant [0 x i8], align 1
@__kstrtabns___mark_inode_dirty = external dso_local constant [0 x i8], align 1
@__ksymtab___mark_inode_dirty = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__mark_inode_dirty to i32), ptr @__kstrtab___mark_inode_dirty, ptr @__kstrtabns___mark_inode_dirty }, section "___ksymtab+__mark_inode_dirty", align 4
@__kstrtab_writeback_inodes_sb_nr = external dso_local constant [0 x i8], align 1
@__kstrtabns_writeback_inodes_sb_nr = external dso_local constant [0 x i8], align 1
@__ksymtab_writeback_inodes_sb_nr = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @writeback_inodes_sb_nr to i32), ptr @__kstrtab_writeback_inodes_sb_nr, ptr @__kstrtabns_writeback_inodes_sb_nr }, section "___ksymtab+writeback_inodes_sb_nr", align 4
@__kstrtab_writeback_inodes_sb = external dso_local constant [0 x i8], align 1
@__kstrtabns_writeback_inodes_sb = external dso_local constant [0 x i8], align 1
@__ksymtab_writeback_inodes_sb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @writeback_inodes_sb to i32), ptr @__kstrtab_writeback_inodes_sb, ptr @__kstrtabns_writeback_inodes_sb }, section "___ksymtab+writeback_inodes_sb", align 4
@__kstrtab_try_to_writeback_inodes_sb = external dso_local constant [0 x i8], align 1
@__kstrtabns_try_to_writeback_inodes_sb = external dso_local constant [0 x i8], align 1
@__ksymtab_try_to_writeback_inodes_sb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @try_to_writeback_inodes_sb to i32), ptr @__kstrtab_try_to_writeback_inodes_sb, ptr @__kstrtabns_try_to_writeback_inodes_sb }, section "___ksymtab+try_to_writeback_inodes_sb", align 4
@noop_backing_dev_info = external dso_local global %struct.backing_dev_info, align 8
@__kstrtab_sync_inodes_sb = external dso_local constant [0 x i8], align 1
@__kstrtabns_sync_inodes_sb = external dso_local constant [0 x i8], align 1
@__ksymtab_sync_inodes_sb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sync_inodes_sb to i32), ptr @__kstrtab_sync_inodes_sb, ptr @__kstrtabns_sync_inodes_sb }, section "___ksymtab+sync_inodes_sb", align 4
@__kstrtab_write_inode_now = external dso_local constant [0 x i8], align 1
@__kstrtabns_write_inode_now = external dso_local constant [0 x i8], align 1
@__ksymtab_write_inode_now = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @write_inode_now to i32), ptr @__kstrtab_write_inode_now, ptr @__kstrtabns_write_inode_now }, section "___ksymtab+write_inode_now", align 4
@__kstrtab_sync_inode_metadata = external dso_local constant [0 x i8], align 1
@__kstrtabns_sync_inode_metadata = external dso_local constant [0 x i8], align 1
@__ksymtab_sync_inode_metadata = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sync_inode_metadata to i32), ptr @__kstrtab_sync_inode_metadata, ptr @__kstrtabns_sync_inode_metadata }, section "___ksymtab+sync_inode_metadata", align 4
@.str.12 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"char[32]\00", [23 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"name\00", [27 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"ino_t\00", [26 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ino\00", [28 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned long\00", [18 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"index\00", [26 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"bdi %s: ino=%lu index=%lu\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"state\00", [26 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"flags\00", [26 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"bdi %s: ino=%lu state=%s flags=%s\0A\00", [61 x i8] zeroinitializer }, align 32
@trace_raw_output_writeback_dirty_inode_template.__flags = internal constant { [11 x %struct.trace_print_flags], [40 x i8] } { [11 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.22 }, %struct.trace_print_flags { i32 2, ptr @.str.23 }, %struct.trace_print_flags { i32 4, ptr @.str.24 }, %struct.trace_print_flags { i32 8, ptr @.str.25 }, %struct.trace_print_flags { i32 16, ptr @.str.26 }, %struct.trace_print_flags { i32 32, ptr @.str.27 }, %struct.trace_print_flags { i32 64, ptr @.str.28 }, %struct.trace_print_flags { i32 128, ptr @.str.29 }, %struct.trace_print_flags { i32 2048, ptr @.str.30 }, %struct.trace_print_flags { i32 256, ptr @.str.31 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"I_DIRTY_SYNC\00", [19 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"I_DIRTY_DATASYNC\00", [47 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"I_DIRTY_PAGES\00", [18 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"I_NEW\00", [26 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"I_WILL_FREE\00", [20 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"I_FREEING\00", [22 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"I_CLEAR\00", [24 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"I_SYNC\00", [25 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"I_DIRTY_TIME\00", [19 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"I_REFERENCED\00", [19 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"|\00", [30 x i8] zeroinitializer }, align 32
@trace_raw_output_writeback_dirty_inode_template.__flags.33 = internal constant { [11 x %struct.trace_print_flags], [40 x i8] } { [11 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.22 }, %struct.trace_print_flags { i32 2, ptr @.str.23 }, %struct.trace_print_flags { i32 4, ptr @.str.24 }, %struct.trace_print_flags { i32 8, ptr @.str.25 }, %struct.trace_print_flags { i32 16, ptr @.str.26 }, %struct.trace_print_flags { i32 32, ptr @.str.27 }, %struct.trace_print_flags { i32 64, ptr @.str.28 }, %struct.trace_print_flags { i32 128, ptr @.str.29 }, %struct.trace_print_flags { i32 2048, ptr @.str.30 }, %struct.trace_print_flags { i32 256, ptr @.str.31 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"cgroup_ino\00", [21 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"history\00", [24 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"bdi %s: ino=%lu cgroup_ino=%lu history=0x%x\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"old_cgroup_ino\00", [17 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"new_cgroup_ino\00", [17 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"bdi %s: ino=%lu old_cgroup_ino=%lu new_cgroup_ino=%lu\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"VM_BUG_ON_PAGE(PageTail(&folio->page))\00", [57 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"VM_BUG_ON_FOLIO(folio->memcg_data & MEMCG_DATA_OBJCGS)\00", [41 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"VM_BUG_ON_FOLIO(folio_test_slab(folio))\00", [56 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"VM_BUG_ON_PAGE(PageTail(page))\00", [33 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"u64\00", [28 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"bdi_id\00", [25 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"memcg_id\00", [23 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"page_cgroup_ino\00", [16 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"bdi %s[%llu]: ino=%lu memcg_id=%u cgroup_ino=%lu page_cgroup_ino=%lu\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"frn_bdi_id\00", [21 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"frn_memcg_id\00", [19 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"bdi %s: cgroup_ino=%lu frn_bdi_id=%u frn_memcg_id=%u\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"sync_mode\00", [22 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"bdi %s: ino=%lu sync_mode=%d cgroup_ino=%lu\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"long\00", [27 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"nr_pages\00", [23 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"dev_t\00", [26 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"sb_dev\00", [25 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"for_kupdate\00", [20 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"range_cyclic\00", [19 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"for_background\00", [17 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"reason\00", [25 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [114 x i8], [46 x i8] } { [114 x i8] c"bdi %s: sb_dev %d:%d nr_pages=%ld sync_mode=%d kupdate=%d range_cyclic=%d background=%d reason=%s cgroup_ino=%lu\0A\00", [46 x i8] zeroinitializer }, align 32
@trace_raw_output_writeback_work_class.symbols = internal constant { [9 x %struct.trace_print_flags], [56 x i8] } { [9 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.69 }, %struct.trace_print_flags { i32 1, ptr @.str.70 }, %struct.trace_print_flags { i32 2, ptr @.str.71 }, %struct.trace_print_flags { i32 3, ptr @.str.72 }, %struct.trace_print_flags { i32 4, ptr @.str.73 }, %struct.trace_print_flags { i32 5, ptr @.str.74 }, %struct.trace_print_flags { i32 6, ptr @.str.75 }, %struct.trace_print_flags { i32 7, ptr @.str.76 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"background\00", [21 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"vmscan\00", [25 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"sync\00", [27 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"periodic\00", [23 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"laptop_timer\00", [19 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"fs_free_space\00", [18 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"forker_thread\00", [18 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"foreign_flush\00", [18 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"pages\00", [26 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"%ld\0A\00", [27 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"bdi %s: cgroup_ino=%lu\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"bdi %s\0A\00", [24 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"nr_to_write\00", [20 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"pages_skipped\00", [18 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"for_reclaim\00", [20 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"range_start\00", [20 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"range_end\00", [22 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [108 x i8], [52 x i8] } { [108 x i8] c"bdi %s: towrt=%ld skip=%ld mode=%d kupd=%d bgrd=%d reclm=%d cyclic=%d start=0x%lx end=0x%lx cgroup_ino=%lu\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"older\00", [26 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"age\00", [28 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"moved\00", [26 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"bdi %s: older=%lu age=%ld enqueue=%d reason=%s cgroup_ino=%lu\0A\00", [33 x i8] zeroinitializer }, align 32
@trace_raw_output_writeback_queue_io.symbols = internal constant { [9 x %struct.trace_print_flags], [56 x i8] } { [9 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.69 }, %struct.trace_print_flags { i32 1, ptr @.str.70 }, %struct.trace_print_flags { i32 2, ptr @.str.71 }, %struct.trace_print_flags { i32 3, ptr @.str.72 }, %struct.trace_print_flags { i32 4, ptr @.str.73 }, %struct.trace_print_flags { i32 5, ptr @.str.74 }, %struct.trace_print_flags { i32 6, ptr @.str.75 }, %struct.trace_print_flags { i32 7, ptr @.str.76 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@global_wb_domain = external dso_local local_unnamed_addr global %struct.wb_domain, align 8
@vm_node_stat = external dso_local global [40 x %struct.atomic_t], align 4
@.str.92 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"nr_dirty\00", [23 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"nr_writeback\00", [19 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"background_thresh\00", [46 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"dirty_thresh\00", [19 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"dirty_limit\00", [20 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"nr_dirtied\00", [21 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"nr_written\00", [21 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [84 x i8], [44 x i8] } { [84 x i8] c"dirty=%lu writeback=%lu bg_thresh=%lu thresh=%lu limit=%lu dirtied=%lu written=%lu\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"bdi\00", [28 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"write_bw\00", [23 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"avg_write_bw\00", [19 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"dirty_rate\00", [21 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"dirty_ratelimit\00", [16 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"task_ratelimit\00", [17 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"balanced_dirty_ratelimit\00", [39 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [134 x i8], [58 x i8] } { [134 x i8] c"bdi %s: write_bw=%lu awrite_bw=%lu dirty_rate=%lu dirty_ratelimit=%lu task_ratelimit=%lu balanced_dirty_ratelimit=%lu cgroup_ino=%lu\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"limit\00", [26 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"setpoint\00", [23 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"dirty\00", [26 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"bdi_setpoint\00", [19 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"bdi_dirty\00", [22 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"dirtied\00", [24 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"dirtied_pause\00", [18 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"paused\00", [25 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"pause\00", [26 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"period\00", [25 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"think\00", [26 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [197 x i8], [59 x i8] } { [197 x i8] c"bdi %s: limit=%lu setpoint=%lu dirty=%lu bdi_setpoint=%lu bdi_dirty=%lu dirty_ratelimit=%lu task_ratelimit=%lu dirtied=%u dirtied_pause=%u paused=%lu pause=%ld period=%lu think=%ld cgroup_ino=%lu\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"dirtied_when\00", [19 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"bdi %s: ino=%lu state=%s dirtied_when=%lu age=%lu cgroup_ino=%lu\0A\00", [62 x i8] zeroinitializer }, align 32
@trace_raw_output_writeback_sb_inodes_requeue.__flags = internal constant { [11 x %struct.trace_print_flags], [40 x i8] } { [11 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.22 }, %struct.trace_print_flags { i32 2, ptr @.str.23 }, %struct.trace_print_flags { i32 4, ptr @.str.24 }, %struct.trace_print_flags { i32 8, ptr @.str.25 }, %struct.trace_print_flags { i32 16, ptr @.str.26 }, %struct.trace_print_flags { i32 32, ptr @.str.27 }, %struct.trace_print_flags { i32 64, ptr @.str.28 }, %struct.trace_print_flags { i32 128, ptr @.str.29 }, %struct.trace_print_flags { i32 2048, ptr @.str.30 }, %struct.trace_print_flags { i32 256, ptr @.str.31 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"usec_timeout\00", [19 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"usec_delayed\00", [19 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"usec_timeout=%u usec_delayed=%u\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"writeback_index\00", [16 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"wrote\00", [26 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [99 x i8], [61 x i8] } { [99 x i8] c"bdi %s: ino=%lu state=%s dirtied_when=%lu age=%lu index=%lu to_write=%ld wrote=%lu cgroup_ino=%lu\0A\00", [61 x i8] zeroinitializer }, align 32
@trace_raw_output_writeback_single_inode_template.__flags = internal constant { [11 x %struct.trace_print_flags], [40 x i8] } { [11 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.22 }, %struct.trace_print_flags { i32 2, ptr @.str.23 }, %struct.trace_print_flags { i32 4, ptr @.str.24 }, %struct.trace_print_flags { i32 8, ptr @.str.25 }, %struct.trace_print_flags { i32 16, ptr @.str.26 }, %struct.trace_print_flags { i32 32, ptr @.str.27 }, %struct.trace_print_flags { i32 64, ptr @.str.28 }, %struct.trace_print_flags { i32 128, ptr @.str.29 }, %struct.trace_print_flags { i32 2048, ptr @.str.30 }, %struct.trace_print_flags { i32 256, ptr @.str.31 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"dev\00", [28 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"__u16\00", [26 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"mode\00", [27 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"dev %d,%d ino %lu dirtied %lu state %s mode 0%o\0A\00", [47 x i8] zeroinitializer }, align 32
@trace_raw_output_writeback_inode_template.__flags = internal constant { [11 x %struct.trace_print_flags], [40 x i8] } { [11 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.22 }, %struct.trace_print_flags { i32 2, ptr @.str.23 }, %struct.trace_print_flags { i32 4, ptr @.str.24 }, %struct.trace_print_flags { i32 8, ptr @.str.25 }, %struct.trace_print_flags { i32 16, ptr @.str.26 }, %struct.trace_print_flags { i32 32, ptr @.str.27 }, %struct.trace_print_flags { i32 64, ptr @.str.28 }, %struct.trace_print_flags { i32 128, ptr @.str.29 }, %struct.trace_print_flags { i32 2048, ptr @.str.30 }, %struct.trace_print_flags { i32 256, ptr @.str.31 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@memory_cgrp_subsys_on_dfl_key = external dso_local global %struct.static_key_true, align 4
@io_cgrp_subsys_on_dfl_key = external dso_local global %struct.static_key_true, align 4
@task_css.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@cgroup_mutex = external dso_local global %struct.mutex, align 4
@css_set_lock = external dso_local global %struct.spinlock, align 4
@.str.132 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"include/linux/cgroup.h\00", [41 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@wb_put_many.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.134 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"include/linux/backing-dev-defs.h\00", [63 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@inode_switch_wbs_work_fn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@inode_do_switch_wbs.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.135 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"include/trace/events/writeback.h\00", [63 x i8] zeroinitializer }, align 32
@trace_inode_switch_wbs.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.136 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(page))\00", [61 x i8] zeroinitializer }, align 32
@xa_entry.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.138 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"include/linux/xarray.h\00", [41 x i8] zeroinitializer }, align 32
@inode_to_wb.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@.str.139 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/linux/backing-dev.h\00", [36 x i8] zeroinitializer }, align 32
@inode_switch_wbs.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@trace_inode_foreign_history.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.140 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.142 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@bdi_wq = external dso_local local_unnamed_addr global ptr, align 4
@trace_writeback_queue.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.143 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"inode_switch_wbs\00", [47 x i8] zeroinitializer }, align 32
@trace_writeback_wake_background.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@wb_io_lists_depopulated.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@trace_sb_mark_inode_writeback.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_sb_clear_inode_writeback.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_writeback_exec.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@dirty_expire_interval = external dso_local local_unnamed_addr global i32, align 4
@trace_writeback_start.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@blockdev_superblock = external dso_local local_unnamed_addr global ptr, align 4
@wb_io_lists_populated.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@trace_writeback_queue_io.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_writeback_sb_inodes_requeue.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_writeback_single_inode_start.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_writeback_lazytime.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_writeback_write_inode_start.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_writeback_write_inode.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_writeback_single_inode.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_writeback_written.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_writeback_wait.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__const.wb_check_background_flush.work = private unnamed_addr constant { i32, ptr, i32, i8, [3 x i8], i32, %struct.list_head, ptr } { i32 2147483647, ptr null, i32 0, i8 48, [3 x i8] zeroinitializer, i32 0, %struct.list_head zeroinitializer, ptr null }, align 4
@trace_writeback_pages_written.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__wakeup_flusher_threads_bdi.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.144 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"(dirtytime_work).work\00", [42 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"fs/fs-writeback.c:2329\00", [41 x i8] zeroinitializer }, align 32
@wakeup_dirtytime_writeback.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@wakeup_dirtytime_writeback.__warned.146 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_writeback_mark_inode_dirty.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_writeback_dirty_inode_start.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_writeback_dirty_inode.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_writeback_dirty_inode_enqueue.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@___asan_gen_.147 = private unnamed_addr constant [26 x i8] c"dirtytime_expire_interval\00", align 1
@___asan_gen_.149 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.886, i32 68, i32 14 }
@___asan_gen_.150 = private unnamed_addr constant [34 x i8] c"str__writeback__trace_system_name\00", align 1
@___asan_gen_.151 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.152 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.151, i32 36, i32 1 }
@___asan_gen_.176 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 42, i32 1 }
@___asan_gen_.177 = private unnamed_addr constant [44 x i8] c"trace_event_fields_writeback_folio_template\00", align 1
@___asan_gen_.180 = private unnamed_addr constant [48 x i8] c"trace_event_type_funcs_writeback_folio_template\00", align 1
@___asan_gen_.183 = private unnamed_addr constant [35 x i8] c"print_fmt_writeback_folio_template\00", align 1
@___asan_gen_.186 = private unnamed_addr constant [28 x i8] c"event_writeback_dirty_folio\00", align 1
@___asan_gen_.188 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 82, i32 1 }
@___asan_gen_.189 = private unnamed_addr constant [27 x i8] c"event_folio_wait_writeback\00", align 1
@___asan_gen_.191 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 89, i32 1 }
@___asan_gen_.192 = private unnamed_addr constant [50 x i8] c"trace_event_fields_writeback_dirty_inode_template\00", align 1
@___asan_gen_.195 = private unnamed_addr constant [54 x i8] c"trace_event_type_funcs_writeback_dirty_inode_template\00", align 1
@___asan_gen_.198 = private unnamed_addr constant [41 x i8] c"print_fmt_writeback_dirty_inode_template\00", align 1
@___asan_gen_.201 = private unnamed_addr constant [33 x i8] c"event_writeback_mark_inode_dirty\00", align 1
@___asan_gen_.203 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 127, i32 1 }
@___asan_gen_.204 = private unnamed_addr constant [34 x i8] c"event_writeback_dirty_inode_start\00", align 1
@___asan_gen_.206 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 134, i32 1 }
@___asan_gen_.207 = private unnamed_addr constant [28 x i8] c"event_writeback_dirty_inode\00", align 1
@___asan_gen_.209 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 141, i32 1 }
@___asan_gen_.210 = private unnamed_addr constant [41 x i8] c"trace_event_fields_inode_foreign_history\00", align 1
@___asan_gen_.213 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_inode_foreign_history\00", align 1
@___asan_gen_.216 = private unnamed_addr constant [32 x i8] c"print_fmt_inode_foreign_history\00", align 1
@___asan_gen_.219 = private unnamed_addr constant [28 x i8] c"event_inode_foreign_history\00", align 1
@___asan_gen_.222 = private unnamed_addr constant [36 x i8] c"trace_event_fields_inode_switch_wbs\00", align 1
@___asan_gen_.225 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_inode_switch_wbs\00", align 1
@___asan_gen_.228 = private unnamed_addr constant [27 x i8] c"print_fmt_inode_switch_wbs\00", align 1
@___asan_gen_.231 = private unnamed_addr constant [23 x i8] c"event_inode_switch_wbs\00", align 1
@___asan_gen_.234 = private unnamed_addr constant [39 x i8] c"trace_event_fields_track_foreign_dirty\00", align 1
@___asan_gen_.237 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_track_foreign_dirty\00", align 1
@___asan_gen_.240 = private unnamed_addr constant [30 x i8] c"print_fmt_track_foreign_dirty\00", align 1
@___asan_gen_.243 = private unnamed_addr constant [26 x i8] c"event_track_foreign_dirty\00", align 1
@___asan_gen_.246 = private unnamed_addr constant [33 x i8] c"trace_event_fields_flush_foreign\00", align 1
@___asan_gen_.249 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_flush_foreign\00", align 1
@___asan_gen_.252 = private unnamed_addr constant [24 x i8] c"print_fmt_flush_foreign\00", align 1
@___asan_gen_.255 = private unnamed_addr constant [20 x i8] c"event_flush_foreign\00", align 1
@___asan_gen_.258 = private unnamed_addr constant [50 x i8] c"trace_event_fields_writeback_write_inode_template\00", align 1
@___asan_gen_.261 = private unnamed_addr constant [54 x i8] c"trace_event_type_funcs_writeback_write_inode_template\00", align 1
@___asan_gen_.264 = private unnamed_addr constant [41 x i8] c"print_fmt_writeback_write_inode_template\00", align 1
@___asan_gen_.267 = private unnamed_addr constant [34 x i8] c"event_writeback_write_inode_start\00", align 1
@___asan_gen_.269 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 333, i32 1 }
@___asan_gen_.270 = private unnamed_addr constant [28 x i8] c"event_writeback_write_inode\00", align 1
@___asan_gen_.272 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 340, i32 1 }
@___asan_gen_.273 = private unnamed_addr constant [40 x i8] c"trace_event_fields_writeback_work_class\00", align 1
@___asan_gen_.276 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_writeback_work_class\00", align 1
@___asan_gen_.279 = private unnamed_addr constant [31 x i8] c"print_fmt_writeback_work_class\00", align 1
@___asan_gen_.282 = private unnamed_addr constant [22 x i8] c"event_writeback_queue\00", align 1
@___asan_gen_.284 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 389, i32 1 }
@___asan_gen_.285 = private unnamed_addr constant [21 x i8] c"event_writeback_exec\00", align 1
@___asan_gen_.287 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 390, i32 1 }
@___asan_gen_.288 = private unnamed_addr constant [22 x i8] c"event_writeback_start\00", align 1
@___asan_gen_.290 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 391, i32 1 }
@___asan_gen_.291 = private unnamed_addr constant [24 x i8] c"event_writeback_written\00", align 1
@___asan_gen_.293 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 392, i32 1 }
@___asan_gen_.294 = private unnamed_addr constant [21 x i8] c"event_writeback_wait\00", align 1
@___asan_gen_.296 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 393, i32 1 }
@___asan_gen_.297 = private unnamed_addr constant [43 x i8] c"trace_event_fields_writeback_pages_written\00", align 1
@___asan_gen_.300 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_writeback_pages_written\00", align 1
@___asan_gen_.303 = private unnamed_addr constant [34 x i8] c"print_fmt_writeback_pages_written\00", align 1
@___asan_gen_.306 = private unnamed_addr constant [30 x i8] c"event_writeback_pages_written\00", align 1
@___asan_gen_.309 = private unnamed_addr constant [35 x i8] c"trace_event_fields_writeback_class\00", align 1
@___asan_gen_.312 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_writeback_class\00", align 1
@___asan_gen_.315 = private unnamed_addr constant [26 x i8] c"print_fmt_writeback_class\00", align 1
@___asan_gen_.318 = private unnamed_addr constant [32 x i8] c"event_writeback_wake_background\00", align 1
@___asan_gen_.320 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 428, i32 1 }
@___asan_gen_.321 = private unnamed_addr constant [42 x i8] c"trace_event_fields_writeback_bdi_register\00", align 1
@___asan_gen_.324 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_writeback_bdi_register\00", align 1
@___asan_gen_.327 = private unnamed_addr constant [33 x i8] c"print_fmt_writeback_bdi_register\00", align 1
@___asan_gen_.330 = private unnamed_addr constant [29 x i8] c"event_writeback_bdi_register\00", align 1
@___asan_gen_.333 = private unnamed_addr constant [29 x i8] c"trace_event_fields_wbc_class\00", align 1
@___asan_gen_.336 = private unnamed_addr constant [33 x i8] c"trace_event_type_funcs_wbc_class\00", align 1
@___asan_gen_.339 = private unnamed_addr constant [20 x i8] c"print_fmt_wbc_class\00", align 1
@___asan_gen_.342 = private unnamed_addr constant [20 x i8] c"event_wbc_writepage\00", align 1
@___asan_gen_.344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 496, i32 1 }
@___asan_gen_.345 = private unnamed_addr constant [38 x i8] c"trace_event_fields_writeback_queue_io\00", align 1
@___asan_gen_.348 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_writeback_queue_io\00", align 1
@___asan_gen_.351 = private unnamed_addr constant [29 x i8] c"print_fmt_writeback_queue_io\00", align 1
@___asan_gen_.354 = private unnamed_addr constant [25 x i8] c"event_writeback_queue_io\00", align 1
@___asan_gen_.357 = private unnamed_addr constant [38 x i8] c"trace_event_fields_global_dirty_state\00", align 1
@___asan_gen_.360 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_global_dirty_state\00", align 1
@___asan_gen_.363 = private unnamed_addr constant [29 x i8] c"print_fmt_global_dirty_state\00", align 1
@___asan_gen_.366 = private unnamed_addr constant [25 x i8] c"event_global_dirty_state\00", align 1
@___asan_gen_.369 = private unnamed_addr constant [39 x i8] c"trace_event_fields_bdi_dirty_ratelimit\00", align 1
@___asan_gen_.372 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_bdi_dirty_ratelimit\00", align 1
@___asan_gen_.375 = private unnamed_addr constant [30 x i8] c"print_fmt_bdi_dirty_ratelimit\00", align 1
@___asan_gen_.378 = private unnamed_addr constant [26 x i8] c"event_bdi_dirty_ratelimit\00", align 1
@___asan_gen_.381 = private unnamed_addr constant [39 x i8] c"trace_event_fields_balance_dirty_pages\00", align 1
@___asan_gen_.384 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_balance_dirty_pages\00", align 1
@___asan_gen_.387 = private unnamed_addr constant [30 x i8] c"print_fmt_balance_dirty_pages\00", align 1
@___asan_gen_.390 = private unnamed_addr constant [26 x i8] c"event_balance_dirty_pages\00", align 1
@___asan_gen_.393 = private unnamed_addr constant [47 x i8] c"trace_event_fields_writeback_sb_inodes_requeue\00", align 1
@___asan_gen_.396 = private unnamed_addr constant [51 x i8] c"trace_event_type_funcs_writeback_sb_inodes_requeue\00", align 1
@___asan_gen_.399 = private unnamed_addr constant [38 x i8] c"print_fmt_writeback_sb_inodes_requeue\00", align 1
@___asan_gen_.402 = private unnamed_addr constant [34 x i8] c"event_writeback_sb_inodes_requeue\00", align 1
@___asan_gen_.405 = private unnamed_addr constant [53 x i8] c"trace_event_fields_writeback_congest_waited_template\00", align 1
@___asan_gen_.408 = private unnamed_addr constant [57 x i8] c"trace_event_type_funcs_writeback_congest_waited_template\00", align 1
@___asan_gen_.411 = private unnamed_addr constant [44 x i8] c"print_fmt_writeback_congest_waited_template\00", align 1
@___asan_gen_.414 = private unnamed_addr constant [32 x i8] c"event_writeback_congestion_wait\00", align 1
@___asan_gen_.416 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 759, i32 1 }
@___asan_gen_.417 = private unnamed_addr constant [51 x i8] c"trace_event_fields_writeback_single_inode_template\00", align 1
@___asan_gen_.420 = private unnamed_addr constant [55 x i8] c"trace_event_type_funcs_writeback_single_inode_template\00", align 1
@___asan_gen_.423 = private unnamed_addr constant [42 x i8] c"print_fmt_writeback_single_inode_template\00", align 1
@___asan_gen_.426 = private unnamed_addr constant [35 x i8] c"event_writeback_single_inode_start\00", align 1
@___asan_gen_.428 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 812, i32 1 }
@___asan_gen_.429 = private unnamed_addr constant [29 x i8] c"event_writeback_single_inode\00", align 1
@___asan_gen_.431 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 819, i32 1 }
@___asan_gen_.432 = private unnamed_addr constant [44 x i8] c"trace_event_fields_writeback_inode_template\00", align 1
@___asan_gen_.435 = private unnamed_addr constant [48 x i8] c"trace_event_type_funcs_writeback_inode_template\00", align 1
@___asan_gen_.438 = private unnamed_addr constant [35 x i8] c"print_fmt_writeback_inode_template\00", align 1
@___asan_gen_.441 = private unnamed_addr constant [25 x i8] c"event_writeback_lazytime\00", align 1
@___asan_gen_.443 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 853, i32 1 }
@___asan_gen_.444 = private unnamed_addr constant [30 x i8] c"event_writeback_lazytime_iput\00", align 1
@___asan_gen_.446 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 859, i32 1 }
@___asan_gen_.447 = private unnamed_addr constant [36 x i8] c"event_writeback_dirty_inode_enqueue\00", align 1
@___asan_gen_.449 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 865, i32 1 }
@___asan_gen_.450 = private unnamed_addr constant [30 x i8] c"event_sb_mark_inode_writeback\00", align 1
@___asan_gen_.452 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 876, i32 1 }
@___asan_gen_.453 = private unnamed_addr constant [31 x i8] c"event_sb_clear_inode_writeback\00", align 1
@___asan_gen_.455 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 881, i32 1 }
@___asan_gen_.458 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.886, i32 190, i32 2 }
@___asan_gen_.459 = private unnamed_addr constant [17 x i8] c"isw_nr_in_flight\00", align 1
@___asan_gen_.461 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.886, i32 235, i32 17 }
@___asan_gen_.467 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.886, i32 674, i32 2 }
@___asan_gen_.468 = private unnamed_addr constant [7 x i8] c"isw_wq\00", align 1
@___asan_gen_.470 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.886, i32 236, i32 33 }
@___asan_gen_.473 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.886, i32 2236, i32 18 }
@___asan_gen_.476 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.886, i32 2308, i32 2 }
@___asan_gen_.477 = private unnamed_addr constant [15 x i8] c"dirtytime_work\00", align 1
@___asan_gen_.500 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 55, i32 1 }
@___asan_gen_.548 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 96, i32 1 }
@___asan_gen_.560 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 179, i32 1 }
@___asan_gen_.572 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.577, i32 537, i32 2 }
@___asan_gen_.575 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.577, i32 538, i32 2 }
@___asan_gen_.577 = private unnamed_addr constant [30 x i8] c"../include/linux/memcontrol.h\00", align 1
@___asan_gen_.578 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.577, i32 417, i32 2 }
@___asan_gen_.581 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 260, i32 2 }
@___asan_gen_.596 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 237, i32 1 }
@___asan_gen_.605 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 274, i32 1 }
@___asan_gen_.614 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 304, i32 1 }
@___asan_gen_.668 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 347, i32 1 }
@___asan_gen_.674 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 395, i32 1 }
@___asan_gen_.677 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 407, i32 1 }
@___asan_gen_.680 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 430, i32 1 }
@___asan_gen_.698 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 444, i32 1 }
@___asan_gen_.711 = private unnamed_addr constant [8 x i8] c"symbols\00", align 1
@___asan_gen_.713 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 498, i32 1 }
@___asan_gen_.737 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 530, i32 1 }
@___asan_gen_.761 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 575, i32 1 }
@___asan_gen_.797 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 621, i32 1 }
@___asan_gen_.806 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 706, i32 1 }
@___asan_gen_.815 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 738, i32 1 }
@___asan_gen_.827 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 766, i32 1 }
@___asan_gen_.840 = private unnamed_addr constant [8 x i8] c"__flags\00", align 1
@___asan_gen_.842 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 826, i32 1 }
@___asan_gen_.847 = private unnamed_addr constant [26 x i8] c"../include/linux/cgroup.h\00", align 1
@___asan_gen_.848 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.847, i32 494, i32 9 }
@___asan_gen_.850 = private unnamed_addr constant [36 x i8] c"../include/linux/backing-dev-defs.h\00", align 1
@___asan_gen_.851 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.850, i32 253, i32 6 }
@___asan_gen_.853 = private unnamed_addr constant [36 x i8] c"../include/trace/events/writeback.h\00", align 1
@___asan_gen_.854 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.853, i32 208, i32 1 }
@___asan_gen_.856 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.857 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.856, i32 108, i32 2 }
@___asan_gen_.859 = private unnamed_addr constant [30 x i8] c"../include/linux/page-flags.h\00", align 1
@___asan_gen_.860 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 698, i32 1 }
@___asan_gen_.862 = private unnamed_addr constant [26 x i8] c"../include/linux/xarray.h\00", align 1
@___asan_gen_.863 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.862, i32 1182, i32 9 }
@___asan_gen_.865 = private unnamed_addr constant [31 x i8] c"../include/linux/backing-dev.h\00", align 1
@___asan_gen_.866 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.865, i32 269, i32 2 }
@___asan_gen_.867 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.869 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.886, i32 602, i32 2 }
@___asan_gen_.875 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 695, i32 2 }
@___asan_gen_.877 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.878 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 723, i32 2 }
@___asan_gen_.881 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.886, i32 1151, i32 27 }
@___asan_gen_.885 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.886 = private constant [21 x i8] c"../fs/fs-writeback.c\00", align 1
@___asan_gen_.887 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.886, i32 2329, i32 8 }
@llvm.compiler.used = appending global [433 x ptr] [ptr @TRACE_SYSTEM_WB_REASON_BACKGROUND, ptr @TRACE_SYSTEM_WB_REASON_FOREIGN_FLUSH, ptr @TRACE_SYSTEM_WB_REASON_FORKER_THREAD, ptr @TRACE_SYSTEM_WB_REASON_FS_FREE_SPACE, ptr @TRACE_SYSTEM_WB_REASON_LAPTOP_TIMER, ptr @TRACE_SYSTEM_WB_REASON_PERIODIC, ptr @TRACE_SYSTEM_WB_REASON_SYNC, ptr @TRACE_SYSTEM_WB_REASON_VMSCAN, ptr @__TRACE_SYSTEM_WB_REASON_BACKGROUND, ptr @__TRACE_SYSTEM_WB_REASON_FOREIGN_FLUSH, ptr @__TRACE_SYSTEM_WB_REASON_FORKER_THREAD, ptr @__TRACE_SYSTEM_WB_REASON_FS_FREE_SPACE, ptr @__TRACE_SYSTEM_WB_REASON_LAPTOP_TIMER, ptr @__TRACE_SYSTEM_WB_REASON_PERIODIC, ptr @__TRACE_SYSTEM_WB_REASON_SYNC, ptr @__TRACE_SYSTEM_WB_REASON_VMSCAN, ptr @__bpf_trace_tp_map_balance_dirty_pages, ptr @__bpf_trace_tp_map_bdi_dirty_ratelimit, ptr @__bpf_trace_tp_map_flush_foreign, ptr @__bpf_trace_tp_map_folio_wait_writeback, ptr @__bpf_trace_tp_map_global_dirty_state, ptr @__bpf_trace_tp_map_inode_foreign_history, ptr @__bpf_trace_tp_map_inode_switch_wbs, ptr @__bpf_trace_tp_map_sb_clear_inode_writeback, ptr @__bpf_trace_tp_map_sb_mark_inode_writeback, ptr @__bpf_trace_tp_map_track_foreign_dirty, ptr @__bpf_trace_tp_map_wbc_writepage, ptr @__bpf_trace_tp_map_writeback_bdi_register, ptr @__bpf_trace_tp_map_writeback_congestion_wait, ptr @__bpf_trace_tp_map_writeback_dirty_folio, ptr @__bpf_trace_tp_map_writeback_dirty_inode, ptr @__bpf_trace_tp_map_writeback_dirty_inode_enqueue, ptr @__bpf_trace_tp_map_writeback_dirty_inode_start, ptr @__bpf_trace_tp_map_writeback_exec, ptr @__bpf_trace_tp_map_writeback_lazytime, ptr @__bpf_trace_tp_map_writeback_lazytime_iput, ptr @__bpf_trace_tp_map_writeback_mark_inode_dirty, ptr @__bpf_trace_tp_map_writeback_pages_written, ptr @__bpf_trace_tp_map_writeback_queue, ptr @__bpf_trace_tp_map_writeback_queue_io, ptr @__bpf_trace_tp_map_writeback_sb_inodes_requeue, ptr @__bpf_trace_tp_map_writeback_single_inode, ptr @__bpf_trace_tp_map_writeback_single_inode_start, ptr @__bpf_trace_tp_map_writeback_start, ptr @__bpf_trace_tp_map_writeback_wait, ptr @__bpf_trace_tp_map_writeback_wake_background, ptr @__bpf_trace_tp_map_writeback_write_inode, ptr @__bpf_trace_tp_map_writeback_write_inode_start, ptr @__bpf_trace_tp_map_writeback_written, ptr @__event_balance_dirty_pages, ptr @__event_bdi_dirty_ratelimit, ptr @__event_flush_foreign, ptr @__event_folio_wait_writeback, ptr @__event_global_dirty_state, ptr @__event_inode_foreign_history, ptr @__event_inode_switch_wbs, ptr @__event_sb_clear_inode_writeback, ptr @__event_sb_mark_inode_writeback, ptr @__event_track_foreign_dirty, ptr @__event_wbc_writepage, ptr @__event_writeback_bdi_register, ptr @__event_writeback_congestion_wait, ptr @__event_writeback_dirty_folio, ptr @__event_writeback_dirty_inode, ptr @__event_writeback_dirty_inode_enqueue, ptr @__event_writeback_dirty_inode_start, ptr @__event_writeback_exec, ptr @__event_writeback_lazytime, ptr @__event_writeback_lazytime_iput, ptr @__event_writeback_mark_inode_dirty, ptr @__event_writeback_pages_written, ptr @__event_writeback_queue, ptr @__event_writeback_queue_io, ptr @__event_writeback_sb_inodes_requeue, ptr @__event_writeback_single_inode, ptr @__event_writeback_single_inode_start, ptr @__event_writeback_start, ptr @__event_writeback_wait, ptr @__event_writeback_wake_background, ptr @__event_writeback_write_inode, ptr @__event_writeback_write_inode_start, ptr @__event_writeback_written, ptr @__initcall__kmod_fs_writeback__489_1156_cgroup_writeback_init5, ptr @__initcall__kmod_fs_writeback__502_2352_start_dirtytime_writeback6, ptr @__ksymtab___SCK__tp_func_wbc_writepage, ptr @__ksymtab___inode_attach_wb, ptr @__ksymtab___mark_inode_dirty, ptr @__ksymtab___traceiter_wbc_writepage, ptr @__ksymtab___tracepoint_wbc_writepage, ptr @__ksymtab_inode_congested, ptr @__ksymtab_inode_io_list_del, ptr @__ksymtab_sync_inode_metadata, ptr @__ksymtab_sync_inodes_sb, ptr @__ksymtab_try_to_writeback_inodes_sb, ptr @__ksymtab_wbc_account_cgroup_owner, ptr @__ksymtab_wbc_attach_and_unlock_inode, ptr @__ksymtab_wbc_detach_inode, ptr @__ksymtab_write_inode_now, ptr @__ksymtab_writeback_inodes_sb, ptr @__ksymtab_writeback_inodes_sb_nr, ptr @__tracepoint_balance_dirty_pages, ptr @__tracepoint_bdi_dirty_ratelimit, ptr @__tracepoint_flush_foreign, ptr @__tracepoint_folio_wait_writeback, ptr @__tracepoint_global_dirty_state, ptr @__tracepoint_inode_foreign_history, ptr @__tracepoint_inode_switch_wbs, ptr @__tracepoint_ptr_balance_dirty_pages, ptr @__tracepoint_ptr_bdi_dirty_ratelimit, ptr @__tracepoint_ptr_flush_foreign, ptr @__tracepoint_ptr_folio_wait_writeback, ptr @__tracepoint_ptr_global_dirty_state, ptr @__tracepoint_ptr_inode_foreign_history, ptr @__tracepoint_ptr_inode_switch_wbs, ptr @__tracepoint_ptr_sb_clear_inode_writeback, ptr @__tracepoint_ptr_sb_mark_inode_writeback, ptr @__tracepoint_ptr_track_foreign_dirty, ptr @__tracepoint_ptr_wbc_writepage, ptr @__tracepoint_ptr_writeback_bdi_register, ptr @__tracepoint_ptr_writeback_congestion_wait, ptr @__tracepoint_ptr_writeback_dirty_folio, ptr @__tracepoint_ptr_writeback_dirty_inode, ptr @__tracepoint_ptr_writeback_dirty_inode_enqueue, ptr @__tracepoint_ptr_writeback_dirty_inode_start, ptr @__tracepoint_ptr_writeback_exec, ptr @__tracepoint_ptr_writeback_lazytime, ptr @__tracepoint_ptr_writeback_lazytime_iput, ptr @__tracepoint_ptr_writeback_mark_inode_dirty, ptr @__tracepoint_ptr_writeback_pages_written, ptr @__tracepoint_ptr_writeback_queue, ptr @__tracepoint_ptr_writeback_queue_io, ptr @__tracepoint_ptr_writeback_sb_inodes_requeue, ptr @__tracepoint_ptr_writeback_single_inode, ptr @__tracepoint_ptr_writeback_single_inode_start, ptr @__tracepoint_ptr_writeback_start, ptr @__tracepoint_ptr_writeback_wait, ptr @__tracepoint_ptr_writeback_wake_background, ptr @__tracepoint_ptr_writeback_write_inode, ptr @__tracepoint_ptr_writeback_write_inode_start, ptr @__tracepoint_ptr_writeback_written, ptr @__tracepoint_sb_clear_inode_writeback, ptr @__tracepoint_sb_mark_inode_writeback, ptr @__tracepoint_track_foreign_dirty, ptr @__tracepoint_wbc_writepage, ptr @__tracepoint_writeback_bdi_register, ptr @__tracepoint_writeback_congestion_wait, ptr @__tracepoint_writeback_dirty_folio, ptr @__tracepoint_writeback_dirty_inode, ptr @__tracepoint_writeback_dirty_inode_enqueue, ptr @__tracepoint_writeback_dirty_inode_start, ptr @__tracepoint_writeback_exec, ptr @__tracepoint_writeback_lazytime, ptr @__tracepoint_writeback_lazytime_iput, ptr @__tracepoint_writeback_mark_inode_dirty, ptr @__tracepoint_writeback_pages_written, ptr @__tracepoint_writeback_queue, ptr @__tracepoint_writeback_queue_io, ptr @__tracepoint_writeback_sb_inodes_requeue, ptr @__tracepoint_writeback_single_inode, ptr @__tracepoint_writeback_single_inode_start, ptr @__tracepoint_writeback_start, ptr @__tracepoint_writeback_wait, ptr @__tracepoint_writeback_wake_background, ptr @__tracepoint_writeback_write_inode, ptr @__tracepoint_writeback_write_inode_start, ptr @__tracepoint_writeback_written, ptr @event_balance_dirty_pages, ptr @event_bdi_dirty_ratelimit, ptr @event_class_balance_dirty_pages, ptr @event_class_bdi_dirty_ratelimit, ptr @event_class_flush_foreign, ptr @event_class_global_dirty_state, ptr @event_class_inode_foreign_history, ptr @event_class_inode_switch_wbs, ptr @event_class_track_foreign_dirty, ptr @event_class_wbc_class, ptr @event_class_writeback_bdi_register, ptr @event_class_writeback_class, ptr @event_class_writeback_congest_waited_template, ptr @event_class_writeback_dirty_inode_template, ptr @event_class_writeback_folio_template, ptr @event_class_writeback_inode_template, ptr @event_class_writeback_pages_written, ptr @event_class_writeback_queue_io, ptr @event_class_writeback_sb_inodes_requeue, ptr @event_class_writeback_single_inode_template, ptr @event_class_writeback_work_class, ptr @event_class_writeback_write_inode_template, ptr @event_flush_foreign, ptr @event_folio_wait_writeback, ptr @event_global_dirty_state, ptr @event_inode_foreign_history, ptr @event_inode_switch_wbs, ptr @event_sb_clear_inode_writeback, ptr @event_sb_mark_inode_writeback, ptr @event_track_foreign_dirty, ptr @event_wbc_writepage, ptr @event_writeback_bdi_register, ptr @event_writeback_congestion_wait, ptr @event_writeback_dirty_folio, ptr @event_writeback_dirty_inode, ptr @event_writeback_dirty_inode_enqueue, ptr @event_writeback_dirty_inode_start, ptr @event_writeback_exec, ptr @event_writeback_lazytime, ptr @event_writeback_lazytime_iput, ptr @event_writeback_mark_inode_dirty, ptr @event_writeback_pages_written, ptr @event_writeback_queue, ptr @event_writeback_queue_io, ptr @event_writeback_sb_inodes_requeue, ptr @event_writeback_single_inode, ptr @event_writeback_single_inode_start, ptr @event_writeback_start, ptr @event_writeback_wait, ptr @event_writeback_wake_background, ptr @event_writeback_write_inode, ptr @event_writeback_write_inode_start, ptr @event_writeback_written, ptr @dirtytime_expire_interval, ptr @str__writeback__trace_system_name, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @trace_event_fields_writeback_folio_template, ptr @trace_event_type_funcs_writeback_folio_template, ptr @print_fmt_writeback_folio_template, ptr @trace_event_fields_writeback_dirty_inode_template, ptr @trace_event_type_funcs_writeback_dirty_inode_template, ptr @print_fmt_writeback_dirty_inode_template, ptr @trace_event_fields_inode_foreign_history, ptr @trace_event_type_funcs_inode_foreign_history, ptr @print_fmt_inode_foreign_history, ptr @trace_event_fields_inode_switch_wbs, ptr @trace_event_type_funcs_inode_switch_wbs, ptr @print_fmt_inode_switch_wbs, ptr @trace_event_fields_track_foreign_dirty, ptr @trace_event_type_funcs_track_foreign_dirty, ptr @print_fmt_track_foreign_dirty, ptr @trace_event_fields_flush_foreign, ptr @trace_event_type_funcs_flush_foreign, ptr @print_fmt_flush_foreign, ptr @trace_event_fields_writeback_write_inode_template, ptr @trace_event_type_funcs_writeback_write_inode_template, ptr @print_fmt_writeback_write_inode_template, ptr @trace_event_fields_writeback_work_class, ptr @trace_event_type_funcs_writeback_work_class, ptr @print_fmt_writeback_work_class, ptr @trace_event_fields_writeback_pages_written, ptr @trace_event_type_funcs_writeback_pages_written, ptr @print_fmt_writeback_pages_written, ptr @trace_event_fields_writeback_class, ptr @trace_event_type_funcs_writeback_class, ptr @print_fmt_writeback_class, ptr @trace_event_fields_writeback_bdi_register, ptr @trace_event_type_funcs_writeback_bdi_register, ptr @print_fmt_writeback_bdi_register, ptr @trace_event_fields_wbc_class, ptr @trace_event_type_funcs_wbc_class, ptr @print_fmt_wbc_class, ptr @trace_event_fields_writeback_queue_io, ptr @trace_event_type_funcs_writeback_queue_io, ptr @print_fmt_writeback_queue_io, ptr @trace_event_fields_global_dirty_state, ptr @trace_event_type_funcs_global_dirty_state, ptr @print_fmt_global_dirty_state, ptr @trace_event_fields_bdi_dirty_ratelimit, ptr @trace_event_type_funcs_bdi_dirty_ratelimit, ptr @print_fmt_bdi_dirty_ratelimit, ptr @trace_event_fields_balance_dirty_pages, ptr @trace_event_type_funcs_balance_dirty_pages, ptr @print_fmt_balance_dirty_pages, ptr @trace_event_fields_writeback_sb_inodes_requeue, ptr @trace_event_type_funcs_writeback_sb_inodes_requeue, ptr @print_fmt_writeback_sb_inodes_requeue, ptr @trace_event_fields_writeback_congest_waited_template, ptr @trace_event_type_funcs_writeback_congest_waited_template, ptr @print_fmt_writeback_congest_waited_template, ptr @trace_event_fields_writeback_single_inode_template, ptr @trace_event_type_funcs_writeback_single_inode_template, ptr @print_fmt_writeback_single_inode_template, ptr @trace_event_fields_writeback_inode_template, ptr @trace_event_type_funcs_writeback_inode_template, ptr @print_fmt_writeback_inode_template, ptr @.str.8, ptr @isw_nr_in_flight, ptr @cleanup_offline_cgwb.__key, ptr @.str.9, ptr @isw_wq, ptr @.str.10, ptr @.str.11, ptr @dirtytime_work, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @trace_raw_output_writeback_dirty_inode_template.__flags, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @trace_raw_output_writeback_dirty_inode_template.__flags.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.46, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @trace_raw_output_writeback_work_class.symbols, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @trace_raw_output_writeback_queue_io.symbols, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @trace_raw_output_writeback_sb_inodes_requeue.__flags, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @trace_raw_output_writeback_single_inode_template.__flags, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @trace_raw_output_writeback_inode_template.__flags, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @inode_switch_wbs.__key, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145], section "llvm.metadata"
@0 = internal global [247 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dirtytime_expire_interval to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.147 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.149 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__writeback__trace_system_name to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.150 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_writeback_folio_template to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_writeback_folio_template to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.180 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_writeback_folio_template to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.183 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_dirty_folio to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.186 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_folio_wait_writeback to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.189 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_writeback_dirty_inode_template to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.192 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_writeback_dirty_inode_template to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.195 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_writeback_dirty_inode_template to i32), i32 666, i32 832, i32 ptrtoint (ptr @___asan_gen_.198 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_mark_inode_dirty to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.201 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_dirty_inode_start to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.204 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_dirty_inode to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.207 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_inode_foreign_history to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.210 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_inode_foreign_history to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.213 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_inode_foreign_history to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_inode_foreign_history to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.219 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_inode_switch_wbs to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.222 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_inode_switch_wbs to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.225 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_inode_switch_wbs to i32), i32 164, i32 224, i32 ptrtoint (ptr @___asan_gen_.228 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_inode_switch_wbs to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_track_foreign_dirty to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.234 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_track_foreign_dirty to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.237 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_track_foreign_dirty to i32), i32 204, i32 256, i32 ptrtoint (ptr @___asan_gen_.240 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_track_foreign_dirty to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.243 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_flush_foreign to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.246 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_flush_foreign to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_flush_foreign to i32), i32 134, i32 192, i32 ptrtoint (ptr @___asan_gen_.252 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_flush_foreign to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.255 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_writeback_write_inode_template to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.258 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_writeback_write_inode_template to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.261 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_writeback_write_inode_template to i32), i32 130, i32 192, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_write_inode_start to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_write_inode to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.270 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.272 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_writeback_work_class to i32), i32 240, i32 288, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_writeback_work_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.276 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_writeback_work_class to i32), i32 689, i32 864, i32 ptrtoint (ptr @___asan_gen_.279 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_queue to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.282 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.284 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_exec to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.285 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.287 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_start to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.288 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_written to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.291 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_wait to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.294 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.296 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_writeback_pages_written to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_writeback_pages_written to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.300 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_writeback_pages_written to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.303 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_pages_written to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_writeback_class to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.309 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_writeback_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.312 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_writeback_class to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.315 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_wake_background to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_writeback_bdi_register to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.321 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_writeback_bdi_register to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_writeback_bdi_register to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.327 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_bdi_register to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.330 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_wbc_class to i32), i32 288, i32 352, i32 ptrtoint (ptr @___asan_gen_.333 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_wbc_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_wbc_class to i32), i32 316, i32 384, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_wbc_writepage to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.342 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_writeback_queue_io to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_writeback_queue_io to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_writeback_queue_io to i32), i32 490, i32 608, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_queue_io to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_global_dirty_state to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.357 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_global_dirty_state to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_global_dirty_state to i32), i32 214, i32 256, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_global_dirty_state to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.366 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_bdi_dirty_ratelimit to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.369 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_bdi_dirty_ratelimit to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_bdi_dirty_ratelimit to i32), i32 302, i32 384, i32 ptrtoint (ptr @___asan_gen_.375 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_bdi_dirty_ratelimit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.378 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_balance_dirty_pages to i32), i32 384, i32 480, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_balance_dirty_pages to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_balance_dirty_pages to i32), i32 441, i32 544, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_balance_dirty_pages to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_writeback_sb_inodes_requeue to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_writeback_sb_inodes_requeue to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_writeback_sb_inodes_requeue to i32), i32 488, i32 608, i32 ptrtoint (ptr @___asan_gen_.399 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_sb_inodes_requeue to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_writeback_congest_waited_template to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_writeback_congest_waited_template to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.408 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_writeback_congest_waited_template to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_congestion_wait to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_writeback_single_inode_template to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_writeback_single_inode_template to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.420 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_writeback_single_inode_template to i32), i32 573, i32 704, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_single_inode_start to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_single_inode to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.431 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_writeback_inode_template to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.432 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_writeback_inode_template to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_writeback_inode_template to i32), i32 489, i32 608, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_lazytime to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_lazytime_iput to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_writeback_dirty_inode_enqueue to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.447 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_sb_mark_inode_writeback to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_sb_clear_inode_writeback to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @isw_nr_in_flight to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cleanup_offline_cgwb.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.867 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @isw_wq to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.468 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dirtytime_work to i32), i32 100, i32 160, i32 ptrtoint (ptr @___asan_gen_.477 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.887 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_writeback_dirty_inode_template.__flags to i32), i32 88, i32 128, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_writeback_dirty_inode_template.__flags.33 to i32), i32 88, i32 128, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.572 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 114, i32 160, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_writeback_work_class.symbols to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 108, i32 160, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_writeback_queue_io.symbols to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 134, i32 192, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 197, i32 256, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_writeback_sb_inodes_requeue.__flags to i32), i32 88, i32 128, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 99, i32 160, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_writeback_single_inode_template.__flags to i32), i32 88, i32 128, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_writeback_inode_template.__flags to i32), i32 88, i32 128, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.851 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.863 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @inode_switch_wbs.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.867 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.869 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.875 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.875 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.881 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.887 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.887 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_dirty_folio(ptr nocapture readnone %__data, ptr noundef %folio, ptr noundef %mapping) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_dirty_folio, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %folio, ptr noundef %mapping) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_folio_wait_writeback(ptr nocapture readnone %__data, ptr noundef %folio, ptr noundef %mapping) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_folio_wait_writeback, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %folio, ptr noundef %mapping) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_mark_inode_dirty(ptr nocapture readnone %__data, ptr noundef %inode, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_mark_inode_dirty, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, i32 noundef %flags) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_dirty_inode_start(ptr nocapture readnone %__data, ptr noundef %inode, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_dirty_inode_start, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, i32 noundef %flags) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_dirty_inode(ptr nocapture readnone %__data, ptr noundef %inode, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_dirty_inode, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, i32 noundef %flags) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_inode_foreign_history(ptr nocapture readnone %__data, ptr noundef %inode, ptr noundef %wbc, i32 noundef %history) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_inode_foreign_history, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, ptr noundef %wbc, i32 noundef %history) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_inode_switch_wbs(ptr nocapture readnone %__data, ptr noundef %inode, ptr noundef %old_wb, ptr noundef %new_wb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_inode_switch_wbs, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, ptr noundef %old_wb, ptr noundef %new_wb) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_track_foreign_dirty(ptr nocapture readnone %__data, ptr noundef %folio, ptr noundef %wb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_track_foreign_dirty, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %folio, ptr noundef %wb) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_flush_foreign(ptr nocapture readnone %__data, ptr noundef %wb, i32 noundef %frn_bdi_id, i32 noundef %frn_memcg_id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_flush_foreign, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wb, i32 noundef %frn_bdi_id, i32 noundef %frn_memcg_id) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_write_inode_start(ptr nocapture readnone %__data, ptr noundef %inode, ptr noundef %wbc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_write_inode_start, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, ptr noundef %wbc) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_write_inode(ptr nocapture readnone %__data, ptr noundef %inode, ptr noundef %wbc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_write_inode, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, ptr noundef %wbc) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_queue(ptr nocapture readnone %__data, ptr noundef %wb, ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_queue, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wb, ptr noundef %work) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_exec(ptr nocapture readnone %__data, ptr noundef %wb, ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_exec, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wb, ptr noundef %work) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_start(ptr nocapture readnone %__data, ptr noundef %wb, ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_start, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wb, ptr noundef %work) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_written(ptr nocapture readnone %__data, ptr noundef %wb, ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_written, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wb, ptr noundef %work) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_wait(ptr nocapture readnone %__data, ptr noundef %wb, ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_wait, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wb, ptr noundef %work) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_pages_written(ptr nocapture readnone %__data, i32 noundef %pages_written) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_pages_written, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %pages_written) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_wake_background(ptr nocapture readnone %__data, ptr noundef %wb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_wake_background, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wb) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_bdi_register(ptr nocapture readnone %__data, ptr noundef %bdi) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_bdi_register, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %bdi) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_wbc_writepage(ptr nocapture readnone %__data, ptr noundef %wbc, ptr noundef %bdi) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_wbc_writepage, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wbc, ptr noundef %bdi) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_queue_io(ptr nocapture readnone %__data, ptr noundef %wb, ptr noundef %work, i32 noundef %dirtied_before, i32 noundef %moved) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_queue_io, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wb, ptr noundef %work, i32 noundef %dirtied_before, i32 noundef %moved) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_global_dirty_state(ptr nocapture readnone %__data, i32 noundef %background_thresh, i32 noundef %dirty_thresh) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_global_dirty_state, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %background_thresh, i32 noundef %dirty_thresh) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_bdi_dirty_ratelimit(ptr nocapture readnone %__data, ptr noundef %wb, i32 noundef %dirty_rate, i32 noundef %task_ratelimit) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_bdi_dirty_ratelimit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wb, i32 noundef %dirty_rate, i32 noundef %task_ratelimit) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_balance_dirty_pages(ptr nocapture readnone %__data, ptr noundef %wb, i32 noundef %thresh, i32 noundef %bg_thresh, i32 noundef %dirty, i32 noundef %bdi_thresh, i32 noundef %bdi_dirty, i32 noundef %dirty_ratelimit, i32 noundef %task_ratelimit, i32 noundef %dirtied, i32 noundef %period, i32 noundef %pause, i32 noundef %start_time) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_balance_dirty_pages, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %wb, i32 noundef %thresh, i32 noundef %bg_thresh, i32 noundef %dirty, i32 noundef %bdi_thresh, i32 noundef %bdi_dirty, i32 noundef %dirty_ratelimit, i32 noundef %task_ratelimit, i32 noundef %dirtied, i32 noundef %period, i32 noundef %pause, i32 noundef %start_time) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_sb_inodes_requeue(ptr nocapture readnone %__data, ptr noundef %inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_sb_inodes_requeue, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_congestion_wait(ptr nocapture readnone %__data, i32 noundef %usec_timeout, i32 noundef %usec_delayed) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_congestion_wait, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %usec_timeout, i32 noundef %usec_delayed) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_single_inode_start(ptr nocapture readnone %__data, ptr noundef %inode, ptr noundef %wbc, i32 noundef %nr_to_write) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_single_inode_start, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, ptr noundef %wbc, i32 noundef %nr_to_write) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_single_inode(ptr nocapture readnone %__data, ptr noundef %inode, ptr noundef %wbc, i32 noundef %nr_to_write) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_single_inode, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, ptr noundef %wbc, i32 noundef %nr_to_write) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_lazytime(ptr nocapture readnone %__data, ptr noundef %inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_lazytime, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_lazytime_iput(ptr nocapture readnone %__data, ptr noundef %inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_lazytime_iput, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_writeback_dirty_inode_enqueue(ptr nocapture readnone %__data, ptr noundef %inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_dirty_inode_enqueue, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_sb_mark_inode_writeback(ptr nocapture readnone %__data, ptr noundef %inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_sb_mark_inode_writeback, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_sb_clear_inode_writeback(ptr nocapture readnone %__data, ptr noundef %inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_sb_clear_inode_writeback, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode) #10
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_writeback_folio_template(ptr noundef %__data, ptr nocapture noundef readonly %folio, ptr noundef readonly %mapping) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_folio_template, ptr %call3, i32 0, i32 1
  %tobool6.not = icmp eq ptr %mapping, null
  br i1 %tobool6.not, label %cond.end14.critedge, label %cond.true

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  %3 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mapping, align 4
  %call7 = call ptr @inode_to_bdi(ptr noundef %4) #10
  %call8.c30 = call ptr @bdi_dev_name(ptr noundef %call7) #10
  %call9.c31 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call8.c30, i32 noundef 32) #10
  %5 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mapping, align 4
  %i_ino = getelementptr inbounds %struct.inode, ptr %6, i32 0, i32 11
  %7 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %i_ino, align 8
  br label %cond.end14

cond.end14.critedge:                              ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  %call8.c = call ptr @bdi_dev_name(ptr noundef null) #10
  %call9.c = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call8.c, i32 noundef 32) #10
  br label %cond.end14

cond.end14:                                       ; preds = %cond.end14.critedge, %cond.true
  %cond15 = phi i32 [ %8, %cond.true ], [ 0, %cond.end14.critedge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_writeback_folio_template, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %cond15, ptr %ino, align 4
  %index = getelementptr inbounds %struct.anon, ptr %folio, i32 0, i32 3
  %10 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %index, align 4
  %index16 = getelementptr inbounds %struct.trace_event_raw_writeback_folio_template, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %index16 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %index16, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %cond.end14, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_writeback_folio_template(ptr noundef %__data, ptr nocapture noundef readonly %folio, ptr noundef readonly %mapping) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_folio_template, ptr %call13, i32 0, i32 1
  %tobool17.not = icmp eq ptr %mapping, null
  br i1 %tobool17.not, label %cond.end25.critedge, label %cond.true

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  %27 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %mapping, align 4
  %call18 = call ptr @inode_to_bdi(ptr noundef %28) #10
  %call19.c53 = call ptr @bdi_dev_name(ptr noundef %call18) #10
  %call20.c54 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call19.c53, i32 noundef 32) #10
  %29 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %mapping, align 4
  %i_ino = getelementptr inbounds %struct.inode, ptr %30, i32 0, i32 11
  %31 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %i_ino, align 8
  br label %cond.end25

cond.end25.critedge:                              ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  %call19.c = call ptr @bdi_dev_name(ptr noundef null) #10
  %call20.c = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call19.c, i32 noundef 32) #10
  br label %cond.end25

cond.end25:                                       ; preds = %cond.end25.critedge, %cond.true
  %cond26 = phi i32 [ %32, %cond.true ], [ 0, %cond.end25.critedge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_writeback_folio_template, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %cond26, ptr %ino, align 4
  %index = getelementptr inbounds %struct.anon, ptr %folio, i32 0, i32 3
  %34 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %index, align 4
  %index27 = getelementptr inbounds %struct.trace_event_raw_writeback_folio_template, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %index27 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %index27, align 4
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %cond.end25, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_writeback_dirty_inode_template(ptr noundef %__data, ptr noundef %inode, i32 noundef %flags) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 52) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %call6 = call ptr @inode_to_bdi(ptr noundef %inode) #10
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_dirty_inode_template, ptr %call3, i32 0, i32 1
  %call7 = call ptr @bdi_dev_name(ptr noundef %call6) #10
  %call8 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call7, i32 noundef 32) #10
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %3 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_writeback_dirty_inode_template, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %ino, align 4
  %i_state = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 24
  %6 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %i_state, align 8
  %state = getelementptr inbounds %struct.trace_event_raw_writeback_dirty_inode_template, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %state, align 4
  %flags9 = getelementptr inbounds %struct.trace_event_raw_writeback_dirty_inode_template, ptr %call3, i32 0, i32 4
  %9 = ptrtoint ptr %flags9 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %flags, ptr %flags9, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_writeback_dirty_inode_template(ptr noundef %__data, ptr noundef %inode, i32 noundef %flags) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %call17 = call ptr @inode_to_bdi(ptr noundef %inode) #10
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_dirty_inode_template, ptr %call13, i32 0, i32 1
  %call18 = call ptr @bdi_dev_name(ptr noundef %call17) #10
  %call19 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call18, i32 noundef 32) #10
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %27 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_writeback_dirty_inode_template, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %ino, align 4
  %i_state = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 24
  %30 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %i_state, align 8
  %state = getelementptr inbounds %struct.trace_event_raw_writeback_dirty_inode_template, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %state, align 4
  %flags20 = getelementptr inbounds %struct.trace_event_raw_writeback_dirty_inode_template, ptr %call13, i32 0, i32 4
  %33 = ptrtoint ptr %flags20 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %flags, ptr %flags20, align 4
  %34 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rctx, align 4
  %36 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %35, ptr noundef %__data, i64 noundef 1, ptr noundef %37, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_inode_foreign_history(ptr noundef %__data, ptr noundef %inode, ptr nocapture noundef readonly %wbc, i32 noundef %history) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 52) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %name = getelementptr inbounds %struct.trace_event_raw_inode_foreign_history, ptr %call3, i32 0, i32 1
  %call6 = call ptr @inode_to_bdi(ptr noundef %inode) #10
  %call7 = call ptr @bdi_dev_name(ptr noundef %call6) #10
  %call8 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call7, i32 noundef 32) #10
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %3 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_inode_foreign_history, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %ino, align 4
  %wb.i = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 6
  %6 = ptrtoint ptr %wb.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %wb.i, align 8
  %tobool.not.i24 = icmp eq ptr %7, null
  br i1 %tobool.not.i24, label %if.end5.__trace_wbc_assign_cgroup.exit_crit_edge, label %if.then.i

if.end5.__trace_wbc_assign_cgroup.exit_crit_edge: ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  br label %__trace_wbc_assign_cgroup.exit

if.then.i:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  %memcg_css.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %7, i32 0, i32 29
  %8 = ptrtoint ptr %memcg_css.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %memcg_css.i.i, align 8
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 8
  %kn.i.i.i = getelementptr inbounds %struct.cgroup, ptr %11, i32 0, i32 11
  %12 = ptrtoint ptr %kn.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %kn.i.i.i, align 8
  %id.i.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %13, i32 0, i32 10
  %14 = ptrtoint ptr %id.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %id.i.i.i.i, align 8
  %conv.i.i.i.i.i = trunc i64 %15 to i32
  br label %__trace_wbc_assign_cgroup.exit

__trace_wbc_assign_cgroup.exit:                   ; preds = %if.then.i, %if.end5.__trace_wbc_assign_cgroup.exit_crit_edge
  %retval.0.i25 = phi i32 [ %conv.i.i.i.i.i, %if.then.i ], [ 1, %if.end5.__trace_wbc_assign_cgroup.exit_crit_edge ]
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_inode_foreign_history, ptr %call3, i32 0, i32 3
  %16 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %retval.0.i25, ptr %cgroup_ino, align 4
  %history10 = getelementptr inbounds %struct.trace_event_raw_inode_foreign_history, ptr %call3, i32 0, i32 4
  %17 = ptrtoint ptr %history10 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %history, ptr %history10, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %__trace_wbc_assign_cgroup.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_inode_foreign_history(ptr noundef %__data, ptr noundef %inode, ptr nocapture noundef readonly %wbc, i32 noundef %history) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %name = getelementptr inbounds %struct.trace_event_raw_inode_foreign_history, ptr %call13, i32 0, i32 1
  %call17 = call ptr @inode_to_bdi(ptr noundef %inode) #10
  %call18 = call ptr @bdi_dev_name(ptr noundef %call17) #10
  %call19 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call18, i32 noundef 32) #10
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %27 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_inode_foreign_history, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %ino, align 4
  %wb.i = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 6
  %30 = ptrtoint ptr %wb.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %wb.i, align 8
  %tobool.not.i47 = icmp eq ptr %31, null
  br i1 %tobool.not.i47, label %if.end16.__trace_wbc_assign_cgroup.exit_crit_edge, label %if.then.i

if.end16.__trace_wbc_assign_cgroup.exit_crit_edge: ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  br label %__trace_wbc_assign_cgroup.exit

if.then.i:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  %memcg_css.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %31, i32 0, i32 29
  %32 = ptrtoint ptr %memcg_css.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %memcg_css.i.i, align 8
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %33, align 8
  %kn.i.i.i = getelementptr inbounds %struct.cgroup, ptr %35, i32 0, i32 11
  %36 = ptrtoint ptr %kn.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %kn.i.i.i, align 8
  %id.i.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %37, i32 0, i32 10
  %38 = ptrtoint ptr %id.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %id.i.i.i.i, align 8
  %conv.i.i.i.i.i = trunc i64 %39 to i32
  br label %__trace_wbc_assign_cgroup.exit

__trace_wbc_assign_cgroup.exit:                   ; preds = %if.then.i, %if.end16.__trace_wbc_assign_cgroup.exit_crit_edge
  %retval.0.i = phi i32 [ %conv.i.i.i.i.i, %if.then.i ], [ 1, %if.end16.__trace_wbc_assign_cgroup.exit_crit_edge ]
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_inode_foreign_history, ptr %call13, i32 0, i32 3
  %40 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %retval.0.i, ptr %cgroup_ino, align 4
  %history21 = getelementptr inbounds %struct.trace_event_raw_inode_foreign_history, ptr %call13, i32 0, i32 4
  %41 = ptrtoint ptr %history21 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %history, ptr %history21, align 4
  %42 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %rctx, align 4
  %44 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %43, ptr noundef %__data, i64 noundef 1, ptr noundef %45, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %__trace_wbc_assign_cgroup.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_inode_switch_wbs(ptr noundef %__data, ptr nocapture noundef readonly %inode, ptr nocapture noundef readonly %old_wb, ptr nocapture noundef readonly %new_wb) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 52) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %name = getelementptr inbounds %struct.trace_event_raw_inode_switch_wbs, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %old_wb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %old_wb, align 8
  %call6 = call ptr @bdi_dev_name(ptr noundef %4) #10
  %call7 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call6, i32 noundef 32) #10
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %5 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_inode_switch_wbs, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %ino, align 4
  %memcg_css.i = getelementptr inbounds %struct.bdi_writeback, ptr %old_wb, i32 0, i32 29
  %8 = ptrtoint ptr %memcg_css.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %memcg_css.i, align 8
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 8
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %11, i32 0, i32 11
  %12 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %kn.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %13, i32 0, i32 10
  %14 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %id.i.i.i, align 8
  %conv.i.i.i.i = trunc i64 %15 to i32
  %old_cgroup_ino = getelementptr inbounds %struct.trace_event_raw_inode_switch_wbs, ptr %call3, i32 0, i32 3
  %16 = ptrtoint ptr %old_cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %conv.i.i.i.i, ptr %old_cgroup_ino, align 4
  %memcg_css.i23 = getelementptr inbounds %struct.bdi_writeback, ptr %new_wb, i32 0, i32 29
  %17 = ptrtoint ptr %memcg_css.i23 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %memcg_css.i23, align 8
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %18, align 8
  %kn.i.i24 = getelementptr inbounds %struct.cgroup, ptr %20, i32 0, i32 11
  %21 = ptrtoint ptr %kn.i.i24 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %kn.i.i24, align 8
  %id.i.i.i25 = getelementptr inbounds %struct.kernfs_node, ptr %22, i32 0, i32 10
  %23 = ptrtoint ptr %id.i.i.i25 to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %id.i.i.i25, align 8
  %conv.i.i.i.i26 = trunc i64 %24 to i32
  %new_cgroup_ino = getelementptr inbounds %struct.trace_event_raw_inode_switch_wbs, ptr %call3, i32 0, i32 4
  %25 = ptrtoint ptr %new_cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %conv.i.i.i.i26, ptr %new_cgroup_ino, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_inode_switch_wbs(ptr noundef %__data, ptr nocapture noundef readonly %inode, ptr nocapture noundef readonly %old_wb, ptr nocapture noundef readonly %new_wb) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %name = getelementptr inbounds %struct.trace_event_raw_inode_switch_wbs, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %old_wb to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %old_wb, align 8
  %call17 = call ptr @bdi_dev_name(ptr noundef %28) #10
  %call18 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call17, i32 noundef 32) #10
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %29 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_inode_switch_wbs, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %ino, align 4
  %memcg_css.i = getelementptr inbounds %struct.bdi_writeback, ptr %old_wb, i32 0, i32 29
  %32 = ptrtoint ptr %memcg_css.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %memcg_css.i, align 8
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %33, align 8
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %35, i32 0, i32 11
  %36 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %kn.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %37, i32 0, i32 10
  %38 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %id.i.i.i, align 8
  %conv.i.i.i.i = trunc i64 %39 to i32
  %old_cgroup_ino = getelementptr inbounds %struct.trace_event_raw_inode_switch_wbs, ptr %call13, i32 0, i32 3
  %40 = ptrtoint ptr %old_cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %conv.i.i.i.i, ptr %old_cgroup_ino, align 4
  %memcg_css.i46 = getelementptr inbounds %struct.bdi_writeback, ptr %new_wb, i32 0, i32 29
  %41 = ptrtoint ptr %memcg_css.i46 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %memcg_css.i46, align 8
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %42, align 8
  %kn.i.i47 = getelementptr inbounds %struct.cgroup, ptr %44, i32 0, i32 11
  %45 = ptrtoint ptr %kn.i.i47 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %kn.i.i47, align 8
  %id.i.i.i48 = getelementptr inbounds %struct.kernfs_node, ptr %46, i32 0, i32 10
  %47 = ptrtoint ptr %id.i.i.i48 to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %id.i.i.i48, align 8
  %conv.i.i.i.i49 = trunc i64 %48 to i32
  %new_cgroup_ino = getelementptr inbounds %struct.trace_event_raw_inode_switch_wbs, ptr %call13, i32 0, i32 4
  %49 = ptrtoint ptr %new_cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %conv.i.i.i.i49, ptr %new_cgroup_ino, align 4
  %50 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %rctx, align 4
  %52 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %51, ptr noundef %__data, i64 noundef 1, ptr noundef %53, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_track_foreign_dirty(ptr noundef %__data, ptr noundef %folio, ptr nocapture noundef readonly %wb) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 64) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %call6 = call ptr @folio_mapping(ptr noundef %folio) #10
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end5.cond.end_crit_edge, label %cond.true

if.end5.cond.end_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  br label %cond.end

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  %3 = ptrtoint ptr %call6 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %call6, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end5.cond.end_crit_edge
  %cond = phi ptr [ %4, %cond.true ], [ null, %if.end5.cond.end_crit_edge ]
  %name = getelementptr inbounds %struct.trace_event_raw_track_foreign_dirty, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %wb, align 8
  %call8 = call ptr @bdi_dev_name(ptr noundef %6) #10
  %call9 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call8, i32 noundef 32) #10
  %7 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %wb, align 8
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %8, align 8
  %bdi_id = getelementptr inbounds %struct.trace_event_raw_track_foreign_dirty, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %bdi_id to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %bdi_id, align 8
  %tobool11.not = icmp eq ptr %cond, null
  br i1 %tobool11.not, label %cond.end.cond.end14_crit_edge, label %cond.true12

cond.end.cond.end14_crit_edge:                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cond.end14

cond.true12:                                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #12
  %i_ino = getelementptr inbounds %struct.inode, ptr %cond, i32 0, i32 11
  %12 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %i_ino, align 8
  br label %cond.end14

cond.end14:                                       ; preds = %cond.true12, %cond.end.cond.end14_crit_edge
  %cond15 = phi i32 [ %13, %cond.true12 ], [ 0, %cond.end.cond.end14_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_track_foreign_dirty, ptr %call3, i32 0, i32 3
  %14 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %cond15, ptr %ino, align 8
  %memcg_css = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 29
  %15 = ptrtoint ptr %memcg_css to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %memcg_css, align 8
  %id16 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %16, i32 0, i32 6
  %17 = ptrtoint ptr %id16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %id16, align 8
  %memcg_id = getelementptr inbounds %struct.trace_event_raw_track_foreign_dirty, ptr %call3, i32 0, i32 4
  %19 = ptrtoint ptr %memcg_id to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %memcg_id, align 4
  %20 = load ptr, ptr %memcg_css, align 8
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %20, align 8
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %22, i32 0, i32 11
  %23 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %kn.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %24, i32 0, i32 10
  %25 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %id.i.i.i, align 8
  %conv.i.i.i.i = trunc i64 %26 to i32
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_track_foreign_dirty, ptr %call3, i32 0, i32 5
  %27 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %conv.i.i.i.i, ptr %cgroup_ino, align 8
  %call18 = call fastcc ptr @folio_memcg(ptr noundef %folio)
  %28 = ptrtoint ptr %call18 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %call18, align 128
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %29, i32 0, i32 11
  %30 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %kn.i, align 8
  %id.i.i = getelementptr inbounds %struct.kernfs_node, ptr %31, i32 0, i32 10
  %32 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %id.i.i, align 8
  %conv.i.i.i = trunc i64 %33 to i32
  %page_cgroup_ino = getelementptr inbounds %struct.trace_event_raw_track_foreign_dirty, ptr %call3, i32 0, i32 6
  %34 = ptrtoint ptr %page_cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %conv.i.i.i, ptr %page_cgroup_ino, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %cond.end14, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_track_foreign_dirty(ptr noundef %__data, ptr noundef %folio, ptr nocapture noundef readonly %wb) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 68, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %call17 = call ptr @folio_mapping(ptr noundef %folio) #10
  %tobool18.not = icmp eq ptr %call17, null
  br i1 %tobool18.not, label %if.end16.cond.end_crit_edge, label %cond.true

if.end16.cond.end_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  br label %cond.end

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  %27 = ptrtoint ptr %call17 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %call17, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end16.cond.end_crit_edge
  %cond = phi ptr [ %28, %cond.true ], [ null, %if.end16.cond.end_crit_edge ]
  %name = getelementptr inbounds %struct.trace_event_raw_track_foreign_dirty, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %wb, align 8
  %call19 = call ptr @bdi_dev_name(ptr noundef %30) #10
  %call20 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call19, i32 noundef 32) #10
  %31 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %wb, align 8
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %32, align 8
  %bdi_id = getelementptr inbounds %struct.trace_event_raw_track_foreign_dirty, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %bdi_id to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %bdi_id, align 8
  %tobool22.not = icmp eq ptr %cond, null
  br i1 %tobool22.not, label %cond.end.cond.end25_crit_edge, label %cond.true23

cond.end.cond.end25_crit_edge:                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cond.end25

cond.true23:                                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #12
  %i_ino = getelementptr inbounds %struct.inode, ptr %cond, i32 0, i32 11
  %36 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %i_ino, align 8
  br label %cond.end25

cond.end25:                                       ; preds = %cond.true23, %cond.end.cond.end25_crit_edge
  %cond26 = phi i32 [ %37, %cond.true23 ], [ 0, %cond.end.cond.end25_crit_edge ]
  %ino = getelementptr inbounds %struct.trace_event_raw_track_foreign_dirty, ptr %call13, i32 0, i32 3
  %38 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %cond26, ptr %ino, align 8
  %memcg_css = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 29
  %39 = ptrtoint ptr %memcg_css to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %memcg_css, align 8
  %id27 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %40, i32 0, i32 6
  %41 = ptrtoint ptr %id27 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %id27, align 8
  %memcg_id = getelementptr inbounds %struct.trace_event_raw_track_foreign_dirty, ptr %call13, i32 0, i32 4
  %43 = ptrtoint ptr %memcg_id to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %memcg_id, align 4
  %44 = load ptr, ptr %memcg_css, align 8
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %44, align 8
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %46, i32 0, i32 11
  %47 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %kn.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %48, i32 0, i32 10
  %49 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %id.i.i.i, align 8
  %conv.i.i.i.i = trunc i64 %50 to i32
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_track_foreign_dirty, ptr %call13, i32 0, i32 5
  %51 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %conv.i.i.i.i, ptr %cgroup_ino, align 8
  %call29 = call fastcc ptr @folio_memcg(ptr noundef %folio)
  %52 = ptrtoint ptr %call29 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %call29, align 128
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %53, i32 0, i32 11
  %54 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %kn.i, align 8
  %id.i.i = getelementptr inbounds %struct.kernfs_node, ptr %55, i32 0, i32 10
  %56 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %id.i.i, align 8
  %conv.i.i.i = trunc i64 %57 to i32
  %page_cgroup_ino = getelementptr inbounds %struct.trace_event_raw_track_foreign_dirty, ptr %call13, i32 0, i32 6
  %58 = ptrtoint ptr %page_cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %conv.i.i.i, ptr %page_cgroup_ino, align 4
  %59 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %rctx, align 4
  %61 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 68, i32 noundef %60, ptr noundef %__data, i64 noundef 1, ptr noundef %62, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %cond.end25, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_flush_foreign(ptr noundef %__data, ptr nocapture noundef readonly %wb, i32 noundef %frn_bdi_id, i32 noundef %frn_memcg_id) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 52) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %name = getelementptr inbounds %struct.trace_event_raw_flush_foreign, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %wb, align 8
  %call6 = call ptr @bdi_dev_name(ptr noundef %4) #10
  %call7 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call6, i32 noundef 32) #10
  %memcg_css.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 29
  %5 = ptrtoint ptr %memcg_css.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %memcg_css.i, align 8
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 8
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %8, i32 0, i32 11
  %9 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %kn.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %10, i32 0, i32 10
  %11 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %id.i.i.i, align 8
  %conv.i.i.i.i = trunc i64 %12 to i32
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_flush_foreign, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %conv.i.i.i.i, ptr %cgroup_ino, align 4
  %frn_bdi_id9 = getelementptr inbounds %struct.trace_event_raw_flush_foreign, ptr %call3, i32 0, i32 3
  %14 = ptrtoint ptr %frn_bdi_id9 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %frn_bdi_id, ptr %frn_bdi_id9, align 4
  %frn_memcg_id10 = getelementptr inbounds %struct.trace_event_raw_flush_foreign, ptr %call3, i32 0, i32 4
  %15 = ptrtoint ptr %frn_memcg_id10 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %frn_memcg_id, ptr %frn_memcg_id10, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_flush_foreign(ptr noundef %__data, ptr nocapture noundef readonly %wb, i32 noundef %frn_bdi_id, i32 noundef %frn_memcg_id) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %name = getelementptr inbounds %struct.trace_event_raw_flush_foreign, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %wb, align 8
  %call17 = call ptr @bdi_dev_name(ptr noundef %28) #10
  %call18 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call17, i32 noundef 32) #10
  %memcg_css.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 29
  %29 = ptrtoint ptr %memcg_css.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %memcg_css.i, align 8
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %30, align 8
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %32, i32 0, i32 11
  %33 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %kn.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %34, i32 0, i32 10
  %35 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %id.i.i.i, align 8
  %conv.i.i.i.i = trunc i64 %36 to i32
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_flush_foreign, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %conv.i.i.i.i, ptr %cgroup_ino, align 4
  %frn_bdi_id20 = getelementptr inbounds %struct.trace_event_raw_flush_foreign, ptr %call13, i32 0, i32 3
  %38 = ptrtoint ptr %frn_bdi_id20 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %frn_bdi_id, ptr %frn_bdi_id20, align 4
  %frn_memcg_id21 = getelementptr inbounds %struct.trace_event_raw_flush_foreign, ptr %call13, i32 0, i32 4
  %39 = ptrtoint ptr %frn_memcg_id21 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %frn_memcg_id, ptr %frn_memcg_id21, align 4
  %40 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rctx, align 4
  %42 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %41, ptr noundef %__data, i64 noundef 1, ptr noundef %43, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_writeback_write_inode_template(ptr noundef %__data, ptr noundef %inode, ptr nocapture noundef readonly %wbc) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 52) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_write_inode_template, ptr %call3, i32 0, i32 1
  %call6 = call ptr @inode_to_bdi(ptr noundef %inode) #10
  %call7 = call ptr @bdi_dev_name(ptr noundef %call6) #10
  %call8 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call7, i32 noundef 32) #10
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %3 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_writeback_write_inode_template, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %ino, align 4
  %sync_mode = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 4
  %6 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sync_mode, align 8
  %sync_mode9 = getelementptr inbounds %struct.trace_event_raw_writeback_write_inode_template, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %sync_mode9 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %sync_mode9, align 4
  %wb.i = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 6
  %9 = ptrtoint ptr %wb.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %wb.i, align 8
  %tobool.not.i24 = icmp eq ptr %10, null
  br i1 %tobool.not.i24, label %if.end5.__trace_wbc_assign_cgroup.exit_crit_edge, label %if.then.i

if.end5.__trace_wbc_assign_cgroup.exit_crit_edge: ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  br label %__trace_wbc_assign_cgroup.exit

if.then.i:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  %memcg_css.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %10, i32 0, i32 29
  %11 = ptrtoint ptr %memcg_css.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %memcg_css.i.i, align 8
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %12, align 8
  %kn.i.i.i = getelementptr inbounds %struct.cgroup, ptr %14, i32 0, i32 11
  %15 = ptrtoint ptr %kn.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %kn.i.i.i, align 8
  %id.i.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %16, i32 0, i32 10
  %17 = ptrtoint ptr %id.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %id.i.i.i.i, align 8
  %conv.i.i.i.i.i = trunc i64 %18 to i32
  br label %__trace_wbc_assign_cgroup.exit

__trace_wbc_assign_cgroup.exit:                   ; preds = %if.then.i, %if.end5.__trace_wbc_assign_cgroup.exit_crit_edge
  %retval.0.i25 = phi i32 [ %conv.i.i.i.i.i, %if.then.i ], [ 1, %if.end5.__trace_wbc_assign_cgroup.exit_crit_edge ]
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_writeback_write_inode_template, ptr %call3, i32 0, i32 4
  %19 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %retval.0.i25, ptr %cgroup_ino, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %__trace_wbc_assign_cgroup.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_writeback_write_inode_template(ptr noundef %__data, ptr noundef %inode, ptr nocapture noundef readonly %wbc) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_write_inode_template, ptr %call13, i32 0, i32 1
  %call17 = call ptr @inode_to_bdi(ptr noundef %inode) #10
  %call18 = call ptr @bdi_dev_name(ptr noundef %call17) #10
  %call19 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call18, i32 noundef 32) #10
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %27 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_writeback_write_inode_template, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %ino, align 4
  %sync_mode = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 4
  %30 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %sync_mode, align 8
  %sync_mode20 = getelementptr inbounds %struct.trace_event_raw_writeback_write_inode_template, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %sync_mode20 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %sync_mode20, align 4
  %wb.i = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 6
  %33 = ptrtoint ptr %wb.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %wb.i, align 8
  %tobool.not.i47 = icmp eq ptr %34, null
  br i1 %tobool.not.i47, label %if.end16.__trace_wbc_assign_cgroup.exit_crit_edge, label %if.then.i

if.end16.__trace_wbc_assign_cgroup.exit_crit_edge: ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  br label %__trace_wbc_assign_cgroup.exit

if.then.i:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  %memcg_css.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %34, i32 0, i32 29
  %35 = ptrtoint ptr %memcg_css.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %memcg_css.i.i, align 8
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %36, align 8
  %kn.i.i.i = getelementptr inbounds %struct.cgroup, ptr %38, i32 0, i32 11
  %39 = ptrtoint ptr %kn.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %kn.i.i.i, align 8
  %id.i.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %40, i32 0, i32 10
  %41 = ptrtoint ptr %id.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %id.i.i.i.i, align 8
  %conv.i.i.i.i.i = trunc i64 %42 to i32
  br label %__trace_wbc_assign_cgroup.exit

__trace_wbc_assign_cgroup.exit:                   ; preds = %if.then.i, %if.end16.__trace_wbc_assign_cgroup.exit_crit_edge
  %retval.0.i = phi i32 [ %conv.i.i.i.i.i, %if.then.i ], [ 1, %if.end16.__trace_wbc_assign_cgroup.exit_crit_edge ]
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_writeback_write_inode_template, ptr %call13, i32 0, i32 4
  %43 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %retval.0.i, ptr %cgroup_ino, align 4
  %44 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %rctx, align 4
  %46 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %45, ptr noundef %__data, i64 noundef 1, ptr noundef %47, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %__trace_wbc_assign_cgroup.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_writeback_work_class(ptr noundef %__data, ptr nocapture noundef readonly %wb, ptr nocapture noundef readonly %work) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 72) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %wb, align 8
  %call6 = call ptr @bdi_dev_name(ptr noundef %4) #10
  %call7 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call6, i32 noundef 32) #10
  %5 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %work, align 4
  %nr_pages8 = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %nr_pages8 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %nr_pages8, align 4
  %sb = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 1
  %8 = ptrtoint ptr %sb to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %sb, align 4
  %tobool9.not = icmp eq ptr %9, null
  br i1 %tobool9.not, label %if.end5.cond.end_crit_edge, label %cond.true

if.end5.cond.end_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  br label %cond.end

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  %s_dev = getelementptr inbounds %struct.super_block, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %s_dev, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end5.cond.end_crit_edge
  %cond = phi i32 [ %11, %cond.true ], [ 0, %if.end5.cond.end_crit_edge ]
  %sb_dev = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %sb_dev to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %cond, ptr %sb_dev, align 4
  %sync_mode = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 2
  %13 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sync_mode, align 4
  %sync_mode11 = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %call3, i32 0, i32 4
  %15 = ptrtoint ptr %sync_mode11 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %sync_mode11, align 4
  %for_kupdate = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 3
  %16 = ptrtoint ptr %for_kupdate to i32
  call void @__asan_load1_noabort(i32 %16)
  %bf.load = load i8, ptr %for_kupdate, align 4
  %bf.lshr = lshr i8 %bf.load, 6
  %bf.clear = and i8 %bf.lshr, 1
  %bf.cast = zext i8 %bf.clear to i32
  %for_kupdate12 = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %call3, i32 0, i32 5
  %17 = ptrtoint ptr %for_kupdate12 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %bf.cast, ptr %for_kupdate12, align 4
  %bf.load13 = load i8, ptr %for_kupdate, align 4
  %bf.lshr14 = lshr i8 %bf.load13, 5
  %bf.clear15 = and i8 %bf.lshr14, 1
  %bf.cast16 = zext i8 %bf.clear15 to i32
  %range_cyclic17 = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %call3, i32 0, i32 6
  %18 = ptrtoint ptr %range_cyclic17 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %bf.cast16, ptr %range_cyclic17, align 4
  %bf.load18 = load i8, ptr %for_kupdate, align 4
  %bf.lshr19 = lshr i8 %bf.load18, 4
  %bf.clear20 = and i8 %bf.lshr19, 1
  %bf.cast21 = zext i8 %bf.clear20 to i32
  %for_background22 = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %call3, i32 0, i32 7
  %19 = ptrtoint ptr %for_background22 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %bf.cast21, ptr %for_background22, align 4
  %reason = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 4
  %20 = ptrtoint ptr %reason to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %reason, align 4
  %reason23 = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %call3, i32 0, i32 8
  %22 = ptrtoint ptr %reason23 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %reason23, align 4
  %memcg_css.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 29
  %23 = ptrtoint ptr %memcg_css.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %memcg_css.i, align 8
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %24, align 8
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %26, i32 0, i32 11
  %27 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %kn.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %28, i32 0, i32 10
  %29 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %id.i.i.i, align 8
  %conv.i.i.i.i = trunc i64 %30 to i32
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %call3, i32 0, i32 9
  %31 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %conv.i.i.i.i, ptr %cgroup_ino, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_writeback_work_class(ptr noundef %__data, ptr nocapture noundef readonly %wb, ptr nocapture noundef readonly %work) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 76, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %wb, align 8
  %call17 = call ptr @bdi_dev_name(ptr noundef %28) #10
  %call18 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call17, i32 noundef 32) #10
  %29 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %work, align 4
  %nr_pages19 = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %nr_pages19 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %nr_pages19, align 4
  %sb = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 1
  %32 = ptrtoint ptr %sb to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %sb, align 4
  %tobool20.not = icmp eq ptr %33, null
  br i1 %tobool20.not, label %if.end16.cond.end_crit_edge, label %cond.true

if.end16.cond.end_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  br label %cond.end

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  %s_dev = getelementptr inbounds %struct.super_block, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %s_dev, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end16.cond.end_crit_edge
  %cond = phi i32 [ %35, %cond.true ], [ 0, %if.end16.cond.end_crit_edge ]
  %sb_dev = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %sb_dev to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %cond, ptr %sb_dev, align 4
  %sync_mode = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 2
  %37 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %sync_mode, align 4
  %sync_mode22 = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %call13, i32 0, i32 4
  %39 = ptrtoint ptr %sync_mode22 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %sync_mode22, align 4
  %for_kupdate = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 3
  %40 = ptrtoint ptr %for_kupdate to i32
  call void @__asan_load1_noabort(i32 %40)
  %bf.load = load i8, ptr %for_kupdate, align 4
  %bf.lshr = lshr i8 %bf.load, 6
  %bf.clear = and i8 %bf.lshr, 1
  %bf.cast = zext i8 %bf.clear to i32
  %for_kupdate23 = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %call13, i32 0, i32 5
  %41 = ptrtoint ptr %for_kupdate23 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %bf.cast, ptr %for_kupdate23, align 4
  %bf.load24 = load i8, ptr %for_kupdate, align 4
  %bf.lshr25 = lshr i8 %bf.load24, 5
  %bf.clear26 = and i8 %bf.lshr25, 1
  %bf.cast27 = zext i8 %bf.clear26 to i32
  %range_cyclic28 = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %call13, i32 0, i32 6
  %42 = ptrtoint ptr %range_cyclic28 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %bf.cast27, ptr %range_cyclic28, align 4
  %bf.load29 = load i8, ptr %for_kupdate, align 4
  %bf.lshr30 = lshr i8 %bf.load29, 4
  %bf.clear31 = and i8 %bf.lshr30, 1
  %bf.cast32 = zext i8 %bf.clear31 to i32
  %for_background33 = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %call13, i32 0, i32 7
  %43 = ptrtoint ptr %for_background33 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %bf.cast32, ptr %for_background33, align 4
  %reason = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 4
  %44 = ptrtoint ptr %reason to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %reason, align 4
  %reason34 = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %call13, i32 0, i32 8
  %46 = ptrtoint ptr %reason34 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %reason34, align 4
  %memcg_css.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 29
  %47 = ptrtoint ptr %memcg_css.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %memcg_css.i, align 8
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %48, align 8
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %50, i32 0, i32 11
  %51 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %kn.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %52, i32 0, i32 10
  %53 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %id.i.i.i, align 8
  %conv.i.i.i.i = trunc i64 %54 to i32
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %call13, i32 0, i32 9
  %55 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %conv.i.i.i.i, ptr %cgroup_ino, align 4
  %56 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %rctx, align 4
  %58 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 76, i32 noundef %57, ptr noundef %__data, i64 noundef 1, ptr noundef %59, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_writeback_pages_written(ptr noundef %__data, i32 noundef %pages_written) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 12) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %pages = getelementptr inbounds %struct.trace_event_raw_writeback_pages_written, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %pages to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %pages_written, ptr %pages, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_writeback_pages_written(ptr noundef %__data, i32 noundef %pages_written) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 12, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %pages = getelementptr inbounds %struct.trace_event_raw_writeback_pages_written, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %pages to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %pages_written, ptr %pages, align 4
  %28 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rctx, align 4
  %30 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 12, i32 noundef %29, ptr noundef %__data, i64 noundef 1, ptr noundef %31, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_writeback_class(ptr noundef %__data, ptr nocapture noundef readonly %wb) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 44) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_class, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %wb, align 8
  %call6 = call ptr @bdi_dev_name(ptr noundef %4) #10
  %call7 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call6, i32 noundef 32) #10
  %memcg_css.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 29
  %5 = ptrtoint ptr %memcg_css.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %memcg_css.i, align 8
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 8
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %8, i32 0, i32 11
  %9 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %kn.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %10, i32 0, i32 10
  %11 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %id.i.i.i, align 8
  %conv.i.i.i.i = trunc i64 %12 to i32
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_writeback_class, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %conv.i.i.i.i, ptr %cgroup_ino, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_writeback_class(ptr noundef %__data, ptr nocapture noundef readonly %wb) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_class, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %wb, align 8
  %call17 = call ptr @bdi_dev_name(ptr noundef %28) #10
  %call18 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call17, i32 noundef 32) #10
  %memcg_css.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 29
  %29 = ptrtoint ptr %memcg_css.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %memcg_css.i, align 8
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %30, align 8
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %32, i32 0, i32 11
  %33 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %kn.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %34, i32 0, i32 10
  %35 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %id.i.i.i, align 8
  %conv.i.i.i.i = trunc i64 %36 to i32
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_writeback_class, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %conv.i.i.i.i, ptr %cgroup_ino, align 4
  %38 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rctx, align 4
  %40 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %39, ptr noundef %__data, i64 noundef 1, ptr noundef %41, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_writeback_bdi_register(ptr noundef %__data, ptr noundef %bdi) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_bdi_register, ptr %call3, i32 0, i32 1
  %call6 = call ptr @bdi_dev_name(ptr noundef %bdi) #10
  %call7 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call6, i32 noundef 32) #10
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_writeback_bdi_register(ptr noundef %__data, ptr noundef %bdi) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_bdi_register, ptr %call13, i32 0, i32 1
  %call17 = call ptr @bdi_dev_name(ptr noundef %bdi) #10
  %call18 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call17, i32 noundef 32) #10
  %27 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rctx, align 4
  %29 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %28, ptr noundef %__data, i64 noundef 1, ptr noundef %30, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_wbc_class(ptr noundef %__data, ptr nocapture noundef readonly %wbc, ptr noundef %bdi) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 80) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %name = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call3, i32 0, i32 1
  %call6 = call ptr @bdi_dev_name(ptr noundef %bdi) #10
  %call7 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call6, i32 noundef 32) #10
  %3 = ptrtoint ptr %wbc to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %wbc, align 8
  %nr_to_write8 = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %nr_to_write8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %nr_to_write8, align 4
  %pages_skipped = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 1
  %6 = ptrtoint ptr %pages_skipped to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pages_skipped, align 4
  %pages_skipped9 = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %pages_skipped9 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %pages_skipped9, align 4
  %sync_mode = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 4
  %9 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sync_mode, align 8
  %sync_mode10 = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call3, i32 0, i32 4
  %11 = ptrtoint ptr %sync_mode10 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %sync_mode10, align 4
  %for_kupdate = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 5
  %12 = ptrtoint ptr %for_kupdate to i32
  call void @__asan_load2_noabort(i32 %12)
  %bf.load = load i16, ptr %for_kupdate, align 4
  %bf.lshr = lshr i16 %bf.load, 15
  %bf.cast = zext i16 %bf.lshr to i32
  %for_kupdate11 = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call3, i32 0, i32 5
  %13 = ptrtoint ptr %for_kupdate11 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %bf.cast, ptr %for_kupdate11, align 4
  %bf.load12 = load i16, ptr %for_kupdate, align 4
  %bf.lshr13 = lshr i16 %bf.load12, 14
  %bf.clear = and i16 %bf.lshr13, 1
  %bf.cast14 = zext i16 %bf.clear to i32
  %for_background15 = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call3, i32 0, i32 6
  %14 = ptrtoint ptr %for_background15 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %bf.cast14, ptr %for_background15, align 4
  %bf.load16 = load i16, ptr %for_kupdate, align 4
  %bf.lshr17 = lshr i16 %bf.load16, 12
  %bf.clear18 = and i16 %bf.lshr17, 1
  %bf.cast19 = zext i16 %bf.clear18 to i32
  %for_reclaim20 = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call3, i32 0, i32 7
  %15 = ptrtoint ptr %for_reclaim20 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %bf.cast19, ptr %for_reclaim20, align 4
  %bf.load21 = load i16, ptr %for_kupdate, align 4
  %bf.lshr22 = lshr i16 %bf.load21, 11
  %bf.clear23 = and i16 %bf.lshr22, 1
  %bf.cast24 = zext i16 %bf.clear23 to i32
  %range_cyclic25 = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call3, i32 0, i32 8
  %16 = ptrtoint ptr %range_cyclic25 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %bf.cast24, ptr %range_cyclic25, align 4
  %range_start = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 2
  %17 = ptrtoint ptr %range_start to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %range_start, align 8
  %conv = trunc i64 %18 to i32
  %range_start26 = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call3, i32 0, i32 9
  %19 = ptrtoint ptr %range_start26 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %conv, ptr %range_start26, align 4
  %range_end = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 3
  %20 = ptrtoint ptr %range_end to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %range_end, align 8
  %conv27 = trunc i64 %21 to i32
  %range_end28 = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call3, i32 0, i32 10
  %22 = ptrtoint ptr %range_end28 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %conv27, ptr %range_end28, align 4
  %wb.i = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 6
  %23 = ptrtoint ptr %wb.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %wb.i, align 8
  %tobool.not.i57 = icmp eq ptr %24, null
  br i1 %tobool.not.i57, label %if.end5.__trace_wbc_assign_cgroup.exit_crit_edge, label %if.then.i

if.end5.__trace_wbc_assign_cgroup.exit_crit_edge: ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  br label %__trace_wbc_assign_cgroup.exit

if.then.i:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  %memcg_css.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %24, i32 0, i32 29
  %25 = ptrtoint ptr %memcg_css.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %memcg_css.i.i, align 8
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %26, align 8
  %kn.i.i.i = getelementptr inbounds %struct.cgroup, ptr %28, i32 0, i32 11
  %29 = ptrtoint ptr %kn.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %kn.i.i.i, align 8
  %id.i.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %30, i32 0, i32 10
  %31 = ptrtoint ptr %id.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %id.i.i.i.i, align 8
  %conv.i.i.i.i.i = trunc i64 %32 to i32
  br label %__trace_wbc_assign_cgroup.exit

__trace_wbc_assign_cgroup.exit:                   ; preds = %if.then.i, %if.end5.__trace_wbc_assign_cgroup.exit_crit_edge
  %retval.0.i58 = phi i32 [ %conv.i.i.i.i.i, %if.then.i ], [ 1, %if.end5.__trace_wbc_assign_cgroup.exit_crit_edge ]
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call3, i32 0, i32 11
  %33 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %retval.0.i58, ptr %cgroup_ino, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %__trace_wbc_assign_cgroup.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_wbc_class(ptr noundef %__data, ptr nocapture noundef readonly %wbc, ptr noundef %bdi) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 84, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %name = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call13, i32 0, i32 1
  %call17 = call ptr @bdi_dev_name(ptr noundef %bdi) #10
  %call18 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call17, i32 noundef 32) #10
  %27 = ptrtoint ptr %wbc to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %wbc, align 8
  %nr_to_write19 = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %nr_to_write19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %nr_to_write19, align 4
  %pages_skipped = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 1
  %30 = ptrtoint ptr %pages_skipped to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %pages_skipped, align 4
  %pages_skipped20 = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %pages_skipped20 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %pages_skipped20, align 4
  %sync_mode = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 4
  %33 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %sync_mode, align 8
  %sync_mode21 = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call13, i32 0, i32 4
  %35 = ptrtoint ptr %sync_mode21 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %sync_mode21, align 4
  %for_kupdate = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 5
  %36 = ptrtoint ptr %for_kupdate to i32
  call void @__asan_load2_noabort(i32 %36)
  %bf.load = load i16, ptr %for_kupdate, align 4
  %bf.lshr = lshr i16 %bf.load, 15
  %bf.cast = zext i16 %bf.lshr to i32
  %for_kupdate22 = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call13, i32 0, i32 5
  %37 = ptrtoint ptr %for_kupdate22 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %bf.cast, ptr %for_kupdate22, align 4
  %bf.load23 = load i16, ptr %for_kupdate, align 4
  %bf.lshr24 = lshr i16 %bf.load23, 14
  %bf.clear = and i16 %bf.lshr24, 1
  %bf.cast25 = zext i16 %bf.clear to i32
  %for_background26 = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call13, i32 0, i32 6
  %38 = ptrtoint ptr %for_background26 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %bf.cast25, ptr %for_background26, align 4
  %bf.load27 = load i16, ptr %for_kupdate, align 4
  %bf.lshr28 = lshr i16 %bf.load27, 12
  %bf.clear29 = and i16 %bf.lshr28, 1
  %bf.cast30 = zext i16 %bf.clear29 to i32
  %for_reclaim31 = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call13, i32 0, i32 7
  %39 = ptrtoint ptr %for_reclaim31 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %bf.cast30, ptr %for_reclaim31, align 4
  %bf.load32 = load i16, ptr %for_kupdate, align 4
  %bf.lshr33 = lshr i16 %bf.load32, 11
  %bf.clear34 = and i16 %bf.lshr33, 1
  %bf.cast35 = zext i16 %bf.clear34 to i32
  %range_cyclic36 = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call13, i32 0, i32 8
  %40 = ptrtoint ptr %range_cyclic36 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %bf.cast35, ptr %range_cyclic36, align 4
  %range_start = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 2
  %41 = ptrtoint ptr %range_start to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %range_start, align 8
  %conv = trunc i64 %42 to i32
  %range_start37 = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call13, i32 0, i32 9
  %43 = ptrtoint ptr %range_start37 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %conv, ptr %range_start37, align 4
  %range_end = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 3
  %44 = ptrtoint ptr %range_end to i32
  call void @__asan_load8_noabort(i32 %44)
  %45 = load i64, ptr %range_end, align 8
  %conv38 = trunc i64 %45 to i32
  %range_end39 = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call13, i32 0, i32 10
  %46 = ptrtoint ptr %range_end39 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %conv38, ptr %range_end39, align 4
  %wb.i = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 6
  %47 = ptrtoint ptr %wb.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %wb.i, align 8
  %tobool.not.i80 = icmp eq ptr %48, null
  br i1 %tobool.not.i80, label %if.end16.__trace_wbc_assign_cgroup.exit_crit_edge, label %if.then.i

if.end16.__trace_wbc_assign_cgroup.exit_crit_edge: ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  br label %__trace_wbc_assign_cgroup.exit

if.then.i:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  %memcg_css.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %48, i32 0, i32 29
  %49 = ptrtoint ptr %memcg_css.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %memcg_css.i.i, align 8
  %51 = ptrtoint ptr %50 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %50, align 8
  %kn.i.i.i = getelementptr inbounds %struct.cgroup, ptr %52, i32 0, i32 11
  %53 = ptrtoint ptr %kn.i.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %kn.i.i.i, align 8
  %id.i.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %54, i32 0, i32 10
  %55 = ptrtoint ptr %id.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %id.i.i.i.i, align 8
  %conv.i.i.i.i.i = trunc i64 %56 to i32
  br label %__trace_wbc_assign_cgroup.exit

__trace_wbc_assign_cgroup.exit:                   ; preds = %if.then.i, %if.end16.__trace_wbc_assign_cgroup.exit_crit_edge
  %retval.0.i = phi i32 [ %conv.i.i.i.i.i, %if.then.i ], [ 1, %if.end16.__trace_wbc_assign_cgroup.exit_crit_edge ]
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %call13, i32 0, i32 11
  %57 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %retval.0.i, ptr %cgroup_ino, align 4
  %58 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %rctx, align 4
  %60 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 84, i32 noundef %59, ptr noundef %__data, i64 noundef 1, ptr noundef %61, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %__trace_wbc_assign_cgroup.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_writeback_queue_io(ptr noundef %__data, ptr nocapture noundef readonly %wb, ptr nocapture noundef readonly %work, i32 noundef %dirtied_before, i32 noundef %moved) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 60) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_queue_io, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %wb, align 8
  %call6 = call ptr @bdi_dev_name(ptr noundef %4) #10
  %call7 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call6, i32 noundef 32) #10
  %older = getelementptr inbounds %struct.trace_event_raw_writeback_queue_io, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %older to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %dirtied_before, ptr %older, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %6 = load volatile i32, ptr @jiffies, align 128
  %sub = sub i32 %6, %dirtied_before
  %mul = mul i32 %sub, 1000
  %div = udiv i32 %mul, 100
  %age = getelementptr inbounds %struct.trace_event_raw_writeback_queue_io, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %age to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %div, ptr %age, align 4
  %moved8 = getelementptr inbounds %struct.trace_event_raw_writeback_queue_io, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %moved8 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %moved, ptr %moved8, align 4
  %reason = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 4
  %9 = ptrtoint ptr %reason to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %reason, align 4
  %reason9 = getelementptr inbounds %struct.trace_event_raw_writeback_queue_io, ptr %call3, i32 0, i32 5
  %11 = ptrtoint ptr %reason9 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %reason9, align 4
  %memcg_css.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 29
  %12 = ptrtoint ptr %memcg_css.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %memcg_css.i, align 8
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 8
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %15, i32 0, i32 11
  %16 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %kn.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %17, i32 0, i32 10
  %18 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %id.i.i.i, align 8
  %conv.i.i.i.i = trunc i64 %19 to i32
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_writeback_queue_io, ptr %call3, i32 0, i32 6
  %20 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %conv.i.i.i.i, ptr %cgroup_ino, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_writeback_queue_io(ptr noundef %__data, ptr nocapture noundef readonly %wb, ptr nocapture noundef readonly %work, i32 noundef %dirtied_before, i32 noundef %moved) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_queue_io, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %wb, align 8
  %call17 = call ptr @bdi_dev_name(ptr noundef %28) #10
  %call18 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call17, i32 noundef 32) #10
  %older = getelementptr inbounds %struct.trace_event_raw_writeback_queue_io, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %older to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %dirtied_before, ptr %older, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %30 = load volatile i32, ptr @jiffies, align 128
  %sub19 = sub i32 %30, %dirtied_before
  %mul = mul i32 %sub19, 1000
  %div = udiv i32 %mul, 100
  %age = getelementptr inbounds %struct.trace_event_raw_writeback_queue_io, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %age to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %div, ptr %age, align 4
  %moved20 = getelementptr inbounds %struct.trace_event_raw_writeback_queue_io, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %moved20 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %moved, ptr %moved20, align 4
  %reason = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 4
  %33 = ptrtoint ptr %reason to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %reason, align 4
  %reason21 = getelementptr inbounds %struct.trace_event_raw_writeback_queue_io, ptr %call13, i32 0, i32 5
  %35 = ptrtoint ptr %reason21 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %reason21, align 4
  %memcg_css.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 29
  %36 = ptrtoint ptr %memcg_css.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %memcg_css.i, align 8
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %37, align 8
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %39, i32 0, i32 11
  %40 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %kn.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %41, i32 0, i32 10
  %42 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %id.i.i.i, align 8
  %conv.i.i.i.i = trunc i64 %43 to i32
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_writeback_queue_io, ptr %call13, i32 0, i32 6
  %44 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %conv.i.i.i.i, ptr %cgroup_ino, align 4
  %45 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rctx, align 4
  %47 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 60, i32 noundef %46, ptr noundef %__data, i64 noundef 1, ptr noundef %48, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_global_dirty_state(ptr noundef %__data, i32 noundef %background_thresh, i32 noundef %dirty_thresh) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 36) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20), i32 noundef 4) #10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20) to i32))
  %3 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20), align 4
  %4 = call i32 @llvm.smax.i32(i32 %3, i32 0) #10
  %nr_dirty = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %nr_dirty to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %nr_dirty, align 4
  %call.i.i.i.i26 = call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 21), i32 noundef 4) #10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 21) to i32))
  %6 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 21), align 4
  %7 = call i32 @llvm.smax.i32(i32 %6, i32 0) #10
  %nr_writeback = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %nr_writeback to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %nr_writeback, align 4
  %call.i.i.i.i27 = call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 31), i32 noundef 4) #10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 31) to i32))
  %9 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 31), align 4
  %10 = call i32 @llvm.smax.i32(i32 %9, i32 0) #10
  %nr_dirtied = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %call3, i32 0, i32 6
  %11 = ptrtoint ptr %nr_dirtied to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %nr_dirtied, align 4
  %call.i.i.i.i28 = call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 32), i32 noundef 4) #10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 32) to i32))
  %12 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 32), align 4
  %13 = call i32 @llvm.smax.i32(i32 %12, i32 0) #10
  %nr_written = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %call3, i32 0, i32 7
  %14 = ptrtoint ptr %nr_written to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %nr_written, align 4
  %background_thresh10 = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %call3, i32 0, i32 3
  %15 = ptrtoint ptr %background_thresh10 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %background_thresh, ptr %background_thresh10, align 4
  %dirty_thresh11 = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %dirty_thresh11 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %dirty_thresh, ptr %dirty_thresh11, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.wb_domain, ptr @global_wb_domain, i32 0, i32 5) to i32))
  %17 = load i32, ptr getelementptr inbounds (%struct.wb_domain, ptr @global_wb_domain, i32 0, i32 5), align 8
  %dirty_limit = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %call3, i32 0, i32 5
  %18 = ptrtoint ptr %dirty_limit to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %dirty_limit, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_global_dirty_state(ptr noundef %__data, i32 noundef %background_thresh, i32 noundef %dirty_thresh) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20), i32 noundef 4) #10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20) to i32))
  %27 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20), align 4
  %28 = call i32 @llvm.smax.i32(i32 %27, i32 0) #10
  %nr_dirty = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %nr_dirty to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %nr_dirty, align 4
  %call.i.i.i.i49 = call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 21), i32 noundef 4) #10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 21) to i32))
  %30 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 21), align 4
  %31 = call i32 @llvm.smax.i32(i32 %30, i32 0) #10
  %nr_writeback = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %nr_writeback to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %nr_writeback, align 4
  %call.i.i.i.i50 = call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 31), i32 noundef 4) #10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 31) to i32))
  %33 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 31), align 4
  %34 = call i32 @llvm.smax.i32(i32 %33, i32 0) #10
  %nr_dirtied = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %call13, i32 0, i32 6
  %35 = ptrtoint ptr %nr_dirtied to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %nr_dirtied, align 4
  %call.i.i.i.i51 = call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 32), i32 noundef 4) #10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 32) to i32))
  %36 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 32), align 4
  %37 = call i32 @llvm.smax.i32(i32 %36, i32 0) #10
  %nr_written = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %call13, i32 0, i32 7
  %38 = ptrtoint ptr %nr_written to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %nr_written, align 4
  %background_thresh21 = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %call13, i32 0, i32 3
  %39 = ptrtoint ptr %background_thresh21 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %background_thresh, ptr %background_thresh21, align 4
  %dirty_thresh22 = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %dirty_thresh22 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %dirty_thresh, ptr %dirty_thresh22, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.wb_domain, ptr @global_wb_domain, i32 0, i32 5) to i32))
  %41 = load i32, ptr getelementptr inbounds (%struct.wb_domain, ptr @global_wb_domain, i32 0, i32 5), align 8
  %dirty_limit = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %call13, i32 0, i32 5
  %42 = ptrtoint ptr %dirty_limit to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %dirty_limit, align 4
  %43 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %rctx, align 4
  %45 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %44, ptr noundef %__data, i64 noundef 1, ptr noundef %46, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_bdi_dirty_ratelimit(ptr noundef %__data, ptr nocapture noundef readonly %wb, i32 noundef %dirty_rate, i32 noundef %task_ratelimit) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 68) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %bdi = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %wb, align 8
  %call7 = call ptr @bdi_dev_name(ptr noundef %4) #10
  %call8 = call i32 @strscpy_pad(ptr noundef %bdi, ptr noundef %call7, i32 noundef 32) #10
  %write_bandwidth = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 14
  %5 = ptrtoint ptr %write_bandwidth to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %write_bandwidth, align 8
  %shl = shl i32 %6, 2
  %write_bw = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %write_bw to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %shl, ptr %write_bw, align 4
  %avg_write_bandwidth = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 15
  %8 = ptrtoint ptr %avg_write_bandwidth to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %avg_write_bandwidth, align 4
  %shl9 = shl i32 %9, 2
  %avg_write_bw = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %call3, i32 0, i32 3
  %10 = ptrtoint ptr %avg_write_bw to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %shl9, ptr %avg_write_bw, align 4
  %shl10 = shl i32 %dirty_rate, 2
  %dirty_rate11 = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %call3, i32 0, i32 4
  %11 = ptrtoint ptr %dirty_rate11 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %shl10, ptr %dirty_rate11, align 4
  %dirty_ratelimit = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 16
  %12 = ptrtoint ptr %dirty_ratelimit to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %dirty_ratelimit, align 8
  %shl12 = shl i32 %13, 2
  %dirty_ratelimit13 = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %call3, i32 0, i32 5
  %14 = ptrtoint ptr %dirty_ratelimit13 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %shl12, ptr %dirty_ratelimit13, align 4
  %shl14 = shl i32 %task_ratelimit, 2
  %task_ratelimit15 = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %call3, i32 0, i32 6
  %15 = ptrtoint ptr %task_ratelimit15 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %shl14, ptr %task_ratelimit15, align 4
  %balanced_dirty_ratelimit = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 17
  %16 = ptrtoint ptr %balanced_dirty_ratelimit to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %balanced_dirty_ratelimit, align 4
  %shl16 = shl i32 %17, 2
  %balanced_dirty_ratelimit17 = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %call3, i32 0, i32 7
  %18 = ptrtoint ptr %balanced_dirty_ratelimit17 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %shl16, ptr %balanced_dirty_ratelimit17, align 4
  %memcg_css.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 29
  %19 = ptrtoint ptr %memcg_css.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %memcg_css.i, align 8
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %20, align 8
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %22, i32 0, i32 11
  %23 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %kn.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %24, i32 0, i32 10
  %25 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %id.i.i.i, align 8
  %conv.i.i.i.i = trunc i64 %26 to i32
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %call3, i32 0, i32 8
  %27 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %conv.i.i.i.i, ptr %cgroup_ino, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_bdi_dirty_ratelimit(ptr noundef %__data, ptr nocapture noundef readonly %wb, i32 noundef %dirty_rate, i32 noundef %task_ratelimit) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 68, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %bdi = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %wb, align 8
  %call18 = call ptr @bdi_dev_name(ptr noundef %28) #10
  %call19 = call i32 @strscpy_pad(ptr noundef %bdi, ptr noundef %call18, i32 noundef 32) #10
  %write_bandwidth = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 14
  %29 = ptrtoint ptr %write_bandwidth to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %write_bandwidth, align 8
  %shl = shl i32 %30, 2
  %write_bw = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %write_bw to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %shl, ptr %write_bw, align 4
  %avg_write_bandwidth = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 15
  %32 = ptrtoint ptr %avg_write_bandwidth to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %avg_write_bandwidth, align 4
  %shl20 = shl i32 %33, 2
  %avg_write_bw = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %call13, i32 0, i32 3
  %34 = ptrtoint ptr %avg_write_bw to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %shl20, ptr %avg_write_bw, align 4
  %shl21 = shl i32 %dirty_rate, 2
  %dirty_rate22 = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %call13, i32 0, i32 4
  %35 = ptrtoint ptr %dirty_rate22 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %shl21, ptr %dirty_rate22, align 4
  %dirty_ratelimit = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 16
  %36 = ptrtoint ptr %dirty_ratelimit to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %dirty_ratelimit, align 8
  %shl23 = shl i32 %37, 2
  %dirty_ratelimit24 = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %call13, i32 0, i32 5
  %38 = ptrtoint ptr %dirty_ratelimit24 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %shl23, ptr %dirty_ratelimit24, align 4
  %shl25 = shl i32 %task_ratelimit, 2
  %task_ratelimit26 = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %call13, i32 0, i32 6
  %39 = ptrtoint ptr %task_ratelimit26 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %shl25, ptr %task_ratelimit26, align 4
  %balanced_dirty_ratelimit = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 17
  %40 = ptrtoint ptr %balanced_dirty_ratelimit to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %balanced_dirty_ratelimit, align 4
  %shl27 = shl i32 %41, 2
  %balanced_dirty_ratelimit28 = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %call13, i32 0, i32 7
  %42 = ptrtoint ptr %balanced_dirty_ratelimit28 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %shl27, ptr %balanced_dirty_ratelimit28, align 4
  %memcg_css.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 29
  %43 = ptrtoint ptr %memcg_css.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %memcg_css.i, align 8
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %44, align 8
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %46, i32 0, i32 11
  %47 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %kn.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %48, i32 0, i32 10
  %49 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %id.i.i.i, align 8
  %conv.i.i.i.i = trunc i64 %50 to i32
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %call13, i32 0, i32 8
  %51 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %conv.i.i.i.i, ptr %cgroup_ino, align 4
  %52 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %rctx, align 4
  %54 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 68, i32 noundef %53, ptr noundef %__data, i64 noundef 1, ptr noundef %55, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_balance_dirty_pages(ptr noundef %__data, ptr nocapture noundef readonly %wb, i32 noundef %thresh, i32 noundef %bg_thresh, i32 noundef %dirty, i32 noundef %bdi_thresh, i32 noundef %bdi_dirty, i32 noundef %dirty_ratelimit, i32 noundef %task_ratelimit, i32 noundef %dirtied, i32 noundef %period, i32 noundef %pause, i32 noundef %start_time) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 96) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %add6 = add i32 %bg_thresh, %thresh
  %div74 = lshr i32 %add6, 1
  %bdi = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %wb, align 8
  %call8 = call ptr @bdi_dev_name(ptr noundef %4) #10
  %call9 = call i32 @strscpy_pad(ptr noundef %bdi, ptr noundef %call8, i32 noundef 32) #10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.wb_domain, ptr @global_wb_domain, i32 0, i32 5) to i32))
  %5 = load i32, ptr getelementptr inbounds (%struct.wb_domain, ptr @global_wb_domain, i32 0, i32 5), align 8
  %limit = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %limit to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %limit, align 4
  %7 = load i32, ptr getelementptr inbounds (%struct.wb_domain, ptr @global_wb_domain, i32 0, i32 5), align 8
  %add10 = add i32 %7, %div74
  %div1175 = lshr i32 %add10, 1
  %setpoint = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %setpoint to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %div1175, ptr %setpoint, align 4
  %dirty12 = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call3, i32 0, i32 4
  %9 = ptrtoint ptr %dirty12 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %dirty, ptr %dirty12, align 4
  %mul = mul i32 %div1175, %bdi_thresh
  %add14 = add i32 %thresh, 1
  %div15 = udiv i32 %mul, %add14
  %bdi_setpoint = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call3, i32 0, i32 5
  %10 = ptrtoint ptr %bdi_setpoint to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %div15, ptr %bdi_setpoint, align 4
  %bdi_dirty16 = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call3, i32 0, i32 6
  %11 = ptrtoint ptr %bdi_dirty16 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %bdi_dirty, ptr %bdi_dirty16, align 4
  %shl = shl i32 %dirty_ratelimit, 2
  %dirty_ratelimit17 = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call3, i32 0, i32 7
  %12 = ptrtoint ptr %dirty_ratelimit17 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %shl, ptr %dirty_ratelimit17, align 4
  %shl18 = shl i32 %task_ratelimit, 2
  %task_ratelimit19 = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call3, i32 0, i32 8
  %13 = ptrtoint ptr %task_ratelimit19 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %shl18, ptr %task_ratelimit19, align 4
  %dirtied20 = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call3, i32 0, i32 9
  %14 = ptrtoint ptr %dirtied20 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %dirtied, ptr %dirtied20, align 4
  %15 = call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %15, -16384
  %16 = inttoptr i32 %and.i76 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %task, align 8
  %nr_dirtied_pause = getelementptr inbounds %struct.task_struct, ptr %18, i32 0, i32 185
  %19 = ptrtoint ptr %nr_dirtied_pause to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %nr_dirtied_pause, align 8
  %dirtied_pause = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call3, i32 0, i32 10
  %21 = ptrtoint ptr %dirtied_pause to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %dirtied_pause, align 4
  %22 = load ptr, ptr %task, align 8
  %dirty_paused_when = getelementptr inbounds %struct.task_struct, ptr %22, i32 0, i32 186
  %23 = ptrtoint ptr %dirty_paused_when to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %dirty_paused_when, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %cmp = icmp eq i32 %24, 0
  br i1 %cmp, label %if.end5.cond.end_crit_edge, label %cond.false

if.end5.cond.end_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  br label %cond.end

cond.false:                                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %25 = load volatile i32, ptr @jiffies, align 128
  %sub = sub i32 %25, %24
  %mul27 = mul i32 %sub, 1000
  %div28 = sdiv i32 %mul27, 100
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end5.cond.end_crit_edge
  %cond = phi i32 [ %div28, %cond.false ], [ 0, %if.end5.cond.end_crit_edge ]
  %think = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call3, i32 0, i32 14
  %26 = ptrtoint ptr %think to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %cond, ptr %think, align 4
  %mul29 = mul i32 %period, 1000
  %div30 = udiv i32 %mul29, 100
  %period31 = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call3, i32 0, i32 13
  %27 = ptrtoint ptr %period31 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %div30, ptr %period31, align 4
  %mul32 = mul i32 %pause, 1000
  %div33 = sdiv i32 %mul32, 100
  %pause34 = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call3, i32 0, i32 12
  %28 = ptrtoint ptr %pause34 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %div33, ptr %pause34, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %29 = load volatile i32, ptr @jiffies, align 128
  %sub35 = sub i32 %29, %start_time
  %mul36 = mul i32 %sub35, 1000
  %div37 = udiv i32 %mul36, 100
  %paused = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call3, i32 0, i32 11
  %30 = ptrtoint ptr %paused to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %div37, ptr %paused, align 4
  %memcg_css.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 29
  %31 = ptrtoint ptr %memcg_css.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %memcg_css.i, align 8
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %32, align 8
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %34, i32 0, i32 11
  %35 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %kn.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %36, i32 0, i32 10
  %37 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %id.i.i.i, align 8
  %conv.i.i.i.i = trunc i64 %38 to i32
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call3, i32 0, i32 15
  %39 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %conv.i.i.i.i, ptr %cgroup_ino, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_balance_dirty_pages(ptr noundef %__data, ptr nocapture noundef readonly %wb, i32 noundef %thresh, i32 noundef %bg_thresh, i32 noundef %dirty, i32 noundef %bdi_thresh, i32 noundef %bdi_dirty, i32 noundef %dirty_ratelimit, i32 noundef %task_ratelimit, i32 noundef %dirtied, i32 noundef %period, i32 noundef %pause, i32 noundef %start_time) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 100, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %add17 = add i32 %bg_thresh, %thresh
  %div98 = lshr i32 %add17, 1
  %bdi = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %wb, align 8
  %call19 = call ptr @bdi_dev_name(ptr noundef %28) #10
  %call20 = call i32 @strscpy_pad(ptr noundef %bdi, ptr noundef %call19, i32 noundef 32) #10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.wb_domain, ptr @global_wb_domain, i32 0, i32 5) to i32))
  %29 = load i32, ptr getelementptr inbounds (%struct.wb_domain, ptr @global_wb_domain, i32 0, i32 5), align 8
  %limit = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %limit to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %limit, align 4
  %31 = load i32, ptr getelementptr inbounds (%struct.wb_domain, ptr @global_wb_domain, i32 0, i32 5), align 8
  %add21 = add i32 %31, %div98
  %div2299 = lshr i32 %add21, 1
  %setpoint = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %setpoint to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %div2299, ptr %setpoint, align 4
  %dirty23 = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call13, i32 0, i32 4
  %33 = ptrtoint ptr %dirty23 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %dirty, ptr %dirty23, align 4
  %mul = mul i32 %div2299, %bdi_thresh
  %add25 = add i32 %thresh, 1
  %div26 = udiv i32 %mul, %add25
  %bdi_setpoint = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call13, i32 0, i32 5
  %34 = ptrtoint ptr %bdi_setpoint to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %div26, ptr %bdi_setpoint, align 4
  %bdi_dirty27 = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call13, i32 0, i32 6
  %35 = ptrtoint ptr %bdi_dirty27 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %bdi_dirty, ptr %bdi_dirty27, align 4
  %shl = shl i32 %dirty_ratelimit, 2
  %dirty_ratelimit28 = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call13, i32 0, i32 7
  %36 = ptrtoint ptr %dirty_ratelimit28 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %shl, ptr %dirty_ratelimit28, align 4
  %shl29 = shl i32 %task_ratelimit, 2
  %task_ratelimit30 = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call13, i32 0, i32 8
  %37 = ptrtoint ptr %task_ratelimit30 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %shl29, ptr %task_ratelimit30, align 4
  %dirtied31 = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call13, i32 0, i32 9
  %38 = ptrtoint ptr %dirtied31 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %dirtied, ptr %dirtied31, align 4
  %task = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %39 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %task, align 8
  %nr_dirtied_pause = getelementptr inbounds %struct.task_struct, ptr %40, i32 0, i32 185
  %41 = ptrtoint ptr %nr_dirtied_pause to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %nr_dirtied_pause, align 8
  %dirtied_pause = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call13, i32 0, i32 10
  %43 = ptrtoint ptr %dirtied_pause to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %dirtied_pause, align 4
  %44 = load ptr, ptr %task, align 8
  %dirty_paused_when = getelementptr inbounds %struct.task_struct, ptr %44, i32 0, i32 186
  %45 = ptrtoint ptr %dirty_paused_when to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %dirty_paused_when, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %cmp = icmp eq i32 %46, 0
  br i1 %cmp, label %if.end16.cond.end_crit_edge, label %cond.false

if.end16.cond.end_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  br label %cond.end

cond.false:                                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %47 = load volatile i32, ptr @jiffies, align 128
  %sub38 = sub i32 %47, %46
  %mul39 = mul i32 %sub38, 1000
  %div40 = sdiv i32 %mul39, 100
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end16.cond.end_crit_edge
  %cond = phi i32 [ %div40, %cond.false ], [ 0, %if.end16.cond.end_crit_edge ]
  %think = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call13, i32 0, i32 14
  %48 = ptrtoint ptr %think to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %cond, ptr %think, align 4
  %mul41 = mul i32 %period, 1000
  %div42 = udiv i32 %mul41, 100
  %period43 = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call13, i32 0, i32 13
  %49 = ptrtoint ptr %period43 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %div42, ptr %period43, align 4
  %mul44 = mul i32 %pause, 1000
  %div45 = sdiv i32 %mul44, 100
  %pause46 = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call13, i32 0, i32 12
  %50 = ptrtoint ptr %pause46 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %div45, ptr %pause46, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %51 = load volatile i32, ptr @jiffies, align 128
  %sub47 = sub i32 %51, %start_time
  %mul48 = mul i32 %sub47, 1000
  %div49 = udiv i32 %mul48, 100
  %paused = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call13, i32 0, i32 11
  %52 = ptrtoint ptr %paused to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %div49, ptr %paused, align 4
  %memcg_css.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 29
  %53 = ptrtoint ptr %memcg_css.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %memcg_css.i, align 8
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %54, align 8
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %56, i32 0, i32 11
  %57 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %kn.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %58, i32 0, i32 10
  %59 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %59)
  %60 = load i64, ptr %id.i.i.i, align 8
  %conv.i.i.i.i = trunc i64 %60 to i32
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %call13, i32 0, i32 15
  %61 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %conv.i.i.i.i, ptr %cgroup_ino, align 4
  %62 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %rctx, align 4
  %64 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 100, i32 noundef %63, ptr noundef %__data, i64 noundef 1, ptr noundef %65, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_writeback_sb_inodes_requeue(ptr noundef %__data, ptr noundef %inode) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 56) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_sb_inodes_requeue, ptr %call3, i32 0, i32 1
  %call6 = call ptr @inode_to_bdi(ptr noundef %inode) #10
  %call7 = call ptr @bdi_dev_name(ptr noundef %call6) #10
  %call8 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call7, i32 noundef 32) #10
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %3 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_writeback_sb_inodes_requeue, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %ino, align 4
  %i_state = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 24
  %6 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %i_state, align 8
  %state = getelementptr inbounds %struct.trace_event_raw_writeback_sb_inodes_requeue, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %state, align 4
  %dirtied_when = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 26
  %9 = ptrtoint ptr %dirtied_when to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %dirtied_when, align 4
  %dirtied_when9 = getelementptr inbounds %struct.trace_event_raw_writeback_sb_inodes_requeue, ptr %call3, i32 0, i32 4
  %11 = ptrtoint ptr %dirtied_when9 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %dirtied_when9, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %12 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.i27 = icmp eq i32 %12, 0
  br i1 %tobool.not.i27, label %if.end5.inode_to_wb.exit_crit_edge, label %land.rhs.i

if.end5.inode_to_wb.exit_crit_edge:               ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.rhs.i:                                       ; preds = %if.end5
  %dep_map.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18, i32 0, i32 0, i32 4
  %call.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool1.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i, label %land.rhs.i.inode_to_wb.exit_crit_edge

land.rhs.i.inode_to_wb.exit_crit_edge:            ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.lhs.true.i:                                  ; preds = %land.rhs.i
  %i_mapping.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %13 = ptrtoint ptr %i_mapping.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %i_mapping.i, align 8
  %dep_map2.i = getelementptr inbounds %struct.address_space, ptr %14, i32 0, i32 1, i32 0, i32 0, i32 0, i32 4
  %call.i60.i = call i32 @lock_is_held_type(ptr noundef %dep_map2.i, i32 noundef -1) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i60.i)
  %tobool4.not.i = icmp eq i32 %call.i60.i, 0
  br i1 %tobool4.not.i, label %land.rhs5.i, label %land.lhs.true.i.inode_to_wb.exit_crit_edge

land.lhs.true.i.inode_to_wb.exit_crit_edge:       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.rhs5.i:                                      ; preds = %land.lhs.true.i
  %i_wb.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 30
  %15 = ptrtoint ptr %i_wb.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %i_wb.i, align 4
  %dep_map6.i = getelementptr inbounds %struct.bdi_writeback, ptr %16, i32 0, i32 7, i32 0, i32 0, i32 4
  %call.i61.i = call i32 @lock_is_held_type(ptr noundef %dep_map6.i, i32 noundef -1) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i61.i)
  %tobool8.not.i = icmp eq i32 %call.i61.i, 0
  br i1 %tobool8.not.i, label %land.rhs13.i, label %land.rhs5.i.inode_to_wb.exit_crit_edge

land.rhs5.i.inode_to_wb.exit_crit_edge:           ; preds = %land.rhs5.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.rhs13.i:                                     ; preds = %land.rhs5.i
  %.b54.i = load i1, ptr @inode_to_wb.__already_done, align 1
  br i1 %.b54.i, label %land.rhs13.i.inode_to_wb.exit_crit_edge, label %if.then.i, !prof !670

land.rhs13.i.inode_to_wb.exit_crit_edge:          ; preds = %land.rhs13.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

if.then.i:                                        ; preds = %land.rhs13.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @inode_to_wb.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.139, i32 noundef 272, i32 noundef 9, ptr noundef null) #10
  br label %inode_to_wb.exit

inode_to_wb.exit:                                 ; preds = %if.then.i, %land.rhs13.i.inode_to_wb.exit_crit_edge, %land.rhs5.i.inode_to_wb.exit_crit_edge, %land.lhs.true.i.inode_to_wb.exit_crit_edge, %land.rhs.i.inode_to_wb.exit_crit_edge, %if.end5.inode_to_wb.exit_crit_edge
  %i_wb48.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 30
  %17 = ptrtoint ptr %i_wb48.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %i_wb48.i, align 4
  %memcg_css.i = getelementptr inbounds %struct.bdi_writeback, ptr %18, i32 0, i32 29
  %19 = ptrtoint ptr %memcg_css.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %memcg_css.i, align 8
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %20, align 8
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %22, i32 0, i32 11
  %23 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %kn.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %24, i32 0, i32 10
  %25 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %id.i.i.i, align 8
  %conv.i.i.i.i = trunc i64 %26 to i32
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_writeback_sb_inodes_requeue, ptr %call3, i32 0, i32 5
  %27 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %conv.i.i.i.i, ptr %cgroup_ino, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %inode_to_wb.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_writeback_sb_inodes_requeue(ptr noundef %__data, ptr noundef %inode) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_sb_inodes_requeue, ptr %call13, i32 0, i32 1
  %call17 = call ptr @inode_to_bdi(ptr noundef %inode) #10
  %call18 = call ptr @bdi_dev_name(ptr noundef %call17) #10
  %call19 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call18, i32 noundef 32) #10
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %27 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_writeback_sb_inodes_requeue, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %ino, align 4
  %i_state = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 24
  %30 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %i_state, align 8
  %state = getelementptr inbounds %struct.trace_event_raw_writeback_sb_inodes_requeue, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %state, align 4
  %dirtied_when = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 26
  %33 = ptrtoint ptr %dirtied_when to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %dirtied_when, align 4
  %dirtied_when20 = getelementptr inbounds %struct.trace_event_raw_writeback_sb_inodes_requeue, ptr %call13, i32 0, i32 4
  %35 = ptrtoint ptr %dirtied_when20 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %dirtied_when20, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %36 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.not.i50 = icmp eq i32 %36, 0
  br i1 %tobool.not.i50, label %if.end16.inode_to_wb.exit_crit_edge, label %land.rhs.i

if.end16.inode_to_wb.exit_crit_edge:              ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.rhs.i:                                       ; preds = %if.end16
  %dep_map.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18, i32 0, i32 0, i32 4
  %call.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool1.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i, label %land.rhs.i.inode_to_wb.exit_crit_edge

land.rhs.i.inode_to_wb.exit_crit_edge:            ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.lhs.true.i:                                  ; preds = %land.rhs.i
  %i_mapping.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %37 = ptrtoint ptr %i_mapping.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %i_mapping.i, align 8
  %dep_map2.i = getelementptr inbounds %struct.address_space, ptr %38, i32 0, i32 1, i32 0, i32 0, i32 0, i32 4
  %call.i60.i = call i32 @lock_is_held_type(ptr noundef %dep_map2.i, i32 noundef -1) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i60.i)
  %tobool4.not.i = icmp eq i32 %call.i60.i, 0
  br i1 %tobool4.not.i, label %land.rhs5.i, label %land.lhs.true.i.inode_to_wb.exit_crit_edge

land.lhs.true.i.inode_to_wb.exit_crit_edge:       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.rhs5.i:                                      ; preds = %land.lhs.true.i
  %i_wb.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 30
  %39 = ptrtoint ptr %i_wb.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %i_wb.i, align 4
  %dep_map6.i = getelementptr inbounds %struct.bdi_writeback, ptr %40, i32 0, i32 7, i32 0, i32 0, i32 4
  %call.i61.i = call i32 @lock_is_held_type(ptr noundef %dep_map6.i, i32 noundef -1) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i61.i)
  %tobool8.not.i = icmp eq i32 %call.i61.i, 0
  br i1 %tobool8.not.i, label %land.rhs13.i, label %land.rhs5.i.inode_to_wb.exit_crit_edge

land.rhs5.i.inode_to_wb.exit_crit_edge:           ; preds = %land.rhs5.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.rhs13.i:                                     ; preds = %land.rhs5.i
  %.b54.i = load i1, ptr @inode_to_wb.__already_done, align 1
  br i1 %.b54.i, label %land.rhs13.i.inode_to_wb.exit_crit_edge, label %if.then.i, !prof !670

land.rhs13.i.inode_to_wb.exit_crit_edge:          ; preds = %land.rhs13.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

if.then.i:                                        ; preds = %land.rhs13.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @inode_to_wb.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.139, i32 noundef 272, i32 noundef 9, ptr noundef null) #10
  br label %inode_to_wb.exit

inode_to_wb.exit:                                 ; preds = %if.then.i, %land.rhs13.i.inode_to_wb.exit_crit_edge, %land.rhs5.i.inode_to_wb.exit_crit_edge, %land.lhs.true.i.inode_to_wb.exit_crit_edge, %land.rhs.i.inode_to_wb.exit_crit_edge, %if.end16.inode_to_wb.exit_crit_edge
  %i_wb48.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 30
  %41 = ptrtoint ptr %i_wb48.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %i_wb48.i, align 4
  %memcg_css.i = getelementptr inbounds %struct.bdi_writeback, ptr %42, i32 0, i32 29
  %43 = ptrtoint ptr %memcg_css.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %memcg_css.i, align 8
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %44, align 8
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %46, i32 0, i32 11
  %47 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %kn.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %48, i32 0, i32 10
  %49 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %id.i.i.i, align 8
  %conv.i.i.i.i = trunc i64 %50 to i32
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_writeback_sb_inodes_requeue, ptr %call13, i32 0, i32 5
  %51 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %conv.i.i.i.i, ptr %cgroup_ino, align 4
  %52 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %rctx, align 4
  %54 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 60, i32 noundef %53, ptr noundef %__data, i64 noundef 1, ptr noundef %55, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %inode_to_wb.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_writeback_congest_waited_template(ptr noundef %__data, i32 noundef %usec_timeout, i32 noundef %usec_delayed) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %usec_timeout6 = getelementptr inbounds %struct.trace_event_raw_writeback_congest_waited_template, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %usec_timeout6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %usec_timeout, ptr %usec_timeout6, align 4
  %usec_delayed7 = getelementptr inbounds %struct.trace_event_raw_writeback_congest_waited_template, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %usec_delayed7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %usec_delayed, ptr %usec_delayed7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_writeback_congest_waited_template(ptr noundef %__data, i32 noundef %usec_timeout, i32 noundef %usec_delayed) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %usec_timeout17 = getelementptr inbounds %struct.trace_event_raw_writeback_congest_waited_template, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %usec_timeout17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %usec_timeout, ptr %usec_timeout17, align 4
  %usec_delayed18 = getelementptr inbounds %struct.trace_event_raw_writeback_congest_waited_template, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %usec_delayed18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %usec_delayed, ptr %usec_delayed18, align 4
  %29 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rctx, align 4
  %31 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %30, ptr noundef %__data, i64 noundef 1, ptr noundef %32, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_writeback_single_inode_template(ptr noundef %__data, ptr noundef %inode, ptr nocapture noundef readonly %wbc, i32 noundef %nr_to_write) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 68) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %call3, i32 0, i32 1
  %call6 = call ptr @inode_to_bdi(ptr noundef %inode) #10
  %call7 = call ptr @bdi_dev_name(ptr noundef %call6) #10
  %call8 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call7, i32 noundef 32) #10
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %3 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %ino, align 4
  %i_state = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 24
  %6 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %i_state, align 8
  %state = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %state, align 4
  %dirtied_when = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 26
  %9 = ptrtoint ptr %dirtied_when to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %dirtied_when, align 4
  %dirtied_when9 = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %call3, i32 0, i32 4
  %11 = ptrtoint ptr %dirtied_when9 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %dirtied_when9, align 4
  %i_mapping = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %12 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %i_mapping, align 8
  %writeback_index = getelementptr inbounds %struct.address_space, ptr %13, i32 0, i32 8
  %14 = ptrtoint ptr %writeback_index to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %writeback_index, align 4
  %writeback_index10 = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %call3, i32 0, i32 5
  %16 = ptrtoint ptr %writeback_index10 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %writeback_index10, align 4
  %nr_to_write11 = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %call3, i32 0, i32 6
  %17 = ptrtoint ptr %nr_to_write11 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %nr_to_write, ptr %nr_to_write11, align 4
  %18 = ptrtoint ptr %wbc to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %wbc, align 8
  %sub = sub i32 %nr_to_write, %19
  %wrote = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %call3, i32 0, i32 7
  %20 = ptrtoint ptr %wrote to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %sub, ptr %wrote, align 4
  %wb.i = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 6
  %21 = ptrtoint ptr %wb.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %wb.i, align 8
  %tobool.not.i36 = icmp eq ptr %22, null
  br i1 %tobool.not.i36, label %if.end5.__trace_wbc_assign_cgroup.exit_crit_edge, label %if.then.i

if.end5.__trace_wbc_assign_cgroup.exit_crit_edge: ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  br label %__trace_wbc_assign_cgroup.exit

if.then.i:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  %memcg_css.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %22, i32 0, i32 29
  %23 = ptrtoint ptr %memcg_css.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %memcg_css.i.i, align 8
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %24, align 8
  %kn.i.i.i = getelementptr inbounds %struct.cgroup, ptr %26, i32 0, i32 11
  %27 = ptrtoint ptr %kn.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %kn.i.i.i, align 8
  %id.i.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %28, i32 0, i32 10
  %29 = ptrtoint ptr %id.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %id.i.i.i.i, align 8
  %conv.i.i.i.i.i = trunc i64 %30 to i32
  br label %__trace_wbc_assign_cgroup.exit

__trace_wbc_assign_cgroup.exit:                   ; preds = %if.then.i, %if.end5.__trace_wbc_assign_cgroup.exit_crit_edge
  %retval.0.i37 = phi i32 [ %conv.i.i.i.i.i, %if.then.i ], [ 1, %if.end5.__trace_wbc_assign_cgroup.exit_crit_edge ]
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %call3, i32 0, i32 8
  %31 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %retval.0.i37, ptr %cgroup_ino, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %__trace_wbc_assign_cgroup.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_writeback_single_inode_template(ptr noundef %__data, ptr noundef %inode, ptr nocapture noundef readonly %wbc, i32 noundef %nr_to_write) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 68, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %call13, i32 0, i32 1
  %call17 = call ptr @inode_to_bdi(ptr noundef %inode) #10
  %call18 = call ptr @bdi_dev_name(ptr noundef %call17) #10
  %call19 = call i32 @strscpy_pad(ptr noundef %name, ptr noundef %call18, i32 noundef 32) #10
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %27 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %ino, align 4
  %i_state = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 24
  %30 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %i_state, align 8
  %state = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %state, align 4
  %dirtied_when = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 26
  %33 = ptrtoint ptr %dirtied_when to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %dirtied_when, align 4
  %dirtied_when20 = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %call13, i32 0, i32 4
  %35 = ptrtoint ptr %dirtied_when20 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %dirtied_when20, align 4
  %i_mapping = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %36 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %i_mapping, align 8
  %writeback_index = getelementptr inbounds %struct.address_space, ptr %37, i32 0, i32 8
  %38 = ptrtoint ptr %writeback_index to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %writeback_index, align 4
  %writeback_index21 = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %call13, i32 0, i32 5
  %40 = ptrtoint ptr %writeback_index21 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %writeback_index21, align 4
  %nr_to_write22 = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %call13, i32 0, i32 6
  %41 = ptrtoint ptr %nr_to_write22 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %nr_to_write, ptr %nr_to_write22, align 4
  %42 = ptrtoint ptr %wbc to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %wbc, align 8
  %sub24 = sub i32 %nr_to_write, %43
  %wrote = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %call13, i32 0, i32 7
  %44 = ptrtoint ptr %wrote to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %sub24, ptr %wrote, align 4
  %wb.i = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 6
  %45 = ptrtoint ptr %wb.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %wb.i, align 8
  %tobool.not.i60 = icmp eq ptr %46, null
  br i1 %tobool.not.i60, label %if.end16.__trace_wbc_assign_cgroup.exit_crit_edge, label %if.then.i

if.end16.__trace_wbc_assign_cgroup.exit_crit_edge: ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  br label %__trace_wbc_assign_cgroup.exit

if.then.i:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  %memcg_css.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %46, i32 0, i32 29
  %47 = ptrtoint ptr %memcg_css.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %memcg_css.i.i, align 8
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %48, align 8
  %kn.i.i.i = getelementptr inbounds %struct.cgroup, ptr %50, i32 0, i32 11
  %51 = ptrtoint ptr %kn.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %kn.i.i.i, align 8
  %id.i.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %52, i32 0, i32 10
  %53 = ptrtoint ptr %id.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %id.i.i.i.i, align 8
  %conv.i.i.i.i.i = trunc i64 %54 to i32
  br label %__trace_wbc_assign_cgroup.exit

__trace_wbc_assign_cgroup.exit:                   ; preds = %if.then.i, %if.end16.__trace_wbc_assign_cgroup.exit_crit_edge
  %retval.0.i = phi i32 [ %conv.i.i.i.i.i, %if.then.i ], [ 1, %if.end16.__trace_wbc_assign_cgroup.exit_crit_edge ]
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %call13, i32 0, i32 8
  %55 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %retval.0.i, ptr %cgroup_ino, align 4
  %56 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %rctx, align 4
  %58 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 68, i32 noundef %57, ptr noundef %__data, i64 noundef 1, ptr noundef %59, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %__trace_wbc_assign_cgroup.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_writeback_inode_template(ptr noundef %__data, ptr nocapture noundef readonly %inode) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #10
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !670

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !671

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #10
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #10
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %3 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %i_sb, align 4
  %s_dev = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_writeback_inode_template, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 4
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %8 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_writeback_inode_template, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %ino, align 4
  %i_state = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 24
  %11 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %i_state, align 8
  %state = getelementptr inbounds %struct.trace_event_raw_writeback_inode_template, ptr %call3, i32 0, i32 3
  %13 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %state, align 4
  %14 = ptrtoint ptr %inode to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %inode, align 8
  %mode = getelementptr inbounds %struct.trace_event_raw_writeback_inode_template, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %mode to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 %15, ptr %mode, align 4
  %dirtied_when = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 26
  %17 = ptrtoint ptr %dirtied_when to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %dirtied_when, align 4
  %dirtied_when6 = getelementptr inbounds %struct.trace_event_raw_writeback_inode_template, ptr %call3, i32 0, i32 5
  %19 = ptrtoint ptr %dirtied_when6 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %dirtied_when6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_writeback_inode_template(ptr noundef %__data, ptr nocapture noundef readonly %inode) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #10
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !672
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #10
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #10
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #10
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #10
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !660) #10
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %27 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %i_sb, align 4
  %s_dev = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_writeback_inode_template, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 4
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %32 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_writeback_inode_template, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %ino, align 4
  %i_state = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 24
  %35 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %i_state, align 8
  %state = getelementptr inbounds %struct.trace_event_raw_writeback_inode_template, ptr %call13, i32 0, i32 3
  %37 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %state, align 4
  %38 = ptrtoint ptr %inode to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %inode, align 8
  %mode = getelementptr inbounds %struct.trace_event_raw_writeback_inode_template, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %mode to i32
  call void @__asan_store2_noabort(i32 %40)
  store i16 %39, ptr %mode, align 4
  %dirtied_when = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 26
  %41 = ptrtoint ptr %dirtied_when to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %dirtied_when, align 4
  %dirtied_when17 = getelementptr inbounds %struct.trace_event_raw_writeback_inode_template, ptr %call13, i32 0, i32 5
  %43 = ptrtoint ptr %dirtied_when17 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %dirtied_when17, align 4
  %44 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %rctx, align 4
  %46 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %45, ptr noundef %__data, i64 noundef 1, ptr noundef %47, ptr noundef %11, ptr noundef null) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_writeback_folio_template(ptr noundef %__data, ptr noundef %folio, ptr noundef %mapping) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %folio to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %mapping to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_writeback_dirty_inode_template(ptr noundef %__data, ptr noundef %inode, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %inode to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %flags to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_inode_foreign_history(ptr noundef %__data, ptr noundef %inode, ptr noundef %wbc, i32 noundef %history) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %inode to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %wbc to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %history to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_inode_switch_wbs(ptr noundef %__data, ptr noundef %inode, ptr noundef %old_wb, ptr noundef %new_wb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %inode to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %old_wb to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %new_wb to i32
  %conv8 = zext i32 %2 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_track_foreign_dirty(ptr noundef %__data, ptr noundef %folio, ptr noundef %wb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %folio to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %wb to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_flush_foreign(ptr noundef %__data, ptr noundef %wb, i32 noundef %frn_bdi_id, i32 noundef %frn_memcg_id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %wb to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %frn_bdi_id to i64
  %conv8 = zext i32 %frn_memcg_id to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_writeback_write_inode_template(ptr noundef %__data, ptr noundef %inode, ptr noundef %wbc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %inode to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %wbc to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_writeback_work_class(ptr noundef %__data, ptr noundef %wb, ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %wb to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %work to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_writeback_pages_written(ptr noundef %__data, i32 noundef %pages_written) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %conv = zext i32 %pages_written to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_writeback_class(ptr noundef %__data, ptr noundef %wb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %wb to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_writeback_bdi_register(ptr noundef %__data, ptr noundef %bdi) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %bdi to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_wbc_class(ptr noundef %__data, ptr noundef %wbc, ptr noundef %bdi) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %wbc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %bdi to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_writeback_queue_io(ptr noundef %__data, ptr noundef %wb, ptr noundef %work, i32 noundef %dirtied_before, i32 noundef %moved) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %wb to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %work to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %dirtied_before to i64
  %conv12 = zext i32 %moved to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_global_dirty_state(ptr noundef %__data, i32 noundef %background_thresh, i32 noundef %dirty_thresh) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %conv = zext i32 %background_thresh to i64
  %conv4 = zext i32 %dirty_thresh to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_bdi_dirty_ratelimit(ptr noundef %__data, ptr noundef %wb, i32 noundef %dirty_rate, i32 noundef %task_ratelimit) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %wb to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %dirty_rate to i64
  %conv8 = zext i32 %task_ratelimit to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_balance_dirty_pages(ptr noundef %__data, ptr noundef %wb, i32 noundef %thresh, i32 noundef %bg_thresh, i32 noundef %dirty, i32 noundef %bdi_thresh, i32 noundef %bdi_dirty, i32 noundef %dirty_ratelimit, i32 noundef %task_ratelimit, i32 noundef %dirtied, i32 noundef %period, i32 noundef %pause, i32 noundef %start_time) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %wb to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %thresh to i64
  %conv8 = zext i32 %bg_thresh to i64
  %conv12 = zext i32 %dirty to i64
  %conv16 = zext i32 %bdi_thresh to i64
  %conv20 = zext i32 %bdi_dirty to i64
  %conv24 = zext i32 %dirty_ratelimit to i64
  %conv28 = zext i32 %task_ratelimit to i64
  %conv32 = zext i32 %dirtied to i64
  %conv36 = zext i32 %period to i64
  %conv40 = zext i32 %pause to i64
  %conv44 = zext i32 %start_time to i64
  tail call void @bpf_trace_run12(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20, i64 noundef %conv24, i64 noundef %conv28, i64 noundef %conv32, i64 noundef %conv36, i64 noundef %conv40, i64 noundef %conv44) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_writeback_sb_inodes_requeue(ptr noundef %__data, ptr noundef %inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %inode to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_writeback_congest_waited_template(ptr noundef %__data, i32 noundef %usec_timeout, i32 noundef %usec_delayed) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %conv = zext i32 %usec_timeout to i64
  %conv4 = zext i32 %usec_delayed to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_writeback_single_inode_template(ptr noundef %__data, ptr noundef %inode, ptr noundef %wbc, i32 noundef %nr_to_write) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %inode to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %wbc to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %nr_to_write to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_writeback_inode_template(ptr noundef %__data, ptr noundef %inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %inode to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wb_wait_for_completion(ptr noundef %done) local_unnamed_addr #0 align 64 {
entry:
  %__wq_entry = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %done, i32 noundef 4) #10
  tail call void @llvm.prefetch.p0(ptr %done, i32 1, i32 3, i32 1) #10
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %done, ptr %done, i32 1, ptr elementtype(i32) %done) #10, !srcloc !673
  tail call void @__might_sleep(ptr noundef nonnull @.str.8, i32 noundef 190) #10
  %call.i.i17 = tail call zeroext i1 @__kasan_check_read(ptr noundef %done, i32 noundef 4) #10
  %1 = ptrtoint ptr %done to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %done, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.do.end12_crit_edge, label %if.end

entry.do.end12_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end12

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry) #10
  %3 = call ptr @memset(ptr %__wq_entry, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry, i32 noundef 0) #10
  %waitq = getelementptr inbounds %struct.wb_completion, ptr %done, i32 0, i32 1
  %4 = ptrtoint ptr %waitq to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %waitq, align 4
  %call521 = call i32 @prepare_to_wait_event(ptr noundef %5, ptr noundef nonnull %__wq_entry, i32 noundef 2) #10
  %call.i.i1822 = call zeroext i1 @__kasan_check_read(ptr noundef %done, i32 noundef 4) #10
  %6 = ptrtoint ptr %done to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %done, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool8.not23 = icmp eq i32 %7, 0
  br i1 %tobool8.not23, label %if.end.for.end_crit_edge, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  br label %cleanup

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end

cleanup:                                          ; preds = %cleanup.cleanup_crit_edge, %if.end.cleanup_crit_edge
  call void @schedule() #10
  %8 = ptrtoint ptr %waitq to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %waitq, align 4
  %call5 = call i32 @prepare_to_wait_event(ptr noundef %9, ptr noundef nonnull %__wq_entry, i32 noundef 2) #10
  %call.i.i18 = call zeroext i1 @__kasan_check_read(ptr noundef %done, i32 noundef 4) #10
  %10 = ptrtoint ptr %done to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %done, align 4
  %tobool8.not = icmp eq i32 %11, 0
  br i1 %tobool8.not, label %cleanup.for.end_crit_edge, label %cleanup.cleanup_crit_edge

cleanup.cleanup_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %if.end.for.end_crit_edge
  %12 = ptrtoint ptr %waitq to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %waitq, align 4
  call void @finish_wait(ptr noundef %13, ptr noundef nonnull %__wq_entry) #10
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry) #10
  br label %do.end12

do.end12:                                         ; preds = %for.end, %entry.do.end12_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_wait_entry(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prepare_to_wait_event(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__inode_attach_wb(ptr noundef %inode, ptr noundef %page) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @inode_to_bdi(ptr noundef %inode) #10
  %call.i43 = tail call ptr @inode_to_bdi(ptr noundef %inode) #10
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_on_dfl_key, i32 1), ptr blockaddress(@__inode_attach_wb, %if.end8)) #10
          to label %land.lhs.true.i [label %if.end8], !srcloc !674

land.lhs.true.i:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @io_cgrp_subsys_on_dfl_key, i32 1), ptr blockaddress(@__inode_attach_wb, %if.end8)) #10
          to label %land.lhs.true18.i [label %if.end8], !srcloc !674

land.lhs.true18.i:                                ; preds = %land.lhs.true.i
  %capabilities.i = getelementptr inbounds %struct.backing_dev_info, ptr %call.i43, i32 0, i32 6
  %0 = ptrtoint ptr %capabilities.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %capabilities.i, align 8
  %and.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool19.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool19.not.i, label %land.lhs.true18.i.if.end8_crit_edge, label %land.rhs.i

land.lhs.true18.i.if.end8_crit_edge:              ; preds = %land.lhs.true18.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end8

land.rhs.i:                                       ; preds = %land.lhs.true18.i
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb.i, align 4
  %s_iflags.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %s_iflags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %s_iflags.i, align 8
  %and20.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20.i)
  %tobool21.i.not = icmp eq i32 %and20.i, 0
  br i1 %tobool21.i.not, label %land.rhs.i.if.end8_crit_edge, label %if.then

land.rhs.i.if.end8_crit_edge:                     ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end8

if.then:                                          ; preds = %land.rhs.i
  %tobool.not = icmp eq ptr %page, null
  br i1 %tobool.not, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #12
  %call3 = tail call ptr @mem_cgroup_css_from_page(ptr noundef nonnull %page) #10
  %call4 = tail call ptr @wb_get_create(ptr noundef %call, ptr noundef %call3, i32 noundef 2592) #10
  br label %if.end8

if.else:                                          ; preds = %if.then
  %6 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i44 = and i32 %6, -16384
  %7 = inttoptr i32 %and.i44 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task, align 8
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %11, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !675
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #10
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i.i, label %if.else.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

if.else.rcu_read_lock.exit.i_crit_edge:           ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %if.else
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 696, ptr noundef nonnull @.str.141) #10
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %if.else.rcu_read_lock.exit.i_crit_edge
  %cgroups.i.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 164
  %flags.i.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 3
  br label %while.cond.i

while.cond.i:                                     ; preds = %do.end.i, %rcu_read_lock.exit.i
  %12 = ptrtoint ptr %cgroups.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %cgroups.i.i, align 16
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i1.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i1.i, label %lor.lhs.false.i.i, label %while.cond.i.task_css.exit.i_crit_edge

while.cond.i.task_css.exit.i_crit_edge:           ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %task_css.exit.i

lor.lhs.false.i.i:                                ; preds = %while.cond.i
  %call.i2.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i2.i.i)
  %tobool3.not.i.i = icmp eq i32 %call.i2.i.i, 0
  br i1 %tobool3.not.i.i, label %lor.lhs.false4.i.i, label %lor.lhs.false.i.i.task_css.exit.i_crit_edge

lor.lhs.false.i.i.task_css.exit.i_crit_edge:      ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %task_css.exit.i

lor.lhs.false4.i.i:                               ; preds = %lor.lhs.false.i.i
  %14 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool5.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool5.not.i.i, label %lor.lhs.false6.i.i, label %lor.lhs.false4.i.i.task_css.exit.i_crit_edge

lor.lhs.false4.i.i.task_css.exit.i_crit_edge:     ; preds = %lor.lhs.false4.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %task_css.exit.i

lor.lhs.false6.i.i:                               ; preds = %lor.lhs.false4.i.i
  %call7.i.i = tail call i32 @rcu_read_lock_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i.i)
  %tobool8.not.i.i = icmp eq i32 %call7.i.i, 0
  br i1 %tobool8.not.i.i, label %land.lhs.true.i2.i, label %lor.lhs.false6.i.i.task_css.exit.i_crit_edge

lor.lhs.false6.i.i.task_css.exit.i_crit_edge:     ; preds = %lor.lhs.false6.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %task_css.exit.i

land.lhs.true.i2.i:                               ; preds = %lor.lhs.false6.i.i
  %call9.i.i = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i)
  %tobool10.not.i.i = icmp eq i32 %call9.i.i, 0
  br i1 %tobool10.not.i.i, label %land.lhs.true.i2.i.task_css.exit.i_crit_edge, label %land.lhs.true11.i.i

land.lhs.true.i2.i.task_css.exit.i_crit_edge:     ; preds = %land.lhs.true.i2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %task_css.exit.i

land.lhs.true11.i.i:                              ; preds = %land.lhs.true.i2.i
  %.b1.i.i = load i1, ptr @task_css.__warned, align 1
  br i1 %.b1.i.i, label %land.lhs.true11.i.i.task_css.exit.i_crit_edge, label %if.then.i3.i

land.lhs.true11.i.i.task_css.exit.i_crit_edge:    ; preds = %land.lhs.true11.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %task_css.exit.i

if.then.i3.i:                                     ; preds = %land.lhs.true11.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @task_css.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.132, i32 noundef 494, ptr noundef nonnull @.str.133) #10
  br label %task_css.exit.i

task_css.exit.i:                                  ; preds = %if.then.i3.i, %land.lhs.true11.i.i.task_css.exit.i_crit_edge, %land.lhs.true.i2.i.task_css.exit.i_crit_edge, %lor.lhs.false6.i.i.task_css.exit.i_crit_edge, %lor.lhs.false4.i.i.task_css.exit.i_crit_edge, %lor.lhs.false.i.i.task_css.exit.i_crit_edge, %while.cond.i.task_css.exit.i_crit_edge
  %arrayidx.i.i = getelementptr [14 x ptr], ptr %13, i32 0, i32 4
  %16 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx.i.i, align 4
  %call1.i = tail call fastcc zeroext i1 @css_tryget(ptr noundef %17) #10
  br i1 %call1.i, label %while.end.i, label %do.end.i, !prof !670

do.end.i:                                         ; preds = %task_css.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !676
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #10, !srcloc !677
  br label %while.cond.i

while.end.i:                                      ; preds = %task_css.exit.i
  %call.i4.i = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i4.i, label %while.end.i.task_get_css.exit_crit_edge, label %land.lhs.true.i7.i

while.end.i.task_get_css.exit_crit_edge:          ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %task_get_css.exit

land.lhs.true.i7.i:                               ; preds = %while.end.i
  %call1.i5.i = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i5.i)
  %tobool.not.i6.i = icmp eq i32 %call1.i5.i, 0
  br i1 %tobool.not.i6.i, label %land.lhs.true.i7.i.task_get_css.exit_crit_edge, label %land.lhs.true2.i9.i

land.lhs.true.i7.i.task_get_css.exit_crit_edge:   ; preds = %land.lhs.true.i7.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %task_get_css.exit

land.lhs.true2.i9.i:                              ; preds = %land.lhs.true.i7.i
  %.b4.i8.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i8.i, label %land.lhs.true2.i9.i.task_get_css.exit_crit_edge, label %if.then.i10.i

land.lhs.true2.i9.i.task_get_css.exit_crit_edge:  ; preds = %land.lhs.true2.i9.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %task_get_css.exit

if.then.i10.i:                                    ; preds = %land.lhs.true2.i9.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 724, ptr noundef nonnull @.str.142) #10
  br label %task_get_css.exit

task_get_css.exit:                                ; preds = %if.then.i10.i, %land.lhs.true2.i9.i.task_get_css.exit_crit_edge, %land.lhs.true.i7.i.task_get_css.exit_crit_edge, %while.end.i.task_get_css.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !678
  %18 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i11.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i.i.i11.i to ptr
  %preempt_count.i.i.i.i12.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i.i.i12.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i.i.i12.i, align 4
  %sub.i.i.i.i = add i32 %21, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i12.i, align 4
  tail call void @rcu_read_unlock_strict() #10
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #10
  %call7 = tail call ptr @wb_get_create(ptr noundef %call, ptr noundef %17, i32 noundef 2592) #10
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %17, i32 0, i32 7
  %22 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %flags.i, align 4
  %and.i45 = and i32 %23, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i45)
  %tobool.not.i = icmp eq i32 %and.i45, 0
  br i1 %tobool.not.i, label %if.then.i, label %task_get_css.exit.if.end8_crit_edge

task_get_css.exit.if.end8_crit_edge:              ; preds = %task_get_css.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end8

if.then.i:                                        ; preds = %task_get_css.exit
  call void @__sanitizer_cov_trace_pc() #12
  %refcnt.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %17, i32 0, i32 2
  tail call fastcc void @percpu_ref_put_many(ptr noundef %refcnt.i, i32 noundef 1) #10
  br label %if.end8

if.end8:                                          ; preds = %if.then.i, %task_get_css.exit.if.end8_crit_edge, %if.then2, %land.rhs.i.if.end8_crit_edge, %land.lhs.true18.i.if.end8_crit_edge, %land.lhs.true.i, %entry
  %wb.1 = phi ptr [ %call4, %if.then2 ], [ null, %land.rhs.i.if.end8_crit_edge ], [ null, %entry ], [ null, %land.lhs.true.i ], [ %call7, %task_get_css.exit.if.end8_crit_edge ], [ %call7, %if.then.i ], [ null, %land.lhs.true18.i.if.end8_crit_edge ]
  %tobool9.not = icmp eq ptr %wb.1, null
  %wb11 = getelementptr inbounds %struct.backing_dev_info, ptr %call, i32 0, i32 11
  %spec.select = select i1 %tobool9.not, ptr %wb11, ptr %wb.1
  %i_wb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 30
  %call.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %i_wb, i32 noundef 4) #10
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !679
  %24 = ptrtoint ptr %spec.select to i32
  tail call void @llvm.prefetch.p0(ptr %i_wb, i32 1, i32 3, i32 1) #10
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %if.end8
  %25 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %i_wb, i32 0, i32 %24) #10, !srcloc !680
  %asmresult.i = extractvalue { i32, i32 } %25, 0
  %tobool.not.i46 = icmp eq i32 %asmresult.i, 0
  br i1 %tobool.not.i46, label %__cmpxchg.exit, label %do.body.i.do.body.i_crit_edge

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body.i

__cmpxchg.exit:                                   ; preds = %do.body.i
  %asmresult1.i = extractvalue { i32, i32 } %25, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !681
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult1.i)
  %tobool28.not = icmp eq i32 %asmresult1.i, 0
  br i1 %tobool28.not, label %__cmpxchg.exit.if.end32_crit_edge, label %if.then31, !prof !670

__cmpxchg.exit.if.end32_crit_edge:                ; preds = %__cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end32

if.then31:                                        ; preds = %__cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #12
  tail call fastcc void @wb_put(ptr noundef %spec.select)
  br label %if.end32

if.end32:                                         ; preds = %if.then31, %__cmpxchg.exit.if.end32_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @inode_to_bdi(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mem_cgroup_css_from_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @wb_get_create(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wb_put(ptr noundef %wb) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %wb, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %land.rhs.i, label %if.end39.critedge.i

land.rhs.i:                                       ; preds = %entry
  %.b49.i = load i1, ptr @wb_put_many.__already_done, align 1
  br i1 %.b49.i, label %land.rhs.i.wb_put_many.exit_crit_edge, label %if.then.i, !prof !670

land.rhs.i.wb_put_many.exit_crit_edge:            ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_put_many.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @wb_put_many.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.134, i32 noundef 253, i32 noundef 9, ptr noundef null) #10
  br label %wb_put_many.exit

if.end39.critedge.i:                              ; preds = %entry
  %wb41.i = getelementptr inbounds %struct.backing_dev_info, ptr %1, i32 0, i32 11
  %cmp.not.i = icmp eq ptr %wb41.i, %wb
  br i1 %cmp.not.i, label %if.end39.critedge.i.wb_put_many.exit_crit_edge, label %if.then42.i

if.end39.critedge.i.wb_put_many.exit_crit_edge:   ; preds = %if.end39.critedge.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_put_many.exit

if.then42.i:                                      ; preds = %if.end39.critedge.i
  call void @__sanitizer_cov_trace_pc() #12
  %refcnt.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 27
  tail call fastcc void @percpu_ref_put_many(ptr noundef %refcnt.i, i32 noundef 1) #10
  br label %wb_put_many.exit

wb_put_many.exit:                                 ; preds = %if.then42.i, %if.end39.critedge.i.wb_put_many.exit_crit_edge, %if.then.i, %land.rhs.i.wb_put_many.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @cleanup_offline_cgwb(ptr noundef %wb) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 1024) #13
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @isw_nr_in_flight, i32 noundef 4) #10
  tail call void @llvm.prefetch.p0(ptr nonnull @isw_nr_in_flight, i32 1, i32 3, i32 1) #10
  %1 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @isw_nr_in_flight, ptr nonnull @isw_nr_in_flight, i32 1, ptr nonnull elementtype(i32) @isw_nr_in_flight) #10, !srcloc !682
  %memcg_css3 = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 29
  %2 = ptrtoint ptr %memcg_css3 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %memcg_css3, align 8
  %new_wb = getelementptr inbounds %struct.inode_switch_wbs_context, ptr %call7.i.i, i32 0, i32 1
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.end
  %.pn = phi ptr [ %3, %if.end ], [ %memcg_css.0, %for.body.for.cond_crit_edge ]
  %memcg_css.0.in = getelementptr inbounds %struct.cgroup_subsys_state, ptr %.pn, i32 0, i32 12
  %4 = ptrtoint ptr %memcg_css.0.in to i32
  call void @__asan_load4_noabort(i32 %4)
  %memcg_css.0 = load ptr, ptr %memcg_css.0.in, align 8
  %tobool4.not = icmp eq ptr %memcg_css.0, null
  br i1 %tobool4.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %5 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %wb, align 8
  %call5 = tail call ptr @wb_get_create(ptr noundef %6, ptr noundef nonnull %memcg_css.0, i32 noundef 3264) #10
  %7 = ptrtoint ptr %new_wb to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %call5, ptr %new_wb, align 8
  %tobool7.not = icmp eq ptr %call5, null
  br i1 %tobool7.not, label %for.body.for.cond_crit_edge, label %for.body.if.end20_crit_edge

for.body.if.end20_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end20

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %8 = ptrtoint ptr %new_wb to i32
  call void @__asan_load4_noabort(i32 %8)
  %.pr = load ptr, ptr %new_wb, align 8
  %tobool12.not = icmp eq ptr %.pr, null
  br i1 %tobool12.not, label %if.then16, label %for.end.if.end20_crit_edge, !prof !671

for.end.if.end20_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end20

if.then16:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #12
  %9 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %wb, align 8
  %wb18 = getelementptr inbounds %struct.backing_dev_info, ptr %10, i32 0, i32 11
  %11 = ptrtoint ptr %new_wb to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %wb18, ptr %new_wb, align 8
  br label %if.end20

if.end20:                                         ; preds = %if.then16, %for.end.if.end20_crit_edge, %for.body.if.end20_crit_edge
  %list_lock = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 7
  tail call void @_raw_spin_lock(ptr noundef %list_lock) #10
  %b_attached = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 33
  %12 = ptrtoint ptr %b_attached to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pn9298 = load ptr, ptr %b_attached, align 4
  %cmp.not100 = icmp eq ptr %.pn9298, %b_attached
  br i1 %cmp.not100, label %for.end39.thread109, label %if.end20.for.body25_crit_edge

if.end20.for.body25_crit_edge:                    ; preds = %if.end20
  br label %for.body25

for.end39.thread109:                              ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @_raw_spin_unlock(ptr noundef %list_lock) #10
  br label %if.then42

for.body25:                                       ; preds = %for.inc33.for.body25_crit_edge, %if.end20.for.body25_crit_edge
  %.pn92102 = phi ptr [ %.pn92, %for.inc33.for.body25_crit_edge ], [ %.pn9298, %if.end20.for.body25_crit_edge ]
  %nr.0101 = phi i32 [ %nr.1, %for.inc33.for.body25_crit_edge ], [ 0, %if.end20.for.body25_crit_edge ]
  %inode.0103 = getelementptr i8, ptr %.pn92102, i32 -316
  %13 = ptrtoint ptr %new_wb to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %new_wb, align 8
  %call27 = tail call fastcc zeroext i1 @inode_prepare_wbs_switch(ptr noundef %inode.0103, ptr noundef %14)
  br i1 %call27, label %if.end29, label %for.body25.for.inc33_crit_edge

for.body25.for.inc33_crit_edge:                   ; preds = %for.body25
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.inc33

if.end29:                                         ; preds = %for.body25
  %inc = add i32 %nr.0101, 1
  %arrayidx = getelementptr %struct.inode_switch_wbs_context, ptr %call7.i.i, i32 0, i32 2, i32 %nr.0101
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %inode.0103, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 239, i32 %inc)
  %cmp30 = icmp ugt i32 %inc, 239
  br i1 %cmp30, label %for.end39.thread, label %if.end29.for.inc33_crit_edge

if.end29.for.inc33_crit_edge:                     ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.inc33

for.end39.thread:                                 ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @_raw_spin_unlock(ptr noundef %list_lock) #10
  br label %do.body

for.inc33:                                        ; preds = %if.end29.for.inc33_crit_edge, %for.body25.for.inc33_crit_edge
  %nr.1 = phi i32 [ %inc, %if.end29.for.inc33_crit_edge ], [ %nr.0101, %for.body25.for.inc33_crit_edge ]
  %16 = ptrtoint ptr %.pn92102 to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn92 = load ptr, ptr %.pn92102, align 4
  %cmp.not = icmp eq ptr %.pn92, %b_attached
  br i1 %cmp.not, label %for.end39, label %for.inc33.for.body25_crit_edge

for.inc33.for.body25_crit_edge:                   ; preds = %for.inc33
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.body25

for.end39:                                        ; preds = %for.inc33
  tail call void @_raw_spin_unlock(ptr noundef %list_lock) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr.1)
  %cmp41 = icmp eq i32 %nr.1, 0
  br i1 %cmp41, label %for.end39.if.then42_crit_edge, label %for.end39.do.body_crit_edge

for.end39.do.body_crit_edge:                      ; preds = %for.end39
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body

for.end39.if.then42_crit_edge:                    ; preds = %for.end39
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.then42

if.then42:                                        ; preds = %for.end39.if.then42_crit_edge, %for.end39.thread109
  %call.i.i93 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @isw_nr_in_flight, i32 noundef 4) #10
  tail call void @llvm.prefetch.p0(ptr nonnull @isw_nr_in_flight, i32 1, i32 3, i32 1) #10
  %17 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @isw_nr_in_flight, ptr nonnull @isw_nr_in_flight, i32 1, ptr nonnull elementtype(i32) @isw_nr_in_flight) #10, !srcloc !673
  %18 = ptrtoint ptr %new_wb to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %new_wb, align 8
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %19, align 8
  %tobool.not.i.i = icmp eq ptr %21, null
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %if.end39.critedge.i.i

land.rhs.i.i:                                     ; preds = %if.then42
  %.b49.i.i = load i1, ptr @wb_put_many.__already_done, align 1
  br i1 %.b49.i.i, label %land.rhs.i.i.wb_put.exit_crit_edge, label %if.then.i.i, !prof !670

land.rhs.i.i.wb_put.exit_crit_edge:               ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_put.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @wb_put_many.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.134, i32 noundef 253, i32 noundef 9, ptr noundef null) #10
  br label %wb_put.exit

if.end39.critedge.i.i:                            ; preds = %if.then42
  %wb41.i.i = getelementptr inbounds %struct.backing_dev_info, ptr %21, i32 0, i32 11
  %cmp.not.i.i = icmp eq ptr %wb41.i.i, %19
  br i1 %cmp.not.i.i, label %if.end39.critedge.i.i.wb_put.exit_crit_edge, label %if.then42.i.i

if.end39.critedge.i.i.wb_put.exit_crit_edge:      ; preds = %if.end39.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_put.exit

if.then42.i.i:                                    ; preds = %if.end39.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #12
  %refcnt.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %19, i32 0, i32 27
  tail call fastcc void @percpu_ref_put_many(ptr noundef %refcnt.i.i, i32 noundef 1) #10
  br label %wb_put.exit

wb_put.exit:                                      ; preds = %if.then42.i.i, %if.end39.critedge.i.i.wb_put.exit_crit_edge, %if.then.i.i, %land.rhs.i.i.wb_put.exit_crit_edge
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #10
  br label %cleanup

do.body:                                          ; preds = %for.end39.do.body_crit_edge, %for.end39.thread
  %22 = phi i1 [ true, %for.end39.thread ], [ false, %for.end39.do.body_crit_edge ]
  tail call void @__init_work(ptr noundef nonnull %call7.i.i, i32 noundef 0) #10
  %23 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 -64, ptr %call7.i.i, align 8
  %lockdep_map = getelementptr inbounds %struct.work_struct, ptr %call7.i.i, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.9, ptr noundef nonnull @cleanup_offline_cgwb.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #10
  %entry53 = getelementptr inbounds %struct.work_struct, ptr %call7.i.i, i32 0, i32 1
  %24 = ptrtoint ptr %entry53 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %entry53, ptr %entry53, align 4
  %prev.i = getelementptr inbounds %struct.work_struct, ptr %call7.i.i, i32 0, i32 1, i32 1
  %25 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %entry53, ptr %prev.i, align 8
  %func = getelementptr inbounds %struct.work_struct, ptr %call7.i.i, i32 0, i32 2
  %26 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr @inode_switch_wbs_work_fn, ptr %func, align 4
  %27 = load ptr, ptr @isw_wq, align 4
  %call57 = tail call zeroext i1 @queue_rcu_work(ptr noundef %27, ptr noundef nonnull %call7.i.i) #10
  br label %cleanup

cleanup:                                          ; preds = %do.body, %wb_put.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ false, %wb_put.exit ], [ %22, %do.body ], [ false, %entry.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @inode_prepare_wbs_switch(ptr noundef %inode, ptr noundef readnone %new_wb) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !683
  %i_lock = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #10
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb, align 4
  %s_flags = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %s_flags, align 4
  %and3 = and i32 %3, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %tobool4.not, label %entry.return_crit_edge, label %lor.lhs.false

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %i_state = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 24
  %4 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %i_state, align 8
  %and5 = and i32 %5, 8240
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  br i1 %tobool6.not, label %lor.lhs.false7, label %lor.lhs.false.return_crit_edge

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #12
  br label %return

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %6 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i, label %lor.lhs.false7.inode_to_wb.exit_crit_edge, label %land.rhs.i

lor.lhs.false7.inode_to_wb.exit_crit_edge:        ; preds = %lor.lhs.false7
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.rhs.i:                                       ; preds = %lor.lhs.false7
  %dep_map.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18, i32 0, i32 0, i32 4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool1.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i, label %land.rhs.i.inode_to_wb.exit_crit_edge

land.rhs.i.inode_to_wb.exit_crit_edge:            ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.lhs.true.i:                                  ; preds = %land.rhs.i
  %i_mapping.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %7 = ptrtoint ptr %i_mapping.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %i_mapping.i, align 8
  %dep_map2.i = getelementptr inbounds %struct.address_space, ptr %8, i32 0, i32 1, i32 0, i32 0, i32 0, i32 4
  %call.i60.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map2.i, i32 noundef -1) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i60.i)
  %tobool4.not.i = icmp eq i32 %call.i60.i, 0
  br i1 %tobool4.not.i, label %land.rhs5.i, label %land.lhs.true.i.inode_to_wb.exit_crit_edge

land.lhs.true.i.inode_to_wb.exit_crit_edge:       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.rhs5.i:                                      ; preds = %land.lhs.true.i
  %i_wb.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 30
  %9 = ptrtoint ptr %i_wb.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %i_wb.i, align 4
  %dep_map6.i = getelementptr inbounds %struct.bdi_writeback, ptr %10, i32 0, i32 7, i32 0, i32 0, i32 4
  %call.i61.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map6.i, i32 noundef -1) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i61.i)
  %tobool8.not.i = icmp eq i32 %call.i61.i, 0
  br i1 %tobool8.not.i, label %land.rhs13.i, label %land.rhs5.i.inode_to_wb.exit_crit_edge

land.rhs5.i.inode_to_wb.exit_crit_edge:           ; preds = %land.rhs5.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.rhs13.i:                                     ; preds = %land.rhs5.i
  %.b54.i = load i1, ptr @inode_to_wb.__already_done, align 1
  br i1 %.b54.i, label %land.rhs13.i.inode_to_wb.exit_crit_edge, label %if.then.i, !prof !670

land.rhs13.i.inode_to_wb.exit_crit_edge:          ; preds = %land.rhs13.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

if.then.i:                                        ; preds = %land.rhs13.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @inode_to_wb.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.139, i32 noundef 272, i32 noundef 9, ptr noundef null) #10
  br label %inode_to_wb.exit

inode_to_wb.exit:                                 ; preds = %if.then.i, %land.rhs13.i.inode_to_wb.exit_crit_edge, %land.rhs5.i.inode_to_wb.exit_crit_edge, %land.lhs.true.i.inode_to_wb.exit_crit_edge, %land.rhs.i.inode_to_wb.exit_crit_edge, %lor.lhs.false7.inode_to_wb.exit_crit_edge
  %i_wb48.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 30
  %11 = ptrtoint ptr %i_wb48.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %i_wb48.i, align 4
  %cmp = icmp eq ptr %12, %new_wb
  br i1 %cmp, label %inode_to_wb.exit.return_crit_edge, label %if.end10

inode_to_wb.exit.return_crit_edge:                ; preds = %inode_to_wb.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %return

if.end10:                                         ; preds = %inode_to_wb.exit
  call void @__sanitizer_cov_trace_pc() #12
  %13 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %i_state, align 8
  %or = or i32 %14, 8192
  store i32 %or, ptr %i_state, align 8
  tail call void @__iget(ptr noundef %inode) #10
  br label %return

return:                                           ; preds = %if.end10, %inode_to_wb.exit.return_crit_edge, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i1 [ true, %if.end10 ], [ false, %inode_to_wb.exit.return_crit_edge ], [ false, %lor.lhs.false.return_crit_edge ], [ false, %entry.return_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #10
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @inode_switch_wbs_work_fn(ptr noundef %work) #0 align 64 {
entry:
  %xas.i = alloca %struct.xa_state, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %inodes = getelementptr inbounds %struct.inode_switch_wbs_context, ptr %work, i32 0, i32 2
  %0 = ptrtoint ptr %inodes to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %inodes, align 4
  %call1 = tail call ptr @inode_to_bdi(ptr noundef %1) #10
  %2 = ptrtoint ptr %inodes to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %inodes, align 4
  %i_wb = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 30
  %4 = ptrtoint ptr %i_wb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %i_wb, align 4
  %new_wb4 = getelementptr inbounds %struct.inode_switch_wbs_context, ptr %work, i32 0, i32 1
  %6 = ptrtoint ptr %new_wb4 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %new_wb4, align 4
  %wb_switch_rwsem = getelementptr inbounds %struct.backing_dev_info, ptr %call1, i32 0, i32 15
  tail call void @down_read(ptr noundef %wb_switch_rwsem) #10
  %cmp = icmp ult ptr %5, %7
  %. = select i1 %cmp, ptr %5, ptr %7
  %.136 = select i1 %cmp, ptr %7, ptr %5
  %list_lock7 = getelementptr inbounds %struct.bdi_writeback, ptr %., i32 0, i32 7
  tail call void @_raw_spin_lock(ptr noundef %list_lock7) #10
  %list_lock9 = getelementptr inbounds %struct.bdi_writeback, ptr %.136, i32 0, i32 7
  tail call void @_raw_spin_lock_nested(ptr noundef %list_lock9, i32 noundef 1) #10
  %8 = ptrtoint ptr %inodes to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %inodes, align 4
  %tobool.not122 = icmp eq ptr %9, null
  br i1 %tobool.not122, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %10 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 1
  %11 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 6
  %12 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 7
  %13 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 8
  %arrayidx.i.i = getelementptr %struct.bdi_writeback, ptr %5, i32 0, i32 9, i32 0
  %arrayidx.i197.i = getelementptr %struct.bdi_writeback, ptr %7, i32 0, i32 9, i32 0
  %arrayidx.i218.i = getelementptr %struct.bdi_writeback, ptr %5, i32 0, i32 9, i32 1
  %arrayidx.i231.i = getelementptr %struct.bdi_writeback, ptr %7, i32 0, i32 9, i32 1
  %writeback_inodes.i = getelementptr inbounds %struct.bdi_writeback, ptr %5, i32 0, i32 8
  %writeback_inodes73.i = getelementptr inbounds %struct.bdi_writeback, ptr %7, i32 0, i32 8
  %b_dirty.i = getelementptr inbounds %struct.bdi_writeback, ptr %7, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %inode_do_switch_wbs.exit.for.body_crit_edge, %for.body.lr.ph
  %14 = phi ptr [ %9, %for.body.lr.ph ], [ %84, %inode_do_switch_wbs.exit.for.body_crit_edge ]
  %inodep.0124 = phi ptr [ %inodes, %for.body.lr.ph ], [ %incdec.ptr, %inode_do_switch_wbs.exit.for.body_crit_edge ]
  %nr_switched.0123 = phi i32 [ 0, %for.body.lr.ph ], [ %spec.select, %inode_do_switch_wbs.exit.for.body_crit_edge ]
  %i_wb14 = getelementptr inbounds %struct.inode, ptr %14, i32 0, i32 30
  %15 = ptrtoint ptr %i_wb14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %i_wb14, align 4
  %cmp15.not = icmp eq ptr %16, %5
  br i1 %cmp15.not, label %for.body.if.end49_crit_edge, label %land.rhs

for.body.if.end49_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end49

land.rhs:                                         ; preds = %for.body
  %.b106 = load i1, ptr @inode_switch_wbs_work_fn.__already_done, align 1
  br i1 %.b106, label %land.rhs.if.end49_crit_edge, label %if.then23, !prof !670

land.rhs.if.end49_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end49

if.then23:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @inode_switch_wbs_work_fn.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.8, i32 noundef 498, i32 noundef 9, ptr noundef null) #10
  br label %if.end49

if.end49:                                         ; preds = %if.then23, %land.rhs.if.end49_crit_edge, %for.body.if.end49_crit_edge
  %17 = ptrtoint ptr %inodep.0124 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %inodep.0124, align 4
  %i_mapping.i = getelementptr inbounds %struct.inode, ptr %18, i32 0, i32 9
  %19 = ptrtoint ptr %i_mapping.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %i_mapping.i, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas.i) #10
  %i_pages.i = getelementptr inbounds %struct.address_space, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %xas.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %i_pages.i, ptr %xas.i, align 4
  %22 = ptrtoint ptr %10 to i32
  call void @__asan_storeN_noabort(i32 %22, i32 8)
  store i64 0, ptr %10, align 4
  %23 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr inttoptr (i32 3 to ptr), ptr %11, align 4
  %24 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr null, ptr %12, align 4
  %25 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %13, align 4
  %i_lock.i = getelementptr inbounds %struct.inode, ptr %18, i32 0, i32 18
  call void @_raw_spin_lock(ptr noundef %i_lock.i) #10
  call void @_raw_spin_lock_irq(ptr noundef %i_pages.i) #10
  %i_state.i = getelementptr inbounds %struct.inode, ptr %18, i32 0, i32 24
  %26 = ptrtoint ptr %i_state.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %i_state.i, align 8
  %and.i = and i32 %27, 48
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.end49.inode_do_switch_wbs.exit_crit_edge, !prof !670

if.end49.inode_do_switch_wbs.exit_crit_edge:      ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_do_switch_wbs.exit

if.end.i:                                         ; preds = %if.end49
  call fastcc void @trace_inode_switch_wbs(ptr noundef %18, ptr noundef %5, ptr noundef %7) #10
  %call.i = call ptr @xas_find_marked(ptr noundef nonnull %xas.i, i32 noundef -1, i32 noundef 0) #10
  %tobool4.not240.i = icmp eq ptr %call.i, null
  br i1 %tobool4.not240.i, label %if.end.i.for.end.i_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %folio.0241.i = phi ptr [ %call10.i, %for.inc.i.for.body.i_crit_edge ], [ %call.i, %if.end.i.for.body.i_crit_edge ]
  %28 = getelementptr inbounds %struct.page, ptr %folio.0241.i, i32 0, i32 1
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %28, align 4
  %and.i.i.i.i = and i32 %30, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %folio_test_dirty.exit.i, label %if.then.i.i.i, !prof !670

if.then.i.i.i:                                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #12
  call void @dump_page(ptr noundef nonnull %folio.0241.i, ptr noundef nonnull @.str.46) #10
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #10, !srcloc !684
  unreachable

folio_test_dirty.exit.i:                          ; preds = %for.body.i
  %31 = ptrtoint ptr %folio.0241.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %folio.0241.i, align 4
  %33 = and i32 %32, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool.i.not.i = icmp eq i32 %33, 0
  br i1 %tobool.i.not.i, label %folio_test_dirty.exit.i.for.inc.i_crit_edge, label %if.then6.i

folio_test_dirty.exit.i.for.inc.i_crit_edge:      ; preds = %folio_test_dirty.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.inc.i

if.then6.i:                                       ; preds = %folio_test_dirty.exit.i
  %34 = ptrtoint ptr %folio.0241.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %folio.0241.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %35)
  %cmp.i.not.i.i.i.i = icmp eq i32 %35, -1
  br i1 %cmp.i.not.i.i.i.i, label %if.then.i.i.i.i, label %PageHead.exit.i.i.i, !prof !671

if.then.i.i.i.i:                                  ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #12
  call void @dump_page(ptr noundef nonnull %folio.0241.i, ptr noundef nonnull @.str.137) #10
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #10, !srcloc !685
  unreachable

PageHead.exit.i.i.i:                              ; preds = %if.then6.i
  %36 = ptrtoint ptr %folio.0241.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %folio.0241.i, align 4
  %38 = and i32 %37, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool.not.i.i187.i = icmp eq i32 %38, 0
  br i1 %tobool.not.i.i187.i, label %PageHead.exit.i.i.i.folio_nr_pages.exit.i_crit_edge, label %if.end.i.i.i

PageHead.exit.i.i.i.folio_nr_pages.exit.i_crit_edge: ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %folio_nr_pages.exit.i

if.end.i.i.i:                                     ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  %compound_nr.i.i.i = getelementptr %struct.page, ptr %folio.0241.i, i32 1, i32 1, i32 0, i32 2
  %39 = ptrtoint ptr %compound_nr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %compound_nr.i.i.i, align 4
  br label %folio_nr_pages.exit.i

folio_nr_pages.exit.i:                            ; preds = %if.end.i.i.i, %PageHead.exit.i.i.i.folio_nr_pages.exit.i_crit_edge
  %retval.0.i.i.i = phi i32 [ %40, %if.end.i.i.i ], [ 1, %PageHead.exit.i.i.i.folio_nr_pages.exit.i_crit_edge ]
  %sub.i = sub i32 0, %retval.0.i.i.i
  %conv.i = sext i32 %sub.i to i64
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %41 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool.not.i.i.i.i = icmp eq i32 %41, 0
  %42 = call i32 @llvm.ctlz.i32(i32 %41, i1 true) #10, !range !686
  %sub.i.op.i.i.i = shl nuw nsw i32 %42, 3
  %sub.i.op.i.i.i.op = xor i32 %sub.i.op.i.i.i, 248
  %sub.i.op.i.i.i.op.op = add nuw nsw i32 %sub.i.op.i.i.i.op, 8
  %mul.i.i = select i1 %tobool.not.i.i.i.i, i32 0, i32 %sub.i.op.i.i.i.op.op
  call void @percpu_counter_add_batch(ptr noundef %arrayidx.i.i, i64 noundef %conv.i, i32 noundef %mul.i.i) #10
  %conv8.i = sext i32 %retval.0.i.i.i to i64
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %43 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool.not.i.i.i192.i = icmp eq i32 %43, 0
  %44 = call i32 @llvm.ctlz.i32(i32 %43, i1 true) #10, !range !686
  %sub.i.op.i.i193.i = shl nuw nsw i32 %44, 3
  %sub.i.op.i.i193.i.op = xor i32 %sub.i.op.i.i193.i, 248
  %sub.i.op.i.i193.i.op.op = add nuw nsw i32 %sub.i.op.i.i193.i.op, 8
  %mul.i199.i = select i1 %tobool.not.i.i.i192.i, i32 0, i32 %sub.i.op.i.i193.i.op.op
  call void @percpu_counter_add_batch(ptr noundef %arrayidx.i197.i, i64 noundef %conv8.i, i32 noundef %mul.i199.i) #10
  br label %for.inc.i

for.inc.i:                                        ; preds = %folio_nr_pages.exit.i, %folio_test_dirty.exit.i.for.inc.i_crit_edge
  %call10.i = call fastcc ptr @xas_next_marked(ptr noundef nonnull %xas.i, i32 noundef 0) #10
  %tobool4.not.i = icmp eq ptr %call10.i, null
  br i1 %tobool4.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end.i.for.end.i_crit_edge
  %45 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 0, ptr %10, align 4
  %46 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr inttoptr (i32 3 to ptr), ptr %11, align 4
  %call11.i = call ptr @xas_find_marked(ptr noundef nonnull %xas.i, i32 noundef -1, i32 noundef 1) #10
  %tobool13.not242.i = icmp eq ptr %call11.i, null
  br i1 %tobool13.not242.i, label %for.end.i.for.end70.i_crit_edge, label %for.end.i.for.body14.i_crit_edge

for.end.i.for.body14.i_crit_edge:                 ; preds = %for.end.i
  br label %for.body14.i

for.end.i.for.end70.i_crit_edge:                  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end70.i

for.body14.i:                                     ; preds = %if.end57.i.for.body14.i_crit_edge, %for.end.i.for.body14.i_crit_edge
  %folio.1243.i = phi ptr [ %call69.i, %if.end57.i.for.body14.i_crit_edge ], [ %call11.i, %for.end.i.for.body14.i_crit_edge ]
  %47 = ptrtoint ptr %folio.1243.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %folio.1243.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %48)
  %cmp.i.not.i.i.i201.i = icmp eq i32 %48, -1
  br i1 %cmp.i.not.i.i.i201.i, label %if.then.i.i.i202.i, label %PageHead.exit.i.i204.i, !prof !671

if.then.i.i.i202.i:                               ; preds = %for.body14.i
  call void @__sanitizer_cov_trace_pc() #12
  call void @dump_page(ptr noundef nonnull %folio.1243.i, ptr noundef nonnull @.str.137) #10
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #10, !srcloc !685
  unreachable

PageHead.exit.i.i204.i:                           ; preds = %for.body14.i
  %49 = ptrtoint ptr %folio.1243.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %folio.1243.i, align 4
  %51 = and i32 %50, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool.not.i.i203.i = icmp eq i32 %51, 0
  br i1 %tobool.not.i.i203.i, label %PageHead.exit.i.i204.i.folio_nr_pages.exit208.i_crit_edge, label %if.end.i.i206.i

PageHead.exit.i.i204.i.folio_nr_pages.exit208.i_crit_edge: ; preds = %PageHead.exit.i.i204.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %folio_nr_pages.exit208.i

if.end.i.i206.i:                                  ; preds = %PageHead.exit.i.i204.i
  call void @__sanitizer_cov_trace_pc() #12
  %compound_nr.i.i205.i = getelementptr %struct.page, ptr %folio.1243.i, i32 1, i32 1, i32 0, i32 2
  %52 = ptrtoint ptr %compound_nr.i.i205.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %compound_nr.i.i205.i, align 4
  br label %folio_nr_pages.exit208.i

folio_nr_pages.exit208.i:                         ; preds = %if.end.i.i206.i, %PageHead.exit.i.i204.i.folio_nr_pages.exit208.i_crit_edge
  %retval.0.i.i207.i = phi i32 [ %53, %if.end.i.i206.i ], [ 1, %PageHead.exit.i.i204.i.folio_nr_pages.exit208.i_crit_edge ]
  %54 = getelementptr inbounds %struct.page, ptr %folio.1243.i, i32 0, i32 1
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %54, align 4
  %and.i.i.i182.i = and i32 %56, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i182.i)
  %tobool.not.i.i183.i = icmp eq i32 %and.i.i.i182.i, 0
  br i1 %tobool.not.i.i183.i, label %folio_test_writeback.exit.i, label %if.then.i.i184.i, !prof !670

if.then.i.i184.i:                                 ; preds = %folio_nr_pages.exit208.i
  call void @__sanitizer_cov_trace_pc() #12
  call void @dump_page(ptr noundef nonnull %folio.1243.i, ptr noundef nonnull @.str.46) #10
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #10, !srcloc !684
  unreachable

folio_test_writeback.exit.i:                      ; preds = %folio_nr_pages.exit208.i
  %57 = ptrtoint ptr %folio.1243.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %folio.1243.i, align 4
  %59 = and i32 %58, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %tobool.i185.not.i = icmp eq i32 %59, 0
  br i1 %tobool.i185.not.i, label %land.rhs.i, label %folio_test_writeback.exit.i.if.end57.i_crit_edge

folio_test_writeback.exit.i.if.end57.i_crit_edge: ; preds = %folio_test_writeback.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end57.i

land.rhs.i:                                       ; preds = %folio_test_writeback.exit.i
  %.b181.i = load i1, ptr @inode_do_switch_wbs.__already_done, align 1
  br i1 %.b181.i, label %land.rhs.i.if.end57.i_crit_edge, label %if.then35.i, !prof !670

land.rhs.i.if.end57.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end57.i

if.then35.i:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @inode_do_switch_wbs.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.8, i32 noundef 406, i32 noundef 9, ptr noundef null) #10
  br label %if.end57.i

if.end57.i:                                       ; preds = %if.then35.i, %land.rhs.i.if.end57.i_crit_edge, %folio_test_writeback.exit.i.if.end57.i_crit_edge
  %sub65.i = sub i32 0, %retval.0.i.i207.i
  %conv66.i = sext i32 %sub65.i to i64
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %60 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %tobool.not.i.i.i213.i = icmp eq i32 %60, 0
  %61 = call i32 @llvm.ctlz.i32(i32 %60, i1 true) #10, !range !686
  %sub.i.op.i.i214.i = shl nuw nsw i32 %61, 3
  %sub.i.op.i.i214.i.op = xor i32 %sub.i.op.i.i214.i, 248
  %sub.i.op.i.i214.i.op.op = add nuw nsw i32 %sub.i.op.i.i214.i.op, 8
  %mul.i220.i = select i1 %tobool.not.i.i.i213.i, i32 0, i32 %sub.i.op.i.i214.i.op.op
  call void @percpu_counter_add_batch(ptr noundef %arrayidx.i218.i, i64 noundef %conv66.i, i32 noundef %mul.i220.i) #10
  %conv67.i = sext i32 %retval.0.i.i207.i to i64
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %62 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %tobool.not.i.i.i226.i = icmp eq i32 %62, 0
  %63 = call i32 @llvm.ctlz.i32(i32 %62, i1 true) #10, !range !686
  %sub.i.op.i.i227.i = shl nuw nsw i32 %63, 3
  %sub.i.op.i.i227.i.op = xor i32 %sub.i.op.i.i227.i, 248
  %sub.i.op.i.i227.i.op.op = add nuw nsw i32 %sub.i.op.i.i227.i.op, 8
  %mul.i233.i = select i1 %tobool.not.i.i.i226.i, i32 0, i32 %sub.i.op.i.i227.i.op.op
  call void @percpu_counter_add_batch(ptr noundef %arrayidx.i231.i, i64 noundef %conv67.i, i32 noundef %mul.i233.i) #10
  %call69.i = call fastcc ptr @xas_next_marked(ptr noundef nonnull %xas.i, i32 noundef 1) #10
  %tobool13.not.i = icmp eq ptr %call69.i, null
  br i1 %tobool13.not.i, label %if.end57.i.for.end70.i_crit_edge, label %if.end57.i.for.body14.i_crit_edge

if.end57.i.for.body14.i_crit_edge:                ; preds = %if.end57.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.body14.i

if.end57.i.for.end70.i_crit_edge:                 ; preds = %if.end57.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end70.i

for.end70.i:                                      ; preds = %if.end57.i.for.end70.i_crit_edge, %for.end.i.for.end70.i_crit_edge
  %xa_flags.i.i.i = getelementptr inbounds %struct.address_space, ptr %20, i32 0, i32 1, i32 1
  %64 = ptrtoint ptr %xa_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %xa_flags.i.i.i, align 4
  %and.i.i.i = and i32 %65, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.i.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.i.not.i, label %for.end70.i.if.end74.i_crit_edge, label %if.then72.i

for.end70.i.if.end74.i_crit_edge:                 ; preds = %for.end70.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end74.i

if.then72.i:                                      ; preds = %for.end70.i
  call void @__sanitizer_cov_trace_pc() #12
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %writeback_inodes.i, i32 noundef 4) #10
  call void @llvm.prefetch.p0(ptr %writeback_inodes.i, i32 1, i32 3, i32 1) #10
  %66 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %writeback_inodes.i, ptr %writeback_inodes.i, i32 1, ptr elementtype(i32) %writeback_inodes.i) #10, !srcloc !673
  %call.i.i186.i = call zeroext i1 @__kasan_check_write(ptr noundef %writeback_inodes73.i, i32 noundef 4) #10
  call void @llvm.prefetch.p0(ptr %writeback_inodes73.i, i32 1, i32 3, i32 1) #10
  %67 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %writeback_inodes73.i, ptr %writeback_inodes73.i, i32 1, ptr elementtype(i32) %writeback_inodes73.i) #10, !srcloc !682
  br label %if.end74.i

if.end74.i:                                       ; preds = %if.then72.i, %for.end70.i.if.end74.i_crit_edge
  call fastcc void @wb_get(ptr noundef %7) #10
  %i_io_list.i = getelementptr inbounds %struct.inode, ptr %18, i32 0, i32 29
  %68 = ptrtoint ptr %i_io_list.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile ptr, ptr %i_io_list.i, align 4
  %cmp.i235.not.i = icmp eq ptr %69, %i_io_list.i
  %i_wb107.i = getelementptr inbounds %struct.inode, ptr %18, i32 0, i32 30
  %70 = ptrtoint ptr %i_wb107.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr %7, ptr %i_wb107.i, align 4
  br i1 %cmp.i235.not.i, label %if.end74.i.if.end108.i_crit_edge, label %if.then77.i

if.end74.i.if.end108.i_crit_edge:                 ; preds = %if.end74.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end108.i

if.then77.i:                                      ; preds = %if.end74.i
  %71 = ptrtoint ptr %i_state.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %i_state.i, align 8
  %and79.i = and i32 %72, 2055
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and79.i)
  %tobool80.not.i = icmp eq i32 %and79.i, 0
  br i1 %tobool80.not.i, label %if.else.i, label %if.then81.i

if.then81.i:                                      ; preds = %if.then77.i
  %dirtied_when.i = getelementptr inbounds %struct.inode, ptr %18, i32 0, i32 26
  br label %for.cond83.i

for.cond83.i:                                     ; preds = %for.body89.i.for.cond83.i_crit_edge, %if.then81.i
  %.pn.in.i = phi ptr [ %b_dirty.i, %if.then81.i ], [ %.pn.i, %for.body89.i.for.cond83.i_crit_edge ]
  %73 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %.pn.i = load ptr, ptr %.pn.in.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %b_dirty.i
  br i1 %cmp.not.i, label %for.cond83.i.for.end102.i_crit_edge, label %for.body89.i

for.cond83.i.for.end102.i_crit_edge:              ; preds = %for.cond83.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end102.i

for.body89.i:                                     ; preds = %for.cond83.i
  %74 = ptrtoint ptr %dirtied_when.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %dirtied_when.i, align 4
  %dirtied_when90.i = getelementptr i8, ptr %.pn.i, i32 -16
  %76 = ptrtoint ptr %dirtied_when90.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %dirtied_when90.i, align 4
  %sub91.i = sub i32 %75, %77
  %cmp92.i = icmp sgt i32 %sub91.i, -1
  br i1 %cmp92.i, label %for.body89.i.for.end102.i_crit_edge, label %for.body89.i.for.cond83.i_crit_edge

for.body89.i.for.cond83.i_crit_edge:              ; preds = %for.body89.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.cond83.i

for.body89.i.for.end102.i_crit_edge:              ; preds = %for.body89.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end102.i

for.end102.i:                                     ; preds = %for.body89.i.for.end102.i_crit_edge, %for.cond83.i.for.end102.i_crit_edge
  %.pn.lcssa.i = phi ptr [ %.pn.i, %for.body89.i.for.end102.i_crit_edge ], [ %b_dirty.i, %for.cond83.i.for.end102.i_crit_edge ]
  %prev.i = getelementptr inbounds %struct.list_head, ptr %.pn.lcssa.i, i32 0, i32 1
  %78 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %prev.i, align 4
  %call104.i = call fastcc zeroext i1 @inode_io_list_move_locked(ptr noundef %18, ptr noundef %7, ptr noundef %79) #10
  br label %if.end108.i

if.else.i:                                        ; preds = %if.then77.i
  call void @__sanitizer_cov_trace_pc() #12
  call fastcc void @inode_cgwb_move_to_attached(ptr noundef %18, ptr noundef %7) #10
  br label %if.end108.i

if.end108.i:                                      ; preds = %if.else.i, %for.end102.i, %if.end74.i.if.end108.i_crit_edge
  %i_wb_frn_winner.i = getelementptr inbounds %struct.inode, ptr %18, i32 0, i32 31
  %80 = ptrtoint ptr %i_wb_frn_winner.i to i32
  call void @__asan_store8_noabort(i32 %80)
  store i64 0, ptr %i_wb_frn_winner.i, align 8
  br label %inode_do_switch_wbs.exit

inode_do_switch_wbs.exit:                         ; preds = %if.end108.i, %if.end49.inode_do_switch_wbs.exit_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !687
  %81 = ptrtoint ptr %i_state.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %i_state.i, align 8
  %and123.i = and i32 %82, -8193
  store volatile i32 %and123.i, ptr %i_state.i, align 8
  call void @_raw_spin_unlock_irq(ptr noundef %i_pages.i) #10
  call void @_raw_spin_unlock(ptr noundef %i_lock.i) #10
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas.i) #10
  %inc = zext i1 %tobool.not.i to i32
  %spec.select = add i32 %nr_switched.0123, %inc
  %incdec.ptr = getelementptr ptr, ptr %inodep.0124, i32 1
  %83 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %incdec.ptr, align 4
  %tobool.not = icmp eq ptr %84, null
  br i1 %tobool.not, label %inode_do_switch_wbs.exit.for.end_crit_edge, label %inode_do_switch_wbs.exit.for.body_crit_edge

inode_do_switch_wbs.exit.for.body_crit_edge:      ; preds = %inode_do_switch_wbs.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.body

inode_do_switch_wbs.exit.for.end_crit_edge:       ; preds = %inode_do_switch_wbs.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end

for.end:                                          ; preds = %inode_do_switch_wbs.exit.for.end_crit_edge, %entry.for.end_crit_edge
  %nr_switched.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %spec.select, %inode_do_switch_wbs.exit.for.end_crit_edge ]
  %list_lock60 = getelementptr inbounds %struct.bdi_writeback, ptr %7, i32 0, i32 7
  call void @_raw_spin_unlock(ptr noundef %list_lock60) #10
  %list_lock61 = getelementptr inbounds %struct.bdi_writeback, ptr %5, i32 0, i32 7
  call void @_raw_spin_unlock(ptr noundef %list_lock61) #10
  call void @up_read(ptr noundef %wb_switch_rwsem) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_switched.0.lcssa)
  %tobool63.not = icmp eq i32 %nr_switched.0.lcssa, 0
  br i1 %tobool63.not, label %for.end.if.end65_crit_edge, label %if.then64

for.end.if.end65_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end65

if.then64:                                        ; preds = %for.end
  %work_lock.i = getelementptr inbounds %struct.bdi_writeback, ptr %7, i32 0, i32 21
  call void @_raw_spin_lock_bh(ptr noundef %work_lock.i) #10
  %state.i = getelementptr inbounds %struct.bdi_writeback, ptr %7, i32 0, i32 1
  %85 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %86, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i107 = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i107, label %if.then64.wb_wakeup.exit_crit_edge, label %if.then.i

if.then64.wb_wakeup.exit_crit_edge:               ; preds = %if.then64
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_wakeup.exit

if.then.i:                                        ; preds = %if.then64
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @bdi_wq to i32))
  %87 = load ptr, ptr @bdi_wq, align 4
  %dwork.i = getelementptr inbounds %struct.bdi_writeback, ptr %7, i32 0, i32 23
  %call.i.i108 = call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %87, ptr noundef %dwork.i, i32 noundef 0) #10
  br label %wb_wakeup.exit

wb_wakeup.exit:                                   ; preds = %if.then.i, %if.then64.wb_wakeup.exit_crit_edge
  call void @_raw_spin_unlock_bh(ptr noundef %work_lock.i) #10
  %88 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %5, align 8
  %tobool.not.i110 = icmp eq ptr %89, null
  br i1 %tobool.not.i110, label %land.rhs.i111, label %if.end39.critedge.i

land.rhs.i111:                                    ; preds = %wb_wakeup.exit
  %.b49.i = load i1, ptr @wb_put_many.__already_done, align 1
  br i1 %.b49.i, label %land.rhs.i111.if.end65_crit_edge, label %if.then.i112, !prof !670

land.rhs.i111.if.end65_crit_edge:                 ; preds = %land.rhs.i111
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end65

if.then.i112:                                     ; preds = %land.rhs.i111
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @wb_put_many.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.134, i32 noundef 253, i32 noundef 9, ptr noundef null) #10
  br label %if.end65

if.end39.critedge.i:                              ; preds = %wb_wakeup.exit
  %wb41.i = getelementptr inbounds %struct.backing_dev_info, ptr %89, i32 0, i32 11
  %cmp.not.i113 = icmp eq ptr %wb41.i, %5
  br i1 %cmp.not.i113, label %if.end39.critedge.i.if.end65_crit_edge, label %if.then42.i

if.end39.critedge.i.if.end65_crit_edge:           ; preds = %if.end39.critedge.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end65

if.then42.i:                                      ; preds = %if.end39.critedge.i
  call void @__sanitizer_cov_trace_pc() #12
  %refcnt.i = getelementptr inbounds %struct.bdi_writeback, ptr %5, i32 0, i32 27
  call fastcc void @percpu_ref_put_many(ptr noundef %refcnt.i, i32 noundef %nr_switched.0.lcssa) #10
  br label %if.end65

if.end65:                                         ; preds = %if.then42.i, %if.end39.critedge.i.if.end65_crit_edge, %if.then.i112, %land.rhs.i111.if.end65_crit_edge, %for.end.if.end65_crit_edge
  %90 = ptrtoint ptr %inodes to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %inodes, align 4
  %tobool69.not125 = icmp eq ptr %91, null
  br i1 %tobool69.not125, label %if.end65.for.end73_crit_edge, label %if.end65.for.body70_crit_edge

if.end65.for.body70_crit_edge:                    ; preds = %if.end65
  br label %for.body70

if.end65.for.end73_crit_edge:                     ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end73

for.body70:                                       ; preds = %for.body70.for.body70_crit_edge, %if.end65.for.body70_crit_edge
  %92 = phi ptr [ %94, %for.body70.for.body70_crit_edge ], [ %91, %if.end65.for.body70_crit_edge ]
  %inodep.1126 = phi ptr [ %incdec.ptr72, %for.body70.for.body70_crit_edge ], [ %inodes, %if.end65.for.body70_crit_edge ]
  call void @iput(ptr noundef nonnull %92) #10
  %incdec.ptr72 = getelementptr ptr, ptr %inodep.1126, i32 1
  %93 = ptrtoint ptr %incdec.ptr72 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %incdec.ptr72, align 4
  %tobool69.not = icmp eq ptr %94, null
  br i1 %tobool69.not, label %for.body70.for.end73_crit_edge, label %for.body70.for.body70_crit_edge

for.body70.for.body70_crit_edge:                  ; preds = %for.body70
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.body70

for.body70.for.end73_crit_edge:                   ; preds = %for.body70
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end73

for.end73:                                        ; preds = %for.body70.for.end73_crit_edge, %if.end65.for.end73_crit_edge
  %95 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %7, align 8
  %tobool.not.i.i = icmp eq ptr %96, null
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %if.end39.critedge.i.i

land.rhs.i.i:                                     ; preds = %for.end73
  %.b49.i.i = load i1, ptr @wb_put_many.__already_done, align 1
  br i1 %.b49.i.i, label %land.rhs.i.i.wb_put.exit_crit_edge, label %if.then.i.i, !prof !670

land.rhs.i.i.wb_put.exit_crit_edge:               ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_put.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @wb_put_many.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.134, i32 noundef 253, i32 noundef 9, ptr noundef null) #10
  br label %wb_put.exit

if.end39.critedge.i.i:                            ; preds = %for.end73
  %wb41.i.i = getelementptr inbounds %struct.backing_dev_info, ptr %96, i32 0, i32 11
  %cmp.not.i.i = icmp eq ptr %wb41.i.i, %7
  br i1 %cmp.not.i.i, label %if.end39.critedge.i.i.wb_put.exit_crit_edge, label %if.then42.i.i

if.end39.critedge.i.i.wb_put.exit_crit_edge:      ; preds = %if.end39.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_put.exit

if.then42.i.i:                                    ; preds = %if.end39.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #12
  %refcnt.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %7, i32 0, i32 27
  call fastcc void @percpu_ref_put_many(ptr noundef %refcnt.i.i, i32 noundef 1) #10
  br label %wb_put.exit

wb_put.exit:                                      ; preds = %if.then42.i.i, %if.end39.critedge.i.i.wb_put.exit_crit_edge, %if.then.i.i, %land.rhs.i.i.wb_put.exit_crit_edge
  call void @kfree(ptr noundef %work) #10
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull @isw_nr_in_flight, i32 noundef 4) #10
  call void @llvm.prefetch.p0(ptr nonnull @isw_nr_in_flight, i32 1, i32 3, i32 1) #10
  %97 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @isw_nr_in_flight, ptr nonnull @isw_nr_in_flight, i32 1, ptr nonnull elementtype(i32) @isw_nr_in_flight) #10, !srcloc !673
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_rcu_work(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wbc_attach_and_unlock_inode(ptr nocapture noundef %wbc, ptr noundef %inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call ptr @inode_to_bdi(ptr noundef %inode) #10
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_on_dfl_key, i32 1), ptr blockaddress(@wbc_attach_and_unlock_inode, %if.then)) #10
          to label %land.lhs.true.i [label %if.then], !srcloc !674

land.lhs.true.i:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @io_cgrp_subsys_on_dfl_key, i32 1), ptr blockaddress(@wbc_attach_and_unlock_inode, %if.then)) #10
          to label %land.lhs.true18.i [label %if.then], !srcloc !674

land.lhs.true18.i:                                ; preds = %land.lhs.true.i
  %capabilities.i = getelementptr inbounds %struct.backing_dev_info, ptr %call.i, i32 0, i32 6
  %0 = ptrtoint ptr %capabilities.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %capabilities.i, align 8
  %and.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool19.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool19.not.i, label %land.lhs.true18.i.if.then_crit_edge, label %land.rhs.i

land.lhs.true18.i.if.then_crit_edge:              ; preds = %land.lhs.true18.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.then

land.rhs.i:                                       ; preds = %land.lhs.true18.i
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb.i, align 4
  %s_iflags.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %s_iflags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %s_iflags.i, align 8
  %and20.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20.i)
  %tobool21.i.not = icmp eq i32 %and20.i, 0
  br i1 %tobool21.i.not, label %land.rhs.i.if.then_crit_edge, label %if.end

land.rhs.i.if.then_crit_edge:                     ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.then

if.then:                                          ; preds = %land.rhs.i.if.then_crit_edge, %land.lhs.true18.i.if.then_crit_edge, %land.lhs.true.i, %entry
  call void @__sanitizer_cov_trace_pc() #12
  %i_lock = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #10
  br label %if.end15

if.end:                                           ; preds = %land.rhs.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %6 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i, label %if.end.inode_to_wb.exit_crit_edge, label %land.rhs.i34

if.end.inode_to_wb.exit_crit_edge:                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.rhs.i34:                                     ; preds = %if.end
  %dep_map.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18, i32 0, i32 0, i32 4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool1.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i35, label %land.rhs.i34.inode_to_wb.exit_crit_edge

land.rhs.i34.inode_to_wb.exit_crit_edge:          ; preds = %land.rhs.i34
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.lhs.true.i35:                                ; preds = %land.rhs.i34
  %i_mapping.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %7 = ptrtoint ptr %i_mapping.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %i_mapping.i, align 8
  %dep_map2.i = getelementptr inbounds %struct.address_space, ptr %8, i32 0, i32 1, i32 0, i32 0, i32 0, i32 4
  %call.i60.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map2.i, i32 noundef -1) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i60.i)
  %tobool4.not.i = icmp eq i32 %call.i60.i, 0
  br i1 %tobool4.not.i, label %land.rhs5.i, label %land.lhs.true.i35.inode_to_wb.exit_crit_edge

land.lhs.true.i35.inode_to_wb.exit_crit_edge:     ; preds = %land.lhs.true.i35
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.rhs5.i:                                      ; preds = %land.lhs.true.i35
  %i_wb.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 30
  %9 = ptrtoint ptr %i_wb.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %i_wb.i, align 4
  %dep_map6.i = getelementptr inbounds %struct.bdi_writeback, ptr %10, i32 0, i32 7, i32 0, i32 0, i32 4
  %call.i61.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map6.i, i32 noundef -1) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i61.i)
  %tobool8.not.i = icmp eq i32 %call.i61.i, 0
  br i1 %tobool8.not.i, label %land.rhs13.i, label %land.rhs5.i.inode_to_wb.exit_crit_edge

land.rhs5.i.inode_to_wb.exit_crit_edge:           ; preds = %land.rhs5.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.rhs13.i:                                     ; preds = %land.rhs5.i
  %.b54.i = load i1, ptr @inode_to_wb.__already_done, align 1
  br i1 %.b54.i, label %land.rhs13.i.inode_to_wb.exit_crit_edge, label %if.then.i, !prof !670

land.rhs13.i.inode_to_wb.exit_crit_edge:          ; preds = %land.rhs13.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

if.then.i:                                        ; preds = %land.rhs13.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @inode_to_wb.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.139, i32 noundef 272, i32 noundef 9, ptr noundef null) #10
  br label %inode_to_wb.exit

inode_to_wb.exit:                                 ; preds = %if.then.i, %land.rhs13.i.inode_to_wb.exit_crit_edge, %land.rhs5.i.inode_to_wb.exit_crit_edge, %land.lhs.true.i35.inode_to_wb.exit_crit_edge, %land.rhs.i34.inode_to_wb.exit_crit_edge, %if.end.inode_to_wb.exit_crit_edge
  %i_wb48.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 30
  %11 = ptrtoint ptr %i_wb48.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %i_wb48.i, align 4
  %wb = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 6
  %13 = ptrtoint ptr %wb to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %12, ptr %wb, align 8
  %inode2 = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 7
  %14 = ptrtoint ptr %inode2 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %inode, ptr %inode2, align 4
  %memcg_css = getelementptr inbounds %struct.bdi_writeback, ptr %12, i32 0, i32 29
  %15 = ptrtoint ptr %memcg_css to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %memcg_css, align 8
  %id = getelementptr inbounds %struct.cgroup_subsys_state, ptr %16, i32 0, i32 6
  %17 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %id, align 8
  %wb_id = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 8
  %19 = ptrtoint ptr %wb_id to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %wb_id, align 8
  %i_wb_frn_winner = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 31
  %20 = ptrtoint ptr %i_wb_frn_winner to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %i_wb_frn_winner, align 8
  %wb_lcand_id = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 9
  %22 = ptrtoint ptr %wb_lcand_id to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %wb_lcand_id, align 4
  %wb_tcand_id = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 10
  %23 = call ptr @memset(ptr %wb_tcand_id, i32 0, i32 16)
  tail call fastcc void @wb_get(ptr noundef %12)
  %i_lock5 = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  tail call void @_raw_spin_unlock(ptr noundef %i_lock5) #10
  %24 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %wb, align 8
  %refcnt.i = getelementptr inbounds %struct.bdi_writeback, ptr %25, i32 0, i32 27
  %26 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %refcnt.i, align 4
  %and.i.i = and i32 %27, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.i.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.i.not, label %inode_to_wb.exit.if.end15_crit_edge, label %land.rhs

inode_to_wb.exit.if.end15_crit_edge:              ; preds = %inode_to_wb.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end15

land.rhs:                                         ; preds = %inode_to_wb.exit
  %memcg_css9 = getelementptr inbounds %struct.bdi_writeback, ptr %25, i32 0, i32 29
  %28 = ptrtoint ptr %memcg_css9 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %memcg_css9, align 8
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %29, i32 0, i32 7
  %30 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %flags.i, align 4
  %and.i36 = and i32 %31, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i36)
  %tobool.not.i37 = icmp eq i32 %and.i36, 0
  br i1 %tobool.not.i37, label %css_is_dying.exit, label %land.rhs.if.then13_crit_edge

land.rhs.if.then13_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.then13

css_is_dying.exit:                                ; preds = %land.rhs
  %refcnt.i38 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %29, i32 0, i32 2
  %32 = ptrtoint ptr %refcnt.i38 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %refcnt.i38, align 4
  %and.i.i39 = and i32 %33, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i39)
  %tobool.i.i40.not = icmp eq i32 %and.i.i39, 0
  br i1 %tobool.i.i40.not, label %css_is_dying.exit.if.then13_crit_edge, label %css_is_dying.exit.if.end15_crit_edge, !prof !671

css_is_dying.exit.if.end15_crit_edge:             ; preds = %css_is_dying.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end15

css_is_dying.exit.if.then13_crit_edge:            ; preds = %css_is_dying.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.then13

if.then13:                                        ; preds = %css_is_dying.exit.if.then13_crit_edge, %land.rhs.if.then13_crit_edge
  %34 = ptrtoint ptr %wb_id to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %wb_id, align 8
  tail call fastcc void @inode_switch_wbs(ptr noundef %inode, i32 noundef %35)
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %css_is_dying.exit.if.end15_crit_edge, %inode_to_wb.exit.if.end15_crit_edge, %if.then
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wb_get(ptr noundef %wb) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %wb, align 8
  %wb1 = getelementptr inbounds %struct.backing_dev_info, ptr %1, i32 0, i32 11
  %cmp.not = icmp eq ptr %wb1, %wb
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.then:                                          ; preds = %entry
  %refcnt = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 27
  %2 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i = add i32 %5, 1
  store volatile i32 %add.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !675
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #10
  %call.i.i.i = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i.i.i, label %if.then.rcu_read_lock.exit.i.i_crit_edge, label %land.lhs.true.i.i.i

if.then.rcu_read_lock.exit.i.i_crit_edge:         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %if.then
  %call1.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge, label %land.lhs.true2.i.i.i

land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit.i.i

land.lhs.true2.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %.b4.i.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i.i, label %land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge, label %if.then.i.i.i

land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge: ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 696, ptr noundef nonnull @.str.141) #10
  br label %rcu_read_lock.exit.i.i

rcu_read_lock.exit.i.i:                           ; preds = %if.then.i.i.i, %land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge, %land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge, %if.then.rcu_read_lock.exit.i.i_crit_edge
  %6 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %refcnt, align 4
  %and.i.i.i = and i32 %7, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i1.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i1.i.i, label %do.body1.i.i, label %if.else.i.i, !prof !670

do.body1.i.i:                                     ; preds = %rcu_read_lock.exit.i.i
  %8 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #10, !srcloc !688
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i2.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i2.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %14, %7
  %15 = inttoptr i32 %add.i.i to ptr
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %add15.i.i = add i32 %17, 1
  store i32 %add15.i.i, ptr %15, align 4
  %18 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #10, !srcloc !689
  %and.i.i.i.i = and i32 %18, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.then29.i.i, label %do.body1.i.i.do.end31.i.i_crit_edge, !prof !671

do.body1.i.i.do.end31.i.i_crit_edge:              ; preds = %do.body1.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end31.i.i

if.then29.i.i:                                    ; preds = %do.body1.i.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @warn_bogus_irq_restore() #10
  br label %do.end31.i.i

do.end31.i.i:                                     ; preds = %if.then29.i.i, %do.body1.i.i.do.end31.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %8) #10, !srcloc !690
  br label %if.end38.i.i

if.else.i.i:                                      ; preds = %rcu_read_lock.exit.i.i
  call void @__sanitizer_cov_trace_pc() #12
  %data.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 27, i32 1
  %19 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %data.i.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %20, i32 noundef 4) #10
  tail call void @llvm.prefetch.p0(ptr %20, i32 1, i32 3, i32 1) #10
  %21 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %20, ptr %20, i32 1, ptr elementtype(i32) %20) #10, !srcloc !682
  br label %if.end38.i.i

if.end38.i.i:                                     ; preds = %if.else.i.i, %do.end31.i.i
  %call.i3.i.i = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i3.i.i, label %if.end38.i.i.percpu_ref_get.exit_crit_edge, label %land.lhs.true.i6.i.i

if.end38.i.i.percpu_ref_get.exit_crit_edge:       ; preds = %if.end38.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %percpu_ref_get.exit

land.lhs.true.i6.i.i:                             ; preds = %if.end38.i.i
  %call1.i4.i.i = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i4.i.i)
  %tobool.not.i5.i.i = icmp eq i32 %call1.i4.i.i, 0
  br i1 %tobool.not.i5.i.i, label %land.lhs.true.i6.i.i.percpu_ref_get.exit_crit_edge, label %land.lhs.true2.i8.i.i

land.lhs.true.i6.i.i.percpu_ref_get.exit_crit_edge: ; preds = %land.lhs.true.i6.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %percpu_ref_get.exit

land.lhs.true2.i8.i.i:                            ; preds = %land.lhs.true.i6.i.i
  %.b4.i7.i.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i7.i.i, label %land.lhs.true2.i8.i.i.percpu_ref_get.exit_crit_edge, label %if.then.i9.i.i

land.lhs.true2.i8.i.i.percpu_ref_get.exit_crit_edge: ; preds = %land.lhs.true2.i8.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %percpu_ref_get.exit

if.then.i9.i.i:                                   ; preds = %land.lhs.true2.i8.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 724, ptr noundef nonnull @.str.142) #10
  br label %percpu_ref_get.exit

percpu_ref_get.exit:                              ; preds = %if.then.i9.i.i, %land.lhs.true2.i8.i.i.percpu_ref_get.exit_crit_edge, %land.lhs.true.i6.i.i.percpu_ref_get.exit_crit_edge, %if.end38.i.i.percpu_ref_get.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !678
  %22 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i10.i.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i.i.i10.i.i to ptr
  %preempt_count.i.i.i.i11.i.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i.i.i11.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i.i.i11.i.i, align 4
  %sub.i.i.i.i.i = add i32 %25, -1
  store volatile i32 %sub.i.i.i.i.i, ptr %preempt_count.i.i.i.i11.i.i, align 4
  tail call void @rcu_read_unlock_strict() #10
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #10
  br label %if.end

if.end:                                           ; preds = %percpu_ref_get.exit, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @inode_switch_wbs(ptr noundef %inode, i32 noundef %new_wb_id) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @inode_to_bdi(ptr noundef %inode) #10
  %i_state = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 24
  %0 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %i_state, align 8
  %and = and i32 %1, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @isw_nr_in_flight, i32 noundef 4) #10
  %2 = load volatile i32, ptr @isw_nr_in_flight, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1024, i32 %2)
  %cmp = icmp sgt i32 %2, 1024
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end3:                                          ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %3 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %3, i32 noundef 2848, i32 noundef 68) #13
  %tobool6.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool6.not, label %if.end3.cleanup_crit_edge, label %if.end8

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end8:                                          ; preds = %if.end3
  %call.i.i66 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @isw_nr_in_flight, i32 noundef 4) #10
  tail call void @llvm.prefetch.p0(ptr nonnull @isw_nr_in_flight, i32 1, i32 3, i32 1) #10
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @isw_nr_in_flight, ptr nonnull @isw_nr_in_flight, i32 1, ptr nonnull elementtype(i32) @isw_nr_in_flight) #10, !srcloc !682
  %5 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %8, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !675
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #10
  %call.i = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i, label %if.end8.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end8.rcu_read_lock.exit_crit_edge:             ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end8
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 696, ptr noundef nonnull @.str.141) #10
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end8.rcu_read_lock.exit_crit_edge
  %call9 = tail call ptr @css_from_id(i32 noundef %new_wb_id, ptr noundef nonnull @memory_cgrp_subsys) #10
  %tobool10.not = icmp eq ptr %call9, null
  br i1 %tobool10.not, label %rcu_read_lock.exit.if.end13_crit_edge, label %land.lhs.true

rcu_read_lock.exit.if.end13_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end13

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #12
  %call11 = tail call fastcc zeroext i1 @css_tryget(ptr noundef nonnull %call9)
  %spec.select = select i1 %call11, ptr %call9, ptr null
  br label %if.end13

if.end13:                                         ; preds = %land.lhs.true, %rcu_read_lock.exit.if.end13_crit_edge
  %memcg_css.0 = phi ptr [ null, %rcu_read_lock.exit.if.end13_crit_edge ], [ %spec.select, %land.lhs.true ]
  %call.i68 = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i68, label %if.end13.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i71

if.end13.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit

land.lhs.true.i71:                                ; preds = %if.end13
  %call1.i69 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i69)
  %tobool.not.i70 = icmp eq i32 %call1.i69, 0
  br i1 %tobool.not.i70, label %land.lhs.true.i71.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i73

land.lhs.true.i71.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i71
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit

land.lhs.true2.i73:                               ; preds = %land.lhs.true.i71
  %.b4.i72 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i72, label %land.lhs.true2.i73.rcu_read_unlock.exit_crit_edge, label %if.then.i74

land.lhs.true2.i73.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i73
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit

if.then.i74:                                      ; preds = %land.lhs.true2.i73
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 724, ptr noundef nonnull @.str.142) #10
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i74, %land.lhs.true2.i73.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i71.rcu_read_unlock.exit_crit_edge, %if.end13.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !678
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i75 = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i.i.i75 to ptr
  %preempt_count.i.i.i.i76 = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i.i.i76 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i.i.i76, align 4
  %sub.i.i.i = add i32 %12, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i76, align 4
  tail call void @rcu_read_unlock_strict() #10
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #10
  %tobool14.not = icmp eq ptr %memcg_css.0, null
  br i1 %tobool14.not, label %rcu_read_unlock.exit.out_free_crit_edge, label %if.end16

rcu_read_unlock.exit.out_free_crit_edge:          ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %out_free

if.end16:                                         ; preds = %rcu_read_unlock.exit
  %call17 = tail call ptr @wb_get_create(ptr noundef %call, ptr noundef nonnull %memcg_css.0, i32 noundef 2592) #10
  %new_wb = getelementptr inbounds %struct.inode_switch_wbs_context, ptr %call7.i.i, i32 0, i32 1
  %13 = ptrtoint ptr %new_wb to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call17, ptr %new_wb, align 8
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %memcg_css.0, i32 0, i32 7
  %14 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i77 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i77, label %if.then.i78, label %if.end16.css_put.exit_crit_edge

if.end16.css_put.exit_crit_edge:                  ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  br label %css_put.exit

if.then.i78:                                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  %refcnt.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %memcg_css.0, i32 0, i32 2
  tail call fastcc void @percpu_ref_put_many(ptr noundef %refcnt.i, i32 noundef 1) #10
  %16 = ptrtoint ptr %new_wb to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pr = load ptr, ptr %new_wb, align 8
  br label %css_put.exit

css_put.exit:                                     ; preds = %if.then.i78, %if.end16.css_put.exit_crit_edge
  %17 = phi ptr [ %call17, %if.end16.css_put.exit_crit_edge ], [ %.pr, %if.then.i78 ]
  %tobool19.not = icmp eq ptr %17, null
  br i1 %tobool19.not, label %css_put.exit.out_free_crit_edge, label %if.end21

css_put.exit.out_free_crit_edge:                  ; preds = %css_put.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %out_free

if.end21:                                         ; preds = %css_put.exit
  %call23 = tail call fastcc zeroext i1 @inode_prepare_wbs_switch(ptr noundef %inode, ptr noundef nonnull %17)
  br i1 %call23, label %if.end25, label %if.end21.out_free_crit_edge

if.end21.out_free_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #12
  br label %out_free

if.end25:                                         ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #12
  %inodes = getelementptr inbounds %struct.inode_switch_wbs_context, ptr %call7.i.i, i32 0, i32 2
  %18 = ptrtoint ptr %inodes to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %inode, ptr %inodes, align 4
  tail call void @__init_work(ptr noundef nonnull %call7.i.i, i32 noundef 0) #10
  %19 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 -64, ptr %call7.i.i, align 8
  %lockdep_map = getelementptr inbounds %struct.work_struct, ptr %call7.i.i, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.9, ptr noundef nonnull @inode_switch_wbs.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #10
  %entry33 = getelementptr inbounds %struct.work_struct, ptr %call7.i.i, i32 0, i32 1
  %20 = ptrtoint ptr %entry33 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %entry33, ptr %entry33, align 4
  %prev.i = getelementptr inbounds %struct.work_struct, ptr %call7.i.i, i32 0, i32 1, i32 1
  %21 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %entry33, ptr %prev.i, align 8
  %func = getelementptr inbounds %struct.work_struct, ptr %call7.i.i, i32 0, i32 2
  %22 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr @inode_switch_wbs_work_fn, ptr %func, align 4
  %23 = load ptr, ptr @isw_wq, align 4
  %call37 = tail call zeroext i1 @queue_rcu_work(ptr noundef %23, ptr noundef nonnull %call7.i.i) #10
  br label %cleanup

out_free:                                         ; preds = %if.end21.out_free_crit_edge, %css_put.exit.out_free_crit_edge, %rcu_read_unlock.exit.out_free_crit_edge
  %call.i.i67 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @isw_nr_in_flight, i32 noundef 4) #10
  tail call void @llvm.prefetch.p0(ptr nonnull @isw_nr_in_flight, i32 1, i32 3, i32 1) #10
  %24 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @isw_nr_in_flight, ptr nonnull @isw_nr_in_flight, i32 1, ptr nonnull elementtype(i32) @isw_nr_in_flight) #10, !srcloc !673
  %new_wb38 = getelementptr inbounds %struct.inode_switch_wbs_context, ptr %call7.i.i, i32 0, i32 1
  %25 = ptrtoint ptr %new_wb38 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %new_wb38, align 8
  %tobool39.not = icmp eq ptr %26, null
  br i1 %tobool39.not, label %out_free.if.end42_crit_edge, label %if.then40

out_free.if.end42_crit_edge:                      ; preds = %out_free
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end42

if.then40:                                        ; preds = %out_free
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %26, align 8
  %tobool.not.i.i = icmp eq ptr %28, null
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %if.end39.critedge.i.i

land.rhs.i.i:                                     ; preds = %if.then40
  %.b49.i.i = load i1, ptr @wb_put_many.__already_done, align 1
  br i1 %.b49.i.i, label %land.rhs.i.i.if.end42_crit_edge, label %if.then.i.i, !prof !670

land.rhs.i.i.if.end42_crit_edge:                  ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end42

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @wb_put_many.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.134, i32 noundef 253, i32 noundef 9, ptr noundef null) #10
  br label %if.end42

if.end39.critedge.i.i:                            ; preds = %if.then40
  %wb41.i.i = getelementptr inbounds %struct.backing_dev_info, ptr %28, i32 0, i32 11
  %cmp.not.i.i = icmp eq ptr %wb41.i.i, %26
  br i1 %cmp.not.i.i, label %if.end39.critedge.i.i.if.end42_crit_edge, label %if.then42.i.i

if.end39.critedge.i.i.if.end42_crit_edge:         ; preds = %if.end39.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end42

if.then42.i.i:                                    ; preds = %if.end39.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #12
  %refcnt.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %26, i32 0, i32 27
  tail call fastcc void @percpu_ref_put_many(ptr noundef %refcnt.i.i, i32 noundef 1) #10
  br label %if.end42

if.end42:                                         ; preds = %if.then42.i.i, %if.end39.critedge.i.i.if.end42_crit_edge, %if.then.i.i, %land.rhs.i.i.if.end42_crit_edge, %out_free.if.end42_crit_edge
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end42, %if.end25, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wbc_detach_inode(ptr noundef %wbc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %wb1 = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 6
  %0 = ptrtoint ptr %wb1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %wb1, align 8
  %inode2 = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 7
  %2 = ptrtoint ptr %inode2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %inode2, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  %i_wb_frn_history = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %i_wb_frn_history to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %i_wb_frn_history, align 2
  %i_wb_frn_avg_time = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 32
  %6 = ptrtoint ptr %i_wb_frn_avg_time to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %i_wb_frn_avg_time, align 4
  %conv = zext i16 %7 to i32
  %wb_bytes = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 11
  %8 = ptrtoint ptr %wb_bytes to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %wb_bytes, align 4
  %wb_lcand_bytes = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 12
  %10 = ptrtoint ptr %wb_lcand_bytes to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %wb_lcand_bytes, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %11)
  %cmp.not = icmp ult i32 %9, %11
  br i1 %cmp.not, label %if.end.if.else_crit_edge, label %land.lhs.true

if.end.if.else_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.else

land.lhs.true:                                    ; preds = %if.end
  %wb_tcand_bytes = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 13
  %12 = ptrtoint ptr %wb_tcand_bytes to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %wb_tcand_bytes, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %13)
  %cmp5.not = icmp ult i32 %9, %13
  br i1 %cmp5.not, label %land.lhs.true.if.else_crit_edge, label %if.then7

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.else

if.then7:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  %wb_id = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 8
  br label %if.end18

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %if.end.if.else_crit_edge
  %wb_tcand_bytes10 = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 13
  %14 = ptrtoint ptr %wb_tcand_bytes10 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %wb_tcand_bytes10, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %15)
  %cmp11.not = icmp ult i32 %11, %15
  br i1 %cmp11.not, label %if.else15, label %if.then13

if.then13:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #12
  %wb_lcand_id = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 9
  br label %if.end18

if.else15:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #12
  %wb_tcand_id = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 10
  br label %if.end18

if.end18:                                         ; preds = %if.else15, %if.then13, %if.then7
  %max_bytes.0 = phi i32 [ %9, %if.then7 ], [ %11, %if.then13 ], [ %15, %if.else15 ]
  %max_id.0.in = phi ptr [ %wb_id, %if.then7 ], [ %wb_lcand_id, %if.then13 ], [ %wb_tcand_id, %if.else15 ]
  %16 = ptrtoint ptr %max_id.0.in to i32
  call void @__asan_load4_noabort(i32 %16)
  %max_id.0 = load i32, ptr %max_id.0.in, align 4
  %17 = shl i32 %max_bytes.0, 1
  %shl = and i32 %17, -8192
  %avg_write_bandwidth = getelementptr inbounds %struct.bdi_writeback, ptr %1, i32 0, i32 15
  %18 = ptrtoint ptr %avg_write_bandwidth to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %avg_write_bandwidth, align 4
  %add = add i32 %shl, -1
  %sub = add i32 %add, %19
  %div = udiv i32 %sub, %19
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %tobool20.not = icmp eq i16 %7, 0
  %shr22 = lshr i32 %div, 3
  %shr23 = lshr i32 %conv, 3
  %sub24 = sub nsw i32 %conv, %shr23
  %add25 = add nsw i32 %sub24, %shr22
  %avg_time.0 = select i1 %tobool20.not, i32 %div, i32 %add25
  %div28468 = lshr i32 %avg_time.0, 3
  call void @__sanitizer_cov_trace_cmp4(i32 %div, i32 %div28468)
  %cmp29.not = icmp ult i32 %div, %div28468
  br i1 %cmp29.not, label %if.end18.if.end369_crit_edge, label %if.then31

if.end18.if.end369_crit_edge:                     ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end369

if.then31:                                        ; preds = %if.end18
  %sub33 = add i32 %div, 1023
  call void @__sanitizer_cov_trace_const_cmp4(i32 5120, i32 %sub33)
  %cmp35 = icmp ult i32 %sub33, 5120
  %div34469 = lshr i32 %sub33, 10
  %cond = select i1 %cmp35, i32 %div34469, i32 5
  %conv37 = zext i16 %5 to i32
  %shl38 = shl i32 %conv37, %cond
  %wb_id40 = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 8
  %20 = ptrtoint ptr %wb_id40 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %wb_id40, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %max_id.0)
  %cmp41.not = icmp eq i32 %21, %max_id.0
  %notmask = shl nsw i32 -1, %cond
  %sub45 = xor i32 %notmask, -1
  %or = select i1 %cmp41.not, i32 0, i32 %sub45
  %history.0.in = or i32 %or, %shl38
  %history.0 = trunc i32 %history.0.in to i16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %history.0)
  %tobool49.not = icmp eq i16 %history.0, 0
  br i1 %tobool49.not, label %if.then31.cond.false361_crit_edge, label %if.then50

if.then31.cond.false361_crit_edge:                ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #12
  br label %cond.false361

if.then50:                                        ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #12
  %conv51 = and i32 %history.0.in, 65535
  tail call fastcc void @trace_inode_foreign_history(ptr noundef %3, ptr noundef %wbc, i32 noundef %conv51)
  br label %cond.false361

cond.false361:                                    ; preds = %if.then50, %if.then31.cond.false361_crit_edge
  %conv362 = and i32 %history.0.in, 65535
  %call.i = tail call i32 @__sw_hweight32(i32 noundef %conv362) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %call.i)
  %cmp365 = icmp ugt i32 %call.i, 8
  br i1 %cmp365, label %if.then367, label %cond.false361.if.end369_crit_edge

cond.false361.if.end369_crit_edge:                ; preds = %cond.false361
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end369

if.then367:                                       ; preds = %cond.false361
  call void @__sanitizer_cov_trace_pc() #12
  tail call fastcc void @inode_switch_wbs(ptr noundef %3, i32 noundef %max_id.0)
  br label %if.end369

if.end369:                                        ; preds = %if.then367, %cond.false361.if.end369_crit_edge, %if.end18.if.end369_crit_edge
  %history.1 = phi i16 [ %5, %if.end18.if.end369_crit_edge ], [ %history.0, %if.then367 ], [ %history.0, %cond.false361.if.end369_crit_edge ]
  %i_wb_frn_winner = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 31
  %22 = ptrtoint ptr %i_wb_frn_winner to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %max_id.0, ptr %i_wb_frn_winner, align 8
  %23 = tail call i32 @llvm.umin.i32(i32 %avg_time.0, i32 65535)
  %conv377 = trunc i32 %23 to i16
  %24 = ptrtoint ptr %i_wb_frn_avg_time to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 %conv377, ptr %i_wb_frn_avg_time, align 4
  %25 = ptrtoint ptr %i_wb_frn_history to i32
  call void @__asan_store2_noabort(i32 %25)
  store i16 %history.1, ptr %i_wb_frn_history, align 2
  %26 = ptrtoint ptr %wb1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %wb1, align 8
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %27, align 8
  %tobool.not.i.i = icmp eq ptr %29, null
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %if.end39.critedge.i.i

land.rhs.i.i:                                     ; preds = %if.end369
  %.b49.i.i = load i1, ptr @wb_put_many.__already_done, align 1
  br i1 %.b49.i.i, label %land.rhs.i.i.wb_put.exit_crit_edge, label %if.then.i.i, !prof !670

land.rhs.i.i.wb_put.exit_crit_edge:               ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_put.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @wb_put_many.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.134, i32 noundef 253, i32 noundef 9, ptr noundef null) #10
  br label %wb_put.exit

if.end39.critedge.i.i:                            ; preds = %if.end369
  %wb41.i.i = getelementptr inbounds %struct.backing_dev_info, ptr %29, i32 0, i32 11
  %cmp.not.i.i = icmp eq ptr %wb41.i.i, %27
  br i1 %cmp.not.i.i, label %if.end39.critedge.i.i.wb_put.exit_crit_edge, label %if.then42.i.i

if.end39.critedge.i.i.wb_put.exit_crit_edge:      ; preds = %if.end39.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_put.exit

if.then42.i.i:                                    ; preds = %if.end39.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #12
  %refcnt.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %27, i32 0, i32 27
  tail call fastcc void @percpu_ref_put_many(ptr noundef %refcnt.i.i, i32 noundef 1) #10
  br label %wb_put.exit

wb_put.exit:                                      ; preds = %if.then42.i.i, %if.end39.critedge.i.i.wb_put.exit_crit_edge, %if.then.i.i, %land.rhs.i.i.wb_put.exit_crit_edge
  %30 = ptrtoint ptr %wb1 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr null, ptr %wb1, align 8
  br label %cleanup

cleanup:                                          ; preds = %wb_put.exit, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_inode_foreign_history(ptr noundef %inode, ptr noundef %wbc, i32 noundef %history) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_inode_foreign_history, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_inode_foreign_history, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !691
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_inode_foreign_history, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %inode, ptr noundef %wbc, i32 noundef %history) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !692
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !692
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_inode_foreign_history, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_inode_foreign_history.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_inode_foreign_history.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 206, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wbc_account_cgroup_owner(ptr nocapture noundef %wbc, ptr noundef %page, i32 noundef %bytes) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %wb = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 6
  %0 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %wb, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %no_cgroup_owner = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 5
  %2 = ptrtoint ptr %no_cgroup_owner to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load = load i16, ptr %no_cgroup_owner, align 4
  %3 = and i16 %bf.load, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool1.not = icmp eq i16 %3, 0
  br i1 %tobool1.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %call = tail call ptr @mem_cgroup_css_from_page(ptr noundef %page) #10
  %flags = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call, i32 0, i32 7
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags, align 4
  %and = and i32 %5, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %id5 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call, i32 0, i32 6
  %6 = ptrtoint ptr %id5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %id5, align 8
  %wb_id = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 8
  %8 = ptrtoint ptr %wb_id to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %wb_id, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %9)
  %cmp = icmp eq i32 %7, %9
  br i1 %cmp, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #12
  %wb_bytes = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 11
  %10 = ptrtoint ptr %wb_bytes to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %wb_bytes, align 4
  %add = add i32 %11, %bytes
  store i32 %add, ptr %wb_bytes, align 4
  br label %cleanup

if.end7:                                          ; preds = %if.end4
  %wb_lcand_id = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 9
  %12 = ptrtoint ptr %wb_lcand_id to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %wb_lcand_id, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %13)
  %cmp8 = icmp eq i32 %7, %13
  br i1 %cmp8, label %if.then9, label %if.end7.if.end11_crit_edge

if.end7.if.end11_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end11

if.then9:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #12
  %wb_lcand_bytes = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 12
  %14 = ptrtoint ptr %wb_lcand_bytes to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %wb_lcand_bytes, align 8
  %add10 = add i32 %15, %bytes
  store i32 %add10, ptr %wb_lcand_bytes, align 8
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end7.if.end11_crit_edge
  %wb_tcand_bytes = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 13
  %16 = ptrtoint ptr %wb_tcand_bytes to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %wb_tcand_bytes, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool12.not = icmp eq i32 %17, 0
  br i1 %tobool12.not, label %if.then13, label %if.end11.if.end14_crit_edge

if.end11.if.end14_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end14

if.then13:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #12
  %wb_tcand_id = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 10
  %18 = ptrtoint ptr %wb_tcand_id to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %7, ptr %wb_tcand_id, align 8
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end11.if.end14_crit_edge
  %wb_tcand_id15 = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 10
  %19 = ptrtoint ptr %wb_tcand_id15 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %wb_tcand_id15, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %20)
  %cmp16 = icmp eq i32 %7, %20
  %21 = tail call i32 @llvm.usub.sat.i32(i32 %17, i32 %bytes)
  %add19 = add i32 %17, %bytes
  %storemerge = select i1 %cmp16, i32 %add19, i32 %21
  %22 = ptrtoint ptr %wb_tcand_bytes to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %storemerge, ptr %wb_tcand_bytes, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.then6, %if.end.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @inode_congested(ptr noundef %inode, i32 noundef %cong_bits) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %inode, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %i_wb.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 30
  %0 = ptrtoint ptr %i_wb.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_wb.i, align 4
  %tobool.i.not = icmp eq ptr %1, null
  br i1 %tobool.i.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  %2 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %5, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !675
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #10
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i.i, label %if.then.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

if.then.rcu_read_lock.exit.i_crit_edge:           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %if.then
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 696, ptr noundef nonnull @.str.141) #10
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %if.then.rcu_read_lock.exit.i_crit_edge
  %i_state.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 24
  %6 = ptrtoint ptr %i_state.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %i_state.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !695
  %and.i = and i32 %7, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %unlocked_inode_to_wb_begin.exit.thread, label %if.then.i, !prof !670

unlocked_inode_to_wb_begin.exit.thread:           ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  %8 = ptrtoint ptr %i_wb.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %i_wb.i, align 4
  %congested.i32 = getelementptr inbounds %struct.bdi_writeback, ptr %9, i32 0, i32 10
  %10 = ptrtoint ptr %congested.i32 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %congested.i32, align 8
  br label %if.end.i

if.then.i:                                        ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  %i_mapping.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %12 = ptrtoint ptr %i_mapping.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %i_mapping.i, align 8
  %i_pages.i = getelementptr inbounds %struct.address_space, ptr %13, i32 0, i32 1
  %call12.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %i_pages.i) #10
  %14 = ptrtoint ptr %i_wb.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %i_wb.i, align 4
  %congested.i = getelementptr inbounds %struct.bdi_writeback, ptr %15, i32 0, i32 10
  %16 = ptrtoint ptr %congested.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %congested.i, align 8
  %i_mapping.i16 = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %18 = ptrtoint ptr %i_mapping.i16 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %i_mapping.i16, align 8
  %i_pages.i17 = getelementptr inbounds %struct.address_space, ptr %19, i32 0, i32 1
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %i_pages.i17, i32 noundef %call12.i) #10
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %unlocked_inode_to_wb_begin.exit.thread
  %.pn = phi i32 [ %11, %unlocked_inode_to_wb_begin.exit.thread ], [ %17, %if.then.i ]
  %tobool335.in = and i32 %.pn, %cong_bits
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %tobool335.in)
  %tobool335 = icmp ne i32 %tobool335.in, 0
  %call.i.i19 = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i.i19, label %if.end.i.unlocked_inode_to_wb_end.exit_crit_edge, label %land.lhs.true.i.i22

if.end.i.unlocked_inode_to_wb_end.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %unlocked_inode_to_wb_end.exit

land.lhs.true.i.i22:                              ; preds = %if.end.i
  %call1.i.i20 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i20)
  %tobool.not.i.i21 = icmp eq i32 %call1.i.i20, 0
  br i1 %tobool.not.i.i21, label %land.lhs.true.i.i22.unlocked_inode_to_wb_end.exit_crit_edge, label %land.lhs.true2.i.i24

land.lhs.true.i.i22.unlocked_inode_to_wb_end.exit_crit_edge: ; preds = %land.lhs.true.i.i22
  call void @__sanitizer_cov_trace_pc() #12
  br label %unlocked_inode_to_wb_end.exit

land.lhs.true2.i.i24:                             ; preds = %land.lhs.true.i.i22
  %.b4.i.i23 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i.i23, label %land.lhs.true2.i.i24.unlocked_inode_to_wb_end.exit_crit_edge, label %if.then.i.i25

land.lhs.true2.i.i24.unlocked_inode_to_wb_end.exit_crit_edge: ; preds = %land.lhs.true2.i.i24
  call void @__sanitizer_cov_trace_pc() #12
  br label %unlocked_inode_to_wb_end.exit

if.then.i.i25:                                    ; preds = %land.lhs.true2.i.i24
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 724, ptr noundef nonnull @.str.142) #10
  br label %unlocked_inode_to_wb_end.exit

unlocked_inode_to_wb_end.exit:                    ; preds = %if.then.i.i25, %land.lhs.true2.i.i24.unlocked_inode_to_wb_end.exit_crit_edge, %land.lhs.true.i.i22.unlocked_inode_to_wb_end.exit_crit_edge, %if.end.i.unlocked_inode_to_wb_end.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !678
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i.i26 = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i.i.i.i26 to ptr
  %preempt_count.i.i.i.i.i27 = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i.i.i.i27 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i.i.i.i27, align 4
  %sub.i.i.i.i = add i32 %23, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i.i27, align 4
  tail call void @rcu_read_unlock_strict() #10
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #10
  %conv = zext i1 %tobool335 to i32
  br label %return

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %call5 = tail call ptr @inode_to_bdi(ptr noundef %inode) #10
  %congested.i28 = getelementptr inbounds %struct.backing_dev_info, ptr %call5, i32 0, i32 11, i32 10
  %24 = ptrtoint ptr %congested.i28 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %congested.i28, align 8
  %and.i29 = and i32 %25, %cong_bits
  br label %return

return:                                           ; preds = %if.end, %unlocked_inode_to_wb_end.exit
  %retval.0 = phi i32 [ %conv, %unlocked_inode_to_wb_end.exit ], [ %and.i29, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_writeback_by_id(i64 noundef %bdi_id, i32 noundef %memcg_id, i32 noundef %reason, ptr noundef %done) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @bdi_get_by_id(i64 noundef %bdi_id) #10
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !675
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #10
  %call.i = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i, label %if.end.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 696, ptr noundef nonnull @.str.141) #10
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end.rcu_read_lock.exit_crit_edge
  %call1 = tail call ptr @css_from_id(i32 noundef %memcg_id, ptr noundef nonnull @memory_cgrp_subsys) #10
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %rcu_read_lock.exit.if.end5_crit_edge, label %land.lhs.true

rcu_read_lock.exit.if.end5_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end5

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #12
  %call3 = tail call fastcc zeroext i1 @css_tryget(ptr noundef nonnull %call1)
  %spec.select = select i1 %call3, ptr %call1, ptr null
  br label %if.end5

if.end5:                                          ; preds = %land.lhs.true, %rcu_read_lock.exit.if.end5_crit_edge
  %memcg_css.0 = phi ptr [ null, %rcu_read_lock.exit.if.end5_crit_edge ], [ %spec.select, %land.lhs.true ]
  %call.i47 = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i47, label %if.end5.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i50

if.end5.rcu_read_unlock.exit_crit_edge:           ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit

land.lhs.true.i50:                                ; preds = %if.end5
  %call1.i48 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i48)
  %tobool.not.i49 = icmp eq i32 %call1.i48, 0
  br i1 %tobool.not.i49, label %land.lhs.true.i50.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i52

land.lhs.true.i50.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i50
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit

land.lhs.true2.i52:                               ; preds = %land.lhs.true.i50
  %.b4.i51 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i51, label %land.lhs.true2.i52.rcu_read_unlock.exit_crit_edge, label %if.then.i53

land.lhs.true2.i52.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i52
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit

if.then.i53:                                      ; preds = %land.lhs.true2.i52
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 724, ptr noundef nonnull @.str.142) #10
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i53, %land.lhs.true2.i52.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i50.rcu_read_unlock.exit_crit_edge, %if.end5.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !678
  %4 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i54 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i.i54 to ptr
  %preempt_count.i.i.i.i55 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i.i55 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i.i55, align 4
  %sub.i.i.i = add i32 %7, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i55, align 4
  tail call void @rcu_read_unlock_strict() #10
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #10
  %tobool6.not = icmp eq ptr %memcg_css.0, null
  br i1 %tobool6.not, label %rcu_read_unlock.exit.out_bdi_put_crit_edge, label %if.end8

rcu_read_unlock.exit.out_bdi_put_crit_edge:       ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %out_bdi_put

if.end8:                                          ; preds = %rcu_read_unlock.exit
  %call9 = tail call ptr @wb_get_lookup(ptr noundef nonnull %call, ptr noundef nonnull %memcg_css.0) #10
  %tobool10.not = icmp eq ptr %call9, null
  br i1 %tobool10.not, label %if.end8.out_css_put_crit_edge, label %if.end12

if.end8.out_css_put_crit_edge:                    ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #12
  br label %out_css_put

if.end12:                                         ; preds = %if.end8
  %arrayidx.i = getelementptr %struct.mem_cgroup, ptr %memcg_css.0, i32 0, i32 26, i32 0, i32 20
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %arrayidx.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %10 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %10, i32 noundef 10496, i32 noundef 32) #13
  %tobool16.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool16.not, label %if.end12.if.end23_crit_edge, label %if.then17

if.end12.if.end23_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end23

if.then17:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #12
  %mul = mul i32 %9, 10
  %div46 = lshr i32 %mul, 3
  %11 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %div46, ptr %call7.i.i, align 8
  %sync_mode = getelementptr inbounds %struct.wb_writeback_work, ptr %call7.i.i, i32 0, i32 2
  %12 = ptrtoint ptr %sync_mode to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %sync_mode, align 8
  %range_cyclic = getelementptr inbounds %struct.wb_writeback_work, ptr %call7.i.i, i32 0, i32 3
  %13 = ptrtoint ptr %range_cyclic to i32
  call void @__asan_load1_noabort(i32 %13)
  %bf.load = load i8, ptr %range_cyclic, align 4
  %reason18 = getelementptr inbounds %struct.wb_writeback_work, ptr %call7.i.i, i32 0, i32 4
  %14 = ptrtoint ptr %reason18 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %reason, ptr %reason18, align 8
  %done19 = getelementptr inbounds %struct.wb_writeback_work, ptr %call7.i.i, i32 0, i32 6
  %15 = ptrtoint ptr %done19 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %done, ptr %done19, align 4
  %bf.set22 = or i8 %bf.load, 36
  store i8 %bf.set22, ptr %range_cyclic, align 4
  tail call fastcc void @wb_queue_work(ptr noundef nonnull %call9, ptr noundef nonnull %call7.i.i)
  br label %if.end23

if.end23:                                         ; preds = %if.then17, %if.end12.if.end23_crit_edge
  %ret.0 = phi i32 [ 0, %if.then17 ], [ -12, %if.end12.if.end23_crit_edge ]
  %16 = ptrtoint ptr %call9 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %call9, align 8
  %tobool.not.i.i = icmp eq ptr %17, null
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %if.end39.critedge.i.i

land.rhs.i.i:                                     ; preds = %if.end23
  %.b49.i.i = load i1, ptr @wb_put_many.__already_done, align 1
  br i1 %.b49.i.i, label %land.rhs.i.i.out_css_put_crit_edge, label %if.then.i.i, !prof !670

land.rhs.i.i.out_css_put_crit_edge:               ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %out_css_put

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @wb_put_many.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.134, i32 noundef 253, i32 noundef 9, ptr noundef null) #10
  br label %out_css_put

if.end39.critedge.i.i:                            ; preds = %if.end23
  %wb41.i.i = getelementptr inbounds %struct.backing_dev_info, ptr %17, i32 0, i32 11
  %cmp.not.i.i = icmp eq ptr %wb41.i.i, %call9
  br i1 %cmp.not.i.i, label %if.end39.critedge.i.i.out_css_put_crit_edge, label %if.then42.i.i

if.end39.critedge.i.i.out_css_put_crit_edge:      ; preds = %if.end39.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %out_css_put

if.then42.i.i:                                    ; preds = %if.end39.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #12
  %refcnt.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %call9, i32 0, i32 27
  tail call fastcc void @percpu_ref_put_many(ptr noundef %refcnt.i.i, i32 noundef 1) #10
  br label %out_css_put

out_css_put:                                      ; preds = %if.then42.i.i, %if.end39.critedge.i.i.out_css_put_crit_edge, %if.then.i.i, %land.rhs.i.i.out_css_put_crit_edge, %if.end8.out_css_put_crit_edge
  %ret.1 = phi i32 [ -2, %if.end8.out_css_put_crit_edge ], [ %ret.0, %land.rhs.i.i.out_css_put_crit_edge ], [ %ret.0, %if.then.i.i ], [ %ret.0, %if.end39.critedge.i.i.out_css_put_crit_edge ], [ %ret.0, %if.then42.i.i ]
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %memcg_css.0, i32 0, i32 7
  %18 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %19, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i56 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i56, label %if.then.i57, label %out_css_put.out_bdi_put_crit_edge

out_css_put.out_bdi_put_crit_edge:                ; preds = %out_css_put
  call void @__sanitizer_cov_trace_pc() #12
  br label %out_bdi_put

if.then.i57:                                      ; preds = %out_css_put
  call void @__sanitizer_cov_trace_pc() #12
  %refcnt.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %memcg_css.0, i32 0, i32 2
  tail call fastcc void @percpu_ref_put_many(ptr noundef %refcnt.i, i32 noundef 1) #10
  br label %out_bdi_put

out_bdi_put:                                      ; preds = %if.then.i57, %out_css_put.out_bdi_put_crit_edge, %rcu_read_unlock.exit.out_bdi_put_crit_edge
  %ret.2 = phi i32 [ -2, %rcu_read_unlock.exit.out_bdi_put_crit_edge ], [ %ret.1, %out_css_put.out_bdi_put_crit_edge ], [ %ret.1, %if.then.i57 ]
  tail call void @bdi_put(ptr noundef nonnull %call) #10
  br label %cleanup

cleanup:                                          ; preds = %out_bdi_put, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.2, %out_bdi_put ], [ -2, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bdi_get_by_id(i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @css_from_id(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @css_tryget(ptr noundef %css) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %flags = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 7
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %return

if.then:                                          ; preds = %entry
  %refcnt = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 2
  %2 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i = add i32 %5, 1
  store volatile i32 %add.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !675
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #10
  %call.i.i.i = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i.i.i, label %if.then.rcu_read_lock.exit.i.i_crit_edge, label %land.lhs.true.i.i.i

if.then.rcu_read_lock.exit.i.i_crit_edge:         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %if.then
  %call1.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge, label %land.lhs.true2.i.i.i

land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit.i.i

land.lhs.true2.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %.b4.i.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i.i, label %land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge, label %if.then.i.i.i

land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge: ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 696, ptr noundef nonnull @.str.141) #10
  br label %rcu_read_lock.exit.i.i

rcu_read_lock.exit.i.i:                           ; preds = %if.then.i.i.i, %land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge, %land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge, %if.then.rcu_read_lock.exit.i.i_crit_edge
  %6 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %refcnt, align 4
  %and.i.i.i = and i32 %7, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i1.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i1.i.i, label %do.body1.i.i, label %if.else.i.i, !prof !670

do.body1.i.i:                                     ; preds = %rcu_read_lock.exit.i.i
  %8 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #10, !srcloc !688
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i2.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i2.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %14, %7
  %15 = inttoptr i32 %add.i.i to ptr
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %add15.i.i = add i32 %17, 1
  store i32 %add15.i.i, ptr %15, align 4
  %18 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #10, !srcloc !689
  %and.i.i.i.i = and i32 %18, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.then29.i.i, label %do.body1.i.i.do.end31.i.i_crit_edge, !prof !671

do.body1.i.i.do.end31.i.i_crit_edge:              ; preds = %do.body1.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end31.i.i

if.then29.i.i:                                    ; preds = %do.body1.i.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @warn_bogus_irq_restore() #10
  br label %do.end31.i.i

do.end31.i.i:                                     ; preds = %if.then29.i.i, %do.body1.i.i.do.end31.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %8) #10, !srcloc !690
  br label %if.end39.i.i

if.else.i.i:                                      ; preds = %rcu_read_lock.exit.i.i
  %data.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 2, i32 1
  %19 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %data.i.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %20, i32 noundef 4) #10
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !696
  tail call void @llvm.prefetch.p0(ptr %20, i32 1, i32 3, i32 1) #10
  %21 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %20, ptr %20, i32 0, i32 1, ptr elementtype(i32) %20) #10, !srcloc !697
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %21, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.not.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i.i, label %if.else.i.i.atomic_long_add_unless.exit.i.i_crit_edge, label %do.end11.i.i.i.i.i.i

if.else.i.i.atomic_long_add_unless.exit.i.i_crit_edge: ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %atomic_long_add_unless.exit.i.i

do.end11.i.i.i.i.i.i:                             ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !698
  br label %atomic_long_add_unless.exit.i.i

atomic_long_add_unless.exit.i.i:                  ; preds = %do.end11.i.i.i.i.i.i, %if.else.i.i.atomic_long_add_unless.exit.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp ne i32 %asmresult.i.i.i.i.i.i, 0
  br label %if.end39.i.i

if.end39.i.i:                                     ; preds = %atomic_long_add_unless.exit.i.i, %do.end31.i.i
  %ret.0.off0.i.i = phi i1 [ true, %do.end31.i.i ], [ %cmp.i.i.i.i.i, %atomic_long_add_unless.exit.i.i ]
  %call.i3.i.i = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i3.i.i, label %if.end39.i.i.percpu_ref_tryget.exit_crit_edge, label %land.lhs.true.i6.i.i

if.end39.i.i.percpu_ref_tryget.exit_crit_edge:    ; preds = %if.end39.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %percpu_ref_tryget.exit

land.lhs.true.i6.i.i:                             ; preds = %if.end39.i.i
  %call1.i4.i.i = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i4.i.i)
  %tobool.not.i5.i.i = icmp eq i32 %call1.i4.i.i, 0
  br i1 %tobool.not.i5.i.i, label %land.lhs.true.i6.i.i.percpu_ref_tryget.exit_crit_edge, label %land.lhs.true2.i8.i.i

land.lhs.true.i6.i.i.percpu_ref_tryget.exit_crit_edge: ; preds = %land.lhs.true.i6.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %percpu_ref_tryget.exit

land.lhs.true2.i8.i.i:                            ; preds = %land.lhs.true.i6.i.i
  %.b4.i7.i.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i7.i.i, label %land.lhs.true2.i8.i.i.percpu_ref_tryget.exit_crit_edge, label %if.then.i9.i.i

land.lhs.true2.i8.i.i.percpu_ref_tryget.exit_crit_edge: ; preds = %land.lhs.true2.i8.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %percpu_ref_tryget.exit

if.then.i9.i.i:                                   ; preds = %land.lhs.true2.i8.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 724, ptr noundef nonnull @.str.142) #10
  br label %percpu_ref_tryget.exit

percpu_ref_tryget.exit:                           ; preds = %if.then.i9.i.i, %land.lhs.true2.i8.i.i.percpu_ref_tryget.exit_crit_edge, %land.lhs.true.i6.i.i.percpu_ref_tryget.exit_crit_edge, %if.end39.i.i.percpu_ref_tryget.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !678
  %22 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i10.i.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i.i.i10.i.i to ptr
  %preempt_count.i.i.i.i11.i.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i.i.i11.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i.i.i11.i.i, align 4
  %sub.i.i.i.i.i = add i32 %25, -1
  store volatile i32 %sub.i.i.i.i.i, ptr %preempt_count.i.i.i.i11.i.i, align 4
  tail call void @rcu_read_unlock_strict() #10
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #10
  br label %return

return:                                           ; preds = %percpu_ref_tryget.exit, %entry.return_crit_edge
  %retval.0 = phi i1 [ %ret.0.off0.i.i, %percpu_ref_tryget.exit ], [ true, %entry.return_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @wb_get_lookup(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wb_queue_work(ptr noundef %wb, ptr noundef %work) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @trace_writeback_queue(ptr noundef %wb, ptr noundef %work)
  %done = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 6
  %0 = ptrtoint ptr %done to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %done, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %1, i32 noundef 4) #10
  tail call void @llvm.prefetch.p0(ptr nonnull %1, i32 1, i32 3, i32 1) #10
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %1, ptr nonnull %1, i32 1, ptr nonnull elementtype(i32) %1) #10, !srcloc !682
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %work_lock = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 21
  tail call void @_raw_spin_lock_bh(ptr noundef %work_lock) #10
  %state = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 1
  %3 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %state, align 4
  %and1.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool2.not = icmp eq i32 %and1.i, 0
  br i1 %tobool2.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.end
  %list = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 5
  %work_list = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 22
  %prev.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 22, i32 1
  %5 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %prev.i, align 4
  %call.i.i17 = tail call zeroext i1 @__list_add_valid(ptr noundef %list, ptr noundef %6, ptr noundef %work_list) #10
  br i1 %call.i.i17, label %if.end.i.i, label %if.then3.list_add_tail.exit_crit_edge

if.then3.list_add_tail.exit_crit_edge:            ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #12
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #12
  %7 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %list, ptr %prev.i, align 4
  %8 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %work_list, ptr %list, align 4
  %prev3.i.i = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 5, i32 1
  %9 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %6, ptr %prev3.i.i, align 4
  %10 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %list, ptr %6, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.then3.list_add_tail.exit_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @bdi_wq to i32))
  %11 = load ptr, ptr @bdi_wq, align 4
  %dwork = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 23
  %call.i = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %11, ptr noundef %dwork, i32 noundef 0) #10
  br label %if.end5

if.else:                                          ; preds = %if.end
  %12 = ptrtoint ptr %done to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %done, align 4
  %auto_free.i = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 3
  %14 = ptrtoint ptr %auto_free.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %bf.load.i = load i8, ptr %auto_free.i, align 4
  %15 = and i8 %bf.load.i, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.not.i = icmp eq i8 %15, 0
  br i1 %tobool.not.i, label %if.else.if.end.i_crit_edge, label %if.then.i

if.else.if.end.i_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end.i

if.then.i:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @kfree(ptr noundef %work) #10
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.else.if.end.i_crit_edge
  %tobool2.not.i = icmp eq ptr %13, null
  br i1 %tobool2.not.i, label %if.end.i.if.end5_crit_edge, label %if.then3.i

if.end.i.if.end5_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end5

if.then3.i:                                       ; preds = %if.end.i
  %waitq4.i = getelementptr inbounds %struct.wb_completion, ptr %13, i32 0, i32 1
  %16 = ptrtoint ptr %waitq4.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %waitq4.i, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %13, i32 noundef 4) #10
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !699
  tail call void @llvm.prefetch.p0(ptr nonnull %13, i32 1, i32 3, i32 1) #10
  %18 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %13, ptr nonnull %13, i32 1, ptr nonnull elementtype(i32) %13) #10, !srcloc !700
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %18, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !701
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then5.i, label %if.then3.i.if.end5_crit_edge

if.then3.i.if.end5_crit_edge:                     ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end5

if.then5.i:                                       ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @__wake_up(ptr noundef %17, i32 noundef 3, i32 noundef 0, ptr noundef null) #10
  br label %if.end5

if.end5:                                          ; preds = %if.then5.i, %if.then3.i.if.end5_crit_edge, %if.end.i.if.end5_crit_edge, %list_add_tail.exit
  tail call void @_raw_spin_unlock_bh(ptr noundef %work_lock) #10
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @bdi_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cgroup_writeback_umount() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !702
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @isw_nr_in_flight, i32 noundef 4) #10
  %0 = load volatile i32, ptr @isw_nr_in_flight, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @rcu_barrier() #10
  %1 = load ptr, ptr @isw_wq, align 4
  tail call void @flush_workqueue(ptr noundef %1) #10
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_barrier() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @flush_workqueue(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_writeback_init() #4 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.143, i32 noundef 0, i32 noundef 0) #10
  store ptr %call, ptr @isw_wq, align 4
  %tobool.not = icmp eq ptr %call, null
  %. = select i1 %tobool.not, i32 -12, i32 0
  ret i32 %.
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wb_start_background_writeback(ptr noundef %wb) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @trace_writeback_wake_background(ptr noundef %wb)
  %work_lock.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 21
  tail call void @_raw_spin_lock_bh(ptr noundef %work_lock.i) #10
  %state.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 1
  %0 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i, label %entry.wb_wakeup.exit_crit_edge, label %if.then.i

entry.wb_wakeup.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_wakeup.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @bdi_wq to i32))
  %2 = load ptr, ptr @bdi_wq, align 4
  %dwork.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 23
  %call.i.i = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %2, ptr noundef %dwork.i, i32 noundef 0) #10
  br label %wb_wakeup.exit

wb_wakeup.exit:                                   ; preds = %if.then.i, %entry.wb_wakeup.exit_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %work_lock.i) #10
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_writeback_wake_background(ptr noundef %wb) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_wake_background, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_writeback_wake_background, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !703
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_wake_background, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %wb) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !704
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !704
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_wake_background, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_writeback_wake_background.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_writeback_wake_background.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 428, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @inode_io_list_del(ptr noundef %inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %i_lock.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock.i) #10
  %call.i = tail call fastcc ptr @locked_inode_to_wb_and_lock_list(ptr noundef %inode) #10
  tail call void @_raw_spin_lock(ptr noundef %i_lock.i) #10
  %i_state = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 24
  %0 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %i_state, align 8
  %and = and i32 %1, -131073
  store i32 %and, ptr %i_state, align 8
  %i_io_list = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 29
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %i_io_list) #10
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_del_init.exit_crit_edge

entry.list_del_init.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %prev.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 29, i32 1
  %2 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prev.i.i, align 4
  %4 = ptrtoint ptr %i_io_list to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %i_io_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %3, ptr %prev1.i.i.i, align 4
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %5, ptr %3, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %entry.list_del_init.exit_crit_edge
  %8 = ptrtoint ptr %i_io_list to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %i_io_list, ptr %i_io_list, align 4
  %prev.i3.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 29, i32 1
  %9 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %i_io_list, ptr %prev.i3.i, align 4
  tail call fastcc void @wb_io_lists_depopulated(ptr noundef %call.i)
  tail call void @_raw_spin_unlock(ptr noundef %i_lock.i) #10
  %list_lock = getelementptr inbounds %struct.bdi_writeback, ptr %call.i, i32 0, i32 7
  tail call void @_raw_spin_unlock(ptr noundef %list_lock) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wb_io_lists_depopulated(ptr noundef %wb) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %state.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 1
  %0 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state.i, align 4
  %2 = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not = icmp eq i32 %2, 0
  br i1 %tobool.i.not, label %entry.if.end45_crit_edge, label %land.lhs.true

entry.if.end45_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end45

land.lhs.true:                                    ; preds = %entry
  %b_dirty = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 3
  %3 = ptrtoint ptr %b_dirty to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %b_dirty, align 4
  %cmp.i.not = icmp eq ptr %4, %b_dirty
  br i1 %cmp.i.not, label %land.lhs.true2, label %land.lhs.true.if.end45_crit_edge

land.lhs.true.if.end45_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end45

land.lhs.true2:                                   ; preds = %land.lhs.true
  %b_io = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 4
  %5 = ptrtoint ptr %b_io to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %b_io, align 4
  %cmp.i55.not = icmp eq ptr %6, %b_io
  br i1 %cmp.i55.not, label %land.lhs.true5, label %land.lhs.true2.if.end45_crit_edge

land.lhs.true2.if.end45_crit_edge:                ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end45

land.lhs.true5:                                   ; preds = %land.lhs.true2
  %b_more_io = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 5
  %7 = ptrtoint ptr %b_more_io to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %b_more_io, align 4
  %cmp.i57.not = icmp eq ptr %8, %b_more_io
  br i1 %cmp.i57.not, label %if.then, label %land.lhs.true5.if.end45_crit_edge

land.lhs.true5.if.end45_crit_edge:                ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end45

if.then:                                          ; preds = %land.lhs.true5
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %state.i) #10
  %avg_write_bandwidth = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 15
  %9 = ptrtoint ptr %avg_write_bandwidth to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %avg_write_bandwidth, align 4
  %11 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %wb, align 8
  %tot_write_bandwidth = getelementptr inbounds %struct.backing_dev_info, ptr %12, i32 0, i32 10
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %tot_write_bandwidth, i32 noundef 4) #10
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !699
  tail call void @llvm.prefetch.p0(ptr %tot_write_bandwidth, i32 1, i32 3, i32 1) #10
  %13 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %tot_write_bandwidth, ptr %tot_write_bandwidth, i32 %10, ptr elementtype(i32) %tot_write_bandwidth) #10, !srcloc !700
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %13, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !701
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %cmp = icmp slt i32 %asmresult.i.i.i.i, 0
  br i1 %cmp, label %land.rhs, label %if.then.if.end45_crit_edge

if.then.if.end45_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end45

land.rhs:                                         ; preds = %if.then
  %.b54 = load i1, ptr @wb_io_lists_depopulated.__already_done, align 1
  br i1 %.b54, label %land.rhs.if.end45_crit_edge, label %if.then16, !prof !670

land.rhs.if.end45_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end45

if.then16:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @wb_io_lists_depopulated.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.8, i32 noundef 104, i32 noundef 9, ptr noundef null) #10
  br label %if.end45

if.end45:                                         ; preds = %if.then16, %land.rhs.if.end45_crit_edge, %if.then.if.end45_crit_edge, %land.lhs.true5.if.end45_crit_edge, %land.lhs.true2.if.end45_crit_edge, %land.lhs.true.if.end45_crit_edge, %entry.if.end45_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sb_mark_inode_writeback(ptr noundef %inode) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb, align 4
  %i_wb_list = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 36
  %2 = ptrtoint ptr %i_wb_list to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %i_wb_list, align 4
  %cmp.i.not = icmp eq ptr %3, %i_wb_list
  br i1 %cmp.i.not, label %do.body1, label %entry.if.end12_crit_edge

entry.if.end12_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end12

do.body1:                                         ; preds = %entry
  %s_inode_wblist_lock = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 63
  %call3 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %s_inode_wblist_lock) #10
  %4 = ptrtoint ptr %i_wb_list to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %i_wb_list, align 4
  %cmp.i19.not = icmp eq ptr %5, %i_wb_list
  br i1 %cmp.i19.not, label %if.then9, label %do.body1.if.end_crit_edge

do.body1.if.end_crit_edge:                        ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.then9:                                         ; preds = %do.body1
  %s_inodes_wb = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 64
  %prev.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 64, i32 1
  %6 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %i_wb_list, ptr noundef %7, ptr noundef %s_inodes_wb) #10
  br i1 %call.i.i, label %if.end.i.i, label %if.then9.list_add_tail.exit_crit_edge

if.then9.list_add_tail.exit_crit_edge:            ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #12
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #12
  %8 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %i_wb_list, ptr %prev.i, align 4
  %9 = ptrtoint ptr %i_wb_list to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %s_inodes_wb, ptr %i_wb_list, align 4
  %prev3.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 36, i32 1
  %10 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev3.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %i_wb_list, ptr %7, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.then9.list_add_tail.exit_crit_edge
  tail call fastcc void @trace_sb_mark_inode_writeback(ptr noundef %inode)
  br label %if.end

if.end:                                           ; preds = %list_add_tail.exit, %do.body1.if.end_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %s_inode_wblist_lock, i32 noundef %call3) #10
  br label %if.end12

if.end12:                                         ; preds = %if.end, %entry.if.end12_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_sb_mark_inode_writeback(ptr noundef %inode) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_sb_mark_inode_writeback, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_sb_mark_inode_writeback, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !705
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_sb_mark_inode_writeback, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %inode) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !706
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !706
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_sb_mark_inode_writeback, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_sb_mark_inode_writeback.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_sb_mark_inode_writeback.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 879, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sb_clear_inode_writeback(ptr noundef %inode) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb, align 4
  %i_wb_list = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 36
  %2 = ptrtoint ptr %i_wb_list to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %i_wb_list, align 4
  %cmp.i.not = icmp eq ptr %3, %i_wb_list
  br i1 %cmp.i.not, label %entry.if.end12_crit_edge, label %do.body1

entry.if.end12_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end12

do.body1:                                         ; preds = %entry
  %s_inode_wblist_lock = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 63
  %call3 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %s_inode_wblist_lock) #10
  %4 = ptrtoint ptr %i_wb_list to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %i_wb_list, align 4
  %cmp.i18.not = icmp eq ptr %5, %i_wb_list
  br i1 %cmp.i18.not, label %do.body1.if.end_crit_edge, label %if.then9

do.body1.if.end_crit_edge:                        ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.then9:                                         ; preds = %do.body1
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %i_wb_list) #10
  br i1 %call.i.i, label %if.end.i.i, label %if.then9.list_del_init.exit_crit_edge

if.then9.list_del_init.exit_crit_edge:            ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #12
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #12
  %prev.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 36, i32 1
  %6 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev.i.i, align 4
  %8 = ptrtoint ptr %i_wb_list to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %i_wb_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev1.i.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %9, ptr %7, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %if.then9.list_del_init.exit_crit_edge
  %12 = ptrtoint ptr %i_wb_list to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %i_wb_list, ptr %i_wb_list, align 4
  %prev.i3.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 36, i32 1
  %13 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %i_wb_list, ptr %prev.i3.i, align 4
  tail call fastcc void @trace_sb_clear_inode_writeback(ptr noundef %inode)
  br label %if.end

if.end:                                           ; preds = %list_del_init.exit, %do.body1.if.end_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %s_inode_wblist_lock, i32 noundef %call3) #10
  br label %if.end12

if.end12:                                         ; preds = %if.end, %entry.if.end12_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_sb_clear_inode_writeback(ptr noundef %inode) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_sb_clear_inode_writeback, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_sb_clear_inode_writeback, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !707
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_sb_clear_inode_writeback, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %inode) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !708
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !708
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_sb_clear_inode_writeback, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_sb_clear_inode_writeback.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_sb_clear_inode_writeback.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 884, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @inode_wait_for_writeback(ptr noundef %inode) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %i_lock = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #10
  tail call fastcc void @__inode_wait_for_writeback(ptr noundef %inode)
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__inode_wait_for_writeback(ptr noundef %inode) unnamed_addr #0 align 64 {
entry:
  %wq = alloca %struct.wait_bit_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %wq) #10
  %0 = getelementptr inbounds %struct.wait_bit_key, ptr %wq, i32 0, i32 1
  %1 = getelementptr inbounds %struct.wait_bit_key, ptr %wq, i32 0, i32 2
  %2 = getelementptr inbounds %struct.wait_bit_queue_entry, ptr %wq, i32 0, i32 1
  %3 = getelementptr inbounds %struct.wait_bit_queue_entry, ptr %wq, i32 0, i32 1, i32 1
  %4 = getelementptr inbounds %struct.wait_bit_queue_entry, ptr %wq, i32 0, i32 1, i32 2
  %5 = getelementptr inbounds %struct.wait_bit_queue_entry, ptr %wq, i32 0, i32 1, i32 3
  %6 = getelementptr inbounds %struct.wait_bit_queue_entry, ptr %wq, i32 0, i32 1, i32 3, i32 1
  %i_state = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 24
  %7 = ptrtoint ptr %wq to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %i_state, ptr %wq, align 4
  %8 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 7, ptr %0, align 4
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %1, align 4
  %10 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %2, align 4
  %11 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task, align 8
  %15 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %14, ptr %3, align 4
  %16 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr @wake_bit_function, ptr %4, align 4
  %17 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %5, ptr %5, align 4
  %18 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %5, ptr %6, align 4
  %call8 = call ptr @bit_waitqueue(ptr noundef %i_state, i32 noundef 7) #10
  %19 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %i_state, align 8
  %and16 = and i32 %20, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and16)
  %tobool.not17 = icmp eq i32 %and16, 0
  br i1 %tobool.not17, label %entry.while.end_crit_edge, label %while.body.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %i_lock = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.body.lr.ph
  call void @_raw_spin_unlock(ptr noundef %i_lock) #10
  %call10 = call i32 @__wait_on_bit(ptr noundef %call8, ptr noundef nonnull %wq, ptr noundef nonnull @bit_wait, i32 noundef 2) #10
  call void @_raw_spin_lock(ptr noundef %i_lock) #10
  %21 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %i_state, align 8
  %and = and i32 %22, 128
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %entry.while.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %wq) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wb_workfn(ptr noundef %work) local_unnamed_addr #0 align 64 {
entry:
  %work.i47.i = alloca %struct.wb_writeback_work, align 4
  %work.i30.i = alloca %struct.wb_writeback_work, align 4
  %work.i.i = alloca %struct.wb_writeback_work, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -596
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 8
  %call1 = tail call ptr @bdi_dev_name(ptr noundef %1) #10
  tail call void (ptr, ...) @set_worker_desc(ptr noundef nonnull @.str.10, ptr noundef %call1) #10
  %2 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task, align 8
  %flags = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags, align 4
  %or = or i32 %7, 8388608
  store i32 %or, ptr %flags, align 4
  %call3 = tail call zeroext i1 @current_is_workqueue_rescuer() #10
  br i1 %call3, label %lor.rhs, label %entry.do.body.preheader_crit_edge

entry.do.body.preheader_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body.preheader

lor.rhs:                                          ; preds = %entry
  %state = getelementptr i8, ptr %work, i32 -592
  %8 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %state, align 4
  %and1.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %lor.rhs.do.body.preheader_crit_edge, label %if.else, !prof !670

lor.rhs.do.body.preheader_crit_edge:              ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body.preheader

do.body.preheader:                                ; preds = %lor.rhs.do.body.preheader_crit_edge, %entry.do.body.preheader_crit_edge
  %state.i = getelementptr i8, ptr %work, i32 -592
  %work_lock.i.i = getelementptr i8, ptr %work, i32 -52
  %work_list.i.i = getelementptr i8, ptr %work, i32 -8
  %10 = getelementptr inbounds i8, ptr %work.i.i, i32 12
  %avg_write_bandwidth.i.i.i = getelementptr i8, ptr %work, i32 -192
  %sb.i.i = getelementptr inbounds %struct.wb_writeback_work, ptr %work.i.i, i32 0, i32 1
  %sync_mode.i.i = getelementptr inbounds %struct.wb_writeback_work, ptr %work.i.i, i32 0, i32 2
  %reason.i.i = getelementptr inbounds %struct.wb_writeback_work, ptr %work.i.i, i32 0, i32 4
  %start_all_reason.i.i = getelementptr i8, ptr %work, i32 -56
  %list.i.i = getelementptr inbounds %struct.wb_writeback_work, ptr %work.i.i, i32 0, i32 5
  %done.i.i = getelementptr inbounds %struct.wb_writeback_work, ptr %work.i.i, i32 0, i32 6
  %last_old_flush.i.i = getelementptr i8, ptr %work, i32 -588
  %11 = getelementptr inbounds i8, ptr %work.i30.i, i32 12
  %sb.i40.i = getelementptr inbounds %struct.wb_writeback_work, ptr %work.i30.i, i32 0, i32 1
  %sync_mode.i41.i = getelementptr inbounds %struct.wb_writeback_work, ptr %work.i30.i, i32 0, i32 2
  %reason.i43.i = getelementptr inbounds %struct.wb_writeback_work, ptr %work.i30.i, i32 0, i32 4
  %list.i44.i = getelementptr inbounds %struct.wb_writeback_work, ptr %work.i30.i, i32 0, i32 5
  %done.i45.i = getelementptr inbounds %struct.wb_writeback_work, ptr %work.i30.i, i32 0, i32 6
  br label %do.body

do.body:                                          ; preds = %wb_do_writeback.exit.do.body_crit_edge, %do.body.preheader
  call void @_set_bit(i32 noundef 1, ptr noundef %state.i) #10
  call void @_raw_spin_lock_bh(ptr noundef %work_lock.i.i) #10
  %12 = ptrtoint ptr %work_list.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %work_list.i.i, align 4
  %cmp.i.not.i56.i = icmp eq ptr %13, %work_list.i.i
  br i1 %cmp.i.not.i56.i, label %do.body.get_next_work_item.exit.thread.i_crit_edge, label %do.body.if.then.i.i_crit_edge

do.body.if.then.i.i_crit_edge:                    ; preds = %do.body
  br label %if.then.i.i

do.body.get_next_work_item.exit.thread.i_crit_edge: ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %get_next_work_item.exit.thread.i

get_next_work_item.exit.thread.i:                 ; preds = %finish_writeback_work.exit.i.get_next_work_item.exit.thread.i_crit_edge, %do.body.get_next_work_item.exit.thread.i_crit_edge
  %wrote.0.lcssa.i = phi i32 [ 0, %do.body.get_next_work_item.exit.thread.i_crit_edge ], [ %add.i, %finish_writeback_work.exit.i.get_next_work_item.exit.thread.i_crit_edge ]
  call void @_raw_spin_unlock_bh(ptr noundef %work_lock.i.i) #10
  br label %while.end.i

if.then.i.i:                                      ; preds = %finish_writeback_work.exit.i.if.then.i.i_crit_edge, %do.body.if.then.i.i_crit_edge
  %14 = phi ptr [ %31, %finish_writeback_work.exit.i.if.then.i.i_crit_edge ], [ %13, %do.body.if.then.i.i_crit_edge ]
  %wrote.057.i = phi i32 [ %add.i, %finish_writeback_work.exit.i.if.then.i.i_crit_edge ], [ 0, %do.body.if.then.i.i_crit_edge ]
  %add.ptr.i.i = getelementptr i8, ptr %14, i32 -20
  %call.i.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %14) #10
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %if.then.i.i.get_next_work_item.exit.i_crit_edge

if.then.i.i.get_next_work_item.exit.i_crit_edge:  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %get_next_work_item.exit.i

if.end.i.i.i.i:                                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #12
  %prev.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i.i.i.i, align 4
  %17 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %14, align 4
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev1.i.i.i.i.i, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %18, ptr %16, align 4
  br label %get_next_work_item.exit.i

get_next_work_item.exit.i:                        ; preds = %if.end.i.i.i.i, %if.then.i.i.get_next_work_item.exit.i_crit_edge
  %21 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %14, ptr %14, align 4
  %prev.i3.i.i.i = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  %22 = ptrtoint ptr %prev.i3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %14, ptr %prev.i3.i.i.i, align 4
  call void @_raw_spin_unlock_bh(ptr noundef %work_lock.i.i) #10
  %cmp.not.i = icmp eq ptr %add.ptr.i.i, null
  br i1 %cmp.not.i, label %get_next_work_item.exit.i.while.end.i_crit_edge, label %while.body.i

get_next_work_item.exit.i.while.end.i_crit_edge:  ; preds = %get_next_work_item.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.end.i

while.body.i:                                     ; preds = %get_next_work_item.exit.i
  call fastcc void @trace_writeback_exec(ptr noundef %add.ptr, ptr noundef nonnull %add.ptr.i.i) #10
  %call1.i = call fastcc i32 @wb_writeback(ptr noundef %add.ptr, ptr noundef nonnull %add.ptr.i.i) #10
  %add.i = add i32 %call1.i, %wrote.057.i
  %done1.i.i = getelementptr i8, ptr %14, i32 8
  %23 = ptrtoint ptr %done1.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %done1.i.i, align 4
  %auto_free.i.i = getelementptr i8, ptr %14, i32 -8
  %25 = ptrtoint ptr %auto_free.i.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %bf.load.i.i = load i8, ptr %auto_free.i.i, align 4
  %26 = and i8 %bf.load.i.i, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool.not.i.i = icmp eq i8 %26, 0
  br i1 %tobool.not.i.i, label %while.body.i.if.end.i.i_crit_edge, label %if.then.i23.i

while.body.i.if.end.i.i_crit_edge:                ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end.i.i

if.then.i23.i:                                    ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #12
  call void @kfree(ptr noundef nonnull %add.ptr.i.i) #10
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i23.i, %while.body.i.if.end.i.i_crit_edge
  %tobool2.not.i.i = icmp eq ptr %24, null
  br i1 %tobool2.not.i.i, label %if.end.i.i.finish_writeback_work.exit.i_crit_edge, label %if.then3.i.i

if.end.i.i.finish_writeback_work.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %finish_writeback_work.exit.i

if.then3.i.i:                                     ; preds = %if.end.i.i
  %waitq4.i.i = getelementptr inbounds %struct.wb_completion, ptr %24, i32 0, i32 1
  %27 = ptrtoint ptr %waitq4.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %waitq4.i.i, align 4
  %call.i.i.i24.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %24, i32 noundef 4) #10
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !699
  call void @llvm.prefetch.p0(ptr nonnull %24, i32 1, i32 3, i32 1) #10
  %29 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %24, ptr nonnull %24, i32 1, ptr nonnull elementtype(i32) %24) #10, !srcloc !700
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32 } %29, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !701
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %if.then5.i.i, label %if.then3.i.i.finish_writeback_work.exit.i_crit_edge

if.then3.i.i.finish_writeback_work.exit.i_crit_edge: ; preds = %if.then3.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %finish_writeback_work.exit.i

if.then5.i.i:                                     ; preds = %if.then3.i.i
  call void @__sanitizer_cov_trace_pc() #12
  call void @__wake_up(ptr noundef %28, i32 noundef 3, i32 noundef 0, ptr noundef null) #10
  br label %finish_writeback_work.exit.i

finish_writeback_work.exit.i:                     ; preds = %if.then5.i.i, %if.then3.i.i.finish_writeback_work.exit.i_crit_edge, %if.end.i.i.finish_writeback_work.exit.i_crit_edge
  call void @_raw_spin_lock_bh(ptr noundef %work_lock.i.i) #10
  %30 = ptrtoint ptr %work_list.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile ptr, ptr %work_list.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %31, %work_list.i.i
  br i1 %cmp.i.not.i.i, label %finish_writeback_work.exit.i.get_next_work_item.exit.thread.i_crit_edge, label %finish_writeback_work.exit.i.if.then.i.i_crit_edge

finish_writeback_work.exit.i.if.then.i.i_crit_edge: ; preds = %finish_writeback_work.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.then.i.i

finish_writeback_work.exit.i.get_next_work_item.exit.thread.i_crit_edge: ; preds = %finish_writeback_work.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %get_next_work_item.exit.thread.i

while.end.i:                                      ; preds = %get_next_work_item.exit.i.while.end.i_crit_edge, %get_next_work_item.exit.thread.i
  %wrote.055.i = phi i32 [ %wrote.0.lcssa.i, %get_next_work_item.exit.thread.i ], [ %wrote.057.i, %get_next_work_item.exit.i.while.end.i_crit_edge ]
  %32 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %state.i, align 4
  %34 = and i32 %33, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool.not.i25.i = icmp eq i32 %34, 0
  br i1 %tobool.not.i25.i, label %while.end.i.wb_check_start_all.exit.i_crit_edge, label %if.end.i27.i

while.end.i.wb_check_start_all.exit.i_crit_edge:  ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_check_start_all.exit.i

if.end.i27.i:                                     ; preds = %while.end.i
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20), i32 noundef 4) #10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20) to i32))
  %35 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20), align 4
  %36 = call i32 @llvm.smax.i32(i32 %35, i32 0) #10
  %call1.i.i.i = call i32 @get_nr_dirty_inodes() #10
  %add.i.i.i = add i32 %36, %call1.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add.i.i.i)
  %tobool2.not.i26.i = icmp eq i32 %add.i.i.i, 0
  br i1 %tobool2.not.i26.i, label %if.end.i27.i.if.end22.i.i_crit_edge, label %if.then3.i28.i

if.end.i27.i.if.end22.i.i_crit_edge:              ; preds = %if.end.i27.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end22.i.i

if.then3.i28.i:                                   ; preds = %if.end.i27.i
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %work.i.i) #10
  %37 = call ptr @memset(ptr %10, i32 255, i32 20)
  %38 = ptrtoint ptr %avg_write_bandwidth.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %avg_write_bandwidth.i.i.i, align 4
  %40 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %add.ptr, align 8
  %tot_write_bandwidth.i.i.i = getelementptr inbounds %struct.backing_dev_info, ptr %41, i32 0, i32 10
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %tot_write_bandwidth.i.i.i, i32 noundef 4) #10
  %42 = ptrtoint ptr %tot_write_bandwidth.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %tot_write_bandwidth.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2147483647, i32 %add.i.i.i)
  %cmp.i.i.i = icmp eq i32 %add.i.i.i, 2147483647
  br i1 %cmp.i.i.i, label %if.then3.i28.i.wb_split_bdi_pages.exit.i.i_crit_edge, label %if.end.i.i.i

if.then3.i28.i.wb_split_bdi_pages.exit.i.i_crit_edge: ; preds = %if.then3.i28.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_split_bdi_pages.exit.i.i

if.end.i.i.i:                                     ; preds = %if.then3.i28.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool.not.i.i.i = icmp ne i32 %43, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %39, i32 %43)
  %cmp1.not.i.i.i = icmp ult i32 %39, %43
  %or.cond.i.i.i = select i1 %tobool.not.i.i.i, i1 %cmp1.not.i.i.i, i1 false
  br i1 %or.cond.i.i.i, label %if.else.i.i.i, label %if.end.i.i.i.wb_split_bdi_pages.exit.i.i_crit_edge

if.end.i.i.i.wb_split_bdi_pages.exit.i.i_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_split_bdi_pages.exit.i.i

if.else.i.i.i:                                    ; preds = %if.end.i.i.i
  %conv.i.i.i = sext i32 %add.i.i.i to i64
  %conv3.i.i.i = zext i32 %39 to i64
  %mul.i.i.i = mul nsw i64 %conv3.i.i.i, %conv.i.i.i
  %conv4.i.i.i = zext i32 %43 to i64
  %add.i30.i.i = add nsw i64 %conv4.i.i.i, -1
  %sub.i.i.i = add nsw i64 %add.i30.i.i, %mul.i.i.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %sub.i.i.i)
  %cmp179.i.i.i = icmp ult i64 %sub.i.i.i, 4294967296
  br i1 %cmp179.i.i.i, label %if.then183.i.i.i, label %if.else189.i.i.i, !prof !670

if.then183.i.i.i:                                 ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  %conv184.i.i.i = trunc i64 %sub.i.i.i to i32
  %div187.i.i.i = udiv i32 %conv184.i.i.i, %43
  br label %wb_split_bdi_pages.exit.i.i

if.else189.i.i.i:                                 ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  %44 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %43, i64 %sub.i.i.i) #14, !srcloc !709
  %asmresult1.i.i.i.i = extractvalue { i64, i64 } %44, 1
  %extract.t312.i.i.i = trunc i64 %asmresult1.i.i.i.i to i32
  br label %wb_split_bdi_pages.exit.i.i

wb_split_bdi_pages.exit.i.i:                      ; preds = %if.else189.i.i.i, %if.then183.i.i.i, %if.end.i.i.i.wb_split_bdi_pages.exit.i.i_crit_edge, %if.then3.i28.i.wb_split_bdi_pages.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i32 [ 2147483647, %if.then3.i28.i.wb_split_bdi_pages.exit.i.i_crit_edge ], [ %add.i.i.i, %if.end.i.i.i.wb_split_bdi_pages.exit.i.i_crit_edge ], [ %div187.i.i.i, %if.then183.i.i.i ], [ %extract.t312.i.i.i, %if.else189.i.i.i ]
  %45 = ptrtoint ptr %work.i.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %retval.0.i.i.i, ptr %work.i.i, align 4
  %46 = ptrtoint ptr %sb.i.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr null, ptr %sb.i.i, align 4
  %47 = ptrtoint ptr %sync_mode.i.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 0, ptr %sync_mode.i.i, align 4
  %48 = ptrtoint ptr %10 to i32
  call void @__asan_load1_noabort(i32 %48)
  %bf.load.i29.i = load i8, ptr %10, align 4
  %bf.clear10.i.i = and i8 %bf.load.i29.i, 3
  %bf.set11.i.i = or i8 %bf.clear10.i.i, 32
  store i8 %bf.set11.i.i, ptr %10, align 4
  %49 = ptrtoint ptr %start_all_reason.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %start_all_reason.i.i, align 4
  %51 = ptrtoint ptr %reason.i.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %reason.i.i, align 4
  %52 = ptrtoint ptr %list.i.i to i32
  call void @__asan_storeN_noabort(i32 %52, i32 8)
  store i64 0, ptr %list.i.i, align 4
  %53 = ptrtoint ptr %done.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr null, ptr %done.i.i, align 4
  %call21.i.i = call fastcc i32 @wb_writeback(ptr noundef %add.ptr, ptr noundef nonnull %work.i.i) #10
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %work.i.i) #10
  br label %if.end22.i.i

if.end22.i.i:                                     ; preds = %wb_split_bdi_pages.exit.i.i, %if.end.i27.i.if.end22.i.i_crit_edge
  %nr_pages.0.i.i = phi i32 [ %call21.i.i, %wb_split_bdi_pages.exit.i.i ], [ 0, %if.end.i27.i.if.end22.i.i_crit_edge ]
  call void @_clear_bit(i32 noundef 3, ptr noundef %state.i) #10
  br label %wb_check_start_all.exit.i

wb_check_start_all.exit.i:                        ; preds = %if.end22.i.i, %while.end.i.wb_check_start_all.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %nr_pages.0.i.i, %if.end22.i.i ], [ 0, %while.end.i.wb_check_start_all.exit.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @dirty_writeback_interval to i32))
  %54 = load i32, ptr @dirty_writeback_interval, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool.not.i31.i = icmp eq i32 %54, 0
  br i1 %tobool.not.i31.i, label %wb_check_start_all.exit.i.wb_check_old_data_flush.exit.i_crit_edge, label %if.end.i32.i

wb_check_start_all.exit.i.wb_check_old_data_flush.exit.i_crit_edge: ; preds = %wb_check_start_all.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_check_old_data_flush.exit.i

if.end.i32.i:                                     ; preds = %wb_check_start_all.exit.i
  %55 = ptrtoint ptr %last_old_flush.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %last_old_flush.i.i, align 8
  %mul.i.i = mul i32 %54, 10
  %call2.i.i.i = call i32 @__msecs_to_jiffies(i32 noundef %mul.i.i) #10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %57 = load volatile i32, ptr @jiffies, align 128
  %58 = add i32 %call2.i.i.i, %56
  %sub.i.i = sub i32 %57, %58
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp slt i32 %sub.i.i, 0
  br i1 %cmp.i.i, label %if.end.i32.i.wb_check_old_data_flush.exit.i_crit_edge, label %if.end2.i.i

if.end.i32.i.wb_check_old_data_flush.exit.i_crit_edge: ; preds = %if.end.i32.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_check_old_data_flush.exit.i

if.end2.i.i:                                      ; preds = %if.end.i32.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %59 = load volatile i32, ptr @jiffies, align 128
  %60 = ptrtoint ptr %last_old_flush.i.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %59, ptr %last_old_flush.i.i, align 8
  %call.i.i.i.i.i.i37.i = call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20), i32 noundef 4) #10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20) to i32))
  %61 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20), align 4
  %62 = call i32 @llvm.smax.i32(i32 %61, i32 0) #10
  %call1.i.i38.i = call i32 @get_nr_dirty_inodes() #10
  %add.i.i39.i = add i32 %62, %call1.i.i38.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add.i.i39.i)
  %tobool5.not.i.i = icmp eq i32 %add.i.i39.i, 0
  br i1 %tobool5.not.i.i, label %if.end2.i.i.wb_check_old_data_flush.exit.i_crit_edge, label %if.then6.i.i

if.end2.i.i.wb_check_old_data_flush.exit.i_crit_edge: ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_check_old_data_flush.exit.i

if.then6.i.i:                                     ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %work.i30.i) #10
  %63 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 1677721599, ptr %11, align 4
  %64 = ptrtoint ptr %work.i30.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %add.i.i39.i, ptr %work.i30.i, align 4
  %65 = ptrtoint ptr %sb.i40.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr null, ptr %sb.i40.i, align 4
  %66 = ptrtoint ptr %sync_mode.i41.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 0, ptr %sync_mode.i41.i, align 4
  %67 = ptrtoint ptr %reason.i43.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 3, ptr %reason.i43.i, align 4
  %68 = ptrtoint ptr %list.i44.i to i32
  call void @__asan_storeN_noabort(i32 %68, i32 8)
  store i64 0, ptr %list.i44.i, align 4
  %69 = ptrtoint ptr %done.i45.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr null, ptr %done.i45.i, align 4
  %call23.i.i = call fastcc i32 @wb_writeback(ptr noundef %add.ptr, ptr noundef nonnull %work.i30.i) #10
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %work.i30.i) #10
  br label %wb_check_old_data_flush.exit.i

wb_check_old_data_flush.exit.i:                   ; preds = %if.then6.i.i, %if.end2.i.i.wb_check_old_data_flush.exit.i_crit_edge, %if.end.i32.i.wb_check_old_data_flush.exit.i_crit_edge, %wb_check_start_all.exit.i.wb_check_old_data_flush.exit.i_crit_edge
  %retval.0.i46.i = phi i32 [ %call23.i.i, %if.then6.i.i ], [ 0, %wb_check_start_all.exit.i.wb_check_old_data_flush.exit.i_crit_edge ], [ 0, %if.end.i32.i.wb_check_old_data_flush.exit.i_crit_edge ], [ 0, %if.end2.i.i.wb_check_old_data_flush.exit.i_crit_edge ]
  %call.i.i = call zeroext i1 @wb_over_bg_thresh(ptr noundef %add.ptr) #10
  br i1 %call.i.i, label %if.then.i48.i, label %wb_check_old_data_flush.exit.i.wb_do_writeback.exit_crit_edge

wb_check_old_data_flush.exit.i.wb_do_writeback.exit_crit_edge: ; preds = %wb_check_old_data_flush.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_do_writeback.exit

if.then.i48.i:                                    ; preds = %wb_check_old_data_flush.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %work.i47.i) #10
  %70 = call ptr @memcpy(ptr %work.i47.i, ptr @__const.wb_check_background_flush.work, i32 32)
  %call1.i.i = call fastcc i32 @wb_writeback(ptr noundef %add.ptr, ptr noundef nonnull %work.i47.i) #10
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %work.i47.i) #10
  br label %wb_do_writeback.exit

wb_do_writeback.exit:                             ; preds = %if.then.i48.i, %wb_check_old_data_flush.exit.i.wb_do_writeback.exit_crit_edge
  %retval.0.i49.i = phi i32 [ %call1.i.i, %if.then.i48.i ], [ 0, %wb_check_old_data_flush.exit.i.wb_do_writeback.exit_crit_edge ]
  %add3.i = add i32 %retval.0.i.i, %wrote.055.i
  %add5.i = add i32 %add3.i, %retval.0.i46.i
  %add7.i = add i32 %add5.i, %retval.0.i49.i
  call void @_clear_bit(i32 noundef 1, ptr noundef %state.i) #10
  call fastcc void @trace_writeback_pages_written(i32 noundef %add7.i)
  %71 = ptrtoint ptr %work_list.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load volatile ptr, ptr %work_list.i.i, align 4
  %cmp.i.not = icmp eq ptr %72, %work_list.i.i
  br i1 %cmp.i.not, label %wb_do_writeback.exit.if.end_crit_edge, label %wb_do_writeback.exit.do.body_crit_edge

wb_do_writeback.exit.do.body_crit_edge:           ; preds = %wb_do_writeback.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body

wb_do_writeback.exit.if.end_crit_edge:            ; preds = %wb_do_writeback.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.else:                                          ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #12
  %call13 = tail call fastcc i32 @writeback_inodes_wb(ptr noundef %add.ptr)
  tail call fastcc void @trace_writeback_pages_written(i32 noundef %call13)
  br label %if.end

if.end:                                           ; preds = %if.else, %wb_do_writeback.exit.if.end_crit_edge
  %work_list14 = getelementptr i8, ptr %work, i32 -8
  %73 = ptrtoint ptr %work_list14 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load volatile ptr, ptr %work_list14, align 4
  %cmp.i36.not = icmp eq ptr %74, %work_list14
  br i1 %cmp.i36.not, label %if.else18, label %if.then17

if.then17:                                        ; preds = %if.end
  %work_lock.i = getelementptr i8, ptr %work, i32 -52
  call void @_raw_spin_lock_bh(ptr noundef %work_lock.i) #10
  %state.i38 = getelementptr i8, ptr %work, i32 -592
  %75 = ptrtoint ptr %state.i38 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load volatile i32, ptr %state.i38, align 4
  %and1.i.i = and i32 %76, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i, label %if.then17.wb_wakeup.exit_crit_edge, label %if.then.i

if.then17.wb_wakeup.exit_crit_edge:               ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_wakeup.exit

if.then.i:                                        ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @bdi_wq to i32))
  %77 = load ptr, ptr @bdi_wq, align 4
  %call.i.i39 = call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %77, ptr noundef %work, i32 noundef 0) #10
  br label %wb_wakeup.exit

wb_wakeup.exit:                                   ; preds = %if.then.i, %if.then17.wb_wakeup.exit_crit_edge
  call void @_raw_spin_unlock_bh(ptr noundef %work_lock.i) #10
  br label %if.end23

if.else18:                                        ; preds = %if.end
  %state.i40 = getelementptr i8, ptr %work, i32 -592
  %78 = ptrtoint ptr %state.i40 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load volatile i32, ptr %state.i40, align 4
  %80 = and i32 %79, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %80)
  %tobool.i.not = icmp eq i32 %80, 0
  br i1 %tobool.i.not, label %if.else18.if.end23_crit_edge, label %land.lhs.true

if.else18.if.end23_crit_edge:                     ; preds = %if.else18
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end23

land.lhs.true:                                    ; preds = %if.else18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @dirty_writeback_interval to i32))
  %81 = load i32, ptr @dirty_writeback_interval, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %81)
  %tobool20.not = icmp eq i32 %81, 0
  br i1 %tobool20.not, label %land.lhs.true.if.end23_crit_edge, label %if.then21

land.lhs.true.if.end23_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end23

if.then21:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  call void @wb_wakeup_delayed(ptr noundef %add.ptr) #10
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %land.lhs.true.if.end23_crit_edge, %if.else18.if.end23_crit_edge, %wb_wakeup.exit
  %82 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %task, align 8
  %flags26 = getelementptr inbounds %struct.task_struct, ptr %83, i32 0, i32 3
  %84 = ptrtoint ptr %flags26 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %flags26, align 4
  %and = and i32 %85, -8388609
  store i32 %and, ptr %flags26, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @set_worker_desc(ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bdi_dev_name(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @current_is_workqueue_rescuer() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_writeback_pages_written(i32 noundef %pages_written) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_pages_written, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_writeback_pages_written, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !710
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_pages_written, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %pages_written) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !711
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !711
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_pages_written, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_writeback_pages_written.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_writeback_pages_written.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 405, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @writeback_inodes_wb(ptr noundef %wb) unnamed_addr #0 align 64 {
entry:
  %work = alloca %struct.wb_writeback_work, align 4
  %plug = alloca %struct.blk_plug, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %work) #10
  %0 = getelementptr inbounds i8, ptr %work, i32 12
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %2 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1024, ptr %work, align 4
  %sb = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 1
  %3 = ptrtoint ptr %sb to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %sb, align 4
  %sync_mode = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 2
  %4 = ptrtoint ptr %sync_mode to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %sync_mode, align 4
  %tagged_writepages = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 3
  %5 = ptrtoint ptr %tagged_writepages to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 35, ptr %tagged_writepages, align 4
  %reason17 = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 4
  %6 = ptrtoint ptr %reason17 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 6, ptr %reason17, align 4
  %list = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 5
  %7 = ptrtoint ptr %list to i32
  call void @__asan_storeN_noabort(i32 %7, i32 8)
  store i64 0, ptr %list, align 4
  %done = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 6
  %8 = ptrtoint ptr %done to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %done, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %plug) #10
  %9 = call ptr @memset(ptr %plug, i32 255, i32 24)
  call void @blk_start_plug(ptr noundef nonnull %plug) #10
  %list_lock = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 7
  call void @_raw_spin_lock(ptr noundef %list_lock) #10
  %b_io = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 4
  %10 = ptrtoint ptr %b_io to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %b_io, align 4
  %cmp.i.not = icmp eq ptr %11, %b_io
  br i1 %cmp.i.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %12 = load volatile i32, ptr @jiffies, align 128
  call fastcc void @queue_io(ptr noundef %wb, ptr noundef nonnull %work, i32 noundef %12)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %call18 = call fastcc i32 @__writeback_inodes_wb(ptr noundef %wb, ptr noundef nonnull %work)
  call void @_raw_spin_unlock(ptr noundef %list_lock) #10
  call void @blk_finish_plug(ptr noundef nonnull %plug) #10
  %13 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %work, align 4
  %sub = sub i32 1024, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %plug) #10
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %work) #10
  ret i32 %sub
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wb_wakeup_delayed(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wakeup_flusher_threads_bdi(ptr noundef %bdi, i32 noundef %reason) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !675
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #10
  %call.i = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 696, ptr noundef nonnull @.str.141) #10
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  tail call fastcc void @__wakeup_flusher_threads_bdi(ptr noundef %bdi, i32 noundef %reason)
  %call.i1 = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i1, label %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i4

rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit

land.lhs.true.i4:                                 ; preds = %rcu_read_lock.exit
  %call1.i2 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i2)
  %tobool.not.i3 = icmp eq i32 %call1.i2, 0
  br i1 %tobool.not.i3, label %land.lhs.true.i4.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i6

land.lhs.true.i4.rcu_read_unlock.exit_crit_edge:  ; preds = %land.lhs.true.i4
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit

land.lhs.true2.i6:                                ; preds = %land.lhs.true.i4
  %.b4.i5 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i5, label %land.lhs.true2.i6.rcu_read_unlock.exit_crit_edge, label %if.then.i7

land.lhs.true2.i6.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i6
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit

if.then.i7:                                       ; preds = %land.lhs.true2.i6
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 724, ptr noundef nonnull @.str.142) #10
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i7, %land.lhs.true2.i6.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i4.rcu_read_unlock.exit_crit_edge, %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !678
  %4 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i8 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i.i8 to ptr
  %preempt_count.i.i.i.i9 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i.i9 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i.i9, align 4
  %sub.i.i.i = add i32 %7, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i9, align 4
  tail call void @rcu_read_unlock_strict() #10
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__wakeup_flusher_threads_bdi(ptr noundef %bdi, i32 noundef %reason) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %tot_write_bandwidth.i = getelementptr inbounds %struct.backing_dev_info, ptr %bdi, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %tot_write_bandwidth.i, i32 noundef 4) #10
  %0 = ptrtoint ptr %tot_write_bandwidth.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %tot_write_bandwidth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.i.not = icmp eq i32 %1, 0
  br i1 %tobool.i.not, label %entry.cleanup_crit_edge, label %do.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

do.body:                                          ; preds = %entry
  %call1 = tail call i32 @rcu_read_lock_any_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true, label %do.body.do.end_crit_edge

do.body.do.end_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end

land.lhs.true:                                    ; preds = %do.body
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true4

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b26 = load i1, ptr @__wakeup_flusher_threads_bdi.__warned, align 1
  br i1 %.b26, label %land.lhs.true4.do.end_crit_edge, label %if.then6

land.lhs.true4.do.end_crit_edge:                  ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end

if.then6:                                         ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @__wakeup_flusher_threads_bdi.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.8, i32 noundef 2282, ptr noundef nonnull @.str.11) #10
  br label %do.end

do.end:                                           ; preds = %if.then6, %land.lhs.true4.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %do.body.do.end_crit_edge
  %wb_list = getelementptr inbounds %struct.backing_dev_info, ptr %bdi, i32 0, i32 12
  %2 = ptrtoint ptr %wb_list to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn28 = load volatile ptr, ptr %wb_list, align 8
  %cmp.not29 = icmp eq ptr %.pn28, %wb_list
  br i1 %cmp.not29, label %do.end.cleanup_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

for.body:                                         ; preds = %wb_start_writeback.exit.for.body_crit_edge, %do.end.for.body_crit_edge
  %.pn30 = phi ptr [ %.pn, %wb_start_writeback.exit.for.body_crit_edge ], [ %.pn28, %do.end.for.body_crit_edge ]
  %state.i.i = getelementptr i8, ptr %.pn30, i32 -796
  %3 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %state.i.i, align 4
  %5 = and i32 %4, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.i.not.i = icmp eq i32 %5, 0
  br i1 %tobool.i.not.i, label %for.body.wb_start_writeback.exit_crit_edge, label %if.end.i

for.body.wb_start_writeback.exit_crit_edge:       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_start_writeback.exit

if.end.i:                                         ; preds = %for.body
  %6 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state.i.i, align 4
  %8 = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i = icmp eq i32 %8, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %if.end.i.wb_start_writeback.exit_crit_edge

if.end.i.wb_start_writeback.exit_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_start_writeback.exit

lor.lhs.false.i:                                  ; preds = %if.end.i
  %call3.i = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %state.i.i) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %if.end6.i, label %lor.lhs.false.i.wb_start_writeback.exit_crit_edge

lor.lhs.false.i.wb_start_writeback.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_start_writeback.exit

if.end6.i:                                        ; preds = %lor.lhs.false.i
  %start_all_reason.i = getelementptr i8, ptr %.pn30, i32 -260
  %9 = ptrtoint ptr %start_all_reason.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %reason, ptr %start_all_reason.i, align 4
  %work_lock.i.i = getelementptr i8, ptr %.pn30, i32 -256
  tail call void @_raw_spin_lock_bh(ptr noundef %work_lock.i.i) #10
  %10 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i.i = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.end6.i.wb_wakeup.exit.i_crit_edge, label %if.then.i.i

if.end6.i.wb_wakeup.exit.i_crit_edge:             ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_wakeup.exit.i

if.then.i.i:                                      ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @bdi_wq to i32))
  %12 = load ptr, ptr @bdi_wq, align 4
  %dwork.i.i = getelementptr i8, ptr %.pn30, i32 -204
  %call.i.i.i27 = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %12, ptr noundef %dwork.i.i, i32 noundef 0) #10
  br label %wb_wakeup.exit.i

wb_wakeup.exit.i:                                 ; preds = %if.then.i.i, %if.end6.i.wb_wakeup.exit.i_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %work_lock.i.i) #10
  br label %wb_start_writeback.exit

wb_start_writeback.exit:                          ; preds = %wb_wakeup.exit.i, %lor.lhs.false.i.wb_start_writeback.exit_crit_edge, %if.end.i.wb_start_writeback.exit_crit_edge, %for.body.wb_start_writeback.exit_crit_edge
  %13 = ptrtoint ptr %.pn30 to i32
  call void @__asan_load4_noabort(i32 %13)
  %.pn = load volatile ptr, ptr %.pn30, align 8
  %cmp.not = icmp eq ptr %.pn, %wb_list
  br i1 %cmp.not, label %wb_start_writeback.exit.cleanup_crit_edge, label %wb_start_writeback.exit.for.body_crit_edge

wb_start_writeback.exit.for.body_crit_edge:       ; preds = %wb_start_writeback.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.body

wb_start_writeback.exit.cleanup_crit_edge:        ; preds = %wb_start_writeback.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

cleanup:                                          ; preds = %wb_start_writeback.exit.cleanup_crit_edge, %do.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wakeup_flusher_threads(i32 noundef %reason) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %plug1.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 148
  %4 = ptrtoint ptr %plug1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %plug1.i, align 4
  %tobool.not.i26 = icmp eq ptr %5, null
  br i1 %tobool.not.i26, label %entry.if.end_crit_edge, label %land.rhs.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

land.rhs.i:                                       ; preds = %entry
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %tobool2.not.i = icmp eq ptr %7, null
  br i1 %tobool2.not.i, label %blk_needs_flush_plug.exit, label %land.rhs.i.if.then_crit_edge

land.rhs.i.if.then_crit_edge:                     ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.then

blk_needs_flush_plug.exit:                        ; preds = %land.rhs.i
  %cb_list.i = getelementptr inbounds %struct.blk_plug, ptr %5, i32 0, i32 7
  %8 = ptrtoint ptr %cb_list.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %cb_list.i, align 4
  %cmp.i.i.not = icmp eq ptr %9, %cb_list.i
  br i1 %cmp.i.i.not, label %blk_needs_flush_plug.exit.if.end_crit_edge, label %blk_needs_flush_plug.exit.if.then_crit_edge

blk_needs_flush_plug.exit.if.then_crit_edge:      ; preds = %blk_needs_flush_plug.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.then

blk_needs_flush_plug.exit.if.end_crit_edge:       ; preds = %blk_needs_flush_plug.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.then:                                          ; preds = %blk_needs_flush_plug.exit.if.then_crit_edge, %land.rhs.i.if.then_crit_edge
  tail call void @blk_flush_plug(ptr noundef nonnull %5, i1 noundef zeroext true) #10
  br label %if.end

if.end:                                           ; preds = %if.then, %blk_needs_flush_plug.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %10 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %13, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !675
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #10
  %call.i = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i, label %if.end.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 696, ptr noundef nonnull @.str.141) #10
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end.rcu_read_lock.exit_crit_edge
  %call4 = tail call i32 @rcu_read_lock_any_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end_crit_edge

rcu_read_lock.exit.do.end_crit_edge:              ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call5 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true7

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end

land.lhs.true7:                                   ; preds = %land.lhs.true
  %.b25 = load i1, ptr @wakeup_flusher_threads.__warned, align 1
  br i1 %.b25, label %land.lhs.true7.do.end_crit_edge, label %if.then9

land.lhs.true7.do.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end

if.then9:                                         ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @wakeup_flusher_threads.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.8, i32 noundef 2308, ptr noundef nonnull @.str.11) #10
  br label %do.end

do.end:                                           ; preds = %if.then9, %land.lhs.true7.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %rcu_read_lock.exit.do.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @bdi_list to i32))
  %.pn37 = load volatile ptr, ptr @bdi_list, align 4
  %cmp.not38 = icmp eq ptr %.pn37, @bdi_list
  br i1 %cmp.not38, label %do.end.for.end_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %do.end.for.body_crit_edge
  %.pn39 = phi ptr [ %.pn, %for.body.for.body_crit_edge ], [ %.pn37, %do.end.for.body_crit_edge ]
  %bdi.0 = getelementptr i8, ptr %.pn39, i32 -20
  tail call fastcc void @__wakeup_flusher_threads_bdi(ptr noundef %bdi.0, i32 noundef %reason)
  %14 = ptrtoint ptr %.pn39 to i32
  call void @__asan_load4_noabort(i32 %14)
  %.pn = load volatile ptr, ptr %.pn39, align 4
  %cmp.not = icmp eq ptr %.pn, @bdi_list
  br i1 %cmp.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %do.end.for.end_crit_edge
  %call.i27 = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i27, label %for.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i30

for.end.rcu_read_unlock.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit

land.lhs.true.i30:                                ; preds = %for.end
  %call1.i28 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i28)
  %tobool.not.i29 = icmp eq i32 %call1.i28, 0
  br i1 %tobool.not.i29, label %land.lhs.true.i30.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i32

land.lhs.true.i30.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i30
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit

land.lhs.true2.i32:                               ; preds = %land.lhs.true.i30
  %.b4.i31 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i31, label %land.lhs.true2.i32.rcu_read_unlock.exit_crit_edge, label %if.then.i33

land.lhs.true2.i32.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i32
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit

if.then.i33:                                      ; preds = %land.lhs.true2.i32
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 724, ptr noundef nonnull @.str.142) #10
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i33, %land.lhs.true2.i32.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i30.rcu_read_unlock.exit_crit_edge, %for.end.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !678
  %15 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i34 = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i.i.i.i34 to ptr
  %preempt_count.i.i.i.i35 = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %preempt_count.i.i.i.i35 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %preempt_count.i.i.i.i35, align 4
  %sub.i.i.i = add i32 %18, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i35, align 4
  tail call void @rcu_read_unlock_strict() #10
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #10
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_flush_plug(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_any_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @start_dirtytime_writeback() #4 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @dirtytime_expire_interval, align 4
  %mul = mul i32 %0, 100
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %1 = load ptr, ptr @system_wq, align 4
  %call.i.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %1, ptr noundef nonnull @dirtytime_work, i32 noundef %mul) #10
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dirtytime_interval_handler(ptr noundef %table, i32 noundef %write, ptr noundef %buffer, ptr noundef %lenp, ptr noundef %ppos) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @proc_dointvec_minmax(ptr noundef %table, i32 noundef %write, ptr noundef %buffer, ptr noundef %lenp, ptr noundef %ppos) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp ne i32 %call, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %write)
  %tobool.not = icmp eq i32 %write, 0
  %or.cond = or i1 %tobool.not, %cmp
  br i1 %or.cond, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %0 = load ptr, ptr @system_wq, align 4
  %call.i = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %0, ptr noundef nonnull @dirtytime_work, i32 noundef 0) #10
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @proc_dointvec_minmax(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__mark_inode_dirty(ptr noundef %inode, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb, align 4
  tail call fastcc void @trace_writeback_mark_inode_dirty(ptr noundef %inode, i32 noundef %flags)
  %and = and i32 %flags, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  tail call fastcc void @trace_writeback_dirty_inode_start(ptr noundef %inode, i32 noundef %flags)
  %s_op = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %s_op to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_op, align 4
  %dirty_inode = getelementptr inbounds %struct.super_operations, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %dirty_inode to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dirty_inode, align 4
  %tobool1.not = icmp eq ptr %5, null
  br i1 %tobool1.not, label %if.then.if.end_crit_edge, label %if.then2

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #12
  tail call void %5(ptr noundef %inode, i32 noundef %and) #10
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then.if.end_crit_edge
  tail call fastcc void @trace_writeback_dirty_inode(ptr noundef %inode, i32 noundef %flags)
  %and6 = and i32 %flags, -2049
  br label %do.end52

if.else:                                          ; preds = %entry
  %and7 = and i32 %flags, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8.not = icmp ne i32 %and7, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2048, i32 %flags)
  %cmp = icmp ne i32 %flags, 2048
  %spec.select = and i1 %cmp, %tobool8.not
  br i1 %spec.select, label %land.rhs11, label %if.else.do.end52_crit_edge

if.else.do.end52_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end52

land.rhs11:                                       ; preds = %if.else
  %.b177 = load i1, ptr @__mark_inode_dirty.__already_done, align 1
  br i1 %.b177, label %land.rhs11.do.end52_crit_edge, label %if.then18, !prof !670

land.rhs11.do.end52_crit_edge:                    ; preds = %land.rhs11
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end52

if.then18:                                        ; preds = %land.rhs11
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @__mark_inode_dirty.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.8, i32 noundef 2421, i32 noundef 9, ptr noundef null) #10
  br label %do.end52

do.end52:                                         ; preds = %if.then18, %land.rhs11.do.end52_crit_edge, %if.else.do.end52_crit_edge, %if.end
  %dirtytime.0 = phi i32 [ 0, %if.end ], [ %and7, %if.else.do.end52_crit_edge ], [ 1, %if.then18 ], [ 1, %land.rhs11.do.end52_crit_edge ]
  %flags.addr.0 = phi i32 [ %and6, %if.end ], [ %flags, %if.else.do.end52_crit_edge ], [ %flags, %if.then18 ], [ %flags, %land.rhs11.do.end52_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !712
  %i_state = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 24
  %6 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %i_state, align 8
  %and55 = and i32 %7, %flags.addr.0
  call void @__sanitizer_cov_trace_cmp4(i32 %and55, i32 %flags.addr.0)
  %cmp56 = icmp eq i32 %and55, %flags.addr.0
  br i1 %cmp56, label %do.end52.cleanup125_crit_edge, label %lor.lhs.false

do.end52.cleanup125_crit_edge:                    ; preds = %do.end52
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup125

lor.lhs.false:                                    ; preds = %do.end52
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dirtytime.0)
  %tobool57.not = icmp eq i32 %dirtytime.0, 0
  %and59 = and i32 %7, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and59)
  %tobool60.not = icmp eq i32 %and59, 0
  %or.cond = select i1 %tobool57.not, i1 true, i1 %tobool60.not
  br i1 %or.cond, label %if.end62, label %lor.lhs.false.cleanup125_crit_edge

lor.lhs.false.cleanup125_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup125

if.end62:                                         ; preds = %lor.lhs.false
  %i_lock = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #10
  br i1 %tobool57.not, label %if.end62.if.end69_crit_edge, label %land.lhs.true64

if.end62.if.end69_crit_edge:                      ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

land.lhs.true64:                                  ; preds = %if.end62
  %8 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %i_state, align 8
  %and66 = and i32 %9, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and66)
  %tobool67.not = icmp eq i32 %and66, 0
  br i1 %tobool67.not, label %land.lhs.true64.if.end69_crit_edge, label %land.lhs.true64.out_unlock_inode_crit_edge

land.lhs.true64.out_unlock_inode_crit_edge:       ; preds = %land.lhs.true64
  call void @__sanitizer_cov_trace_pc() #12
  br label %out_unlock_inode

land.lhs.true64.if.end69_crit_edge:               ; preds = %land.lhs.true64
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end69:                                         ; preds = %land.lhs.true64.if.end69_crit_edge, %if.end62.if.end69_crit_edge
  %10 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %i_state, align 8
  %and71 = and i32 %11, %flags.addr.0
  call void @__sanitizer_cov_trace_cmp4(i32 %and71, i32 %flags.addr.0)
  %cmp72.not = icmp eq i32 %and71, %flags.addr.0
  br i1 %cmp72.not, label %if.end69.out_unlock_inode_crit_edge, label %if.then73

if.end69.out_unlock_inode_crit_edge:              ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #12
  br label %out_unlock_inode

if.then73:                                        ; preds = %if.end69
  %and75 = and i32 %11, 7
  %i_wb.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 30
  %12 = ptrtoint ptr %i_wb.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %i_wb.i, align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.then.i, label %if.then73.inode_attach_wb.exit_crit_edge

if.then73.inode_attach_wb.exit_crit_edge:         ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_attach_wb.exit

if.then.i:                                        ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @__inode_attach_wb(ptr noundef %inode, ptr noundef null) #10
  br label %inode_attach_wb.exit

inode_attach_wb.exit:                             ; preds = %if.then.i, %if.then73.inode_attach_wb.exit_crit_edge
  %and76 = and i32 %flags.addr.0, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and76)
  %tobool77.not = icmp eq i32 %and76, 0
  br i1 %tobool77.not, label %inode_attach_wb.exit.if.end81_crit_edge, label %if.then78

inode_attach_wb.exit.if.end81_crit_edge:          ; preds = %inode_attach_wb.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end81

if.then78:                                        ; preds = %inode_attach_wb.exit
  call void @__sanitizer_cov_trace_pc() #12
  %14 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %i_state, align 8
  %and80 = and i32 %15, -2049
  store i32 %and80, ptr %i_state, align 8
  br label %if.end81

if.end81:                                         ; preds = %if.then78, %inode_attach_wb.exit.if.end81_crit_edge
  %16 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %i_state, align 8
  %or = or i32 %17, %flags.addr.0
  store i32 %or, ptr %i_state, align 8
  %and84 = and i32 %or, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and84)
  %tobool85.not = icmp eq i32 %and84, 0
  br i1 %tobool85.not, label %if.end87, label %if.end81.out_unlock_inode_crit_edge

if.end81.out_unlock_inode_crit_edge:              ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #12
  br label %out_unlock_inode

if.end87:                                         ; preds = %if.end81
  %18 = ptrtoint ptr %inode to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %inode, align 8
  %20 = and i16 %19, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 24576, i16 %20)
  %cmp89 = icmp eq i16 %20, 24576
  br i1 %cmp89, label %if.end95, label %if.then91

if.then91:                                        ; preds = %if.end87
  %pprev.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 28, i32 1
  %21 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %pprev.i.i, align 4
  %tobool.not.i.i = icmp ne ptr %22, null
  %and97 = and i32 %or, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and97)
  %tobool98.not = icmp eq i32 %and97, 0
  %or.cond179 = select i1 %tobool.not.i.i, i1 %tobool98.not, i1 false
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and75)
  %tobool101.not = icmp eq i32 %and75, 0
  %or.cond180 = select i1 %or.cond179, i1 %tobool101.not, i1 false
  br i1 %or.cond180, label %if.then91.if.then102_crit_edge, label %if.then91.out_unlock_inode_crit_edge

if.then91.out_unlock_inode_crit_edge:             ; preds = %if.then91
  call void @__sanitizer_cov_trace_pc() #12
  br label %out_unlock_inode

if.then91.if.then102_crit_edge:                   ; preds = %if.then91
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.then102

if.end95:                                         ; preds = %if.end87
  %and97.old = and i32 %or, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and97.old)
  %tobool98.not.old = icmp eq i32 %and97.old, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and75)
  %tobool101.not.old = icmp eq i32 %and75, 0
  %or.cond181 = select i1 %tobool98.not.old, i1 %tobool101.not.old, i1 false
  br i1 %or.cond181, label %if.end95.if.then102_crit_edge, label %if.end95.out_unlock_inode_crit_edge

if.end95.out_unlock_inode_crit_edge:              ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #12
  br label %out_unlock_inode

if.end95.if.then102_crit_edge:                    ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.then102

if.then102:                                       ; preds = %if.end95.if.then102_crit_edge, %if.then91.if.then102_crit_edge
  %call103 = tail call fastcc ptr @locked_inode_to_wb_and_lock_list(ptr noundef %inode)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %23 = load volatile i32, ptr @jiffies, align 128
  %dirtied_when = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 26
  %24 = ptrtoint ptr %dirtied_when to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %dirtied_when, align 4
  br i1 %tobool57.not, label %if.then102.if.end106_crit_edge, label %if.then105

if.then102.if.end106_crit_edge:                   ; preds = %if.then102
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end106

if.then105:                                       ; preds = %if.then102
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %25 = load volatile i32, ptr @jiffies, align 128
  %dirtied_time_when = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 27
  %26 = ptrtoint ptr %dirtied_time_when to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %dirtied_time_when, align 8
  br label %if.end106

if.end106:                                        ; preds = %if.then105, %if.then102.if.end106_crit_edge
  %27 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %i_state, align 8
  %and108 = and i32 %28, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and108)
  %tobool109.not = icmp eq i32 %and108, 0
  %b_dirty = getelementptr inbounds %struct.bdi_writeback, ptr %call103, i32 0, i32 3
  %b_dirty_time = getelementptr inbounds %struct.bdi_writeback, ptr %call103, i32 0, i32 6
  %dirty_list.0 = select i1 %tobool109.not, ptr %b_dirty_time, ptr %b_dirty
  %call113 = tail call fastcc zeroext i1 @inode_io_list_move_locked(ptr noundef %inode, ptr noundef %call103, ptr noundef %dirty_list.0)
  %list_lock = getelementptr inbounds %struct.bdi_writeback, ptr %call103, i32 0, i32 7
  tail call void @_raw_spin_unlock(ptr noundef %list_lock) #10
  tail call fastcc void @trace_writeback_dirty_inode_enqueue(ptr noundef %inode)
  br i1 %call113, label %land.lhs.true117, label %if.end106.cleanup125_crit_edge

if.end106.cleanup125_crit_edge:                   ; preds = %if.end106
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup125

land.lhs.true117:                                 ; preds = %if.end106
  %29 = ptrtoint ptr %call103 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %call103, align 8
  %capabilities = getelementptr inbounds %struct.backing_dev_info, ptr %30, i32 0, i32 6
  %31 = ptrtoint ptr %capabilities to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %capabilities, align 8
  %and118 = and i32 %32, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and118)
  %tobool119.not = icmp eq i32 %and118, 0
  br i1 %tobool119.not, label %land.lhs.true117.cleanup125_crit_edge, label %if.then120

land.lhs.true117.cleanup125_crit_edge:            ; preds = %land.lhs.true117
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup125

if.then120:                                       ; preds = %land.lhs.true117
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @wb_wakeup_delayed(ptr noundef %call103) #10
  br label %cleanup125

out_unlock_inode:                                 ; preds = %if.end95.out_unlock_inode_crit_edge, %if.then91.out_unlock_inode_crit_edge, %if.end81.out_unlock_inode_crit_edge, %if.end69.out_unlock_inode_crit_edge, %land.lhs.true64.out_unlock_inode_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #10
  br label %cleanup125

cleanup125:                                       ; preds = %out_unlock_inode, %if.then120, %land.lhs.true117.cleanup125_crit_edge, %if.end106.cleanup125_crit_edge, %lor.lhs.false.cleanup125_crit_edge, %do.end52.cleanup125_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_writeback_mark_inode_dirty(ptr noundef %inode, i32 noundef %flags) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_mark_inode_dirty, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_writeback_mark_inode_dirty, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !713
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_mark_inode_dirty, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %inode, i32 noundef %flags) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !714
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !714
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_mark_inode_dirty, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_writeback_mark_inode_dirty.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_writeback_mark_inode_dirty.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 132, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_writeback_dirty_inode_start(ptr noundef %inode, i32 noundef %flags) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_dirty_inode_start, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_writeback_dirty_inode_start, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !715
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_dirty_inode_start, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %inode, i32 noundef %flags) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !716
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !716
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_dirty_inode_start, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_writeback_dirty_inode_start.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_writeback_dirty_inode_start.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 139, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_writeback_dirty_inode(ptr noundef %inode, i32 noundef %flags) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_dirty_inode, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_writeback_dirty_inode, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !717
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_dirty_inode, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %inode, i32 noundef %flags) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !718
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !718
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_dirty_inode, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_writeback_dirty_inode.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_writeback_dirty_inode.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 146, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @locked_inode_to_wb_and_lock_list(ptr noundef %inode) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %dep_map.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18, i32 0, i32 0, i32 4
  %i_mapping.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %i_wb.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 30
  %i_lock = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  br label %while.body

while.body:                                       ; preds = %cleanup, %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %while.body.inode_to_wb.exit_crit_edge, label %land.rhs.i

while.body.inode_to_wb.exit_crit_edge:            ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.rhs.i:                                       ; preds = %while.body
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool1.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i, label %land.rhs.i.inode_to_wb.exit_crit_edge

land.rhs.i.inode_to_wb.exit_crit_edge:            ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.lhs.true.i:                                  ; preds = %land.rhs.i
  %1 = ptrtoint ptr %i_mapping.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %i_mapping.i, align 8
  %dep_map2.i = getelementptr inbounds %struct.address_space, ptr %2, i32 0, i32 1, i32 0, i32 0, i32 0, i32 4
  %call.i60.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map2.i, i32 noundef -1) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i60.i)
  %tobool4.not.i = icmp eq i32 %call.i60.i, 0
  br i1 %tobool4.not.i, label %land.rhs5.i, label %land.lhs.true.i.inode_to_wb.exit_crit_edge

land.lhs.true.i.inode_to_wb.exit_crit_edge:       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.rhs5.i:                                      ; preds = %land.lhs.true.i
  %3 = ptrtoint ptr %i_wb.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %i_wb.i, align 4
  %dep_map6.i = getelementptr inbounds %struct.bdi_writeback, ptr %4, i32 0, i32 7, i32 0, i32 0, i32 4
  %call.i61.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map6.i, i32 noundef -1) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i61.i)
  %tobool8.not.i = icmp eq i32 %call.i61.i, 0
  br i1 %tobool8.not.i, label %land.rhs13.i, label %land.rhs5.i.inode_to_wb.exit_crit_edge

land.rhs5.i.inode_to_wb.exit_crit_edge:           ; preds = %land.rhs5.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

land.rhs13.i:                                     ; preds = %land.rhs5.i
  %.b54.i = load i1, ptr @inode_to_wb.__already_done, align 1
  br i1 %.b54.i, label %land.rhs13.i.inode_to_wb.exit_crit_edge, label %if.then.i, !prof !670

land.rhs13.i.inode_to_wb.exit_crit_edge:          ; preds = %land.rhs13.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_to_wb.exit

if.then.i:                                        ; preds = %land.rhs13.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @inode_to_wb.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.139, i32 noundef 272, i32 noundef 9, ptr noundef null) #10
  br label %inode_to_wb.exit

inode_to_wb.exit:                                 ; preds = %if.then.i, %land.rhs13.i.inode_to_wb.exit_crit_edge, %land.rhs5.i.inode_to_wb.exit_crit_edge, %land.lhs.true.i.inode_to_wb.exit_crit_edge, %land.rhs.i.inode_to_wb.exit_crit_edge, %while.body.inode_to_wb.exit_crit_edge
  %5 = ptrtoint ptr %i_wb.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %i_wb.i, align 4
  tail call fastcc void @wb_get(ptr noundef %6)
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #10
  %list_lock = getelementptr inbounds %struct.bdi_writeback, ptr %6, i32 0, i32 7
  tail call void @_raw_spin_lock(ptr noundef %list_lock) #10
  %7 = ptrtoint ptr %i_wb.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %i_wb.i, align 4
  %cmp = icmp eq ptr %6, %8
  br i1 %cmp, label %if.then, label %cleanup, !prof !670

if.then:                                          ; preds = %inode_to_wb.exit
  %9 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %6, align 8
  %tobool.not.i.i = icmp eq ptr %10, null
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %if.end39.critedge.i.i

land.rhs.i.i:                                     ; preds = %if.then
  %.b49.i.i = load i1, ptr @wb_put_many.__already_done, align 1
  br i1 %.b49.i.i, label %land.rhs.i.i.return_crit_edge, label %if.then.i.i, !prof !670

land.rhs.i.i.return_crit_edge:                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %return

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @wb_put_many.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.134, i32 noundef 253, i32 noundef 9, ptr noundef null) #10
  br label %return

if.end39.critedge.i.i:                            ; preds = %if.then
  %wb41.i.i = getelementptr inbounds %struct.backing_dev_info, ptr %10, i32 0, i32 11
  %cmp.not.i.i = icmp eq ptr %wb41.i.i, %6
  br i1 %cmp.not.i.i, label %if.end39.critedge.i.i.return_crit_edge, label %if.then42.i.i

if.end39.critedge.i.i.return_crit_edge:           ; preds = %if.end39.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %return

if.then42.i.i:                                    ; preds = %if.end39.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #12
  %refcnt.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %6, i32 0, i32 27
  tail call fastcc void @percpu_ref_put_many(ptr noundef %refcnt.i.i, i32 noundef 1) #10
  br label %return

cleanup:                                          ; preds = %inode_to_wb.exit
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @_raw_spin_unlock(ptr noundef %list_lock) #10
  tail call fastcc void @wb_put(ptr noundef %6)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !719
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #10, !srcloc !720
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #10
  br label %while.body

return:                                           ; preds = %if.then42.i.i, %if.end39.critedge.i.i.return_crit_edge, %if.then.i.i, %land.rhs.i.i.return_crit_edge
  ret ptr %6
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @inode_io_list_move_locked(ptr noundef %inode, ptr noundef %wb, ptr noundef %head) unnamed_addr #0 align 64 {
entry:
  %agg.tmp.sroa.0.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %list_lock = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i)
  %0 = ptrtoint ptr %list_lock to i32
  call void @__asan_load4_noabort(i32 %0)
  %agg.tmp.sroa.0.0.copyload.i = load volatile i32, ptr %list_lock, align 4
  %1 = ptrtoint ptr %agg.tmp.sroa.0.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i, ptr %agg.tmp.sroa.0.i, align 4
  %lock.sroa.0.0.extract.shift.i.i = lshr i32 %agg.tmp.sroa.0.0.copyload.i, 16
  %conv.i.i = and i32 %agg.tmp.sroa.0.0.copyload.i, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i.i, i32 %lock.sroa.0.0.extract.shift.i.i)
  %cmp.i.i.not = icmp eq i32 %conv.i.i, %lock.sroa.0.0.extract.shift.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i)
  br i1 %cmp.i.i.not, label %do.body4, label %do.end7, !prof !671

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/fs-writeback.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 122, 0\0A.popsection", ""() #10, !srcloc !721
  unreachable

do.end7:                                          ; preds = %entry
  %i_io_list = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 29
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %i_io_list) #10
  br i1 %call.i.i, label %if.end.i.i, label %do.end7.__list_del_entry.exit.i_crit_edge

do.end7.__list_del_entry.exit.i_crit_edge:        ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #12
  br label %__list_del_entry.exit.i

if.end.i.i:                                       ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #12
  %prev.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 29, i32 1
  %2 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prev.i.i, align 4
  %4 = ptrtoint ptr %i_io_list to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %i_io_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %3, ptr %prev1.i.i.i, align 4
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %5, ptr %3, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i, %do.end7.__list_del_entry.exit.i_crit_edge
  %8 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %head, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %i_io_list, ptr noundef %head, ptr noundef %9) #10
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.list_move.exit_crit_edge

__list_del_entry.exit.i.list_move.exit_crit_edge: ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %list_move.exit

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  %prev1.i.i2.i = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %prev1.i.i2.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %i_io_list, ptr %prev1.i.i2.i, align 4
  %11 = ptrtoint ptr %i_io_list to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %9, ptr %i_io_list, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 29, i32 1
  %12 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %head, ptr %prev3.i.i.i, align 4
  %13 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %i_io_list, ptr %head, align 4
  br label %list_move.exit

list_move.exit:                                   ; preds = %if.end.i.i.i, %__list_del_entry.exit.i.list_move.exit_crit_edge
  %b_dirty_time = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 6
  %cmp.not = icmp eq ptr %b_dirty_time, %head
  br i1 %cmp.not, label %if.end10, label %if.then8

if.then8:                                         ; preds = %list_move.exit
  %state.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 1
  %14 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %state.i.i, align 4
  %16 = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.i.not.i = icmp eq i32 %16, 0
  br i1 %tobool.i.not.i, label %if.else.i, label %if.then8.return_crit_edge

if.then8.return_crit_edge:                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #12
  br label %return

if.else.i:                                        ; preds = %if.then8
  tail call void @_set_bit(i32 noundef 2, ptr noundef %state.i.i) #10
  %avg_write_bandwidth.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 15
  %17 = ptrtoint ptr %avg_write_bandwidth.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %avg_write_bandwidth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.not.i = icmp eq i32 %18, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %if.else.i.if.end30.i_crit_edge

if.else.i.if.end30.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end30.i

land.rhs.i:                                       ; preds = %if.else.i
  %.b45.i = load i1, ptr @wb_io_lists_populated.__already_done, align 1
  br i1 %.b45.i, label %land.rhs.i.if.end30.i_crit_edge, label %if.then9.i, !prof !670

land.rhs.i.if.end30.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end30.i

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @wb_io_lists_populated.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.8, i32 noundef 91, i32 noundef 9, ptr noundef null) #10
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then9.i, %land.rhs.i.if.end30.i_crit_edge, %if.else.i.if.end30.i_crit_edge
  %19 = ptrtoint ptr %avg_write_bandwidth.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %avg_write_bandwidth.i, align 4
  %21 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %wb, align 8
  %tot_write_bandwidth.i = getelementptr inbounds %struct.backing_dev_info, ptr %22, i32 0, i32 10
  %call.i.i.i15 = tail call zeroext i1 @__kasan_check_write(ptr noundef %tot_write_bandwidth.i, i32 noundef 4) #10
  tail call void @llvm.prefetch.p0(ptr %tot_write_bandwidth.i, i32 1, i32 3, i32 1) #10
  %23 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %tot_write_bandwidth.i, ptr %tot_write_bandwidth.i, i32 %20, ptr elementtype(i32) %tot_write_bandwidth.i) #10, !srcloc !682
  br label %return

if.end10:                                         ; preds = %list_move.exit
  call void @__sanitizer_cov_trace_pc() #12
  tail call fastcc void @wb_io_lists_depopulated(ptr noundef %wb)
  br label %return

return:                                           ; preds = %if.end10, %if.end30.i, %if.then8.return_crit_edge
  %retval.0 = phi i1 [ false, %if.end10 ], [ false, %if.then8.return_crit_edge ], [ true, %if.end30.i ]
  ret i1 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_writeback_dirty_inode_enqueue(ptr noundef %inode) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_dirty_inode_enqueue, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_writeback_dirty_inode_enqueue, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !722
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_dirty_inode_enqueue, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %inode) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !723
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !723
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_dirty_inode_enqueue, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_writeback_dirty_inode_enqueue.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_writeback_dirty_inode_enqueue.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 870, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @writeback_inodes_sb_nr(ptr noundef %sb, i32 noundef %nr, i32 noundef %reason) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @__writeback_inodes_sb_nr(ptr noundef %sb, i32 noundef %nr, i32 noundef %reason, i1 noundef zeroext false)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__writeback_inodes_sb_nr(ptr noundef %sb, i32 noundef %nr, i32 noundef %reason, i1 noundef zeroext %skip_if_busy) unnamed_addr #0 align 64 {
entry:
  %done = alloca %struct.wb_completion, align 4
  %work = alloca %struct.wb_writeback_work, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %s_bdi = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 27
  %0 = ptrtoint ptr %s_bdi to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_bdi, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %done) #10
  %2 = getelementptr inbounds %struct.wb_completion, ptr %done, i32 0, i32 1
  %3 = ptrtoint ptr %done to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 1, ptr %done, align 4
  %wb_waitq = getelementptr inbounds %struct.backing_dev_info, ptr %1, i32 0, i32 16
  %4 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %wb_waitq, ptr %2, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %work) #10
  %5 = getelementptr inbounds i8, ptr %work, i32 12
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %5, align 4
  %7 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %nr, ptr %work, align 4
  %sb1 = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 1
  %8 = ptrtoint ptr %sb1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %sb, ptr %sb1, align 4
  %sync_mode = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 2
  %9 = ptrtoint ptr %sync_mode to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %sync_mode, align 4
  %tagged_writepages = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 3
  %10 = ptrtoint ptr %tagged_writepages to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 -125, ptr %tagged_writepages, align 4
  %reason17 = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 4
  %11 = ptrtoint ptr %reason17 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %reason, ptr %reason17, align 4
  %list = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 5
  %12 = ptrtoint ptr %list to i32
  call void @__asan_storeN_noabort(i32 %12, i32 8)
  store i64 0, ptr %list, align 4
  %done18 = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 6
  %13 = ptrtoint ptr %done18 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %done, ptr %done18, align 4
  %tot_write_bandwidth.i = getelementptr inbounds %struct.backing_dev_info, ptr %1, i32 0, i32 10
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %tot_write_bandwidth.i, i32 noundef 4) #10
  %14 = ptrtoint ptr %tot_write_bandwidth.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %tot_write_bandwidth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.i.not = icmp eq i32 %15, 0
  %cmp = icmp eq ptr %1, @noop_backing_dev_info
  %or.cond = or i1 %cmp, %tobool.i.not
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  %s_umount = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 14
  %call.i.i.i52 = call zeroext i1 @__kasan_check_read(ptr noundef %s_umount, i32 noundef 4) #10
  %16 = ptrtoint ptr %s_umount to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %s_umount, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp.i.not = icmp eq i32 %17, 0
  br i1 %cmp.i.not, label %do.end, label %if.end.if.end35_crit_edge, !prof !671

if.end.if.end35_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end35

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.8, i32 noundef 2620, i32 noundef 9, ptr noundef null) #10
  br label %if.end35

if.end35:                                         ; preds = %do.end, %if.end.if.end35_crit_edge
  %18 = ptrtoint ptr %s_bdi to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %s_bdi, align 8
  call fastcc void @bdi_split_work_to_wbs(ptr noundef %19, ptr noundef nonnull %work, i1 noundef zeroext %skip_if_busy)
  call void @wb_wait_for_completion(ptr noundef nonnull %done)
  br label %cleanup

cleanup:                                          ; preds = %if.end35, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %work) #10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %done) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @writeback_inodes_sb(ptr noundef %sb, i32 noundef %reason) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20), i32 noundef 4) #10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20) to i32))
  %0 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20), align 4
  %1 = tail call i32 @llvm.smax.i32(i32 %0, i32 0) #10
  %call1.i = tail call i32 @get_nr_dirty_inodes() #10
  %add.i = add i32 %1, %call1.i
  tail call fastcc void @__writeback_inodes_sb_nr(ptr noundef %sb, i32 noundef %add.i, i32 noundef %reason, i1 noundef zeroext false) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @try_to_writeback_inodes_sb(ptr noundef %sb, i32 noundef %reason) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %s_umount = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 14
  %call = tail call i32 @down_read_trylock(ptr noundef %s_umount) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20), i32 noundef 4) #10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20) to i32))
  %0 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20), align 4
  %1 = tail call i32 @llvm.smax.i32(i32 %0, i32 0) #10
  %call1.i = tail call i32 @get_nr_dirty_inodes() #10
  %add.i = add i32 %1, %call1.i
  tail call fastcc void @__writeback_inodes_sb_nr(ptr noundef %sb, i32 noundef %add.i, i32 noundef %reason, i1 noundef zeroext true)
  tail call void @up_read(ptr noundef %s_umount) #10
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @down_read_trylock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sync_inodes_sb(ptr noundef %sb) #0 align 64 {
entry:
  %sync_list.i = alloca %struct.list_head, align 4
  %done = alloca %struct.wb_completion, align 4
  %work = alloca %struct.wb_writeback_work, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %s_bdi = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 27
  %0 = ptrtoint ptr %s_bdi to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_bdi, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %done) #10
  %2 = getelementptr inbounds %struct.wb_completion, ptr %done, i32 0, i32 1
  %3 = ptrtoint ptr %done to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 1, ptr %done, align 4
  %wb_waitq = getelementptr inbounds %struct.backing_dev_info, ptr %1, i32 0, i32 16
  %4 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %wb_waitq, ptr %2, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %work) #10
  %5 = getelementptr inbounds i8, ptr %work, i32 12
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %5, align 4
  %7 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 2147483647, ptr %work, align 4
  %sb1 = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 1
  %8 = ptrtoint ptr %sb1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %sb, ptr %sb1, align 4
  %sync_mode = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 2
  %9 = ptrtoint ptr %sync_mode to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 1, ptr %sync_mode, align 4
  %tagged_writepages = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 3
  %10 = ptrtoint ptr %tagged_writepages to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 11, ptr %tagged_writepages, align 4
  %reason = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 4
  %11 = ptrtoint ptr %reason to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 2, ptr %reason, align 4
  %list = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 5
  %12 = ptrtoint ptr %list to i32
  call void @__asan_storeN_noabort(i32 %12, i32 8)
  store i64 0, ptr %list, align 4
  %done17 = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 6
  %13 = ptrtoint ptr %done17 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %done, ptr %done17, align 4
  %cmp = icmp eq ptr %1, @noop_backing_dev_info
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  %s_umount = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 14
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %s_umount, i32 noundef 4) #10
  %14 = ptrtoint ptr %s_umount to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %s_umount, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp.i.not = icmp eq i32 %15, 0
  br i1 %cmp.i.not, label %do.end, label %if.end.if.end33_crit_edge, !prof !671

if.end.if.end33_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end33

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.8, i32 noundef 2704, i32 noundef 9, ptr noundef null) #10
  br label %if.end33

if.end33:                                         ; preds = %do.end, %if.end.if.end33_crit_edge
  %wb_switch_rwsem.i = getelementptr inbounds %struct.backing_dev_info, ptr %1, i32 0, i32 15
  call void @down_write(ptr noundef %wb_switch_rwsem.i) #10
  call fastcc void @bdi_split_work_to_wbs(ptr noundef %1, ptr noundef nonnull %work, i1 noundef zeroext false)
  call void @wb_wait_for_completion(ptr noundef nonnull %done)
  call void @up_write(ptr noundef %wb_switch_rwsem.i) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %sync_list.i) #10
  %16 = getelementptr inbounds %struct.list_head, ptr %sync_list.i, i32 0, i32 1
  %17 = ptrtoint ptr %sync_list.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %sync_list.i, ptr %sync_list.i, align 4
  %18 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %sync_list.i, ptr %16, align 4
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %s_umount, i32 noundef 4) #10
  %19 = ptrtoint ptr %s_umount to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %s_umount, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp.i.not.i = icmp eq i32 %20, 0
  br i1 %cmp.i.not.i, label %do.end.i, label %if.end33.if.end.i_crit_edge, !prof !671

if.end33.if.end.i_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end.i

do.end.i:                                         ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #12
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.8, i32 noundef 2527, i32 noundef 9, ptr noundef null) #10
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %if.end33.if.end.i_crit_edge
  %s_sync_lock.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 58
  call void @mutex_lock_nested(ptr noundef %s_sync_lock.i, i32 noundef 0) #10
  %21 = call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i.i = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %24, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #10, !srcloc !675
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #10
  %call.i.i = call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i.i, label %if.end.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

if.end.i.rcu_read_lock.exit.i_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %if.end.i
  %call1.i.i = call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 696, ptr noundef nonnull @.str.141) #10
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %if.end.i.rcu_read_lock.exit.i_crit_edge
  %s_inode_wblist_lock.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 63
  call void @_raw_spin_lock_irq(ptr noundef %s_inode_wblist_lock.i) #10
  %s_inodes_wb.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 64
  %25 = ptrtoint ptr %s_inodes_wb.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile ptr, ptr %s_inodes_wb.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %26, %s_inodes_wb.i
  br i1 %cmp.i.not.i.i, label %rcu_read_lock.exit.i.list_splice_init.exit.i_crit_edge, label %if.then.i74.i

rcu_read_lock.exit.i.list_splice_init.exit.i_crit_edge: ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %list_splice_init.exit.i

if.then.i74.i:                                    ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  %27 = ptrtoint ptr %sync_list.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %sync_list.i, align 4
  %prev2.i.i.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 64, i32 1
  %29 = ptrtoint ptr %prev2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %prev2.i.i.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  %31 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %sync_list.i, ptr %prev3.i.i.i, align 4
  store ptr %26, ptr %sync_list.i, align 4
  %32 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %28, ptr %30, align 4
  %prev6.i.i.i = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 1
  %33 = ptrtoint ptr %prev6.i.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %30, ptr %prev6.i.i.i, align 4
  %34 = ptrtoint ptr %s_inodes_wb.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %s_inodes_wb.i, ptr %s_inodes_wb.i, align 4
  store ptr %s_inodes_wb.i, ptr %prev2.i.i.i, align 4
  br label %list_splice_init.exit.i

list_splice_init.exit.i:                          ; preds = %if.then.i74.i, %rcu_read_lock.exit.i.list_splice_init.exit.i_crit_edge
  %35 = ptrtoint ptr %sync_list.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile ptr, ptr %sync_list.i, align 4
  %cmp.i75.not99.i = icmp eq ptr %36, %sync_list.i
  br i1 %cmp.i75.not99.i, label %list_splice_init.exit.i.while.end.i_crit_edge, label %while.body.lr.ph.i

list_splice_init.exit.i.while.end.i_crit_edge:    ; preds = %list_splice_init.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.end.i

while.body.lr.ph.i:                               ; preds = %list_splice_init.exit.i
  %prev.i2.i.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 64, i32 1
  br label %while.body.i

while.body.i:                                     ; preds = %cleanup.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %37 = phi ptr [ %36, %while.body.lr.ph.i ], [ %65, %cleanup.i.while.body.i_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %37, i32 -352
  %i_mapping.i = getelementptr i8, ptr %37, i32 -320
  %38 = ptrtoint ptr %i_mapping.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %i_mapping.i, align 8
  %call.i.i.i51 = call zeroext i1 @__list_del_entry_valid(ptr noundef %37) #10
  br i1 %call.i.i.i51, label %if.end.i.i.i, label %while.body.i.__list_del_entry.exit.i.i_crit_edge

while.body.i.__list_del_entry.exit.i.i_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %__list_del_entry.exit.i.i

if.end.i.i.i:                                     ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #12
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %37, i32 0, i32 1
  %40 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %prev.i.i.i, align 4
  %42 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %37, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %41, ptr %prev1.i.i.i.i, align 4
  %45 = ptrtoint ptr %41 to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %43, ptr %41, align 4
  br label %__list_del_entry.exit.i.i

__list_del_entry.exit.i.i:                        ; preds = %if.end.i.i.i, %while.body.i.__list_del_entry.exit.i.i_crit_edge
  %46 = ptrtoint ptr %prev.i2.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %prev.i2.i.i, align 4
  %call.i.i.i77.i = call zeroext i1 @__list_add_valid(ptr noundef %37, ptr noundef %47, ptr noundef %s_inodes_wb.i) #10
  br i1 %call.i.i.i77.i, label %if.end.i.i.i.i, label %__list_del_entry.exit.i.i.list_move_tail.exit.i_crit_edge

__list_del_entry.exit.i.i.list_move_tail.exit.i_crit_edge: ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %list_move_tail.exit.i

if.end.i.i.i.i:                                   ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #12
  %48 = ptrtoint ptr %prev.i2.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %37, ptr %prev.i2.i.i, align 4
  %49 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %s_inodes_wb.i, ptr %37, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %37, i32 0, i32 1
  %50 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %47, ptr %prev3.i.i.i.i, align 4
  %51 = ptrtoint ptr %47 to i32
  call void @__asan_store4_noabort(i32 %51)
  store volatile ptr %37, ptr %47, align 4
  br label %list_move_tail.exit.i

list_move_tail.exit.i:                            ; preds = %if.end.i.i.i.i, %__list_del_entry.exit.i.i.list_move_tail.exit.i_crit_edge
  %xa_flags.i.i.i = getelementptr inbounds %struct.address_space, ptr %39, i32 0, i32 1, i32 1
  %52 = ptrtoint ptr %xa_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %xa_flags.i.i.i, align 4
  %and.i.i.i = and i32 %53, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.i.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.i.not.i, label %list_move_tail.exit.i.cleanup.i_crit_edge, label %if.end30.i

list_move_tail.exit.i.cleanup.i_crit_edge:        ; preds = %list_move_tail.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup.i

if.end30.i:                                       ; preds = %list_move_tail.exit.i
  call void @_raw_spin_unlock_irq(ptr noundef %s_inode_wblist_lock.i) #10
  %i_lock.i = getelementptr i8, ptr %37, i32 -240
  call void @_raw_spin_lock(ptr noundef %i_lock.i) #10
  %i_state.i = getelementptr i8, ptr %37, i32 -152
  %54 = ptrtoint ptr %i_state.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %i_state.i, align 8
  %and.i = and i32 %55, 56
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool32.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool32.not.i, label %if.end36.i, label %if.then33.i

if.then33.i:                                      ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #12
  call void @_raw_spin_unlock(ptr noundef %i_lock.i) #10
  br label %cleanup.sink.split.i

if.end36.i:                                       ; preds = %if.end30.i
  call void @__iget(ptr noundef %add.ptr.i) #10
  call void @_raw_spin_unlock(ptr noundef %i_lock.i) #10
  %call.i78.i = call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i78.i, label %if.end36.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true.i81.i

if.end36.i.rcu_read_unlock.exit.i_crit_edge:      ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit.i

land.lhs.true.i81.i:                              ; preds = %if.end36.i
  %call1.i79.i = call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i79.i)
  %tobool.not.i80.i = icmp eq i32 %call1.i79.i, 0
  br i1 %tobool.not.i80.i, label %land.lhs.true.i81.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true2.i83.i

land.lhs.true.i81.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true.i81.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit.i

land.lhs.true2.i83.i:                             ; preds = %land.lhs.true.i81.i
  %.b4.i82.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i82.i, label %land.lhs.true2.i83.i.rcu_read_unlock.exit.i_crit_edge, label %if.then.i84.i

land.lhs.true2.i83.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true2.i83.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit.i

if.then.i84.i:                                    ; preds = %land.lhs.true2.i83.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 724, ptr noundef nonnull @.str.142) #10
  br label %rcu_read_unlock.exit.i

rcu_read_unlock.exit.i:                           ; preds = %if.then.i84.i, %land.lhs.true2.i83.i.rcu_read_unlock.exit.i_crit_edge, %land.lhs.true.i81.i.rcu_read_unlock.exit.i_crit_edge, %if.end36.i.rcu_read_unlock.exit.i_crit_edge
  call void asm sideeffect "", "~{memory}"() #10, !srcloc !678
  %56 = call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i85.i = and i32 %56, -16384
  %57 = inttoptr i32 %and.i.i.i.i.i85.i to ptr
  %preempt_count.i.i.i.i86.i = getelementptr inbounds %struct.thread_info, ptr %57, i32 0, i32 1
  %58 = ptrtoint ptr %preempt_count.i.i.i.i86.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %preempt_count.i.i.i.i86.i, align 4
  %sub.i.i.i.i = add i32 %59, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i86.i, align 4
  call void @rcu_read_unlock_strict() #10
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #10
  %call38.i = call i32 @filemap_fdatawait_keep_errors(ptr noundef %39) #10
  call void @__might_resched(ptr noundef nonnull @.str.8, i32 noundef 2592, i32 noundef 0) #10
  %call.i87.i = call i32 @__cond_resched() #10
  call void @iput(ptr noundef %add.ptr.i) #10
  %60 = call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i63.i = and i32 %60, -16384
  %61 = inttoptr i32 %and.i.i.i.i.i63.i to ptr
  %preempt_count.i.i.i.i64.i = getelementptr inbounds %struct.thread_info, ptr %61, i32 0, i32 1
  %62 = ptrtoint ptr %preempt_count.i.i.i.i64.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %preempt_count.i.i.i.i64.i, align 4
  %add.i.i.i65.i = add i32 %63, 1
  store volatile i32 %add.i.i.i65.i, ptr %preempt_count.i.i.i.i64.i, align 4
  call void asm sideeffect "", "~{memory}"() #10, !srcloc !675
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #10
  %call.i66.i = call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i66.i, label %rcu_read_unlock.exit.i.cleanup.sink.split.i_crit_edge, label %land.lhs.true.i69.i

rcu_read_unlock.exit.i.cleanup.sink.split.i_crit_edge: ; preds = %rcu_read_unlock.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup.sink.split.i

land.lhs.true.i69.i:                              ; preds = %rcu_read_unlock.exit.i
  %call1.i67.i = call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i67.i)
  %tobool.not.i68.i = icmp eq i32 %call1.i67.i, 0
  br i1 %tobool.not.i68.i, label %land.lhs.true.i69.i.cleanup.sink.split.i_crit_edge, label %land.lhs.true2.i71.i

land.lhs.true.i69.i.cleanup.sink.split.i_crit_edge: ; preds = %land.lhs.true.i69.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup.sink.split.i

land.lhs.true2.i71.i:                             ; preds = %land.lhs.true.i69.i
  %.b4.i70.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i70.i, label %land.lhs.true2.i71.i.cleanup.sink.split.i_crit_edge, label %if.then.i72.i

land.lhs.true2.i71.i.cleanup.sink.split.i_crit_edge: ; preds = %land.lhs.true2.i71.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup.sink.split.i

if.then.i72.i:                                    ; preds = %land.lhs.true2.i71.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 696, ptr noundef nonnull @.str.141) #10
  br label %cleanup.sink.split.i

cleanup.sink.split.i:                             ; preds = %if.then.i72.i, %land.lhs.true2.i71.i.cleanup.sink.split.i_crit_edge, %land.lhs.true.i69.i.cleanup.sink.split.i_crit_edge, %rcu_read_unlock.exit.i.cleanup.sink.split.i_crit_edge, %if.then33.i
  call void @_raw_spin_lock_irq(ptr noundef %s_inode_wblist_lock.i) #10
  br label %cleanup.i

cleanup.i:                                        ; preds = %cleanup.sink.split.i, %list_move_tail.exit.i.cleanup.i_crit_edge
  %64 = ptrtoint ptr %sync_list.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile ptr, ptr %sync_list.i, align 4
  %cmp.i75.not.i = icmp eq ptr %65, %sync_list.i
  br i1 %cmp.i75.not.i, label %cleanup.i.while.end.i_crit_edge, label %cleanup.i.while.body.i_crit_edge

cleanup.i.while.body.i_crit_edge:                 ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.body.i

cleanup.i.while.end.i_crit_edge:                  ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.end.i

while.end.i:                                      ; preds = %cleanup.i.while.end.i_crit_edge, %list_splice_init.exit.i.while.end.i_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef %s_inode_wblist_lock.i) #10
  %call.i88.i = call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i88.i, label %while.end.i.wait_sb_inodes.exit_crit_edge, label %land.lhs.true.i91.i

while.end.i.wait_sb_inodes.exit_crit_edge:        ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wait_sb_inodes.exit

land.lhs.true.i91.i:                              ; preds = %while.end.i
  %call1.i89.i = call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i89.i)
  %tobool.not.i90.i = icmp eq i32 %call1.i89.i, 0
  br i1 %tobool.not.i90.i, label %land.lhs.true.i91.i.wait_sb_inodes.exit_crit_edge, label %land.lhs.true2.i93.i

land.lhs.true.i91.i.wait_sb_inodes.exit_crit_edge: ; preds = %land.lhs.true.i91.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wait_sb_inodes.exit

land.lhs.true2.i93.i:                             ; preds = %land.lhs.true.i91.i
  %.b4.i92.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i92.i, label %land.lhs.true2.i93.i.wait_sb_inodes.exit_crit_edge, label %if.then.i94.i

land.lhs.true2.i93.i.wait_sb_inodes.exit_crit_edge: ; preds = %land.lhs.true2.i93.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wait_sb_inodes.exit

if.then.i94.i:                                    ; preds = %land.lhs.true2.i93.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 724, ptr noundef nonnull @.str.142) #10
  br label %wait_sb_inodes.exit

wait_sb_inodes.exit:                              ; preds = %if.then.i94.i, %land.lhs.true2.i93.i.wait_sb_inodes.exit_crit_edge, %land.lhs.true.i91.i.wait_sb_inodes.exit_crit_edge, %while.end.i.wait_sb_inodes.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #10, !srcloc !678
  %66 = call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i95.i = and i32 %66, -16384
  %67 = inttoptr i32 %and.i.i.i.i.i95.i to ptr
  %preempt_count.i.i.i.i96.i = getelementptr inbounds %struct.thread_info, ptr %67, i32 0, i32 1
  %68 = ptrtoint ptr %preempt_count.i.i.i.i96.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile i32, ptr %preempt_count.i.i.i.i96.i, align 4
  %sub.i.i.i97.i = add i32 %69, -1
  store volatile i32 %sub.i.i.i97.i, ptr %preempt_count.i.i.i.i96.i, align 4
  call void @rcu_read_unlock_strict() #10
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #10
  call void @mutex_unlock(ptr noundef %s_sync_lock.i) #10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sync_list.i) #10
  br label %cleanup

cleanup:                                          ; preds = %wait_sb_inodes.exit, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %work) #10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %done) #10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @bdi_split_work_to_wbs(ptr noundef %bdi, ptr nocapture noundef readonly %base_work, i1 noundef zeroext %skip_if_busy) unnamed_addr #0 align 64 {
entry:
  %fallback_work_done = alloca %struct.wb_completion, align 4
  %fallback_work = alloca %struct.wb_writeback_work, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %wb_list = getelementptr inbounds %struct.backing_dev_info, ptr %bdi, i32 0, i32 12
  %add.ptr = getelementptr %struct.backing_dev_info, ptr %bdi, i32 0, i32 11, i32 9, i32 1, i32 2
  tail call void @__might_sleep(ptr noundef nonnull @.str.8, i32 noundef 980) #10
  %0 = getelementptr inbounds %struct.wb_completion, ptr %fallback_work_done, i32 0, i32 1
  %wb_waitq = getelementptr inbounds %struct.backing_dev_info, ptr %bdi, i32 0, i32 16
  %sync_mode = getelementptr inbounds %struct.wb_writeback_work, ptr %base_work, i32 0, i32 2
  %auto_free31 = getelementptr inbounds %struct.wb_writeback_work, ptr %fallback_work, i32 0, i32 3
  %done = getelementptr inbounds %struct.wb_writeback_work, ptr %fallback_work, i32 0, i32 6
  br label %restart

restart.loopexit:                                 ; preds = %if.then.i91, %land.lhs.true2.i90.restart.loopexit_crit_edge, %land.lhs.true.i88.restart.loopexit_crit_edge, %if.end29.restart.loopexit_crit_edge
  call void asm sideeffect "", "~{memory}"() #10, !srcloc !678
  %1 = call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i92 = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i.i92 to ptr
  %preempt_count.i.i.i.i93 = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i.i93 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i.i93, align 4
  %sub.i.i.i = add i32 %4, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i93, align 4
  call void @rcu_read_unlock_strict() #10
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #10
  call void @wb_wait_for_completion(ptr noundef nonnull %fallback_work_done)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %fallback_work) #10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %fallback_work_done) #10
  br label %restart

restart:                                          ; preds = %restart.loopexit, %entry
  %wb.0 = phi ptr [ %add.ptr, %entry ], [ %wb.1131, %restart.loopexit ]
  %last_wb.0 = phi ptr [ null, %entry ], [ %wb.1131, %restart.loopexit ]
  %5 = call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %8, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #10, !srcloc !675
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #10
  %call.i = call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i, label %restart.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

restart.rcu_read_lock.exit_crit_edge:             ; preds = %restart
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %restart
  %call1.i = call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 696, ptr noundef nonnull @.str.141) #10
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %restart.rcu_read_lock.exit_crit_edge
  %bdi_node = getelementptr inbounds %struct.bdi_writeback, ptr %wb.0, i32 0, i32 26
  %9 = ptrtoint ptr %bdi_node to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pn126 = load volatile ptr, ptr %bdi_node, align 8
  %cmp.not128 = icmp eq ptr %.pn126, %wb_list
  br i1 %cmp.not128, label %rcu_read_lock.exit.for.end_crit_edge, label %rcu_read_lock.exit.for.body_crit_edge

rcu_read_lock.exit.for.body_crit_edge:            ; preds = %rcu_read_lock.exit
  br label %for.body

rcu_read_lock.exit.for.end_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %rcu_read_lock.exit.for.body_crit_edge
  %.pn130 = phi ptr [ %.pn, %cleanup.for.body_crit_edge ], [ %.pn126, %rcu_read_lock.exit.for.body_crit_edge ]
  %last_wb.1129 = phi ptr [ null, %cleanup.for.body_crit_edge ], [ %last_wb.0, %rcu_read_lock.exit.for.body_crit_edge ]
  %wb.1131 = getelementptr i8, ptr %.pn130, i32 -800
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %fallback_work_done) #10
  %10 = ptrtoint ptr %fallback_work_done to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 1, ptr %fallback_work_done, align 4
  %11 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %wb_waitq, ptr %0, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %fallback_work) #10
  %12 = call ptr @memset(ptr %fallback_work, i32 255, i32 32)
  %tobool.not = icmp eq ptr %last_wb.1129, null
  br i1 %tobool.not, label %for.body.if.end_crit_edge, label %if.then

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.then:                                          ; preds = %for.body
  %13 = ptrtoint ptr %last_wb.1129 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %last_wb.1129, align 8
  %tobool.not.i.i = icmp eq ptr %14, null
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %if.end39.critedge.i.i

land.rhs.i.i:                                     ; preds = %if.then
  %.b49.i.i = load i1, ptr @wb_put_many.__already_done, align 1
  br i1 %.b49.i.i, label %land.rhs.i.i.if.end_crit_edge, label %if.then.i.i, !prof !670

land.rhs.i.i.if.end_crit_edge:                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @wb_put_many.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.134, i32 noundef 253, i32 noundef 9, ptr noundef null) #10
  br label %if.end

if.end39.critedge.i.i:                            ; preds = %if.then
  %wb41.i.i = getelementptr inbounds %struct.backing_dev_info, ptr %14, i32 0, i32 11
  %cmp.not.i.i = icmp eq ptr %wb41.i.i, %last_wb.1129
  br i1 %cmp.not.i.i, label %if.end39.critedge.i.i.if.end_crit_edge, label %if.then42.i.i

if.end39.critedge.i.i.if.end_crit_edge:           ; preds = %if.end39.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

if.then42.i.i:                                    ; preds = %if.end39.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #12
  %refcnt.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %last_wb.1129, i32 0, i32 27
  call fastcc void @percpu_ref_put_many(ptr noundef %refcnt.i.i, i32 noundef 1) #10
  br label %if.end

if.end:                                           ; preds = %if.then42.i.i, %if.end39.critedge.i.i.if.end_crit_edge, %if.then.i.i, %land.rhs.i.i.if.end_crit_edge, %for.body.if.end_crit_edge
  %state.i = getelementptr i8, ptr %.pn130, i32 -796
  %15 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %state.i, align 4
  %17 = and i32 %16, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.i.not = icmp eq i32 %17, 0
  br i1 %tobool.i.not, label %land.lhs.true, label %if.end.if.end17_crit_edge

if.end.if.end17_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end17

land.lhs.true:                                    ; preds = %if.end
  %18 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %sync_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %cmp13 = icmp eq i32 %19, 0
  br i1 %cmp13, label %land.lhs.true.cleanup_crit_edge, label %lor.lhs.false

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

lor.lhs.false:                                    ; preds = %land.lhs.true
  %b_dirty_time = getelementptr i8, ptr %.pn130, i32 -764
  %20 = ptrtoint ptr %b_dirty_time to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %b_dirty_time, align 4
  %cmp.i.not = icmp eq ptr %21, %b_dirty_time
  br i1 %cmp.i.not, label %lor.lhs.false.cleanup_crit_edge, label %lor.lhs.false.if.end17_crit_edge

lor.lhs.false.if.end17_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end17

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end17:                                         ; preds = %lor.lhs.false.if.end17_crit_edge, %if.end.if.end17_crit_edge
  br i1 %skip_if_busy, label %land.lhs.true19, label %if.end17.if.end22_crit_edge

if.end17.if.end22_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end22

land.lhs.true19:                                  ; preds = %if.end17
  %22 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %state.i, align 4
  %24 = and i32 %23, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.i80.not = icmp eq i32 %24, 0
  br i1 %tobool.i80.not, label %land.lhs.true19.if.end22_crit_edge, label %land.lhs.true19.cleanup_crit_edge

land.lhs.true19.cleanup_crit_edge:                ; preds = %land.lhs.true19
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

land.lhs.true19.if.end22_crit_edge:               ; preds = %land.lhs.true19
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end22

if.end22:                                         ; preds = %land.lhs.true19.if.end22_crit_edge, %if.end17.if.end22_crit_edge
  %25 = ptrtoint ptr %base_work to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %base_work, align 4
  %avg_write_bandwidth.i = getelementptr i8, ptr %.pn130, i32 -396
  %27 = ptrtoint ptr %avg_write_bandwidth.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %avg_write_bandwidth.i, align 4
  %29 = ptrtoint ptr %wb.1131 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %wb.1131, align 8
  %tot_write_bandwidth.i = getelementptr inbounds %struct.backing_dev_info, ptr %30, i32 0, i32 10
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %tot_write_bandwidth.i, i32 noundef 4) #10
  %31 = ptrtoint ptr %tot_write_bandwidth.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %tot_write_bandwidth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2147483647, i32 %26)
  %cmp.i81 = icmp eq i32 %26, 2147483647
  br i1 %cmp.i81, label %if.end22.wb_split_bdi_pages.exit_crit_edge, label %if.end.i

if.end22.wb_split_bdi_pages.exit_crit_edge:       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_split_bdi_pages.exit

if.end.i:                                         ; preds = %if.end22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.not.i82 = icmp ne i32 %32, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %32)
  %cmp1.not.i = icmp ult i32 %28, %32
  %or.cond.i = select i1 %tobool.not.i82, i1 %cmp1.not.i, i1 false
  br i1 %or.cond.i, label %if.else.i, label %if.end.i.wb_split_bdi_pages.exit_crit_edge

if.end.i.wb_split_bdi_pages.exit_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_split_bdi_pages.exit

if.else.i:                                        ; preds = %if.end.i
  %conv.i83 = sext i32 %26 to i64
  %conv3.i = zext i32 %28 to i64
  %mul.i = mul nsw i64 %conv3.i, %conv.i83
  %conv4.i = zext i32 %32 to i64
  %add.i = add nsw i64 %conv4.i, -1
  %sub.i = add nsw i64 %add.i, %mul.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %sub.i)
  %cmp179.i = icmp ult i64 %sub.i, 4294967296
  br i1 %cmp179.i, label %if.then183.i, label %if.else189.i, !prof !670

if.then183.i:                                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #12
  %conv184.i = trunc i64 %sub.i to i32
  %div187.i = udiv i32 %conv184.i, %32
  br label %wb_split_bdi_pages.exit

if.else189.i:                                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #12
  %33 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %32, i64 %sub.i) #14, !srcloc !709
  %asmresult1.i.i = extractvalue { i64, i64 } %33, 1
  %extract.t312.i = trunc i64 %asmresult1.i.i to i32
  br label %wb_split_bdi_pages.exit

wb_split_bdi_pages.exit:                          ; preds = %if.else189.i, %if.then183.i, %if.end.i.wb_split_bdi_pages.exit_crit_edge, %if.end22.wb_split_bdi_pages.exit_crit_edge
  %retval.0.i = phi i32 [ 2147483647, %if.end22.wb_split_bdi_pages.exit_crit_edge ], [ %26, %if.end.i.wb_split_bdi_pages.exit_crit_edge ], [ %div187.i, %if.then183.i ], [ %extract.t312.i, %if.else189.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %34 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %34, i32 noundef 2592, i32 noundef 32) #13
  %tobool26.not = icmp eq ptr %call7.i, null
  br i1 %tobool26.not, label %if.end29, label %if.then27

if.then27:                                        ; preds = %wb_split_bdi_pages.exit
  call void @__sanitizer_cov_trace_pc() #12
  %35 = call ptr @memcpy(ptr %call7.i, ptr %base_work, i32 32)
  %36 = ptrtoint ptr %call7.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %retval.0.i, ptr %call7.i, align 8
  %auto_free = getelementptr inbounds %struct.wb_writeback_work, ptr %call7.i, i32 0, i32 3
  %37 = ptrtoint ptr %auto_free to i32
  call void @__asan_load1_noabort(i32 %37)
  %bf.load = load i8, ptr %auto_free, align 4
  %bf.set = or i8 %bf.load, 4
  store i8 %bf.set, ptr %auto_free, align 4
  call fastcc void @wb_queue_work(ptr noundef %wb.1131, ptr noundef nonnull %call7.i)
  br label %cleanup

if.end29:                                         ; preds = %wb_split_bdi_pages.exit
  %38 = call ptr @memcpy(ptr %fallback_work, ptr %base_work, i32 32)
  %39 = ptrtoint ptr %fallback_work to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %retval.0.i, ptr %fallback_work, align 4
  %40 = ptrtoint ptr %auto_free31 to i32
  call void @__asan_load1_noabort(i32 %40)
  %bf.load32 = load i8, ptr %auto_free31, align 4
  %bf.clear33 = and i8 %bf.load32, -5
  store i8 %bf.clear33, ptr %auto_free31, align 4
  %41 = ptrtoint ptr %done to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %fallback_work_done, ptr %done, align 4
  call fastcc void @wb_queue_work(ptr noundef %wb.1131, ptr noundef nonnull %fallback_work)
  call fastcc void @wb_get(ptr noundef %wb.1131)
  %call.i85 = call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i85, label %if.end29.restart.loopexit_crit_edge, label %land.lhs.true.i88

if.end29.restart.loopexit_crit_edge:              ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #12
  br label %restart.loopexit

land.lhs.true.i88:                                ; preds = %if.end29
  %call1.i86 = call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i86)
  %tobool.not.i87 = icmp eq i32 %call1.i86, 0
  br i1 %tobool.not.i87, label %land.lhs.true.i88.restart.loopexit_crit_edge, label %land.lhs.true2.i90

land.lhs.true.i88.restart.loopexit_crit_edge:     ; preds = %land.lhs.true.i88
  call void @__sanitizer_cov_trace_pc() #12
  br label %restart.loopexit

land.lhs.true2.i90:                               ; preds = %land.lhs.true.i88
  %.b4.i89 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i89, label %land.lhs.true2.i90.restart.loopexit_crit_edge, label %if.then.i91

land.lhs.true2.i90.restart.loopexit_crit_edge:    ; preds = %land.lhs.true2.i90
  call void @__sanitizer_cov_trace_pc() #12
  br label %restart.loopexit

if.then.i91:                                      ; preds = %land.lhs.true2.i90
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 724, ptr noundef nonnull @.str.142) #10
  br label %restart.loopexit

cleanup:                                          ; preds = %if.then27, %land.lhs.true19.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %fallback_work) #10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %fallback_work_done) #10
  %42 = ptrtoint ptr %.pn130 to i32
  call void @__asan_load4_noabort(i32 %42)
  %.pn = load volatile ptr, ptr %.pn130, align 8
  %cmp.not = icmp eq ptr %.pn, %wb_list
  br i1 %cmp.not, label %cleanup.for.end_crit_edge, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.body

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %rcu_read_lock.exit.for.end_crit_edge
  %last_wb.1.lcssa = phi ptr [ null, %cleanup.for.end_crit_edge ], [ %last_wb.0, %rcu_read_lock.exit.for.end_crit_edge ]
  %call.i94 = call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i94, label %for.end.rcu_read_unlock.exit104_crit_edge, label %land.lhs.true.i97

for.end.rcu_read_unlock.exit104_crit_edge:        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit104

land.lhs.true.i97:                                ; preds = %for.end
  %call1.i95 = call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i95)
  %tobool.not.i96 = icmp eq i32 %call1.i95, 0
  br i1 %tobool.not.i96, label %land.lhs.true.i97.rcu_read_unlock.exit104_crit_edge, label %land.lhs.true2.i99

land.lhs.true.i97.rcu_read_unlock.exit104_crit_edge: ; preds = %land.lhs.true.i97
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit104

land.lhs.true2.i99:                               ; preds = %land.lhs.true.i97
  %.b4.i98 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i98, label %land.lhs.true2.i99.rcu_read_unlock.exit104_crit_edge, label %if.then.i100

land.lhs.true2.i99.rcu_read_unlock.exit104_crit_edge: ; preds = %land.lhs.true2.i99
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit104

if.then.i100:                                     ; preds = %land.lhs.true2.i99
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 724, ptr noundef nonnull @.str.142) #10
  br label %rcu_read_unlock.exit104

rcu_read_unlock.exit104:                          ; preds = %if.then.i100, %land.lhs.true2.i99.rcu_read_unlock.exit104_crit_edge, %land.lhs.true.i97.rcu_read_unlock.exit104_crit_edge, %for.end.rcu_read_unlock.exit104_crit_edge
  call void asm sideeffect "", "~{memory}"() #10, !srcloc !678
  %43 = call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i101 = and i32 %43, -16384
  %44 = inttoptr i32 %and.i.i.i.i.i101 to ptr
  %preempt_count.i.i.i.i102 = getelementptr inbounds %struct.thread_info, ptr %44, i32 0, i32 1
  %45 = ptrtoint ptr %preempt_count.i.i.i.i102 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %preempt_count.i.i.i.i102, align 4
  %sub.i.i.i103 = add i32 %46, -1
  store volatile i32 %sub.i.i.i103, ptr %preempt_count.i.i.i.i102, align 4
  call void @rcu_read_unlock_strict() #10
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #10
  %tobool47.not = icmp eq ptr %last_wb.1.lcssa, null
  br i1 %tobool47.not, label %rcu_read_unlock.exit104.if.end49_crit_edge, label %if.then48

rcu_read_unlock.exit104.if.end49_crit_edge:       ; preds = %rcu_read_unlock.exit104
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end49

if.then48:                                        ; preds = %rcu_read_unlock.exit104
  %47 = ptrtoint ptr %last_wb.1.lcssa to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %last_wb.1.lcssa, align 8
  %tobool.not.i.i105 = icmp eq ptr %48, null
  br i1 %tobool.not.i.i105, label %land.rhs.i.i107, label %if.end39.critedge.i.i111

land.rhs.i.i107:                                  ; preds = %if.then48
  %.b49.i.i106 = load i1, ptr @wb_put_many.__already_done, align 1
  br i1 %.b49.i.i106, label %land.rhs.i.i107.if.end49_crit_edge, label %if.then.i.i108, !prof !670

land.rhs.i.i107.if.end49_crit_edge:               ; preds = %land.rhs.i.i107
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end49

if.then.i.i108:                                   ; preds = %land.rhs.i.i107
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @wb_put_many.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.134, i32 noundef 253, i32 noundef 9, ptr noundef null) #10
  br label %if.end49

if.end39.critedge.i.i111:                         ; preds = %if.then48
  %wb41.i.i109 = getelementptr inbounds %struct.backing_dev_info, ptr %48, i32 0, i32 11
  %cmp.not.i.i110 = icmp eq ptr %wb41.i.i109, %last_wb.1.lcssa
  br i1 %cmp.not.i.i110, label %if.end39.critedge.i.i111.if.end49_crit_edge, label %if.then42.i.i113

if.end39.critedge.i.i111.if.end49_crit_edge:      ; preds = %if.end39.critedge.i.i111
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end49

if.then42.i.i113:                                 ; preds = %if.end39.critedge.i.i111
  call void @__sanitizer_cov_trace_pc() #12
  %refcnt.i.i112 = getelementptr inbounds %struct.bdi_writeback, ptr %last_wb.1.lcssa, i32 0, i32 27
  call fastcc void @percpu_ref_put_many(ptr noundef %refcnt.i.i112, i32 noundef 1) #10
  br label %if.end49

if.end49:                                         ; preds = %if.then42.i.i113, %if.end39.critedge.i.i111.if.end49_crit_edge, %if.then.i.i108, %land.rhs.i.i107.if.end49_crit_edge, %rcu_read_unlock.exit104.if.end49_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @write_inode_now(ptr noundef %inode, i32 noundef %sync) #0 align 64 {
entry:
  %wbc = alloca %struct.writeback_control, align 8
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %wbc) #10
  %0 = call ptr @memset(ptr %wbc, i32 0, i32 64)
  %1 = ptrtoint ptr %wbc to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 2147483647, ptr %wbc, align 8
  %range_end = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 3
  %2 = ptrtoint ptr %range_end to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 9223372036854775807, ptr %range_end, align 8
  %sync_mode = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sync)
  %tobool.not = icmp ne i32 %sync, 0
  %cond = zext i1 %tobool.not to i32
  %3 = ptrtoint ptr %sync_mode to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %cond, ptr %sync_mode, align 8
  %i_mapping = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %4 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %i_mapping, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %call.i = tail call ptr @inode_to_bdi(ptr noundef %7) #10
  %capabilities.i = getelementptr inbounds %struct.backing_dev_info, ptr %call.i, i32 0, i32 6
  %8 = ptrtoint ptr %capabilities.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %capabilities.i, align 8
  %and.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.then, label %entry.do.body_crit_edge

entry.do.body_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %10 = ptrtoint ptr %wbc to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %wbc, align 8
  br label %do.body

do.body:                                          ; preds = %if.then, %entry.do.body_crit_edge
  tail call void @__might_sleep(ptr noundef nonnull @.str.8, i32 noundef 2738) #10
  %call6 = call fastcc i32 @writeback_single_inode(ptr noundef %inode, ptr noundef nonnull %wbc)
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %wbc) #10
  ret i32 %call6
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @writeback_single_inode(ptr noundef %inode, ptr noundef %wbc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %i_lock = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #10
  %i_count = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 40
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %i_count, i32 noundef 4) #10
  %0 = ptrtoint ptr %i_count to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %i_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  %i_state = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 24
  %2 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %i_state, align 8
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %and = and i32 %3, 48
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %if.then.if.end56.sink.split_crit_edge, label %if.then.if.end56_crit_edge, !prof !671

if.then.if.end56_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end56

if.then.if.end56.sink.split_crit_edge:            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end56.sink.split

if.else:                                          ; preds = %entry
  %and25 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and25)
  %tobool26.not = icmp eq i32 %and25, 0
  br i1 %tobool26.not, label %if.else.if.end56_crit_edge, label %if.else.if.end56.sink.split_crit_edge, !prof !670

if.else.if.end56.sink.split_crit_edge:            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end56.sink.split

if.else.if.end56_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end56

if.end56.sink.split:                              ; preds = %if.else.if.end56.sink.split_crit_edge, %if.then.if.end56.sink.split_crit_edge
  %.sink = phi i32 [ 1709, %if.then.if.end56.sink.split_crit_edge ], [ 1711, %if.else.if.end56.sink.split_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.8, i32 noundef %.sink, i32 noundef 9, ptr noundef null) #10
  br label %if.end56

if.end56:                                         ; preds = %if.end56.sink.split, %if.else.if.end56_crit_edge, %if.then.if.end56_crit_edge
  %i_state57 = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 24
  %4 = ptrtoint ptr %i_state57 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %i_state57, align 8
  %and58 = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and58)
  %tobool59.not = icmp eq i32 %and58, 0
  br i1 %tobool59.not, label %if.end56.if.end63_crit_edge, label %if.then60

if.end56.if.end63_crit_edge:                      ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end63

if.then60:                                        ; preds = %if.end56
  %sync_mode = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 4
  %6 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sync_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.not = icmp eq i32 %7, 1
  br i1 %cmp.not, label %if.end62, label %if.then60.out_crit_edge

if.then60.out_crit_edge:                          ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #12
  br label %out

if.end62:                                         ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #12
  tail call fastcc void @__inode_wait_for_writeback(ptr noundef %inode)
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.end56.if.end63_crit_edge
  %8 = ptrtoint ptr %i_state57 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %i_state57, align 8
  %and66 = and i32 %9, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and66)
  %tobool67.not = icmp eq i32 %and66, 0
  br i1 %tobool67.not, label %if.end63.if.end89_crit_edge, label %do.end83, !prof !670

if.end63.if.end89_crit_edge:                      ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end89

do.end83:                                         ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #12
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.8, i32 noundef 1724, i32 noundef 9, ptr noundef null) #10
  br label %if.end89

if.end89:                                         ; preds = %do.end83, %if.end63.if.end89_crit_edge
  %10 = ptrtoint ptr %i_state57 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %i_state57, align 8
  %and98 = and i32 %11, 2055
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and98)
  %tobool99.not = icmp eq i32 %and98, 0
  br i1 %tobool99.not, label %land.lhs.true, label %if.end89.if.end104_crit_edge

if.end89.if.end104_crit_edge:                     ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end104

land.lhs.true:                                    ; preds = %if.end89
  %sync_mode100 = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 4
  %12 = ptrtoint ptr %sync_mode100 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sync_mode100, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %13)
  %cmp101.not = icmp eq i32 %13, 1
  br i1 %cmp101.not, label %lor.lhs.false, label %land.lhs.true.out_crit_edge

land.lhs.true.out_crit_edge:                      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %out

lor.lhs.false:                                    ; preds = %land.lhs.true
  %i_mapping = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %14 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %i_mapping, align 8
  %xa_flags.i.i = getelementptr inbounds %struct.address_space, ptr %15, i32 0, i32 1, i32 1
  %16 = ptrtoint ptr %xa_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %xa_flags.i.i, align 4
  %and.i.i = and i32 %17, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.i.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.i.not, label %lor.lhs.false.out_crit_edge, label %lor.lhs.false.if.end104_crit_edge

lor.lhs.false.if.end104_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end104

lor.lhs.false.out_crit_edge:                      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #12
  br label %out

if.end104:                                        ; preds = %lor.lhs.false.if.end104_crit_edge, %if.end89.if.end104_crit_edge
  %or = or i32 %11, 128
  %18 = ptrtoint ptr %i_state57 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %or, ptr %i_state57, align 8
  tail call void @wbc_attach_and_unlock_inode(ptr noundef %wbc, ptr noundef %inode)
  %call106 = tail call fastcc i32 @__writeback_single_inode(ptr noundef %inode, ptr noundef %wbc)
  tail call void @wbc_detach_inode(ptr noundef %wbc)
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #10
  %call.i = tail call fastcc ptr @locked_inode_to_wb_and_lock_list(ptr noundef %inode) #10
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #10
  %19 = ptrtoint ptr %i_state57 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %i_state57, align 8
  %and110 = and i32 %20, 2055
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and110)
  %tobool111.not = icmp eq i32 %and110, 0
  br i1 %tobool111.not, label %if.then112, label %if.end104.if.end113_crit_edge

if.end104.if.end113_crit_edge:                    ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end113

if.then112:                                       ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #12
  tail call fastcc void @inode_cgwb_move_to_attached(ptr noundef %inode, ptr noundef %call.i)
  br label %if.end113

if.end113:                                        ; preds = %if.then112, %if.end104.if.end113_crit_edge
  %list_lock = getelementptr inbounds %struct.bdi_writeback, ptr %call.i, i32 0, i32 7
  tail call void @_raw_spin_unlock(ptr noundef %list_lock) #10
  %21 = ptrtoint ptr %i_state57 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %i_state57, align 8
  %and.i = and i32 %22, -129
  store i32 %and.i, ptr %i_state57, align 8
  tail call void @inode_add_lru(ptr noundef %inode) #10
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !724
  tail call void @wake_up_bit(ptr noundef %i_state57, i32 noundef 7) #10
  br label %out

out:                                              ; preds = %if.end113, %lor.lhs.false.out_crit_edge, %land.lhs.true.out_crit_edge, %if.then60.out_crit_edge
  %ret.0 = phi i32 [ 0, %if.then60.out_crit_edge ], [ %call106, %if.end113 ], [ 0, %land.lhs.true.out_crit_edge ], [ 0, %lor.lhs.false.out_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #10
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sync_inode_metadata(ptr noundef %inode, i32 noundef %wait) #0 align 64 {
entry:
  %wbc = alloca %struct.writeback_control, align 8
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %wbc) #10
  %0 = call ptr @memset(ptr %wbc, i32 0, i32 64)
  %sync_mode = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %wait)
  %tobool.not = icmp ne i32 %wait, 0
  %cond = zext i1 %tobool.not to i32
  %1 = ptrtoint ptr %sync_mode to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %cond, ptr %sync_mode, align 8
  %call = call fastcc i32 @writeback_single_inode(ptr noundef %inode, ptr noundef nonnull %wbc)
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %wbc) #10
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @strscpy_pad(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_writeback_folio_template(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_folio_template, ptr %1, i32 0, i32 1
  %ino = getelementptr inbounds %struct.trace_event_raw_writeback_folio_template, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %ino to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ino, align 4
  %index = getelementptr inbounds %struct.trace_event_raw_writeback_folio_template, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %index, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.18, ptr noundef %name, i32 noundef %3, i32 noundef %5) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_writeback_dirty_inode_template(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_dirty_inode_template, ptr %1, i32 0, i32 1
  %ino = getelementptr inbounds %struct.trace_event_raw_writeback_dirty_inode_template, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %ino to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ino, align 4
  %state = getelementptr inbounds %struct.trace_event_raw_writeback_dirty_inode_template, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %state, align 4
  %call1 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.32, i32 noundef %5, ptr noundef nonnull @trace_raw_output_writeback_dirty_inode_template.__flags) #10
  %flags3 = getelementptr inbounds %struct.trace_event_raw_writeback_dirty_inode_template, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %flags3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags3, align 4
  %call4 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.32, i32 noundef %7, ptr noundef nonnull @trace_raw_output_writeback_dirty_inode_template.__flags.33) #10
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.21, ptr noundef %name, i32 noundef %3, ptr noundef %call1, ptr noundef %call4) #10
  %call5 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_flags_seq(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_inode_foreign_history(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %name = getelementptr inbounds %struct.trace_event_raw_inode_foreign_history, ptr %1, i32 0, i32 1
  %ino = getelementptr inbounds %struct.trace_event_raw_inode_foreign_history, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %ino to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ino, align 4
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_inode_foreign_history, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cgroup_ino, align 4
  %history = getelementptr inbounds %struct.trace_event_raw_inode_foreign_history, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %history to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %history, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.37, ptr noundef %name, i32 noundef %3, i32 noundef %5, i32 noundef %7) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_inode_switch_wbs(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %name = getelementptr inbounds %struct.trace_event_raw_inode_switch_wbs, ptr %1, i32 0, i32 1
  %ino = getelementptr inbounds %struct.trace_event_raw_inode_switch_wbs, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %ino to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ino, align 4
  %old_cgroup_ino = getelementptr inbounds %struct.trace_event_raw_inode_switch_wbs, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %old_cgroup_ino to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %old_cgroup_ino, align 4
  %new_cgroup_ino = getelementptr inbounds %struct.trace_event_raw_inode_switch_wbs, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %new_cgroup_ino to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %new_cgroup_ino, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.40, ptr noundef %name, i32 noundef %3, i32 noundef %5, i32 noundef %7) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @folio_mapping(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @folio_memcg(ptr noundef %folio) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i, !prof !670

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.41) #10
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/memcontrol.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 537, 0\0A.popsection", ""() #10, !srcloc !725
  unreachable

do.body7.i:                                       ; preds = %entry
  %memcg_data.i = getelementptr inbounds %struct.anon, ptr %folio, i32 0, i32 7
  %3 = ptrtoint ptr %memcg_data.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %memcg_data.i, align 4
  %and.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool8.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool8.not.i, label %folio_memcg_kmem.exit, label %if.then15.i, !prof !670

if.then15.i:                                      ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.42) #10
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/memcontrol.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 538, 0\0A.popsection", ""() #10, !srcloc !726
  unreachable

folio_memcg_kmem.exit:                            ; preds = %do.body7.i
  %and23.i = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23.i)
  %tobool24.i.not = icmp eq i32 %and23.i, 0
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %0, align 4
  %and.i.i.i.i9 = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i9)
  %tobool.not.i.i.i10 = icmp eq i32 %and.i.i.i.i9, 0
  br i1 %tobool24.i.not, label %if.end, label %if.then

if.then:                                          ; preds = %folio_memcg_kmem.exit
  br i1 %tobool.not.i.i.i10, label %folio_test_slab.exit.i, label %if.then.i.i.i, !prof !670

if.then.i.i.i:                                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.46) #10
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #10, !srcloc !684
  unreachable

folio_test_slab.exit.i:                           ; preds = %if.then
  %7 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %folio, align 4
  %9 = and i32 %8, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.i.not.i = icmp eq i32 %9, 0
  br i1 %tobool.i.not.i, label %__folio_objcg.exit, label %if.then.i6, !prof !670

if.then.i6:                                       ; preds = %folio_test_slab.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.43) #10
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/memcontrol.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 417, 0\0A.popsection", ""() #10, !srcloc !727
  unreachable

__folio_objcg.exit:                               ; preds = %folio_test_slab.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  %and48.i = and i32 %4, -4
  %10 = inttoptr i32 %and48.i to ptr
  %memcg.i = getelementptr inbounds %struct.obj_cgroup, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %memcg.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %memcg.i, align 4
  br label %return

if.end:                                           ; preds = %folio_memcg_kmem.exit
  br i1 %tobool.not.i.i.i10, label %folio_test_slab.exit.i13, label %if.then.i.i.i11, !prof !670

if.then.i.i.i11:                                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.46) #10
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #10, !srcloc !684
  unreachable

folio_test_slab.exit.i13:                         ; preds = %if.end
  %13 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %folio, align 4
  %15 = and i32 %14, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.i.not.i12 = icmp eq i32 %15, 0
  br i1 %tobool.i.not.i12, label %__folio_memcg.exit, label %if.then.i14, !prof !670

if.then.i14:                                      ; preds = %folio_test_slab.exit.i13
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.43) #10
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/memcontrol.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 396, 0\0A.popsection", ""() #10, !srcloc !728
  unreachable

__folio_memcg.exit:                               ; preds = %folio_test_slab.exit.i13
  call void @__sanitizer_cov_trace_pc() #12
  %and46.i = and i32 %4, -4
  %16 = inttoptr i32 %and46.i to ptr
  br label %return

return:                                           ; preds = %__folio_memcg.exit, %__folio_objcg.exit
  %retval.0 = phi ptr [ %12, %__folio_objcg.exit ], [ %16, %__folio_memcg.exit ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_page(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_track_foreign_dirty(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %name = getelementptr inbounds %struct.trace_event_raw_track_foreign_dirty, ptr %1, i32 0, i32 1
  %bdi_id = getelementptr inbounds %struct.trace_event_raw_track_foreign_dirty, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %bdi_id to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %bdi_id, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_track_foreign_dirty, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %ino to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ino, align 8
  %memcg_id = getelementptr inbounds %struct.trace_event_raw_track_foreign_dirty, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %memcg_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %memcg_id, align 4
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_track_foreign_dirty, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cgroup_ino, align 8
  %page_cgroup_ino = getelementptr inbounds %struct.trace_event_raw_track_foreign_dirty, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %page_cgroup_ino to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %page_cgroup_ino, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.53, ptr noundef %name, i64 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_flush_foreign(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %name = getelementptr inbounds %struct.trace_event_raw_flush_foreign, ptr %1, i32 0, i32 1
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_flush_foreign, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cgroup_ino, align 4
  %frn_bdi_id = getelementptr inbounds %struct.trace_event_raw_flush_foreign, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %frn_bdi_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %frn_bdi_id, align 4
  %frn_memcg_id = getelementptr inbounds %struct.trace_event_raw_flush_foreign, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %frn_memcg_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %frn_memcg_id, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.56, ptr noundef %name, i32 noundef %3, i32 noundef %5, i32 noundef %7) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_writeback_write_inode_template(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_write_inode_template, ptr %1, i32 0, i32 1
  %ino = getelementptr inbounds %struct.trace_event_raw_writeback_write_inode_template, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %ino to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ino, align 4
  %sync_mode = getelementptr inbounds %struct.trace_event_raw_writeback_write_inode_template, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sync_mode, align 4
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_writeback_write_inode_template, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cgroup_ino, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.59, ptr noundef %name, i32 noundef %3, i32 noundef %5, i32 noundef %7) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_writeback_work_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %1, i32 0, i32 1
  %sb_dev = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %sb_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sb_dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %nr_pages = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %nr_pages to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_pages, align 4
  %sync_mode = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sync_mode, align 4
  %for_kupdate = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %for_kupdate to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %for_kupdate, align 4
  %range_cyclic = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %range_cyclic to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %range_cyclic, align 4
  %for_background = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %for_background to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %for_background, align 4
  %reason = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %1, i32 0, i32 8
  %14 = ptrtoint ptr %reason to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %reason, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %15, ptr noundef nonnull @trace_raw_output_writeback_work_class.symbols) #10
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_writeback_work_class, ptr %1, i32 0, i32 9
  %16 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cgroup_ino, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.68, ptr noundef %name, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13, ptr noundef %call2, i32 noundef %17) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_symbols_seq(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_writeback_pages_written(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %pages = getelementptr inbounds %struct.trace_event_raw_writeback_pages_written, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %pages to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %pages, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.78, i32 noundef %3) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_writeback_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_class, ptr %1, i32 0, i32 1
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_writeback_class, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cgroup_ino, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.79, ptr noundef %name, i32 noundef %3) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_writeback_bdi_register(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_bdi_register, ptr %1, i32 0, i32 1
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.80, ptr noundef %name) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_wbc_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %name = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %1, i32 0, i32 1
  %nr_to_write = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %nr_to_write to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nr_to_write, align 4
  %pages_skipped = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %pages_skipped to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pages_skipped, align 4
  %sync_mode = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sync_mode, align 4
  %for_kupdate = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %for_kupdate to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %for_kupdate, align 4
  %for_background = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %for_background to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %for_background, align 4
  %for_reclaim = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %for_reclaim to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %for_reclaim, align 4
  %range_cyclic = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %1, i32 0, i32 8
  %14 = ptrtoint ptr %range_cyclic to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %range_cyclic, align 4
  %range_start = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %1, i32 0, i32 9
  %16 = ptrtoint ptr %range_start to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %range_start, align 4
  %range_end = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %1, i32 0, i32 10
  %18 = ptrtoint ptr %range_end to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %range_end, align 4
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_wbc_class, ptr %1, i32 0, i32 11
  %20 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cgroup_ino, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.86, ptr noundef %name, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_writeback_queue_io(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_queue_io, ptr %1, i32 0, i32 1
  %older = getelementptr inbounds %struct.trace_event_raw_writeback_queue_io, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %older to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %older, align 4
  %age = getelementptr inbounds %struct.trace_event_raw_writeback_queue_io, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %age to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %age, align 4
  %moved = getelementptr inbounds %struct.trace_event_raw_writeback_queue_io, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %moved to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %moved, align 4
  %reason = getelementptr inbounds %struct.trace_event_raw_writeback_queue_io, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %reason to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %reason, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %9, ptr noundef nonnull @trace_raw_output_writeback_queue_io.symbols) #10
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_writeback_queue_io, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cgroup_ino, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.90, ptr noundef %name, i32 noundef %3, i32 noundef %5, i32 noundef %7, ptr noundef %call1, i32 noundef %11) #10
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_global_dirty_state(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %nr_dirty = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %nr_dirty to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nr_dirty, align 4
  %nr_writeback = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %nr_writeback to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_writeback, align 4
  %background_thresh = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %background_thresh to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %background_thresh, align 4
  %dirty_thresh = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %dirty_thresh to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %dirty_thresh, align 4
  %dirty_limit = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %dirty_limit to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %dirty_limit, align 4
  %nr_dirtied = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %nr_dirtied to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %nr_dirtied, align 4
  %nr_written = getelementptr inbounds %struct.trace_event_raw_global_dirty_state, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %nr_written to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %nr_written, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.99, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_bdi_dirty_ratelimit(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %bdi = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %1, i32 0, i32 1
  %write_bw = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %write_bw to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %write_bw, align 4
  %avg_write_bw = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %avg_write_bw to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %avg_write_bw, align 4
  %dirty_rate = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %dirty_rate to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %dirty_rate, align 4
  %dirty_ratelimit = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %dirty_ratelimit to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %dirty_ratelimit, align 4
  %task_ratelimit = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %task_ratelimit to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %task_ratelimit, align 4
  %balanced_dirty_ratelimit = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %balanced_dirty_ratelimit to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %balanced_dirty_ratelimit, align 4
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_bdi_dirty_ratelimit, ptr %1, i32 0, i32 8
  %14 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cgroup_ino, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.107, ptr noundef %bdi, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_balance_dirty_pages(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %bdi = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %1, i32 0, i32 1
  %limit = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %limit to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %limit, align 4
  %setpoint = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %setpoint to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %setpoint, align 4
  %dirty = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %dirty to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %dirty, align 4
  %bdi_setpoint = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %bdi_setpoint to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %bdi_setpoint, align 4
  %bdi_dirty = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %bdi_dirty to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %bdi_dirty, align 4
  %dirty_ratelimit = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %dirty_ratelimit to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %dirty_ratelimit, align 4
  %task_ratelimit = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %1, i32 0, i32 8
  %14 = ptrtoint ptr %task_ratelimit to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %task_ratelimit, align 4
  %dirtied = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %1, i32 0, i32 9
  %16 = ptrtoint ptr %dirtied to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %dirtied, align 4
  %dirtied_pause = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %1, i32 0, i32 10
  %18 = ptrtoint ptr %dirtied_pause to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %dirtied_pause, align 4
  %paused = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %1, i32 0, i32 11
  %20 = ptrtoint ptr %paused to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %paused, align 4
  %pause = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %1, i32 0, i32 12
  %22 = ptrtoint ptr %pause to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %pause, align 4
  %period = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %1, i32 0, i32 13
  %24 = ptrtoint ptr %period to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %period, align 4
  %think = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %1, i32 0, i32 14
  %26 = ptrtoint ptr %think to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %think, align 4
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_balance_dirty_pages, ptr %1, i32 0, i32 15
  %28 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %cgroup_ino, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.119, ptr noundef %bdi, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21, i32 noundef %23, i32 noundef %25, i32 noundef %27, i32 noundef %29) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_writeback_sb_inodes_requeue(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_sb_inodes_requeue, ptr %1, i32 0, i32 1
  %ino = getelementptr inbounds %struct.trace_event_raw_writeback_sb_inodes_requeue, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %ino to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ino, align 4
  %state = getelementptr inbounds %struct.trace_event_raw_writeback_sb_inodes_requeue, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %state, align 4
  %call1 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.32, i32 noundef %5, ptr noundef nonnull @trace_raw_output_writeback_sb_inodes_requeue.__flags) #10
  %dirtied_when = getelementptr inbounds %struct.trace_event_raw_writeback_sb_inodes_requeue, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %dirtied_when to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %dirtied_when, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %8 = load volatile i32, ptr @jiffies, align 128
  %sub = sub i32 %8, %7
  %div = udiv i32 %sub, 100
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_writeback_sb_inodes_requeue, ptr %1, i32 0, i32 5
  %9 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cgroup_ino, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.121, ptr noundef %name, i32 noundef %3, ptr noundef %call1, i32 noundef %7, i32 noundef %div, i32 noundef %10) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_writeback_congest_waited_template(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %usec_timeout = getelementptr inbounds %struct.trace_event_raw_writeback_congest_waited_template, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %usec_timeout, align 4
  %usec_delayed = getelementptr inbounds %struct.trace_event_raw_writeback_congest_waited_template, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %usec_delayed to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %usec_delayed, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.124, i32 noundef %3, i32 noundef %5) #10
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_writeback_single_inode_template(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %name = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %1, i32 0, i32 1
  %ino = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %ino to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ino, align 4
  %state = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %state, align 4
  %call1 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.32, i32 noundef %5, ptr noundef nonnull @trace_raw_output_writeback_single_inode_template.__flags) #10
  %dirtied_when = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %dirtied_when to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %dirtied_when, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %8 = load volatile i32, ptr @jiffies, align 128
  %sub = sub i32 %8, %7
  %div = udiv i32 %sub, 100
  %writeback_index = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %1, i32 0, i32 5
  %9 = ptrtoint ptr %writeback_index to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %writeback_index, align 4
  %nr_to_write = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %1, i32 0, i32 6
  %11 = ptrtoint ptr %nr_to_write to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %nr_to_write, align 4
  %wrote = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %1, i32 0, i32 7
  %13 = ptrtoint ptr %wrote to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %wrote, align 4
  %cgroup_ino = getelementptr inbounds %struct.trace_event_raw_writeback_single_inode_template, ptr %1, i32 0, i32 8
  %15 = ptrtoint ptr %cgroup_ino to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %cgroup_ino, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.127, ptr noundef %name, i32 noundef %3, ptr noundef %call1, i32 noundef %7, i32 noundef %div, i32 noundef %10, i32 noundef %12, i32 noundef %14, i32 noundef %16) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_writeback_inode_template(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_writeback_inode_template, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %ino = getelementptr inbounds %struct.trace_event_raw_writeback_inode_template, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %ino to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ino, align 4
  %dirtied_when = getelementptr inbounds %struct.trace_event_raw_writeback_inode_template, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %dirtied_when to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %dirtied_when, align 4
  %state = getelementptr inbounds %struct.trace_event_raw_writeback_inode_template, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %state, align 4
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.32, i32 noundef %9, ptr noundef nonnull @trace_raw_output_writeback_inode_template.__flags) #10
  %mode = getelementptr inbounds %struct.trace_event_raw_writeback_inode_template, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %mode to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %mode, align 4
  %conv = zext i16 %11 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.131, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7, ptr noundef %call2, i32 noundef %conv) #10
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #5

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #5

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run3(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run4(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run12(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #7

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @percpu_ref_put_many(ptr noundef %ref, i32 noundef %nr) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !675
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #10
  %call.i = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 696, ptr noundef nonnull @.str.141) #10
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %4 = ptrtoint ptr %ref to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %ref, align 4
  %and.i = and i32 %5, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i53 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i53, label %do.body1, label %if.else, !prof !670

do.body1:                                         ; preds = %rcu_read_lock.exit
  %6 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #10, !srcloc !688
  %7 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i54 = and i32 %7, -16384
  %8 = inttoptr i32 %and.i54 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %5
  %13 = inttoptr i32 %add to ptr
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %add15 = sub i32 %15, %nr
  store i32 %add15, ptr %13, align 4
  %16 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #10, !srcloc !689
  %and.i.i = and i32 %16, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not, label %if.then29, label %do.body1.do.end31_crit_edge, !prof !671

do.body1.do.end31_crit_edge:                      ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end31

if.then29:                                        ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @warn_bogus_irq_restore() #10
  br label %do.end31

do.end31:                                         ; preds = %if.then29, %do.body1.do.end31_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %6) #10, !srcloc !690
  br label %if.end48

if.else:                                          ; preds = %rcu_read_lock.exit
  %data = getelementptr inbounds %struct.percpu_ref, ptr %ref, i32 0, i32 1
  %17 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %data, align 4
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %18, i32 noundef 4) #10
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !699
  tail call void @llvm.prefetch.p0(ptr %18, i32 1, i32 3, i32 1) #10
  %19 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %18, ptr %18, i32 %nr, ptr elementtype(i32) %18) #10, !srcloc !700
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %19, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !701
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then45, label %if.else.if.end48_crit_edge, !prof !671

if.else.if.end48_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end48

if.then45:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #12
  %20 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %data, align 4
  %release = getelementptr inbounds %struct.percpu_ref_data, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %release to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %release, align 4
  tail call void %23(ptr noundef %ref) #10
  br label %if.end48

if.end48:                                         ; preds = %if.then45, %if.else.if.end48_crit_edge, %do.end31
  %call.i55 = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i55, label %if.end48.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i58

if.end48.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit

land.lhs.true.i58:                                ; preds = %if.end48
  %call1.i56 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i56)
  %tobool.not.i57 = icmp eq i32 %call1.i56, 0
  br i1 %tobool.not.i57, label %land.lhs.true.i58.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i60

land.lhs.true.i58.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i58
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit

land.lhs.true2.i60:                               ; preds = %land.lhs.true.i58
  %.b4.i59 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i59, label %land.lhs.true2.i60.rcu_read_unlock.exit_crit_edge, label %if.then.i61

land.lhs.true2.i60.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i60
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit

if.then.i61:                                      ; preds = %land.lhs.true2.i60
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 724, ptr noundef nonnull @.str.142) #10
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i61, %land.lhs.true2.i60.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i58.rcu_read_unlock.exit_crit_edge, %if.end48.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !678
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i62 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i.i.i62 to ptr
  %preempt_count.i.i.i.i63 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i.i.i63 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i.i.i63, align 4
  %sub.i.i.i = add i32 %27, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i63, align 4
  tail call void @rcu_read_unlock_strict() #10
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #10
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #8

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @__iget(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @iput(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_inode_switch_wbs(ptr noundef %inode, ptr noundef %old_wb, ptr noundef %new_wb) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_inode_switch_wbs, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_inode_switch_wbs, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !729
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_inode_switch_wbs, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %inode, ptr noundef %old_wb, ptr noundef %new_wb) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !730
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !730
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_inode_switch_wbs, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_inode_switch_wbs.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_inode_switch_wbs.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 235, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xas_find_marked(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @xas_next_marked(ptr noundef %xas, i32 noundef %mark) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  %xa_node = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %0 = ptrtoint ptr %xa_node to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %xa_node, align 4
  %2 = ptrtoint ptr %1 to i32
  %and.i = and i32 %2, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp ne i32 %and.i, 0
  %tobool1.not.i = icmp eq ptr %1, null
  %spec.select.i = or i1 %tobool1.not.i, %tobool.not.i
  br i1 %spec.select.i, label %entry.cleanup.sink.split_crit_edge, label %lor.rhs, !prof !671

entry.cleanup.sink.split_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup.sink.split

lor.rhs:                                          ; preds = %entry
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not = icmp eq i8 %4, 0
  br i1 %tobool.not, label %if.end, label %lor.rhs.cleanup.sink.split_crit_edge, !prof !670

lor.rhs.cleanup.sink.split_crit_edge:             ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup.sink.split

if.end:                                           ; preds = %lor.rhs
  %xa_offset.i = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 4
  %5 = ptrtoint ptr %xa_offset.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %xa_offset.i, align 2
  %conv.i = zext i8 %6 to i32
  %inc.i = add nuw nsw i32 %conv.i, 1
  %7 = getelementptr inbounds %struct.xa_node, ptr %1, i32 0, i32 8
  %arrayidx.i = getelementptr [3 x [2 x i32]], ptr %7, i32 0, i32 %mark
  %call.i = tail call i32 @_find_next_bit_be(ptr noundef %arrayidx.i, i32 noundef 64, i32 noundef %inc.i) #10
  %conv6 = trunc i32 %call.i to i8
  %8 = ptrtoint ptr %xa_offset.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %conv6, ptr %xa_offset.i, align 2
  %xa_index = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 1
  %9 = ptrtoint ptr %xa_index to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %xa_index, align 4
  %and = and i32 %10, -64
  %add = add i32 %and, %call.i
  store i32 %add, ptr %xa_index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %call.i)
  %cmp12 = icmp eq i32 %call.i, 64
  br i1 %cmp12, label %if.end.cleanup.sink.split_crit_edge, label %if.end16

if.end.cleanup.sink.split_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup.sink.split

if.end16:                                         ; preds = %if.end
  %11 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %xas, align 4
  %arrayidx.i1 = getelementptr %struct.xa_node, ptr %1, i32 0, i32 7, i32 %call.i
  %13 = ptrtoint ptr %arrayidx.i1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %arrayidx.i1, align 4
  %dep_map.i = getelementptr inbounds %struct.anon.4, ptr %12, i32 0, i32 1
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i2 = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i2, label %lor.lhs.false.i, label %if.end16.xa_entry.exit_crit_edge

if.end16.xa_entry.exit_crit_edge:                 ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #12
  br label %xa_entry.exit

lor.lhs.false.i:                                  ; preds = %if.end16
  %call4.i = tail call i32 @rcu_read_lock_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %land.lhs.true.i, label %lor.lhs.false.i.xa_entry.exit_crit_edge

lor.lhs.false.i.xa_entry.exit_crit_edge:          ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %xa_entry.exit

land.lhs.true.i:                                  ; preds = %lor.lhs.false.i
  %call6.i = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %land.lhs.true.i.xa_entry.exit_crit_edge, label %land.lhs.true8.i

land.lhs.true.i.xa_entry.exit_crit_edge:          ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %xa_entry.exit

land.lhs.true8.i:                                 ; preds = %land.lhs.true.i
  %.b13.i = load i1, ptr @xa_entry.__warned, align 1
  br i1 %.b13.i, label %land.lhs.true8.i.xa_entry.exit_crit_edge, label %if.then.i

land.lhs.true8.i.xa_entry.exit_crit_edge:         ; preds = %land.lhs.true8.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %xa_entry.exit

if.then.i:                                        ; preds = %land.lhs.true8.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @xa_entry.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.138, i32 noundef 1183, ptr noundef nonnull @.str.133) #10
  br label %xa_entry.exit

xa_entry.exit:                                    ; preds = %if.then.i, %land.lhs.true8.i.xa_entry.exit_crit_edge, %land.lhs.true.i.xa_entry.exit_crit_edge, %lor.lhs.false.i.xa_entry.exit_crit_edge, %if.end16.xa_entry.exit_crit_edge
  %tobool18.not = icmp eq ptr %14, null
  br i1 %tobool18.not, label %xa_entry.exit.cleanup.sink.split_crit_edge, label %xa_entry.exit.cleanup_crit_edge

xa_entry.exit.cleanup_crit_edge:                  ; preds = %xa_entry.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

xa_entry.exit.cleanup.sink.split_crit_edge:       ; preds = %xa_entry.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %xa_entry.exit.cleanup.sink.split_crit_edge, %if.end.cleanup.sink.split_crit_edge, %lor.rhs.cleanup.sink.split_crit_edge, %entry.cleanup.sink.split_crit_edge
  %call20 = tail call ptr @xas_find_marked(ptr noundef %xas, i32 noundef -1, i32 noundef %mark) #10
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %xa_entry.exit.cleanup_crit_edge
  %retval.0 = phi ptr [ %14, %xa_entry.exit.cleanup_crit_edge ], [ %call20, %cleanup.sink.split ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @inode_cgwb_move_to_attached(ptr noundef %inode, ptr noundef %wb) unnamed_addr #0 align 64 {
entry:
  %agg.tmp.sroa.0.i38 = alloca i32, align 4
  %agg.tmp.sroa.0.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %list_lock = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i)
  %0 = ptrtoint ptr %list_lock to i32
  call void @__asan_load4_noabort(i32 %0)
  %agg.tmp.sroa.0.0.copyload.i = load volatile i32, ptr %list_lock, align 4
  %1 = ptrtoint ptr %agg.tmp.sroa.0.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i, ptr %agg.tmp.sroa.0.i, align 4
  %lock.sroa.0.0.extract.shift.i.i = lshr i32 %agg.tmp.sroa.0.0.copyload.i, 16
  %conv.i.i = and i32 %agg.tmp.sroa.0.0.copyload.i, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i.i, i32 %lock.sroa.0.0.extract.shift.i.i)
  %cmp.i.i.not = icmp eq i32 %conv.i.i, %lock.sroa.0.0.extract.shift.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i)
  br i1 %cmp.i.i.not, label %do.body4, label %do.body8, !prof !671

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/fs-writeback.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 280, 0\0A.popsection", ""() #10, !srcloc !731
  unreachable

do.body8:                                         ; preds = %entry
  %i_lock = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i38)
  %2 = ptrtoint ptr %i_lock to i32
  call void @__asan_load4_noabort(i32 %2)
  %agg.tmp.sroa.0.0.copyload.i39 = load volatile i32, ptr %i_lock, align 4
  %3 = ptrtoint ptr %agg.tmp.sroa.0.i38 to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i39, ptr %agg.tmp.sroa.0.i38, align 4
  %lock.sroa.0.0.extract.shift.i.i40 = lshr i32 %agg.tmp.sroa.0.0.copyload.i39, 16
  %conv.i.i41 = and i32 %agg.tmp.sroa.0.0.copyload.i39, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i.i41, i32 %lock.sroa.0.0.extract.shift.i.i40)
  %cmp.i.i42.not = icmp eq i32 %conv.i.i41, %lock.sroa.0.0.extract.shift.i.i40
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i38)
  br i1 %cmp.i.i42.not, label %do.body21, label %do.end26, !prof !671

do.body21:                                        ; preds = %do.body8
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/fs-writeback.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 281, 0\0A.popsection", ""() #10, !srcloc !732
  unreachable

do.end26:                                         ; preds = %do.body8
  %i_state = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 24
  %4 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %i_state, align 8
  %and = and i32 %5, -131073
  store i32 %and, ptr %i_state, align 8
  %6 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %wb, align 8
  %wb27 = getelementptr inbounds %struct.backing_dev_info, ptr %7, i32 0, i32 11
  %cmp.not = icmp eq ptr %wb27, %wb
  %i_io_list29 = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 29
  br i1 %cmp.not, label %if.else, label %if.then28

if.then28:                                        ; preds = %do.end26
  %b_attached = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 33
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %i_io_list29) #10
  br i1 %call.i.i, label %if.end.i.i, label %if.then28.__list_del_entry.exit.i_crit_edge

if.then28.__list_del_entry.exit.i_crit_edge:      ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #12
  br label %__list_del_entry.exit.i

if.end.i.i:                                       ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #12
  %prev.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 29, i32 1
  %8 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %prev.i.i, align 4
  %10 = ptrtoint ptr %i_io_list29 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %i_io_list29, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %9, ptr %prev1.i.i.i, align 4
  %13 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %11, ptr %9, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i, %if.then28.__list_del_entry.exit.i_crit_edge
  %14 = ptrtoint ptr %b_attached to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %b_attached, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %i_io_list29, ptr noundef %b_attached, ptr noundef %15) #10
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.if.end30_crit_edge

__list_del_entry.exit.i.if.end30_crit_edge:       ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end30

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  %prev1.i.i2.i = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %prev1.i.i2.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %i_io_list29, ptr %prev1.i.i2.i, align 4
  %17 = ptrtoint ptr %i_io_list29 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %15, ptr %i_io_list29, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 29, i32 1
  %18 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %b_attached, ptr %prev3.i.i.i, align 4
  %19 = ptrtoint ptr %b_attached to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %i_io_list29, ptr %b_attached, align 4
  br label %if.end30

if.else:                                          ; preds = %do.end26
  %call.i.i44 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %i_io_list29) #10
  br i1 %call.i.i44, label %if.end.i.i47, label %if.else.list_del_init.exit_crit_edge

if.else.list_del_init.exit_crit_edge:             ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #12
  br label %list_del_init.exit

if.end.i.i47:                                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #12
  %prev.i.i45 = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 29, i32 1
  %20 = ptrtoint ptr %prev.i.i45 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %prev.i.i45, align 4
  %22 = ptrtoint ptr %i_io_list29 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %i_io_list29, align 4
  %prev1.i.i.i46 = getelementptr inbounds %struct.list_head, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %prev1.i.i.i46 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %21, ptr %prev1.i.i.i46, align 4
  %25 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %23, ptr %21, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i47, %if.else.list_del_init.exit_crit_edge
  %26 = ptrtoint ptr %i_io_list29 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %i_io_list29, ptr %i_io_list29, align 4
  %prev.i3.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 29, i32 1
  %27 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %i_io_list29, ptr %prev.i3.i, align 4
  br label %if.end30

if.end30:                                         ; preds = %list_del_init.exit, %if.end.i.i.i, %__list_del_entry.exit.i.if.end30_crit_edge
  tail call fastcc void @wb_io_lists_depopulated(ptr noundef %wb)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_counter_add_batch(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit_be(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sw_hweight32(i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #10
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #10
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_writeback_queue(ptr noundef %wb, ptr noundef %work) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_queue, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_writeback_queue, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !733
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_queue, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %wb, ptr noundef %work) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !734
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !734
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_queue, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_writeback_queue.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_writeback_queue.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 389, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_workqueue(ptr noundef, i32 noundef, i32 noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wake_bit_function(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bit_waitqueue(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__wait_on_bit(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bit_wait(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_writeback_exec(ptr noundef %wb, ptr noundef %work) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_exec, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_writeback_exec, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !735
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_exec, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %wb, ptr noundef %work) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !736
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !736
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_exec, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_writeback_exec.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_writeback_exec.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 390, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @wb_writeback(ptr noundef %wb, ptr noundef %work) unnamed_addr #0 align 64 {
entry:
  %wait.i = alloca %struct.wait_queue_entry, align 4
  %plug = alloca %struct.blk_plug, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %work, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %2 = load volatile i32, ptr @jiffies, align 128
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %plug) #10
  %3 = call ptr @memset(ptr %plug, i32 255, i32 24)
  call void @blk_start_plug(ptr noundef nonnull %plug) #10
  %list_lock = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 7
  call void @_raw_spin_lock(ptr noundef %list_lock) #10
  %work_list = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 22
  %b_more_io = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 5
  %4 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %work, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp100 = icmp slt i32 %5, 1
  br i1 %cmp100, label %entry.for.end_crit_edge, label %if.end.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end

if.end.lr.ph:                                     ; preds = %entry
  %for_background = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 3
  %b_io = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 4
  %sb = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 1
  %prev = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 5, i32 1
  %6 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 1
  %7 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 2
  %8 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 3
  %9 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 3, i32 1
  br label %if.end

if.end:                                           ; preds = %for.cond.backedge.if.end_crit_edge, %if.end.lr.ph
  %dirtied_before.0101 = phi i32 [ %2, %if.end.lr.ph ], [ %dirtied_before.1, %for.cond.backedge.if.end_crit_edge ]
  %10 = ptrtoint ptr %for_background to i32
  call void @__asan_load1_noabort(i32 %10)
  %bf.load = load i8, ptr %for_background, align 4
  %11 = and i8 %bf.load, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not = icmp eq i8 %11, 0
  %12 = and i8 %bf.load, 80
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %if.end.if.end10_crit_edge, label %land.lhs.true

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end10

land.lhs.true:                                    ; preds = %if.end
  %14 = ptrtoint ptr %work_list to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %work_list, align 4
  %cmp.i93.not = icmp eq ptr %15, %work_list
  br i1 %cmp.i93.not, label %land.lhs.true.if.end10_crit_edge, label %land.lhs.true.for.end_crit_edge

land.lhs.true.for.end_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end

land.lhs.true.if.end10_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end10

if.end10:                                         ; preds = %land.lhs.true.if.end10_crit_edge, %if.end.if.end10_crit_edge
  br i1 %tobool.not, label %if.end10.if.end20_crit_edge, label %land.lhs.true17

if.end10.if.end20_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end20

land.lhs.true17:                                  ; preds = %if.end10
  %call18 = call zeroext i1 @wb_over_bg_thresh(ptr noundef %wb) #10
  br i1 %call18, label %land.lhs.true17.if.end20_crit_edge, label %land.lhs.true17.for.end_crit_edge

land.lhs.true17.for.end_crit_edge:                ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end

land.lhs.true17.if.end20_crit_edge:               ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end20

if.end20:                                         ; preds = %land.lhs.true17.if.end20_crit_edge, %if.end10.if.end20_crit_edge
  %16 = ptrtoint ptr %for_background to i32
  call void @__asan_load1_noabort(i32 %16)
  %bf.load22 = load i8, ptr %for_background, align 4
  %17 = and i8 %bf.load22, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool26.not = icmp eq i8 %17, 0
  br i1 %tobool26.not, label %if.else, label %if.then27

if.then27:                                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %18 = load volatile i32, ptr @jiffies, align 128
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @dirty_expire_interval to i32))
  %19 = load i32, ptr @dirty_expire_interval, align 4
  %mul = mul i32 %19, 10
  %call2.i = call i32 @__msecs_to_jiffies(i32 noundef %mul) #10
  %sub = sub i32 %18, %call2.i
  br label %if.end37

if.else:                                          ; preds = %if.end20
  %20 = and i8 %bf.load22, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool34.not = icmp eq i8 %20, 0
  br i1 %tobool34.not, label %if.else.if.end37_crit_edge, label %if.then35

if.else.if.end37_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end37

if.then35:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %21 = load volatile i32, ptr @jiffies, align 128
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %if.else.if.end37_crit_edge, %if.then27
  %dirtied_before.1 = phi i32 [ %sub, %if.then27 ], [ %21, %if.then35 ], [ %dirtied_before.0101, %if.else.if.end37_crit_edge ]
  call fastcc void @trace_writeback_start(ptr noundef %wb, ptr noundef %work)
  %22 = ptrtoint ptr %b_io to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %b_io, align 4
  %cmp.i94.not = icmp eq ptr %23, %b_io
  br i1 %cmp.i94.not, label %if.then40, label %if.end37.if.end41_crit_edge

if.end37.if.end41_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end41

if.then40:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #12
  call fastcc void @queue_io(ptr noundef %wb, ptr noundef %work, i32 noundef %dirtied_before.1)
  br label %if.end41

if.end41:                                         ; preds = %if.then40, %if.end37.if.end41_crit_edge
  %24 = ptrtoint ptr %sb to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %sb, align 4
  %tobool42.not = icmp eq ptr %25, null
  br i1 %tobool42.not, label %if.else46, label %if.then43

if.then43:                                        ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #12
  %call45 = call fastcc i32 @writeback_sb_inodes(ptr noundef nonnull %25, ptr noundef %wb, ptr noundef %work)
  br label %if.end48

if.else46:                                        ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #12
  %call47 = call fastcc i32 @__writeback_inodes_wb(ptr noundef %wb, ptr noundef %work)
  br label %if.end48

if.end48:                                         ; preds = %if.else46, %if.then43
  %progress.0 = phi i32 [ %call45, %if.then43 ], [ %call47, %if.else46 ]
  call fastcc void @trace_writeback_written(ptr noundef %wb, ptr noundef %work)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %progress.0)
  %tobool49.not = icmp eq i32 %progress.0, 0
  br i1 %tobool49.not, label %if.end51, label %if.end48.for.cond.backedge_crit_edge

if.end48.for.cond.backedge_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.cond.backedge

if.end51:                                         ; preds = %if.end48
  %26 = ptrtoint ptr %b_more_io to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile ptr, ptr %b_more_io, align 4
  %cmp.i96.not = icmp eq ptr %27, %b_more_io
  br i1 %cmp.i96.not, label %if.end51.for.end_crit_edge, label %if.end55

if.end51.for.end_crit_edge:                       ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end

if.end55:                                         ; preds = %if.end51
  call fastcc void @trace_writeback_wait(ptr noundef %wb, ptr noundef %work)
  %28 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %prev, align 4
  %i_lock = getelementptr i8, ptr %29, i32 -204
  call void @_raw_spin_lock(ptr noundef %i_lock) #10
  call void @_raw_spin_unlock(ptr noundef %list_lock) #10
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %wait.i) #10
  %30 = ptrtoint ptr %wait.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %wait.i, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 2
  %33 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %task.i, align 8
  %35 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %34, ptr %6, align 4
  %36 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @autoremove_wake_function, ptr %7, align 4
  %37 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %8, ptr %8, align 4
  %38 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %8, ptr %9, align 4
  %i_state.i = getelementptr i8, ptr %29, i32 -116
  %call4.i = call ptr @bit_waitqueue(ptr noundef %i_state.i, i32 noundef 7) #10
  call void @prepare_to_wait(ptr noundef %call4.i, ptr noundef nonnull %wait.i, i32 noundef 2) #10
  %39 = ptrtoint ptr %i_state.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %i_state.i, align 8
  %and.i = and i32 %40, 128
  call void @_raw_spin_unlock(ptr noundef %i_lock) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end55.inode_sleep_on_writeback.exit_crit_edge, label %if.then.i98

if.end55.inode_sleep_on_writeback.exit_crit_edge: ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_sleep_on_writeback.exit

if.then.i98:                                      ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #12
  call void @schedule() #10
  br label %inode_sleep_on_writeback.exit

inode_sleep_on_writeback.exit:                    ; preds = %if.then.i98, %if.end55.inode_sleep_on_writeback.exit_crit_edge
  call void @finish_wait(ptr noundef %call4.i, ptr noundef nonnull %wait.i) #10
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %wait.i) #10
  call void @_raw_spin_lock(ptr noundef %list_lock) #10
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %inode_sleep_on_writeback.exit, %if.end48.for.cond.backedge_crit_edge
  %41 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %work, align 4
  %cmp = icmp slt i32 %42, 1
  br i1 %cmp, label %for.cond.backedge.for.end_crit_edge, label %for.cond.backedge.if.end_crit_edge

for.cond.backedge.if.end_crit_edge:               ; preds = %for.cond.backedge
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

for.cond.backedge.for.end_crit_edge:              ; preds = %for.cond.backedge
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end

for.end:                                          ; preds = %for.cond.backedge.for.end_crit_edge, %if.end51.for.end_crit_edge, %land.lhs.true17.for.end_crit_edge, %land.lhs.true.for.end_crit_edge, %entry.for.end_crit_edge
  call void @_raw_spin_unlock(ptr noundef %list_lock) #10
  call void @blk_finish_plug(ptr noundef nonnull %plug) #10
  %43 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %work, align 4
  %sub62 = sub i32 %1, %44
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %plug) #10
  ret i32 %sub62
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_start_plug(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @wb_over_bg_thresh(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_writeback_start(ptr noundef %wb, ptr noundef %work) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_start, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_writeback_start, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !737
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_start, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %wb, ptr noundef %work) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !738
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !738
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_start, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_writeback_start.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_writeback_start.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 391, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @queue_io(ptr noundef %wb, ptr noundef %work, i32 noundef %dirtied_before) unnamed_addr #0 align 64 {
entry:
  %agg.tmp.sroa.0.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %list_lock = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i)
  %0 = ptrtoint ptr %list_lock to i32
  call void @__asan_load4_noabort(i32 %0)
  %agg.tmp.sroa.0.0.copyload.i = load volatile i32, ptr %list_lock, align 4
  %1 = ptrtoint ptr %agg.tmp.sroa.0.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i, ptr %agg.tmp.sroa.0.i, align 4
  %lock.sroa.0.0.extract.shift.i.i = lshr i32 %agg.tmp.sroa.0.0.copyload.i, 16
  %conv.i.i = and i32 %agg.tmp.sroa.0.0.copyload.i, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i.i, i32 %lock.sroa.0.0.extract.shift.i.i)
  %cmp.i.i.not = icmp eq i32 %conv.i.i, %lock.sroa.0.0.extract.shift.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i)
  br i1 %cmp.i.i.not, label %do.body4, label %do.end9, !prof !671

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/fs-writeback.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1453, 0\0A.popsection", ""() #10, !srcloc !739
  unreachable

do.end9:                                          ; preds = %entry
  %b_more_io = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 5
  %b_io = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 4
  %2 = ptrtoint ptr %b_more_io to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %b_more_io, align 4
  %cmp.i.not.i = icmp eq ptr %3, %b_more_io
  br i1 %cmp.i.not.i, label %do.end9.list_splice_init.exit_crit_edge, label %if.then.i

do.end9.list_splice_init.exit_crit_edge:          ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #12
  br label %list_splice_init.exit

if.then.i:                                        ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #12
  %4 = ptrtoint ptr %b_io to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %b_io, align 4
  %prev2.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 5, i32 1
  %6 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev2.i.i, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  %8 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %b_io, ptr %prev3.i.i, align 4
  store ptr %3, ptr %b_io, align 4
  %9 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %5, ptr %7, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %10 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev6.i.i, align 4
  %11 = ptrtoint ptr %b_more_io to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %b_more_io, ptr %b_more_io, align 4
  store ptr %b_more_io, ptr %prev2.i.i, align 4
  br label %list_splice_init.exit

list_splice_init.exit:                            ; preds = %if.then.i, %do.end9.list_splice_init.exit_crit_edge
  %b_dirty = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 3
  %call11 = tail call fastcc i32 @move_expired_inodes(ptr noundef %b_dirty, ptr noundef %b_io, i32 noundef %dirtied_before)
  %for_sync = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 3
  %12 = ptrtoint ptr %for_sync to i32
  call void @__asan_load1_noabort(i32 %12)
  %bf.load = load i8, ptr %for_sync, align 4
  %13 = and i8 %bf.load, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool12.not = icmp eq i8 %13, 0
  br i1 %tobool12.not, label %if.then13, label %list_splice_init.exit.if.end14_crit_edge

list_splice_init.exit.if.end14_crit_edge:         ; preds = %list_splice_init.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end14

if.then13:                                        ; preds = %list_splice_init.exit
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %14 = load volatile i32, ptr @jiffies, align 128
  %15 = load i32, ptr @dirtytime_expire_interval, align 4
  %mul.neg = mul i32 %15, -100
  %sub = add i32 %mul.neg, %14
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %list_splice_init.exit.if.end14_crit_edge
  %time_expire_jif.0 = phi i32 [ %dirtied_before, %list_splice_init.exit.if.end14_crit_edge ], [ %sub, %if.then13 ]
  %b_dirty_time = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 6
  %call16 = tail call fastcc i32 @move_expired_inodes(ptr noundef %b_dirty_time, ptr noundef %b_io, i32 noundef %time_expire_jif.0)
  %add = add i32 %call16, %call11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add)
  %tobool17.not = icmp eq i32 %add, 0
  br i1 %tobool17.not, label %if.end14.if.end20_crit_edge, label %if.then18

if.end14.if.end20_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end20

if.then18:                                        ; preds = %if.end14
  %state.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 1
  %16 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %state.i.i, align 4
  %18 = and i32 %17, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.i.not.i = icmp eq i32 %18, 0
  br i1 %tobool.i.not.i, label %if.else.i, label %if.then18.if.end20_crit_edge

if.then18.if.end20_crit_edge:                     ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end20

if.else.i:                                        ; preds = %if.then18
  tail call void @_set_bit(i32 noundef 2, ptr noundef %state.i.i) #10
  %avg_write_bandwidth.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 15
  %19 = ptrtoint ptr %avg_write_bandwidth.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %avg_write_bandwidth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.not.i = icmp eq i32 %20, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %if.else.i.if.end30.i_crit_edge

if.else.i.if.end30.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end30.i

land.rhs.i:                                       ; preds = %if.else.i
  %.b45.i = load i1, ptr @wb_io_lists_populated.__already_done, align 1
  br i1 %.b45.i, label %land.rhs.i.if.end30.i_crit_edge, label %if.then9.i, !prof !670

land.rhs.i.if.end30.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end30.i

if.then9.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @wb_io_lists_populated.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.8, i32 noundef 91, i32 noundef 9, ptr noundef null) #10
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then9.i, %land.rhs.i.if.end30.i_crit_edge, %if.else.i.if.end30.i_crit_edge
  %21 = ptrtoint ptr %avg_write_bandwidth.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %avg_write_bandwidth.i, align 4
  %23 = ptrtoint ptr %wb to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %wb, align 8
  %tot_write_bandwidth.i = getelementptr inbounds %struct.backing_dev_info, ptr %24, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %tot_write_bandwidth.i, i32 noundef 4) #10
  tail call void @llvm.prefetch.p0(ptr %tot_write_bandwidth.i, i32 1, i32 3, i32 1) #10
  %25 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %tot_write_bandwidth.i, ptr %tot_write_bandwidth.i, i32 %22, ptr elementtype(i32) %tot_write_bandwidth.i) #10, !srcloc !682
  br label %if.end20

if.end20:                                         ; preds = %if.end30.i, %if.then18.if.end20_crit_edge, %if.end14.if.end20_crit_edge
  tail call fastcc void @trace_writeback_queue_io(ptr noundef %wb, ptr noundef %work, i32 noundef %dirtied_before, i32 noundef %add)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @writeback_sb_inodes(ptr noundef readnone %sb, ptr noundef %wb, ptr nocapture noundef %work) unnamed_addr #0 align 64 {
entry:
  %agg.tmp.sroa.0.i.i74.i = alloca i32, align 4
  %agg.tmp.sroa.0.i.i54.i = alloca i32, align 4
  %agg.tmp.sroa.0.i.i.i194 = alloca i32, align 4
  %wait.i = alloca %struct.wait_queue_entry, align 4
  %agg.tmp.sroa.0.i.i = alloca i32, align 4
  %agg.tmp.sroa.0.i.i.i = alloca i32, align 4
  %wbc = alloca %struct.writeback_control, align 8
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %wbc) #10
  %0 = getelementptr inbounds i8, ptr %wbc, i32 24
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 -1, ptr %0, align 8, !annotation !672
  %pages_skipped = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 1
  %range_end = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 3
  %2 = call ptr @memset(ptr %wbc, i32 0, i32 16)
  %3 = ptrtoint ptr %range_end to i32
  call void @__asan_store8_noabort(i32 %3)
  store i64 9223372036854775807, ptr %range_end, align 8
  %sync_mode = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 4
  %sync_mode1 = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 2
  %4 = ptrtoint ptr %sync_mode1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sync_mode1, align 4
  %6 = ptrtoint ptr %sync_mode to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %sync_mode, align 8
  %for_kupdate = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 5
  %for_kupdate2 = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 3
  %7 = ptrtoint ptr %for_kupdate2 to i32
  call void @__asan_load1_noabort(i32 %7)
  %bf.load = load i8, ptr %for_kupdate2, align 4
  %bf.lshr = lshr i8 %bf.load, 6
  %bf.value = zext i8 %bf.lshr to i16
  %bf.shl = shl i16 %bf.value, 15
  %bf.lshr7 = lshr i8 %bf.load, 4
  %8 = and i8 %bf.lshr7, 1
  %bf.value11 = zext i8 %8 to i16
  %bf.shl12 = shl nuw nsw i16 %bf.value11, 14
  %bf.set = or i16 %bf.shl, %bf.shl12
  %bf.lshr17 = lshr i8 %bf.load, 7
  %9 = zext i8 %bf.lshr17 to i16
  %bf.shl21 = shl nuw nsw i16 %9, 13
  %bf.set14 = or i16 %bf.set, %bf.shl21
  %bf.lshr29 = lshr i8 %bf.load, 5
  %10 = and i8 %bf.lshr29, 1
  %bf.value33 = zext i8 %10 to i16
  %bf.shl34 = shl nuw nsw i16 %bf.value33, 11
  %bf.set23 = or i16 %bf.set14, %bf.shl34
  %bf.lshr39 = lshr i8 %bf.load, 3
  %11 = and i8 %bf.lshr39, 1
  %bf.value43 = zext i8 %11 to i16
  %bf.shl44 = shl nuw nsw i16 %bf.value43, 10
  %bf.set36 = or i16 %bf.set23, %bf.shl44
  %bf.set46 = or i16 %bf.set36, 127
  %12 = ptrtoint ptr %for_kupdate to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %bf.set46, ptr %for_kupdate, align 4
  %wb56 = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 6
  %13 = call ptr @memset(ptr %wb56, i32 0, i32 32)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %14 = load volatile i32, ptr @jiffies, align 128
  %b_io = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 4
  %15 = ptrtoint ptr %b_io to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %b_io, align 4
  %cmp.i.not229 = icmp eq ptr %16, %b_io
  br i1 %cmp.i.not229, label %entry.while.end_crit_edge, label %while.body.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %prev = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 4, i32 1
  %sb60 = getelementptr inbounds %struct.wb_writeback_work, ptr %work, i32 0, i32 1
  %b_dirty.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 3
  %b_more_io.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 5
  %list_lock = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 7
  %17 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 1
  %18 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 2
  %19 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 3
  %20 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 3, i32 1
  %avg_write_bandwidth.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 15
  %add120 = add i32 %14, 10
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %wrote.0230 = phi i32 [ 0, %while.body.lr.ph ], [ %wrote.2, %cleanup.while.body_crit_edge ]
  %21 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %prev, align 4
  %add.ptr.i = getelementptr i8, ptr %22, i32 -316
  %i_sb = getelementptr i8, ptr %22, i32 -288
  %23 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %i_sb, align 4
  %cmp.not = icmp eq ptr %24, %sb
  br i1 %cmp.not, label %if.end63, label %if.then

if.then:                                          ; preds = %while.body
  %25 = ptrtoint ptr %sb60 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %sb60, align 4
  %tobool61.not = icmp eq ptr %26, null
  br i1 %tobool61.not, label %if.then.while.end_crit_edge, label %if.then62

if.then.while.end_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.end

if.then62:                                        ; preds = %if.then
  %i_lock.i = getelementptr i8, ptr %22, i32 -204
  call void @_raw_spin_lock(ptr noundef %i_lock.i) #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i.i.i)
  %27 = ptrtoint ptr %i_lock.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %agg.tmp.sroa.0.0.copyload.i.i.i = load volatile i32, ptr %i_lock.i, align 4
  %28 = ptrtoint ptr %agg.tmp.sroa.0.i.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i.i.i, ptr %agg.tmp.sroa.0.i.i.i, align 4
  %lock.sroa.0.0.extract.shift.i.i.i.i = lshr i32 %agg.tmp.sroa.0.0.copyload.i.i.i, 16
  %conv.i.i.i.i = and i32 %agg.tmp.sroa.0.0.copyload.i.i.i, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i.i.i.i, i32 %lock.sroa.0.0.extract.shift.i.i.i.i)
  %cmp.i.i.not.i.i = icmp eq i32 %conv.i.i.i.i, %lock.sroa.0.0.extract.shift.i.i.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i.i.i)
  br i1 %cmp.i.i.not.i.i, label %do.body4.i.i, label %do.end7.i.i, !prof !671

do.body4.i.i:                                     ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #12
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/fs-writeback.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1331, 0\0A.popsection", ""() #10, !srcloc !740
  unreachable

do.end7.i.i:                                      ; preds = %if.then62
  %29 = ptrtoint ptr %b_dirty.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile ptr, ptr %b_dirty.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %30, %b_dirty.i.i
  br i1 %cmp.i.not.i.i, label %do.end7.i.i.redirty_tail.exit_crit_edge, label %if.then10.i.i

do.end7.i.i.redirty_tail.exit_crit_edge:          ; preds = %do.end7.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %redirty_tail.exit

if.then10.i.i:                                    ; preds = %do.end7.i.i
  %dirtied_when.i.i = getelementptr i8, ptr %22, i32 -16
  %31 = ptrtoint ptr %dirtied_when.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %dirtied_when.i.i, align 4
  %dirtied_when13.i.i = getelementptr i8, ptr %30, i32 -16
  %33 = ptrtoint ptr %dirtied_when13.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %dirtied_when13.i.i, align 4
  %sub.i.i = sub i32 %32, %34
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp slt i32 %sub.i.i, 0
  br i1 %cmp.i.i, label %if.then14.i.i, label %if.then10.i.i.redirty_tail.exit_crit_edge

if.then10.i.i.redirty_tail.exit_crit_edge:        ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %redirty_tail.exit

if.then14.i.i:                                    ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %35 = load volatile i32, ptr @jiffies, align 128
  %36 = ptrtoint ptr %dirtied_when.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %dirtied_when.i.i, align 4
  br label %redirty_tail.exit

redirty_tail.exit:                                ; preds = %if.then14.i.i, %if.then10.i.i.redirty_tail.exit_crit_edge, %do.end7.i.i.redirty_tail.exit_crit_edge
  %call19.i.i = call fastcc zeroext i1 @inode_io_list_move_locked(ptr noundef %add.ptr.i, ptr noundef %wb, ptr noundef %b_dirty.i.i) #10
  %i_state.i.i = getelementptr i8, ptr %22, i32 -116
  %37 = ptrtoint ptr %i_state.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %i_state.i.i, align 8
  %and.i.i180 = and i32 %38, -131073
  store i32 %and.i.i180, ptr %i_state.i.i, align 8
  call void @_raw_spin_unlock(ptr noundef %i_lock.i) #10
  br label %cleanup

if.end63:                                         ; preds = %while.body
  %i_lock = getelementptr i8, ptr %22, i32 -204
  call void @_raw_spin_lock(ptr noundef %i_lock) #10
  %i_state = getelementptr i8, ptr %22, i32 -116
  %39 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %i_state, align 8
  %and = and i32 %40, 56
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool64.not = icmp eq i32 %and, 0
  br i1 %tobool64.not, label %if.end67, label %if.then65

if.then65:                                        ; preds = %if.end63
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i.i)
  %41 = ptrtoint ptr %i_lock to i32
  call void @__asan_load4_noabort(i32 %41)
  %agg.tmp.sroa.0.0.copyload.i.i = load volatile i32, ptr %i_lock, align 4
  %42 = ptrtoint ptr %agg.tmp.sroa.0.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i.i, ptr %agg.tmp.sroa.0.i.i, align 4
  %lock.sroa.0.0.extract.shift.i.i.i = lshr i32 %agg.tmp.sroa.0.0.copyload.i.i, 16
  %conv.i.i.i = and i32 %agg.tmp.sroa.0.0.copyload.i.i, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i.i.i, i32 %lock.sroa.0.0.extract.shift.i.i.i)
  %cmp.i.i.not.i = icmp eq i32 %conv.i.i.i, %lock.sroa.0.0.extract.shift.i.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i.i)
  br i1 %cmp.i.i.not.i, label %do.body4.i, label %do.end7.i, !prof !671

do.body4.i:                                       ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #12
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/fs-writeback.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1331, 0\0A.popsection", ""() #10, !srcloc !740
  unreachable

do.end7.i:                                        ; preds = %if.then65
  %43 = ptrtoint ptr %b_dirty.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile ptr, ptr %b_dirty.i.i, align 4
  %cmp.i.not.i = icmp eq ptr %44, %b_dirty.i.i
  br i1 %cmp.i.not.i, label %do.end7.i.redirty_tail_locked.exit_crit_edge, label %if.then10.i

do.end7.i.redirty_tail_locked.exit_crit_edge:     ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %redirty_tail_locked.exit

if.then10.i:                                      ; preds = %do.end7.i
  %dirtied_when.i = getelementptr i8, ptr %22, i32 -16
  %45 = ptrtoint ptr %dirtied_when.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %dirtied_when.i, align 4
  %dirtied_when13.i = getelementptr i8, ptr %44, i32 -16
  %47 = ptrtoint ptr %dirtied_when13.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %dirtied_when13.i, align 4
  %sub.i = sub i32 %46, %48
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp.i182 = icmp slt i32 %sub.i, 0
  br i1 %cmp.i182, label %if.then14.i, label %if.then10.i.redirty_tail_locked.exit_crit_edge

if.then10.i.redirty_tail_locked.exit_crit_edge:   ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %redirty_tail_locked.exit

if.then14.i:                                      ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %49 = load volatile i32, ptr @jiffies, align 128
  %50 = ptrtoint ptr %dirtied_when.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %dirtied_when.i, align 4
  br label %redirty_tail_locked.exit

redirty_tail_locked.exit:                         ; preds = %if.then14.i, %if.then10.i.redirty_tail_locked.exit_crit_edge, %do.end7.i.redirty_tail_locked.exit_crit_edge
  %call19.i = call fastcc zeroext i1 @inode_io_list_move_locked(ptr noundef %add.ptr.i, ptr noundef %wb, ptr noundef %b_dirty.i.i) #10
  %51 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %i_state, align 8
  %and.i = and i32 %52, -131073
  store i32 %and.i, ptr %i_state, align 8
  call void @_raw_spin_unlock(ptr noundef %i_lock) #10
  br label %cleanup

if.end67:                                         ; preds = %if.end63
  %and69 = and i32 %40, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69)
  %tobool70.not = icmp eq i32 %and69, 0
  br i1 %tobool70.not, label %if.end67.if.end75_crit_edge, label %land.lhs.true

if.end67.if.end75_crit_edge:                      ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end75

land.lhs.true:                                    ; preds = %if.end67
  %53 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %sync_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %54)
  %cmp72.not = icmp eq i32 %54, 1
  br i1 %cmp72.not, label %land.lhs.true.if.end75_crit_edge, label %if.then73

land.lhs.true.if.end75_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end75

if.then73:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  call void @_raw_spin_unlock(ptr noundef %i_lock) #10
  %call.i = call fastcc zeroext i1 @inode_io_list_move_locked(ptr noundef %add.ptr.i, ptr noundef %wb, ptr noundef %b_more_io.i) #10
  call fastcc void @trace_writeback_sb_inodes_requeue(ptr noundef %add.ptr.i)
  br label %cleanup

if.end75:                                         ; preds = %land.lhs.true.if.end75_crit_edge, %if.end67.if.end75_crit_edge
  call void @_raw_spin_unlock(ptr noundef %list_lock) #10
  %55 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %i_state, align 8
  %and77 = and i32 %56, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and77)
  %tobool78.not = icmp eq i32 %and77, 0
  br i1 %tobool78.not, label %if.end81, label %if.then79

if.then79:                                        ; preds = %if.end75
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %wait.i) #10
  %57 = ptrtoint ptr %wait.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 0, ptr %wait.i, align 4
  %58 = call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i183 = and i32 %58, -16384
  %59 = inttoptr i32 %and.i.i183 to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %59, i32 0, i32 2
  %60 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %task.i, align 8
  %62 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %61, ptr %17, align 4
  %63 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr @autoremove_wake_function, ptr %18, align 4
  %64 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr %19, ptr %19, align 4
  %65 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %19, ptr %20, align 4
  %call4.i = call ptr @bit_waitqueue(ptr noundef %i_state, i32 noundef 7) #10
  call void @prepare_to_wait(ptr noundef %call4.i, ptr noundef nonnull %wait.i, i32 noundef 2) #10
  %66 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %i_state, align 8
  %and.i185 = and i32 %67, 128
  call void @_raw_spin_unlock(ptr noundef %i_lock) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i185)
  %tobool.not.i = icmp eq i32 %and.i185, 0
  br i1 %tobool.not.i, label %if.then79.inode_sleep_on_writeback.exit_crit_edge, label %if.then.i

if.then79.inode_sleep_on_writeback.exit_crit_edge: ; preds = %if.then79
  call void @__sanitizer_cov_trace_pc() #12
  br label %inode_sleep_on_writeback.exit

if.then.i:                                        ; preds = %if.then79
  call void @__sanitizer_cov_trace_pc() #12
  call void @schedule() #10
  br label %inode_sleep_on_writeback.exit

inode_sleep_on_writeback.exit:                    ; preds = %if.then.i, %if.then79.inode_sleep_on_writeback.exit_crit_edge
  call void @finish_wait(ptr noundef %call4.i, ptr noundef nonnull %wait.i) #10
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %wait.i) #10
  call void @_raw_spin_lock(ptr noundef %list_lock) #10
  br label %cleanup

if.end81:                                         ; preds = %if.end75
  %or = or i32 %56, 128
  %68 = ptrtoint ptr %i_state to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %or, ptr %i_state, align 8
  call void @wbc_attach_and_unlock_inode(ptr noundef nonnull %wbc, ptr noundef %add.ptr.i)
  %69 = ptrtoint ptr %sync_mode1 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %sync_mode1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %70)
  %cmp.i187 = icmp eq i32 %70, 1
  br i1 %cmp.i187, label %if.end81.writeback_chunk_size.exit_crit_edge, label %lor.lhs.false.i

if.end81.writeback_chunk_size.exit_crit_edge:     ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #12
  br label %writeback_chunk_size.exit

lor.lhs.false.i:                                  ; preds = %if.end81
  %71 = ptrtoint ptr %for_kupdate2 to i32
  call void @__asan_load1_noabort(i32 %71)
  %bf.load.i = load i8, ptr %for_kupdate2, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i188 = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i188, label %if.else.i, label %lor.lhs.false.i.writeback_chunk_size.exit_crit_edge

lor.lhs.false.i.writeback_chunk_size.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %writeback_chunk_size.exit

if.else.i:                                        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #12
  %72 = ptrtoint ptr %avg_write_bandwidth.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %avg_write_bandwidth.i, align 4
  %div17.i = lshr i32 %73, 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.wb_domain, ptr @global_wb_domain, i32 0, i32 5) to i32))
  %74 = load i32, ptr getelementptr inbounds (%struct.wb_domain, ptr @global_wb_domain, i32 0, i32 5), align 8
  %div118.i = lshr i32 %74, 3
  %75 = call i32 @llvm.umin.i32(i32 %div17.i, i32 %div118.i) #10
  %76 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %work, align 4
  %78 = call i32 @llvm.smin.i32(i32 %75, i32 %77) #10
  %add.i = add nsw i32 %78, 1024
  %and.i189 = and i32 %add.i, -1024
  br label %writeback_chunk_size.exit

writeback_chunk_size.exit:                        ; preds = %if.else.i, %lor.lhs.false.i.writeback_chunk_size.exit_crit_edge, %if.end81.writeback_chunk_size.exit_crit_edge
  %pages.0.i = phi i32 [ %and.i189, %if.else.i ], [ 2147483647, %lor.lhs.false.i.writeback_chunk_size.exit_crit_edge ], [ 2147483647, %if.end81.writeback_chunk_size.exit_crit_edge ]
  %79 = ptrtoint ptr %wbc to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %pages.0.i, ptr %wbc, align 8
  %80 = ptrtoint ptr %pages_skipped to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 0, ptr %pages_skipped, align 4
  %call86 = call fastcc i32 @__writeback_single_inode(ptr noundef %add.ptr.i, ptr noundef nonnull %wbc)
  call void @wbc_detach_inode(ptr noundef nonnull %wbc)
  %81 = ptrtoint ptr %wbc to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %wbc, align 8
  %sub.neg = sub i32 %82, %pages.0.i
  %83 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %work, align 4
  %sub88 = add i32 %sub.neg, %84
  store i32 %sub88, ptr %work, align 4
  %85 = call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i = and i32 %85, -16384
  %86 = inttoptr i32 %and.i.i to ptr
  %87 = ptrtoint ptr %86 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load volatile i32, ptr %86, align 16384
  %89 = and i32 %88, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %89)
  %tobool.i.not = icmp eq i32 %89, 0
  br i1 %tobool.i.not, label %writeback_chunk_size.exit.if.end101_crit_edge, label %if.then92

writeback_chunk_size.exit.if.end101_crit_edge:    ; preds = %writeback_chunk_size.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end101

if.then92:                                        ; preds = %writeback_chunk_size.exit
  %90 = call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i190 = and i32 %90, -16384
  %91 = inttoptr i32 %and.i190 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %91, i32 0, i32 2
  %92 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %task, align 8
  %plug = getelementptr inbounds %struct.task_struct, ptr %93, i32 0, i32 148
  %94 = ptrtoint ptr %plug to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %plug, align 4
  %tobool94.not = icmp eq ptr %95, null
  br i1 %tobool94.not, label %if.then92.if.end99_crit_edge, label %if.then95

if.then92.if.end99_crit_edge:                     ; preds = %if.then92
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end99

if.then95:                                        ; preds = %if.then92
  call void @__sanitizer_cov_trace_pc() #12
  call void @blk_flush_plug(ptr noundef nonnull %95, i1 noundef zeroext false) #10
  br label %if.end99

if.end99:                                         ; preds = %if.then95, %if.then92.if.end99_crit_edge
  call void @__might_resched(ptr noundef nonnull @.str.8, i32 noundef 1908, i32 noundef 0) #10
  %call.i191 = call i32 @__cond_resched() #10
  br label %if.end101

if.end101:                                        ; preds = %if.end99, %writeback_chunk_size.exit.if.end101_crit_edge
  call void @_raw_spin_lock(ptr noundef %i_lock) #10
  %call.i193 = call fastcc ptr @locked_inode_to_wb_and_lock_list(ptr noundef %add.ptr.i) #10
  call void @_raw_spin_lock(ptr noundef %i_lock) #10
  %96 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %i_state, align 8
  %and105 = and i32 %97, 2055
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and105)
  %tobool106.not = icmp eq i32 %and105, 0
  %inc = zext i1 %tobool106.not to i32
  %sub90 = add i32 %pages.0.i, %wrote.0230
  %add = sub i32 %sub90, %82
  %spec.select = add i32 %add, %inc
  %and.i196 = and i32 %97, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i196)
  %tobool.not.i197 = icmp eq i32 %and.i196, 0
  br i1 %tobool.not.i197, label %if.end.i, label %if.end101.requeue_inode.exit_crit_edge

if.end101.requeue_inode.exit_crit_edge:           ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #12
  br label %requeue_inode.exit

if.end.i:                                         ; preds = %if.end101
  %and2.i = and i32 %97, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool3.not.i = icmp eq i32 %and2.i, 0
  br i1 %tobool3.not.i, label %if.end.i.if.end6.i_crit_edge, label %land.lhs.true.i

if.end.i.if.end6.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end6.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %98 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %sync_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %99)
  %cmp.i199 = icmp eq i32 %99, 1
  br i1 %cmp.i199, label %land.lhs.true.i.if.then5.i_crit_edge, label %lor.lhs.false.i202

land.lhs.true.i.if.then5.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.then5.i

lor.lhs.false.i202:                               ; preds = %land.lhs.true.i
  %100 = ptrtoint ptr %for_kupdate to i32
  call void @__asan_load2_noabort(i32 %100)
  %bf.load.i201 = load i16, ptr %for_kupdate, align 4
  %101 = and i16 %bf.load.i201, 8192
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %101)
  %tobool4.not.i = icmp eq i16 %101, 0
  br i1 %tobool4.not.i, label %lor.lhs.false.i202.if.end6.i_crit_edge, label %lor.lhs.false.i202.if.then5.i_crit_edge

lor.lhs.false.i202.if.then5.i_crit_edge:          ; preds = %lor.lhs.false.i202
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.then5.i

lor.lhs.false.i202.if.end6.i_crit_edge:           ; preds = %lor.lhs.false.i202
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end6.i

if.then5.i:                                       ; preds = %lor.lhs.false.i202.if.then5.i_crit_edge, %land.lhs.true.i.if.then5.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %102 = load volatile i32, ptr @jiffies, align 128
  %dirtied_when.i203 = getelementptr i8, ptr %22, i32 -16
  %103 = ptrtoint ptr %dirtied_when.i203 to i32
  call void @__asan_store4_noabort(i32 %103)
  store i32 %102, ptr %dirtied_when.i203, align 4
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.then5.i, %lor.lhs.false.i202.if.end6.i_crit_edge, %if.end.i.if.end6.i_crit_edge
  %104 = ptrtoint ptr %pages_skipped to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %pages_skipped, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %105)
  %tobool7.not.i = icmp eq i32 %105, 0
  br i1 %tobool7.not.i, label %if.end9.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end6.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i.i.i194)
  %106 = ptrtoint ptr %i_lock to i32
  call void @__asan_load4_noabort(i32 %106)
  %agg.tmp.sroa.0.0.copyload.i.i.i204 = load volatile i32, ptr %i_lock, align 4
  %107 = ptrtoint ptr %agg.tmp.sroa.0.i.i.i194 to i32
  call void @__asan_store4_noabort(i32 %107)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i.i.i204, ptr %agg.tmp.sroa.0.i.i.i194, align 4
  %lock.sroa.0.0.extract.shift.i.i.i.i205 = lshr i32 %agg.tmp.sroa.0.0.copyload.i.i.i204, 16
  %conv.i.i.i.i206 = and i32 %agg.tmp.sroa.0.0.copyload.i.i.i204, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i.i.i.i206, i32 %lock.sroa.0.0.extract.shift.i.i.i.i205)
  %cmp.i.i.not.i.i207 = icmp eq i32 %conv.i.i.i.i206, %lock.sroa.0.0.extract.shift.i.i.i.i205
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i.i.i194)
  br i1 %cmp.i.i.not.i.i207, label %do.body4.i.i208, label %do.end7.i.i211, !prof !671

do.body4.i.i208:                                  ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #12
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/fs-writeback.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1331, 0\0A.popsection", ""() #10, !srcloc !740
  unreachable

do.end7.i.i211:                                   ; preds = %if.then8.i
  %b_dirty.i.i209 = getelementptr inbounds %struct.bdi_writeback, ptr %call.i193, i32 0, i32 3
  %108 = ptrtoint ptr %b_dirty.i.i209 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load volatile ptr, ptr %b_dirty.i.i209, align 4
  %cmp.i.not.i.i210 = icmp eq ptr %109, %b_dirty.i.i209
  br i1 %cmp.i.not.i.i210, label %do.end7.i.i211.redirty_tail_locked.exit.i_crit_edge, label %if.then10.i.i216

do.end7.i.i211.redirty_tail_locked.exit.i_crit_edge: ; preds = %do.end7.i.i211
  call void @__sanitizer_cov_trace_pc() #12
  br label %redirty_tail_locked.exit.i

if.then10.i.i216:                                 ; preds = %do.end7.i.i211
  %dirtied_when.i.i212 = getelementptr i8, ptr %22, i32 -16
  %110 = ptrtoint ptr %dirtied_when.i.i212 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %dirtied_when.i.i212, align 4
  %dirtied_when13.i.i213 = getelementptr i8, ptr %109, i32 -16
  %112 = ptrtoint ptr %dirtied_when13.i.i213 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %dirtied_when13.i.i213, align 4
  %sub.i.i214 = sub i32 %111, %113
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i214)
  %cmp.i.i215 = icmp slt i32 %sub.i.i214, 0
  br i1 %cmp.i.i215, label %if.then14.i.i217, label %if.then10.i.i216.redirty_tail_locked.exit.i_crit_edge

if.then10.i.i216.redirty_tail_locked.exit.i_crit_edge: ; preds = %if.then10.i.i216
  call void @__sanitizer_cov_trace_pc() #12
  br label %redirty_tail_locked.exit.i

if.then14.i.i217:                                 ; preds = %if.then10.i.i216
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %114 = load volatile i32, ptr @jiffies, align 128
  %115 = ptrtoint ptr %dirtied_when.i.i212 to i32
  call void @__asan_store4_noabort(i32 %115)
  store i32 %114, ptr %dirtied_when.i.i212, align 4
  br label %redirty_tail_locked.exit.i

redirty_tail_locked.exit.i:                       ; preds = %if.then14.i.i217, %if.then10.i.i216.redirty_tail_locked.exit.i_crit_edge, %do.end7.i.i211.redirty_tail_locked.exit.i_crit_edge
  %call19.i.i218 = call fastcc zeroext i1 @inode_io_list_move_locked(ptr noundef %add.ptr.i, ptr noundef %call.i193, ptr noundef %b_dirty.i.i209) #10
  %116 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %i_state, align 8
  %and.i.i219 = and i32 %117, -131073
  store i32 %and.i.i219, ptr %i_state, align 8
  br label %requeue_inode.exit

if.end9.i:                                        ; preds = %if.end6.i
  %i_mapping.i = getelementptr i8, ptr %22, i32 -284
  %118 = ptrtoint ptr %i_mapping.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %i_mapping.i, align 8
  %xa_flags.i.i.i = getelementptr inbounds %struct.address_space, ptr %119, i32 0, i32 1, i32 1
  %120 = ptrtoint ptr %xa_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %xa_flags.i.i.i, align 4
  %and.i.i.i = and i32 %121, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.i.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.i.not.i, label %if.else14.i, label %if.then10.i220

if.then10.i220:                                   ; preds = %if.end9.i
  %122 = ptrtoint ptr %wbc to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %wbc, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %123)
  %cmp11.i = icmp slt i32 %123, 1
  br i1 %cmp11.i, label %if.then12.i, label %if.else.i221

if.then12.i:                                      ; preds = %if.then10.i220
  call void @__sanitizer_cov_trace_pc() #12
  %b_more_io.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %call.i193, i32 0, i32 5
  %call.i.i = call fastcc zeroext i1 @inode_io_list_move_locked(ptr noundef %add.ptr.i, ptr noundef %call.i193, ptr noundef %b_more_io.i.i) #10
  br label %requeue_inode.exit

if.else.i221:                                     ; preds = %if.then10.i220
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i.i54.i)
  %124 = ptrtoint ptr %i_lock to i32
  call void @__asan_load4_noabort(i32 %124)
  %agg.tmp.sroa.0.0.copyload.i.i56.i = load volatile i32, ptr %i_lock, align 4
  %125 = ptrtoint ptr %agg.tmp.sroa.0.i.i54.i to i32
  call void @__asan_store4_noabort(i32 %125)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i.i56.i, ptr %agg.tmp.sroa.0.i.i54.i, align 4
  %lock.sroa.0.0.extract.shift.i.i.i57.i = lshr i32 %agg.tmp.sroa.0.0.copyload.i.i56.i, 16
  %conv.i.i.i58.i = and i32 %agg.tmp.sroa.0.0.copyload.i.i56.i, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i.i.i58.i, i32 %lock.sroa.0.0.extract.shift.i.i.i57.i)
  %cmp.i.i.not.i59.i = icmp eq i32 %conv.i.i.i58.i, %lock.sroa.0.0.extract.shift.i.i.i57.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i.i54.i)
  br i1 %cmp.i.i.not.i59.i, label %do.body4.i60.i, label %do.end7.i63.i, !prof !671

do.body4.i60.i:                                   ; preds = %if.else.i221
  call void @__sanitizer_cov_trace_pc() #12
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/fs-writeback.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1331, 0\0A.popsection", ""() #10, !srcloc !740
  unreachable

do.end7.i63.i:                                    ; preds = %if.else.i221
  %b_dirty.i61.i = getelementptr inbounds %struct.bdi_writeback, ptr %call.i193, i32 0, i32 3
  %126 = ptrtoint ptr %b_dirty.i61.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load volatile ptr, ptr %b_dirty.i61.i, align 4
  %cmp.i.not.i62.i = icmp eq ptr %127, %b_dirty.i61.i
  br i1 %cmp.i.not.i62.i, label %do.end7.i63.i.redirty_tail_locked.exit73.i_crit_edge, label %if.then10.i68.i

do.end7.i63.i.redirty_tail_locked.exit73.i_crit_edge: ; preds = %do.end7.i63.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %redirty_tail_locked.exit73.i

if.then10.i68.i:                                  ; preds = %do.end7.i63.i
  %dirtied_when.i64.i = getelementptr i8, ptr %22, i32 -16
  %128 = ptrtoint ptr %dirtied_when.i64.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %dirtied_when.i64.i, align 4
  %dirtied_when13.i65.i = getelementptr i8, ptr %127, i32 -16
  %130 = ptrtoint ptr %dirtied_when13.i65.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %dirtied_when13.i65.i, align 4
  %sub.i66.i = sub i32 %129, %131
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i66.i)
  %cmp.i67.i = icmp slt i32 %sub.i66.i, 0
  br i1 %cmp.i67.i, label %if.then14.i69.i, label %if.then10.i68.i.redirty_tail_locked.exit73.i_crit_edge

if.then10.i68.i.redirty_tail_locked.exit73.i_crit_edge: ; preds = %if.then10.i68.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %redirty_tail_locked.exit73.i

if.then14.i69.i:                                  ; preds = %if.then10.i68.i
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %132 = load volatile i32, ptr @jiffies, align 128
  %133 = ptrtoint ptr %dirtied_when.i64.i to i32
  call void @__asan_store4_noabort(i32 %133)
  store i32 %132, ptr %dirtied_when.i64.i, align 4
  br label %redirty_tail_locked.exit73.i

redirty_tail_locked.exit73.i:                     ; preds = %if.then14.i69.i, %if.then10.i68.i.redirty_tail_locked.exit73.i_crit_edge, %do.end7.i63.i.redirty_tail_locked.exit73.i_crit_edge
  %call19.i70.i = call fastcc zeroext i1 @inode_io_list_move_locked(ptr noundef %add.ptr.i, ptr noundef %call.i193, ptr noundef %b_dirty.i61.i) #10
  %134 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %i_state, align 8
  %and.i72.i = and i32 %135, -131073
  store i32 %and.i72.i, ptr %i_state, align 8
  br label %requeue_inode.exit

if.else14.i:                                      ; preds = %if.end9.i
  br i1 %tobool3.not.i, label %if.else19.i, label %if.then18.i

if.then18.i:                                      ; preds = %if.else14.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i.i74.i)
  %136 = ptrtoint ptr %i_lock to i32
  call void @__asan_load4_noabort(i32 %136)
  %agg.tmp.sroa.0.0.copyload.i.i76.i = load volatile i32, ptr %i_lock, align 4
  %137 = ptrtoint ptr %agg.tmp.sroa.0.i.i74.i to i32
  call void @__asan_store4_noabort(i32 %137)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i.i76.i, ptr %agg.tmp.sroa.0.i.i74.i, align 4
  %lock.sroa.0.0.extract.shift.i.i.i77.i = lshr i32 %agg.tmp.sroa.0.0.copyload.i.i76.i, 16
  %conv.i.i.i78.i = and i32 %agg.tmp.sroa.0.0.copyload.i.i76.i, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i.i.i78.i, i32 %lock.sroa.0.0.extract.shift.i.i.i77.i)
  %cmp.i.i.not.i79.i = icmp eq i32 %conv.i.i.i78.i, %lock.sroa.0.0.extract.shift.i.i.i77.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i.i74.i)
  br i1 %cmp.i.i.not.i79.i, label %do.body4.i80.i, label %do.end7.i83.i, !prof !671

do.body4.i80.i:                                   ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #12
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/fs-writeback.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1331, 0\0A.popsection", ""() #10, !srcloc !740
  unreachable

do.end7.i83.i:                                    ; preds = %if.then18.i
  %b_dirty.i81.i = getelementptr inbounds %struct.bdi_writeback, ptr %call.i193, i32 0, i32 3
  %138 = ptrtoint ptr %b_dirty.i81.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load volatile ptr, ptr %b_dirty.i81.i, align 4
  %cmp.i.not.i82.i = icmp eq ptr %139, %b_dirty.i81.i
  br i1 %cmp.i.not.i82.i, label %do.end7.i83.i.redirty_tail_locked.exit93.i_crit_edge, label %if.then10.i88.i

do.end7.i83.i.redirty_tail_locked.exit93.i_crit_edge: ; preds = %do.end7.i83.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %redirty_tail_locked.exit93.i

if.then10.i88.i:                                  ; preds = %do.end7.i83.i
  %dirtied_when.i84.i = getelementptr i8, ptr %22, i32 -16
  %140 = ptrtoint ptr %dirtied_when.i84.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %dirtied_when.i84.i, align 4
  %dirtied_when13.i85.i = getelementptr i8, ptr %139, i32 -16
  %142 = ptrtoint ptr %dirtied_when13.i85.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %dirtied_when13.i85.i, align 4
  %sub.i86.i = sub i32 %141, %143
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i86.i)
  %cmp.i87.i = icmp slt i32 %sub.i86.i, 0
  br i1 %cmp.i87.i, label %if.then14.i89.i, label %if.then10.i88.i.redirty_tail_locked.exit93.i_crit_edge

if.then10.i88.i.redirty_tail_locked.exit93.i_crit_edge: ; preds = %if.then10.i88.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %redirty_tail_locked.exit93.i

if.then14.i89.i:                                  ; preds = %if.then10.i88.i
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %144 = load volatile i32, ptr @jiffies, align 128
  %145 = ptrtoint ptr %dirtied_when.i84.i to i32
  call void @__asan_store4_noabort(i32 %145)
  store i32 %144, ptr %dirtied_when.i84.i, align 4
  br label %redirty_tail_locked.exit93.i

redirty_tail_locked.exit93.i:                     ; preds = %if.then14.i89.i, %if.then10.i88.i.redirty_tail_locked.exit93.i_crit_edge, %do.end7.i83.i.redirty_tail_locked.exit93.i_crit_edge
  %call19.i90.i = call fastcc zeroext i1 @inode_io_list_move_locked(ptr noundef %add.ptr.i, ptr noundef %call.i193, ptr noundef %b_dirty.i81.i) #10
  %146 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %i_state, align 8
  %and.i92.i = and i32 %147, -131073
  store i32 %and.i92.i, ptr %i_state, align 8
  br label %requeue_inode.exit

if.else19.i:                                      ; preds = %if.else14.i
  %and21.i = and i32 %97, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i)
  %tobool22.not.i = icmp eq i32 %and21.i, 0
  br i1 %tobool22.not.i, label %if.else28.i, label %if.then23.i

if.then23.i:                                      ; preds = %if.else19.i
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %148 = load volatile i32, ptr @jiffies, align 128
  %dirtied_when24.i = getelementptr i8, ptr %22, i32 -16
  %149 = ptrtoint ptr %dirtied_when24.i to i32
  call void @__asan_store4_noabort(i32 %149)
  store i32 %148, ptr %dirtied_when24.i, align 4
  %b_dirty_time.i = getelementptr inbounds %struct.bdi_writeback, ptr %call.i193, i32 0, i32 6
  %call25.i = call fastcc zeroext i1 @inode_io_list_move_locked(ptr noundef %add.ptr.i, ptr noundef %call.i193, ptr noundef %b_dirty_time.i) #10
  %150 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %i_state, align 8
  %and27.i = and i32 %151, -131073
  store i32 %and27.i, ptr %i_state, align 8
  br label %requeue_inode.exit

if.else28.i:                                      ; preds = %if.else19.i
  call void @__sanitizer_cov_trace_pc() #12
  call fastcc void @inode_cgwb_move_to_attached(ptr noundef %add.ptr.i, ptr noundef %call.i193) #10
  br label %requeue_inode.exit

requeue_inode.exit:                               ; preds = %if.else28.i, %if.then23.i, %redirty_tail_locked.exit93.i, %redirty_tail_locked.exit73.i, %if.then12.i, %redirty_tail_locked.exit.i, %if.end101.requeue_inode.exit_crit_edge
  %152 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %i_state, align 8
  %and.i223 = and i32 %153, -129
  store i32 %and.i223, ptr %i_state, align 8
  call void @inode_add_lru(ptr noundef %add.ptr.i) #10
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !724
  call void @wake_up_bit(ptr noundef %i_state, i32 noundef 7) #10
  call void @_raw_spin_unlock(ptr noundef %i_lock) #10
  %cmp110.not = icmp eq ptr %call.i193, %wb
  br i1 %cmp110.not, label %requeue_inode.exit.if.end117_crit_edge, label %if.then114, !prof !670

requeue_inode.exit.if.end117_crit_edge:           ; preds = %requeue_inode.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end117

if.then114:                                       ; preds = %requeue_inode.exit
  call void @__sanitizer_cov_trace_pc() #12
  %list_lock115 = getelementptr inbounds %struct.bdi_writeback, ptr %call.i193, i32 0, i32 7
  call void @_raw_spin_unlock(ptr noundef %list_lock115) #10
  call void @_raw_spin_lock(ptr noundef %list_lock) #10
  br label %if.end117

if.end117:                                        ; preds = %if.then114, %requeue_inode.exit.if.end117_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select)
  %tobool118.not = icmp eq i32 %spec.select, 0
  br i1 %tobool118.not, label %if.end117.cleanup_crit_edge, label %if.then119

if.end117.cleanup_crit_edge:                      ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.then119:                                       ; preds = %if.end117
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %154 = load volatile i32, ptr @jiffies, align 128
  %sub121 = sub i32 %add120, %154
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub121)
  %cmp122 = icmp slt i32 %sub121, 0
  br i1 %cmp122, label %if.then119.while.end_crit_edge, label %if.end124

if.then119.while.end_crit_edge:                   ; preds = %if.then119
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.end

if.end124:                                        ; preds = %if.then119
  %155 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %work, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %156)
  %cmp126 = icmp slt i32 %156, 1
  br i1 %cmp126, label %if.end124.while.end_crit_edge, label %if.end124.cleanup_crit_edge

if.end124.cleanup_crit_edge:                      ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end124.while.end_crit_edge:                    ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.end

cleanup:                                          ; preds = %if.end124.cleanup_crit_edge, %if.end117.cleanup_crit_edge, %inode_sleep_on_writeback.exit, %if.then73, %redirty_tail_locked.exit, %redirty_tail.exit
  %wrote.2 = phi i32 [ %wrote.0230, %redirty_tail.exit ], [ %wrote.0230, %redirty_tail_locked.exit ], [ %wrote.0230, %if.then73 ], [ %wrote.0230, %inode_sleep_on_writeback.exit ], [ %spec.select, %if.end124.cleanup_crit_edge ], [ 0, %if.end117.cleanup_crit_edge ]
  %157 = ptrtoint ptr %b_io to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load volatile ptr, ptr %b_io, align 4
  %cmp.i.not = icmp eq ptr %158, %b_io
  br i1 %cmp.i.not, label %cleanup.while.end_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.body

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.end

while.end:                                        ; preds = %cleanup.while.end_crit_edge, %if.end124.while.end_crit_edge, %if.then119.while.end_crit_edge, %if.then.while.end_crit_edge, %entry.while.end_crit_edge
  %wrote.3 = phi i32 [ 0, %entry.while.end_crit_edge ], [ %spec.select, %if.end124.while.end_crit_edge ], [ %spec.select, %if.then119.while.end_crit_edge ], [ %wrote.0230, %if.then.while.end_crit_edge ], [ %wrote.2, %cleanup.while.end_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %wbc) #10
  ret i32 %wrote.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__writeback_inodes_wb(ptr noundef %wb, ptr nocapture noundef %work) unnamed_addr #0 align 64 {
entry:
  %agg.tmp.sroa.0.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %0 = load volatile i32, ptr @jiffies, align 128
  %b_io = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 4
  %1 = ptrtoint ptr %b_io to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %b_io, align 4
  %cmp.i.not30 = icmp eq ptr %2, %b_io
  br i1 %cmp.i.not30, label %entry.while.end_crit_edge, label %while.body.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %prev = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 4, i32 1
  %b_dirty.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %wb, i32 0, i32 3
  %add7 = add i32 %0, 10
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %wrote.031 = phi i32 [ 0, %while.body.lr.ph ], [ %wrote.1, %cleanup.while.body_crit_edge ]
  %3 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %prev, align 4
  %add.ptr.i = getelementptr i8, ptr %4, i32 -316
  %i_sb = getelementptr i8, ptr %4, i32 -288
  %5 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %i_sb, align 4
  %call3 = tail call zeroext i1 @trylock_super(ptr noundef %6) #10
  br i1 %call3, label %if.end, label %if.then

if.then:                                          ; preds = %while.body
  %i_lock.i = getelementptr i8, ptr %4, i32 -204
  tail call void @_raw_spin_lock(ptr noundef %i_lock.i) #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i.i.i)
  %7 = ptrtoint ptr %i_lock.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %agg.tmp.sroa.0.0.copyload.i.i.i = load volatile i32, ptr %i_lock.i, align 4
  %8 = ptrtoint ptr %agg.tmp.sroa.0.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i.i.i, ptr %agg.tmp.sroa.0.i.i.i, align 4
  %lock.sroa.0.0.extract.shift.i.i.i.i = lshr i32 %agg.tmp.sroa.0.0.copyload.i.i.i, 16
  %conv.i.i.i.i = and i32 %agg.tmp.sroa.0.0.copyload.i.i.i, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i.i.i.i, i32 %lock.sroa.0.0.extract.shift.i.i.i.i)
  %cmp.i.i.not.i.i = icmp eq i32 %conv.i.i.i.i, %lock.sroa.0.0.extract.shift.i.i.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i.i.i)
  br i1 %cmp.i.i.not.i.i, label %do.body4.i.i, label %do.end7.i.i, !prof !671

do.body4.i.i:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/fs-writeback.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1331, 0\0A.popsection", ""() #10, !srcloc !740
  unreachable

do.end7.i.i:                                      ; preds = %if.then
  %9 = ptrtoint ptr %b_dirty.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile ptr, ptr %b_dirty.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %10, %b_dirty.i.i
  br i1 %cmp.i.not.i.i, label %do.end7.i.i.redirty_tail.exit_crit_edge, label %if.then10.i.i

do.end7.i.i.redirty_tail.exit_crit_edge:          ; preds = %do.end7.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %redirty_tail.exit

if.then10.i.i:                                    ; preds = %do.end7.i.i
  %dirtied_when.i.i = getelementptr i8, ptr %4, i32 -16
  %11 = ptrtoint ptr %dirtied_when.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %dirtied_when.i.i, align 4
  %dirtied_when13.i.i = getelementptr i8, ptr %10, i32 -16
  %13 = ptrtoint ptr %dirtied_when13.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %dirtied_when13.i.i, align 4
  %sub.i.i = sub i32 %12, %14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp slt i32 %sub.i.i, 0
  br i1 %cmp.i.i, label %if.then14.i.i, label %if.then10.i.i.redirty_tail.exit_crit_edge

if.then10.i.i.redirty_tail.exit_crit_edge:        ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %redirty_tail.exit

if.then14.i.i:                                    ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %15 = load volatile i32, ptr @jiffies, align 128
  %16 = ptrtoint ptr %dirtied_when.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %dirtied_when.i.i, align 4
  br label %redirty_tail.exit

redirty_tail.exit:                                ; preds = %if.then14.i.i, %if.then10.i.i.redirty_tail.exit_crit_edge, %do.end7.i.i.redirty_tail.exit_crit_edge
  %call19.i.i = tail call fastcc zeroext i1 @inode_io_list_move_locked(ptr noundef %add.ptr.i, ptr noundef %wb, ptr noundef %b_dirty.i.i) #10
  %i_state.i.i = getelementptr i8, ptr %4, i32 -116
  %17 = ptrtoint ptr %i_state.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %i_state.i.i, align 8
  %and.i.i = and i32 %18, -131073
  store i32 %and.i.i, ptr %i_state.i.i, align 8
  tail call void @_raw_spin_unlock(ptr noundef %i_lock.i) #10
  br label %cleanup

if.end:                                           ; preds = %while.body
  %call4 = tail call fastcc i32 @writeback_sb_inodes(ptr noundef %6, ptr noundef %wb, ptr noundef %work)
  %add = add i32 %call4, %wrote.031
  %s_umount = getelementptr inbounds %struct.super_block, ptr %6, i32 0, i32 14
  tail call void @up_read(ptr noundef %s_umount) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add)
  %tobool5.not = icmp eq i32 %add, 0
  br i1 %tobool5.not, label %if.end.cleanup_crit_edge, label %if.then6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.then6:                                         ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %19 = load volatile i32, ptr @jiffies, align 128
  %sub = sub i32 %add7, %19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp = icmp slt i32 %sub, 0
  br i1 %cmp, label %if.then6.while.end_crit_edge, label %if.end9

if.then6.while.end_crit_edge:                     ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.end

if.end9:                                          ; preds = %if.then6
  %20 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %work, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %21)
  %cmp10 = icmp slt i32 %21, 1
  br i1 %cmp10, label %if.end9.while.end_crit_edge, label %if.end9.cleanup_crit_edge

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #12
  br label %cleanup

if.end9.while.end_crit_edge:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.end

cleanup:                                          ; preds = %if.end9.cleanup_crit_edge, %if.end.cleanup_crit_edge, %redirty_tail.exit
  %wrote.1 = phi i32 [ %wrote.031, %redirty_tail.exit ], [ %add, %if.end9.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ]
  %22 = ptrtoint ptr %b_io to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %b_io, align 4
  %cmp.i.not = icmp eq ptr %23, %b_io
  br i1 %cmp.i.not, label %cleanup.while.end_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.body

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.end

while.end:                                        ; preds = %cleanup.while.end_crit_edge, %if.end9.while.end_crit_edge, %if.then6.while.end_crit_edge, %entry.while.end_crit_edge
  %wrote.2 = phi i32 [ 0, %entry.while.end_crit_edge ], [ %add, %if.end9.while.end_crit_edge ], [ %add, %if.then6.while.end_crit_edge ], [ %wrote.1, %cleanup.while.end_crit_edge ]
  ret i32 %wrote.2
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_writeback_written(ptr noundef %wb, ptr noundef %work) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_written, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_writeback_written, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !741
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_written, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %wb, ptr noundef %work) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !742
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !742
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_written, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_writeback_written.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_writeback_written.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 392, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_writeback_wait(ptr noundef %wb, ptr noundef %work) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_wait, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_writeback_wait, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !743
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_wait, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %wb, ptr noundef %work) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !744
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !744
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_wait, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_writeback_wait.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_writeback_wait.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 393, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_finish_plug(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__msecs_to_jiffies(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @move_expired_inodes(ptr noundef %delaying_queue, ptr noundef %dispatch_queue, i32 noundef %dirtied_before) unnamed_addr #0 align 64 {
entry:
  %tmp = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp) #10
  %0 = getelementptr inbounds %struct.list_head, ptr %tmp, i32 0, i32 1
  %1 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %tmp, ptr %tmp, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %tmp, ptr %0, align 4
  %prev1 = getelementptr inbounds %struct.list_head, ptr %delaying_queue, i32 0, i32 1
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.end7, %entry
  %sb.0.ph = phi ptr [ %25, %if.end7 ], [ null, %entry ]
  %do_sb_sort.0.ph = phi i32 [ %do_sb_sort.1, %if.end7 ], [ 0, %entry ]
  %moved.0.ph = phi i32 [ %inc, %if.end7 ], [ 0, %entry ]
  br label %while.cond

while.cond:                                       ; preds = %list_move.exit.while.cond_crit_edge, %while.cond.outer
  %moved.0 = phi i32 [ %inc, %list_move.exit.while.cond_crit_edge ], [ %moved.0.ph, %while.cond.outer ]
  %3 = ptrtoint ptr %delaying_queue to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %delaying_queue, align 4
  %cmp.i.not = icmp eq ptr %4, %delaying_queue
  br i1 %cmp.i.not, label %while.cond.while.end_crit_edge, label %while.body

while.cond.while.end_crit_edge:                   ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.end

while.body:                                       ; preds = %while.cond
  %5 = ptrtoint ptr %prev1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %prev1, align 4
  %dirtied_when.i = getelementptr i8, ptr %6, i32 -16
  %7 = ptrtoint ptr %dirtied_when.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %dirtied_when.i, align 4
  %sub.i = sub i32 %dirtied_before, %8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp.i54 = icmp slt i32 %sub.i, 0
  br i1 %cmp.i54, label %inode_dirtied_after.exit, label %while.body.if.end_crit_edge

while.body.if.end_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

inode_dirtied_after.exit:                         ; preds = %while.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %9 = load volatile i32, ptr @jiffies, align 128
  %sub2.i = sub i32 %9, %8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub2.i)
  %cmp3.i = icmp sgt i32 %sub2.i, -1
  br i1 %cmp3.i, label %inode_dirtied_after.exit.while.end_crit_edge, label %inode_dirtied_after.exit.if.end_crit_edge

inode_dirtied_after.exit.if.end_crit_edge:        ; preds = %inode_dirtied_after.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

inode_dirtied_after.exit.while.end_crit_edge:     ; preds = %inode_dirtied_after.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.end

if.end:                                           ; preds = %inode_dirtied_after.exit.if.end_crit_edge, %while.body.if.end_crit_edge
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %6) #10
  br i1 %call.i.i, label %if.end.i.i, label %if.end.__list_del_entry.exit.i_crit_edge

if.end.__list_del_entry.exit.i_crit_edge:         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %__list_del_entry.exit.i

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %10 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %prev.i.i, align 4
  %12 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %6, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %11, ptr %prev1.i.i.i, align 4
  %15 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %13, ptr %11, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i, %if.end.__list_del_entry.exit.i_crit_edge
  %16 = ptrtoint ptr %tmp to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %tmp, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %6, ptr noundef nonnull %tmp, ptr noundef %17) #10
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.list_move.exit_crit_edge

__list_del_entry.exit.i.list_move.exit_crit_edge: ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %list_move.exit

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #12
  %prev1.i.i2.i = getelementptr inbounds %struct.list_head, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %prev1.i.i2.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %6, ptr %prev1.i.i2.i, align 4
  %19 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %17, ptr %6, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %20 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %tmp, ptr %prev3.i.i.i, align 4
  %21 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %6, ptr %tmp, align 4
  br label %list_move.exit

list_move.exit:                                   ; preds = %if.end.i.i.i, %__list_del_entry.exit.i.list_move.exit_crit_edge
  %inc = add i32 %moved.0, 1
  %i_lock = getelementptr i8, ptr %6, i32 -204
  call void @_raw_spin_lock(ptr noundef %i_lock) #10
  %i_state = getelementptr i8, ptr %6, i32 -116
  %22 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %i_state, align 8
  %or = or i32 %23, 131072
  store i32 %or, ptr %i_state, align 8
  call void @_raw_spin_unlock(ptr noundef %i_lock) #10
  %i_sb = getelementptr i8, ptr %6, i32 -288
  %24 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %i_sb, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @blockdev_superblock to i32))
  %26 = load ptr, ptr @blockdev_superblock, align 4
  %cmp.i55 = icmp eq ptr %26, %25
  br i1 %cmp.i55, label %list_move.exit.while.cond_crit_edge, label %if.end7

list_move.exit.while.cond_crit_edge:              ; preds = %list_move.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.cond

if.end7:                                          ; preds = %list_move.exit
  call void @__sanitizer_cov_trace_pc() #12
  %tobool8.not = icmp eq ptr %sb.0.ph, null
  %cmp.not = icmp eq ptr %sb.0.ph, %25
  %27 = select i1 %tobool8.not, i1 true, i1 %cmp.not
  %do_sb_sort.1 = select i1 %27, i32 %do_sb_sort.0.ph, i32 1
  br label %while.cond.outer

while.end:                                        ; preds = %inode_dirtied_after.exit.while.end_crit_edge, %while.cond.while.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %do_sb_sort.0.ph)
  %tobool13.not = icmp eq i32 %do_sb_sort.0.ph, 0
  %28 = ptrtoint ptr %tmp to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile ptr, ptr %tmp, align 4
  %cmp.i.not.i = icmp eq ptr %29, %tmp
  br i1 %tobool13.not, label %if.then14, label %while.cond16.preheader

while.cond16.preheader:                           ; preds = %while.end
  br i1 %cmp.i.not.i, label %while.cond16.preheader.out_crit_edge, label %while.cond16.preheader.while.body20_crit_edge

while.cond16.preheader.while.body20_crit_edge:    ; preds = %while.cond16.preheader
  br label %while.body20

while.cond16.preheader.out_crit_edge:             ; preds = %while.cond16.preheader
  call void @__sanitizer_cov_trace_pc() #12
  br label %out

if.then14:                                        ; preds = %while.end
  br i1 %cmp.i.not.i, label %if.then14.out_crit_edge, label %if.then.i

if.then14.out_crit_edge:                          ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #12
  br label %out

if.then.i:                                        ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #12
  %30 = ptrtoint ptr %dispatch_queue to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %dispatch_queue, align 4
  %32 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %0, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %29, i32 0, i32 1
  %34 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %dispatch_queue, ptr %prev3.i.i, align 4
  store ptr %29, ptr %dispatch_queue, align 4
  %35 = ptrtoint ptr %33 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %31, ptr %33, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 1
  %36 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %33, ptr %prev6.i.i, align 4
  br label %out

while.cond16.loopexit:                            ; preds = %for.inc.while.cond16.loopexit_crit_edge, %while.body20.while.cond16.loopexit_crit_edge
  %37 = ptrtoint ptr %tmp to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile ptr, ptr %tmp, align 4
  %cmp.i56.not = icmp eq ptr %38, %tmp
  br i1 %cmp.i56.not, label %while.cond16.loopexit.out_crit_edge, label %while.cond16.loopexit.while.body20_crit_edge

while.cond16.loopexit.while.body20_crit_edge:     ; preds = %while.cond16.loopexit
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.body20

while.cond16.loopexit.out_crit_edge:              ; preds = %while.cond16.loopexit
  call void @__sanitizer_cov_trace_pc() #12
  br label %out

while.body20:                                     ; preds = %while.cond16.loopexit.while.body20_crit_edge, %while.cond16.preheader.while.body20_crit_edge
  %39 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %0, align 4
  %i_sb23 = getelementptr i8, ptr %40, i32 -288
  %41 = ptrtoint ptr %i_sb23 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %i_sb23, align 4
  %cmp.i59.not75 = icmp eq ptr %40, %tmp
  br i1 %cmp.i59.not75, label %while.body20.while.cond16.loopexit_crit_edge, label %while.body20.for.body_crit_edge

while.body20.for.body_crit_edge:                  ; preds = %while.body20
  br label %for.body

while.body20.while.cond16.loopexit_crit_edge:     ; preds = %while.body20
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.cond16.loopexit

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %while.body20.for.body_crit_edge
  %pos.076 = phi ptr [ %node.078, %for.inc.for.body_crit_edge ], [ %40, %while.body20.for.body_crit_edge ]
  %node.078.in = getelementptr inbounds %struct.list_head, ptr %pos.076, i32 0, i32 1
  %43 = ptrtoint ptr %node.078.in to i32
  call void @__asan_load4_noabort(i32 %43)
  %node.078 = load ptr, ptr %node.078.in, align 4
  %i_sb30 = getelementptr i8, ptr %pos.076, i32 -288
  %44 = ptrtoint ptr %i_sb30 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %i_sb30, align 4
  %cmp31 = icmp eq ptr %45, %42
  br i1 %cmp31, label %if.then32, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.inc

if.then32:                                        ; preds = %for.body
  %call.i.i62 = call zeroext i1 @__list_del_entry_valid(ptr noundef %pos.076) #10
  br i1 %call.i.i62, label %if.end.i.i65, label %if.then32.__list_del_entry.exit.i67_crit_edge

if.then32.__list_del_entry.exit.i67_crit_edge:    ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #12
  br label %__list_del_entry.exit.i67

if.end.i.i65:                                     ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #12
  %46 = ptrtoint ptr %node.078.in to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %node.078.in, align 4
  %48 = ptrtoint ptr %pos.076 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %pos.076, align 4
  %prev1.i.i.i64 = getelementptr inbounds %struct.list_head, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %prev1.i.i.i64 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %47, ptr %prev1.i.i.i64, align 4
  %51 = ptrtoint ptr %47 to i32
  call void @__asan_store4_noabort(i32 %51)
  store volatile ptr %49, ptr %47, align 4
  br label %__list_del_entry.exit.i67

__list_del_entry.exit.i67:                        ; preds = %if.end.i.i65, %if.then32.__list_del_entry.exit.i67_crit_edge
  %52 = ptrtoint ptr %dispatch_queue to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %dispatch_queue, align 4
  %call.i.i.i66 = call zeroext i1 @__list_add_valid(ptr noundef %pos.076, ptr noundef %dispatch_queue, ptr noundef %53) #10
  br i1 %call.i.i.i66, label %if.end.i.i.i70, label %__list_del_entry.exit.i67.for.inc_crit_edge

__list_del_entry.exit.i67.for.inc_crit_edge:      ; preds = %__list_del_entry.exit.i67
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.inc

if.end.i.i.i70:                                   ; preds = %__list_del_entry.exit.i67
  call void @__sanitizer_cov_trace_pc() #12
  %prev1.i.i2.i68 = getelementptr inbounds %struct.list_head, ptr %53, i32 0, i32 1
  %54 = ptrtoint ptr %prev1.i.i2.i68 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %pos.076, ptr %prev1.i.i2.i68, align 4
  %55 = ptrtoint ptr %pos.076 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %53, ptr %pos.076, align 4
  %56 = ptrtoint ptr %node.078.in to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %dispatch_queue, ptr %node.078.in, align 4
  %57 = ptrtoint ptr %dispatch_queue to i32
  call void @__asan_store4_noabort(i32 %57)
  store volatile ptr %pos.076, ptr %dispatch_queue, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end.i.i.i70, %__list_del_entry.exit.i67.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %cmp.i59.not = icmp eq ptr %node.078, %tmp
  br i1 %cmp.i59.not, label %for.inc.while.cond16.loopexit_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.body

for.inc.while.cond16.loopexit_crit_edge:          ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #12
  br label %while.cond16.loopexit

out:                                              ; preds = %while.cond16.loopexit.out_crit_edge, %if.then.i, %if.then14.out_crit_edge, %while.cond16.preheader.out_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp) #10
  ret i32 %moved.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_writeback_queue_io(ptr noundef %wb, ptr noundef %work, i32 noundef %dirtied_before, i32 noundef %moved) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_queue_io, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_writeback_queue_io, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !745
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_queue_io, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %wb, ptr noundef %work, i32 noundef %dirtied_before, i32 noundef %moved) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !746
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !746
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_queue_io, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_writeback_queue_io.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_writeback_queue_io.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 528, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_writeback_sb_inodes_requeue(ptr noundef %inode) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_sb_inodes_requeue, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_writeback_sb_inodes_requeue, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !747
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_sb_inodes_requeue, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %inode) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !748
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !748
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_sb_inodes_requeue, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_writeback_sb_inodes_requeue.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_writeback_sb_inodes_requeue.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 736, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__writeback_single_inode(ptr noundef %inode, ptr noundef %wbc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %i_mapping = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %0 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_mapping, align 8
  %2 = ptrtoint ptr %wbc to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %wbc, align 8
  %i_state = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 24
  %4 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %i_state, align 8
  %and = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.end, label %entry.if.end_crit_edge, !prof !671

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.8, i32 noundef 1614, i32 noundef 9, ptr noundef null) #10
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  tail call fastcc void @trace_writeback_single_inode_start(ptr noundef %inode, ptr noundef %wbc, i32 noundef %3)
  %call = tail call i32 @do_writepages(ptr noundef %1, ptr noundef %wbc) #10
  %sync_mode = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 4
  %6 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sync_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp = icmp eq i32 %7, 1
  br i1 %cmp, label %land.lhs.true, label %if.end.if.end28_crit_edge

if.end.if.end28_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end28

land.lhs.true:                                    ; preds = %if.end
  %for_sync = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 5
  %8 = ptrtoint ptr %for_sync to i32
  call void @__asan_load2_noabort(i32 %8)
  %bf.load = load i16, ptr %for_sync, align 4
  %9 = and i16 %bf.load, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %tobool22.not = icmp eq i16 %9, 0
  br i1 %tobool22.not, label %if.then23, label %land.lhs.true.if.end28_crit_edge

land.lhs.true.if.end28_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end28

if.then23:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  %call.i = tail call i32 @filemap_fdatawait_range(ptr noundef %1, i64 noundef 0, i64 noundef 9223372036854775807) #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp25 = icmp eq i32 %call, 0
  %spec.select = select i1 %cmp25, i32 %call.i, i32 %call
  br label %if.end28

if.end28:                                         ; preds = %if.then23, %land.lhs.true.if.end28_crit_edge, %if.end.if.end28_crit_edge
  %ret.1 = phi i32 [ %call, %land.lhs.true.if.end28_crit_edge ], [ %spec.select, %if.then23 ], [ %call, %if.end.if.end28_crit_edge ]
  %10 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %i_state, align 8
  %and30 = and i32 %11, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30)
  %tobool31.not = icmp eq i32 %and30, 0
  br i1 %tobool31.not, label %if.end28.if.end37_crit_edge, label %land.lhs.true32

if.end28.if.end37_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end37

land.lhs.true32:                                  ; preds = %if.end28
  %12 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sync_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %13)
  %cmp34 = icmp eq i32 %13, 1
  br i1 %cmp34, label %land.lhs.true32.if.then36_crit_edge, label %lor.lhs.false

land.lhs.true32.if.then36_crit_edge:              ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.then36

lor.lhs.false:                                    ; preds = %land.lhs.true32
  %dirtied_time_when = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 27
  %14 = ptrtoint ptr %dirtied_time_when to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %dirtied_time_when, align 8
  %16 = load i32, ptr @dirtytime_expire_interval, align 4
  %mul = mul i32 %16, 100
  %add = add i32 %mul, %15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %17 = load volatile i32, ptr @jiffies, align 128
  %sub = sub i32 %add, %17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp35 = icmp slt i32 %sub, 0
  br i1 %cmp35, label %lor.lhs.false.if.then36_crit_edge, label %lor.lhs.false.if.end37_crit_edge

lor.lhs.false.if.end37_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end37

lor.lhs.false.if.then36_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.then36

if.then36:                                        ; preds = %lor.lhs.false.if.then36_crit_edge, %land.lhs.true32.if.then36_crit_edge
  tail call fastcc void @trace_writeback_lazytime(ptr noundef %inode)
  tail call void @__mark_inode_dirty(ptr noundef %inode, i32 noundef 1) #10
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %lor.lhs.false.if.end37_crit_edge, %if.end28.if.end37_crit_edge
  %i_lock = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #10
  %18 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %i_state, align 8
  %and39 = and i32 %19, 7
  %and41 = and i32 %19, -8
  store i32 %and41, ptr %i_state, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #10, !srcloc !749
  %xa_flags.i.i = getelementptr inbounds %struct.address_space, ptr %1, i32 0, i32 1, i32 1
  %20 = ptrtoint ptr %xa_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %xa_flags.i.i, align 4
  %and.i.i = and i32 %21, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.i.not = icmp eq i32 %and.i.i, 0
  %22 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %i_state, align 8
  br i1 %tobool.i.i.not, label %if.else, label %if.then49

if.then49:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #12
  %or = or i32 %23, 4
  %24 = ptrtoint ptr %i_state to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %or, ptr %i_state, align 8
  br label %if.end72

if.else:                                          ; preds = %if.end37
  %and52 = and i32 %23, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and52)
  %tobool53.not = icmp eq i32 %and52, 0
  br i1 %tobool53.not, label %if.else.if.end72_crit_edge, label %if.then60, !prof !670

if.else.if.end72_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end72

if.then60:                                        ; preds = %if.else
  %and62 = and i32 %23, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and62)
  %tobool63.not = icmp eq i32 %and62, 0
  br i1 %tobool63.not, label %if.then64, label %if.then60.if.end72_crit_edge

if.then60.if.end72_crit_edge:                     ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end72

if.then64:                                        ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #12
  %and66 = and i32 %23, -262145
  %25 = ptrtoint ptr %i_state to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %and66, ptr %i_state, align 8
  %unpinned_fscache_wb = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 5
  %26 = ptrtoint ptr %unpinned_fscache_wb to i32
  call void @__asan_load2_noabort(i32 %26)
  %bf.load67 = load i16, ptr %unpinned_fscache_wb, align 4
  %bf.set = or i16 %bf.load67, 512
  store i16 %bf.set, ptr %unpinned_fscache_wb, align 4
  %or69 = or i32 %and39, 262144
  br label %if.end72

if.end72:                                         ; preds = %if.then64, %if.then60.if.end72_crit_edge, %if.else.if.end72_crit_edge, %if.then49
  %dirty.0 = phi i32 [ %and39, %if.then49 ], [ %and39, %if.then60.if.end72_crit_edge ], [ %or69, %if.then64 ], [ %and39, %if.else.if.end72_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #10
  %and74 = and i32 %dirty.0, -5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and74)
  %tobool75.not = icmp eq i32 %and74, 0
  br i1 %tobool75.not, label %if.end72.if.end82_crit_edge, label %if.then76

if.end72.if.end82_crit_edge:                      ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end82

if.then76:                                        ; preds = %if.end72
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %27 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %i_sb.i, align 4
  %s_op.i = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 6
  %29 = ptrtoint ptr %s_op.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %s_op.i, align 4
  %write_inode.i = getelementptr inbounds %struct.super_operations, ptr %30, i32 0, i32 4
  %31 = ptrtoint ptr %write_inode.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %write_inode.i, align 4
  %tobool.not.i = icmp eq ptr %32, null
  br i1 %tobool.not.i, label %if.then76.write_inode.exit_crit_edge, label %land.lhs.true.i

if.then76.write_inode.exit_crit_edge:             ; preds = %if.then76
  call void @__sanitizer_cov_trace_pc() #12
  br label %write_inode.exit

land.lhs.true.i:                                  ; preds = %if.then76
  %call.i121 = tail call zeroext i1 @is_bad_inode(ptr noundef %inode) #10
  br i1 %call.i121, label %land.lhs.true.i.write_inode.exit_crit_edge, label %if.then.i

land.lhs.true.i.write_inode.exit_crit_edge:       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %write_inode.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call fastcc void @trace_writeback_write_inode_start(ptr noundef %inode, ptr noundef %wbc) #10
  %33 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %i_sb.i, align 4
  %s_op2.i = getelementptr inbounds %struct.super_block, ptr %34, i32 0, i32 6
  %35 = ptrtoint ptr %s_op2.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %s_op2.i, align 4
  %write_inode3.i = getelementptr inbounds %struct.super_operations, ptr %36, i32 0, i32 4
  %37 = ptrtoint ptr %write_inode3.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %write_inode3.i, align 4
  %call4.i = tail call i32 %38(ptr noundef %inode, ptr noundef %wbc) #10
  tail call fastcc void @trace_writeback_write_inode(ptr noundef %inode, ptr noundef %wbc) #10
  br label %write_inode.exit

write_inode.exit:                                 ; preds = %if.then.i, %land.lhs.true.i.write_inode.exit_crit_edge, %if.then76.write_inode.exit_crit_edge
  %retval.0.i = phi i32 [ %call4.i, %if.then.i ], [ 0, %land.lhs.true.i.write_inode.exit_crit_edge ], [ 0, %if.then76.write_inode.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.1)
  %cmp79 = icmp eq i32 %ret.1, 0
  %spec.select120 = select i1 %cmp79, i32 %retval.0.i, i32 %ret.1
  br label %if.end82

if.end82:                                         ; preds = %write_inode.exit, %if.end72.if.end82_crit_edge
  %ret.3 = phi i32 [ %spec.select120, %write_inode.exit ], [ %ret.1, %if.end72.if.end82_crit_edge ]
  %unpinned_fscache_wb83 = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 5
  %39 = ptrtoint ptr %unpinned_fscache_wb83 to i32
  call void @__asan_load2_noabort(i32 %39)
  %bf.load84 = load i16, ptr %unpinned_fscache_wb83, align 4
  %bf.clear85 = and i16 %bf.load84, -513
  store i16 %bf.clear85, ptr %unpinned_fscache_wb83, align 4
  tail call fastcc void @trace_writeback_single_inode(ptr noundef %inode, ptr noundef %wbc, i32 noundef %3)
  ret i32 %ret.3
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_writeback_single_inode_start(ptr noundef %inode, ptr noundef %wbc, i32 noundef %nr_to_write) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_single_inode_start, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_writeback_single_inode_start, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !750
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_single_inode_start, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %inode, ptr noundef %wbc, i32 noundef %nr_to_write) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !751
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !751
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_single_inode_start, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_writeback_single_inode_start.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_writeback_single_inode_start.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 817, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @do_writepages(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_writeback_lazytime(ptr noundef %inode) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_lazytime, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_writeback_lazytime, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !752
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_lazytime, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %inode) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !753
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !753
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_lazytime, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_writeback_lazytime.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_writeback_lazytime.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 857, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_writeback_single_inode(ptr noundef %inode, ptr noundef %wbc, i32 noundef %nr_to_write) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_single_inode, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_writeback_single_inode, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !754
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_single_inode, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %inode, ptr noundef %wbc, i32 noundef %nr_to_write) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !755
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !755
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_single_inode, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_writeback_single_inode.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_writeback_single_inode.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 824, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @filemap_fdatawait_range(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_bad_inode(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_writeback_write_inode_start(ptr noundef %inode, ptr noundef %wbc) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_write_inode_start, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_writeback_write_inode_start, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !756
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_write_inode_start, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %inode, ptr noundef %wbc) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !757
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !757
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_write_inode_start, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_writeback_write_inode_start.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_writeback_write_inode_start.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 338, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_writeback_write_inode(ptr noundef %inode, ptr noundef %wbc) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_write_inode, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_writeback_write_inode, %do.body)) #10
          to label %if.end48 [label %do.body], !srcloc !674

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !670

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !758
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_write_inode, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %inode, ptr noundef %wbc) #10
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !759
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #12
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !759
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !670

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 108, i32 noundef 9, ptr noundef null) #10
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #12
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !693
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_writeback_write_inode, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_writeback_write_inode.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @trace_writeback_write_inode.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 345, ptr noundef nonnull @.str.133) #10
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !694
  %38 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @inode_add_lru(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @wake_up_bit(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @trylock_super(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @autoremove_wake_function(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @prepare_to_wait(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mod_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @wakeup_dirtytime_writeback(ptr nocapture noundef readnone %w) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #12
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !675
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #10
  %call.i = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 696, ptr noundef nonnull @.str.141) #10
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call = tail call i32 @rcu_read_lock_any_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end_crit_edge

rcu_read_lock.exit.do.end_crit_edge:              ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true3

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %.b66 = load i1, ptr @wakeup_dirtytime_writeback.__warned, align 1
  br i1 %.b66, label %land.lhs.true3.do.end_crit_edge, label %if.then

land.lhs.true3.do.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end

if.then:                                          ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @wakeup_dirtytime_writeback.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.8, i32 noundef 2336, ptr noundef nonnull @.str.11) #10
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true3.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %rcu_read_lock.exit.do.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @bdi_list to i32))
  %.pn82 = load volatile ptr, ptr @bdi_list, align 4
  %cmp.not83 = icmp eq ptr %.pn82, @bdi_list
  br i1 %cmp.not83, label %do.end.for.end55_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.for.end55_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end55

for.cond.loopexit:                                ; preds = %for.inc.for.cond.loopexit_crit_edge, %do.end20.for.cond.loopexit_crit_edge
  %4 = ptrtoint ptr %.pn84 to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pn = load volatile ptr, ptr %.pn84, align 4
  %cmp.not = icmp eq ptr %.pn, @bdi_list
  br i1 %cmp.not, label %for.cond.loopexit.for.end55_crit_edge, label %for.cond.loopexit.for.body_crit_edge

for.cond.loopexit.for.body_crit_edge:             ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.body

for.cond.loopexit.for.end55_crit_edge:            ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.end55

for.body:                                         ; preds = %for.cond.loopexit.for.body_crit_edge, %do.end.for.body_crit_edge
  %.pn84 = phi ptr [ %.pn, %for.cond.loopexit.for.body_crit_edge ], [ %.pn82, %do.end.for.body_crit_edge ]
  %call10 = tail call i32 @rcu_read_lock_any_held() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %land.lhs.true12, label %for.body.do.end20_crit_edge

for.body.do.end20_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end20

land.lhs.true12:                                  ; preds = %for.body
  %call13 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %land.lhs.true12.do.end20_crit_edge, label %land.lhs.true15

land.lhs.true12.do.end20_crit_edge:               ; preds = %land.lhs.true12
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end20

land.lhs.true15:                                  ; preds = %land.lhs.true12
  %.b6365 = load i1, ptr @wakeup_dirtytime_writeback.__warned.146, align 1
  br i1 %.b6365, label %land.lhs.true15.do.end20_crit_edge, label %if.then17

land.lhs.true15.do.end20_crit_edge:               ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #12
  br label %do.end20

if.then17:                                        ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @wakeup_dirtytime_writeback.__warned.146, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.8, i32 noundef 2339, ptr noundef nonnull @.str.11) #10
  br label %do.end20

do.end20:                                         ; preds = %if.then17, %land.lhs.true15.do.end20_crit_edge, %land.lhs.true12.do.end20_crit_edge, %for.body.do.end20_crit_edge
  %wb_list = getelementptr i8, ptr %.pn84, i32 1068
  %5 = ptrtoint ptr %wb_list to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn6479 = load volatile ptr, ptr %wb_list, align 8
  %cmp30.not80 = icmp eq ptr %.pn6479, %wb_list
  br i1 %cmp30.not80, label %do.end20.for.cond.loopexit_crit_edge, label %do.end20.for.body31_crit_edge

do.end20.for.body31_crit_edge:                    ; preds = %do.end20
  br label %for.body31

do.end20.for.cond.loopexit_crit_edge:             ; preds = %do.end20
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.cond.loopexit

for.body31:                                       ; preds = %for.inc.for.body31_crit_edge, %do.end20.for.body31_crit_edge
  %.pn6481 = phi ptr [ %.pn64, %for.inc.for.body31_crit_edge ], [ %.pn6479, %do.end20.for.body31_crit_edge ]
  %b_dirty_time = getelementptr i8, ptr %.pn6481, i32 -764
  %6 = ptrtoint ptr %b_dirty_time to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %b_dirty_time, align 4
  %cmp.i.not = icmp eq ptr %7, %b_dirty_time
  br i1 %cmp.i.not, label %for.body31.for.inc_crit_edge, label %if.then34

for.body31.for.inc_crit_edge:                     ; preds = %for.body31
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.inc

if.then34:                                        ; preds = %for.body31
  %work_lock.i = getelementptr i8, ptr %.pn6481, i32 -256
  tail call void @_raw_spin_lock_bh(ptr noundef %work_lock.i) #10
  %state.i = getelementptr i8, ptr %.pn6481, i32 -796
  %8 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i67 = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i67, label %if.then34.wb_wakeup.exit_crit_edge, label %if.then.i68

if.then34.wb_wakeup.exit_crit_edge:               ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #12
  br label %wb_wakeup.exit

if.then.i68:                                      ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @bdi_wq to i32))
  %10 = load ptr, ptr @bdi_wq, align 4
  %dwork.i = getelementptr i8, ptr %.pn6481, i32 -204
  %call.i.i = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 4, ptr noundef %10, ptr noundef %dwork.i, i32 noundef 0) #10
  br label %wb_wakeup.exit

wb_wakeup.exit:                                   ; preds = %if.then.i68, %if.then34.wb_wakeup.exit_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %work_lock.i) #10
  br label %for.inc

for.inc:                                          ; preds = %wb_wakeup.exit, %for.body31.for.inc_crit_edge
  %11 = ptrtoint ptr %.pn6481 to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pn64 = load volatile ptr, ptr %.pn6481, align 8
  %cmp30.not = icmp eq ptr %.pn64, %wb_list
  br i1 %cmp30.not, label %for.inc.for.cond.loopexit_crit_edge, label %for.inc.for.body31_crit_edge

for.inc.for.body31_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.body31

for.inc.for.cond.loopexit_crit_edge:              ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #12
  br label %for.cond.loopexit

for.end55:                                        ; preds = %for.cond.loopexit.for.end55_crit_edge, %do.end.for.end55_crit_edge
  %call.i69 = tail call zeroext i1 @rcu_is_watching() #10
  br i1 %call.i69, label %for.end55.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i72

for.end55.rcu_read_unlock.exit_crit_edge:         ; preds = %for.end55
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit

land.lhs.true.i72:                                ; preds = %for.end55
  %call1.i70 = tail call i32 @debug_lockdep_rcu_enabled() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i70)
  %tobool.not.i71 = icmp eq i32 %call1.i70, 0
  br i1 %tobool.not.i71, label %land.lhs.true.i72.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i74

land.lhs.true.i72.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i72
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit

land.lhs.true2.i74:                               ; preds = %land.lhs.true.i72
  %.b4.i73 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i73, label %land.lhs.true2.i74.rcu_read_unlock.exit_crit_edge, label %if.then.i75

land.lhs.true2.i74.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i74
  call void @__sanitizer_cov_trace_pc() #12
  br label %rcu_read_unlock.exit

if.then.i75:                                      ; preds = %land.lhs.true2.i74
  call void @__sanitizer_cov_trace_pc() #12
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.140, i32 noundef 724, ptr noundef nonnull @.str.142) #10
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i75, %land.lhs.true2.i74.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i72.rcu_read_unlock.exit_crit_edge, %for.end55.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #10, !srcloc !678
  %12 = tail call i32 @llvm.read_register.i32(metadata !660) #10
  %and.i.i.i.i.i76 = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i.i.i76 to ptr
  %preempt_count.i.i.i.i77 = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %preempt_count.i.i.i.i77 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %preempt_count.i.i.i.i77, align 4
  %sub.i.i.i = add i32 %15, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i77, align 4
  tail call void @rcu_read_unlock_strict() #10
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #10
  %16 = load i32, ptr @dirtytime_expire_interval, align 4
  %mul = mul i32 %16, 100
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %17 = load ptr, ptr @system_wq, align 4
  %call.i.i78 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %17, ptr noundef nonnull @dirtytime_work, i32 noundef %mul) #10
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_nr_dirty_inodes() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @filemap_fdatawait_keep_errors(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #9

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #9

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #9

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #9

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #10

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #11 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 247)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #11 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 247)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #6 = { nounwind readonly }
attributes #7 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #8 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #10 = { nounwind }
attributes #11 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #12 = { nomerge }
attributes #13 = { nounwind allocsize(2) }
attributes #14 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !4, !5, !6, !8, !9, !10, !12, !13, !14, !16, !17, !18, !20, !21, !22, !24, !25, !26, !28, !29, !30, !32, !33, !34, !36, !37, !38, !40, !41, !42, !44, !45, !46, !48, !49, !50, !52, !53, !54, !56, !57, !58, !60, !61, !62, !64, !65, !66, !68, !69, !70, !72, !73, !74, !76, !77, !78, !80, !81, !82, !84, !85, !86, !88, !89, !90, !92, !93, !94, !96, !97, !98, !100, !101, !102, !104, !105, !106, !108, !109, !110, !112, !113, !114, !116, !117, !118, !120, !121, !122, !124, !125, !126, !128, !129, !130, !132, !133, !134, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !161, !162, !163, !164, !165, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !187, !188, !189, !190, !191, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !208, !209, !210, !211, !212, !213, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !234, !235, !236, !238, !239, !240, !241, !242, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !289, !290, !291, !293, !295, !297, !298, !300, !302, !304, !306, !308, !310, !312, !314, !315, !317, !319, !321, !323, !325, !327, !329, !331, !333, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !414, !416, !418, !420, !422, !424, !426, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !568, !569, !570, !572, !573, !575, !577, !579, !580, !581, !582, !584, !585, !587, !589, !590, !592, !593, !595, !596, !597, !599, !600, !601, !603, !604, !605, !606, !608, !609, !610, !612, !613, !614, !615, !616, !617, !618, !619, !620, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !644, !646, !647, !648, !650, !652, !653, !654, !655, !656, !657, !658, !659}
!llvm.named.register.sp = !{!660}
!llvm.module.flags = !{!661, !662, !663, !664, !665, !666, !667, !668}
!llvm.ident = !{!669}

!0 = !{ptr @dirtytime_expire_interval, !1, !"dirtytime_expire_interval", i1 false, i1 false}
!1 = !{!"../fs/fs-writeback.c", i32 68, i32 14}
!2 = !{ptr @__tracepoint_writeback_dirty_folio, !3, !"__tracepoint_writeback_dirty_folio", i1 false, i1 false}
!3 = !{!"../include/trace/events/writeback.h", i32 82, i32 1}
!4 = !{ptr @__tracepoint_ptr_writeback_dirty_folio, !3, !"__tracepoint_ptr_writeback_dirty_folio", i1 false, i1 false}
!5 = !{ptr @__SCK__tp_func_writeback_dirty_folio, !3, !"__SCK__tp_func_writeback_dirty_folio", i1 false, i1 false}
!6 = !{ptr @__tracepoint_folio_wait_writeback, !7, !"__tracepoint_folio_wait_writeback", i1 false, i1 false}
!7 = !{!"../include/trace/events/writeback.h", i32 89, i32 1}
!8 = !{ptr @__tracepoint_ptr_folio_wait_writeback, !7, !"__tracepoint_ptr_folio_wait_writeback", i1 false, i1 false}
!9 = !{ptr @__SCK__tp_func_folio_wait_writeback, !7, !"__SCK__tp_func_folio_wait_writeback", i1 false, i1 false}
!10 = !{ptr @__tracepoint_writeback_mark_inode_dirty, !11, !"__tracepoint_writeback_mark_inode_dirty", i1 false, i1 false}
!11 = !{!"../include/trace/events/writeback.h", i32 127, i32 1}
!12 = !{ptr @__tracepoint_ptr_writeback_mark_inode_dirty, !11, !"__tracepoint_ptr_writeback_mark_inode_dirty", i1 false, i1 false}
!13 = !{ptr @__SCK__tp_func_writeback_mark_inode_dirty, !11, !"__SCK__tp_func_writeback_mark_inode_dirty", i1 false, i1 false}
!14 = !{ptr @__tracepoint_writeback_dirty_inode_start, !15, !"__tracepoint_writeback_dirty_inode_start", i1 false, i1 false}
!15 = !{!"../include/trace/events/writeback.h", i32 134, i32 1}
!16 = !{ptr @__tracepoint_ptr_writeback_dirty_inode_start, !15, !"__tracepoint_ptr_writeback_dirty_inode_start", i1 false, i1 false}
!17 = !{ptr @__SCK__tp_func_writeback_dirty_inode_start, !15, !"__SCK__tp_func_writeback_dirty_inode_start", i1 false, i1 false}
!18 = !{ptr @__tracepoint_writeback_dirty_inode, !19, !"__tracepoint_writeback_dirty_inode", i1 false, i1 false}
!19 = !{!"../include/trace/events/writeback.h", i32 141, i32 1}
!20 = !{ptr @__tracepoint_ptr_writeback_dirty_inode, !19, !"__tracepoint_ptr_writeback_dirty_inode", i1 false, i1 false}
!21 = !{ptr @__SCK__tp_func_writeback_dirty_inode, !19, !"__SCK__tp_func_writeback_dirty_inode", i1 false, i1 false}
!22 = !{ptr @__tracepoint_inode_foreign_history, !23, !"__tracepoint_inode_foreign_history", i1 false, i1 false}
!23 = !{!"../include/trace/events/writeback.h", i32 179, i32 1}
!24 = !{ptr @__tracepoint_ptr_inode_foreign_history, !23, !"__tracepoint_ptr_inode_foreign_history", i1 false, i1 false}
!25 = !{ptr @__SCK__tp_func_inode_foreign_history, !23, !"__SCK__tp_func_inode_foreign_history", i1 false, i1 false}
!26 = !{ptr @__tracepoint_inode_switch_wbs, !27, !"__tracepoint_inode_switch_wbs", i1 false, i1 false}
!27 = !{!"../include/trace/events/writeback.h", i32 208, i32 1}
!28 = !{ptr @__tracepoint_ptr_inode_switch_wbs, !27, !"__tracepoint_ptr_inode_switch_wbs", i1 false, i1 false}
!29 = !{ptr @__SCK__tp_func_inode_switch_wbs, !27, !"__SCK__tp_func_inode_switch_wbs", i1 false, i1 false}
!30 = !{ptr @__tracepoint_track_foreign_dirty, !31, !"__tracepoint_track_foreign_dirty", i1 false, i1 false}
!31 = !{!"../include/trace/events/writeback.h", i32 237, i32 1}
!32 = !{ptr @__tracepoint_ptr_track_foreign_dirty, !31, !"__tracepoint_ptr_track_foreign_dirty", i1 false, i1 false}
!33 = !{ptr @__SCK__tp_func_track_foreign_dirty, !31, !"__SCK__tp_func_track_foreign_dirty", i1 false, i1 false}
!34 = !{ptr @__tracepoint_flush_foreign, !35, !"__tracepoint_flush_foreign", i1 false, i1 false}
!35 = !{!"../include/trace/events/writeback.h", i32 274, i32 1}
!36 = !{ptr @__tracepoint_ptr_flush_foreign, !35, !"__tracepoint_ptr_flush_foreign", i1 false, i1 false}
!37 = !{ptr @__SCK__tp_func_flush_foreign, !35, !"__SCK__tp_func_flush_foreign", i1 false, i1 false}
!38 = !{ptr @__tracepoint_writeback_write_inode_start, !39, !"__tracepoint_writeback_write_inode_start", i1 false, i1 false}
!39 = !{!"../include/trace/events/writeback.h", i32 333, i32 1}
!40 = !{ptr @__tracepoint_ptr_writeback_write_inode_start, !39, !"__tracepoint_ptr_writeback_write_inode_start", i1 false, i1 false}
!41 = !{ptr @__SCK__tp_func_writeback_write_inode_start, !39, !"__SCK__tp_func_writeback_write_inode_start", i1 false, i1 false}
!42 = !{ptr @__tracepoint_writeback_write_inode, !43, !"__tracepoint_writeback_write_inode", i1 false, i1 false}
!43 = !{!"../include/trace/events/writeback.h", i32 340, i32 1}
!44 = !{ptr @__tracepoint_ptr_writeback_write_inode, !43, !"__tracepoint_ptr_writeback_write_inode", i1 false, i1 false}
!45 = !{ptr @__SCK__tp_func_writeback_write_inode, !43, !"__SCK__tp_func_writeback_write_inode", i1 false, i1 false}
!46 = !{ptr @__tracepoint_writeback_queue, !47, !"__tracepoint_writeback_queue", i1 false, i1 false}
!47 = !{!"../include/trace/events/writeback.h", i32 389, i32 1}
!48 = !{ptr @__tracepoint_ptr_writeback_queue, !47, !"__tracepoint_ptr_writeback_queue", i1 false, i1 false}
!49 = !{ptr @__SCK__tp_func_writeback_queue, !47, !"__SCK__tp_func_writeback_queue", i1 false, i1 false}
!50 = !{ptr @__tracepoint_writeback_exec, !51, !"__tracepoint_writeback_exec", i1 false, i1 false}
!51 = !{!"../include/trace/events/writeback.h", i32 390, i32 1}
!52 = !{ptr @__tracepoint_ptr_writeback_exec, !51, !"__tracepoint_ptr_writeback_exec", i1 false, i1 false}
!53 = !{ptr @__SCK__tp_func_writeback_exec, !51, !"__SCK__tp_func_writeback_exec", i1 false, i1 false}
!54 = !{ptr @__tracepoint_writeback_start, !55, !"__tracepoint_writeback_start", i1 false, i1 false}
!55 = !{!"../include/trace/events/writeback.h", i32 391, i32 1}
!56 = !{ptr @__tracepoint_ptr_writeback_start, !55, !"__tracepoint_ptr_writeback_start", i1 false, i1 false}
!57 = !{ptr @__SCK__tp_func_writeback_start, !55, !"__SCK__tp_func_writeback_start", i1 false, i1 false}
!58 = !{ptr @__tracepoint_writeback_written, !59, !"__tracepoint_writeback_written", i1 false, i1 false}
!59 = !{!"../include/trace/events/writeback.h", i32 392, i32 1}
!60 = !{ptr @__tracepoint_ptr_writeback_written, !59, !"__tracepoint_ptr_writeback_written", i1 false, i1 false}
!61 = !{ptr @__SCK__tp_func_writeback_written, !59, !"__SCK__tp_func_writeback_written", i1 false, i1 false}
!62 = !{ptr @__tracepoint_writeback_wait, !63, !"__tracepoint_writeback_wait", i1 false, i1 false}
!63 = !{!"../include/trace/events/writeback.h", i32 393, i32 1}
!64 = !{ptr @__tracepoint_ptr_writeback_wait, !63, !"__tracepoint_ptr_writeback_wait", i1 false, i1 false}
!65 = !{ptr @__SCK__tp_func_writeback_wait, !63, !"__SCK__tp_func_writeback_wait", i1 false, i1 false}
!66 = !{ptr @__tracepoint_writeback_pages_written, !67, !"__tracepoint_writeback_pages_written", i1 false, i1 false}
!67 = !{!"../include/trace/events/writeback.h", i32 395, i32 1}
!68 = !{ptr @__tracepoint_ptr_writeback_pages_written, !67, !"__tracepoint_ptr_writeback_pages_written", i1 false, i1 false}
!69 = !{ptr @__SCK__tp_func_writeback_pages_written, !67, !"__SCK__tp_func_writeback_pages_written", i1 false, i1 false}
!70 = !{ptr @__tracepoint_writeback_wake_background, !71, !"__tracepoint_writeback_wake_background", i1 false, i1 false}
!71 = !{!"../include/trace/events/writeback.h", i32 428, i32 1}
!72 = !{ptr @__tracepoint_ptr_writeback_wake_background, !71, !"__tracepoint_ptr_writeback_wake_background", i1 false, i1 false}
!73 = !{ptr @__SCK__tp_func_writeback_wake_background, !71, !"__SCK__tp_func_writeback_wake_background", i1 false, i1 false}
!74 = !{ptr @__tracepoint_writeback_bdi_register, !75, !"__tracepoint_writeback_bdi_register", i1 false, i1 false}
!75 = !{!"../include/trace/events/writeback.h", i32 430, i32 1}
!76 = !{ptr @__tracepoint_ptr_writeback_bdi_register, !75, !"__tracepoint_ptr_writeback_bdi_register", i1 false, i1 false}
!77 = !{ptr @__SCK__tp_func_writeback_bdi_register, !75, !"__SCK__tp_func_writeback_bdi_register", i1 false, i1 false}
!78 = !{ptr @__tracepoint_wbc_writepage, !79, !"__tracepoint_wbc_writepage", i1 false, i1 false}
!79 = !{!"../include/trace/events/writeback.h", i32 496, i32 1}
!80 = !{ptr @__tracepoint_ptr_wbc_writepage, !79, !"__tracepoint_ptr_wbc_writepage", i1 false, i1 false}
!81 = !{ptr @__SCK__tp_func_wbc_writepage, !79, !"__SCK__tp_func_wbc_writepage", i1 false, i1 false}
!82 = !{ptr @__tracepoint_writeback_queue_io, !83, !"__tracepoint_writeback_queue_io", i1 false, i1 false}
!83 = !{!"../include/trace/events/writeback.h", i32 498, i32 1}
!84 = !{ptr @__tracepoint_ptr_writeback_queue_io, !83, !"__tracepoint_ptr_writeback_queue_io", i1 false, i1 false}
!85 = !{ptr @__SCK__tp_func_writeback_queue_io, !83, !"__SCK__tp_func_writeback_queue_io", i1 false, i1 false}
!86 = !{ptr @__tracepoint_global_dirty_state, !87, !"__tracepoint_global_dirty_state", i1 false, i1 false}
!87 = !{!"../include/trace/events/writeback.h", i32 530, i32 1}
!88 = !{ptr @__tracepoint_ptr_global_dirty_state, !87, !"__tracepoint_ptr_global_dirty_state", i1 false, i1 false}
!89 = !{ptr @__SCK__tp_func_global_dirty_state, !87, !"__SCK__tp_func_global_dirty_state", i1 false, i1 false}
!90 = !{ptr @__tracepoint_bdi_dirty_ratelimit, !91, !"__tracepoint_bdi_dirty_ratelimit", i1 false, i1 false}
!91 = !{!"../include/trace/events/writeback.h", i32 575, i32 1}
!92 = !{ptr @__tracepoint_ptr_bdi_dirty_ratelimit, !91, !"__tracepoint_ptr_bdi_dirty_ratelimit", i1 false, i1 false}
!93 = !{ptr @__SCK__tp_func_bdi_dirty_ratelimit, !91, !"__SCK__tp_func_bdi_dirty_ratelimit", i1 false, i1 false}
!94 = !{ptr @__tracepoint_balance_dirty_pages, !95, !"__tracepoint_balance_dirty_pages", i1 false, i1 false}
!95 = !{!"../include/trace/events/writeback.h", i32 621, i32 1}
!96 = !{ptr @__tracepoint_ptr_balance_dirty_pages, !95, !"__tracepoint_ptr_balance_dirty_pages", i1 false, i1 false}
!97 = !{ptr @__SCK__tp_func_balance_dirty_pages, !95, !"__SCK__tp_func_balance_dirty_pages", i1 false, i1 false}
!98 = !{ptr @__tracepoint_writeback_sb_inodes_requeue, !99, !"__tracepoint_writeback_sb_inodes_requeue", i1 false, i1 false}
!99 = !{!"../include/trace/events/writeback.h", i32 706, i32 1}
!100 = !{ptr @__tracepoint_ptr_writeback_sb_inodes_requeue, !99, !"__tracepoint_ptr_writeback_sb_inodes_requeue", i1 false, i1 false}
!101 = !{ptr @__SCK__tp_func_writeback_sb_inodes_requeue, !99, !"__SCK__tp_func_writeback_sb_inodes_requeue", i1 false, i1 false}
!102 = !{ptr @__tracepoint_writeback_congestion_wait, !103, !"__tracepoint_writeback_congestion_wait", i1 false, i1 false}
!103 = !{!"../include/trace/events/writeback.h", i32 759, i32 1}
!104 = !{ptr @__tracepoint_ptr_writeback_congestion_wait, !103, !"__tracepoint_ptr_writeback_congestion_wait", i1 false, i1 false}
!105 = !{ptr @__SCK__tp_func_writeback_congestion_wait, !103, !"__SCK__tp_func_writeback_congestion_wait", i1 false, i1 false}
!106 = !{ptr @__tracepoint_writeback_single_inode_start, !107, !"__tracepoint_writeback_single_inode_start", i1 false, i1 false}
!107 = !{!"../include/trace/events/writeback.h", i32 812, i32 1}
!108 = !{ptr @__tracepoint_ptr_writeback_single_inode_start, !107, !"__tracepoint_ptr_writeback_single_inode_start", i1 false, i1 false}
!109 = !{ptr @__SCK__tp_func_writeback_single_inode_start, !107, !"__SCK__tp_func_writeback_single_inode_start", i1 false, i1 false}
!110 = !{ptr @__tracepoint_writeback_single_inode, !111, !"__tracepoint_writeback_single_inode", i1 false, i1 false}
!111 = !{!"../include/trace/events/writeback.h", i32 819, i32 1}
!112 = !{ptr @__tracepoint_ptr_writeback_single_inode, !111, !"__tracepoint_ptr_writeback_single_inode", i1 false, i1 false}
!113 = !{ptr @__SCK__tp_func_writeback_single_inode, !111, !"__SCK__tp_func_writeback_single_inode", i1 false, i1 false}
!114 = !{ptr @__tracepoint_writeback_lazytime, !115, !"__tracepoint_writeback_lazytime", i1 false, i1 false}
!115 = !{!"../include/trace/events/writeback.h", i32 853, i32 1}
!116 = !{ptr @__tracepoint_ptr_writeback_lazytime, !115, !"__tracepoint_ptr_writeback_lazytime", i1 false, i1 false}
!117 = !{ptr @__SCK__tp_func_writeback_lazytime, !115, !"__SCK__tp_func_writeback_lazytime", i1 false, i1 false}
!118 = !{ptr @__tracepoint_writeback_lazytime_iput, !119, !"__tracepoint_writeback_lazytime_iput", i1 false, i1 false}
!119 = !{!"../include/trace/events/writeback.h", i32 859, i32 1}
!120 = !{ptr @__tracepoint_ptr_writeback_lazytime_iput, !119, !"__tracepoint_ptr_writeback_lazytime_iput", i1 false, i1 false}
!121 = !{ptr @__SCK__tp_func_writeback_lazytime_iput, !119, !"__SCK__tp_func_writeback_lazytime_iput", i1 false, i1 false}
!122 = !{ptr @__tracepoint_writeback_dirty_inode_enqueue, !123, !"__tracepoint_writeback_dirty_inode_enqueue", i1 false, i1 false}
!123 = !{!"../include/trace/events/writeback.h", i32 865, i32 1}
!124 = !{ptr @__tracepoint_ptr_writeback_dirty_inode_enqueue, !123, !"__tracepoint_ptr_writeback_dirty_inode_enqueue", i1 false, i1 false}
!125 = !{ptr @__SCK__tp_func_writeback_dirty_inode_enqueue, !123, !"__SCK__tp_func_writeback_dirty_inode_enqueue", i1 false, i1 false}
!126 = !{ptr @__tracepoint_sb_mark_inode_writeback, !127, !"__tracepoint_sb_mark_inode_writeback", i1 false, i1 false}
!127 = !{!"../include/trace/events/writeback.h", i32 876, i32 1}
!128 = !{ptr @__tracepoint_ptr_sb_mark_inode_writeback, !127, !"__tracepoint_ptr_sb_mark_inode_writeback", i1 false, i1 false}
!129 = !{ptr @__SCK__tp_func_sb_mark_inode_writeback, !127, !"__SCK__tp_func_sb_mark_inode_writeback", i1 false, i1 false}
!130 = !{ptr @__tracepoint_sb_clear_inode_writeback, !131, !"__tracepoint_sb_clear_inode_writeback", i1 false, i1 false}
!131 = !{!"../include/trace/events/writeback.h", i32 881, i32 1}
!132 = !{ptr @__tracepoint_ptr_sb_clear_inode_writeback, !131, !"__tracepoint_ptr_sb_clear_inode_writeback", i1 false, i1 false}
!133 = !{ptr @__SCK__tp_func_sb_clear_inode_writeback, !131, !"__SCK__tp_func_sb_clear_inode_writeback", i1 false, i1 false}
!134 = !{ptr @.str, !135, !"<string literal>", i1 false, i1 false}
!135 = !{!"../include/trace/events/writeback.h", i32 42, i32 1}
!136 = !{ptr @__TRACE_SYSTEM_WB_REASON_BACKGROUND, !135, !"__TRACE_SYSTEM_WB_REASON_BACKGROUND", i1 false, i1 false}
!137 = !{ptr @TRACE_SYSTEM_WB_REASON_BACKGROUND, !135, !"TRACE_SYSTEM_WB_REASON_BACKGROUND", i1 false, i1 false}
!138 = !{ptr @.str.1, !135, !"<string literal>", i1 false, i1 false}
!139 = !{ptr @__TRACE_SYSTEM_WB_REASON_VMSCAN, !135, !"__TRACE_SYSTEM_WB_REASON_VMSCAN", i1 false, i1 false}
!140 = !{ptr @TRACE_SYSTEM_WB_REASON_VMSCAN, !135, !"TRACE_SYSTEM_WB_REASON_VMSCAN", i1 false, i1 false}
!141 = !{ptr @.str.2, !135, !"<string literal>", i1 false, i1 false}
!142 = !{ptr @__TRACE_SYSTEM_WB_REASON_SYNC, !135, !"__TRACE_SYSTEM_WB_REASON_SYNC", i1 false, i1 false}
!143 = !{ptr @TRACE_SYSTEM_WB_REASON_SYNC, !135, !"TRACE_SYSTEM_WB_REASON_SYNC", i1 false, i1 false}
!144 = !{ptr @.str.3, !135, !"<string literal>", i1 false, i1 false}
!145 = !{ptr @__TRACE_SYSTEM_WB_REASON_PERIODIC, !135, !"__TRACE_SYSTEM_WB_REASON_PERIODIC", i1 false, i1 false}
!146 = !{ptr @TRACE_SYSTEM_WB_REASON_PERIODIC, !135, !"TRACE_SYSTEM_WB_REASON_PERIODIC", i1 false, i1 false}
!147 = !{ptr @.str.4, !135, !"<string literal>", i1 false, i1 false}
!148 = !{ptr @__TRACE_SYSTEM_WB_REASON_LAPTOP_TIMER, !135, !"__TRACE_SYSTEM_WB_REASON_LAPTOP_TIMER", i1 false, i1 false}
!149 = !{ptr @TRACE_SYSTEM_WB_REASON_LAPTOP_TIMER, !135, !"TRACE_SYSTEM_WB_REASON_LAPTOP_TIMER", i1 false, i1 false}
!150 = !{ptr @.str.5, !135, !"<string literal>", i1 false, i1 false}
!151 = !{ptr @__TRACE_SYSTEM_WB_REASON_FS_FREE_SPACE, !135, !"__TRACE_SYSTEM_WB_REASON_FS_FREE_SPACE", i1 false, i1 false}
!152 = !{ptr @TRACE_SYSTEM_WB_REASON_FS_FREE_SPACE, !135, !"TRACE_SYSTEM_WB_REASON_FS_FREE_SPACE", i1 false, i1 false}
!153 = !{ptr @.str.6, !135, !"<string literal>", i1 false, i1 false}
!154 = !{ptr @__TRACE_SYSTEM_WB_REASON_FORKER_THREAD, !135, !"__TRACE_SYSTEM_WB_REASON_FORKER_THREAD", i1 false, i1 false}
!155 = !{ptr @TRACE_SYSTEM_WB_REASON_FORKER_THREAD, !135, !"TRACE_SYSTEM_WB_REASON_FORKER_THREAD", i1 false, i1 false}
!156 = !{ptr @.str.7, !135, !"<string literal>", i1 false, i1 false}
!157 = !{ptr @__TRACE_SYSTEM_WB_REASON_FOREIGN_FLUSH, !135, !"__TRACE_SYSTEM_WB_REASON_FOREIGN_FLUSH", i1 false, i1 false}
!158 = !{ptr @TRACE_SYSTEM_WB_REASON_FOREIGN_FLUSH, !135, !"TRACE_SYSTEM_WB_REASON_FOREIGN_FLUSH", i1 false, i1 false}
!159 = !{ptr @event_class_writeback_folio_template, !160, !"event_class_writeback_folio_template", i1 false, i1 false}
!160 = !{!"../include/trace/events/writeback.h", i32 55, i32 1}
!161 = !{ptr @event_writeback_dirty_folio, !3, !"event_writeback_dirty_folio", i1 false, i1 false}
!162 = !{ptr @__event_writeback_dirty_folio, !3, !"__event_writeback_dirty_folio", i1 false, i1 false}
!163 = !{ptr @event_folio_wait_writeback, !7, !"event_folio_wait_writeback", i1 false, i1 false}
!164 = !{ptr @__event_folio_wait_writeback, !7, !"__event_folio_wait_writeback", i1 false, i1 false}
!165 = !{ptr @event_class_writeback_dirty_inode_template, !166, !"event_class_writeback_dirty_inode_template", i1 false, i1 false}
!166 = !{!"../include/trace/events/writeback.h", i32 96, i32 1}
!167 = !{ptr @event_writeback_mark_inode_dirty, !11, !"event_writeback_mark_inode_dirty", i1 false, i1 false}
!168 = !{ptr @__event_writeback_mark_inode_dirty, !11, !"__event_writeback_mark_inode_dirty", i1 false, i1 false}
!169 = !{ptr @event_writeback_dirty_inode_start, !15, !"event_writeback_dirty_inode_start", i1 false, i1 false}
!170 = !{ptr @__event_writeback_dirty_inode_start, !15, !"__event_writeback_dirty_inode_start", i1 false, i1 false}
!171 = !{ptr @event_writeback_dirty_inode, !19, !"event_writeback_dirty_inode", i1 false, i1 false}
!172 = !{ptr @__event_writeback_dirty_inode, !19, !"__event_writeback_dirty_inode", i1 false, i1 false}
!173 = !{ptr @event_class_inode_foreign_history, !23, !"event_class_inode_foreign_history", i1 false, i1 false}
!174 = !{ptr @event_inode_foreign_history, !23, !"event_inode_foreign_history", i1 false, i1 false}
!175 = !{ptr @__event_inode_foreign_history, !23, !"__event_inode_foreign_history", i1 false, i1 false}
!176 = !{ptr @event_class_inode_switch_wbs, !27, !"event_class_inode_switch_wbs", i1 false, i1 false}
!177 = !{ptr @event_inode_switch_wbs, !27, !"event_inode_switch_wbs", i1 false, i1 false}
!178 = !{ptr @__event_inode_switch_wbs, !27, !"__event_inode_switch_wbs", i1 false, i1 false}
!179 = !{ptr @event_class_track_foreign_dirty, !31, !"event_class_track_foreign_dirty", i1 false, i1 false}
!180 = !{ptr @event_track_foreign_dirty, !31, !"event_track_foreign_dirty", i1 false, i1 false}
!181 = !{ptr @__event_track_foreign_dirty, !31, !"__event_track_foreign_dirty", i1 false, i1 false}
!182 = !{ptr @event_class_flush_foreign, !35, !"event_class_flush_foreign", i1 false, i1 false}
!183 = !{ptr @event_flush_foreign, !35, !"event_flush_foreign", i1 false, i1 false}
!184 = !{ptr @__event_flush_foreign, !35, !"__event_flush_foreign", i1 false, i1 false}
!185 = !{ptr @event_class_writeback_write_inode_template, !186, !"event_class_writeback_write_inode_template", i1 false, i1 false}
!186 = !{!"../include/trace/events/writeback.h", i32 304, i32 1}
!187 = !{ptr @event_writeback_write_inode_start, !39, !"event_writeback_write_inode_start", i1 false, i1 false}
!188 = !{ptr @__event_writeback_write_inode_start, !39, !"__event_writeback_write_inode_start", i1 false, i1 false}
!189 = !{ptr @event_writeback_write_inode, !43, !"event_writeback_write_inode", i1 false, i1 false}
!190 = !{ptr @__event_writeback_write_inode, !43, !"__event_writeback_write_inode", i1 false, i1 false}
!191 = !{ptr @event_class_writeback_work_class, !192, !"event_class_writeback_work_class", i1 false, i1 false}
!192 = !{!"../include/trace/events/writeback.h", i32 347, i32 1}
!193 = !{ptr @event_writeback_queue, !47, !"event_writeback_queue", i1 false, i1 false}
!194 = !{ptr @__event_writeback_queue, !47, !"__event_writeback_queue", i1 false, i1 false}
!195 = !{ptr @event_writeback_exec, !51, !"event_writeback_exec", i1 false, i1 false}
!196 = !{ptr @__event_writeback_exec, !51, !"__event_writeback_exec", i1 false, i1 false}
!197 = !{ptr @event_writeback_start, !55, !"event_writeback_start", i1 false, i1 false}
!198 = !{ptr @__event_writeback_start, !55, !"__event_writeback_start", i1 false, i1 false}
!199 = !{ptr @event_writeback_written, !59, !"event_writeback_written", i1 false, i1 false}
!200 = !{ptr @__event_writeback_written, !59, !"__event_writeback_written", i1 false, i1 false}
!201 = !{ptr @event_writeback_wait, !63, !"event_writeback_wait", i1 false, i1 false}
!202 = !{ptr @__event_writeback_wait, !63, !"__event_writeback_wait", i1 false, i1 false}
!203 = !{ptr @event_class_writeback_pages_written, !67, !"event_class_writeback_pages_written", i1 false, i1 false}
!204 = !{ptr @event_writeback_pages_written, !67, !"event_writeback_pages_written", i1 false, i1 false}
!205 = !{ptr @__event_writeback_pages_written, !67, !"__event_writeback_pages_written", i1 false, i1 false}
!206 = !{ptr @event_class_writeback_class, !207, !"event_class_writeback_class", i1 false, i1 false}
!207 = !{!"../include/trace/events/writeback.h", i32 407, i32 1}
!208 = !{ptr @event_writeback_wake_background, !71, !"event_writeback_wake_background", i1 false, i1 false}
!209 = !{ptr @__event_writeback_wake_background, !71, !"__event_writeback_wake_background", i1 false, i1 false}
!210 = !{ptr @event_class_writeback_bdi_register, !75, !"event_class_writeback_bdi_register", i1 false, i1 false}
!211 = !{ptr @event_writeback_bdi_register, !75, !"event_writeback_bdi_register", i1 false, i1 false}
!212 = !{ptr @__event_writeback_bdi_register, !75, !"__event_writeback_bdi_register", i1 false, i1 false}
!213 = !{ptr @event_class_wbc_class, !214, !"event_class_wbc_class", i1 false, i1 false}
!214 = !{!"../include/trace/events/writeback.h", i32 444, i32 1}
!215 = !{ptr @event_wbc_writepage, !79, !"event_wbc_writepage", i1 false, i1 false}
!216 = !{ptr @__event_wbc_writepage, !79, !"__event_wbc_writepage", i1 false, i1 false}
!217 = !{ptr @event_class_writeback_queue_io, !83, !"event_class_writeback_queue_io", i1 false, i1 false}
!218 = !{ptr @event_writeback_queue_io, !83, !"event_writeback_queue_io", i1 false, i1 false}
!219 = !{ptr @__event_writeback_queue_io, !83, !"__event_writeback_queue_io", i1 false, i1 false}
!220 = !{ptr @event_class_global_dirty_state, !87, !"event_class_global_dirty_state", i1 false, i1 false}
!221 = !{ptr @event_global_dirty_state, !87, !"event_global_dirty_state", i1 false, i1 false}
!222 = !{ptr @__event_global_dirty_state, !87, !"__event_global_dirty_state", i1 false, i1 false}
!223 = !{ptr @event_class_bdi_dirty_ratelimit, !91, !"event_class_bdi_dirty_ratelimit", i1 false, i1 false}
!224 = !{ptr @event_bdi_dirty_ratelimit, !91, !"event_bdi_dirty_ratelimit", i1 false, i1 false}
!225 = !{ptr @__event_bdi_dirty_ratelimit, !91, !"__event_bdi_dirty_ratelimit", i1 false, i1 false}
!226 = !{ptr @event_class_balance_dirty_pages, !95, !"event_class_balance_dirty_pages", i1 false, i1 false}
!227 = !{ptr @event_balance_dirty_pages, !95, !"event_balance_dirty_pages", i1 false, i1 false}
!228 = !{ptr @__event_balance_dirty_pages, !95, !"__event_balance_dirty_pages", i1 false, i1 false}
!229 = !{ptr @event_class_writeback_sb_inodes_requeue, !99, !"event_class_writeback_sb_inodes_requeue", i1 false, i1 false}
!230 = !{ptr @event_writeback_sb_inodes_requeue, !99, !"event_writeback_sb_inodes_requeue", i1 false, i1 false}
!231 = !{ptr @__event_writeback_sb_inodes_requeue, !99, !"__event_writeback_sb_inodes_requeue", i1 false, i1 false}
!232 = !{ptr @event_class_writeback_congest_waited_template, !233, !"event_class_writeback_congest_waited_template", i1 false, i1 false}
!233 = !{!"../include/trace/events/writeback.h", i32 738, i32 1}
!234 = !{ptr @event_writeback_congestion_wait, !103, !"event_writeback_congestion_wait", i1 false, i1 false}
!235 = !{ptr @__event_writeback_congestion_wait, !103, !"__event_writeback_congestion_wait", i1 false, i1 false}
!236 = !{ptr @event_class_writeback_single_inode_template, !237, !"event_class_writeback_single_inode_template", i1 false, i1 false}
!237 = !{!"../include/trace/events/writeback.h", i32 766, i32 1}
!238 = !{ptr @event_writeback_single_inode_start, !107, !"event_writeback_single_inode_start", i1 false, i1 false}
!239 = !{ptr @__event_writeback_single_inode_start, !107, !"__event_writeback_single_inode_start", i1 false, i1 false}
!240 = !{ptr @event_writeback_single_inode, !111, !"event_writeback_single_inode", i1 false, i1 false}
!241 = !{ptr @__event_writeback_single_inode, !111, !"__event_writeback_single_inode", i1 false, i1 false}
!242 = !{ptr @event_class_writeback_inode_template, !243, !"event_class_writeback_inode_template", i1 false, i1 false}
!243 = !{!"../include/trace/events/writeback.h", i32 826, i32 1}
!244 = !{ptr @event_writeback_lazytime, !115, !"event_writeback_lazytime", i1 false, i1 false}
!245 = !{ptr @__event_writeback_lazytime, !115, !"__event_writeback_lazytime", i1 false, i1 false}
!246 = !{ptr @event_writeback_lazytime_iput, !119, !"event_writeback_lazytime_iput", i1 false, i1 false}
!247 = !{ptr @__event_writeback_lazytime_iput, !119, !"__event_writeback_lazytime_iput", i1 false, i1 false}
!248 = !{ptr @event_writeback_dirty_inode_enqueue, !123, !"event_writeback_dirty_inode_enqueue", i1 false, i1 false}
!249 = !{ptr @__event_writeback_dirty_inode_enqueue, !123, !"__event_writeback_dirty_inode_enqueue", i1 false, i1 false}
!250 = !{ptr @event_sb_mark_inode_writeback, !127, !"event_sb_mark_inode_writeback", i1 false, i1 false}
!251 = !{ptr @__event_sb_mark_inode_writeback, !127, !"__event_sb_mark_inode_writeback", i1 false, i1 false}
!252 = !{ptr @event_sb_clear_inode_writeback, !131, !"event_sb_clear_inode_writeback", i1 false, i1 false}
!253 = !{ptr @__event_sb_clear_inode_writeback, !131, !"__event_sb_clear_inode_writeback", i1 false, i1 false}
!254 = !{ptr @__bpf_trace_tp_map_writeback_dirty_folio, !3, !"__bpf_trace_tp_map_writeback_dirty_folio", i1 false, i1 false}
!255 = !{ptr @__bpf_trace_tp_map_folio_wait_writeback, !7, !"__bpf_trace_tp_map_folio_wait_writeback", i1 false, i1 false}
!256 = !{ptr @__bpf_trace_tp_map_writeback_mark_inode_dirty, !11, !"__bpf_trace_tp_map_writeback_mark_inode_dirty", i1 false, i1 false}
!257 = !{ptr @__bpf_trace_tp_map_writeback_dirty_inode_start, !15, !"__bpf_trace_tp_map_writeback_dirty_inode_start", i1 false, i1 false}
!258 = !{ptr @__bpf_trace_tp_map_writeback_dirty_inode, !19, !"__bpf_trace_tp_map_writeback_dirty_inode", i1 false, i1 false}
!259 = !{ptr @__bpf_trace_tp_map_inode_foreign_history, !23, !"__bpf_trace_tp_map_inode_foreign_history", i1 false, i1 false}
!260 = !{ptr @__bpf_trace_tp_map_inode_switch_wbs, !27, !"__bpf_trace_tp_map_inode_switch_wbs", i1 false, i1 false}
!261 = !{ptr @__bpf_trace_tp_map_track_foreign_dirty, !31, !"__bpf_trace_tp_map_track_foreign_dirty", i1 false, i1 false}
!262 = !{ptr @__bpf_trace_tp_map_flush_foreign, !35, !"__bpf_trace_tp_map_flush_foreign", i1 false, i1 false}
!263 = !{ptr @__bpf_trace_tp_map_writeback_write_inode_start, !39, !"__bpf_trace_tp_map_writeback_write_inode_start", i1 false, i1 false}
!264 = !{ptr @__bpf_trace_tp_map_writeback_write_inode, !43, !"__bpf_trace_tp_map_writeback_write_inode", i1 false, i1 false}
!265 = !{ptr @__bpf_trace_tp_map_writeback_queue, !47, !"__bpf_trace_tp_map_writeback_queue", i1 false, i1 false}
!266 = !{ptr @__bpf_trace_tp_map_writeback_exec, !51, !"__bpf_trace_tp_map_writeback_exec", i1 false, i1 false}
!267 = !{ptr @__bpf_trace_tp_map_writeback_start, !55, !"__bpf_trace_tp_map_writeback_start", i1 false, i1 false}
!268 = !{ptr @__bpf_trace_tp_map_writeback_written, !59, !"__bpf_trace_tp_map_writeback_written", i1 false, i1 false}
!269 = !{ptr @__bpf_trace_tp_map_writeback_wait, !63, !"__bpf_trace_tp_map_writeback_wait", i1 false, i1 false}
!270 = !{ptr @__bpf_trace_tp_map_writeback_pages_written, !67, !"__bpf_trace_tp_map_writeback_pages_written", i1 false, i1 false}
!271 = !{ptr @__bpf_trace_tp_map_writeback_wake_background, !71, !"__bpf_trace_tp_map_writeback_wake_background", i1 false, i1 false}
!272 = !{ptr @__bpf_trace_tp_map_writeback_bdi_register, !75, !"__bpf_trace_tp_map_writeback_bdi_register", i1 false, i1 false}
!273 = !{ptr @__bpf_trace_tp_map_wbc_writepage, !79, !"__bpf_trace_tp_map_wbc_writepage", i1 false, i1 false}
!274 = !{ptr @__bpf_trace_tp_map_writeback_queue_io, !83, !"__bpf_trace_tp_map_writeback_queue_io", i1 false, i1 false}
!275 = !{ptr @__bpf_trace_tp_map_global_dirty_state, !87, !"__bpf_trace_tp_map_global_dirty_state", i1 false, i1 false}
!276 = !{ptr @__bpf_trace_tp_map_bdi_dirty_ratelimit, !91, !"__bpf_trace_tp_map_bdi_dirty_ratelimit", i1 false, i1 false}
!277 = !{ptr @__bpf_trace_tp_map_balance_dirty_pages, !95, !"__bpf_trace_tp_map_balance_dirty_pages", i1 false, i1 false}
!278 = !{ptr @__bpf_trace_tp_map_writeback_sb_inodes_requeue, !99, !"__bpf_trace_tp_map_writeback_sb_inodes_requeue", i1 false, i1 false}
!279 = !{ptr @__bpf_trace_tp_map_writeback_congestion_wait, !103, !"__bpf_trace_tp_map_writeback_congestion_wait", i1 false, i1 false}
!280 = !{ptr @__bpf_trace_tp_map_writeback_single_inode_start, !107, !"__bpf_trace_tp_map_writeback_single_inode_start", i1 false, i1 false}
!281 = !{ptr @__bpf_trace_tp_map_writeback_single_inode, !111, !"__bpf_trace_tp_map_writeback_single_inode", i1 false, i1 false}
!282 = !{ptr @__bpf_trace_tp_map_writeback_lazytime, !115, !"__bpf_trace_tp_map_writeback_lazytime", i1 false, i1 false}
!283 = !{ptr @__bpf_trace_tp_map_writeback_lazytime_iput, !119, !"__bpf_trace_tp_map_writeback_lazytime_iput", i1 false, i1 false}
!284 = !{ptr @__bpf_trace_tp_map_writeback_dirty_inode_enqueue, !123, !"__bpf_trace_tp_map_writeback_dirty_inode_enqueue", i1 false, i1 false}
!285 = !{ptr @__bpf_trace_tp_map_sb_mark_inode_writeback, !127, !"__bpf_trace_tp_map_sb_mark_inode_writeback", i1 false, i1 false}
!286 = !{ptr @__bpf_trace_tp_map_sb_clear_inode_writeback, !131, !"__bpf_trace_tp_map_sb_clear_inode_writeback", i1 false, i1 false}
!287 = !{ptr @__ksymtab___tracepoint_wbc_writepage, !288, !"__ksymtab___tracepoint_wbc_writepage", i1 false, i1 false}
!288 = !{!"../fs/fs-writeback.c", i32 83, i32 1}
!289 = !{ptr @__ksymtab___traceiter_wbc_writepage, !288, !"__ksymtab___traceiter_wbc_writepage", i1 false, i1 false}
!290 = !{ptr @__ksymtab___SCK__tp_func_wbc_writepage, !288, !"__ksymtab___SCK__tp_func_wbc_writepage", i1 false, i1 false}
!291 = !{ptr @.str.8, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../fs/fs-writeback.c", i32 190, i32 2}
!293 = !{ptr @__ksymtab___inode_attach_wb, !294, !"__ksymtab___inode_attach_wb", i1 false, i1 false}
!294 = !{!"../fs/fs-writeback.c", i32 267, i32 1}
!295 = !{ptr @cleanup_offline_cgwb.__key, !296, !"__key", i1 false, i1 false}
!296 = !{!"../fs/fs-writeback.c", i32 674, i32 2}
!297 = !{ptr @.str.9, !296, !"<string literal>", i1 false, i1 false}
!298 = !{ptr @__ksymtab_wbc_attach_and_unlock_inode, !299, !"__ksymtab_wbc_attach_and_unlock_inode", i1 false, i1 false}
!299 = !{!"../fs/fs-writeback.c", i32 721, i32 1}
!300 = !{ptr @__ksymtab_wbc_detach_inode, !301, !"__ksymtab_wbc_detach_inode", i1 false, i1 false}
!301 = !{!"../fs/fs-writeback.c", i32 844, i32 1}
!302 = !{ptr @__ksymtab_wbc_account_cgroup_owner, !303, !"__ksymtab_wbc_account_cgroup_owner", i1 false, i1 false}
!303 = !{!"../fs/fs-writeback.c", i32 894, i32 1}
!304 = !{ptr @__ksymtab_inode_congested, !305, !"__ksymtab_inode_congested", i1 false, i1 false}
!305 = !{!"../fs/fs-writeback.c", i32 931, i32 1}
!306 = !{ptr @__initcall__kmod_fs_writeback__489_1156_cgroup_writeback_init5, !307, !"__initcall__kmod_fs_writeback__489_1156_cgroup_writeback_init5", i1 false, i1 false}
!307 = !{!"../fs/fs-writeback.c", i32 1156, i32 1}
!308 = !{ptr @__ksymtab_inode_io_list_del, !309, !"__ksymtab_inode_io_list_del", i1 false, i1 false}
!309 = !{!"../fs/fs-writeback.c", i32 1282, i32 1}
!310 = !{ptr @.str.10, !311, !"<string literal>", i1 false, i1 false}
!311 = !{!"../fs/fs-writeback.c", i32 2236, i32 18}
!312 = distinct !{null, !313, !"__warned", i1 false, i1 false}
!313 = !{!"../fs/fs-writeback.c", i32 2308, i32 2}
!314 = !{ptr @.str.11, !313, !"<string literal>", i1 false, i1 false}
!315 = !{ptr @__initcall__kmod_fs_writeback__502_2352_start_dirtytime_writeback6, !316, !"__initcall__kmod_fs_writeback__502_2352_start_dirtytime_writeback6", i1 false, i1 false}
!316 = !{!"../fs/fs-writeback.c", i32 2352, i32 1}
!317 = distinct !{null, !318, !"__already_done", i1 false, i1 false}
!318 = !{!"../fs/fs-writeback.c", i32 2421, i32 3}
!319 = !{ptr @__ksymtab___mark_inode_dirty, !320, !"__ksymtab___mark_inode_dirty", i1 false, i1 false}
!320 = !{!"../fs/fs-writeback.c", i32 2508, i32 1}
!321 = !{ptr @__ksymtab_writeback_inodes_sb_nr, !322, !"__ksymtab_writeback_inodes_sb_nr", i1 false, i1 false}
!322 = !{!"../fs/fs-writeback.c", i32 2642, i32 1}
!323 = !{ptr @__ksymtab_writeback_inodes_sb, !324, !"__ksymtab_writeback_inodes_sb", i1 false, i1 false}
!324 = !{!"../fs/fs-writeback.c", i32 2657, i32 1}
!325 = !{ptr @__ksymtab_try_to_writeback_inodes_sb, !326, !"__ksymtab_try_to_writeback_inodes_sb", i1 false, i1 false}
!326 = !{!"../fs/fs-writeback.c", i32 2674, i32 1}
!327 = !{ptr @__ksymtab_sync_inodes_sb, !328, !"__ksymtab_sync_inodes_sb", i1 false, i1 false}
!328 = !{!"../fs/fs-writeback.c", i32 2714, i32 1}
!329 = !{ptr @__ksymtab_write_inode_now, !330, !"__ksymtab_write_inode_now", i1 false, i1 false}
!330 = !{!"../fs/fs-writeback.c", i32 2741, i32 1}
!331 = !{ptr @__ksymtab_sync_inode_metadata, !332, !"__ksymtab_sync_inode_metadata", i1 false, i1 false}
!332 = !{!"../fs/fs-writeback.c", i32 2761, i32 1}
!333 = !{ptr @isw_wq, !334, !"isw_wq", i1 false, i1 false}
!334 = !{!"../fs/fs-writeback.c", i32 236, i32 33}
!335 = !{ptr @__tpstrtab_writeback_dirty_folio, !3, !"__tpstrtab_writeback_dirty_folio", i1 false, i1 false}
!336 = !{ptr @__tpstrtab_folio_wait_writeback, !7, !"__tpstrtab_folio_wait_writeback", i1 false, i1 false}
!337 = !{ptr @__tpstrtab_writeback_mark_inode_dirty, !11, !"__tpstrtab_writeback_mark_inode_dirty", i1 false, i1 false}
!338 = !{ptr @__tpstrtab_writeback_dirty_inode_start, !15, !"__tpstrtab_writeback_dirty_inode_start", i1 false, i1 false}
!339 = !{ptr @__tpstrtab_writeback_dirty_inode, !19, !"__tpstrtab_writeback_dirty_inode", i1 false, i1 false}
!340 = !{ptr @__tpstrtab_inode_foreign_history, !23, !"__tpstrtab_inode_foreign_history", i1 false, i1 false}
!341 = !{ptr @__tpstrtab_inode_switch_wbs, !27, !"__tpstrtab_inode_switch_wbs", i1 false, i1 false}
!342 = !{ptr @__tpstrtab_track_foreign_dirty, !31, !"__tpstrtab_track_foreign_dirty", i1 false, i1 false}
!343 = !{ptr @__tpstrtab_flush_foreign, !35, !"__tpstrtab_flush_foreign", i1 false, i1 false}
!344 = !{ptr @__tpstrtab_writeback_write_inode_start, !39, !"__tpstrtab_writeback_write_inode_start", i1 false, i1 false}
!345 = !{ptr @__tpstrtab_writeback_write_inode, !43, !"__tpstrtab_writeback_write_inode", i1 false, i1 false}
!346 = !{ptr @__tpstrtab_writeback_queue, !47, !"__tpstrtab_writeback_queue", i1 false, i1 false}
!347 = !{ptr @__tpstrtab_writeback_exec, !51, !"__tpstrtab_writeback_exec", i1 false, i1 false}
!348 = !{ptr @__tpstrtab_writeback_start, !55, !"__tpstrtab_writeback_start", i1 false, i1 false}
!349 = !{ptr @__tpstrtab_writeback_written, !59, !"__tpstrtab_writeback_written", i1 false, i1 false}
!350 = !{ptr @__tpstrtab_writeback_wait, !63, !"__tpstrtab_writeback_wait", i1 false, i1 false}
!351 = !{ptr @__tpstrtab_writeback_pages_written, !67, !"__tpstrtab_writeback_pages_written", i1 false, i1 false}
!352 = !{ptr @__tpstrtab_writeback_wake_background, !71, !"__tpstrtab_writeback_wake_background", i1 false, i1 false}
!353 = !{ptr @__tpstrtab_writeback_bdi_register, !75, !"__tpstrtab_writeback_bdi_register", i1 false, i1 false}
!354 = !{ptr @__tpstrtab_wbc_writepage, !79, !"__tpstrtab_wbc_writepage", i1 false, i1 false}
!355 = !{ptr @__tpstrtab_writeback_queue_io, !83, !"__tpstrtab_writeback_queue_io", i1 false, i1 false}
!356 = !{ptr @__tpstrtab_global_dirty_state, !87, !"__tpstrtab_global_dirty_state", i1 false, i1 false}
!357 = !{ptr @__tpstrtab_bdi_dirty_ratelimit, !91, !"__tpstrtab_bdi_dirty_ratelimit", i1 false, i1 false}
!358 = !{ptr @__tpstrtab_balance_dirty_pages, !95, !"__tpstrtab_balance_dirty_pages", i1 false, i1 false}
!359 = !{ptr @__tpstrtab_writeback_sb_inodes_requeue, !99, !"__tpstrtab_writeback_sb_inodes_requeue", i1 false, i1 false}
!360 = !{ptr @__tpstrtab_writeback_congestion_wait, !103, !"__tpstrtab_writeback_congestion_wait", i1 false, i1 false}
!361 = !{ptr @__tpstrtab_writeback_single_inode_start, !107, !"__tpstrtab_writeback_single_inode_start", i1 false, i1 false}
!362 = !{ptr @__tpstrtab_writeback_single_inode, !111, !"__tpstrtab_writeback_single_inode", i1 false, i1 false}
!363 = !{ptr @__tpstrtab_writeback_lazytime, !115, !"__tpstrtab_writeback_lazytime", i1 false, i1 false}
!364 = !{ptr @__tpstrtab_writeback_lazytime_iput, !119, !"__tpstrtab_writeback_lazytime_iput", i1 false, i1 false}
!365 = !{ptr @__tpstrtab_writeback_dirty_inode_enqueue, !123, !"__tpstrtab_writeback_dirty_inode_enqueue", i1 false, i1 false}
!366 = !{ptr @__tpstrtab_sb_mark_inode_writeback, !127, !"__tpstrtab_sb_mark_inode_writeback", i1 false, i1 false}
!367 = !{ptr @__tpstrtab_sb_clear_inode_writeback, !131, !"__tpstrtab_sb_clear_inode_writeback", i1 false, i1 false}
!368 = !{ptr @str__writeback__trace_system_name, !369, !"str__writeback__trace_system_name", i1 false, i1 false}
!369 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!370 = !{ptr @.str.12, !160, !"<string literal>", i1 false, i1 false}
!371 = !{ptr @.str.13, !160, !"<string literal>", i1 false, i1 false}
!372 = !{ptr @.str.14, !160, !"<string literal>", i1 false, i1 false}
!373 = !{ptr @.str.15, !160, !"<string literal>", i1 false, i1 false}
!374 = !{ptr @.str.16, !160, !"<string literal>", i1 false, i1 false}
!375 = !{ptr @.str.17, !160, !"<string literal>", i1 false, i1 false}
!376 = !{ptr @trace_event_fields_writeback_folio_template, !160, !"trace_event_fields_writeback_folio_template", i1 false, i1 false}
!377 = !{ptr @trace_event_type_funcs_writeback_folio_template, !160, !"trace_event_type_funcs_writeback_folio_template", i1 false, i1 false}
!378 = !{ptr @.str.18, !160, !"<string literal>", i1 false, i1 false}
!379 = !{ptr @print_fmt_writeback_folio_template, !160, !"print_fmt_writeback_folio_template", i1 false, i1 false}
!380 = !{ptr @.str.19, !166, !"<string literal>", i1 false, i1 false}
!381 = !{ptr @.str.20, !166, !"<string literal>", i1 false, i1 false}
!382 = !{ptr @trace_event_fields_writeback_dirty_inode_template, !166, !"trace_event_fields_writeback_dirty_inode_template", i1 false, i1 false}
!383 = !{ptr @trace_event_type_funcs_writeback_dirty_inode_template, !166, !"trace_event_type_funcs_writeback_dirty_inode_template", i1 false, i1 false}
!384 = !{ptr @.str.21, !166, !"<string literal>", i1 false, i1 false}
!385 = !{ptr @.str.22, !166, !"<string literal>", i1 false, i1 false}
!386 = !{ptr @.str.23, !166, !"<string literal>", i1 false, i1 false}
!387 = !{ptr @.str.24, !166, !"<string literal>", i1 false, i1 false}
!388 = !{ptr @.str.25, !166, !"<string literal>", i1 false, i1 false}
!389 = !{ptr @.str.26, !166, !"<string literal>", i1 false, i1 false}
!390 = !{ptr @.str.27, !166, !"<string literal>", i1 false, i1 false}
!391 = !{ptr @.str.28, !166, !"<string literal>", i1 false, i1 false}
!392 = !{ptr @.str.29, !166, !"<string literal>", i1 false, i1 false}
!393 = !{ptr @.str.30, !166, !"<string literal>", i1 false, i1 false}
!394 = !{ptr @.str.31, !166, !"<string literal>", i1 false, i1 false}
!395 = !{ptr @trace_raw_output_writeback_dirty_inode_template.__flags, !166, !"__flags", i1 false, i1 false}
!396 = !{ptr @.str.32, !166, !"<string literal>", i1 false, i1 false}
!397 = !{ptr @trace_raw_output_writeback_dirty_inode_template.__flags.33, !166, !"__flags", i1 false, i1 false}
!398 = !{ptr @print_fmt_writeback_dirty_inode_template, !166, !"print_fmt_writeback_dirty_inode_template", i1 false, i1 false}
!399 = !{ptr @.str.34, !23, !"<string literal>", i1 false, i1 false}
!400 = !{ptr @.str.35, !23, !"<string literal>", i1 false, i1 false}
!401 = !{ptr @.str.36, !23, !"<string literal>", i1 false, i1 false}
!402 = !{ptr @trace_event_fields_inode_foreign_history, !23, !"trace_event_fields_inode_foreign_history", i1 false, i1 false}
!403 = !{ptr @trace_event_type_funcs_inode_foreign_history, !23, !"trace_event_type_funcs_inode_foreign_history", i1 false, i1 false}
!404 = !{ptr @.str.37, !23, !"<string literal>", i1 false, i1 false}
!405 = !{ptr @print_fmt_inode_foreign_history, !23, !"print_fmt_inode_foreign_history", i1 false, i1 false}
!406 = !{ptr @.str.38, !27, !"<string literal>", i1 false, i1 false}
!407 = !{ptr @.str.39, !27, !"<string literal>", i1 false, i1 false}
!408 = !{ptr @trace_event_fields_inode_switch_wbs, !27, !"trace_event_fields_inode_switch_wbs", i1 false, i1 false}
!409 = !{ptr @trace_event_type_funcs_inode_switch_wbs, !27, !"trace_event_type_funcs_inode_switch_wbs", i1 false, i1 false}
!410 = !{ptr @.str.40, !27, !"<string literal>", i1 false, i1 false}
!411 = !{ptr @print_fmt_inode_switch_wbs, !27, !"print_fmt_inode_switch_wbs", i1 false, i1 false}
!412 = !{ptr @.str.41, !413, !"<string literal>", i1 false, i1 false}
!413 = !{!"../include/linux/memcontrol.h", i32 537, i32 2}
!414 = !{ptr @.str.42, !415, !"<string literal>", i1 false, i1 false}
!415 = !{!"../include/linux/memcontrol.h", i32 538, i32 2}
!416 = !{ptr @.str.43, !417, !"<string literal>", i1 false, i1 false}
!417 = !{!"../include/linux/memcontrol.h", i32 417, i32 2}
!418 = distinct !{null, !419, !"<string literal>", i1 false, i1 false}
!419 = !{!"../include/linux/memcontrol.h", i32 418, i32 2}
!420 = distinct !{null, !421, !"<string literal>", i1 false, i1 false}
!421 = !{!"../include/linux/memcontrol.h", i32 419, i32 2}
!422 = !{ptr @.str.46, !423, !"<string literal>", i1 false, i1 false}
!423 = !{!"../include/linux/page-flags.h", i32 260, i32 2}
!424 = distinct !{null, !425, !"<string literal>", i1 false, i1 false}
!425 = !{!"../include/linux/page-flags.h", i32 261, i32 2}
!426 = distinct !{null, !427, !"<string literal>", i1 false, i1 false}
!427 = !{!"../include/linux/memcontrol.h", i32 398, i32 2}
!428 = !{ptr @.str.49, !31, !"<string literal>", i1 false, i1 false}
!429 = !{ptr @.str.50, !31, !"<string literal>", i1 false, i1 false}
!430 = !{ptr @.str.51, !31, !"<string literal>", i1 false, i1 false}
!431 = !{ptr @.str.52, !31, !"<string literal>", i1 false, i1 false}
!432 = !{ptr @trace_event_fields_track_foreign_dirty, !31, !"trace_event_fields_track_foreign_dirty", i1 false, i1 false}
!433 = !{ptr @trace_event_type_funcs_track_foreign_dirty, !31, !"trace_event_type_funcs_track_foreign_dirty", i1 false, i1 false}
!434 = !{ptr @.str.53, !31, !"<string literal>", i1 false, i1 false}
!435 = !{ptr @print_fmt_track_foreign_dirty, !31, !"print_fmt_track_foreign_dirty", i1 false, i1 false}
!436 = !{ptr @.str.54, !35, !"<string literal>", i1 false, i1 false}
!437 = !{ptr @.str.55, !35, !"<string literal>", i1 false, i1 false}
!438 = !{ptr @trace_event_fields_flush_foreign, !35, !"trace_event_fields_flush_foreign", i1 false, i1 false}
!439 = !{ptr @trace_event_type_funcs_flush_foreign, !35, !"trace_event_type_funcs_flush_foreign", i1 false, i1 false}
!440 = !{ptr @.str.56, !35, !"<string literal>", i1 false, i1 false}
!441 = !{ptr @print_fmt_flush_foreign, !35, !"print_fmt_flush_foreign", i1 false, i1 false}
!442 = !{ptr @.str.57, !186, !"<string literal>", i1 false, i1 false}
!443 = !{ptr @.str.58, !186, !"<string literal>", i1 false, i1 false}
!444 = !{ptr @trace_event_fields_writeback_write_inode_template, !186, !"trace_event_fields_writeback_write_inode_template", i1 false, i1 false}
!445 = !{ptr @trace_event_type_funcs_writeback_write_inode_template, !186, !"trace_event_type_funcs_writeback_write_inode_template", i1 false, i1 false}
!446 = !{ptr @.str.59, !186, !"<string literal>", i1 false, i1 false}
!447 = !{ptr @print_fmt_writeback_write_inode_template, !186, !"print_fmt_writeback_write_inode_template", i1 false, i1 false}
!448 = !{ptr @.str.60, !192, !"<string literal>", i1 false, i1 false}
!449 = !{ptr @.str.61, !192, !"<string literal>", i1 false, i1 false}
!450 = !{ptr @.str.62, !192, !"<string literal>", i1 false, i1 false}
!451 = !{ptr @.str.63, !192, !"<string literal>", i1 false, i1 false}
!452 = !{ptr @.str.64, !192, !"<string literal>", i1 false, i1 false}
!453 = !{ptr @.str.65, !192, !"<string literal>", i1 false, i1 false}
!454 = !{ptr @.str.66, !192, !"<string literal>", i1 false, i1 false}
!455 = !{ptr @.str.67, !192, !"<string literal>", i1 false, i1 false}
!456 = !{ptr @trace_event_fields_writeback_work_class, !192, !"trace_event_fields_writeback_work_class", i1 false, i1 false}
!457 = !{ptr @trace_event_type_funcs_writeback_work_class, !192, !"trace_event_type_funcs_writeback_work_class", i1 false, i1 false}
!458 = !{ptr @.str.68, !192, !"<string literal>", i1 false, i1 false}
!459 = !{ptr @.str.69, !192, !"<string literal>", i1 false, i1 false}
!460 = !{ptr @.str.70, !192, !"<string literal>", i1 false, i1 false}
!461 = !{ptr @.str.71, !192, !"<string literal>", i1 false, i1 false}
!462 = !{ptr @.str.72, !192, !"<string literal>", i1 false, i1 false}
!463 = !{ptr @.str.73, !192, !"<string literal>", i1 false, i1 false}
!464 = !{ptr @.str.74, !192, !"<string literal>", i1 false, i1 false}
!465 = !{ptr @.str.75, !192, !"<string literal>", i1 false, i1 false}
!466 = !{ptr @.str.76, !192, !"<string literal>", i1 false, i1 false}
!467 = !{ptr @trace_raw_output_writeback_work_class.symbols, !192, !"symbols", i1 false, i1 false}
!468 = !{ptr @print_fmt_writeback_work_class, !192, !"print_fmt_writeback_work_class", i1 false, i1 false}
!469 = !{ptr @.str.77, !67, !"<string literal>", i1 false, i1 false}
!470 = !{ptr @trace_event_fields_writeback_pages_written, !67, !"trace_event_fields_writeback_pages_written", i1 false, i1 false}
!471 = !{ptr @trace_event_type_funcs_writeback_pages_written, !67, !"trace_event_type_funcs_writeback_pages_written", i1 false, i1 false}
!472 = !{ptr @.str.78, !67, !"<string literal>", i1 false, i1 false}
!473 = !{ptr @print_fmt_writeback_pages_written, !67, !"print_fmt_writeback_pages_written", i1 false, i1 false}
!474 = !{ptr @trace_event_fields_writeback_class, !207, !"trace_event_fields_writeback_class", i1 false, i1 false}
!475 = !{ptr @trace_event_type_funcs_writeback_class, !207, !"trace_event_type_funcs_writeback_class", i1 false, i1 false}
!476 = !{ptr @.str.79, !207, !"<string literal>", i1 false, i1 false}
!477 = !{ptr @print_fmt_writeback_class, !207, !"print_fmt_writeback_class", i1 false, i1 false}
!478 = !{ptr @trace_event_fields_writeback_bdi_register, !75, !"trace_event_fields_writeback_bdi_register", i1 false, i1 false}
!479 = !{ptr @trace_event_type_funcs_writeback_bdi_register, !75, !"trace_event_type_funcs_writeback_bdi_register", i1 false, i1 false}
!480 = !{ptr @.str.80, !75, !"<string literal>", i1 false, i1 false}
!481 = !{ptr @print_fmt_writeback_bdi_register, !75, !"print_fmt_writeback_bdi_register", i1 false, i1 false}
!482 = !{ptr @.str.81, !214, !"<string literal>", i1 false, i1 false}
!483 = !{ptr @.str.82, !214, !"<string literal>", i1 false, i1 false}
!484 = !{ptr @.str.83, !214, !"<string literal>", i1 false, i1 false}
!485 = !{ptr @.str.84, !214, !"<string literal>", i1 false, i1 false}
!486 = !{ptr @.str.85, !214, !"<string literal>", i1 false, i1 false}
!487 = !{ptr @trace_event_fields_wbc_class, !214, !"trace_event_fields_wbc_class", i1 false, i1 false}
!488 = !{ptr @trace_event_type_funcs_wbc_class, !214, !"trace_event_type_funcs_wbc_class", i1 false, i1 false}
!489 = !{ptr @.str.86, !214, !"<string literal>", i1 false, i1 false}
!490 = !{ptr @print_fmt_wbc_class, !214, !"print_fmt_wbc_class", i1 false, i1 false}
!491 = !{ptr @.str.87, !83, !"<string literal>", i1 false, i1 false}
!492 = !{ptr @.str.88, !83, !"<string literal>", i1 false, i1 false}
!493 = !{ptr @.str.89, !83, !"<string literal>", i1 false, i1 false}
!494 = !{ptr @trace_event_fields_writeback_queue_io, !83, !"trace_event_fields_writeback_queue_io", i1 false, i1 false}
!495 = !{ptr @trace_event_type_funcs_writeback_queue_io, !83, !"trace_event_type_funcs_writeback_queue_io", i1 false, i1 false}
!496 = !{ptr @.str.90, !83, !"<string literal>", i1 false, i1 false}
!497 = !{ptr @trace_raw_output_writeback_queue_io.symbols, !83, !"symbols", i1 false, i1 false}
!498 = !{ptr @print_fmt_writeback_queue_io, !83, !"print_fmt_writeback_queue_io", i1 false, i1 false}
!499 = distinct !{null, !500, !"__already_done", i1 false, i1 false}
!500 = !{!"../include/linux/vmstat.h", i32 202, i32 2}
!501 = distinct !{null, !500, !"<string literal>", i1 false, i1 false}
!502 = !{ptr @.str.92, !87, !"<string literal>", i1 false, i1 false}
!503 = !{ptr @.str.93, !87, !"<string literal>", i1 false, i1 false}
!504 = !{ptr @.str.94, !87, !"<string literal>", i1 false, i1 false}
!505 = !{ptr @.str.95, !87, !"<string literal>", i1 false, i1 false}
!506 = !{ptr @.str.96, !87, !"<string literal>", i1 false, i1 false}
!507 = !{ptr @.str.97, !87, !"<string literal>", i1 false, i1 false}
!508 = !{ptr @.str.98, !87, !"<string literal>", i1 false, i1 false}
!509 = !{ptr @trace_event_fields_global_dirty_state, !87, !"trace_event_fields_global_dirty_state", i1 false, i1 false}
!510 = !{ptr @trace_event_type_funcs_global_dirty_state, !87, !"trace_event_type_funcs_global_dirty_state", i1 false, i1 false}
!511 = !{ptr @.str.99, !87, !"<string literal>", i1 false, i1 false}
!512 = !{ptr @print_fmt_global_dirty_state, !87, !"print_fmt_global_dirty_state", i1 false, i1 false}
!513 = !{ptr @.str.100, !91, !"<string literal>", i1 false, i1 false}
!514 = !{ptr @.str.101, !91, !"<string literal>", i1 false, i1 false}
!515 = !{ptr @.str.102, !91, !"<string literal>", i1 false, i1 false}
!516 = !{ptr @.str.103, !91, !"<string literal>", i1 false, i1 false}
!517 = !{ptr @.str.104, !91, !"<string literal>", i1 false, i1 false}
!518 = !{ptr @.str.105, !91, !"<string literal>", i1 false, i1 false}
!519 = !{ptr @.str.106, !91, !"<string literal>", i1 false, i1 false}
!520 = !{ptr @trace_event_fields_bdi_dirty_ratelimit, !91, !"trace_event_fields_bdi_dirty_ratelimit", i1 false, i1 false}
!521 = !{ptr @trace_event_type_funcs_bdi_dirty_ratelimit, !91, !"trace_event_type_funcs_bdi_dirty_ratelimit", i1 false, i1 false}
!522 = !{ptr @.str.107, !91, !"<string literal>", i1 false, i1 false}
!523 = !{ptr @print_fmt_bdi_dirty_ratelimit, !91, !"print_fmt_bdi_dirty_ratelimit", i1 false, i1 false}
!524 = !{ptr @.str.108, !95, !"<string literal>", i1 false, i1 false}
!525 = !{ptr @.str.109, !95, !"<string literal>", i1 false, i1 false}
!526 = !{ptr @.str.110, !95, !"<string literal>", i1 false, i1 false}
!527 = !{ptr @.str.111, !95, !"<string literal>", i1 false, i1 false}
!528 = !{ptr @.str.112, !95, !"<string literal>", i1 false, i1 false}
!529 = !{ptr @.str.113, !95, !"<string literal>", i1 false, i1 false}
!530 = !{ptr @.str.114, !95, !"<string literal>", i1 false, i1 false}
!531 = !{ptr @.str.115, !95, !"<string literal>", i1 false, i1 false}
!532 = !{ptr @.str.116, !95, !"<string literal>", i1 false, i1 false}
!533 = !{ptr @.str.117, !95, !"<string literal>", i1 false, i1 false}
!534 = !{ptr @.str.118, !95, !"<string literal>", i1 false, i1 false}
!535 = !{ptr @trace_event_fields_balance_dirty_pages, !95, !"trace_event_fields_balance_dirty_pages", i1 false, i1 false}
!536 = !{ptr @trace_event_type_funcs_balance_dirty_pages, !95, !"trace_event_type_funcs_balance_dirty_pages", i1 false, i1 false}
!537 = !{ptr @.str.119, !95, !"<string literal>", i1 false, i1 false}
!538 = !{ptr @print_fmt_balance_dirty_pages, !95, !"print_fmt_balance_dirty_pages", i1 false, i1 false}
!539 = !{ptr @.str.120, !99, !"<string literal>", i1 false, i1 false}
!540 = !{ptr @trace_event_fields_writeback_sb_inodes_requeue, !99, !"trace_event_fields_writeback_sb_inodes_requeue", i1 false, i1 false}
!541 = !{ptr @trace_event_type_funcs_writeback_sb_inodes_requeue, !99, !"trace_event_type_funcs_writeback_sb_inodes_requeue", i1 false, i1 false}
!542 = !{ptr @.str.121, !99, !"<string literal>", i1 false, i1 false}
!543 = !{ptr @trace_raw_output_writeback_sb_inodes_requeue.__flags, !99, !"__flags", i1 false, i1 false}
!544 = !{ptr @print_fmt_writeback_sb_inodes_requeue, !99, !"print_fmt_writeback_sb_inodes_requeue", i1 false, i1 false}
!545 = !{ptr @.str.122, !233, !"<string literal>", i1 false, i1 false}
!546 = !{ptr @.str.123, !233, !"<string literal>", i1 false, i1 false}
!547 = !{ptr @trace_event_fields_writeback_congest_waited_template, !233, !"trace_event_fields_writeback_congest_waited_template", i1 false, i1 false}
!548 = !{ptr @trace_event_type_funcs_writeback_congest_waited_template, !233, !"trace_event_type_funcs_writeback_congest_waited_template", i1 false, i1 false}
!549 = !{ptr @.str.124, !233, !"<string literal>", i1 false, i1 false}
!550 = !{ptr @print_fmt_writeback_congest_waited_template, !233, !"print_fmt_writeback_congest_waited_template", i1 false, i1 false}
!551 = !{ptr @.str.125, !237, !"<string literal>", i1 false, i1 false}
!552 = !{ptr @.str.126, !237, !"<string literal>", i1 false, i1 false}
!553 = !{ptr @trace_event_fields_writeback_single_inode_template, !237, !"trace_event_fields_writeback_single_inode_template", i1 false, i1 false}
!554 = !{ptr @trace_event_type_funcs_writeback_single_inode_template, !237, !"trace_event_type_funcs_writeback_single_inode_template", i1 false, i1 false}
!555 = !{ptr @.str.127, !237, !"<string literal>", i1 false, i1 false}
!556 = !{ptr @trace_raw_output_writeback_single_inode_template.__flags, !237, !"__flags", i1 false, i1 false}
!557 = !{ptr @print_fmt_writeback_single_inode_template, !237, !"print_fmt_writeback_single_inode_template", i1 false, i1 false}
!558 = !{ptr @.str.128, !243, !"<string literal>", i1 false, i1 false}
!559 = !{ptr @.str.129, !243, !"<string literal>", i1 false, i1 false}
!560 = !{ptr @.str.130, !243, !"<string literal>", i1 false, i1 false}
!561 = !{ptr @trace_event_fields_writeback_inode_template, !243, !"trace_event_fields_writeback_inode_template", i1 false, i1 false}
!562 = !{ptr @trace_event_type_funcs_writeback_inode_template, !243, !"trace_event_type_funcs_writeback_inode_template", i1 false, i1 false}
!563 = !{ptr @.str.131, !243, !"<string literal>", i1 false, i1 false}
!564 = !{ptr @trace_raw_output_writeback_inode_template.__flags, !243, !"__flags", i1 false, i1 false}
!565 = !{ptr @print_fmt_writeback_inode_template, !243, !"print_fmt_writeback_inode_template", i1 false, i1 false}
!566 = distinct !{null, !567, !"__warned", i1 false, i1 false}
!567 = !{!"../include/linux/cgroup.h", i32 494, i32 9}
!568 = !{ptr @.str.132, !567, !"<string literal>", i1 false, i1 false}
!569 = !{ptr @.str.133, !567, !"<string literal>", i1 false, i1 false}
!570 = distinct !{null, !571, !"__already_done", i1 false, i1 false}
!571 = !{!"../include/linux/backing-dev-defs.h", i32 253, i32 6}
!572 = !{ptr @.str.134, !571, !"<string literal>", i1 false, i1 false}
!573 = !{ptr @isw_nr_in_flight, !574, !"isw_nr_in_flight", i1 false, i1 false}
!574 = !{!"../fs/fs-writeback.c", i32 235, i32 17}
!575 = distinct !{null, !576, !"__already_done", i1 false, i1 false}
!576 = !{!"../fs/fs-writeback.c", i32 498, i32 3}
!577 = distinct !{null, !578, !"__already_done", i1 false, i1 false}
!578 = !{!"../fs/fs-writeback.c", i32 406, i32 3}
!579 = distinct !{null, !27, !"__already_done", i1 false, i1 false}
!580 = !{ptr @.str.135, !27, !"<string literal>", i1 false, i1 false}
!581 = distinct !{null, !27, !"__warned", i1 false, i1 false}
!582 = distinct !{null, !583, !"__already_done", i1 false, i1 false}
!583 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!584 = !{ptr @.str.136, !583, !"<string literal>", i1 false, i1 false}
!585 = !{ptr @.str.137, !586, !"<string literal>", i1 false, i1 false}
!586 = !{!"../include/linux/page-flags.h", i32 698, i32 1}
!587 = distinct !{null, !588, !"__warned", i1 false, i1 false}
!588 = !{!"../include/linux/xarray.h", i32 1182, i32 9}
!589 = !{ptr @.str.138, !588, !"<string literal>", i1 false, i1 false}
!590 = distinct !{null, !591, !"__already_done", i1 false, i1 false}
!591 = !{!"../include/linux/backing-dev.h", i32 269, i32 2}
!592 = !{ptr @.str.139, !591, !"<string literal>", i1 false, i1 false}
!593 = !{ptr @inode_switch_wbs.__key, !594, !"__key", i1 false, i1 false}
!594 = !{!"../fs/fs-writeback.c", i32 602, i32 2}
!595 = distinct !{null, !23, !"__already_done", i1 false, i1 false}
!596 = distinct !{null, !23, !"__warned", i1 false, i1 false}
!597 = distinct !{null, !598, !"__warned", i1 false, i1 false}
!598 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!599 = !{ptr @.str.140, !598, !"<string literal>", i1 false, i1 false}
!600 = !{ptr @.str.141, !598, !"<string literal>", i1 false, i1 false}
!601 = distinct !{null, !602, !"__warned", i1 false, i1 false}
!602 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!603 = !{ptr @.str.142, !602, !"<string literal>", i1 false, i1 false}
!604 = distinct !{null, !47, !"__already_done", i1 false, i1 false}
!605 = distinct !{null, !47, !"__warned", i1 false, i1 false}
!606 = !{ptr @.str.143, !607, !"<string literal>", i1 false, i1 false}
!607 = !{!"../fs/fs-writeback.c", i32 1151, i32 27}
!608 = distinct !{null, !71, !"__already_done", i1 false, i1 false}
!609 = distinct !{null, !71, !"__warned", i1 false, i1 false}
!610 = distinct !{null, !611, !"__already_done", i1 false, i1 false}
!611 = !{!"../fs/fs-writeback.c", i32 103, i32 3}
!612 = distinct !{null, !127, !"__already_done", i1 false, i1 false}
!613 = distinct !{null, !127, !"__warned", i1 false, i1 false}
!614 = distinct !{null, !131, !"__already_done", i1 false, i1 false}
!615 = distinct !{null, !131, !"__warned", i1 false, i1 false}
!616 = distinct !{null, !51, !"__already_done", i1 false, i1 false}
!617 = distinct !{null, !51, !"__warned", i1 false, i1 false}
!618 = distinct !{null, !55, !"__already_done", i1 false, i1 false}
!619 = distinct !{null, !55, !"__warned", i1 false, i1 false}
!620 = distinct !{null, !621, !"__already_done", i1 false, i1 false}
!621 = !{!"../fs/fs-writeback.c", i32 91, i32 3}
!622 = distinct !{null, !83, !"__already_done", i1 false, i1 false}
!623 = distinct !{null, !83, !"__warned", i1 false, i1 false}
!624 = distinct !{null, !99, !"__already_done", i1 false, i1 false}
!625 = distinct !{null, !99, !"__warned", i1 false, i1 false}
!626 = distinct !{null, !107, !"__already_done", i1 false, i1 false}
!627 = distinct !{null, !107, !"__warned", i1 false, i1 false}
!628 = distinct !{null, !115, !"__already_done", i1 false, i1 false}
!629 = distinct !{null, !115, !"__warned", i1 false, i1 false}
!630 = distinct !{null, !39, !"__already_done", i1 false, i1 false}
!631 = distinct !{null, !39, !"__warned", i1 false, i1 false}
!632 = distinct !{null, !43, !"__already_done", i1 false, i1 false}
!633 = distinct !{null, !43, !"__warned", i1 false, i1 false}
!634 = distinct !{null, !111, !"__already_done", i1 false, i1 false}
!635 = distinct !{null, !111, !"__warned", i1 false, i1 false}
!636 = distinct !{null, !59, !"__already_done", i1 false, i1 false}
!637 = distinct !{null, !59, !"__warned", i1 false, i1 false}
!638 = distinct !{null, !63, !"__already_done", i1 false, i1 false}
!639 = distinct !{null, !63, !"__warned", i1 false, i1 false}
!640 = distinct !{null, !67, !"__already_done", i1 false, i1 false}
!641 = distinct !{null, !67, !"__warned", i1 false, i1 false}
!642 = distinct !{null, !643, !"__warned", i1 false, i1 false}
!643 = !{!"../fs/fs-writeback.c", i32 2282, i32 2}
!644 = !{ptr @.str.144, !645, !"<string literal>", i1 false, i1 false}
!645 = !{!"../fs/fs-writeback.c", i32 2329, i32 8}
!646 = !{ptr @.str.145, !645, !"<string literal>", i1 false, i1 false}
!647 = !{ptr @dirtytime_work, !645, !"dirtytime_work", i1 false, i1 false}
!648 = distinct !{null, !649, !"__warned", i1 false, i1 false}
!649 = !{!"../fs/fs-writeback.c", i32 2336, i32 2}
!650 = distinct !{null, !651, !"__warned", i1 false, i1 false}
!651 = !{!"../fs/fs-writeback.c", i32 2339, i32 3}
!652 = distinct !{null, !11, !"__already_done", i1 false, i1 false}
!653 = distinct !{null, !11, !"__warned", i1 false, i1 false}
!654 = distinct !{null, !15, !"__already_done", i1 false, i1 false}
!655 = distinct !{null, !15, !"__warned", i1 false, i1 false}
!656 = distinct !{null, !19, !"__already_done", i1 false, i1 false}
!657 = distinct !{null, !19, !"__warned", i1 false, i1 false}
!658 = distinct !{null, !123, !"__already_done", i1 false, i1 false}
!659 = distinct !{null, !123, !"__warned", i1 false, i1 false}
!660 = !{!"sp"}
!661 = !{i32 1, !"wchar_size", i32 2}
!662 = !{i32 1, !"min_enum_size", i32 4}
!663 = !{i32 8, !"branch-target-enforcement", i32 0}
!664 = !{i32 8, !"sign-return-address", i32 0}
!665 = !{i32 8, !"sign-return-address-all", i32 0}
!666 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!667 = !{i32 7, !"uwtable", i32 1}
!668 = !{i32 7, !"frame-pointer", i32 2}
!669 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!670 = !{!"branch_weights", i32 2000, i32 1}
!671 = !{!"branch_weights", i32 1, i32 2000}
!672 = !{!"auto-init"}
!673 = !{i64 2148291469, i64 2148291495, i64 2148291524, i64 2148291558, i64 2148291589, i64 2148291612}
!674 = !{i64 2148770819, i64 2148770824, i64 2148770837, i64 2148770881, i64 2148770915, i64 2148770936}
!675 = !{i64 2149996667}
!676 = !{i64 2154570314}
!677 = !{i64 2154570156}
!678 = !{i64 2149996933}
!679 = !{i64 2157967428}
!680 = !{i64 798496, i64 798517, i64 798540, i64 798559, i64 798578}
!681 = !{i64 2157967757}
!682 = !{i64 2148289004, i64 2148289030, i64 2148289059, i64 2148289093, i64 2148289124, i64 2148289147}
!683 = !{i64 2157986806}
!684 = !{i64 2150216332, i64 2150216823, i64 2150216369, i64 2150216425, i64 2150216459, i64 2150216483, i64 2150216524, i64 2150216545, i64 2150216573, i64 2150216607}
!685 = !{i64 2150983118, i64 2150983609, i64 2150983155, i64 2150983211, i64 2150983245, i64 2150983269, i64 2150983310, i64 2150983331, i64 2150983359, i64 2150983393}
!686 = !{i32 0, i32 33}
!687 = !{i64 2157981525}
!688 = !{i64 681485, i64 681546}
!689 = !{i64 684217}
!690 = !{i64 684502}
!691 = !{i64 2155199712}
!692 = !{i64 2155199955}
!693 = !{i64 2150005226}
!694 = !{i64 2150006262}
!695 = !{i64 2154820954}
!696 = !{i64 2148288423}
!697 = !{i64 773246, i64 773271, i64 773293, i64 773309, i64 773321, i64 773341, i64 773365, i64 773381, i64 773393}
!698 = !{i64 2148288611}
!699 = !{i64 2148377456}
!700 = !{i64 2148292189, i64 2148292221, i64 2148292250, i64 2148292284, i64 2148292315, i64 2148292338}
!701 = !{i64 2148377685}
!702 = !{i64 2158055572}
!703 = !{i64 2155416421}
!704 = !{i64 2155416638}
!705 = !{i64 2155685752}
!706 = !{i64 2155685971}
!707 = !{i64 2155702559}
!708 = !{i64 2155702780}
!709 = !{i64 2148679538, i64 2148679818, i64 2148680152, i64 2148680486}
!710 = !{i64 2155399352}
!711 = !{i64 2155399587}
!712 = !{i64 2158234089}
!713 = !{i64 2155143158}
!714 = !{i64 2155143397}
!715 = !{i64 2155164597}
!716 = !{i64 2155164838}
!717 = !{i64 2155181801}
!718 = !{i64 2155182030}
!719 = !{i64 2157973343}
!720 = !{i64 2157973185}
!721 = !{i64 2157962472, i64 2157962954, i64 2157962509, i64 2157962565, i64 2157962599, i64 2157962623, i64 2157962664, i64 2157962685, i64 2157962713, i64 2157962747}
!722 = !{i64 2155664598}
!723 = !{i64 2155664829}
!724 = !{i64 2158063303}
!725 = !{i64 2154974018, i64 2154974509, i64 2154974055, i64 2154974111, i64 2154974145, i64 2154974169, i64 2154974210, i64 2154974231, i64 2154974259, i64 2154974293}
!726 = !{i64 2154975918, i64 2154976409, i64 2154975955, i64 2154976011, i64 2154976045, i64 2154976069, i64 2154976110, i64 2154976131, i64 2154976159, i64 2154976193}
!727 = !{i64 2154958518, i64 2154959009, i64 2154958555, i64 2154958611, i64 2154958645, i64 2154958669, i64 2154958710, i64 2154958731, i64 2154958759, i64 2154958793}
!728 = !{i64 2154952776, i64 2154953267, i64 2154952813, i64 2154952869, i64 2154952903, i64 2154952927, i64 2154952968, i64 2154952989, i64 2154953017, i64 2154953051}
!729 = !{i64 2155217357}
!730 = !{i64 2155217594}
!731 = !{i64 2157969915, i64 2157970397, i64 2157969952, i64 2157970008, i64 2157970042, i64 2157970066, i64 2157970107, i64 2157970128, i64 2157970156, i64 2157970190}
!732 = !{i64 2157971771, i64 2157972253, i64 2157971808, i64 2157971864, i64 2157971898, i64 2157971922, i64 2157971963, i64 2157971984, i64 2157972012, i64 2157972046}
!733 = !{i64 2155311486}
!734 = !{i64 2155311695}
!735 = !{i64 2155328275}
!736 = !{i64 2155328482}
!737 = !{i64 2155345049}
!738 = !{i64 2155345258}
!739 = !{i64 2158064972, i64 2158065455, i64 2158065009, i64 2158065065, i64 2158065099, i64 2158065123, i64 2158065164, i64 2158065185, i64 2158065213, i64 2158065247}
!740 = !{i64 2158061410, i64 2158061893, i64 2158061447, i64 2158061503, i64 2158061537, i64 2158061561, i64 2158061602, i64 2158061623, i64 2158061651, i64 2158061685}
!741 = !{i64 2155366016}
!742 = !{i64 2155366229}
!743 = !{i64 2155382913}
!744 = !{i64 2155383120}
!745 = !{i64 2155472076}
!746 = !{i64 2155472337}
!747 = !{i64 2155551781}
!748 = !{i64 2155552008}
!749 = !{i64 2158068617}
!750 = !{i64 2155591913}
!751 = !{i64 2155592178}
!752 = !{i64 2155631102}
!753 = !{i64 2155631311}
!754 = !{i64 2155610244}
!755 = !{i64 2155610497}
!756 = !{i64 2155272779}
!757 = !{i64 2155273016}
!758 = !{i64 2155294330}
!759 = !{i64 2155294555}
