; ModuleID = '/llk/IR_all_yes/fs/jbd2/journal.c_pt.bc'
source_filename = "../fs/jbd2/journal.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+jbd2_journal_enable_debug\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_enable_debug\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_enable_debug\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_enable_debug:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_enable_debug\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_enable_debug:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_extend\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_extend\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_extend\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_extend:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_extend\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_extend:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_stop\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_stop\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_stop\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_stop:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_stop\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_stop:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_lock_updates\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_lock_updates\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_lock_updates\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_lock_updates:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_lock_updates\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_lock_updates:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_unlock_updates\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_unlock_updates\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_unlock_updates\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_unlock_updates:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_unlock_updates\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_unlock_updates:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_get_write_access\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_get_write_access\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_get_write_access\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_get_write_access:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_get_write_access\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_get_write_access:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_get_create_access\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_get_create_access\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_get_create_access\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_get_create_access:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_get_create_access\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_get_create_access:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_get_undo_access\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_get_undo_access\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_get_undo_access\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_get_undo_access:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_get_undo_access\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_get_undo_access:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_set_triggers\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_set_triggers\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_set_triggers\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_set_triggers:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_set_triggers\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_set_triggers:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_dirty_metadata\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_dirty_metadata\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_dirty_metadata\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_dirty_metadata:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_dirty_metadata\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_dirty_metadata:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_forget\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_forget\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_forget\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_forget:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_forget\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_forget:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_flush\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_flush\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_flush\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_flush:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_flush\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_flush:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_revoke\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_revoke\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_revoke\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_revoke:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_revoke\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_revoke:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_init_dev\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_init_dev\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_init_dev\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_init_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_init_dev\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_init_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_init_inode\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_init_inode\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_init_inode\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_init_inode:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_init_inode\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_init_inode:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_check_used_features\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_check_used_features\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_check_used_features\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_check_used_features:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_check_used_features\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_check_used_features:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_check_available_features\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_check_available_features\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_check_available_features\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_check_available_features:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_check_available_features\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_check_available_features:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_set_features\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_set_features\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_set_features\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_set_features:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_set_features\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_set_features:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_load\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_load\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_load\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_load:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_load\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_load:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_destroy\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_destroy\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_destroy\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_destroy\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_abort\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_abort\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_abort\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_abort:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_abort\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_abort:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_errno\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_errno\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_errno\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_errno:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_errno\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_errno:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_ack_err\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_ack_err\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_ack_err\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_ack_err:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_ack_err\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_ack_err:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_clear_err\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_clear_err\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_clear_err\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_clear_err:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_clear_err\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_clear_err:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_log_wait_commit\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_log_wait_commit\09\09\09\09"
module asm "\09.long\09__crc_jbd2_log_wait_commit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_log_wait_commit:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_log_wait_commit\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_log_wait_commit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_log_start_commit\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_log_start_commit\09\09\09\09"
module asm "\09.long\09__crc_jbd2_log_start_commit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_log_start_commit:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_log_start_commit\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_log_start_commit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_start_commit\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_start_commit\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_start_commit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_start_commit:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_start_commit\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_start_commit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_force_commit_nested\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_force_commit_nested\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_force_commit_nested\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_force_commit_nested:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_force_commit_nested\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_force_commit_nested:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_wipe\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_wipe\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_wipe\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_wipe:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_wipe\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_wipe:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_blocks_per_page\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_blocks_per_page\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_blocks_per_page\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_blocks_per_page:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_blocks_per_page\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_blocks_per_page:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_invalidatepage\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_invalidatepage\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_invalidatepage\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_invalidatepage:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_invalidatepage\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_invalidatepage:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_try_to_free_buffers\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_try_to_free_buffers\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_try_to_free_buffers\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_try_to_free_buffers:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_try_to_free_buffers\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_try_to_free_buffers:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_force_commit\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_force_commit\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_force_commit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_force_commit:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_force_commit\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_force_commit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_inode_ranged_write\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_inode_ranged_write\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_inode_ranged_write\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_inode_ranged_write:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_inode_ranged_write\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_inode_ranged_write:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_inode_ranged_wait\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_inode_ranged_wait\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_inode_ranged_wait\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_inode_ranged_wait:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_inode_ranged_wait\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_inode_ranged_wait:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_submit_inode_data_buffers\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_submit_inode_data_buffers\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_submit_inode_data_buffers\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_submit_inode_data_buffers:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_submit_inode_data_buffers\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_submit_inode_data_buffers:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_finish_inode_data_buffers\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_finish_inode_data_buffers\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_finish_inode_data_buffers\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_finish_inode_data_buffers:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_finish_inode_data_buffers\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_finish_inode_data_buffers:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_init_jbd_inode\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_init_jbd_inode\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_init_jbd_inode\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_init_jbd_inode:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_init_jbd_inode\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_init_jbd_inode:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_release_jbd_inode\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_release_jbd_inode\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_release_jbd_inode\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_release_jbd_inode:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_release_jbd_inode\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_release_jbd_inode:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_begin_ordered_truncate\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_begin_ordered_truncate\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_begin_ordered_truncate\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_begin_ordered_truncate:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_begin_ordered_truncate\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_begin_ordered_truncate:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_inode_cache\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_inode_cache\09\09\09\09"
module asm "\09.long\09__crc_jbd2_inode_cache\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_inode_cache:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_inode_cache\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_inode_cache:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__jbd2_debug\22, \22a\22\09"
module asm "\09.weak\09__crc___jbd2_debug\09\09\09\09"
module asm "\09.long\09__crc___jbd2_debug\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___jbd2_debug:\09\09\09\09\09"
module asm "\09.asciz \09\22__jbd2_debug\22\09\09\09\09\09"
module asm "__kstrtabns___jbd2_debug:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_trans_will_send_data_barrier\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_trans_will_send_data_barrier\09\09\09\09"
module asm "\09.long\09__crc_jbd2_trans_will_send_data_barrier\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_trans_will_send_data_barrier:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_trans_will_send_data_barrier\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_trans_will_send_data_barrier:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_fc_begin_commit\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_fc_begin_commit\09\09\09\09"
module asm "\09.long\09__crc_jbd2_fc_begin_commit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_fc_begin_commit:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_fc_begin_commit\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_fc_begin_commit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_fc_end_commit\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_fc_end_commit\09\09\09\09"
module asm "\09.long\09__crc_jbd2_fc_end_commit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_fc_end_commit:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_fc_end_commit\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_fc_end_commit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_fc_end_commit_fallback\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_fc_end_commit_fallback\09\09\09\09"
module asm "\09.long\09__crc_jbd2_fc_end_commit_fallback\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_fc_end_commit_fallback:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_fc_end_commit_fallback\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_fc_end_commit_fallback:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_transaction_committed\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_transaction_committed\09\09\09\09"
module asm "\09.long\09__crc_jbd2_transaction_committed\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_transaction_committed:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_transaction_committed\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_transaction_committed:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_complete_transaction\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_complete_transaction\09\09\09\09"
module asm "\09.long\09__crc_jbd2_complete_transaction\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_complete_transaction:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_complete_transaction\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_complete_transaction:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_fc_get_buf\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_fc_get_buf\09\09\09\09"
module asm "\09.long\09__crc_jbd2_fc_get_buf\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_fc_get_buf:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_fc_get_buf\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_fc_get_buf:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_fc_wait_bufs\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_fc_wait_bufs\09\09\09\09"
module asm "\09.long\09__crc_jbd2_fc_wait_bufs\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_fc_wait_bufs:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_fc_wait_bufs\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_fc_wait_bufs:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_fc_release_bufs\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_fc_release_bufs\09\09\09\09"
module asm "\09.long\09__crc_jbd2_fc_release_bufs\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_fc_release_bufs:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_fc_release_bufs\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_fc_release_bufs:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_update_sb_errno\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_update_sb_errno\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_update_sb_errno\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_update_sb_errno:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_update_sb_errno\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_update_sb_errno:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_clear_features\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_clear_features\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_clear_features\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_clear_features:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_clear_features\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_clear_features:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_grab_journal_head\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_grab_journal_head\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_grab_journal_head\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_grab_journal_head:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_grab_journal_head\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_grab_journal_head:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+jbd2_journal_put_journal_head\22, \22a\22\09"
module asm "\09.weak\09__crc_jbd2_journal_put_journal_head\09\09\09\09"
module asm "\09.long\09__crc_jbd2_journal_put_journal_head\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_jbd2_journal_put_journal_head:\09\09\09\09\09"
module asm "\09.asciz \09\22jbd2_journal_put_journal_head\22\09\09\09\09\09"
module asm "__kstrtabns_jbd2_journal_put_journal_head:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_event_fields = type { ptr, %union.anon.104 }
%union.anon.104 = type { %struct.anon.105 }
%struct.anon.105 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.106, %struct.trace_event, ptr, ptr, %union.anon.107, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.106 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.107 = type { ptr }
%union.anon.108 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.109 = type { %struct.bpf_raw_event_map }
%union.anon.110 = type { %struct.bpf_raw_event_map }
%union.anon.111 = type { %struct.bpf_raw_event_map }
%union.anon.112 = type { %struct.bpf_raw_event_map }
%union.anon.113 = type { %struct.bpf_raw_event_map }
%union.anon.114 = type { %struct.bpf_raw_event_map }
%union.anon.115 = type { %struct.bpf_raw_event_map }
%union.anon.116 = type { %struct.bpf_raw_event_map }
%union.anon.117 = type { %struct.bpf_raw_event_map }
%union.anon.118 = type { %struct.bpf_raw_event_map }
%union.anon.119 = type { %struct.bpf_raw_event_map }
%union.anon.120 = type { %struct.bpf_raw_event_map }
%union.anon.121 = type { %struct.bpf_raw_event_map }
%union.anon.122 = type { %struct.bpf_raw_event_map }
%union.anon.123 = type { %struct.bpf_raw_event_map }
%union.anon.124 = type { %struct.bpf_raw_event_map }
%union.anon.125 = type { %struct.bpf_raw_event_map }
%union.anon.126 = type { %struct.bpf_raw_event_map }
%union.anon.127 = type { %struct.bpf_raw_event_map }
%union.anon.128 = type { %struct.bpf_raw_event_map }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.57 }
%union.anon.57 = type { ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.lock_class_key = type { %union.anon.1 }
%union.anon.1 = type { %struct.hlist_node }
%struct.proc_ops = type { i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.seq_operations = type { ptr, ptr, ptr, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.0 }
%union.anon.0 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.journal_s = type { i32, i32, i32, %struct.mutex, ptr, ptr, i32, %struct.rwlock_t, i32, %struct.mutex, ptr, ptr, ptr, %struct.wait_queue_head, %struct.wait_queue_head, %struct.wait_queue_head, %struct.wait_queue_head, %struct.wait_queue_head, %struct.wait_queue_head, %struct.mutex, [64 x ptr], %struct.shrinker, %struct.percpu_counter, ptr, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i64, [56 x i8], ptr, i32, %struct.atomic_t, %struct.spinlock, ptr, i32, i32, i32, i32, [16 x i8], ptr, i32, i32, i32, %struct.timer_list, %struct.spinlock, ptr, [2 x ptr], ptr, ptr, i32, i32, i32, i64, i32, i32, ptr, ptr, ptr, %struct.spinlock, ptr, %struct.transaction_stats_s, i32, ptr, ptr, i32, %struct.lockdep_map, ptr, ptr }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.transaction_stats_s = type { i32, i32, %struct.transaction_run_stats_s }
%struct.transaction_run_stats_s = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.block_device = type { i64, i64, ptr, i32, i8, i32, i32, ptr, ptr, ptr, %struct.device, ptr, i32, i8, ptr, i8, %struct.spinlock, ptr, ptr, i32, %struct.mutex, ptr, ptr, i8 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.trace_event_raw_jbd2_checkpoint = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_jbd2_commit = type { %struct.trace_entry, i32, i8, i32, [0 x i8] }
%struct.transaction_s = type { ptr, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, %struct.spinlock, i32, i32, i32, %struct.transaction_chp_stats_s, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, i32, i64, i8, i32, %struct.list_head }
%struct.transaction_chp_stats_s = type { i32, i32, i32, i32 }
%struct.trace_event_raw_jbd2_end_commit = type { %struct.trace_entry, i32, i8, i32, i32, [0 x i8] }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.76, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.77, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.78, ptr, %struct.address_space, %struct.list_head, %union.anon.79, i32, i32, ptr, ptr, ptr, ptr }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%union.anon.76 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%union.anon.77 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.atomic64_t = type { i64 }
%union.anon.78 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%union.anon.79 = type { ptr }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, i16, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [24 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [24 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.uuid_t = type { [16 x i8] }
%struct.hlist_head = type { ptr }
%struct.list_lru = type { ptr, %struct.list_head, i32, i8 }
%struct.trace_event_raw_jbd2_submit_inode_data = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_jbd2_handle_start_class = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_jbd2_handle_extend = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_jbd2_handle_stats = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_jbd2_run_stats = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_jbd2_checkpoint_stats = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_jbd2_update_log_tail = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_jbd2_write_superblock = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_jbd2_lock_buffer_stall = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_jbd2_journal_shrink = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_jbd2_shrink_scan_exit = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_jbd2_shrink_checkpoint_list = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.request_queue = type { ptr, ptr, %struct.percpu_ref, ptr, ptr, ptr, ptr, i32, ptr, i32, ptr, i32, %struct.atomic_t, i32, %struct.spinlock, ptr, %struct.kobject, ptr, %struct.blk_integrity, ptr, i32, i32, i32, i32, ptr, i32, i32, ptr, ptr, %struct.timer_list, %struct.work_struct, %struct.atomic_t, ptr, %struct.list_head, [1 x i32], ptr, %struct.list_head, %struct.queue_limits, i32, i32, ptr, ptr, i32, i32, i32, %struct.mutex, ptr, ptr, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, ptr, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, i32, ptr, %struct.list_head, %struct.bio_set, ptr, ptr, ptr, i8, [5 x i64], ptr, [0 x %struct.srcu_struct] }
%struct.percpu_ref = type { i32, ptr }
%struct.blk_integrity = type { ptr, i8, i8, i8, i8 }
%struct.queue_limits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.bio_set = type { ptr, i32, ptr, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, i32, %struct.spinlock, %struct.bio_list, %struct.work_struct, ptr, %struct.hlist_node }
%struct.mempool_s = type { %struct.spinlock, i32, i32, ptr, ptr, ptr, ptr, %struct.wait_queue_head }
%struct.bio_list = type { ptr, ptr }
%struct.srcu_struct = type { [3 x %struct.srcu_node], [3 x ptr], %struct.mutex, %struct.spinlock, %struct.mutex, i32, i32, i32, i32, i32, ptr, i32, %struct.mutex, %struct.completion, %struct.atomic_t, %struct.delayed_work, %struct.lockdep_map }
%struct.srcu_node = type { %struct.spinlock, [4 x i32], [4 x i32], i32, ptr, i32, i32 }
%struct.journal_superblock_s = type { %struct.journal_header_s, i32, i32, i32, i32, i32, i32, i32, i32, i32, [16 x i8], i32, i32, i32, i32, i8, [3 x i8], i32, [41 x i32], i32, [768 x i8] }
%struct.journal_header_s = type { i32, i32, i32 }
%struct.anon.130 = type { %struct.shash_desc, [4 x i8], [4 x i8] }
%struct.shash_desc = type { ptr, [4 x i8], [0 x ptr] }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.crypto_shash = type { i32, [124 x i8], %struct.crypto_tfm }
%struct.crypto_tfm = type { i32, i32, ptr, ptr, [112 x i8], [0 x ptr] }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.48, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.11 }
%struct.llist_node = type { ptr }
%union.anon.11 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.13 }
%union.anon.13 = type { %struct.anon.14 }
%struct.anon.14 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.tlbflush_unmap_batch = type {}
%union.anon.48 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.jbd2_inode = type { ptr, ptr, %struct.list_head, ptr, i32, i64, i64 }
%struct.wait_bit_queue_entry = type { %struct.wait_bit_key, %struct.wait_queue_entry }
%struct.wait_bit_key = type { ptr, i32, i32 }
%struct.va_format = type { ptr, ptr }
%struct.__va_list = type { ptr }
%struct.buffer_head = type { i32, ptr, ptr, i64, i32, ptr, ptr, ptr, ptr, %struct.list_head, ptr, %struct.atomic_t, %struct.spinlock }
%struct.journal_head = type { ptr, %struct.spinlock, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.page = type { i32, %union.anon.2, %union.anon.75, %struct.atomic_t, i32 }
%union.anon.2 = type { %struct.anon }
%struct.anon = type { %struct.list_head, ptr, i32, i32 }
%union.anon.75 = type { %struct.atomic_t }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }
%struct.shrink_control = type { i32, i32, i32, i32, ptr }
%struct.jbd2_stats_proc_session = type { ptr, ptr, i32, i32 }
%struct.file = type { %union.anon.5, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, ptr, i32, i32 }
%union.anon.5 = type { %struct.callback_head }
%struct.path = type { ptr, ptr }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }
%struct.seq_file = type { ptr, i32, i32, i32, i32, i64, i64, %struct.mutex, ptr, i32, ptr, ptr }

@__tpstrtab_jbd2_checkpoint = internal constant [16 x i8] c"jbd2_checkpoint\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_checkpoint = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_checkpoint }, align 4
@__tracepoint_jbd2_checkpoint = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_checkpoint, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_checkpoint, ptr null, ptr @__traceiter_jbd2_checkpoint, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_checkpoint = internal constant ptr @__tracepoint_jbd2_checkpoint, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_start_commit = internal constant [18 x i8] c"jbd2_start_commit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_start_commit = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_start_commit }, align 4
@__tracepoint_jbd2_start_commit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_start_commit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_start_commit, ptr null, ptr @__traceiter_jbd2_start_commit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_start_commit = internal constant ptr @__tracepoint_jbd2_start_commit, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_commit_locking = internal constant [20 x i8] c"jbd2_commit_locking\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_commit_locking = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_commit_locking }, align 4
@__tracepoint_jbd2_commit_locking = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_commit_locking, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_commit_locking, ptr null, ptr @__traceiter_jbd2_commit_locking, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_commit_locking = internal constant ptr @__tracepoint_jbd2_commit_locking, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_commit_flushing = internal constant [21 x i8] c"jbd2_commit_flushing\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_commit_flushing = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_commit_flushing }, align 4
@__tracepoint_jbd2_commit_flushing = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_commit_flushing, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_commit_flushing, ptr null, ptr @__traceiter_jbd2_commit_flushing, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_commit_flushing = internal constant ptr @__tracepoint_jbd2_commit_flushing, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_commit_logging = internal constant [20 x i8] c"jbd2_commit_logging\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_commit_logging = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_commit_logging }, align 4
@__tracepoint_jbd2_commit_logging = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_commit_logging, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_commit_logging, ptr null, ptr @__traceiter_jbd2_commit_logging, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_commit_logging = internal constant ptr @__tracepoint_jbd2_commit_logging, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_drop_transaction = internal constant [22 x i8] c"jbd2_drop_transaction\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_drop_transaction = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_drop_transaction }, align 4
@__tracepoint_jbd2_drop_transaction = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_drop_transaction, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_drop_transaction, ptr null, ptr @__traceiter_jbd2_drop_transaction, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_drop_transaction = internal constant ptr @__tracepoint_jbd2_drop_transaction, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_end_commit = internal constant [16 x i8] c"jbd2_end_commit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_end_commit = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_end_commit }, align 4
@__tracepoint_jbd2_end_commit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_end_commit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_end_commit, ptr null, ptr @__traceiter_jbd2_end_commit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_end_commit = internal constant ptr @__tracepoint_jbd2_end_commit, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_submit_inode_data = internal constant [23 x i8] c"jbd2_submit_inode_data\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_submit_inode_data = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_submit_inode_data }, align 4
@__tracepoint_jbd2_submit_inode_data = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_submit_inode_data, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_submit_inode_data, ptr null, ptr @__traceiter_jbd2_submit_inode_data, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_submit_inode_data = internal constant ptr @__tracepoint_jbd2_submit_inode_data, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_handle_start = internal constant [18 x i8] c"jbd2_handle_start\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_handle_start = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_handle_start }, align 4
@__tracepoint_jbd2_handle_start = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_handle_start, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_handle_start, ptr null, ptr @__traceiter_jbd2_handle_start, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_handle_start = internal constant ptr @__tracepoint_jbd2_handle_start, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_handle_restart = internal constant [20 x i8] c"jbd2_handle_restart\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_handle_restart = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_handle_restart }, align 4
@__tracepoint_jbd2_handle_restart = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_handle_restart, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_handle_restart, ptr null, ptr @__traceiter_jbd2_handle_restart, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_handle_restart = internal constant ptr @__tracepoint_jbd2_handle_restart, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_handle_extend = internal constant [19 x i8] c"jbd2_handle_extend\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_handle_extend = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_handle_extend }, align 4
@__tracepoint_jbd2_handle_extend = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_handle_extend, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_handle_extend, ptr null, ptr @__traceiter_jbd2_handle_extend, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_handle_extend = internal constant ptr @__tracepoint_jbd2_handle_extend, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_handle_stats = internal constant [18 x i8] c"jbd2_handle_stats\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_handle_stats = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_handle_stats }, align 4
@__tracepoint_jbd2_handle_stats = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_handle_stats, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_handle_stats, ptr null, ptr @__traceiter_jbd2_handle_stats, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_handle_stats = internal constant ptr @__tracepoint_jbd2_handle_stats, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_run_stats = internal constant [15 x i8] c"jbd2_run_stats\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_run_stats = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_run_stats }, align 4
@__tracepoint_jbd2_run_stats = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_run_stats, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_run_stats, ptr null, ptr @__traceiter_jbd2_run_stats, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_run_stats = internal constant ptr @__tracepoint_jbd2_run_stats, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_checkpoint_stats = internal constant [22 x i8] c"jbd2_checkpoint_stats\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_checkpoint_stats = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_checkpoint_stats }, align 4
@__tracepoint_jbd2_checkpoint_stats = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_checkpoint_stats, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_checkpoint_stats, ptr null, ptr @__traceiter_jbd2_checkpoint_stats, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_checkpoint_stats = internal constant ptr @__tracepoint_jbd2_checkpoint_stats, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_update_log_tail = internal constant [21 x i8] c"jbd2_update_log_tail\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_update_log_tail = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_update_log_tail }, align 4
@__tracepoint_jbd2_update_log_tail = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_update_log_tail, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_update_log_tail, ptr null, ptr @__traceiter_jbd2_update_log_tail, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_update_log_tail = internal constant ptr @__tracepoint_jbd2_update_log_tail, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_write_superblock = internal constant [22 x i8] c"jbd2_write_superblock\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_write_superblock = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_write_superblock }, align 4
@__tracepoint_jbd2_write_superblock = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_write_superblock, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_write_superblock, ptr null, ptr @__traceiter_jbd2_write_superblock, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_write_superblock = internal constant ptr @__tracepoint_jbd2_write_superblock, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_lock_buffer_stall = internal constant [23 x i8] c"jbd2_lock_buffer_stall\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_lock_buffer_stall = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_lock_buffer_stall }, align 4
@__tracepoint_jbd2_lock_buffer_stall = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_lock_buffer_stall, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_lock_buffer_stall, ptr null, ptr @__traceiter_jbd2_lock_buffer_stall, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_lock_buffer_stall = internal constant ptr @__tracepoint_jbd2_lock_buffer_stall, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_shrink_count = internal constant [18 x i8] c"jbd2_shrink_count\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_shrink_count = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_shrink_count }, align 4
@__tracepoint_jbd2_shrink_count = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_shrink_count, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_shrink_count, ptr null, ptr @__traceiter_jbd2_shrink_count, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_shrink_count = internal constant ptr @__tracepoint_jbd2_shrink_count, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_shrink_scan_enter = internal constant [23 x i8] c"jbd2_shrink_scan_enter\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_shrink_scan_enter = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_shrink_scan_enter }, align 4
@__tracepoint_jbd2_shrink_scan_enter = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_shrink_scan_enter, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_shrink_scan_enter, ptr null, ptr @__traceiter_jbd2_shrink_scan_enter, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_shrink_scan_enter = internal constant ptr @__tracepoint_jbd2_shrink_scan_enter, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_shrink_scan_exit = internal constant [22 x i8] c"jbd2_shrink_scan_exit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_shrink_scan_exit = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_shrink_scan_exit }, align 4
@__tracepoint_jbd2_shrink_scan_exit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_shrink_scan_exit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_shrink_scan_exit, ptr null, ptr @__traceiter_jbd2_shrink_scan_exit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_shrink_scan_exit = internal constant ptr @__tracepoint_jbd2_shrink_scan_exit, section "__tracepoints_ptrs", align 4
@__tpstrtab_jbd2_shrink_checkpoint_list = internal constant [28 x i8] c"jbd2_shrink_checkpoint_list\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_jbd2_shrink_checkpoint_list = dso_local global %struct.static_call_key { ptr @__traceiter_jbd2_shrink_checkpoint_list }, align 4
@__tracepoint_jbd2_shrink_checkpoint_list = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_jbd2_shrink_checkpoint_list, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_jbd2_shrink_checkpoint_list, ptr null, ptr @__traceiter_jbd2_shrink_checkpoint_list, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_jbd2_shrink_checkpoint_list = internal constant ptr @__tracepoint_jbd2_shrink_checkpoint_list, section "__tracepoints_ptrs", align 4
@str__jbd2__trace_system_name = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"jbd2\00", [27 x i8] zeroinitializer }, align 32
@trace_event_fields_jbd2_checkpoint = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.41, %union.anon.104 { %struct.anon.105 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.104 { %struct.anon.105 { ptr @.str.44, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_jbd2_checkpoint = internal global %struct.trace_event_class { ptr @str__jbd2__trace_system_name, ptr @trace_event_raw_event_jbd2_checkpoint, ptr @perf_trace_jbd2_checkpoint, ptr @trace_event_reg, ptr @trace_event_fields_jbd2_checkpoint, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_jbd2_checkpoint, i64 24), ptr getelementptr (i8, ptr @event_class_jbd2_checkpoint, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_jbd2_checkpoint = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_jbd2_checkpoint, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_jbd2_checkpoint = internal global { [122 x i8], [38 x i8] } { [122 x i8] c"\22dev %d,%d result %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->result\00", [38 x i8] zeroinitializer }, align 32
@event_jbd2_checkpoint = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_checkpoint, %union.anon.106 { ptr @__tracepoint_jbd2_checkpoint }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_checkpoint }, ptr @print_fmt_jbd2_checkpoint, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_checkpoint = internal global ptr @event_jbd2_checkpoint, section "_ftrace_events", align 4
@trace_event_fields_jbd2_commit = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.41, %union.anon.104 { %struct.anon.105 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.46, %union.anon.104 { %struct.anon.105 { ptr @.str.47, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.104 { %struct.anon.105 { ptr @.str.48, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_jbd2_commit = internal global %struct.trace_event_class { ptr @str__jbd2__trace_system_name, ptr @trace_event_raw_event_jbd2_commit, ptr @perf_trace_jbd2_commit, ptr @trace_event_reg, ptr @trace_event_fields_jbd2_commit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_jbd2_commit, i64 24), ptr getelementptr (i8, ptr @event_class_jbd2_commit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_jbd2_commit = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_jbd2_commit, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_jbd2_commit = internal global { [158 x i8], [34 x i8] } { [158 x i8] c"\22dev %d,%d transaction %d sync %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->transaction, REC->sync_commit\00", [34 x i8] zeroinitializer }, align 32
@event_jbd2_start_commit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_commit, %union.anon.106 { ptr @__tracepoint_jbd2_start_commit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_commit }, ptr @print_fmt_jbd2_commit, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_start_commit = internal global ptr @event_jbd2_start_commit, section "_ftrace_events", align 4
@event_jbd2_commit_locking = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_commit, %union.anon.106 { ptr @__tracepoint_jbd2_commit_locking }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_commit }, ptr @print_fmt_jbd2_commit, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_commit_locking = internal global ptr @event_jbd2_commit_locking, section "_ftrace_events", align 4
@event_jbd2_commit_flushing = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_commit, %union.anon.106 { ptr @__tracepoint_jbd2_commit_flushing }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_commit }, ptr @print_fmt_jbd2_commit, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_commit_flushing = internal global ptr @event_jbd2_commit_flushing, section "_ftrace_events", align 4
@event_jbd2_commit_logging = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_commit, %union.anon.106 { ptr @__tracepoint_jbd2_commit_logging }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_commit }, ptr @print_fmt_jbd2_commit, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_commit_logging = internal global ptr @event_jbd2_commit_logging, section "_ftrace_events", align 4
@event_jbd2_drop_transaction = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_commit, %union.anon.106 { ptr @__tracepoint_jbd2_drop_transaction }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_commit }, ptr @print_fmt_jbd2_commit, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_drop_transaction = internal global ptr @event_jbd2_drop_transaction, section "_ftrace_events", align 4
@trace_event_fields_jbd2_end_commit = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.41, %union.anon.104 { %struct.anon.105 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.46, %union.anon.104 { %struct.anon.105 { ptr @.str.47, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.104 { %struct.anon.105 { ptr @.str.48, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.104 { %struct.anon.105 { ptr @.str.50, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_jbd2_end_commit = internal global %struct.trace_event_class { ptr @str__jbd2__trace_system_name, ptr @trace_event_raw_event_jbd2_end_commit, ptr @perf_trace_jbd2_end_commit, ptr @trace_event_reg, ptr @trace_event_fields_jbd2_end_commit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_jbd2_end_commit, i64 24), ptr getelementptr (i8, ptr @event_class_jbd2_end_commit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_jbd2_end_commit = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_jbd2_end_commit, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_jbd2_end_commit = internal global { [177 x i8], [47 x i8] } { [177 x i8] c"\22dev %d,%d transaction %d sync %d head %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->transaction, REC->sync_commit, REC->head\00", [47 x i8] zeroinitializer }, align 32
@event_jbd2_end_commit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_end_commit, %union.anon.106 { ptr @__tracepoint_jbd2_end_commit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_end_commit }, ptr @print_fmt_jbd2_end_commit, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_end_commit = internal global ptr @event_jbd2_end_commit, section "_ftrace_events", align 4
@trace_event_fields_jbd2_submit_inode_data = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.41, %union.anon.104 { %struct.anon.105 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.52, %union.anon.104 { %struct.anon.105 { ptr @.str.53, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_jbd2_submit_inode_data = internal global %struct.trace_event_class { ptr @str__jbd2__trace_system_name, ptr @trace_event_raw_event_jbd2_submit_inode_data, ptr @perf_trace_jbd2_submit_inode_data, ptr @trace_event_reg, ptr @trace_event_fields_jbd2_submit_inode_data, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_jbd2_submit_inode_data, i64 24), ptr getelementptr (i8, ptr @event_class_jbd2_submit_inode_data, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_jbd2_submit_inode_data = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_jbd2_submit_inode_data, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_jbd2_submit_inode_data = internal global { [133 x i8], [59 x i8] } { [133 x i8] c"\22dev %d,%d ino %lu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino\00", [59 x i8] zeroinitializer }, align 32
@event_jbd2_submit_inode_data = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_submit_inode_data, %union.anon.106 { ptr @__tracepoint_jbd2_submit_inode_data }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_submit_inode_data }, ptr @print_fmt_jbd2_submit_inode_data, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_submit_inode_data = internal global ptr @event_jbd2_submit_inode_data, section "_ftrace_events", align 4
@trace_event_fields_jbd2_handle_start_class = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.41, %union.anon.104 { %struct.anon.105 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.56, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.58, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.104 { %struct.anon.105 { ptr @.str.60, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_jbd2_handle_start_class = internal global %struct.trace_event_class { ptr @str__jbd2__trace_system_name, ptr @trace_event_raw_event_jbd2_handle_start_class, ptr @perf_trace_jbd2_handle_start_class, ptr @trace_event_reg, ptr @trace_event_fields_jbd2_handle_start_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_jbd2_handle_start_class, i64 24), ptr getelementptr (i8, ptr @event_class_jbd2_handle_start_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_jbd2_handle_start_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_jbd2_handle_start_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_jbd2_handle_start_class = internal global { [204 x i8], [52 x i8] } { [204 x i8] c"\22dev %d,%d tid %lu type %u line_no %u requested_blocks %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->tid, REC->type, REC->line_no, REC->requested_blocks\00", [52 x i8] zeroinitializer }, align 32
@event_jbd2_handle_start = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_handle_start_class, %union.anon.106 { ptr @__tracepoint_jbd2_handle_start }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_handle_start_class }, ptr @print_fmt_jbd2_handle_start_class, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_handle_start = internal global ptr @event_jbd2_handle_start, section "_ftrace_events", align 4
@event_jbd2_handle_restart = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_handle_start_class, %union.anon.106 { ptr @__tracepoint_jbd2_handle_restart }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_handle_start_class }, ptr @print_fmt_jbd2_handle_start_class, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_handle_restart = internal global ptr @event_jbd2_handle_restart, section "_ftrace_events", align 4
@trace_event_fields_jbd2_handle_extend = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.41, %union.anon.104 { %struct.anon.105 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.56, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.58, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.104 { %struct.anon.105 { ptr @.str.62, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.104 { %struct.anon.105 { ptr @.str.60, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_jbd2_handle_extend = internal global %struct.trace_event_class { ptr @str__jbd2__trace_system_name, ptr @trace_event_raw_event_jbd2_handle_extend, ptr @perf_trace_jbd2_handle_extend, ptr @trace_event_reg, ptr @trace_event_fields_jbd2_handle_extend, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_jbd2_handle_extend, i64 24), ptr getelementptr (i8, ptr @event_class_jbd2_handle_extend, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_jbd2_handle_extend = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_jbd2_handle_extend, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_jbd2_handle_extend = internal global { [243 x i8], [45 x i8] } { [243 x i8] c"\22dev %d,%d tid %lu type %u line_no %u buffer_credits %d requested_blocks %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->tid, REC->type, REC->line_no, REC->buffer_credits, REC->requested_blocks\00", [45 x i8] zeroinitializer }, align 32
@event_jbd2_handle_extend = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_handle_extend, %union.anon.106 { ptr @__tracepoint_jbd2_handle_extend }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_handle_extend }, ptr @print_fmt_jbd2_handle_extend, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_handle_extend = internal global ptr @event_jbd2_handle_extend, section "_ftrace_events", align 4
@trace_event_fields_jbd2_handle_stats = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.41, %union.anon.104 { %struct.anon.105 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.56, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.58, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.57, %union.anon.104 { %struct.anon.105 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.104 { %struct.anon.105 { ptr @.str.64, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.104 { %struct.anon.105 { ptr @.str.65, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.104 { %struct.anon.105 { ptr @.str.60, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.104 { %struct.anon.105 { ptr @.str.66, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_jbd2_handle_stats = internal global %struct.trace_event_class { ptr @str__jbd2__trace_system_name, ptr @trace_event_raw_event_jbd2_handle_stats, ptr @perf_trace_jbd2_handle_stats, ptr @trace_event_reg, ptr @trace_event_fields_jbd2_handle_stats, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_jbd2_handle_stats, i64 24), ptr getelementptr (i8, ptr @event_class_jbd2_handle_stats, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_jbd2_handle_stats = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_jbd2_handle_stats, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_jbd2_handle_stats = internal global { [289 x i8], [95 x i8] } { [289 x i8] c"\22dev %d,%d tid %lu type %u line_no %u interval %d sync %d requested_blocks %d dirtied_blocks %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->tid, REC->type, REC->line_no, REC->interval, REC->sync, REC->requested_blocks, REC->dirtied_blocks\00", [95 x i8] zeroinitializer }, align 32
@event_jbd2_handle_stats = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_handle_stats, %union.anon.106 { ptr @__tracepoint_jbd2_handle_stats }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_handle_stats }, ptr @print_fmt_jbd2_handle_stats, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_handle_stats = internal global ptr @event_jbd2_handle_stats, section "_ftrace_events", align 4
@trace_event_fields_jbd2_run_stats = internal global { [12 x %struct.trace_event_fields], [64 x i8] } { [12 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.41, %union.anon.104 { %struct.anon.105 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.56, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.68, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.69, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.70, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.71, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.72, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.73, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.74, %union.anon.104 { %struct.anon.105 { ptr @.str.75, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.74, %union.anon.104 { %struct.anon.105 { ptr @.str.76, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.74, %union.anon.104 { %struct.anon.105 { ptr @.str.77, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [64 x i8] zeroinitializer }, align 32
@event_class_jbd2_run_stats = internal global %struct.trace_event_class { ptr @str__jbd2__trace_system_name, ptr @trace_event_raw_event_jbd2_run_stats, ptr @perf_trace_jbd2_run_stats, ptr @trace_event_reg, ptr @trace_event_fields_jbd2_run_stats, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_jbd2_run_stats, i64 24), ptr getelementptr (i8, ptr @event_class_jbd2_run_stats, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_jbd2_run_stats = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_jbd2_run_stats, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_jbd2_run_stats = internal global { [476 x i8], [100 x i8] } { [476 x i8] c"\22dev %d,%d tid %lu wait %u request_delay %u running %u locked %u flushing %u logging %u handle_count %u blocks %u blocks_logged %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->tid, jiffies_to_msecs(REC->wait), jiffies_to_msecs(REC->request_delay), jiffies_to_msecs(REC->running), jiffies_to_msecs(REC->locked), jiffies_to_msecs(REC->flushing), jiffies_to_msecs(REC->logging), REC->handle_count, REC->blocks, REC->blocks_logged\00", [100 x i8] zeroinitializer }, align 32
@event_jbd2_run_stats = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_run_stats, %union.anon.106 { ptr @__tracepoint_jbd2_run_stats }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_run_stats }, ptr @print_fmt_jbd2_run_stats, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_run_stats = internal global ptr @event_jbd2_run_stats, section "_ftrace_events", align 4
@trace_event_fields_jbd2_checkpoint_stats = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.41, %union.anon.104 { %struct.anon.105 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.56, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.79, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.74, %union.anon.104 { %struct.anon.105 { ptr @.str.80, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.74, %union.anon.104 { %struct.anon.105 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.74, %union.anon.104 { %struct.anon.105 { ptr @.str.82, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_jbd2_checkpoint_stats = internal global %struct.trace_event_class { ptr @str__jbd2__trace_system_name, ptr @trace_event_raw_event_jbd2_checkpoint_stats, ptr @perf_trace_jbd2_checkpoint_stats, ptr @trace_event_reg, ptr @trace_event_fields_jbd2_checkpoint_stats, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_jbd2_checkpoint_stats, i64 24), ptr getelementptr (i8, ptr @event_class_jbd2_checkpoint_stats, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_jbd2_checkpoint_stats = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_jbd2_checkpoint_stats, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_jbd2_checkpoint_stats = internal global { [253 x i8], [35 x i8] } { [253 x i8] c"\22dev %d,%d tid %lu chp_time %u forced_to_close %u written %u dropped %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->tid, jiffies_to_msecs(REC->chp_time), REC->forced_to_close, REC->written, REC->dropped\00", [35 x i8] zeroinitializer }, align 32
@event_jbd2_checkpoint_stats = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_checkpoint_stats, %union.anon.106 { ptr @__tracepoint_jbd2_checkpoint_stats }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_checkpoint_stats }, ptr @print_fmt_jbd2_checkpoint_stats, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_checkpoint_stats = internal global ptr @event_jbd2_checkpoint_stats, section "_ftrace_events", align 4
@trace_event_fields_jbd2_update_log_tail = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.41, %union.anon.104 { %struct.anon.105 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.84, %union.anon.104 { %struct.anon.105 { ptr @.str.85, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.84, %union.anon.104 { %struct.anon.105 { ptr @.str.86, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.87, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.88, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_jbd2_update_log_tail = internal global %struct.trace_event_class { ptr @str__jbd2__trace_system_name, ptr @trace_event_raw_event_jbd2_update_log_tail, ptr @perf_trace_jbd2_update_log_tail, ptr @trace_event_reg, ptr @trace_event_fields_jbd2_update_log_tail, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_jbd2_update_log_tail, i64 24), ptr getelementptr (i8, ptr @event_class_jbd2_update_log_tail, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_jbd2_update_log_tail = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_jbd2_update_log_tail, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_jbd2_update_log_tail = internal global { [197 x i8], [59 x i8] } { [197 x i8] c"\22dev %d,%d from %u to %u offset %lu freed %lu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->tail_sequence, REC->first_tid, REC->block_nr, REC->freed\00", [59 x i8] zeroinitializer }, align 32
@event_jbd2_update_log_tail = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_update_log_tail, %union.anon.106 { ptr @__tracepoint_jbd2_update_log_tail }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_update_log_tail }, ptr @print_fmt_jbd2_update_log_tail, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_update_log_tail = internal global ptr @event_jbd2_update_log_tail, section "_ftrace_events", align 4
@trace_event_fields_jbd2_write_superblock = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.41, %union.anon.104 { %struct.anon.105 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.104 { %struct.anon.105 { ptr @.str.90, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_jbd2_write_superblock = internal global %struct.trace_event_class { ptr @str__jbd2__trace_system_name, ptr @trace_event_raw_event_jbd2_write_superblock, ptr @perf_trace_jbd2_write_superblock, ptr @trace_event_reg, ptr @trace_event_fields_jbd2_write_superblock, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_jbd2_write_superblock, i64 24), ptr getelementptr (i8, ptr @event_class_jbd2_write_superblock, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_jbd2_write_superblock = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_jbd2_write_superblock, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_jbd2_write_superblock = internal global { [126 x i8], [34 x i8] } { [126 x i8] c"\22dev %d,%d write_op %x\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->write_op\00", [34 x i8] zeroinitializer }, align 32
@event_jbd2_write_superblock = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_write_superblock, %union.anon.106 { ptr @__tracepoint_jbd2_write_superblock }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_write_superblock }, ptr @print_fmt_jbd2_write_superblock, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_write_superblock = internal global ptr @event_jbd2_write_superblock, section "_ftrace_events", align 4
@trace_event_fields_jbd2_lock_buffer_stall = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.41, %union.anon.104 { %struct.anon.105 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.92, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_jbd2_lock_buffer_stall = internal global %struct.trace_event_class { ptr @str__jbd2__trace_system_name, ptr @trace_event_raw_event_jbd2_lock_buffer_stall, ptr @perf_trace_jbd2_lock_buffer_stall, ptr @trace_event_reg, ptr @trace_event_fields_jbd2_lock_buffer_stall, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_jbd2_lock_buffer_stall, i64 24), ptr getelementptr (i8, ptr @event_class_jbd2_lock_buffer_stall, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_jbd2_lock_buffer_stall = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_jbd2_lock_buffer_stall, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_jbd2_lock_buffer_stall = internal global { [127 x i8], [33 x i8] } { [127 x i8] c"\22dev %d,%d stall_ms %lu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->stall_ms\00", [33 x i8] zeroinitializer }, align 32
@event_jbd2_lock_buffer_stall = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_lock_buffer_stall, %union.anon.106 { ptr @__tracepoint_jbd2_lock_buffer_stall }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_lock_buffer_stall }, ptr @print_fmt_jbd2_lock_buffer_stall, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_lock_buffer_stall = internal global ptr @event_jbd2_lock_buffer_stall, section "_ftrace_events", align 4
@trace_event_fields_jbd2_journal_shrink = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.41, %union.anon.104 { %struct.anon.105 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.94, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.95, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_jbd2_journal_shrink = internal global %struct.trace_event_class { ptr @str__jbd2__trace_system_name, ptr @trace_event_raw_event_jbd2_journal_shrink, ptr @perf_trace_jbd2_journal_shrink, ptr @trace_event_reg, ptr @trace_event_fields_jbd2_journal_shrink, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_jbd2_journal_shrink, i64 24), ptr getelementptr (i8, ptr @event_class_jbd2_journal_shrink, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_jbd2_journal_shrink = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_jbd2_journal_shrink, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_jbd2_journal_shrink = internal global { [153 x i8], [39 x i8] } { [153 x i8] c"\22dev %d,%d nr_to_scan %lu count %lu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->nr_to_scan, REC->count\00", [39 x i8] zeroinitializer }, align 32
@event_jbd2_shrink_count = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_journal_shrink, %union.anon.106 { ptr @__tracepoint_jbd2_shrink_count }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_journal_shrink }, ptr @print_fmt_jbd2_journal_shrink, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_shrink_count = internal global ptr @event_jbd2_shrink_count, section "_ftrace_events", align 4
@event_jbd2_shrink_scan_enter = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_journal_shrink, %union.anon.106 { ptr @__tracepoint_jbd2_shrink_scan_enter }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_journal_shrink }, ptr @print_fmt_jbd2_journal_shrink, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_shrink_scan_enter = internal global ptr @event_jbd2_shrink_scan_enter, section "_ftrace_events", align 4
@trace_event_fields_jbd2_shrink_scan_exit = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.41, %union.anon.104 { %struct.anon.105 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.94, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.95, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_jbd2_shrink_scan_exit = internal global %struct.trace_event_class { ptr @str__jbd2__trace_system_name, ptr @trace_event_raw_event_jbd2_shrink_scan_exit, ptr @perf_trace_jbd2_shrink_scan_exit, ptr @trace_event_reg, ptr @trace_event_fields_jbd2_shrink_scan_exit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_jbd2_shrink_scan_exit, i64 24), ptr getelementptr (i8, ptr @event_class_jbd2_shrink_scan_exit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_jbd2_shrink_scan_exit = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_jbd2_shrink_scan_exit, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_jbd2_shrink_scan_exit = internal global { [183 x i8], [41 x i8] } { [183 x i8] c"\22dev %d,%d nr_to_scan %lu nr_shrunk %lu count %lu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->nr_to_scan, REC->nr_shrunk, REC->count\00", [41 x i8] zeroinitializer }, align 32
@event_jbd2_shrink_scan_exit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_shrink_scan_exit, %union.anon.106 { ptr @__tracepoint_jbd2_shrink_scan_exit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_shrink_scan_exit }, ptr @print_fmt_jbd2_shrink_scan_exit, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_shrink_scan_exit = internal global ptr @event_jbd2_shrink_scan_exit, section "_ftrace_events", align 4
@trace_event_fields_jbd2_shrink_checkpoint_list = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.41, %union.anon.104 { %struct.anon.105 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.84, %union.anon.104 { %struct.anon.105 { ptr @.str.86, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.84, %union.anon.104 { %struct.anon.105 { ptr @.str.56, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.84, %union.anon.104 { %struct.anon.105 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.100, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.55, %union.anon.104 { %struct.anon.105 { ptr @.str.101, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.84, %union.anon.104 { %struct.anon.105 { ptr @.str.102, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_jbd2_shrink_checkpoint_list = internal global %struct.trace_event_class { ptr @str__jbd2__trace_system_name, ptr @trace_event_raw_event_jbd2_shrink_checkpoint_list, ptr @perf_trace_jbd2_shrink_checkpoint_list, ptr @trace_event_reg, ptr @trace_event_fields_jbd2_shrink_checkpoint_list, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_jbd2_shrink_checkpoint_list, i64 24), ptr getelementptr (i8, ptr @event_class_jbd2_shrink_checkpoint_list, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_jbd2_shrink_checkpoint_list = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_jbd2_shrink_checkpoint_list, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_jbd2_shrink_checkpoint_list = internal global { [258 x i8], [94 x i8] } { [258 x i8] c"\22dev %d,%d shrink transaction %u-%u(%u) freed %lu scanned %lu next transaction %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->first_tid, REC->tid, REC->last_tid, REC->nr_freed, REC->nr_scanned, REC->next_tid\00", [94 x i8] zeroinitializer }, align 32
@event_jbd2_shrink_checkpoint_list = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_jbd2_shrink_checkpoint_list, %union.anon.106 { ptr @__tracepoint_jbd2_shrink_checkpoint_list }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_jbd2_shrink_checkpoint_list }, ptr @print_fmt_jbd2_shrink_checkpoint_list, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_jbd2_shrink_checkpoint_list = internal global ptr @event_jbd2_shrink_checkpoint_list, section "_ftrace_events", align 4
@__bpf_trace_tp_map_jbd2_checkpoint = internal global %union.anon.108 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_checkpoint, ptr @__bpf_trace_jbd2_checkpoint, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_start_commit = internal global %union.anon.109 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_start_commit, ptr @__bpf_trace_jbd2_commit, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_commit_locking = internal global %union.anon.110 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_commit_locking, ptr @__bpf_trace_jbd2_commit, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_commit_flushing = internal global %union.anon.111 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_commit_flushing, ptr @__bpf_trace_jbd2_commit, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_commit_logging = internal global %union.anon.112 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_commit_logging, ptr @__bpf_trace_jbd2_commit, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_drop_transaction = internal global %union.anon.113 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_drop_transaction, ptr @__bpf_trace_jbd2_commit, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_end_commit = internal global %union.anon.114 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_end_commit, ptr @__bpf_trace_jbd2_end_commit, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_submit_inode_data = internal global %union.anon.115 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_submit_inode_data, ptr @__bpf_trace_jbd2_submit_inode_data, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_handle_start = internal global %union.anon.116 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_handle_start, ptr @__bpf_trace_jbd2_handle_start_class, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_handle_restart = internal global %union.anon.117 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_handle_restart, ptr @__bpf_trace_jbd2_handle_start_class, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_handle_extend = internal global %union.anon.118 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_handle_extend, ptr @__bpf_trace_jbd2_handle_extend, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_handle_stats = internal global %union.anon.119 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_handle_stats, ptr @__bpf_trace_jbd2_handle_stats, i32 8, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_run_stats = internal global %union.anon.120 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_run_stats, ptr @__bpf_trace_jbd2_run_stats, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_checkpoint_stats = internal global %union.anon.121 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_checkpoint_stats, ptr @__bpf_trace_jbd2_checkpoint_stats, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_update_log_tail = internal global %union.anon.122 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_update_log_tail, ptr @__bpf_trace_jbd2_update_log_tail, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_write_superblock = internal global %union.anon.123 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_write_superblock, ptr @__bpf_trace_jbd2_write_superblock, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_lock_buffer_stall = internal global %union.anon.124 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_lock_buffer_stall, ptr @__bpf_trace_jbd2_lock_buffer_stall, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_shrink_count = internal global %union.anon.125 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_shrink_count, ptr @__bpf_trace_jbd2_journal_shrink, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_shrink_scan_enter = internal global %union.anon.126 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_shrink_scan_enter, ptr @__bpf_trace_jbd2_journal_shrink, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_shrink_scan_exit = internal global %union.anon.127 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_shrink_scan_exit, ptr @__bpf_trace_jbd2_shrink_scan_exit, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_jbd2_shrink_checkpoint_list = internal global %union.anon.128 { %struct.bpf_raw_event_map { ptr @__tracepoint_jbd2_shrink_checkpoint_list, ptr @__bpf_trace_jbd2_shrink_checkpoint_list, i32 7, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@jbd2_journal_enable_debug = dso_local global i16 0, section ".data..read_mostly", align 2
@__kstrtab_jbd2_journal_enable_debug = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_enable_debug = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_enable_debug = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_enable_debug to i32), ptr @__kstrtab_jbd2_journal_enable_debug, ptr @__kstrtabns_jbd2_journal_enable_debug }, section "___ksymtab+jbd2_journal_enable_debug", align 4
@__param_str_jbd2_debug = internal constant [16 x i8] c"jbd2.jbd2_debug\00", align 1
@param_ops_ushort = external dso_local constant %struct.kernel_param_ops, align 4
@__param_jbd2_debug = internal constant %struct.kernel_param { ptr @__param_str_jbd2_debug, ptr null, ptr @param_ops_ushort, i16 420, i8 -1, i8 0, %union.anon.57 { ptr @jbd2_journal_enable_debug } }, section "__param", align 4
@__UNIQUE_ID_jbd2_debugtype411 = internal constant [32 x i8] c"jbd2.parmtype=jbd2_debug:ushort\00", section ".modinfo", align 1
@__UNIQUE_ID_jbd2_debug412 = internal constant [46 x i8] c"jbd2.parm=jbd2_debug:Debugging level for jbd2\00", section ".modinfo", align 1
@__kstrtab_jbd2_journal_extend = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_extend = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_extend = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_extend to i32), ptr @__kstrtab_jbd2_journal_extend, ptr @__kstrtabns_jbd2_journal_extend }, section "___ksymtab+jbd2_journal_extend", align 4
@__kstrtab_jbd2_journal_stop = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_stop = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_stop = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_stop to i32), ptr @__kstrtab_jbd2_journal_stop, ptr @__kstrtabns_jbd2_journal_stop }, section "___ksymtab+jbd2_journal_stop", align 4
@__kstrtab_jbd2_journal_lock_updates = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_lock_updates = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_lock_updates = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_lock_updates to i32), ptr @__kstrtab_jbd2_journal_lock_updates, ptr @__kstrtabns_jbd2_journal_lock_updates }, section "___ksymtab+jbd2_journal_lock_updates", align 4
@__kstrtab_jbd2_journal_unlock_updates = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_unlock_updates = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_unlock_updates = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_unlock_updates to i32), ptr @__kstrtab_jbd2_journal_unlock_updates, ptr @__kstrtabns_jbd2_journal_unlock_updates }, section "___ksymtab+jbd2_journal_unlock_updates", align 4
@__kstrtab_jbd2_journal_get_write_access = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_get_write_access = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_get_write_access = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_get_write_access to i32), ptr @__kstrtab_jbd2_journal_get_write_access, ptr @__kstrtabns_jbd2_journal_get_write_access }, section "___ksymtab+jbd2_journal_get_write_access", align 4
@__kstrtab_jbd2_journal_get_create_access = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_get_create_access = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_get_create_access = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_get_create_access to i32), ptr @__kstrtab_jbd2_journal_get_create_access, ptr @__kstrtabns_jbd2_journal_get_create_access }, section "___ksymtab+jbd2_journal_get_create_access", align 4
@__kstrtab_jbd2_journal_get_undo_access = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_get_undo_access = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_get_undo_access = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_get_undo_access to i32), ptr @__kstrtab_jbd2_journal_get_undo_access, ptr @__kstrtabns_jbd2_journal_get_undo_access }, section "___ksymtab+jbd2_journal_get_undo_access", align 4
@__kstrtab_jbd2_journal_set_triggers = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_set_triggers = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_set_triggers = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_set_triggers to i32), ptr @__kstrtab_jbd2_journal_set_triggers, ptr @__kstrtabns_jbd2_journal_set_triggers }, section "___ksymtab+jbd2_journal_set_triggers", align 4
@__kstrtab_jbd2_journal_dirty_metadata = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_dirty_metadata = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_dirty_metadata = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_dirty_metadata to i32), ptr @__kstrtab_jbd2_journal_dirty_metadata, ptr @__kstrtabns_jbd2_journal_dirty_metadata }, section "___ksymtab+jbd2_journal_dirty_metadata", align 4
@__kstrtab_jbd2_journal_forget = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_forget = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_forget = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_forget to i32), ptr @__kstrtab_jbd2_journal_forget, ptr @__kstrtabns_jbd2_journal_forget }, section "___ksymtab+jbd2_journal_forget", align 4
@__kstrtab_jbd2_journal_flush = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_flush = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_flush = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_flush to i32), ptr @__kstrtab_jbd2_journal_flush, ptr @__kstrtabns_jbd2_journal_flush }, section "___ksymtab+jbd2_journal_flush", align 4
@__kstrtab_jbd2_journal_revoke = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_revoke = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_revoke = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_revoke to i32), ptr @__kstrtab_jbd2_journal_revoke, ptr @__kstrtabns_jbd2_journal_revoke }, section "___ksymtab+jbd2_journal_revoke", align 4
@__kstrtab_jbd2_journal_init_dev = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_init_dev = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_init_dev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_init_dev to i32), ptr @__kstrtab_jbd2_journal_init_dev, ptr @__kstrtabns_jbd2_journal_init_dev }, section "___ksymtab+jbd2_journal_init_dev", align 4
@__kstrtab_jbd2_journal_init_inode = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_init_inode = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_init_inode = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_init_inode to i32), ptr @__kstrtab_jbd2_journal_init_inode, ptr @__kstrtabns_jbd2_journal_init_inode }, section "___ksymtab+jbd2_journal_init_inode", align 4
@__kstrtab_jbd2_journal_check_used_features = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_check_used_features = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_check_used_features = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_check_used_features to i32), ptr @__kstrtab_jbd2_journal_check_used_features, ptr @__kstrtabns_jbd2_journal_check_used_features }, section "___ksymtab+jbd2_journal_check_used_features", align 4
@__kstrtab_jbd2_journal_check_available_features = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_check_available_features = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_check_available_features = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_check_available_features to i32), ptr @__kstrtab_jbd2_journal_check_available_features, ptr @__kstrtabns_jbd2_journal_check_available_features }, section "___ksymtab+jbd2_journal_check_available_features", align 4
@__kstrtab_jbd2_journal_set_features = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_set_features = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_set_features = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_set_features to i32), ptr @__kstrtab_jbd2_journal_set_features, ptr @__kstrtabns_jbd2_journal_set_features }, section "___ksymtab+jbd2_journal_set_features", align 4
@__kstrtab_jbd2_journal_load = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_load = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_load = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_load to i32), ptr @__kstrtab_jbd2_journal_load, ptr @__kstrtabns_jbd2_journal_load }, section "___ksymtab+jbd2_journal_load", align 4
@__kstrtab_jbd2_journal_destroy = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_destroy = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_destroy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_destroy to i32), ptr @__kstrtab_jbd2_journal_destroy, ptr @__kstrtabns_jbd2_journal_destroy }, section "___ksymtab+jbd2_journal_destroy", align 4
@__kstrtab_jbd2_journal_abort = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_abort = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_abort = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_abort to i32), ptr @__kstrtab_jbd2_journal_abort, ptr @__kstrtabns_jbd2_journal_abort }, section "___ksymtab+jbd2_journal_abort", align 4
@__kstrtab_jbd2_journal_errno = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_errno = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_errno = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_errno to i32), ptr @__kstrtab_jbd2_journal_errno, ptr @__kstrtabns_jbd2_journal_errno }, section "___ksymtab+jbd2_journal_errno", align 4
@__kstrtab_jbd2_journal_ack_err = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_ack_err = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_ack_err = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_ack_err to i32), ptr @__kstrtab_jbd2_journal_ack_err, ptr @__kstrtabns_jbd2_journal_ack_err }, section "___ksymtab+jbd2_journal_ack_err", align 4
@__kstrtab_jbd2_journal_clear_err = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_clear_err = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_clear_err = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_clear_err to i32), ptr @__kstrtab_jbd2_journal_clear_err, ptr @__kstrtabns_jbd2_journal_clear_err }, section "___ksymtab+jbd2_journal_clear_err", align 4
@__kstrtab_jbd2_log_wait_commit = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_log_wait_commit = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_log_wait_commit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_log_wait_commit to i32), ptr @__kstrtab_jbd2_log_wait_commit, ptr @__kstrtabns_jbd2_log_wait_commit }, section "___ksymtab+jbd2_log_wait_commit", align 4
@__kstrtab_jbd2_log_start_commit = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_log_start_commit = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_log_start_commit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_log_start_commit to i32), ptr @__kstrtab_jbd2_log_start_commit, ptr @__kstrtabns_jbd2_log_start_commit }, section "___ksymtab+jbd2_log_start_commit", align 4
@__kstrtab_jbd2_journal_start_commit = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_start_commit = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_start_commit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_start_commit to i32), ptr @__kstrtab_jbd2_journal_start_commit, ptr @__kstrtabns_jbd2_journal_start_commit }, section "___ksymtab+jbd2_journal_start_commit", align 4
@__kstrtab_jbd2_journal_force_commit_nested = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_force_commit_nested = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_force_commit_nested = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_force_commit_nested to i32), ptr @__kstrtab_jbd2_journal_force_commit_nested, ptr @__kstrtabns_jbd2_journal_force_commit_nested }, section "___ksymtab+jbd2_journal_force_commit_nested", align 4
@__kstrtab_jbd2_journal_wipe = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_wipe = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_wipe = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_wipe to i32), ptr @__kstrtab_jbd2_journal_wipe, ptr @__kstrtabns_jbd2_journal_wipe }, section "___ksymtab+jbd2_journal_wipe", align 4
@__kstrtab_jbd2_journal_blocks_per_page = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_blocks_per_page = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_blocks_per_page = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_blocks_per_page to i32), ptr @__kstrtab_jbd2_journal_blocks_per_page, ptr @__kstrtabns_jbd2_journal_blocks_per_page }, section "___ksymtab+jbd2_journal_blocks_per_page", align 4
@__kstrtab_jbd2_journal_invalidatepage = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_invalidatepage = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_invalidatepage = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_invalidatepage to i32), ptr @__kstrtab_jbd2_journal_invalidatepage, ptr @__kstrtabns_jbd2_journal_invalidatepage }, section "___ksymtab+jbd2_journal_invalidatepage", align 4
@__kstrtab_jbd2_journal_try_to_free_buffers = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_try_to_free_buffers = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_try_to_free_buffers = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_try_to_free_buffers to i32), ptr @__kstrtab_jbd2_journal_try_to_free_buffers, ptr @__kstrtabns_jbd2_journal_try_to_free_buffers }, section "___ksymtab+jbd2_journal_try_to_free_buffers", align 4
@__kstrtab_jbd2_journal_force_commit = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_force_commit = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_force_commit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_force_commit to i32), ptr @__kstrtab_jbd2_journal_force_commit, ptr @__kstrtabns_jbd2_journal_force_commit }, section "___ksymtab+jbd2_journal_force_commit", align 4
@__kstrtab_jbd2_journal_inode_ranged_write = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_inode_ranged_write = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_inode_ranged_write = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_inode_ranged_write to i32), ptr @__kstrtab_jbd2_journal_inode_ranged_write, ptr @__kstrtabns_jbd2_journal_inode_ranged_write }, section "___ksymtab+jbd2_journal_inode_ranged_write", align 4
@__kstrtab_jbd2_journal_inode_ranged_wait = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_inode_ranged_wait = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_inode_ranged_wait = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_inode_ranged_wait to i32), ptr @__kstrtab_jbd2_journal_inode_ranged_wait, ptr @__kstrtabns_jbd2_journal_inode_ranged_wait }, section "___ksymtab+jbd2_journal_inode_ranged_wait", align 4
@__kstrtab_jbd2_journal_submit_inode_data_buffers = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_submit_inode_data_buffers = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_submit_inode_data_buffers = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_submit_inode_data_buffers to i32), ptr @__kstrtab_jbd2_journal_submit_inode_data_buffers, ptr @__kstrtabns_jbd2_journal_submit_inode_data_buffers }, section "___ksymtab+jbd2_journal_submit_inode_data_buffers", align 4
@__kstrtab_jbd2_journal_finish_inode_data_buffers = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_finish_inode_data_buffers = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_finish_inode_data_buffers = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_finish_inode_data_buffers to i32), ptr @__kstrtab_jbd2_journal_finish_inode_data_buffers, ptr @__kstrtabns_jbd2_journal_finish_inode_data_buffers }, section "___ksymtab+jbd2_journal_finish_inode_data_buffers", align 4
@__kstrtab_jbd2_journal_init_jbd_inode = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_init_jbd_inode = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_init_jbd_inode = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_init_jbd_inode to i32), ptr @__kstrtab_jbd2_journal_init_jbd_inode, ptr @__kstrtabns_jbd2_journal_init_jbd_inode }, section "___ksymtab+jbd2_journal_init_jbd_inode", align 4
@__kstrtab_jbd2_journal_release_jbd_inode = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_release_jbd_inode = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_release_jbd_inode = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_release_jbd_inode to i32), ptr @__kstrtab_jbd2_journal_release_jbd_inode, ptr @__kstrtabns_jbd2_journal_release_jbd_inode }, section "___ksymtab+jbd2_journal_release_jbd_inode", align 4
@__kstrtab_jbd2_journal_begin_ordered_truncate = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_begin_ordered_truncate = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_begin_ordered_truncate = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_begin_ordered_truncate to i32), ptr @__kstrtab_jbd2_journal_begin_ordered_truncate, ptr @__kstrtabns_jbd2_journal_begin_ordered_truncate }, section "___ksymtab+jbd2_journal_begin_ordered_truncate", align 4
@jbd2_inode_cache = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@__kstrtab_jbd2_inode_cache = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_inode_cache = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_inode_cache = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_inode_cache to i32), ptr @__kstrtab_jbd2_inode_cache, ptr @__kstrtabns_jbd2_inode_cache }, section "___ksymtab+jbd2_inode_cache", align 4
@__jbd2_debug._entry = internal constant %struct.pi_entry { ptr @.str, ptr @.str.1, ptr @.str.2, i32 115, ptr null, ptr null }, align 1
@.str = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"\017%s: (%s, %u): %pV\00", [44 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"__jbd2_debug\00", [19 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"fs/jbd2/journal.c\00", [46 x i8] zeroinitializer }, align 32
@__jbd2_debug._entry_ptr = internal global ptr @__jbd2_debug._entry, section ".printk_index", align 4
@__kstrtab___jbd2_debug = external dso_local constant [0 x i8], align 1
@__kstrtabns___jbd2_debug = external dso_local constant [0 x i8], align 1
@__ksymtab___jbd2_debug = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__jbd2_debug to i32), ptr @__kstrtab___jbd2_debug, ptr @__kstrtabns___jbd2_debug }, section "___ksymtab+__jbd2_debug", align 4
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@__func__.__jbd2_log_start_commit = private unnamed_addr constant [24 x i8] c"__jbd2_log_start_commit\00", align 1
@.str.3 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"JBD2: requesting commit %u/%u\0A\00", [33 x i8] zeroinitializer }, align 32
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@__jbd2_log_start_commit.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.4 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"JBD2: bad log_start_commit: %u %u %u %u\0A\00", [55 x i8] zeroinitializer }, align 32
@__kstrtab_jbd2_trans_will_send_data_barrier = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_trans_will_send_data_barrier = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_trans_will_send_data_barrier = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_trans_will_send_data_barrier to i32), ptr @__kstrtab_jbd2_trans_will_send_data_barrier, ptr @__kstrtabns_jbd2_trans_will_send_data_barrier }, section "___ksymtab+jbd2_trans_will_send_data_barrier", align 4
@jbd2_log_wait_commit._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.5, ptr @.str.6, ptr @.str.2, i32 704, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\013%s: error: j_commit_request=%u, tid=%u\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"jbd2_log_wait_commit\00", [43 x i8] zeroinitializer }, align 32
@jbd2_log_wait_commit._entry_ptr = internal global ptr @jbd2_log_wait_commit._entry, section ".printk_index", align 4
@.str.7 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"JBD2: want %u, j_commit_sequence=%u\0A\00", [59 x i8] zeroinitializer }, align 32
@__kstrtab_jbd2_fc_begin_commit = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_fc_begin_commit = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_fc_begin_commit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_fc_begin_commit to i32), ptr @__kstrtab_jbd2_fc_begin_commit, ptr @__kstrtabns_jbd2_fc_begin_commit }, section "___ksymtab+jbd2_fc_begin_commit", align 4
@__kstrtab_jbd2_fc_end_commit = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_fc_end_commit = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_fc_end_commit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_fc_end_commit to i32), ptr @__kstrtab_jbd2_fc_end_commit, ptr @__kstrtabns_jbd2_fc_end_commit }, section "___ksymtab+jbd2_fc_end_commit", align 4
@__kstrtab_jbd2_fc_end_commit_fallback = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_fc_end_commit_fallback = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_fc_end_commit_fallback = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_fc_end_commit_fallback to i32), ptr @__kstrtab_jbd2_fc_end_commit_fallback, ptr @__kstrtabns_jbd2_fc_end_commit_fallback }, section "___ksymtab+jbd2_fc_end_commit_fallback", align 4
@__kstrtab_jbd2_transaction_committed = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_transaction_committed = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_transaction_committed = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_transaction_committed to i32), ptr @__kstrtab_jbd2_transaction_committed, ptr @__kstrtabns_jbd2_transaction_committed }, section "___ksymtab+jbd2_transaction_committed", align 4
@__kstrtab_jbd2_complete_transaction = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_complete_transaction = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_complete_transaction = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_complete_transaction to i32), ptr @__kstrtab_jbd2_complete_transaction, ptr @__kstrtabns_jbd2_complete_transaction }, section "___ksymtab+jbd2_complete_transaction", align 4
@__kstrtab_jbd2_fc_get_buf = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_fc_get_buf = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_fc_get_buf = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_fc_get_buf to i32), ptr @__kstrtab_jbd2_fc_get_buf, ptr @__kstrtabns_jbd2_fc_get_buf }, section "___ksymtab+jbd2_fc_get_buf", align 4
@__kstrtab_jbd2_fc_wait_bufs = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_fc_wait_bufs = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_fc_wait_bufs = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_fc_wait_bufs to i32), ptr @__kstrtab_jbd2_fc_wait_bufs, ptr @__kstrtabns_jbd2_fc_wait_bufs }, section "___ksymtab+jbd2_fc_wait_bufs", align 4
@__kstrtab_jbd2_fc_release_bufs = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_fc_release_bufs = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_fc_release_bufs = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_fc_release_bufs to i32), ptr @__kstrtab_jbd2_fc_release_bufs, ptr @__kstrtabns_jbd2_fc_release_bufs }, section "___ksymtab+jbd2_fc_release_bufs", align 4
@jbd2_journal_bmap._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.8, ptr @.str.9, ptr @.str.2, i32 979, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\011%s: journal block not found at offset %lu on %s\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"jbd2_journal_bmap\00", [46 x i8] zeroinitializer }, align 32
@jbd2_journal_bmap._entry_ptr = internal global ptr @jbd2_journal_bmap._entry, section ".printk_index", align 4
@__func__.__jbd2_update_log_tail = private unnamed_addr constant [23 x i8] c"__jbd2_update_log_tail\00", align 1
@.str.10 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"Cleaning journal tail from %u to %u (offset %lu), freeing %lu\0A\00", [33 x i8] zeroinitializer }, align 32
@jbd2_journal_init_inode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.11, ptr @.str.12, ptr @.str.2, i32 1495, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\013%s: Cannot locate journal superblock\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"jbd2_journal_init_inode\00", [40 x i8] zeroinitializer }, align 32
@jbd2_journal_init_inode._entry_ptr = internal global ptr @jbd2_journal_init_inode._entry, section ".printk_index", align 4
@.str.13 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"JBD2: inode %s/%ld, size %lld, bits %d, blksize %ld\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"-%lu\00", [27 x i8] zeroinitializer }, align 32
@__func__.jbd2_journal_update_sb_log_tail = private unnamed_addr constant [32 x i8] c"jbd2_journal_update_sb_log_tail\00", align 1
@.str.15 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"JBD2: updating superblock (start %lu, seq %u)\0A\00", [49 x i8] zeroinitializer }, align 32
@__func__.jbd2_journal_update_sb_errno = private unnamed_addr constant [29 x i8] c"jbd2_journal_update_sb_errno\00", align 1
@.str.16 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"JBD2: updating superblock error (errno %d)\0A\00", [52 x i8] zeroinitializer }, align 32
@__kstrtab_jbd2_journal_update_sb_errno = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_update_sb_errno = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_update_sb_errno = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_update_sb_errno to i32), ptr @__kstrtab_jbd2_journal_update_sb_errno, ptr @__kstrtabns_jbd2_journal_update_sb_errno }, section "___ksymtab+jbd2_journal_update_sb_errno", align 4
@jbd2_journal_load._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.17, ptr @.str.18, ptr @.str.2, i32 2072, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\014JBD2: Unrecognised features on journal\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"jbd2_journal_load\00", [46 x i8] zeroinitializer }, align 32
@jbd2_journal_load._entry_ptr = internal global ptr @jbd2_journal_load._entry, section ".printk_index", align 4
@jbd2_journal_load._entry.19 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.20, ptr @.str.18, ptr @.str.2, i32 2092, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\013JBD2: journal transaction %u on %s is corrupt.\0A\00", [46 x i8] zeroinitializer }, align 32
@jbd2_journal_load._entry_ptr.21 = internal global ptr @jbd2_journal_load._entry.19, section ".printk_index", align 4
@jbd2_journal_load._entry.22 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.18, ptr @.str.2, i32 2111, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"\014JBD2: recovery failed\0A\00", [39 x i8] zeroinitializer }, align 32
@jbd2_journal_load._entry_ptr.24 = internal global ptr @jbd2_journal_load._entry.22, section ".printk_index", align 4
@__func__.jbd2_journal_set_features = private unnamed_addr constant [26 x i8] c"jbd2_journal_set_features\00", align 1
@.str.25 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Setting new features 0x%lx/0x%lx/0x%lx\0A\00", [56 x i8] zeroinitializer }, align 32
@jbd2_journal_set_features._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.26, ptr @__func__.jbd2_journal_set_features, ptr @.str.2, i32 2347, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\013JBD2: Cannot enable fast commits.\0A\00", [59 x i8] zeroinitializer }, align 32
@jbd2_journal_set_features._entry_ptr = internal global ptr @jbd2_journal_set_features._entry, section ".printk_index", align 4
@.str.27 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"crc32c\00", [25 x i8] zeroinitializer }, align 32
@jbd2_journal_set_features._entry.28 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.29, ptr @__func__.jbd2_journal_set_features, ptr @.str.2, i32 2357, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\013JBD2: Cannot load crc32c driver.\0A\00", [60 x i8] zeroinitializer }, align 32
@jbd2_journal_set_features._entry_ptr.30 = internal global ptr @jbd2_journal_set_features._entry.28, section ".printk_index", align 4
@__func__.jbd2_journal_clear_features = private unnamed_addr constant [28 x i8] c"jbd2_journal_clear_features\00", align 1
@.str.31 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Clear features 0x%lx/0x%lx/0x%lx\0A\00", [62 x i8] zeroinitializer }, align 32
@__kstrtab_jbd2_journal_clear_features = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_clear_features = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_clear_features = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_clear_features to i32), ptr @__kstrtab_jbd2_journal_clear_features, ptr @__kstrtabns_jbd2_journal_clear_features }, section "___ksymtab+jbd2_journal_clear_features", align 4
@jbd2_journal_wipe._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.32, ptr @.str.33, ptr @.str.2, i32 2533, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\014JBD2: %s recovery information on journal\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"jbd2_journal_wipe\00", [46 x i8] zeroinitializer }, align 32
@jbd2_journal_wipe._entry_ptr = internal global ptr @jbd2_journal_wipe._entry, section ".printk_index", align 4
@.str.34 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Clearing\00", [23 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Ignoring\00", [23 x i8] zeroinitializer }, align 32
@jbd2_journal_abort._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.36, ptr @.str.37, ptr @.str.2, i32 2621, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\013Aborting journal on device %s.\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"jbd2_journal_abort\00", [45 x i8] zeroinitializer }, align 32
@jbd2_journal_abort._entry_ptr = internal global ptr @jbd2_journal_abort._entry, section ".printk_index", align 4
@__kstrtab_jbd2_journal_grab_journal_head = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_grab_journal_head = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_grab_journal_head = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_grab_journal_head to i32), ptr @__kstrtab_jbd2_journal_grab_journal_head, ptr @__kstrtabns_jbd2_journal_grab_journal_head }, section "___ksymtab+jbd2_journal_grab_journal_head", align 4
@__kstrtab_jbd2_journal_put_journal_head = external dso_local constant [0 x i8], align 1
@__kstrtabns_jbd2_journal_put_journal_head = external dso_local constant [0 x i8], align 1
@__ksymtab_jbd2_journal_put_journal_head = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @jbd2_journal_put_journal_head to i32), ptr @__kstrtab_jbd2_journal_put_journal_head, ptr @__kstrtabns_jbd2_journal_put_journal_head }, section "___ksymtab+jbd2_journal_put_journal_head", align 4
@proc_jbd2_stats = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@.str.38 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"fs/jbd2\00", [24 x i8] zeroinitializer }, align 32
@nr_journal_heads = internal global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@journal_exit._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.39, ptr @.str.40, ptr @.str.2, i32 3191, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\013JBD2: leaked %d journal_heads!\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"journal_exit\00", [19 x i8] zeroinitializer }, align 32
@journal_exit._entry_ptr = internal global ptr @journal_exit._entry, section ".printk_index", align 4
@__UNIQUE_ID_file417 = internal constant [23 x i8] c"jbd2.file=fs/jbd2/jbd2\00", section ".modinfo", align 1
@__UNIQUE_ID_license418 = internal constant [17 x i8] c"jbd2.license=GPL\00", section ".modinfo", align 1
@__initcall__kmod_jbd2__419_3198_journal_init6 = internal global ptr @journal_init, section ".initcall6.init", align 4
@__exitcall_journal_exit = internal global ptr @journal_exit, section ".exitcall.exit", align 4
@jbd2_handle_cache = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@.str.41 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"dev_t\00", [26 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"dev\00", [28 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"result\00", [25 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"dev %d,%d result %d\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"char\00", [27 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"sync_commit\00", [20 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"transaction\00", [20 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"dev %d,%d transaction %d sync %d\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"head\00", [27 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"dev %d,%d transaction %d sync %d head %d\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"ino_t\00", [26 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ino\00", [28 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"dev %d,%d ino %lu\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned long\00", [18 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"tid\00", [28 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"type\00", [27 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"line_no\00", [24 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"requested_blocks\00", [47 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"dev %d,%d tid %lu type %u line_no %u requested_blocks %d\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"buffer_credits\00", [17 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"dev %d,%d tid %lu type %u line_no %u buffer_credits %d requested_blocks %d\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"interval\00", [23 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"sync\00", [27 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"dirtied_blocks\00", [17 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [96 x i8], [32 x i8] } { [96 x i8] c"dev %d,%d tid %lu type %u line_no %u interval %d sync %d requested_blocks %d dirtied_blocks %d\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"wait\00", [27 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"request_delay\00", [18 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"running\00", [24 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"locked\00", [25 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"flushing\00", [23 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"logging\00", [24 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"__u32\00", [26 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"handle_count\00", [19 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"blocks\00", [25 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"blocks_logged\00", [18 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [131 x i8], [61 x i8] } { [131 x i8] c"dev %d,%d tid %lu wait %u request_delay %u running %u locked %u flushing %u logging %u handle_count %u blocks %u blocks_logged %u\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"chp_time\00", [23 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"forced_to_close\00", [16 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"written\00", [24 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"dropped\00", [24 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"dev %d,%d tid %lu chp_time %u forced_to_close %u written %u dropped %u\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"tid_t\00", [26 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"tail_sequence\00", [18 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"first_tid\00", [22 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"block_nr\00", [23 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"freed\00", [26 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"dev %d,%d from %u to %u offset %lu freed %lu\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"write_op\00", [23 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"dev %d,%d write_op %x\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"stall_ms\00", [23 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"dev %d,%d stall_ms %lu\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"nr_to_scan\00", [21 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"count\00", [26 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"dev %d,%d nr_to_scan %lu count %lu\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"nr_shrunk\00", [22 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"dev %d,%d nr_to_scan %lu nr_shrunk %lu count %lu\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"last_tid\00", [23 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"nr_freed\00", [23 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"nr_scanned\00", [21 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"next_tid\00", [23 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [82 x i8], [46 x i8] } { [82 x i8] c"dev %d,%d shrink transaction %u-%u(%u) freed %lu scanned %lu next transaction %u\0A\00", [46 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@pgprot_kernel = external dso_local local_unnamed_addr global i32, align 4
@.str.104 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/linux/buffer_head.h\00", [36 x i8] zeroinitializer }, align 32
@jbd2_journal_has_csum_v2or3.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.105 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"include/linux/jbd2.h\00", [43 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/trace/events/jbd2.h\00", [36 x i8] zeroinitializer }, align 32
@trace_jbd2_update_log_tail.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.107 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.108 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@journal_init_common.jbd2_trans_commit_key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@journal_init_common.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.109 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"&journal->j_wait_transaction_locked\00", [60 x i8] zeroinitializer }, align 32
@journal_init_common.__key.110 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.111 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"&journal->j_wait_done_commit\00", [35 x i8] zeroinitializer }, align 32
@journal_init_common.__key.112 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.113 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"&journal->j_wait_commit\00", [40 x i8] zeroinitializer }, align 32
@journal_init_common.__key.114 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.115 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"&journal->j_wait_updates\00", [39 x i8] zeroinitializer }, align 32
@journal_init_common.__key.116 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.117 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"&journal->j_wait_reserved\00", [38 x i8] zeroinitializer }, align 32
@journal_init_common.__key.118 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.119 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"&journal->j_fc_wait\00", [44 x i8] zeroinitializer }, align 32
@journal_init_common.__key.120 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.121 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"&journal->j_abort_mutex\00", [40 x i8] zeroinitializer }, align 32
@journal_init_common.__key.122 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.123 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"&journal->j_barrier\00", [44 x i8] zeroinitializer }, align 32
@journal_init_common.__key.124 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.125 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"&journal->j_checkpoint_mutex\00", [35 x i8] zeroinitializer }, align 32
@journal_init_common.__key.126 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.127 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"&journal->j_revoke_lock\00", [40 x i8] zeroinitializer }, align 32
@journal_init_common.__key.128 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.129 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"&journal->j_list_lock\00", [42 x i8] zeroinitializer }, align 32
@journal_init_common.__key.130 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.131 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"&journal->j_state_lock\00", [41 x i8] zeroinitializer }, align 32
@journal_init_common.__key.132 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.133 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"&journal->j_history_lock\00", [39 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"jbd2_handle\00", [20 x i8] zeroinitializer }, align 32
@journal_init_common._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.136, ptr @.str.2, i32 1406, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\013%s: Cannot get buffer for journal superblock\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"journal_init_common\00", [44 x i8] zeroinitializer }, align 32
@journal_init_common._entry_ptr = internal global ptr @journal_init_common._entry, section ".printk_index", align 4
@journal_init_common.__key.137 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@trace_jbd2_shrink_scan_enter.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_jbd2_shrink_scan_exit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_jbd2_shrink_count.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.138 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"info\00", [27 x i8] zeroinitializer }, align 32
@jbd2_info_proc_ops = internal constant { %struct.proc_ops, [52 x i8] } { %struct.proc_ops { i32 0, ptr @jbd2_seq_info_open, ptr @seq_read, ptr null, ptr null, ptr @seq_lseek, ptr @jbd2_seq_info_release, ptr null, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@jbd2_seq_info_ops = internal constant { %struct.seq_operations, [16 x i8] } { %struct.seq_operations { ptr @jbd2_seq_info_start, ptr @jbd2_seq_info_stop, ptr @jbd2_seq_info_next, ptr @jbd2_seq_info_show }, [16 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"%lu transactions (%lu requested), each up to %u blocks\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"average: \0A  %ums waiting for transaction\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"  %ums request delay\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"  %ums running transaction\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"  %ums transaction was being locked\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"  %ums flushing data (in ordered mode)\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"  %ums logging transaction\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"  %lluus average transaction commit time\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"  %lu handles per transaction\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"  %lu blocks per transaction\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"  %lu logged blocks per transaction\0A\00", [59 x i8] zeroinitializer }, align 32
@jbd2_write_superblock._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.150, ptr @.str.151, ptr @.str.2, i32 1631, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\013JBD2: previous I/O error detected for journal superblock update for %s.\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"jbd2_write_superblock\00", [42 x i8] zeroinitializer }, align 32
@jbd2_write_superblock._entry_ptr = internal global ptr @jbd2_write_superblock._entry, section ".printk_index", align 4
@jbd2_write_superblock._entry.152 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.153, ptr @.str.151, ptr @.str.2, i32 1649, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013JBD2: Error %d detected when updating journal superblock for %s.\0A\00", [60 x i8] zeroinitializer }, align 32
@jbd2_write_superblock._entry_ptr.154 = internal global ptr @jbd2_write_superblock._entry.152, section ".printk_index", align 4
@trace_jbd2_write_superblock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@journal_reset._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.155, ptr @.str.156, ptr @.str.2, i32 1546, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\013JBD2: Journal too short (blocks %llu-%llu).\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"journal_reset\00", [18 x i8] zeroinitializer }, align 32
@journal_reset._entry_ptr = internal global ptr @journal_reset._entry, section ".printk_index", align 4
@.str.157 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"JBD2: Skipping superblock update on recovered sb (start %ld, seq %u, errno %d)\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"jbd2/%s\00", [24 x i8] zeroinitializer }, align 32
@kjournald2.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.159 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"(&journal->j_commit_timer)\00", [37 x i8] zeroinitializer }, align 32
@__func__.kjournald2 = private unnamed_addr constant [11 x i8] c"kjournald2\00", align 1
@.str.160 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"commit_sequence=%u, commit_request=%u\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"OK, requests differ\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Now suspending kjournald2\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"kjournald2 wakes\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"woke because of timeout\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Journal thread exiting.\0A\00", [39 x i8] zeroinitializer }, align 32
@system_freezing_cnt = external dso_local global %struct.atomic_t, align 4
@.str.166 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/freezer.h\00", [40 x i8] zeroinitializer }, align 32
@__func__.jbd2_mark_journal_empty = private unnamed_addr constant [24 x i8] c"jbd2_mark_journal_empty\00", align 1
@.str.167 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"JBD2: Marking journal as empty (seq %u)\0A\00", [55 x i8] zeroinitializer }, align 32
@journal_get_superblock._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.168, ptr @.str.169, ptr @.str.2, i32 1908, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\013JBD2: IO error reading journal superblock\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"journal_get_superblock\00", [41 x i8] zeroinitializer }, align 32
@journal_get_superblock._entry_ptr = internal global ptr @journal_get_superblock._entry, section ".printk_index", align 4
@journal_get_superblock._entry.170 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.171, ptr @.str.169, ptr @.str.2, i32 1922, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\014JBD2: no valid journal superblock found\0A\00", [53 x i8] zeroinitializer }, align 32
@journal_get_superblock._entry_ptr.172 = internal global ptr @journal_get_superblock._entry.170, section ".printk_index", align 4
@journal_get_superblock._entry.173 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.174, ptr @.str.169, ptr @.str.2, i32 1934, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\014JBD2: unrecognised superblock format ID\0A\00", [53 x i8] zeroinitializer }, align 32
@journal_get_superblock._entry_ptr.175 = internal global ptr @journal_get_superblock._entry.173, section ".printk_index", align 4
@journal_get_superblock._entry.176 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.177, ptr @.str.169, ptr @.str.2, i32 1941, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\014JBD2: journal file too short\0A\00", [32 x i8] zeroinitializer }, align 32
@journal_get_superblock._entry_ptr.178 = internal global ptr @journal_get_superblock._entry.176, section ".printk_index", align 4
@journal_get_superblock._entry.179 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.180, ptr @.str.169, ptr @.str.2, i32 1949, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\014JBD2: Invalid start block of journal: %u\0A\00", [52 x i8] zeroinitializer }, align 32
@journal_get_superblock._entry_ptr.181 = internal global ptr @journal_get_superblock._entry.179, section ".printk_index", align 4
@journal_get_superblock._entry.182 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.183, ptr @.str.169, ptr @.str.2, i32 1957, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\013JBD2: Can't enable checksumming v2 and v3 at the same time!\0A\00", [33 x i8] zeroinitializer }, align 32
@journal_get_superblock._entry_ptr.184 = internal global ptr @journal_get_superblock._entry.182, section ".printk_index", align 4
@journal_get_superblock._entry.185 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.186, ptr @.str.169, ptr @.str.2, i32 1965, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\013JBD2: Can't enable checksumming v1 and v2/3 at the same time!\0A\00", [63 x i8] zeroinitializer }, align 32
@journal_get_superblock._entry_ptr.187 = internal global ptr @journal_get_superblock._entry.185, section ".printk_index", align 4
@journal_get_superblock._entry.188 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.189, ptr @.str.169, ptr @.str.2, i32 1970, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\013JBD2: Unknown checksum type\0A\00", [33 x i8] zeroinitializer }, align 32
@journal_get_superblock._entry_ptr.190 = internal global ptr @journal_get_superblock._entry.188, section ".printk_index", align 4
@journal_get_superblock._entry.191 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.29, ptr @.str.169, ptr @.str.2, i32 1978, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@journal_get_superblock._entry_ptr.192 = internal global ptr @journal_get_superblock._entry.191, section ".printk_index", align 4
@journal_get_superblock._entry.193 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.194, ptr @.str.169, ptr @.str.2, i32 1988, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\013JBD2: journal checksum error\0A\00", [32 x i8] zeroinitializer }, align 32
@journal_get_superblock._entry_ptr.195 = internal global ptr @journal_get_superblock._entry.193, section ".printk_index", align 4
@__jbd2_journal_erase._entry = internal constant %struct.pi_entry { ptr @.str.196, ptr @.str.197, ptr @.str.2, i32 1788, ptr null, ptr null }, align 1
@.str.196 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\013JBD2: bad block at offset %lu\00", [32 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"__jbd2_journal_erase\00", [43 x i8] zeroinitializer }, align 32
@__jbd2_journal_erase._entry_ptr = internal global ptr @__jbd2_journal_erase._entry, section ".printk_index", align 4
@__jbd2_journal_erase._entry.198 = internal constant %struct.pi_entry { ptr @.str.199, ptr @.str.197, ptr @.str.2, i32 1841, ptr null, ptr null }, align 1
@.str.199 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\013JBD2: (error %d) unable to wipe journal at physical blocks %llu - %llu\00", [55 x i8] zeroinitializer }, align 32
@__jbd2_journal_erase._entry_ptr.200 = internal global ptr @__jbd2_journal_erase._entry.198, section ".printk_index", align 4
@jbd2_journal_create_slab.jbd2_slab_create_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.201, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @jbd2_journal_create_slab.jbd2_slab_create_mutex, i64 52), ptr getelementptr (i8, ptr @jbd2_journal_create_slab.jbd2_slab_create_mutex, i64 52) }, ptr @jbd2_journal_create_slab.jbd2_slab_create_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.202, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"jbd2_slab_create_mutex.wait_lock\00", [63 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"jbd2_slab_create_mutex\00", [41 x i8] zeroinitializer }, align 32
@jbd2_slab = internal global { [8 x ptr], [32 x i8] } zeroinitializer, align 32
@jbd2_slab_names = internal constant { [8 x ptr], [32 x i8] } { [8 x ptr] [ptr @.str.205, ptr @.str.206, ptr @.str.207, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @.str.212], [32 x i8] zeroinitializer }, align 32
@jbd2_journal_create_slab._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.203, ptr @.str.204, ptr @.str.2, i32 2782, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\010JBD2: no memory for jbd2_slab cache\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"jbd2_journal_create_slab\00", [39 x i8] zeroinitializer }, align 32
@jbd2_journal_create_slab._entry_ptr = internal global ptr @jbd2_journal_create_slab._entry, section ".printk_index", align 4
@.str.205 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"jbd2_1k\00", [24 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"jbd2_2k\00", [24 x i8] zeroinitializer }, align 32
@.str.207 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"jbd2_4k\00", [24 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"jbd2_8k\00", [24 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"jbd2_16k\00", [23 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"jbd2_32k\00", [23 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"jbd2_64k\00", [23 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"jbd2_128k\00", [22 x i8] zeroinitializer }, align 32
@jbd2_journal_head_cache = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@__func__.journal_alloc_journal_head = private unnamed_addr constant [27 x i8] c"journal_alloc_journal_head\00", align 1
@.str.213 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"out of memory for journal_head\0A\00", [32 x i8] zeroinitializer }, align 32
@journal_alloc_journal_head._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.214, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"_rs.lock\00", [23 x i8] zeroinitializer }, align 32
@journal_alloc_journal_head._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.215, ptr @__func__.journal_alloc_journal_head, ptr @.str.2, i32 2867, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"\015ENOMEM in %s, retrying.\0A\00", [37 x i8] zeroinitializer }, align 32
@journal_alloc_journal_head._entry_ptr = internal global ptr @journal_alloc_journal_head._entry, section ".printk_index", align 4
@journal_alloc_journal_head.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.216 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"&ret->b_state_lock\00", [45 x i8] zeroinitializer }, align 32
@journal_release_journal_head._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.217, ptr @.str.218, ptr @.str.2, i32 3002, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\014%s: freeing b_frozen_data\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"journal_release_journal_head\00", [35 x i8] zeroinitializer }, align 32
@journal_release_journal_head._entry_ptr = internal global ptr @journal_release_journal_head._entry, section ".printk_index", align 4
@journal_release_journal_head._entry.219 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.220, ptr @.str.218, ptr @.str.2, i32 3006, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\014%s: freeing b_committed_data\0A\00", [32 x i8] zeroinitializer }, align 32
@journal_release_journal_head._entry_ptr.221 = internal global ptr @journal_release_journal_head._entry.219, section ".printk_index", align 4
@.str.222 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"jbd2_journal_head\00", [46 x i8] zeroinitializer }, align 32
@jbd2_journal_init_journal_head_cache._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.223, ptr @.str.224, ptr @.str.2, i32 2842, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\010JBD2: no memory for journal_head cache\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.224 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"jbd2_journal_init_journal_head_cache\00", [59 x i8] zeroinitializer }, align 32
@jbd2_journal_init_journal_head_cache._entry_ptr = internal global ptr @jbd2_journal_init_journal_head_cache._entry, section ".printk_index", align 4
@.str.225 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"jbd2_journal_handle\00", [44 x i8] zeroinitializer }, align 32
@jbd2_journal_init_handle_cache._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.226, ptr @.str.227, ptr @.str.2, i32 3120, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\010JBD2: failed to create handle cache\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.227 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"jbd2_journal_init_handle_cache\00", [33 x i8] zeroinitializer }, align 32
@jbd2_journal_init_handle_cache._entry_ptr = internal global ptr @jbd2_journal_init_handle_cache._entry, section ".printk_index", align 4
@.str.228 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"jbd2_inode\00", [21 x i8] zeroinitializer }, align 32
@jbd2_journal_init_inode_cache._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.229, ptr @.str.230, ptr @.str.2, i32 3109, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\010JBD2: failed to create inode cache\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"jbd2_journal_init_inode_cache\00", [34 x i8] zeroinitializer }, align 32
@jbd2_journal_init_inode_cache._entry_ptr = internal global ptr @jbd2_journal_init_inode_cache._entry, section ".printk_index", align 4
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 4]
@___asan_gen_.231 = private unnamed_addr constant [29 x i8] c"str__jbd2__trace_system_name\00", align 1
@___asan_gen_.232 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.233 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.232, i32 36, i32 1 }
@___asan_gen_.234 = private unnamed_addr constant [35 x i8] c"trace_event_fields_jbd2_checkpoint\00", align 1
@___asan_gen_.237 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_jbd2_checkpoint\00", align 1
@___asan_gen_.240 = private unnamed_addr constant [26 x i8] c"print_fmt_jbd2_checkpoint\00", align 1
@___asan_gen_.243 = private unnamed_addr constant [22 x i8] c"event_jbd2_checkpoint\00", align 1
@___asan_gen_.246 = private unnamed_addr constant [31 x i8] c"trace_event_fields_jbd2_commit\00", align 1
@___asan_gen_.249 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_jbd2_commit\00", align 1
@___asan_gen_.252 = private unnamed_addr constant [22 x i8] c"print_fmt_jbd2_commit\00", align 1
@___asan_gen_.255 = private unnamed_addr constant [24 x i8] c"event_jbd2_start_commit\00", align 1
@___asan_gen_.257 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 57, i32 1 }
@___asan_gen_.258 = private unnamed_addr constant [26 x i8] c"event_jbd2_commit_locking\00", align 1
@___asan_gen_.260 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 64, i32 1 }
@___asan_gen_.261 = private unnamed_addr constant [27 x i8] c"event_jbd2_commit_flushing\00", align 1
@___asan_gen_.263 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 71, i32 1 }
@___asan_gen_.264 = private unnamed_addr constant [26 x i8] c"event_jbd2_commit_logging\00", align 1
@___asan_gen_.266 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 78, i32 1 }
@___asan_gen_.267 = private unnamed_addr constant [28 x i8] c"event_jbd2_drop_transaction\00", align 1
@___asan_gen_.269 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 85, i32 1 }
@___asan_gen_.270 = private unnamed_addr constant [35 x i8] c"trace_event_fields_jbd2_end_commit\00", align 1
@___asan_gen_.273 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_jbd2_end_commit\00", align 1
@___asan_gen_.276 = private unnamed_addr constant [26 x i8] c"print_fmt_jbd2_end_commit\00", align 1
@___asan_gen_.279 = private unnamed_addr constant [22 x i8] c"event_jbd2_end_commit\00", align 1
@___asan_gen_.282 = private unnamed_addr constant [42 x i8] c"trace_event_fields_jbd2_submit_inode_data\00", align 1
@___asan_gen_.285 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_jbd2_submit_inode_data\00", align 1
@___asan_gen_.288 = private unnamed_addr constant [33 x i8] c"print_fmt_jbd2_submit_inode_data\00", align 1
@___asan_gen_.291 = private unnamed_addr constant [29 x i8] c"event_jbd2_submit_inode_data\00", align 1
@___asan_gen_.294 = private unnamed_addr constant [43 x i8] c"trace_event_fields_jbd2_handle_start_class\00", align 1
@___asan_gen_.297 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_jbd2_handle_start_class\00", align 1
@___asan_gen_.300 = private unnamed_addr constant [34 x i8] c"print_fmt_jbd2_handle_start_class\00", align 1
@___asan_gen_.303 = private unnamed_addr constant [24 x i8] c"event_jbd2_handle_start\00", align 1
@___asan_gen_.305 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 164, i32 1 }
@___asan_gen_.306 = private unnamed_addr constant [26 x i8] c"event_jbd2_handle_restart\00", align 1
@___asan_gen_.308 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 171, i32 1 }
@___asan_gen_.309 = private unnamed_addr constant [38 x i8] c"trace_event_fields_jbd2_handle_extend\00", align 1
@___asan_gen_.312 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_jbd2_handle_extend\00", align 1
@___asan_gen_.315 = private unnamed_addr constant [29 x i8] c"print_fmt_jbd2_handle_extend\00", align 1
@___asan_gen_.318 = private unnamed_addr constant [25 x i8] c"event_jbd2_handle_extend\00", align 1
@___asan_gen_.321 = private unnamed_addr constant [37 x i8] c"trace_event_fields_jbd2_handle_stats\00", align 1
@___asan_gen_.324 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_jbd2_handle_stats\00", align 1
@___asan_gen_.327 = private unnamed_addr constant [28 x i8] c"print_fmt_jbd2_handle_stats\00", align 1
@___asan_gen_.330 = private unnamed_addr constant [24 x i8] c"event_jbd2_handle_stats\00", align 1
@___asan_gen_.333 = private unnamed_addr constant [34 x i8] c"trace_event_fields_jbd2_run_stats\00", align 1
@___asan_gen_.336 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_jbd2_run_stats\00", align 1
@___asan_gen_.339 = private unnamed_addr constant [25 x i8] c"print_fmt_jbd2_run_stats\00", align 1
@___asan_gen_.342 = private unnamed_addr constant [21 x i8] c"event_jbd2_run_stats\00", align 1
@___asan_gen_.345 = private unnamed_addr constant [41 x i8] c"trace_event_fields_jbd2_checkpoint_stats\00", align 1
@___asan_gen_.348 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_jbd2_checkpoint_stats\00", align 1
@___asan_gen_.351 = private unnamed_addr constant [32 x i8] c"print_fmt_jbd2_checkpoint_stats\00", align 1
@___asan_gen_.354 = private unnamed_addr constant [28 x i8] c"event_jbd2_checkpoint_stats\00", align 1
@___asan_gen_.357 = private unnamed_addr constant [40 x i8] c"trace_event_fields_jbd2_update_log_tail\00", align 1
@___asan_gen_.360 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_jbd2_update_log_tail\00", align 1
@___asan_gen_.363 = private unnamed_addr constant [31 x i8] c"print_fmt_jbd2_update_log_tail\00", align 1
@___asan_gen_.366 = private unnamed_addr constant [27 x i8] c"event_jbd2_update_log_tail\00", align 1
@___asan_gen_.369 = private unnamed_addr constant [41 x i8] c"trace_event_fields_jbd2_write_superblock\00", align 1
@___asan_gen_.372 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_jbd2_write_superblock\00", align 1
@___asan_gen_.375 = private unnamed_addr constant [32 x i8] c"print_fmt_jbd2_write_superblock\00", align 1
@___asan_gen_.378 = private unnamed_addr constant [28 x i8] c"event_jbd2_write_superblock\00", align 1
@___asan_gen_.381 = private unnamed_addr constant [42 x i8] c"trace_event_fields_jbd2_lock_buffer_stall\00", align 1
@___asan_gen_.384 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_jbd2_lock_buffer_stall\00", align 1
@___asan_gen_.387 = private unnamed_addr constant [33 x i8] c"print_fmt_jbd2_lock_buffer_stall\00", align 1
@___asan_gen_.390 = private unnamed_addr constant [29 x i8] c"event_jbd2_lock_buffer_stall\00", align 1
@___asan_gen_.393 = private unnamed_addr constant [39 x i8] c"trace_event_fields_jbd2_journal_shrink\00", align 1
@___asan_gen_.396 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_jbd2_journal_shrink\00", align 1
@___asan_gen_.399 = private unnamed_addr constant [30 x i8] c"print_fmt_jbd2_journal_shrink\00", align 1
@___asan_gen_.402 = private unnamed_addr constant [24 x i8] c"event_jbd2_shrink_count\00", align 1
@___asan_gen_.404 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 421, i32 1 }
@___asan_gen_.405 = private unnamed_addr constant [29 x i8] c"event_jbd2_shrink_scan_enter\00", align 1
@___asan_gen_.407 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 428, i32 1 }
@___asan_gen_.408 = private unnamed_addr constant [41 x i8] c"trace_event_fields_jbd2_shrink_scan_exit\00", align 1
@___asan_gen_.411 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_jbd2_shrink_scan_exit\00", align 1
@___asan_gen_.414 = private unnamed_addr constant [32 x i8] c"print_fmt_jbd2_shrink_scan_exit\00", align 1
@___asan_gen_.417 = private unnamed_addr constant [28 x i8] c"event_jbd2_shrink_scan_exit\00", align 1
@___asan_gen_.420 = private unnamed_addr constant [47 x i8] c"trace_event_fields_jbd2_shrink_checkpoint_list\00", align 1
@___asan_gen_.423 = private unnamed_addr constant [51 x i8] c"trace_event_type_funcs_jbd2_shrink_checkpoint_list\00", align 1
@___asan_gen_.426 = private unnamed_addr constant [38 x i8] c"print_fmt_jbd2_shrink_checkpoint_list\00", align 1
@___asan_gen_.429 = private unnamed_addr constant [34 x i8] c"event_jbd2_shrink_checkpoint_list\00", align 1
@___asan_gen_.432 = private unnamed_addr constant [17 x i8] c"jbd2_inode_cache\00", align 1
@___asan_gen_.434 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 3102, i32 40 }
@___asan_gen_.443 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 115, i32 2 }
@___asan_gen_.446 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 503, i32 3 }
@___asan_gen_.449 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 513, i32 3 }
@___asan_gen_.458 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 702, i32 3 }
@___asan_gen_.461 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 708, i32 3 }
@___asan_gen_.470 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 977, i32 4 }
@___asan_gen_.473 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1120, i32 2 }
@___asan_gen_.482 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1494, i32 3 }
@___asan_gen_.485 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1499, i32 2 }
@___asan_gen_.488 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1512, i32 13 }
@___asan_gen_.491 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1681, i32 2 }
@___asan_gen_.494 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1868, i32 2 }
@___asan_gen_.503 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2071, i32 4 }
@___asan_gen_.509 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2090, i32 3 }
@___asan_gen_.515 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2111, i32 2 }
@___asan_gen_.518 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2340, i32 2 }
@___asan_gen_.524 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2347, i32 4 }
@___asan_gen_.527 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2355, i32 49 }
@___asan_gen_.533 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2357, i32 4 }
@___asan_gen_.536 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2409, i32 2 }
@___asan_gen_.551 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2532, i32 2 }
@___asan_gen_.560 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2621, i32 2 }
@___asan_gen_.561 = private unnamed_addr constant [16 x i8] c"proc_jbd2_stats\00", align 1
@___asan_gen_.563 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1261, i32 31 }
@___asan_gen_.566 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 3092, i32 21 }
@___asan_gen_.567 = private unnamed_addr constant [17 x i8] c"nr_journal_heads\00", align 1
@___asan_gen_.569 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2830, i32 17 }
@___asan_gen_.578 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 3191, i32 3 }
@___asan_gen_.579 = private unnamed_addr constant [18 x i8] c"jbd2_handle_cache\00", align 1
@___asan_gen_.581 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 3102, i32 20 }
@___asan_gen_.596 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 14, i32 1 }
@___asan_gen_.608 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 34, i32 1 }
@___asan_gen_.614 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 92, i32 1 }
@___asan_gen_.623 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 116, i32 1 }
@___asan_gen_.644 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 136, i32 1 }
@___asan_gen_.650 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 178, i32 1 }
@___asan_gen_.662 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 210, i32 1 }
@___asan_gen_.695 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 248, i32 1 }
@___asan_gen_.710 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 296, i32 1 }
@___asan_gen_.734 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 356, i32 1 }
@___asan_gen_.740 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 376, i32 1 }
@___asan_gen_.749 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 397, i32 1 }
@___asan_gen_.755 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 435, i32 1 }
@___asan_gen_.770 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 462, i32 1 }
@___asan_gen_.772 = private unnamed_addr constant [31 x i8] c"../include/linux/buffer_head.h\00", align 1
@___asan_gen_.773 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.772, i32 354, i32 2 }
@___asan_gen_.775 = private unnamed_addr constant [24 x i8] c"../include/linux/jbd2.h\00", align 1
@___asan_gen_.776 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.775, i32 1734, i32 2 }
@___asan_gen_.781 = private unnamed_addr constant [31 x i8] c"../include/trace/events/jbd2.h\00", align 1
@___asan_gen_.782 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.781, i32 327, i32 1 }
@___asan_gen_.784 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.785 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.784, i32 108, i32 2 }
@___asan_gen_.786 = private unnamed_addr constant [22 x i8] c"jbd2_trans_commit_key\00", align 1
@___asan_gen_.788 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1347, i32 31 }
@___asan_gen_.794 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1357, i32 2 }
@___asan_gen_.800 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1358, i32 2 }
@___asan_gen_.806 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1359, i32 2 }
@___asan_gen_.812 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1360, i32 2 }
@___asan_gen_.818 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1361, i32 2 }
@___asan_gen_.824 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1362, i32 2 }
@___asan_gen_.830 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1363, i32 2 }
@___asan_gen_.836 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1364, i32 2 }
@___asan_gen_.842 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1365, i32 2 }
@___asan_gen_.848 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1366, i32 2 }
@___asan_gen_.854 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1367, i32 2 }
@___asan_gen_.860 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1368, i32 2 }
@___asan_gen_.866 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1383, i32 2 }
@___asan_gen_.869 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1385, i32 49 }
@___asan_gen_.878 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1405, i32 3 }
@___asan_gen_.881 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1418, i32 6 }
@___asan_gen_.884 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1267, i32 20 }
@___asan_gen_.885 = private unnamed_addr constant [19 x i8] c"jbd2_info_proc_ops\00", align 1
@___asan_gen_.887 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1254, i32 30 }
@___asan_gen_.888 = private unnamed_addr constant [18 x i8] c"jbd2_seq_info_ops\00", align 1
@___asan_gen_.890 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1206, i32 36 }
@___asan_gen_.893 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1171, i32 18 }
@___asan_gen_.896 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1177, i32 18 }
@___asan_gen_.899 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1179, i32 18 }
@___asan_gen_.902 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1183, i32 18 }
@___asan_gen_.905 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1185, i32 18 }
@___asan_gen_.908 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1187, i32 18 }
@___asan_gen_.911 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1189, i32 18 }
@___asan_gen_.914 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1191, i32 18 }
@___asan_gen_.917 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1193, i32 18 }
@___asan_gen_.920 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1195, i32 18 }
@___asan_gen_.923 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1197, i32 18 }
@___asan_gen_.932 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1629, i32 3 }
@___asan_gen_.938 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1647, i32 3 }
@___asan_gen_.947 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1545, i32 3 }
@___asan_gen_.950 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1578, i32 3 }
@___asan_gen_.953 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 280, i32 6 }
@___asan_gen_.959 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 181, i32 2 }
@___asan_gen_.962 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 206, i32 2 }
@___asan_gen_.965 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 210, i32 3 }
@___asan_gen_.968 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 225, i32 3 }
@___asan_gen_.971 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 255, i32 2 }
@___asan_gen_.974 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 263, i32 3 }
@___asan_gen_.977 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 271, i32 2 }
@___asan_gen_.979 = private unnamed_addr constant [27 x i8] c"../include/linux/freezer.h\00", align 1
@___asan_gen_.980 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.979, i32 57, i32 2 }
@___asan_gen_.983 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1722, i32 2 }
@___asan_gen_.992 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1907, i32 4 }
@___asan_gen_.998 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1922, i32 3 }
@___asan_gen_.1004 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1934, i32 3 }
@___asan_gen_.1010 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1941, i32 3 }
@___asan_gen_.1016 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1947, i32 3 }
@___asan_gen_.1022 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1956, i32 3 }
@___asan_gen_.1028 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1964, i32 3 }
@___asan_gen_.1034 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1970, i32 3 }
@___asan_gen_.1037 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1978, i32 4 }
@___asan_gen_.1043 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1988, i32 4 }
@___asan_gen_.1049 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1788, i32 4 }
@___asan_gen_.1052 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 1840, i32 4 }
@___asan_gen_.1053 = private unnamed_addr constant [23 x i8] c"jbd2_slab_create_mutex\00", align 1
@___asan_gen_.1061 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2759, i32 9 }
@___asan_gen_.1062 = private unnamed_addr constant [10 x i8] c"jbd2_slab\00", align 1
@___asan_gen_.1064 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2739, i32 27 }
@___asan_gen_.1065 = private unnamed_addr constant [16 x i8] c"jbd2_slab_names\00", align 1
@___asan_gen_.1067 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2741, i32 20 }
@___asan_gen_.1076 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2782, i32 3 }
@___asan_gen_.1079 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2742, i32 2 }
@___asan_gen_.1082 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2742, i32 13 }
@___asan_gen_.1085 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2742, i32 24 }
@___asan_gen_.1088 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2742, i32 35 }
@___asan_gen_.1091 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2743, i32 2 }
@___asan_gen_.1094 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2743, i32 14 }
@___asan_gen_.1097 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2743, i32 26 }
@___asan_gen_.1100 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2743, i32 38 }
@___asan_gen_.1101 = private unnamed_addr constant [24 x i8] c"jbd2_journal_head_cache\00", align 1
@___asan_gen_.1103 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2828, i32 27 }
@___asan_gen_.1106 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2866, i32 3 }
@___asan_gen_.1107 = private unnamed_addr constant [4 x i8] c"_rs\00", align 1
@___asan_gen_.1118 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2867, i32 3 }
@___asan_gen_.1119 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.1124 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2872, i32 3 }
@___asan_gen_.1133 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 3002, i32 3 }
@___asan_gen_.1139 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 3006, i32 3 }
@___asan_gen_.1142 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2836, i32 46 }
@___asan_gen_.1151 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 2842, i32 3 }
@___asan_gen_.1154 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 3118, i32 22 }
@___asan_gen_.1163 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 3120, i32 3 }
@___asan_gen_.1166 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 3107, i32 21 }
@___asan_gen_.1167 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.1173 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1174 = private constant [21 x i8] c"../fs/jbd2/journal.c\00", align 1
@___asan_gen_.1175 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1174, i32 3109, i32 3 }
@llvm.compiler.used = appending global [516 x ptr] [ptr @__UNIQUE_ID_file417, ptr @__UNIQUE_ID_jbd2_debug412, ptr @__UNIQUE_ID_jbd2_debugtype411, ptr @__UNIQUE_ID_license418, ptr @__bpf_trace_tp_map_jbd2_checkpoint, ptr @__bpf_trace_tp_map_jbd2_checkpoint_stats, ptr @__bpf_trace_tp_map_jbd2_commit_flushing, ptr @__bpf_trace_tp_map_jbd2_commit_locking, ptr @__bpf_trace_tp_map_jbd2_commit_logging, ptr @__bpf_trace_tp_map_jbd2_drop_transaction, ptr @__bpf_trace_tp_map_jbd2_end_commit, ptr @__bpf_trace_tp_map_jbd2_handle_extend, ptr @__bpf_trace_tp_map_jbd2_handle_restart, ptr @__bpf_trace_tp_map_jbd2_handle_start, ptr @__bpf_trace_tp_map_jbd2_handle_stats, ptr @__bpf_trace_tp_map_jbd2_lock_buffer_stall, ptr @__bpf_trace_tp_map_jbd2_run_stats, ptr @__bpf_trace_tp_map_jbd2_shrink_checkpoint_list, ptr @__bpf_trace_tp_map_jbd2_shrink_count, ptr @__bpf_trace_tp_map_jbd2_shrink_scan_enter, ptr @__bpf_trace_tp_map_jbd2_shrink_scan_exit, ptr @__bpf_trace_tp_map_jbd2_start_commit, ptr @__bpf_trace_tp_map_jbd2_submit_inode_data, ptr @__bpf_trace_tp_map_jbd2_update_log_tail, ptr @__bpf_trace_tp_map_jbd2_write_superblock, ptr @__event_jbd2_checkpoint, ptr @__event_jbd2_checkpoint_stats, ptr @__event_jbd2_commit_flushing, ptr @__event_jbd2_commit_locking, ptr @__event_jbd2_commit_logging, ptr @__event_jbd2_drop_transaction, ptr @__event_jbd2_end_commit, ptr @__event_jbd2_handle_extend, ptr @__event_jbd2_handle_restart, ptr @__event_jbd2_handle_start, ptr @__event_jbd2_handle_stats, ptr @__event_jbd2_lock_buffer_stall, ptr @__event_jbd2_run_stats, ptr @__event_jbd2_shrink_checkpoint_list, ptr @__event_jbd2_shrink_count, ptr @__event_jbd2_shrink_scan_enter, ptr @__event_jbd2_shrink_scan_exit, ptr @__event_jbd2_start_commit, ptr @__event_jbd2_submit_inode_data, ptr @__event_jbd2_update_log_tail, ptr @__event_jbd2_write_superblock, ptr @__exitcall_journal_exit, ptr @__initcall__kmod_jbd2__419_3198_journal_init6, ptr @__jbd2_debug._entry, ptr @__jbd2_debug._entry_ptr, ptr @__jbd2_journal_erase._entry, ptr @__jbd2_journal_erase._entry.198, ptr @__jbd2_journal_erase._entry_ptr, ptr @__jbd2_journal_erase._entry_ptr.200, ptr @__ksymtab___jbd2_debug, ptr @__ksymtab_jbd2_complete_transaction, ptr @__ksymtab_jbd2_fc_begin_commit, ptr @__ksymtab_jbd2_fc_end_commit, ptr @__ksymtab_jbd2_fc_end_commit_fallback, ptr @__ksymtab_jbd2_fc_get_buf, ptr @__ksymtab_jbd2_fc_release_bufs, ptr @__ksymtab_jbd2_fc_wait_bufs, ptr @__ksymtab_jbd2_inode_cache, ptr @__ksymtab_jbd2_journal_abort, ptr @__ksymtab_jbd2_journal_ack_err, ptr @__ksymtab_jbd2_journal_begin_ordered_truncate, ptr @__ksymtab_jbd2_journal_blocks_per_page, ptr @__ksymtab_jbd2_journal_check_available_features, ptr @__ksymtab_jbd2_journal_check_used_features, ptr @__ksymtab_jbd2_journal_clear_err, ptr @__ksymtab_jbd2_journal_clear_features, ptr @__ksymtab_jbd2_journal_destroy, ptr @__ksymtab_jbd2_journal_dirty_metadata, ptr @__ksymtab_jbd2_journal_enable_debug, ptr @__ksymtab_jbd2_journal_errno, ptr @__ksymtab_jbd2_journal_extend, ptr @__ksymtab_jbd2_journal_finish_inode_data_buffers, ptr @__ksymtab_jbd2_journal_flush, ptr @__ksymtab_jbd2_journal_force_commit, ptr @__ksymtab_jbd2_journal_force_commit_nested, ptr @__ksymtab_jbd2_journal_forget, ptr @__ksymtab_jbd2_journal_get_create_access, ptr @__ksymtab_jbd2_journal_get_undo_access, ptr @__ksymtab_jbd2_journal_get_write_access, ptr @__ksymtab_jbd2_journal_grab_journal_head, ptr @__ksymtab_jbd2_journal_init_dev, ptr @__ksymtab_jbd2_journal_init_inode, ptr @__ksymtab_jbd2_journal_init_jbd_inode, ptr @__ksymtab_jbd2_journal_inode_ranged_wait, ptr @__ksymtab_jbd2_journal_inode_ranged_write, ptr @__ksymtab_jbd2_journal_invalidatepage, ptr @__ksymtab_jbd2_journal_load, ptr @__ksymtab_jbd2_journal_lock_updates, ptr @__ksymtab_jbd2_journal_put_journal_head, ptr @__ksymtab_jbd2_journal_release_jbd_inode, ptr @__ksymtab_jbd2_journal_revoke, ptr @__ksymtab_jbd2_journal_set_features, ptr @__ksymtab_jbd2_journal_set_triggers, ptr @__ksymtab_jbd2_journal_start_commit, ptr @__ksymtab_jbd2_journal_stop, ptr @__ksymtab_jbd2_journal_submit_inode_data_buffers, ptr @__ksymtab_jbd2_journal_try_to_free_buffers, ptr @__ksymtab_jbd2_journal_unlock_updates, ptr @__ksymtab_jbd2_journal_update_sb_errno, ptr @__ksymtab_jbd2_journal_wipe, ptr @__ksymtab_jbd2_log_start_commit, ptr @__ksymtab_jbd2_log_wait_commit, ptr @__ksymtab_jbd2_trans_will_send_data_barrier, ptr @__ksymtab_jbd2_transaction_committed, ptr @__param_jbd2_debug, ptr @__tracepoint_jbd2_checkpoint, ptr @__tracepoint_jbd2_checkpoint_stats, ptr @__tracepoint_jbd2_commit_flushing, ptr @__tracepoint_jbd2_commit_locking, ptr @__tracepoint_jbd2_commit_logging, ptr @__tracepoint_jbd2_drop_transaction, ptr @__tracepoint_jbd2_end_commit, ptr @__tracepoint_jbd2_handle_extend, ptr @__tracepoint_jbd2_handle_restart, ptr @__tracepoint_jbd2_handle_start, ptr @__tracepoint_jbd2_handle_stats, ptr @__tracepoint_jbd2_lock_buffer_stall, ptr @__tracepoint_jbd2_run_stats, ptr @__tracepoint_jbd2_shrink_checkpoint_list, ptr @__tracepoint_jbd2_shrink_count, ptr @__tracepoint_jbd2_shrink_scan_enter, ptr @__tracepoint_jbd2_shrink_scan_exit, ptr @__tracepoint_jbd2_start_commit, ptr @__tracepoint_jbd2_submit_inode_data, ptr @__tracepoint_jbd2_update_log_tail, ptr @__tracepoint_jbd2_write_superblock, ptr @__tracepoint_ptr_jbd2_checkpoint, ptr @__tracepoint_ptr_jbd2_checkpoint_stats, ptr @__tracepoint_ptr_jbd2_commit_flushing, ptr @__tracepoint_ptr_jbd2_commit_locking, ptr @__tracepoint_ptr_jbd2_commit_logging, ptr @__tracepoint_ptr_jbd2_drop_transaction, ptr @__tracepoint_ptr_jbd2_end_commit, ptr @__tracepoint_ptr_jbd2_handle_extend, ptr @__tracepoint_ptr_jbd2_handle_restart, ptr @__tracepoint_ptr_jbd2_handle_start, ptr @__tracepoint_ptr_jbd2_handle_stats, ptr @__tracepoint_ptr_jbd2_lock_buffer_stall, ptr @__tracepoint_ptr_jbd2_run_stats, ptr @__tracepoint_ptr_jbd2_shrink_checkpoint_list, ptr @__tracepoint_ptr_jbd2_shrink_count, ptr @__tracepoint_ptr_jbd2_shrink_scan_enter, ptr @__tracepoint_ptr_jbd2_shrink_scan_exit, ptr @__tracepoint_ptr_jbd2_start_commit, ptr @__tracepoint_ptr_jbd2_submit_inode_data, ptr @__tracepoint_ptr_jbd2_update_log_tail, ptr @__tracepoint_ptr_jbd2_write_superblock, ptr @event_class_jbd2_checkpoint, ptr @event_class_jbd2_checkpoint_stats, ptr @event_class_jbd2_commit, ptr @event_class_jbd2_end_commit, ptr @event_class_jbd2_handle_extend, ptr @event_class_jbd2_handle_start_class, ptr @event_class_jbd2_handle_stats, ptr @event_class_jbd2_journal_shrink, ptr @event_class_jbd2_lock_buffer_stall, ptr @event_class_jbd2_run_stats, ptr @event_class_jbd2_shrink_checkpoint_list, ptr @event_class_jbd2_shrink_scan_exit, ptr @event_class_jbd2_submit_inode_data, ptr @event_class_jbd2_update_log_tail, ptr @event_class_jbd2_write_superblock, ptr @event_jbd2_checkpoint, ptr @event_jbd2_checkpoint_stats, ptr @event_jbd2_commit_flushing, ptr @event_jbd2_commit_locking, ptr @event_jbd2_commit_logging, ptr @event_jbd2_drop_transaction, ptr @event_jbd2_end_commit, ptr @event_jbd2_handle_extend, ptr @event_jbd2_handle_restart, ptr @event_jbd2_handle_start, ptr @event_jbd2_handle_stats, ptr @event_jbd2_lock_buffer_stall, ptr @event_jbd2_run_stats, ptr @event_jbd2_shrink_checkpoint_list, ptr @event_jbd2_shrink_count, ptr @event_jbd2_shrink_scan_enter, ptr @event_jbd2_shrink_scan_exit, ptr @event_jbd2_start_commit, ptr @event_jbd2_submit_inode_data, ptr @event_jbd2_update_log_tail, ptr @event_jbd2_write_superblock, ptr @jbd2_journal_abort._entry, ptr @jbd2_journal_abort._entry_ptr, ptr @jbd2_journal_bmap._entry, ptr @jbd2_journal_bmap._entry_ptr, ptr @jbd2_journal_create_slab._entry, ptr @jbd2_journal_create_slab._entry_ptr, ptr @jbd2_journal_init_handle_cache._entry, ptr @jbd2_journal_init_handle_cache._entry_ptr, ptr @jbd2_journal_init_inode._entry, ptr @jbd2_journal_init_inode._entry_ptr, ptr @jbd2_journal_init_inode_cache._entry, ptr @jbd2_journal_init_inode_cache._entry_ptr, ptr @jbd2_journal_init_journal_head_cache._entry, ptr @jbd2_journal_init_journal_head_cache._entry_ptr, ptr @jbd2_journal_load._entry, ptr @jbd2_journal_load._entry.19, ptr @jbd2_journal_load._entry.22, ptr @jbd2_journal_load._entry_ptr, ptr @jbd2_journal_load._entry_ptr.21, ptr @jbd2_journal_load._entry_ptr.24, ptr @jbd2_journal_set_features._entry, ptr @jbd2_journal_set_features._entry.28, ptr @jbd2_journal_set_features._entry_ptr, ptr @jbd2_journal_set_features._entry_ptr.30, ptr @jbd2_journal_wipe._entry, ptr @jbd2_journal_wipe._entry_ptr, ptr @jbd2_log_wait_commit._entry, ptr @jbd2_log_wait_commit._entry_ptr, ptr @jbd2_remove_jbd_stats_proc_entry, ptr @jbd2_write_superblock._entry, ptr @jbd2_write_superblock._entry.152, ptr @jbd2_write_superblock._entry_ptr, ptr @jbd2_write_superblock._entry_ptr.154, ptr @journal_alloc_journal_head._entry, ptr @journal_alloc_journal_head._entry_ptr, ptr @journal_exit, ptr @journal_exit._entry, ptr @journal_exit._entry_ptr, ptr @journal_get_superblock._entry, ptr @journal_get_superblock._entry.170, ptr @journal_get_superblock._entry.173, ptr @journal_get_superblock._entry.176, ptr @journal_get_superblock._entry.179, ptr @journal_get_superblock._entry.182, ptr @journal_get_superblock._entry.185, ptr @journal_get_superblock._entry.188, ptr @journal_get_superblock._entry.191, ptr @journal_get_superblock._entry.193, ptr @journal_get_superblock._entry_ptr, ptr @journal_get_superblock._entry_ptr.172, ptr @journal_get_superblock._entry_ptr.175, ptr @journal_get_superblock._entry_ptr.178, ptr @journal_get_superblock._entry_ptr.181, ptr @journal_get_superblock._entry_ptr.184, ptr @journal_get_superblock._entry_ptr.187, ptr @journal_get_superblock._entry_ptr.190, ptr @journal_get_superblock._entry_ptr.192, ptr @journal_get_superblock._entry_ptr.195, ptr @journal_init_common._entry, ptr @journal_init_common._entry_ptr, ptr @journal_release_journal_head._entry, ptr @journal_release_journal_head._entry.219, ptr @journal_release_journal_head._entry_ptr, ptr @journal_release_journal_head._entry_ptr.221, ptr @journal_reset._entry, ptr @journal_reset._entry_ptr, ptr @str__jbd2__trace_system_name, ptr @trace_event_fields_jbd2_checkpoint, ptr @trace_event_type_funcs_jbd2_checkpoint, ptr @print_fmt_jbd2_checkpoint, ptr @trace_event_fields_jbd2_commit, ptr @trace_event_type_funcs_jbd2_commit, ptr @print_fmt_jbd2_commit, ptr @trace_event_fields_jbd2_end_commit, ptr @trace_event_type_funcs_jbd2_end_commit, ptr @print_fmt_jbd2_end_commit, ptr @trace_event_fields_jbd2_submit_inode_data, ptr @trace_event_type_funcs_jbd2_submit_inode_data, ptr @print_fmt_jbd2_submit_inode_data, ptr @trace_event_fields_jbd2_handle_start_class, ptr @trace_event_type_funcs_jbd2_handle_start_class, ptr @print_fmt_jbd2_handle_start_class, ptr @trace_event_fields_jbd2_handle_extend, ptr @trace_event_type_funcs_jbd2_handle_extend, ptr @print_fmt_jbd2_handle_extend, ptr @trace_event_fields_jbd2_handle_stats, ptr @trace_event_type_funcs_jbd2_handle_stats, ptr @print_fmt_jbd2_handle_stats, ptr @trace_event_fields_jbd2_run_stats, ptr @trace_event_type_funcs_jbd2_run_stats, ptr @print_fmt_jbd2_run_stats, ptr @trace_event_fields_jbd2_checkpoint_stats, ptr @trace_event_type_funcs_jbd2_checkpoint_stats, ptr @print_fmt_jbd2_checkpoint_stats, ptr @trace_event_fields_jbd2_update_log_tail, ptr @trace_event_type_funcs_jbd2_update_log_tail, ptr @print_fmt_jbd2_update_log_tail, ptr @trace_event_fields_jbd2_write_superblock, ptr @trace_event_type_funcs_jbd2_write_superblock, ptr @print_fmt_jbd2_write_superblock, ptr @trace_event_fields_jbd2_lock_buffer_stall, ptr @trace_event_type_funcs_jbd2_lock_buffer_stall, ptr @print_fmt_jbd2_lock_buffer_stall, ptr @trace_event_fields_jbd2_journal_shrink, ptr @trace_event_type_funcs_jbd2_journal_shrink, ptr @print_fmt_jbd2_journal_shrink, ptr @trace_event_fields_jbd2_shrink_scan_exit, ptr @trace_event_type_funcs_jbd2_shrink_scan_exit, ptr @print_fmt_jbd2_shrink_scan_exit, ptr @trace_event_fields_jbd2_shrink_checkpoint_list, ptr @trace_event_type_funcs_jbd2_shrink_checkpoint_list, ptr @print_fmt_jbd2_shrink_checkpoint_list, ptr @jbd2_inode_cache, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.20, ptr @.str.23, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.29, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @proc_jbd2_stats, ptr @.str.38, ptr @nr_journal_heads, ptr @.str.39, ptr @.str.40, ptr @jbd2_handle_cache, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @journal_init_common.jbd2_trans_commit_key, ptr @journal_init_common.__key, ptr @.str.109, ptr @journal_init_common.__key.110, ptr @.str.111, ptr @journal_init_common.__key.112, ptr @.str.113, ptr @journal_init_common.__key.114, ptr @.str.115, ptr @journal_init_common.__key.116, ptr @.str.117, ptr @journal_init_common.__key.118, ptr @.str.119, ptr @journal_init_common.__key.120, ptr @.str.121, ptr @journal_init_common.__key.122, ptr @.str.123, ptr @journal_init_common.__key.124, ptr @.str.125, ptr @journal_init_common.__key.126, ptr @.str.127, ptr @journal_init_common.__key.128, ptr @.str.129, ptr @journal_init_common.__key.130, ptr @.str.131, ptr @journal_init_common.__key.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @journal_init_common.__key.137, ptr @.str.138, ptr @jbd2_info_proc_ops, ptr @jbd2_seq_info_ops, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.153, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @kjournald2.__key, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.171, ptr @.str.174, ptr @.str.177, ptr @.str.180, ptr @.str.183, ptr @.str.186, ptr @.str.189, ptr @.str.194, ptr @.str.196, ptr @.str.197, ptr @.str.199, ptr @jbd2_journal_create_slab.jbd2_slab_create_mutex, ptr @.str.201, ptr @.str.202, ptr @jbd2_slab, ptr @jbd2_slab_names, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.206, ptr @.str.207, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @.str.212, ptr @jbd2_journal_head_cache, ptr @.str.213, ptr @journal_alloc_journal_head._rs, ptr @.str.214, ptr @.str.215, ptr @journal_alloc_journal_head.__key, ptr @.str.216, ptr @.str.217, ptr @.str.218, ptr @.str.220, ptr @.str.222, ptr @.str.223, ptr @.str.224, ptr @.str.225, ptr @.str.226, ptr @.str.227, ptr @.str.228, ptr @.str.229, ptr @.str.230], section "llvm.metadata"
@0 = internal global [315 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__jbd2__trace_system_name to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_jbd2_checkpoint to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.234 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_jbd2_checkpoint to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.237 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_jbd2_checkpoint to i32), i32 122, i32 160, i32 ptrtoint (ptr @___asan_gen_.240 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_checkpoint to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.243 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_jbd2_commit to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.246 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_jbd2_commit to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_jbd2_commit to i32), i32 158, i32 192, i32 ptrtoint (ptr @___asan_gen_.252 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_start_commit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.255 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_commit_locking to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.258 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.260 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_commit_flushing to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.261 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_commit_logging to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.266 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_drop_transaction to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_jbd2_end_commit to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.270 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_jbd2_end_commit to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_jbd2_end_commit to i32), i32 177, i32 224, i32 ptrtoint (ptr @___asan_gen_.276 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_end_commit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.279 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_jbd2_submit_inode_data to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.282 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.623 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_jbd2_submit_inode_data to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.285 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.623 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_jbd2_submit_inode_data to i32), i32 133, i32 192, i32 ptrtoint (ptr @___asan_gen_.288 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.623 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_submit_inode_data to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.291 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.623 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_jbd2_handle_start_class to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.294 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_jbd2_handle_start_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_jbd2_handle_start_class to i32), i32 204, i32 256, i32 ptrtoint (ptr @___asan_gen_.300 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_handle_start to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.303 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_handle_restart to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.308 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_jbd2_handle_extend to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.309 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_jbd2_handle_extend to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.312 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_jbd2_handle_extend to i32), i32 243, i32 288, i32 ptrtoint (ptr @___asan_gen_.315 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_handle_extend to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_jbd2_handle_stats to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.321 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_jbd2_handle_stats to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_jbd2_handle_stats to i32), i32 289, i32 384, i32 ptrtoint (ptr @___asan_gen_.327 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_handle_stats to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.330 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_jbd2_run_stats to i32), i32 288, i32 352, i32 ptrtoint (ptr @___asan_gen_.333 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_jbd2_run_stats to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_jbd2_run_stats to i32), i32 476, i32 576, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_run_stats to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.342 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_jbd2_checkpoint_stats to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_jbd2_checkpoint_stats to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_jbd2_checkpoint_stats to i32), i32 253, i32 288, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_checkpoint_stats to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_jbd2_update_log_tail to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.357 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_jbd2_update_log_tail to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_jbd2_update_log_tail to i32), i32 197, i32 256, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_update_log_tail to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.366 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_jbd2_write_superblock to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.369 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_jbd2_write_superblock to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_jbd2_write_superblock to i32), i32 126, i32 160, i32 ptrtoint (ptr @___asan_gen_.375 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_write_superblock to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.378 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_jbd2_lock_buffer_stall to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_jbd2_lock_buffer_stall to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_jbd2_lock_buffer_stall to i32), i32 127, i32 160, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_lock_buffer_stall to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_jbd2_journal_shrink to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_jbd2_journal_shrink to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_jbd2_journal_shrink to i32), i32 153, i32 192, i32 ptrtoint (ptr @___asan_gen_.399 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_shrink_count to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_shrink_scan_enter to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.407 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_jbd2_shrink_scan_exit to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.408 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_jbd2_shrink_scan_exit to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_jbd2_shrink_scan_exit to i32), i32 183, i32 224, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_shrink_scan_exit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_jbd2_shrink_checkpoint_list to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.420 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_jbd2_shrink_checkpoint_list to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_jbd2_shrink_checkpoint_list to i32), i32 258, i32 352, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_jbd2_shrink_checkpoint_list to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_inode_cache to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.432 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.434 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_log_wait_commit._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_journal_bmap._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_journal_init_inode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_journal_load._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_journal_load._entry.19 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_journal_load._entry.22 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.518 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_journal_set_features._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.524 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.524 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_journal_set_features._entry.28 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_journal_wipe._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_journal_abort._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @proc_jbd2_stats to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.561 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.566 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nr_journal_heads to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.567 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_exit._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_handle_cache to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.623 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.623 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.623 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 131, i32 192, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 82, i32 128, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_init_common.jbd2_trans_commit_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.786 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.788 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_init_common.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_init_common.__key.110 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_init_common.__key.112 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_init_common.__key.114 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_init_common.__key.116 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_init_common.__key.118 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_init_common.__key.120 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.830 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.830 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_init_common.__key.122 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_init_common.__key.124 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_init_common.__key.126 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_init_common.__key.128 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_init_common.__key.130 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_init_common.__key.132 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.869 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_init_common._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_init_common.__key.137 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.881 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_info_proc_ops to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.887 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_seq_info_ops to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.888 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.890 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.893 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.899 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.905 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.911 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.917 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.923 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_write_superblock._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_write_superblock._entry.152 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.938 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.938 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_reset._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.950 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.953 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @kjournald2.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.959 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.959 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.965 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.968 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.971 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.977 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.980 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.983 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_get_superblock._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_get_superblock._entry.170 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_get_superblock._entry.173 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_get_superblock._entry.176 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1010 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1010 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_get_superblock._entry.179 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1016 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1016 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_get_superblock._entry.182 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1022 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1022 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_get_superblock._entry.185 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_get_superblock._entry.188 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1034 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1034 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_get_superblock._entry.191 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_get_superblock._entry.193 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1043 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1043 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1049 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1049 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_journal_create_slab.jbd2_slab_create_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.1053 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_slab to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_slab_names to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1065 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1067 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_journal_create_slab._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1076 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1076 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1076 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1079 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1082 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1085 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1088 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1094 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1097 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1100 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_journal_head_cache to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1101 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1103 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1106 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_alloc_journal_head._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.1107 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1118 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1118 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_alloc_journal_head._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1118 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1118 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_alloc_journal_head.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1124 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1124 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_release_journal_head._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @journal_release_journal_head._entry.219 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1142 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_journal_init_journal_head_cache._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1154 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_journal_init_handle_cache._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1166 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jbd2_journal_init_inode_cache._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1175 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_checkpoint(ptr nocapture readnone %__data, ptr noundef %journal, i32 noundef %result) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_checkpoint, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %journal, i32 noundef %result) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_start_commit(ptr nocapture readnone %__data, ptr noundef %journal, ptr noundef %commit_transaction) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_start_commit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %journal, ptr noundef %commit_transaction) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_commit_locking(ptr nocapture readnone %__data, ptr noundef %journal, ptr noundef %commit_transaction) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_commit_locking, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %journal, ptr noundef %commit_transaction) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_commit_flushing(ptr nocapture readnone %__data, ptr noundef %journal, ptr noundef %commit_transaction) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_commit_flushing, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %journal, ptr noundef %commit_transaction) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_commit_logging(ptr nocapture readnone %__data, ptr noundef %journal, ptr noundef %commit_transaction) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_commit_logging, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %journal, ptr noundef %commit_transaction) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_drop_transaction(ptr nocapture readnone %__data, ptr noundef %journal, ptr noundef %commit_transaction) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_drop_transaction, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %journal, ptr noundef %commit_transaction) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_end_commit(ptr nocapture readnone %__data, ptr noundef %journal, ptr noundef %commit_transaction) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_end_commit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %journal, ptr noundef %commit_transaction) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_submit_inode_data(ptr nocapture readnone %__data, ptr noundef %inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_submit_inode_data, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_handle_start(ptr nocapture readnone %__data, i32 noundef %dev, i32 noundef %tid, i32 noundef %type, i32 noundef %line_no, i32 noundef %requested_blocks) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_handle_start, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %dev, i32 noundef %tid, i32 noundef %type, i32 noundef %line_no, i32 noundef %requested_blocks) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_handle_restart(ptr nocapture readnone %__data, i32 noundef %dev, i32 noundef %tid, i32 noundef %type, i32 noundef %line_no, i32 noundef %requested_blocks) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_handle_restart, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %dev, i32 noundef %tid, i32 noundef %type, i32 noundef %line_no, i32 noundef %requested_blocks) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_handle_extend(ptr nocapture readnone %__data, i32 noundef %dev, i32 noundef %tid, i32 noundef %type, i32 noundef %line_no, i32 noundef %buffer_credits, i32 noundef %requested_blocks) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_handle_extend, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %dev, i32 noundef %tid, i32 noundef %type, i32 noundef %line_no, i32 noundef %buffer_credits, i32 noundef %requested_blocks) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_handle_stats(ptr nocapture readnone %__data, i32 noundef %dev, i32 noundef %tid, i32 noundef %type, i32 noundef %line_no, i32 noundef %interval, i32 noundef %sync, i32 noundef %requested_blocks, i32 noundef %dirtied_blocks) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_handle_stats, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %dev, i32 noundef %tid, i32 noundef %type, i32 noundef %line_no, i32 noundef %interval, i32 noundef %sync, i32 noundef %requested_blocks, i32 noundef %dirtied_blocks) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_run_stats(ptr nocapture readnone %__data, i32 noundef %dev, i32 noundef %tid, ptr noundef %stats) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_run_stats, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %dev, i32 noundef %tid, ptr noundef %stats) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_checkpoint_stats(ptr nocapture readnone %__data, i32 noundef %dev, i32 noundef %tid, ptr noundef %stats) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_checkpoint_stats, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %dev, i32 noundef %tid, ptr noundef %stats) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_update_log_tail(ptr nocapture readnone %__data, ptr noundef %journal, i32 noundef %first_tid, i32 noundef %block_nr, i32 noundef %freed) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_update_log_tail, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %journal, i32 noundef %first_tid, i32 noundef %block_nr, i32 noundef %freed) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_write_superblock(ptr nocapture readnone %__data, ptr noundef %journal, i32 noundef %write_op) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_write_superblock, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %journal, i32 noundef %write_op) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_lock_buffer_stall(ptr nocapture readnone %__data, i32 noundef %dev, i32 noundef %stall_ms) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_lock_buffer_stall, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %dev, i32 noundef %stall_ms) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_shrink_count(ptr nocapture readnone %__data, ptr noundef %journal, i32 noundef %nr_to_scan, i32 noundef %count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_shrink_count, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %journal, i32 noundef %nr_to_scan, i32 noundef %count) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_shrink_scan_enter(ptr nocapture readnone %__data, ptr noundef %journal, i32 noundef %nr_to_scan, i32 noundef %count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_shrink_scan_enter, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %journal, i32 noundef %nr_to_scan, i32 noundef %count) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_shrink_scan_exit(ptr nocapture readnone %__data, ptr noundef %journal, i32 noundef %nr_to_scan, i32 noundef %nr_shrunk, i32 noundef %count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_shrink_scan_exit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %journal, i32 noundef %nr_to_scan, i32 noundef %nr_shrunk, i32 noundef %count) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_jbd2_shrink_checkpoint_list(ptr nocapture readnone %__data, ptr noundef %journal, i32 noundef %first_tid, i32 noundef %tid, i32 noundef %last_tid, i32 noundef %nr_freed, i32 noundef %nr_scanned, i32 noundef %next_tid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_shrink_checkpoint_list, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %journal, i32 noundef %first_tid, i32 noundef %tid, i32 noundef %last_tid, i32 noundef %nr_freed, i32 noundef %nr_scanned, i32 noundef %next_tid) #19
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_jbd2_checkpoint(ptr noundef %__data, ptr nocapture noundef readonly %journal, i32 noundef %result) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #19
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !788

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !789

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #19
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #19
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %j_fs_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 36
  %3 = ptrtoint ptr %j_fs_dev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %j_fs_dev, align 8
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %4, i32 0, i32 5
  %5 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %bd_dev, align 4
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 4
  %result6 = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %result6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %result, ptr %result6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_jbd2_checkpoint(ptr noundef %__data, ptr nocapture noundef readonly %journal, i32 noundef %result) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #19
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !790
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #19
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !790
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #19
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #19
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #19
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !778) #19
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %j_fs_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 36
  %27 = ptrtoint ptr %j_fs_dev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %j_fs_dev, align 8
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %28, i32 0, i32 5
  %29 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %bd_dev, align 4
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 4
  %result17 = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %result17 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %result, ptr %result17, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #19
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_jbd2_commit(ptr noundef %__data, ptr nocapture noundef readonly %journal, ptr nocapture noundef readonly %commit_transaction) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #19
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !788

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !789

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #19
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #19
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %j_fs_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 36
  %3 = ptrtoint ptr %j_fs_dev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %j_fs_dev, align 8
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %4, i32 0, i32 5
  %5 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %bd_dev, align 4
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_commit, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 4
  %t_synchronous_commit = getelementptr inbounds %struct.transaction_s, ptr %commit_transaction, i32 0, i32 25
  %8 = ptrtoint ptr %t_synchronous_commit to i32
  call void @__asan_load1_noabort(i32 %8)
  %bf.load = load i8, ptr %t_synchronous_commit, align 8
  %bf.lshr = lshr i8 %bf.load, 7
  %sync_commit = getelementptr inbounds %struct.trace_event_raw_jbd2_commit, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %sync_commit to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %bf.lshr, ptr %sync_commit, align 4
  %t_tid = getelementptr inbounds %struct.transaction_s, ptr %commit_transaction, i32 0, i32 1
  %10 = ptrtoint ptr %t_tid to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %t_tid, align 4
  %transaction = getelementptr inbounds %struct.trace_event_raw_jbd2_commit, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %transaction to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %transaction, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_jbd2_commit(ptr noundef %__data, ptr nocapture noundef readonly %journal, ptr nocapture noundef readonly %commit_transaction) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #19
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !790
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #19
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !790
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #19
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #19
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #19
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !778) #19
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %j_fs_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 36
  %27 = ptrtoint ptr %j_fs_dev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %j_fs_dev, align 8
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %28, i32 0, i32 5
  %29 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %bd_dev, align 4
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_commit, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 4
  %t_synchronous_commit = getelementptr inbounds %struct.transaction_s, ptr %commit_transaction, i32 0, i32 25
  %32 = ptrtoint ptr %t_synchronous_commit to i32
  call void @__asan_load1_noabort(i32 %32)
  %bf.load = load i8, ptr %t_synchronous_commit, align 8
  %bf.lshr = lshr i8 %bf.load, 7
  %sync_commit = getelementptr inbounds %struct.trace_event_raw_jbd2_commit, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %sync_commit to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 %bf.lshr, ptr %sync_commit, align 4
  %t_tid = getelementptr inbounds %struct.transaction_s, ptr %commit_transaction, i32 0, i32 1
  %34 = ptrtoint ptr %t_tid to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %t_tid, align 4
  %transaction = getelementptr inbounds %struct.trace_event_raw_jbd2_commit, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %transaction to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %transaction, align 4
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %11, ptr noundef null) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_jbd2_end_commit(ptr noundef %__data, ptr nocapture noundef readonly %journal, ptr nocapture noundef readonly %commit_transaction) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #19
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !788

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !789

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #19
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #19
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %j_fs_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 36
  %3 = ptrtoint ptr %j_fs_dev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %j_fs_dev, align 8
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %4, i32 0, i32 5
  %5 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %bd_dev, align 4
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_end_commit, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 4
  %t_synchronous_commit = getelementptr inbounds %struct.transaction_s, ptr %commit_transaction, i32 0, i32 25
  %8 = ptrtoint ptr %t_synchronous_commit to i32
  call void @__asan_load1_noabort(i32 %8)
  %bf.load = load i8, ptr %t_synchronous_commit, align 8
  %bf.lshr = lshr i8 %bf.load, 7
  %sync_commit = getelementptr inbounds %struct.trace_event_raw_jbd2_end_commit, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %sync_commit to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %bf.lshr, ptr %sync_commit, align 4
  %t_tid = getelementptr inbounds %struct.transaction_s, ptr %commit_transaction, i32 0, i32 1
  %10 = ptrtoint ptr %t_tid to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %t_tid, align 4
  %transaction = getelementptr inbounds %struct.trace_event_raw_jbd2_end_commit, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %transaction to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %transaction, align 4
  %j_tail_sequence = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 41
  %13 = ptrtoint ptr %j_tail_sequence to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %j_tail_sequence, align 4
  %head = getelementptr inbounds %struct.trace_event_raw_jbd2_end_commit, ptr %call3, i32 0, i32 4
  %15 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %head, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_jbd2_end_commit(ptr noundef %__data, ptr nocapture noundef readonly %journal, ptr nocapture noundef readonly %commit_transaction) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #19
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !790
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #19
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !790
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #19
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #19
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #19
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !778) #19
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %j_fs_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 36
  %27 = ptrtoint ptr %j_fs_dev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %j_fs_dev, align 8
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %28, i32 0, i32 5
  %29 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %bd_dev, align 4
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_end_commit, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 4
  %t_synchronous_commit = getelementptr inbounds %struct.transaction_s, ptr %commit_transaction, i32 0, i32 25
  %32 = ptrtoint ptr %t_synchronous_commit to i32
  call void @__asan_load1_noabort(i32 %32)
  %bf.load = load i8, ptr %t_synchronous_commit, align 8
  %bf.lshr = lshr i8 %bf.load, 7
  %sync_commit = getelementptr inbounds %struct.trace_event_raw_jbd2_end_commit, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %sync_commit to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 %bf.lshr, ptr %sync_commit, align 4
  %t_tid = getelementptr inbounds %struct.transaction_s, ptr %commit_transaction, i32 0, i32 1
  %34 = ptrtoint ptr %t_tid to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %t_tid, align 4
  %transaction = getelementptr inbounds %struct.trace_event_raw_jbd2_end_commit, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %transaction to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %transaction, align 4
  %j_tail_sequence = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 41
  %37 = ptrtoint ptr %j_tail_sequence to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %j_tail_sequence, align 4
  %head17 = getelementptr inbounds %struct.trace_event_raw_jbd2_end_commit, ptr %call13, i32 0, i32 4
  %39 = ptrtoint ptr %head17 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %head17, align 4
  %40 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rctx, align 4
  %42 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %41, ptr noundef %__data, i64 noundef 1, ptr noundef %43, ptr noundef %11, ptr noundef null) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_jbd2_submit_inode_data(ptr noundef %__data, ptr nocapture noundef readonly %inode) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #19
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !788

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !789

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #19
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #19
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %3 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %i_sb, align 4
  %s_dev = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_submit_inode_data, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 4
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %8 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_jbd2_submit_inode_data, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %ino, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_jbd2_submit_inode_data(ptr noundef %__data, ptr nocapture noundef readonly %inode) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #19
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !790
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #19
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !790
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #19
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #19
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #19
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !778) #19
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %27 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %i_sb, align 4
  %s_dev = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_submit_inode_data, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 4
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %32 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_jbd2_submit_inode_data, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %ino to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %ino, align 4
  %35 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rctx, align 4
  %37 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %36, ptr noundef %__data, i64 noundef 1, ptr noundef %38, ptr noundef %11, ptr noundef null) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_jbd2_handle_start_class(ptr noundef %__data, i32 noundef %dev, i32 noundef %tid, i32 noundef %type, i32 noundef %line_no, i32 noundef %requested_blocks) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #19
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !788

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !789

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #19
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #19
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %dev6 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_start_class, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %dev6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %dev, ptr %dev6, align 4
  %tid7 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_start_class, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %tid7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %tid, ptr %tid7, align 4
  %type8 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_start_class, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %type8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %type, ptr %type8, align 4
  %line_no9 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_start_class, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %line_no9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %line_no, ptr %line_no9, align 4
  %requested_blocks10 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_start_class, ptr %call3, i32 0, i32 5
  %7 = ptrtoint ptr %requested_blocks10 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %requested_blocks, ptr %requested_blocks10, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_jbd2_handle_start_class(ptr noundef %__data, i32 noundef %dev, i32 noundef %tid, i32 noundef %type, i32 noundef %line_no, i32 noundef %requested_blocks) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #19
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !790
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #19
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !790
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #19
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #19
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #19
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !778) #19
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %dev17 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_start_class, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %dev17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %dev, ptr %dev17, align 4
  %tid18 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_start_class, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %tid18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %tid, ptr %tid18, align 4
  %type19 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_start_class, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %type19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %type, ptr %type19, align 4
  %line_no20 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_start_class, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %line_no20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %line_no, ptr %line_no20, align 4
  %requested_blocks21 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_start_class, ptr %call13, i32 0, i32 5
  %31 = ptrtoint ptr %requested_blocks21 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %requested_blocks, ptr %requested_blocks21, align 4
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_jbd2_handle_extend(ptr noundef %__data, i32 noundef %dev, i32 noundef %tid, i32 noundef %type, i32 noundef %line_no, i32 noundef %buffer_credits, i32 noundef %requested_blocks) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #19
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !788

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !789

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #19
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #19
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %dev6 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_extend, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %dev6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %dev, ptr %dev6, align 4
  %tid7 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_extend, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %tid7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %tid, ptr %tid7, align 4
  %type8 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_extend, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %type8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %type, ptr %type8, align 4
  %line_no9 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_extend, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %line_no9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %line_no, ptr %line_no9, align 4
  %buffer_credits10 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_extend, ptr %call3, i32 0, i32 5
  %7 = ptrtoint ptr %buffer_credits10 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %buffer_credits, ptr %buffer_credits10, align 4
  %requested_blocks11 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_extend, ptr %call3, i32 0, i32 6
  %8 = ptrtoint ptr %requested_blocks11 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %requested_blocks, ptr %requested_blocks11, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_jbd2_handle_extend(ptr noundef %__data, i32 noundef %dev, i32 noundef %tid, i32 noundef %type, i32 noundef %line_no, i32 noundef %buffer_credits, i32 noundef %requested_blocks) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #19
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !790
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #19
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !790
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #19
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #19
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #19
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !778) #19
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %dev17 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_extend, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %dev17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %dev, ptr %dev17, align 4
  %tid18 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_extend, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %tid18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %tid, ptr %tid18, align 4
  %type19 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_extend, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %type19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %type, ptr %type19, align 4
  %line_no20 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_extend, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %line_no20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %line_no, ptr %line_no20, align 4
  %buffer_credits21 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_extend, ptr %call13, i32 0, i32 5
  %31 = ptrtoint ptr %buffer_credits21 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %buffer_credits, ptr %buffer_credits21, align 4
  %requested_blocks22 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_extend, ptr %call13, i32 0, i32 6
  %32 = ptrtoint ptr %requested_blocks22 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %requested_blocks, ptr %requested_blocks22, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_jbd2_handle_stats(ptr noundef %__data, i32 noundef %dev, i32 noundef %tid, i32 noundef %type, i32 noundef %line_no, i32 noundef %interval, i32 noundef %sync, i32 noundef %requested_blocks, i32 noundef %dirtied_blocks) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #19
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !788

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !789

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #19
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #19
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %dev6 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %dev6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %dev, ptr %dev6, align 4
  %tid7 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %tid7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %tid, ptr %tid7, align 4
  %type8 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %type8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %type, ptr %type8, align 4
  %line_no9 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %line_no9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %line_no, ptr %line_no9, align 4
  %interval10 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %call3, i32 0, i32 5
  %7 = ptrtoint ptr %interval10 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %interval, ptr %interval10, align 4
  %sync11 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %call3, i32 0, i32 6
  %8 = ptrtoint ptr %sync11 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %sync, ptr %sync11, align 4
  %requested_blocks12 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %call3, i32 0, i32 7
  %9 = ptrtoint ptr %requested_blocks12 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %requested_blocks, ptr %requested_blocks12, align 4
  %dirtied_blocks13 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %call3, i32 0, i32 8
  %10 = ptrtoint ptr %dirtied_blocks13 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %dirtied_blocks, ptr %dirtied_blocks13, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_jbd2_handle_stats(ptr noundef %__data, i32 noundef %dev, i32 noundef %tid, i32 noundef %type, i32 noundef %line_no, i32 noundef %interval, i32 noundef %sync, i32 noundef %requested_blocks, i32 noundef %dirtied_blocks) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #19
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !790
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #19
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !790
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #19
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #19
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #19
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !778) #19
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %dev17 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %dev17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %dev, ptr %dev17, align 4
  %tid18 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %tid18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %tid, ptr %tid18, align 4
  %type19 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %type19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %type, ptr %type19, align 4
  %line_no20 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %line_no20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %line_no, ptr %line_no20, align 4
  %interval21 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %call13, i32 0, i32 5
  %31 = ptrtoint ptr %interval21 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %interval, ptr %interval21, align 4
  %sync22 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %call13, i32 0, i32 6
  %32 = ptrtoint ptr %sync22 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %sync, ptr %sync22, align 4
  %requested_blocks23 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %call13, i32 0, i32 7
  %33 = ptrtoint ptr %requested_blocks23 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %requested_blocks, ptr %requested_blocks23, align 4
  %dirtied_blocks24 = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %call13, i32 0, i32 8
  %34 = ptrtoint ptr %dirtied_blocks24 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %dirtied_blocks, ptr %dirtied_blocks24, align 4
  %35 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rctx, align 4
  %37 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %36, ptr noundef %__data, i64 noundef 1, ptr noundef %38, ptr noundef %11, ptr noundef null) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_jbd2_run_stats(ptr noundef %__data, i32 noundef %dev, i32 noundef %tid, ptr nocapture noundef readonly %stats) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #19
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !788

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !789

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #19
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 52) #19
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %dev6 = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %dev6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %dev, ptr %dev6, align 4
  %tid7 = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %tid7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %tid, ptr %tid7, align 4
  %5 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %stats, align 4
  %wait = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %wait to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %wait, align 4
  %rs_request_delay = getelementptr inbounds %struct.transaction_run_stats_s, ptr %stats, i32 0, i32 1
  %8 = ptrtoint ptr %rs_request_delay to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %rs_request_delay, align 4
  %request_delay = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %request_delay to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %request_delay, align 4
  %rs_running = getelementptr inbounds %struct.transaction_run_stats_s, ptr %stats, i32 0, i32 2
  %11 = ptrtoint ptr %rs_running to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %rs_running, align 4
  %running = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call3, i32 0, i32 5
  %13 = ptrtoint ptr %running to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %running, align 4
  %rs_locked = getelementptr inbounds %struct.transaction_run_stats_s, ptr %stats, i32 0, i32 3
  %14 = ptrtoint ptr %rs_locked to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rs_locked, align 4
  %locked = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call3, i32 0, i32 6
  %16 = ptrtoint ptr %locked to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %locked, align 4
  %rs_flushing = getelementptr inbounds %struct.transaction_run_stats_s, ptr %stats, i32 0, i32 4
  %17 = ptrtoint ptr %rs_flushing to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %rs_flushing, align 4
  %flushing = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call3, i32 0, i32 7
  %19 = ptrtoint ptr %flushing to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %flushing, align 4
  %rs_logging = getelementptr inbounds %struct.transaction_run_stats_s, ptr %stats, i32 0, i32 5
  %20 = ptrtoint ptr %rs_logging to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %rs_logging, align 4
  %logging = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call3, i32 0, i32 8
  %22 = ptrtoint ptr %logging to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %logging, align 4
  %rs_handle_count = getelementptr inbounds %struct.transaction_run_stats_s, ptr %stats, i32 0, i32 6
  %23 = ptrtoint ptr %rs_handle_count to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %rs_handle_count, align 4
  %handle_count = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call3, i32 0, i32 9
  %25 = ptrtoint ptr %handle_count to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %handle_count, align 4
  %rs_blocks = getelementptr inbounds %struct.transaction_run_stats_s, ptr %stats, i32 0, i32 7
  %26 = ptrtoint ptr %rs_blocks to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %rs_blocks, align 4
  %blocks = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call3, i32 0, i32 10
  %28 = ptrtoint ptr %blocks to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %blocks, align 4
  %rs_blocks_logged = getelementptr inbounds %struct.transaction_run_stats_s, ptr %stats, i32 0, i32 8
  %29 = ptrtoint ptr %rs_blocks_logged to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rs_blocks_logged, align 4
  %blocks_logged = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call3, i32 0, i32 11
  %31 = ptrtoint ptr %blocks_logged to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %blocks_logged, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_jbd2_run_stats(ptr noundef %__data, i32 noundef %dev, i32 noundef %tid, ptr nocapture noundef readonly %stats) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #19
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !790
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #19
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !790
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #19
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #19
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #19
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !778) #19
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %dev17 = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %dev17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %dev, ptr %dev17, align 4
  %tid18 = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %tid18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %tid, ptr %tid18, align 4
  %29 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %stats, align 4
  %wait = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %wait to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %wait, align 4
  %rs_request_delay = getelementptr inbounds %struct.transaction_run_stats_s, ptr %stats, i32 0, i32 1
  %32 = ptrtoint ptr %rs_request_delay to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rs_request_delay, align 4
  %request_delay = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %request_delay to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %request_delay, align 4
  %rs_running = getelementptr inbounds %struct.transaction_run_stats_s, ptr %stats, i32 0, i32 2
  %35 = ptrtoint ptr %rs_running to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rs_running, align 4
  %running = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call13, i32 0, i32 5
  %37 = ptrtoint ptr %running to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %running, align 4
  %rs_locked = getelementptr inbounds %struct.transaction_run_stats_s, ptr %stats, i32 0, i32 3
  %38 = ptrtoint ptr %rs_locked to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rs_locked, align 4
  %locked = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call13, i32 0, i32 6
  %40 = ptrtoint ptr %locked to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %locked, align 4
  %rs_flushing = getelementptr inbounds %struct.transaction_run_stats_s, ptr %stats, i32 0, i32 4
  %41 = ptrtoint ptr %rs_flushing to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rs_flushing, align 4
  %flushing = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call13, i32 0, i32 7
  %43 = ptrtoint ptr %flushing to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %flushing, align 4
  %rs_logging = getelementptr inbounds %struct.transaction_run_stats_s, ptr %stats, i32 0, i32 5
  %44 = ptrtoint ptr %rs_logging to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %rs_logging, align 4
  %logging = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call13, i32 0, i32 8
  %46 = ptrtoint ptr %logging to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %logging, align 4
  %rs_handle_count = getelementptr inbounds %struct.transaction_run_stats_s, ptr %stats, i32 0, i32 6
  %47 = ptrtoint ptr %rs_handle_count to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %rs_handle_count, align 4
  %handle_count = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call13, i32 0, i32 9
  %49 = ptrtoint ptr %handle_count to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %48, ptr %handle_count, align 4
  %rs_blocks = getelementptr inbounds %struct.transaction_run_stats_s, ptr %stats, i32 0, i32 7
  %50 = ptrtoint ptr %rs_blocks to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %rs_blocks, align 4
  %blocks = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call13, i32 0, i32 10
  %52 = ptrtoint ptr %blocks to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %51, ptr %blocks, align 4
  %rs_blocks_logged = getelementptr inbounds %struct.transaction_run_stats_s, ptr %stats, i32 0, i32 8
  %53 = ptrtoint ptr %rs_blocks_logged to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %rs_blocks_logged, align 4
  %blocks_logged = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %call13, i32 0, i32 11
  %55 = ptrtoint ptr %blocks_logged to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %54, ptr %blocks_logged, align 4
  %56 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %rctx, align 4
  %58 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %57, ptr noundef %__data, i64 noundef 1, ptr noundef %59, ptr noundef %11, ptr noundef null) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_jbd2_checkpoint_stats(ptr noundef %__data, i32 noundef %dev, i32 noundef %tid, ptr nocapture noundef readonly %stats) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #19
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !788

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !789

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #19
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #19
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %dev6 = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint_stats, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %dev6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %dev, ptr %dev6, align 4
  %tid7 = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint_stats, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %tid7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %tid, ptr %tid7, align 4
  %5 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %stats, align 4
  %chp_time = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint_stats, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %chp_time to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %chp_time, align 4
  %cs_forced_to_close = getelementptr inbounds %struct.transaction_chp_stats_s, ptr %stats, i32 0, i32 1
  %8 = ptrtoint ptr %cs_forced_to_close to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cs_forced_to_close, align 4
  %forced_to_close = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint_stats, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %forced_to_close to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %forced_to_close, align 4
  %cs_written = getelementptr inbounds %struct.transaction_chp_stats_s, ptr %stats, i32 0, i32 2
  %11 = ptrtoint ptr %cs_written to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cs_written, align 4
  %written = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint_stats, ptr %call3, i32 0, i32 5
  %13 = ptrtoint ptr %written to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %written, align 4
  %cs_dropped = getelementptr inbounds %struct.transaction_chp_stats_s, ptr %stats, i32 0, i32 3
  %14 = ptrtoint ptr %cs_dropped to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cs_dropped, align 4
  %dropped = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint_stats, ptr %call3, i32 0, i32 6
  %16 = ptrtoint ptr %dropped to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %dropped, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_jbd2_checkpoint_stats(ptr noundef %__data, i32 noundef %dev, i32 noundef %tid, ptr nocapture noundef readonly %stats) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #19
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !790
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #19
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !790
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #19
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #19
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #19
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !778) #19
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %dev17 = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint_stats, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %dev17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %dev, ptr %dev17, align 4
  %tid18 = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint_stats, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %tid18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %tid, ptr %tid18, align 4
  %29 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %stats, align 4
  %chp_time = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint_stats, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %chp_time to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %chp_time, align 4
  %cs_forced_to_close = getelementptr inbounds %struct.transaction_chp_stats_s, ptr %stats, i32 0, i32 1
  %32 = ptrtoint ptr %cs_forced_to_close to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cs_forced_to_close, align 4
  %forced_to_close = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint_stats, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %forced_to_close to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %forced_to_close, align 4
  %cs_written = getelementptr inbounds %struct.transaction_chp_stats_s, ptr %stats, i32 0, i32 2
  %35 = ptrtoint ptr %cs_written to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cs_written, align 4
  %written = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint_stats, ptr %call13, i32 0, i32 5
  %37 = ptrtoint ptr %written to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %written, align 4
  %cs_dropped = getelementptr inbounds %struct.transaction_chp_stats_s, ptr %stats, i32 0, i32 3
  %38 = ptrtoint ptr %cs_dropped to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %cs_dropped, align 4
  %dropped = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint_stats, ptr %call13, i32 0, i32 6
  %40 = ptrtoint ptr %dropped to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %dropped, align 4
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %11, ptr noundef null) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_jbd2_update_log_tail(ptr noundef %__data, ptr nocapture noundef readonly %journal, i32 noundef %first_tid, i32 noundef %block_nr, i32 noundef %freed) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #19
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !788

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !789

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #19
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #19
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %j_fs_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 36
  %3 = ptrtoint ptr %j_fs_dev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %j_fs_dev, align 8
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %4, i32 0, i32 5
  %5 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %bd_dev, align 4
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_update_log_tail, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 4
  %j_tail_sequence = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 41
  %8 = ptrtoint ptr %j_tail_sequence to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %j_tail_sequence, align 4
  %tail_sequence = getelementptr inbounds %struct.trace_event_raw_jbd2_update_log_tail, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %tail_sequence to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %tail_sequence, align 4
  %first_tid6 = getelementptr inbounds %struct.trace_event_raw_jbd2_update_log_tail, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %first_tid6 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %first_tid, ptr %first_tid6, align 4
  %block_nr7 = getelementptr inbounds %struct.trace_event_raw_jbd2_update_log_tail, ptr %call3, i32 0, i32 4
  %12 = ptrtoint ptr %block_nr7 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %block_nr, ptr %block_nr7, align 4
  %freed8 = getelementptr inbounds %struct.trace_event_raw_jbd2_update_log_tail, ptr %call3, i32 0, i32 5
  %13 = ptrtoint ptr %freed8 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %freed, ptr %freed8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_jbd2_update_log_tail(ptr noundef %__data, ptr nocapture noundef readonly %journal, i32 noundef %first_tid, i32 noundef %block_nr, i32 noundef %freed) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #19
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !790
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #19
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !790
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #19
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #19
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #19
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !778) #19
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %j_fs_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 36
  %27 = ptrtoint ptr %j_fs_dev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %j_fs_dev, align 8
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %28, i32 0, i32 5
  %29 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %bd_dev, align 4
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_update_log_tail, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 4
  %j_tail_sequence = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 41
  %32 = ptrtoint ptr %j_tail_sequence to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %j_tail_sequence, align 4
  %tail_sequence = getelementptr inbounds %struct.trace_event_raw_jbd2_update_log_tail, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %tail_sequence to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %tail_sequence, align 4
  %first_tid17 = getelementptr inbounds %struct.trace_event_raw_jbd2_update_log_tail, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %first_tid17 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %first_tid, ptr %first_tid17, align 4
  %block_nr18 = getelementptr inbounds %struct.trace_event_raw_jbd2_update_log_tail, ptr %call13, i32 0, i32 4
  %36 = ptrtoint ptr %block_nr18 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %block_nr, ptr %block_nr18, align 4
  %freed19 = getelementptr inbounds %struct.trace_event_raw_jbd2_update_log_tail, ptr %call13, i32 0, i32 5
  %37 = ptrtoint ptr %freed19 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %freed, ptr %freed19, align 4
  %38 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rctx, align 4
  %40 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %39, ptr noundef %__data, i64 noundef 1, ptr noundef %41, ptr noundef %11, ptr noundef null) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_jbd2_write_superblock(ptr noundef %__data, ptr nocapture noundef readonly %journal, i32 noundef %write_op) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #19
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !788

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !789

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #19
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #19
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %j_fs_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 36
  %3 = ptrtoint ptr %j_fs_dev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %j_fs_dev, align 8
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %4, i32 0, i32 5
  %5 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %bd_dev, align 4
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_write_superblock, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 4
  %write_op6 = getelementptr inbounds %struct.trace_event_raw_jbd2_write_superblock, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %write_op6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %write_op, ptr %write_op6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_jbd2_write_superblock(ptr noundef %__data, ptr nocapture noundef readonly %journal, i32 noundef %write_op) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #19
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !790
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #19
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !790
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #19
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #19
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #19
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !778) #19
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %j_fs_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 36
  %27 = ptrtoint ptr %j_fs_dev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %j_fs_dev, align 8
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %28, i32 0, i32 5
  %29 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %bd_dev, align 4
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_write_superblock, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 4
  %write_op17 = getelementptr inbounds %struct.trace_event_raw_jbd2_write_superblock, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %write_op17 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %write_op, ptr %write_op17, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_jbd2_lock_buffer_stall(ptr noundef %__data, i32 noundef %dev, i32 noundef %stall_ms) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #19
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !788

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !789

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #19
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #19
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %dev6 = getelementptr inbounds %struct.trace_event_raw_jbd2_lock_buffer_stall, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %dev6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %dev, ptr %dev6, align 4
  %stall_ms7 = getelementptr inbounds %struct.trace_event_raw_jbd2_lock_buffer_stall, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %stall_ms7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %stall_ms, ptr %stall_ms7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_jbd2_lock_buffer_stall(ptr noundef %__data, i32 noundef %dev, i32 noundef %stall_ms) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #19
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !790
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #19
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !790
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #19
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #19
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #19
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !778) #19
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %dev17 = getelementptr inbounds %struct.trace_event_raw_jbd2_lock_buffer_stall, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %dev17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %dev, ptr %dev17, align 4
  %stall_ms18 = getelementptr inbounds %struct.trace_event_raw_jbd2_lock_buffer_stall, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %stall_ms18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %stall_ms, ptr %stall_ms18, align 4
  %29 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rctx, align 4
  %31 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %30, ptr noundef %__data, i64 noundef 1, ptr noundef %32, ptr noundef %11, ptr noundef null) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_jbd2_journal_shrink(ptr noundef %__data, ptr nocapture noundef readonly %journal, i32 noundef %nr_to_scan, i32 noundef %count) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #19
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !788

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !789

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #19
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #19
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %j_fs_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 36
  %3 = ptrtoint ptr %j_fs_dev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %j_fs_dev, align 8
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %4, i32 0, i32 5
  %5 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %bd_dev, align 4
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_journal_shrink, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 4
  %nr_to_scan6 = getelementptr inbounds %struct.trace_event_raw_jbd2_journal_shrink, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %nr_to_scan6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %nr_to_scan, ptr %nr_to_scan6, align 4
  %count7 = getelementptr inbounds %struct.trace_event_raw_jbd2_journal_shrink, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %count7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %count, ptr %count7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_jbd2_journal_shrink(ptr noundef %__data, ptr nocapture noundef readonly %journal, i32 noundef %nr_to_scan, i32 noundef %count) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #19
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !790
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #19
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !790
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #19
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #19
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #19
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !778) #19
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %j_fs_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 36
  %27 = ptrtoint ptr %j_fs_dev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %j_fs_dev, align 8
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %28, i32 0, i32 5
  %29 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %bd_dev, align 4
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_journal_shrink, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 4
  %nr_to_scan17 = getelementptr inbounds %struct.trace_event_raw_jbd2_journal_shrink, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %nr_to_scan17 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %nr_to_scan, ptr %nr_to_scan17, align 4
  %count18 = getelementptr inbounds %struct.trace_event_raw_jbd2_journal_shrink, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %count18 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %count, ptr %count18, align 4
  %34 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rctx, align 4
  %36 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %35, ptr noundef %__data, i64 noundef 1, ptr noundef %37, ptr noundef %11, ptr noundef null) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_jbd2_shrink_scan_exit(ptr noundef %__data, ptr nocapture noundef readonly %journal, i32 noundef %nr_to_scan, i32 noundef %nr_shrunk, i32 noundef %count) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #19
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !788

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !789

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #19
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #19
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %j_fs_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 36
  %3 = ptrtoint ptr %j_fs_dev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %j_fs_dev, align 8
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %4, i32 0, i32 5
  %5 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %bd_dev, align 4
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_scan_exit, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 4
  %nr_to_scan6 = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_scan_exit, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %nr_to_scan6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %nr_to_scan, ptr %nr_to_scan6, align 4
  %nr_shrunk7 = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_scan_exit, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %nr_shrunk7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %nr_shrunk, ptr %nr_shrunk7, align 4
  %count8 = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_scan_exit, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %count8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %count, ptr %count8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_jbd2_shrink_scan_exit(ptr noundef %__data, ptr nocapture noundef readonly %journal, i32 noundef %nr_to_scan, i32 noundef %nr_shrunk, i32 noundef %count) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #19
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !790
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #19
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !790
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #19
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #19
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #19
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !778) #19
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %j_fs_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 36
  %27 = ptrtoint ptr %j_fs_dev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %j_fs_dev, align 8
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %28, i32 0, i32 5
  %29 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %bd_dev, align 4
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_scan_exit, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 4
  %nr_to_scan17 = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_scan_exit, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %nr_to_scan17 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %nr_to_scan, ptr %nr_to_scan17, align 4
  %nr_shrunk18 = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_scan_exit, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %nr_shrunk18 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %nr_shrunk, ptr %nr_shrunk18, align 4
  %count19 = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_scan_exit, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %count19 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %count, ptr %count19, align 4
  %35 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rctx, align 4
  %37 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %36, ptr noundef %__data, i64 noundef 1, ptr noundef %38, ptr noundef %11, ptr noundef null) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_jbd2_shrink_checkpoint_list(ptr noundef %__data, ptr nocapture noundef readonly %journal, i32 noundef %first_tid, i32 noundef %tid, i32 noundef %last_tid, i32 noundef %nr_freed, i32 noundef %nr_scanned, i32 noundef %next_tid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #19
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !788

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !789

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #19
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 36) #19
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %j_fs_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 36
  %3 = ptrtoint ptr %j_fs_dev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %j_fs_dev, align 8
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %4, i32 0, i32 5
  %5 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %bd_dev, align 4
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 4
  %first_tid6 = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %first_tid6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %first_tid, ptr %first_tid6, align 4
  %tid7 = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %tid7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %tid, ptr %tid7, align 4
  %last_tid8 = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %last_tid8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %last_tid, ptr %last_tid8, align 4
  %nr_freed9 = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %call3, i32 0, i32 5
  %11 = ptrtoint ptr %nr_freed9 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %nr_freed, ptr %nr_freed9, align 4
  %nr_scanned10 = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %call3, i32 0, i32 6
  %12 = ptrtoint ptr %nr_scanned10 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %nr_scanned, ptr %nr_scanned10, align 4
  %next_tid11 = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %call3, i32 0, i32 7
  %13 = ptrtoint ptr %next_tid11 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %next_tid, ptr %next_tid11, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_jbd2_shrink_checkpoint_list(ptr noundef %__data, ptr nocapture noundef readonly %journal, i32 noundef %first_tid, i32 noundef %tid, i32 noundef %last_tid, i32 noundef %nr_freed, i32 noundef %nr_scanned, i32 noundef %next_tid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #19
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !790
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #19
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !790
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #19
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #19
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #19
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !778) #19
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %j_fs_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 36
  %27 = ptrtoint ptr %j_fs_dev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %j_fs_dev, align 8
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %28, i32 0, i32 5
  %29 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %bd_dev, align 4
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 4
  %first_tid17 = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %first_tid17 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %first_tid, ptr %first_tid17, align 4
  %tid18 = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %tid18 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %tid, ptr %tid18, align 4
  %last_tid19 = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %last_tid19 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %last_tid, ptr %last_tid19, align 4
  %nr_freed20 = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %call13, i32 0, i32 5
  %35 = ptrtoint ptr %nr_freed20 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %nr_freed, ptr %nr_freed20, align 4
  %nr_scanned21 = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %call13, i32 0, i32 6
  %36 = ptrtoint ptr %nr_scanned21 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %nr_scanned, ptr %nr_scanned21, align 4
  %next_tid22 = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %call13, i32 0, i32 7
  %37 = ptrtoint ptr %next_tid22 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %next_tid, ptr %next_tid22, align 4
  %38 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rctx, align 4
  %40 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %39, ptr noundef %__data, i64 noundef 1, ptr noundef %41, ptr noundef %11, ptr noundef null) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_jbd2_checkpoint(ptr noundef %__data, ptr noundef %journal, i32 noundef %result) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %0 = ptrtoint ptr %journal to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %result to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_jbd2_commit(ptr noundef %__data, ptr noundef %journal, ptr noundef %commit_transaction) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %0 = ptrtoint ptr %journal to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %commit_transaction to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_jbd2_end_commit(ptr noundef %__data, ptr noundef %journal, ptr noundef %commit_transaction) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %0 = ptrtoint ptr %journal to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %commit_transaction to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_jbd2_submit_inode_data(ptr noundef %__data, ptr noundef %inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %0 = ptrtoint ptr %inode to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_jbd2_handle_start_class(ptr noundef %__data, i32 noundef %dev, i32 noundef %tid, i32 noundef %type, i32 noundef %line_no, i32 noundef %requested_blocks) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %conv = zext i32 %dev to i64
  %conv4 = zext i32 %tid to i64
  %conv8 = zext i32 %type to i64
  %conv12 = zext i32 %line_no to i64
  %conv16 = zext i32 %requested_blocks to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_jbd2_handle_extend(ptr noundef %__data, i32 noundef %dev, i32 noundef %tid, i32 noundef %type, i32 noundef %line_no, i32 noundef %buffer_credits, i32 noundef %requested_blocks) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %conv = zext i32 %dev to i64
  %conv4 = zext i32 %tid to i64
  %conv8 = zext i32 %type to i64
  %conv12 = zext i32 %line_no to i64
  %conv16 = zext i32 %buffer_credits to i64
  %conv20 = zext i32 %requested_blocks to i64
  tail call void @bpf_trace_run6(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_jbd2_handle_stats(ptr noundef %__data, i32 noundef %dev, i32 noundef %tid, i32 noundef %type, i32 noundef %line_no, i32 noundef %interval, i32 noundef %sync, i32 noundef %requested_blocks, i32 noundef %dirtied_blocks) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %conv = zext i32 %dev to i64
  %conv4 = zext i32 %tid to i64
  %conv8 = zext i32 %type to i64
  %conv12 = zext i32 %line_no to i64
  %conv16 = zext i32 %interval to i64
  %conv20 = zext i32 %sync to i64
  %conv24 = zext i32 %requested_blocks to i64
  %conv28 = zext i32 %dirtied_blocks to i64
  tail call void @bpf_trace_run8(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20, i64 noundef %conv24, i64 noundef %conv28) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_jbd2_run_stats(ptr noundef %__data, i32 noundef %dev, i32 noundef %tid, ptr noundef %stats) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %conv = zext i32 %dev to i64
  %conv4 = zext i32 %tid to i64
  %0 = ptrtoint ptr %stats to i32
  %conv8 = zext i32 %0 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_jbd2_checkpoint_stats(ptr noundef %__data, i32 noundef %dev, i32 noundef %tid, ptr noundef %stats) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %conv = zext i32 %dev to i64
  %conv4 = zext i32 %tid to i64
  %0 = ptrtoint ptr %stats to i32
  %conv8 = zext i32 %0 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_jbd2_update_log_tail(ptr noundef %__data, ptr noundef %journal, i32 noundef %first_tid, i32 noundef %block_nr, i32 noundef %freed) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %0 = ptrtoint ptr %journal to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %first_tid to i64
  %conv8 = zext i32 %block_nr to i64
  %conv12 = zext i32 %freed to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_jbd2_write_superblock(ptr noundef %__data, ptr noundef %journal, i32 noundef %write_op) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %0 = ptrtoint ptr %journal to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %write_op to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_jbd2_lock_buffer_stall(ptr noundef %__data, i32 noundef %dev, i32 noundef %stall_ms) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %conv = zext i32 %dev to i64
  %conv4 = zext i32 %stall_ms to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_jbd2_journal_shrink(ptr noundef %__data, ptr noundef %journal, i32 noundef %nr_to_scan, i32 noundef %count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %0 = ptrtoint ptr %journal to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %nr_to_scan to i64
  %conv8 = zext i32 %count to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_jbd2_shrink_scan_exit(ptr noundef %__data, ptr noundef %journal, i32 noundef %nr_to_scan, i32 noundef %nr_shrunk, i32 noundef %count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %0 = ptrtoint ptr %journal to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %nr_to_scan to i64
  %conv8 = zext i32 %nr_shrunk to i64
  %conv12 = zext i32 %count to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_jbd2_shrink_checkpoint_list(ptr noundef %__data, ptr noundef %journal, i32 noundef %first_tid, i32 noundef %tid, i32 noundef %last_tid, i32 noundef %nr_freed, i32 noundef %nr_scanned, i32 noundef %next_tid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %0 = ptrtoint ptr %journal to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %first_tid to i64
  %conv8 = zext i32 %tid to i64
  %conv12 = zext i32 %last_tid to i64
  %conv16 = zext i32 %nr_freed to i64
  %conv20 = zext i32 %nr_scanned to i64
  %conv24 = zext i32 %next_tid to i64
  tail call void @bpf_trace_run7(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20, i64 noundef %conv24) #19
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_extend(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_stop(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @jbd2_journal_lock_updates(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @jbd2_journal_unlock_updates(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_get_write_access(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_get_create_access(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_get_undo_access(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @jbd2_journal_set_triggers(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_dirty_metadata(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_forget(ptr noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_journal_flush(ptr noundef %journal, i32 noundef %flags) #0 align 64 {
entry:
  %block.i.i = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  %j_running_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 10
  %0 = ptrtoint ptr %j_running_transaction to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %j_running_transaction, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end5, label %if.end5.thread

if.end5.thread:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %t_tid = getelementptr inbounds %struct.transaction_s, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %t_tid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %t_tid, align 4
  %call = tail call i32 @__jbd2_log_start_commit(ptr noundef %journal, i32 noundef %3)
  br label %if.then7

if.end5:                                          ; preds = %entry
  %j_committing_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 11
  %4 = ptrtoint ptr %j_committing_transaction to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %j_committing_transaction, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %if.else11, label %if.end5.if.then7_crit_edge

if.end5.if.then7_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then7

if.then7:                                         ; preds = %if.end5.if.then7_crit_edge, %if.end5.thread
  %transaction.0182 = phi ptr [ %1, %if.end5.thread ], [ %5, %if.end5.if.then7_crit_edge ]
  %t_tid8 = getelementptr inbounds %struct.transaction_s, ptr %transaction.0182, i32 0, i32 1
  %6 = ptrtoint ptr %t_tid8 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %t_tid8, align 4
  tail call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  %call10 = tail call i32 @jbd2_log_wait_commit(ptr noundef %journal, i32 noundef %7)
  br label %if.end13

if.else11:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  br label %if.end13

if.end13:                                         ; preds = %if.else11, %if.then7
  %j_list_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 39
  tail call void @_raw_spin_lock(ptr noundef %j_list_lock) #19
  %j_checkpoint_transactions = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 12
  %j_checkpoint_mutex = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 19
  br label %land.rhs

land.rhs:                                         ; preds = %while.body.land.rhs_crit_edge, %if.end13
  %8 = ptrtoint ptr %j_checkpoint_transactions to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %j_checkpoint_transactions, align 8
  %cmp.not = icmp eq ptr %9, null
  br i1 %cmp.not, label %land.rhs.while.end_crit_edge, label %while.body

land.rhs.while.end_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #21
  br label %while.end

while.body:                                       ; preds = %land.rhs
  tail call void @_raw_spin_unlock(ptr noundef %j_list_lock) #19
  tail call void @mutex_lock_io_nested(ptr noundef %j_checkpoint_mutex, i32 noundef 0) #19
  %call16 = tail call i32 @jbd2_log_do_checkpoint(ptr noundef %journal) #19
  tail call void @mutex_unlock(ptr noundef %j_checkpoint_mutex) #19
  tail call void @_raw_spin_lock(ptr noundef %j_list_lock) #19
  %tobool14.not = icmp eq i32 %call16, 0
  br i1 %tobool14.not, label %while.body.land.rhs_crit_edge, label %while.body.while.end_crit_edge

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #21
  br label %while.end

while.body.land.rhs_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.rhs

while.end:                                        ; preds = %while.body.while.end_crit_edge, %land.rhs.while.end_crit_edge
  %err.0.lcssa = phi i32 [ %call16, %while.body.while.end_crit_edge ], [ 0, %land.rhs.while.end_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %j_list_lock) #19
  %10 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %journal, align 8
  %and.i = and i32 %11, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool21.not = icmp eq i32 %and.i, 0
  br i1 %tobool21.not, label %if.end23, label %while.end.cleanup_crit_edge

while.end.cleanup_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end23:                                         ; preds = %while.end
  tail call void @mutex_lock_io_nested(ptr noundef %j_checkpoint_mutex, i32 noundef 0) #19
  br i1 %cmp.not, label %if.then26, label %if.end23.if.end32_crit_edge

if.end23.if.end32_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end32

if.then26:                                        ; preds = %if.end23
  %call27 = tail call i32 @jbd2_cleanup_journal_tail(ptr noundef %journal) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %cmp28 = icmp slt i32 %call27, 0
  br i1 %cmp28, label %if.then29, label %if.then26.if.end32_crit_edge

if.then26.if.end32_crit_edge:                     ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end32

if.then29:                                        ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @mutex_unlock(ptr noundef %j_checkpoint_mutex) #19
  br label %cleanup

if.end32:                                         ; preds = %if.then26.if.end32_crit_edge, %if.end23.if.end32_crit_edge
  tail call fastcc void @jbd2_mark_journal_empty(ptr noundef %journal, i32 noundef 133120)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %flags)
  %tobool33.not = icmp eq i32 %flags, 0
  br i1 %tobool33.not, label %if.end32.if.end36_crit_edge, label %if.then34

if.end32.if.end36_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end36

if.then34:                                        ; preds = %if.end32
  %j_dev.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 32
  %12 = ptrtoint ptr %j_dev.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %j_dev.i, align 4
  %bd_queue.i.i = getelementptr inbounds %struct.block_device, ptr %13, i32 0, i32 18
  %14 = ptrtoint ptr %bd_queue.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bd_queue.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %flags)
  %tobool.not.i = icmp ult i32 %flags, 4
  br i1 %tobool.not.i, label %lor.lhs.false2.i, label %if.then34.if.end36_crit_edge

if.then34.if.end36_crit_edge:                     ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end36

lor.lhs.false2.i:                                 ; preds = %if.then34
  %and3.i = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i)
  %tobool4.not.i = icmp eq i32 %and3.i, 0
  %and5.i = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %flags)
  %.not.i = icmp eq i32 %flags, 3
  br i1 %.not.i, label %lor.lhs.false2.i.if.end36_crit_edge, label %if.end.i

lor.lhs.false2.i.if.end36_crit_edge:              ; preds = %lor.lhs.false2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end36

if.end.i:                                         ; preds = %lor.lhs.false2.i
  %tobool7.not.i = icmp eq ptr %15, null
  br i1 %tobool7.not.i, label %if.end.i.if.end36_crit_edge, label %if.end9.i

if.end.i.if.end36_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end36

if.end9.i:                                        ; preds = %if.end.i
  br i1 %tobool4.not.i, label %if.end9.i.if.end16.i_crit_edge, label %land.lhs.true12.i

if.end9.i.if.end16.i_crit_edge:                   ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end16.i

land.lhs.true12.i:                                ; preds = %if.end9.i
  %queue_flags.i = getelementptr inbounds %struct.request_queue, ptr %15, i32 0, i32 11
  %16 = ptrtoint ptr %queue_flags.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %queue_flags.i, align 4
  %18 = and i32 %17, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool14.not.i = icmp eq i32 %18, 0
  br i1 %tobool14.not.i, label %land.lhs.true12.i.if.end36_crit_edge, label %land.lhs.true12.i.if.end16.i_crit_edge

land.lhs.true12.i.if.end16.i_crit_edge:           ; preds = %land.lhs.true12.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end16.i

land.lhs.true12.i.if.end36_crit_edge:             ; preds = %land.lhs.true12.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end36

if.end16.i:                                       ; preds = %land.lhs.true12.i.if.end16.i_crit_edge, %if.end9.i.if.end16.i_crit_edge
  %j_superblock.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 5
  %19 = ptrtoint ptr %j_superblock.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %j_superblock.i, align 4
  %s_first.i = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %s_first.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %s_first.i, align 4
  %j_total_len.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 37
  %23 = ptrtoint ptr %j_total_len.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %j_total_len.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %22, i32 %24)
  %cmp130.i = icmp ult i32 %22, %24
  br i1 %cmp130.i, label %for.body.lr.ph.i, label %if.end16.i.for.end.i_crit_edge

if.end16.i.for.end.i_crit_edge:                   ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.end16.i
  %j_inode.i.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 40
  %j_blocksize.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 33
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %block_stop.0134.i = phi i64 [ -1, %for.body.lr.ph.i ], [ %block_stop.3.i, %for.inc.i.for.body.i_crit_edge ]
  %block_start.0133.i = phi i64 [ -1, %for.body.lr.ph.i ], [ %block_start.2.i, %for.inc.i.for.body.i_crit_edge ]
  %block.0131.i = phi i32 [ %22, %for.body.lr.ph.i ], [ %inc69.i, %for.inc.i.for.body.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %block.i.i) #19
  %25 = ptrtoint ptr %j_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %j_inode.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %26, null
  %conv8.i.i = zext i32 %block.0131.i to i64
  br i1 %tobool.not.i.i, label %for.body.i.if.end21.i_crit_edge, label %if.then.i.i

for.body.i.if.end21.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end21.i

if.then.i.i:                                      ; preds = %for.body.i
  %27 = ptrtoint ptr %block.i.i to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %conv8.i.i, ptr %block.i.i, align 8
  %call.i.i = call i32 @bmap(ptr noundef nonnull %26, ptr noundef nonnull %block.i.i) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool3.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool3.not.i.i, label %lor.lhs.false.i.i, label %if.then.i.i.do.end.i_crit_edge

if.then.i.i.do.end.i_crit_edge:                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end.i

lor.lhs.false.i.i:                                ; preds = %if.then.i.i
  %28 = ptrtoint ptr %block.i.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %block.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %29)
  %tobool4.not.i.i = icmp eq i64 %29, 0
  br i1 %tobool4.not.i.i, label %lor.lhs.false.i.i.do.end.i_crit_edge, label %lor.lhs.false.i.i.if.end21.i_crit_edge

lor.lhs.false.i.i.if.end21.i_crit_edge:           ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end21.i

lor.lhs.false.i.i.do.end.i_crit_edge:             ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end.i

do.end.i:                                         ; preds = %lor.lhs.false.i.i.do.end.i_crit_edge, %if.then.i.i.do.end.i_crit_edge
  %j_devname.i.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 35
  %call6.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.9, i32 noundef %block.0131.i, ptr noundef %j_devname.i.i) #22
  call void @jbd2_journal_abort(ptr noundef %journal, i32 noundef -5) #19
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %block.i.i) #19
  %call20.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.196, i32 noundef %block.0131.i) #22
  br label %if.end36

if.end21.i:                                       ; preds = %lor.lhs.false.i.i.if.end21.i_crit_edge, %for.body.i.if.end21.i_crit_edge
  %phys_block.1.ph.i = phi i64 [ %conv8.i.i, %for.body.i.if.end21.i_crit_edge ], [ %29, %lor.lhs.false.i.i.if.end21.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %block.i.i) #19
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %block_start.0133.i)
  %cmp22.i = icmp eq i64 %block_start.0133.i, -1
  %sub.i = add i64 %phys_block.1.ph.i, -1
  %spec.select.i = select i1 %cmp22.i, i64 %phys_block.1.ph.i, i64 %block_start.0133.i
  %spec.select127.i = select i1 %cmp22.i, i64 %sub.i, i64 %block_stop.0134.i
  %add.i = add i64 %spec.select127.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %phys_block.1.ph.i, i64 %add.i)
  %cmp25.not.i = icmp eq i64 %phys_block.1.ph.i, %add.i
  br i1 %cmp25.not.i, label %if.else.i, label %if.then26.i

if.then26.i:                                      ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #21
  %dec.i = add i32 %block.0131.i, -1
  br label %if.end32.i

if.else.i:                                        ; preds = %if.end21.i
  %30 = ptrtoint ptr %j_total_len.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %j_total_len.i, align 4
  %sub28.i = add i32 %31, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %block.0131.i, i32 %sub28.i)
  %cmp29.not.i = icmp eq i32 %block.0131.i, %sub28.i
  br i1 %cmp29.not.i, label %if.else.i.if.end32.i_crit_edge, label %if.else.i.for.inc.i_crit_edge

if.else.i.for.inc.i_crit_edge:                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.inc.i

if.else.i.if.end32.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end32.i

if.end32.i:                                       ; preds = %if.else.i.if.end32.i_crit_edge, %if.then26.i
  %block.1.i = phi i32 [ %dec.i, %if.then26.i ], [ %block.0131.i, %if.else.i.if.end32.i_crit_edge ]
  %block_stop.2.i = phi i64 [ %spec.select127.i, %if.then26.i ], [ %phys_block.1.ph.i, %if.else.i.if.end32.i_crit_edge ]
  %32 = ptrtoint ptr %j_blocksize.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %j_blocksize.i, align 8
  %conv.i = sext i32 %33 to i64
  %mul.i = mul i64 %spec.select.i, %conv.i
  %mul35.i = mul i64 %block_stop.2.i, %conv.i
  %sub36.i = sub i64 1, %spec.select.i
  %add37.i = add i64 %sub36.i, %block_stop.2.i
  %mul40.i = mul i64 %add37.i, %conv.i
  %34 = ptrtoint ptr %j_dev.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %j_dev.i, align 4
  %bd_inode.i = getelementptr inbounds %struct.block_device, ptr %35, i32 0, i32 7
  %36 = ptrtoint ptr %bd_inode.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %bd_inode.i, align 4
  %i_mapping.i = getelementptr inbounds %struct.inode, ptr %37, i32 0, i32 9
  %38 = ptrtoint ptr %i_mapping.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %i_mapping.i, align 8
  call void @truncate_inode_pages_range(ptr noundef %39, i64 noundef %mul.i, i64 noundef %mul35.i) #19
  br i1 %tobool4.not.i, label %if.else48.i, label %if.then44.i

if.then44.i:                                      ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #21
  %40 = ptrtoint ptr %j_dev.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %j_dev.i, align 4
  %shr.i = ashr i64 %mul.i, 9
  %shr46.i = ashr i64 %mul40.i, 9
  %call47.i = call i32 @blkdev_issue_discard(ptr noundef %41, i64 noundef %shr.i, i64 noundef %shr46.i, i32 noundef 3136, i32 noundef 0) #19
  br label %if.end57.i

if.else48.i:                                      ; preds = %if.end32.i
  br i1 %tobool6.not.i, label %if.else48.i.for.inc.i_crit_edge, label %if.then51.i

if.else48.i.for.inc.i_crit_edge:                  ; preds = %if.else48.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.inc.i

if.then51.i:                                      ; preds = %if.else48.i
  call void @__sanitizer_cov_trace_pc() #21
  %42 = ptrtoint ptr %j_dev.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %j_dev.i, align 4
  %shr53.i = ashr i64 %mul.i, 9
  %shr54.i = ashr i64 %mul40.i, 9
  %call55.i = call i32 @blkdev_issue_zeroout(ptr noundef %43, i64 noundef %shr53.i, i64 noundef %shr54.i, i32 noundef 3136, i32 noundef 0) #19
  br label %if.end57.i

if.end57.i:                                       ; preds = %if.then51.i, %if.then44.i
  %err.0.i = phi i32 [ %call47.i, %if.then44.i ], [ %call55.i, %if.then51.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0.i)
  %cmp58.not.i = icmp eq i32 %err.0.i, 0
  br i1 %cmp58.not.i, label %if.end57.i.for.inc.i_crit_edge, label %do.end65.i, !prof !788

if.end57.i.for.inc.i_crit_edge:                   ; preds = %if.end57.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.inc.i

do.end65.i:                                       ; preds = %if.end57.i
  call void @__sanitizer_cov_trace_pc() #21
  %call67.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.199, i32 noundef %err.0.i, i64 noundef %spec.select.i, i64 noundef %block_stop.2.i) #22
  br label %if.end36

for.inc.i:                                        ; preds = %if.end57.i.for.inc.i_crit_edge, %if.else48.i.for.inc.i_crit_edge, %if.else.i.for.inc.i_crit_edge
  %block.2.i = phi i32 [ %block.0131.i, %if.else.i.for.inc.i_crit_edge ], [ %block.1.i, %if.end57.i.for.inc.i_crit_edge ], [ %block.1.i, %if.else48.i.for.inc.i_crit_edge ]
  %block_start.2.i = phi i64 [ %spec.select.i, %if.else.i.for.inc.i_crit_edge ], [ -1, %if.end57.i.for.inc.i_crit_edge ], [ -1, %if.else48.i.for.inc.i_crit_edge ]
  %block_stop.3.i = phi i64 [ %phys_block.1.ph.i, %if.else.i.for.inc.i_crit_edge ], [ %block_stop.2.i, %if.end57.i.for.inc.i_crit_edge ], [ %block_stop.2.i, %if.else48.i.for.inc.i_crit_edge ]
  %inc69.i = add i32 %block.2.i, 1
  %44 = ptrtoint ptr %j_total_len.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %j_total_len.i, align 4
  %cmp.i = icmp ult i32 %inc69.i, %45
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.for.end.i_crit_edge

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end.i

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end16.i.for.end.i_crit_edge
  %46 = ptrtoint ptr %j_dev.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %j_dev.i, align 4
  %call71.i = call i32 @blkdev_issue_flush(ptr noundef %47) #19
  br label %if.end36

if.end36:                                         ; preds = %for.end.i, %do.end65.i, %do.end.i, %land.lhs.true12.i.if.end36_crit_edge, %if.end.i.if.end36_crit_edge, %lor.lhs.false2.i.if.end36_crit_edge, %if.then34.if.end36_crit_edge, %if.end32.if.end36_crit_edge
  %err.2 = phi i32 [ %err.0.lcssa, %if.end32.if.end36_crit_edge ], [ -5, %do.end.i ], [ %err.0.i, %do.end65.i ], [ %call71.i, %for.end.i ], [ -22, %lor.lhs.false2.i.if.end36_crit_edge ], [ -22, %if.then34.if.end36_crit_edge ], [ -6, %if.end.i.if.end36_crit_edge ], [ -95, %land.lhs.true12.i.if.end36_crit_edge ]
  call void @mutex_unlock(ptr noundef %j_checkpoint_mutex) #19
  call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  %48 = ptrtoint ptr %j_running_transaction to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %j_running_transaction, align 8
  %tobool40.not = icmp eq ptr %49, null
  br i1 %tobool40.not, label %do.body53, label %do.body46, !prof !788

do.body46:                                        ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #21
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2496, 0\0A.popsection", ""() #19, !srcloc !791
  unreachable

do.body53:                                        ; preds = %if.end36
  %j_committing_transaction54 = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 11
  %50 = ptrtoint ptr %j_committing_transaction54 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %j_committing_transaction54, align 4
  %tobool55.not = icmp eq ptr %51, null
  br i1 %tobool55.not, label %do.body76, label %do.body67, !prof !788

do.body67:                                        ; preds = %do.body53
  call void @__sanitizer_cov_trace_pc() #21
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2497, 0\0A.popsection", ""() #19, !srcloc !792
  unreachable

do.body76:                                        ; preds = %do.body53
  %52 = ptrtoint ptr %j_checkpoint_transactions to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %j_checkpoint_transactions, align 8
  %tobool78.not = icmp eq ptr %53, null
  br i1 %tobool78.not, label %do.body99, label %do.body90, !prof !788

do.body90:                                        ; preds = %do.body76
  call void @__sanitizer_cov_trace_pc() #21
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2498, 0\0A.popsection", ""() #19, !srcloc !793
  unreachable

do.body99:                                        ; preds = %do.body76
  %j_head = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 24
  %54 = ptrtoint ptr %j_head to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %j_head, align 4
  %j_tail = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 25
  %56 = ptrtoint ptr %j_tail to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %j_tail, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %55, i32 %57)
  %cmp100.not = icmp eq i32 %55, %57
  br i1 %cmp100.not, label %do.body119, label %do.body110, !prof !788

do.body110:                                       ; preds = %do.body99
  call void @__sanitizer_cov_trace_pc() #21
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2499, 0\0A.popsection", ""() #19, !srcloc !794
  unreachable

do.body119:                                       ; preds = %do.body99
  %j_tail_sequence = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 41
  %58 = ptrtoint ptr %j_tail_sequence to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %j_tail_sequence, align 4
  %j_transaction_sequence = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 42
  %60 = ptrtoint ptr %j_transaction_sequence to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %j_transaction_sequence, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %59, i32 %61)
  %cmp120.not = icmp eq i32 %59, %61
  br i1 %cmp120.not, label %do.end138, label %do.body130, !prof !788

do.body130:                                       ; preds = %do.body119
  call void @__sanitizer_cov_trace_pc() #21
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2500, 0\0A.popsection", ""() #19, !srcloc !795
  unreachable

do.end138:                                        ; preds = %do.body119
  call void @__sanitizer_cov_trace_pc() #21
  call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  br label %cleanup

cleanup:                                          ; preds = %do.end138, %if.then29, %while.end.cleanup_crit_edge
  %retval.0 = phi i32 [ -5, %while.end.cleanup_crit_edge ], [ %err.2, %do.end138 ], [ %call27, %if.then29 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_revoke(ptr noundef, i64 noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @jbd2_journal_init_dev(ptr noundef %bdev, ptr noundef %fs_dev, i64 noundef %start, i32 noundef %len, i32 noundef %blocksize) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @journal_init_common(ptr noundef %bdev, ptr noundef %fs_dev, i64 noundef %start, i32 noundef %len, i32 noundef %blocksize)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %j_dev = getelementptr inbounds %struct.journal_s, ptr %call, i32 0, i32 32
  %0 = ptrtoint ptr %j_dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %j_dev, align 4
  %j_devname = getelementptr inbounds %struct.journal_s, ptr %call, i32 0, i32 35
  %call1 = tail call ptr @bdevname(ptr noundef %1, ptr noundef %j_devname) #19
  %call4 = tail call ptr @strreplace(ptr noundef %j_devname, i8 noundef zeroext 47, i8 noundef zeroext 33) #19
  %2 = load ptr, ptr @proc_jbd2_stats, align 4
  %call.i = tail call ptr @proc_mkdir(ptr noundef %j_devname, ptr noundef %2) #19
  %j_proc_entry.i = getelementptr inbounds %struct.journal_s, ptr %call, i32 0, i32 66
  %3 = ptrtoint ptr %j_proc_entry.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %call.i, ptr %j_proc_entry.i, align 8
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.cleanup_crit_edge, label %if.then.i

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %call3.i = tail call ptr @proc_create_data(ptr noundef nonnull @.str.138, i16 noundef zeroext 292, ptr noundef nonnull %call.i, ptr noundef nonnull @jbd2_info_proc_ops, ptr noundef nonnull %call) #19
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @jbd2_journal_init_inode(ptr noundef %inode) #0 align 64 {
entry:
  %blocknr = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %blocknr) #19
  %0 = ptrtoint ptr %blocknr to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 0, ptr %blocknr, align 8
  %call = call i32 @bmap(ptr noundef %inode, ptr noundef nonnull %blocknr) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.do.end_crit_edge

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end

lor.lhs.false:                                    ; preds = %entry
  %1 = ptrtoint ptr %blocknr to i32
  call void @__asan_load8_noabort(i32 %1)
  %2 = load i64, ptr %blocknr, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %2)
  %tobool1.not = icmp eq i64 %2, 0
  br i1 %tobool1.not, label %lor.lhs.false.do.end_crit_edge, label %if.end

lor.lhs.false.do.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end

do.end:                                           ; preds = %lor.lhs.false.do.end_crit_edge, %entry.do.end_crit_edge
  %call2 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.11, ptr noundef nonnull @.str.12) #22
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %3 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %i_sb, align 4
  %s_id = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 39
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %5 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %i_ino, align 8
  %i_size = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 14
  %7 = ptrtoint ptr %i_size to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %i_size, align 8
  %s_blocksize_bits = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 2
  %9 = ptrtoint ptr %s_blocksize_bits to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %s_blocksize_bits, align 4
  %conv = zext i8 %10 to i32
  %s_blocksize = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 3
  %11 = ptrtoint ptr %s_blocksize to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %s_blocksize, align 16
  call void (i32, ptr, ptr, i32, ptr, ...) @__jbd2_debug(i32 noundef 1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.12, i32 noundef 1501, ptr noundef nonnull @.str.13, ptr noundef %s_id, i32 noundef %6, i64 noundef %8, i32 noundef %conv, i32 noundef %12)
  %13 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %i_sb, align 4
  %s_bdev = getelementptr inbounds %struct.super_block, ptr %14, i32 0, i32 26
  %15 = ptrtoint ptr %s_bdev to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %s_bdev, align 4
  %17 = ptrtoint ptr %blocknr to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %blocknr, align 8
  %19 = ptrtoint ptr %i_size to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %i_size, align 8
  %s_blocksize_bits10 = getelementptr inbounds %struct.super_block, ptr %14, i32 0, i32 2
  %21 = ptrtoint ptr %s_blocksize_bits10 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %s_blocksize_bits10, align 4
  %sh_prom = zext i8 %22 to i64
  %shr = ashr i64 %20, %sh_prom
  %conv12 = trunc i64 %shr to i32
  %s_blocksize14 = getelementptr inbounds %struct.super_block, ptr %14, i32 0, i32 3
  %23 = ptrtoint ptr %s_blocksize14 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %s_blocksize14, align 16
  %call15 = call fastcc ptr @journal_init_common(ptr noundef %16, ptr noundef %16, i64 noundef %18, i32 noundef %conv12, i32 noundef %24)
  %tobool16.not = icmp eq ptr %call15, null
  br i1 %tobool16.not, label %if.end.cleanup_crit_edge, label %if.end18

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end18:                                         ; preds = %if.end
  %j_inode = getelementptr inbounds %struct.journal_s, ptr %call15, i32 0, i32 40
  %25 = ptrtoint ptr %j_inode to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %inode, ptr %j_inode, align 8
  %j_dev = getelementptr inbounds %struct.journal_s, ptr %call15, i32 0, i32 32
  %26 = ptrtoint ptr %j_dev to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %j_dev, align 4
  %j_devname = getelementptr inbounds %struct.journal_s, ptr %call15, i32 0, i32 35
  %call20 = call ptr @bdevname(ptr noundef %27, ptr noundef %j_devname) #19
  %call23 = call ptr @strreplace(ptr noundef %j_devname, i8 noundef zeroext 47, i8 noundef zeroext 33) #19
  %28 = ptrtoint ptr %j_inode to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %j_inode, align 8
  %i_ino25 = getelementptr inbounds %struct.inode, ptr %29, i32 0, i32 11
  %30 = ptrtoint ptr %i_ino25 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %i_ino25, align 8
  %call26 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %call23, ptr noundef nonnull @.str.14, i32 noundef %31)
  %32 = load ptr, ptr @proc_jbd2_stats, align 4
  %call.i = call ptr @proc_mkdir(ptr noundef %j_devname, ptr noundef %32) #19
  %j_proc_entry.i = getelementptr inbounds %struct.journal_s, ptr %call15, i32 0, i32 66
  %33 = ptrtoint ptr %j_proc_entry.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %call.i, ptr %j_proc_entry.i, align 8
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end18.cleanup_crit_edge, label %if.then.i

if.end18.cleanup_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then.i:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #21
  %call3.i = call ptr @proc_create_data(ptr noundef nonnull @.str.138, i16 noundef zeroext 292, ptr noundef nonnull %call.i, ptr noundef nonnull @jbd2_info_proc_ops, ptr noundef nonnull %call15) #19
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.end18.cleanup_crit_edge, %if.end.cleanup_crit_edge, %do.end
  %retval.0 = phi ptr [ null, %do.end ], [ null, %if.end.cleanup_crit_edge ], [ %call15, %if.end18.cleanup_crit_edge ], [ %call15, %if.then.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %blocknr) #19
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_journal_check_used_features(ptr noundef %journal, i32 noundef %compat, i32 noundef %ro, i32 noundef %incompat) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = or i32 %ro, %compat
  %1 = or i32 %0, %incompat
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %j_format_version = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 6
  %3 = ptrtoint ptr %j_format_version to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %j_format_version, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %land.lhs.true4, label %if.end.if.end7_crit_edge

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end7

land.lhs.true4:                                   ; preds = %if.end
  %call = tail call fastcc i32 @journal_get_superblock(ptr noundef %journal)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp5.not = icmp eq i32 %call, 0
  br i1 %cmp5.not, label %if.end7thread-pre-split, label %land.lhs.true4.cleanup_crit_edge

land.lhs.true4.cleanup_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end7thread-pre-split:                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #21
  %5 = ptrtoint ptr %j_format_version to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pr = load i32, ptr %j_format_version, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.end7thread-pre-split, %if.end.if.end7_crit_edge
  %6 = phi i32 [ %.pr, %if.end7thread-pre-split ], [ %4, %if.end.if.end7_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %cmp9 = icmp eq i32 %6, 1
  br i1 %cmp9, label %if.end7.cleanup_crit_edge, label %if.end11

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end11:                                         ; preds = %if.end7
  %j_superblock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 5
  %7 = ptrtoint ptr %j_superblock to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %j_superblock, align 4
  %s_feature_compat = getelementptr inbounds %struct.journal_superblock_s, ptr %8, i32 0, i32 7
  %9 = ptrtoint ptr %s_feature_compat to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %s_feature_compat, align 4
  %and = and i32 %10, %compat
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %compat)
  %cmp12 = icmp eq i32 %and, %compat
  br i1 %cmp12, label %land.lhs.true13, label %if.end11.if.end20_crit_edge

if.end11.if.end20_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end20

land.lhs.true13:                                  ; preds = %if.end11
  %s_feature_ro_compat = getelementptr inbounds %struct.journal_superblock_s, ptr %8, i32 0, i32 9
  %11 = ptrtoint ptr %s_feature_ro_compat to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %s_feature_ro_compat, align 4
  %and14 = and i32 %12, %ro
  call void @__sanitizer_cov_trace_cmp4(i32 %and14, i32 %ro)
  %cmp15 = icmp eq i32 %and14, %ro
  br i1 %cmp15, label %land.lhs.true16, label %land.lhs.true13.if.end20_crit_edge

land.lhs.true13.if.end20_crit_edge:               ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end20

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %s_feature_incompat = getelementptr inbounds %struct.journal_superblock_s, ptr %8, i32 0, i32 8
  %13 = ptrtoint ptr %s_feature_incompat to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %s_feature_incompat, align 4
  %and17 = and i32 %14, %incompat
  call void @__sanitizer_cov_trace_cmp4(i32 %and17, i32 %incompat)
  %cmp18 = icmp eq i32 %and17, %incompat
  br i1 %cmp18, label %land.lhs.true16.cleanup_crit_edge, label %land.lhs.true16.if.end20_crit_edge

land.lhs.true16.if.end20_crit_edge:               ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end20

land.lhs.true16.cleanup_crit_edge:                ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end20:                                         ; preds = %land.lhs.true16.if.end20_crit_edge, %land.lhs.true13.if.end20_crit_edge, %if.end11.if.end20_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end20, %land.lhs.true16.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %land.lhs.true4.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end20 ], [ 1, %entry.cleanup_crit_edge ], [ 0, %land.lhs.true4.cleanup_crit_edge ], [ 0, %if.end7.cleanup_crit_edge ], [ 1, %land.lhs.true16.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @jbd2_journal_check_available_features(ptr nocapture noundef readonly %journal, i32 noundef %compat, i32 noundef %ro, i32 noundef %incompat) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ro)
  %tobool1.not = icmp eq i32 %ro, 0
  %0 = or i32 %ro, %compat
  %1 = or i32 %0, %incompat
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end:                                           ; preds = %entry
  %j_format_version = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 6
  %3 = ptrtoint ptr %j_format_version to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %j_format_version, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %4)
  %cmp.not = icmp eq i32 %4, 2
  br i1 %cmp.not, label %if.end5, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %compat)
  %5 = icmp ult i32 %compat, 2
  %or.cond22 = and i1 %5, %tobool1.not
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %incompat)
  %6 = icmp ult i32 %incompat, 64
  %or.cond23 = and i1 %or.cond22, %6
  %spec.select = zext i1 %or.cond23 to i32
  br label %return

return:                                           ; preds = %if.end5, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ 1, %entry.return_crit_edge ], [ 0, %if.end.return_crit_edge ], [ %spec.select, %if.end5 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_journal_set_features(ptr noundef %journal, i32 noundef %compat, i32 noundef %ro, i32 noundef %incompat) #0 align 64 {
entry:
  %desc.i = alloca %struct.anon.130, align 8
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = or i32 %ro, %compat
  %1 = or i32 %0, %incompat
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %entry.cleanup_crit_edge, label %if.end.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %j_format_version.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 6
  %3 = ptrtoint ptr %j_format_version.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %j_format_version.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp.i = icmp eq i32 %4, 0
  br i1 %cmp.i, label %land.lhs.true4.i, label %if.end.i.if.end7.i_crit_edge

if.end.i.if.end7.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end7.i

land.lhs.true4.i:                                 ; preds = %if.end.i
  %call.i = tail call fastcc i32 @journal_get_superblock(ptr noundef %journal) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp5.not.i = icmp eq i32 %call.i, 0
  br i1 %cmp5.not.i, label %if.end7thread-pre-split.i, label %land.lhs.true4.i.if.end.i114_crit_edge

land.lhs.true4.i.if.end.i114_crit_edge:           ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i114

if.end7thread-pre-split.i:                        ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #21
  %5 = ptrtoint ptr %j_format_version.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pr.i = load i32, ptr %j_format_version.i, align 8
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.end7thread-pre-split.i, %if.end.i.if.end7.i_crit_edge
  %6 = phi i32 [ %.pr.i, %if.end7thread-pre-split.i ], [ %4, %if.end.i.if.end7.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %cmp9.i = icmp eq i32 %6, 1
  br i1 %cmp9.i, label %if.end7.i.if.end.i114_crit_edge, label %if.end11.i

if.end7.i.if.end.i114_crit_edge:                  ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i114

if.end11.i:                                       ; preds = %if.end7.i
  %j_superblock.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 5
  %7 = ptrtoint ptr %j_superblock.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %j_superblock.i, align 4
  %s_feature_compat.i = getelementptr inbounds %struct.journal_superblock_s, ptr %8, i32 0, i32 7
  %9 = ptrtoint ptr %s_feature_compat.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %s_feature_compat.i, align 4
  %and.i = and i32 %10, %compat
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i, i32 %compat)
  %cmp12.i = icmp eq i32 %and.i, %compat
  br i1 %cmp12.i, label %land.lhs.true13.i, label %if.end11.i.if.end.i114_crit_edge

if.end11.i.if.end.i114_crit_edge:                 ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i114

land.lhs.true13.i:                                ; preds = %if.end11.i
  %s_feature_ro_compat.i = getelementptr inbounds %struct.journal_superblock_s, ptr %8, i32 0, i32 9
  %11 = ptrtoint ptr %s_feature_ro_compat.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %s_feature_ro_compat.i, align 4
  %and14.i = and i32 %12, %ro
  call void @__sanitizer_cov_trace_cmp4(i32 %and14.i, i32 %ro)
  %cmp15.i = icmp eq i32 %and14.i, %ro
  br i1 %cmp15.i, label %land.lhs.true16.i, label %land.lhs.true13.i.if.end.i114_crit_edge

land.lhs.true13.i.if.end.i114_crit_edge:          ; preds = %land.lhs.true13.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i114

land.lhs.true16.i:                                ; preds = %land.lhs.true13.i
  %s_feature_incompat.i = getelementptr inbounds %struct.journal_superblock_s, ptr %8, i32 0, i32 8
  %13 = ptrtoint ptr %s_feature_incompat.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %s_feature_incompat.i, align 4
  %and17.i = and i32 %14, %incompat
  call void @__sanitizer_cov_trace_cmp4(i32 %and17.i, i32 %incompat)
  %cmp18.i = icmp eq i32 %and17.i, %incompat
  br i1 %cmp18.i, label %land.lhs.true16.i.cleanup_crit_edge, label %land.lhs.true16.i.if.end.i114_crit_edge

land.lhs.true16.i.if.end.i114_crit_edge:          ; preds = %land.lhs.true16.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i114

land.lhs.true16.i.cleanup_crit_edge:              ; preds = %land.lhs.true16.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end.i114:                                      ; preds = %land.lhs.true16.i.if.end.i114_crit_edge, %land.lhs.true13.i.if.end.i114_crit_edge, %if.end11.i.if.end.i114_crit_edge, %if.end7.i.if.end.i114_crit_edge, %land.lhs.true4.i.if.end.i114_crit_edge
  %15 = ptrtoint ptr %j_format_version.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %j_format_version.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %16)
  %cmp.not.i = icmp eq i32 %16, 2
  br i1 %cmp.not.i, label %jbd2_journal_check_available_features.exit, label %if.end.i114.cleanup_crit_edge

if.end.i114.cleanup_crit_edge:                    ; preds = %if.end.i114
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

jbd2_journal_check_available_features.exit:       ; preds = %if.end.i114
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ro)
  %tobool1.not.i = icmp eq i32 %ro, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %compat)
  %17 = icmp ult i32 %compat, 2
  %or.cond22.i = and i1 %17, %tobool1.not.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %incompat)
  %18 = icmp ult i32 %incompat, 64
  %or.cond23.i = and i1 %or.cond22.i, %18
  br i1 %or.cond23.i, label %if.end4, label %jbd2_journal_check_available_features.exit.cleanup_crit_edge

jbd2_journal_check_available_features.exit.cleanup_crit_edge: ; preds = %jbd2_journal_check_available_features.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end4:                                          ; preds = %jbd2_journal_check_available_features.exit
  %and = and i32 %incompat, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool5.not = icmp eq i32 %and, 0
  %and7 = and i32 %incompat, -25
  %or = or i32 %and7, 16
  %incompat.addr.0 = select i1 %tobool5.not, i32 %incompat, i32 %or
  %and9 = and i32 %incompat.addr.0, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9)
  %tobool10.not = icmp eq i32 %and9, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %compat)
  %tobool12.not = icmp eq i32 %compat, 0
  %or.cond = or i1 %tobool12.not, %tobool10.not
  %and14 = and i32 %compat, -2
  %compat.addr.0 = select i1 %or.cond, i32 %compat, i32 %and14
  tail call void (i32, ptr, ptr, i32, ptr, ...) @__jbd2_debug(i32 noundef 1, ptr noundef nonnull @.str.2, ptr noundef nonnull @__func__.jbd2_journal_set_features, i32 noundef 2341, ptr noundef nonnull @.str.25, i32 noundef %compat.addr.0, i32 noundef 0, i32 noundef %incompat.addr.0)
  %j_superblock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 5
  %19 = ptrtoint ptr %j_superblock to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %j_superblock, align 4
  %and16 = and i32 %incompat.addr.0, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and16)
  %tobool17.not = icmp eq i32 %and16, 0
  br i1 %tobool17.not, label %if.end4.if.end24_crit_edge, label %if.then18

if.end4.if.end24_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end24

if.then18:                                        ; preds = %if.end4
  %s_num_fc_blks.i.i = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 17
  %21 = ptrtoint ptr %s_num_fc_blks.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %s_num_fc_blks.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not.i.i = icmp eq i32 %22, 0
  %spec.select.i.i = select i1 %tobool.not.i.i, i32 256, i32 %22
  %conv.i = sext i32 %spec.select.i.i to i64
  %j_last.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 28
  %23 = ptrtoint ptr %j_last.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %j_last.i, align 4
  %conv1.i = zext i32 %24 to i64
  %sub.i = sub nsw i64 %conv1.i, %conv.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 1024, i64 %sub.i)
  %cmp.i117 = icmp ult i64 %sub.i, 1024
  br i1 %cmp.i117, label %if.then18.do.end_crit_edge, label %if.end.i118

if.then18.do.end_crit_edge:                       ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end

if.end.i118:                                      ; preds = %if.then18
  %j_fc_wbuf.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 55
  %25 = ptrtoint ptr %j_fc_wbuf.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %j_fc_wbuf.i, align 8
  %cmp3.not.i = icmp eq ptr %26, null
  br i1 %cmp3.not.i, label %if.end.i118.if.end18.i_crit_edge, label %do.end.i, !prof !788

if.end.i118.if.end18.i_crit_edge:                 ; preds = %if.end.i118
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end18.i

do.end.i:                                         ; preds = %if.end.i118
  call void @__sanitizer_cov_trace_pc() #21
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2284, i32 noundef 9, ptr noundef null) #19
  br label %if.end18.i

if.end18.i:                                       ; preds = %do.end.i, %if.end.i118.if.end18.i_crit_edge
  %27 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %spec.select.i.i, i32 4) #19
  %28 = extractvalue { i32, i1 } %27, 1
  br i1 %28, label %kmalloc_array.exit.thread.i, label %if.end7.i.i, !prof !789

kmalloc_array.exit.thread.i:                      ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #21
  %29 = ptrtoint ptr %j_fc_wbuf.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr null, ptr %j_fc_wbuf.i, align 8
  br label %do.end

if.end7.i.i:                                      ; preds = %if.end18.i
  %30 = extractvalue { i32, i1 } %27, 0
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %30, i32 noundef 3264) #23
  %31 = ptrtoint ptr %j_fc_wbuf.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %call8.i.i, ptr %j_fc_wbuf.i, align 8
  %tobool29.not.i = icmp eq ptr %call8.i.i, null
  br i1 %tobool29.not.i, label %if.end7.i.i.do.end_crit_edge, label %jbd2_journal_initialize_fast_commit.exit

if.end7.i.i.do.end_crit_edge:                     ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end

jbd2_journal_initialize_fast_commit.exit:         ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %j_fc_wbufsize.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 57
  %32 = ptrtoint ptr %j_fc_wbufsize.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %spec.select.i.i, ptr %j_fc_wbufsize.i, align 8
  %33 = ptrtoint ptr %j_last.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %j_last.i, align 4
  %j_fc_last.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 31
  %35 = ptrtoint ptr %j_fc_last.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %j_fc_last.i, align 8
  %sub36.i = sub i32 %34, %spec.select.i.i
  store i32 %sub36.i, ptr %j_last.i, align 4
  %add.i = add i32 %sub36.i, 1
  %j_fc_first.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 29
  %36 = ptrtoint ptr %j_fc_first.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %add.i, ptr %j_fc_first.i, align 8
  %j_fc_off.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 30
  %37 = ptrtoint ptr %j_fc_off.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 0, ptr %j_fc_off.i, align 4
  %j_first.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 27
  %38 = ptrtoint ptr %j_first.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %j_first.i, align 8
  %sub41.i = sub i32 %sub36.i, %39
  %j_free.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 26
  %40 = ptrtoint ptr %j_free.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %sub41.i, ptr %j_free.i, align 4
  %j_total_len.i.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 37
  %41 = ptrtoint ptr %j_total_len.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %j_total_len.i.i, align 4
  %sub.i.i = sub i32 %42, %spec.select.i.i
  %div2.i.i = lshr i32 %sub.i.i, 2
  %j_max_transaction_buffers.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 47
  %43 = ptrtoint ptr %j_max_transaction_buffers.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %div2.i.i, ptr %j_max_transaction_buffers.i, align 8
  br label %if.end24

do.end:                                           ; preds = %if.end7.i.i.do.end_crit_edge, %kmalloc_array.exit.thread.i, %if.then18.do.end_crit_edge
  %call22 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.26) #22
  br label %cleanup

if.end24:                                         ; preds = %jbd2_journal_initialize_fast_commit.exit, %if.end4.if.end24_crit_edge
  %j_chksum_driver = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 70
  %44 = ptrtoint ptr %j_chksum_driver to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %j_chksum_driver, align 8
  %cmp = icmp ne ptr %45, null
  %brmerge = or i1 %tobool10.not, %cmp
  br i1 %brmerge, label %if.end24.if.end45_crit_edge, label %land.lhs.true28

if.end24.if.end45_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end45

land.lhs.true28:                                  ; preds = %if.end24
  %s_feature_incompat = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 8
  %46 = ptrtoint ptr %s_feature_incompat to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %s_feature_incompat, align 4
  %and29 = and i32 %47, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29)
  %tobool30.not = icmp eq i32 %and29, 0
  br i1 %tobool30.not, label %if.then31, label %land.lhs.true28.if.end45_crit_edge

land.lhs.true28.if.end45_crit_edge:               ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end45

if.then31:                                        ; preds = %land.lhs.true28
  %call32 = tail call ptr @crypto_alloc_shash(ptr noundef nonnull @.str.27, i32 noundef 0, i32 noundef 0) #19
  %48 = ptrtoint ptr %j_chksum_driver to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %call32, ptr %j_chksum_driver, align 8
  %cmp.i120 = icmp ugt ptr %call32, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i120, label %do.end39, label %if.end43

do.end39:                                         ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #21
  %call41 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.29) #22
  %49 = ptrtoint ptr %j_chksum_driver to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr null, ptr %j_chksum_driver, align 8
  br label %cleanup

if.end43:                                         ; preds = %if.then31
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %desc.i) #19
  %50 = getelementptr inbounds %struct.anon.130, ptr %desc.i, i32 0, i32 1
  %51 = call ptr @memset(ptr %desc.i, i32 255, i32 16)
  %52 = ptrtoint ptr %call32 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %call32, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %53)
  %cmp.i121 = icmp ugt i32 %53, 4
  br i1 %cmp.i121, label %do.body2.i, label %do.end7.i, !prof !789

do.body2.i:                                       ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/jbd2.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1787, 0\0A.popsection", ""() #19, !srcloc !796
  unreachable

do.end7.i:                                        ; preds = %if.end43
  %s_uuid = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 10
  %54 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %call32, ptr %desc.i, align 8
  %call10.i = call i32 @crypto_shash_update(ptr noundef nonnull %desc.i, ptr noundef %s_uuid, i32 noundef 16) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool12.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool12.not.i, label %jbd2_chksum.exit, label %do.body20.i, !prof !788

do.body20.i:                                      ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #21
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/jbd2.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1793, 0\0A.popsection", ""() #19, !srcloc !797
  unreachable

jbd2_chksum.exit:                                 ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #21
  %55 = ptrtoint ptr %50 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %50, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %desc.i) #19
  %j_csum_seed = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 71
  %57 = ptrtoint ptr %j_csum_seed to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %56, ptr %j_csum_seed, align 4
  br label %if.end45

if.end45:                                         ; preds = %jbd2_chksum.exit, %land.lhs.true28.if.end45_crit_edge, %if.end24.if.end45_crit_edge
  %j_sb_buffer = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 4
  %58 = ptrtoint ptr %j_sb_buffer to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %j_sb_buffer, align 8
  call void @__might_sleep(ptr noundef nonnull @.str.104, i32 noundef 366) #19
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %59, i32 noundef 4) #19
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %59, align 4
  %and.i.i.i.i = and i32 %61, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i122 = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i122, label %trylock_buffer.exit.i, label %if.end45.if.then.i_crit_edge

if.end45.if.then.i_crit_edge:                     ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i

trylock_buffer.exit.i:                            ; preds = %if.end45
  call void @llvm.prefetch.p0(ptr %59, i32 1, i32 3, i32 1) #19
  %62 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %59, ptr %59, i32 4, ptr elementtype(i32) %59) #19, !srcloc !798
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %62, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !799
  %63 = and i32 %asmresult.i.i.i.i.i.i.i, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %63)
  %tobool.not.not.i = icmp eq i32 %63, 0
  br i1 %tobool.not.not.i, label %trylock_buffer.exit.i.lock_buffer.exit_crit_edge, label %trylock_buffer.exit.i.if.then.i_crit_edge

trylock_buffer.exit.i.if.then.i_crit_edge:        ; preds = %trylock_buffer.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i

trylock_buffer.exit.i.lock_buffer.exit_crit_edge: ; preds = %trylock_buffer.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %lock_buffer.exit

if.then.i:                                        ; preds = %trylock_buffer.exit.i.if.then.i_crit_edge, %if.end45.if.then.i_crit_edge
  call void @__lock_buffer(ptr noundef %59) #19
  br label %lock_buffer.exit

lock_buffer.exit:                                 ; preds = %if.then.i, %trylock_buffer.exit.i.lock_buffer.exit_crit_edge
  br i1 %tobool10.not, label %lock_buffer.exit.if.end54_crit_edge, label %land.lhs.true48

lock_buffer.exit.if.end54_crit_edge:              ; preds = %lock_buffer.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end54

land.lhs.true48:                                  ; preds = %lock_buffer.exit
  %s_feature_incompat49 = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 8
  %64 = ptrtoint ptr %s_feature_incompat49 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %s_feature_incompat49, align 4
  %and50 = and i32 %65, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and50)
  %tobool51.not = icmp eq i32 %and50, 0
  br i1 %tobool51.not, label %if.then52, label %land.lhs.true48.if.end54_crit_edge

land.lhs.true48.if.end54_crit_edge:               ; preds = %land.lhs.true48
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end54

if.then52:                                        ; preds = %land.lhs.true48
  call void @__sanitizer_cov_trace_pc() #21
  %s_checksum_type = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 15
  %66 = ptrtoint ptr %s_checksum_type to i32
  call void @__asan_store1_noabort(i32 %66)
  store i8 4, ptr %s_checksum_type, align 4
  %s_feature_compat = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 7
  %67 = ptrtoint ptr %s_feature_compat to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %s_feature_compat, align 4
  %and53 = and i32 %68, -2
  store i32 %and53, ptr %s_feature_compat, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.then52, %land.lhs.true48.if.end54_crit_edge, %lock_buffer.exit.if.end54_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %compat.addr.0)
  %tobool56.not = icmp eq i32 %compat.addr.0, 0
  br i1 %tobool56.not, label %if.end54.if.end64_crit_edge, label %land.lhs.true57

if.end54.if.end64_crit_edge:                      ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end64

land.lhs.true57:                                  ; preds = %if.end54
  %s_feature_compat58 = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 7
  %69 = ptrtoint ptr %s_feature_compat58 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %s_feature_compat58, align 4
  %and59 = and i32 %70, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and59)
  %tobool60.not = icmp eq i32 %and59, 0
  br i1 %tobool60.not, label %if.then61, label %land.lhs.true57.if.end64_crit_edge

land.lhs.true57.if.end64_crit_edge:               ; preds = %land.lhs.true57
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end64

if.then61:                                        ; preds = %land.lhs.true57
  call void @__sanitizer_cov_trace_pc() #21
  %s_feature_incompat62 = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 8
  %71 = ptrtoint ptr %s_feature_incompat62 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %s_feature_incompat62, align 4
  %and63 = and i32 %72, -25
  store i32 %and63, ptr %s_feature_incompat62, align 4
  br label %if.end64

if.end64:                                         ; preds = %if.then61, %land.lhs.true57.if.end64_crit_edge, %if.end54.if.end64_crit_edge
  %s_feature_compat65 = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 7
  %73 = ptrtoint ptr %s_feature_compat65 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %s_feature_compat65, align 4
  %or66 = or i32 %74, %compat.addr.0
  store i32 %or66, ptr %s_feature_compat65, align 4
  %s_feature_incompat68 = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 8
  %75 = ptrtoint ptr %s_feature_incompat68 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %s_feature_incompat68, align 4
  %or69 = or i32 %76, %incompat.addr.0
  store i32 %or69, ptr %s_feature_incompat68, align 4
  %77 = ptrtoint ptr %j_sb_buffer to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %j_sb_buffer, align 8
  call void @unlock_buffer(ptr noundef %78) #19
  %j_blocksize.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 33
  %79 = ptrtoint ptr %j_blocksize.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %j_blocksize.i, align 8
  %81 = ptrtoint ptr %j_format_version.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %j_format_version.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %82)
  %cmp.i.i = icmp sgt i32 %82, 1
  br i1 %cmp.i.i, label %jbd2_has_feature_64bit.exit.i, label %if.end64.journal_revoke_records_per_block.exit_crit_edge

if.end64.journal_revoke_records_per_block.exit_crit_edge: ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #21
  br label %journal_revoke_records_per_block.exit

jbd2_has_feature_64bit.exit.i:                    ; preds = %if.end64
  %83 = ptrtoint ptr %j_superblock to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %j_superblock, align 4
  %s_feature_incompat.i.i = getelementptr inbounds %struct.journal_superblock_s, ptr %84, i32 0, i32 8
  %85 = ptrtoint ptr %s_feature_incompat.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %s_feature_incompat.i.i, align 4
  %and.i.i = and i32 %86, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %cmp1.i.not.i = icmp eq i32 %and.i.i, 0
  %spec.select.i124 = select i1 %cmp1.i.not.i, i32 4, i32 8
  %87 = and i32 %86, 24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %87)
  %.not.i.i = icmp eq i32 %87, 0
  br i1 %.not.i.i, label %jbd2_has_feature_64bit.exit.i.journal_revoke_records_per_block.exit_crit_edge, label %land.rhs.i9.i

jbd2_has_feature_64bit.exit.i.journal_revoke_records_per_block.exit_crit_edge: ; preds = %jbd2_has_feature_64bit.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %journal_revoke_records_per_block.exit

land.rhs.i9.i:                                    ; preds = %jbd2_has_feature_64bit.exit.i
  %88 = ptrtoint ptr %j_chksum_driver to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %j_chksum_driver, align 8
  %cmp.i8.i = icmp eq ptr %89, null
  br i1 %cmp.i8.i, label %land.rhs2.i.i, label %land.rhs.i9.i.journal_revoke_records_per_block.exit_crit_edge

land.rhs.i9.i.journal_revoke_records_per_block.exit_crit_edge: ; preds = %land.rhs.i9.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %journal_revoke_records_per_block.exit

land.rhs2.i.i:                                    ; preds = %land.rhs.i9.i
  %.b43.i.i = load i1, ptr @jbd2_journal_has_csum_v2or3.__already_done, align 1
  br i1 %.b43.i.i, label %land.rhs2.i.i.journal_revoke_records_per_block.exit_crit_edge, label %if.then.i.i, !prof !788

land.rhs2.i.i.journal_revoke_records_per_block.exit_crit_edge: ; preds = %land.rhs2.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %journal_revoke_records_per_block.exit

if.then.i.i:                                      ; preds = %land.rhs2.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @jbd2_journal_has_csum_v2or3.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.105, i32 noundef 1735, i32 noundef 9, ptr noundef null) #19
  br label %journal_revoke_records_per_block.exit

journal_revoke_records_per_block.exit:            ; preds = %if.then.i.i, %land.rhs2.i.i.journal_revoke_records_per_block.exit_crit_edge, %land.rhs.i9.i.journal_revoke_records_per_block.exit_crit_edge, %jbd2_has_feature_64bit.exit.i.journal_revoke_records_per_block.exit_crit_edge, %if.end64.journal_revoke_records_per_block.exit_crit_edge
  %90 = phi i32 [ %spec.select.i124, %jbd2_has_feature_64bit.exit.i.journal_revoke_records_per_block.exit_crit_edge ], [ %spec.select.i124, %land.rhs.i9.i.journal_revoke_records_per_block.exit_crit_edge ], [ %spec.select.i124, %land.rhs2.i.i.journal_revoke_records_per_block.exit_crit_edge ], [ %spec.select.i124, %if.then.i.i ], [ 4, %if.end64.journal_revoke_records_per_block.exit_crit_edge ]
  %91 = ptrtoint ptr %j_chksum_driver to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %j_chksum_driver, align 8
  %cmp38.i.not.i = icmp eq ptr %92, null
  %space.0.v.i = select i1 %cmp38.i.not.i, i32 -16, i32 -20
  %space.0.i = add i32 %space.0.v.i, %80
  %div.i = sdiv i32 %space.0.i, %90
  %j_revoke_records_per_block = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 48
  %93 = ptrtoint ptr %j_revoke_records_per_block to i32
  call void @__asan_store4_noabort(i32 %93)
  store i32 %div.i, ptr %j_revoke_records_per_block, align 4
  br label %cleanup

cleanup:                                          ; preds = %journal_revoke_records_per_block.exit, %do.end39, %do.end, %jbd2_journal_check_available_features.exit.cleanup_crit_edge, %if.end.i114.cleanup_crit_edge, %land.lhs.true16.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %do.end ], [ 1, %journal_revoke_records_per_block.exit ], [ 0, %do.end39 ], [ 0, %jbd2_journal_check_available_features.exit.cleanup_crit_edge ], [ 1, %entry.cleanup_crit_edge ], [ 1, %land.lhs.true16.i.cleanup_crit_edge ], [ 0, %if.end.i114.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_journal_load(ptr noundef %journal) #0 align 64 {
entry:
  %__wq_entry.i.i = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call fastcc i32 @journal_get_superblock(ptr noundef %journal) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %j_superblock.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 5
  %0 = ptrtoint ptr %j_superblock.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %j_superblock.i, align 4
  %s_sequence.i = getelementptr inbounds %struct.journal_superblock_s, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %s_sequence.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %s_sequence.i, align 4
  %j_tail_sequence.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 41
  %4 = ptrtoint ptr %j_tail_sequence.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %j_tail_sequence.i, align 4
  %s_start.i = getelementptr inbounds %struct.journal_superblock_s, ptr %1, i32 0, i32 5
  %5 = ptrtoint ptr %s_start.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %s_start.i, align 4
  %j_tail.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 25
  %7 = ptrtoint ptr %j_tail.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %j_tail.i, align 8
  %s_first.i = getelementptr inbounds %struct.journal_superblock_s, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %s_first.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %s_first.i, align 4
  %j_first.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 27
  %10 = ptrtoint ptr %j_first.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %j_first.i, align 8
  %s_errno.i = getelementptr inbounds %struct.journal_superblock_s, ptr %1, i32 0, i32 6
  %11 = ptrtoint ptr %s_errno.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %s_errno.i, align 4
  %j_errno.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 2
  %13 = ptrtoint ptr %j_errno.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %j_errno.i, align 8
  %s_maxlen.i = getelementptr inbounds %struct.journal_superblock_s, ptr %1, i32 0, i32 2
  %14 = ptrtoint ptr %s_maxlen.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %s_maxlen.i, align 4
  %j_last.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 28
  %16 = ptrtoint ptr %j_last.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %j_last.i, align 4
  %j_format_version.i.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 6
  %17 = ptrtoint ptr %j_format_version.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %j_format_version.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %18)
  %cmp.i.i = icmp sgt i32 %18, 1
  br i1 %cmp.i.i, label %jbd2_has_feature_fast_commit.exit.i, label %if.end.thread

if.end.thread:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  %19 = ptrtoint ptr %j_superblock.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %j_superblock.i, align 4
  br label %if.end8

jbd2_has_feature_fast_commit.exit.i:              ; preds = %if.end.i
  %s_feature_incompat.i.i = getelementptr inbounds %struct.journal_superblock_s, ptr %1, i32 0, i32 8
  %21 = ptrtoint ptr %s_feature_incompat.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %s_feature_incompat.i.i, align 4
  %and.i.i = and i32 %22, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %cmp1.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %cmp1.i.not.i, label %jbd2_has_feature_fast_commit.exit.i.if.end_crit_edge, label %if.then2.i

jbd2_has_feature_fast_commit.exit.i.if.end_crit_edge: ; preds = %jbd2_has_feature_fast_commit.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.then2.i:                                       ; preds = %jbd2_has_feature_fast_commit.exit.i
  %23 = ptrtoint ptr %s_maxlen.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %s_maxlen.i, align 4
  %j_fc_last.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 31
  %25 = ptrtoint ptr %j_fc_last.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %j_fc_last.i, align 8
  %s_num_fc_blks.i.i = getelementptr inbounds %struct.journal_superblock_s, ptr %1, i32 0, i32 17
  %26 = ptrtoint ptr %s_num_fc_blks.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %s_num_fc_blks.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.not.i.i = icmp eq i32 %27, 0
  %spec.select.i.i = select i1 %tobool.not.i.i, i32 256, i32 %27
  %sub.i = sub i32 %15, %spec.select.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1023, i32 %sub.i)
  %cmp.i = icmp ugt i32 %sub.i, 1023
  br i1 %cmp.i, label %if.then6.i, label %if.then2.i.if.end10.i_crit_edge

if.then2.i.if.end10.i_crit_edge:                  ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end10.i

if.then6.i:                                       ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  %sub8.i = sub i32 %24, %spec.select.i.i
  %28 = ptrtoint ptr %j_last.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %sub8.i, ptr %j_last.i, align 4
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then6.i, %if.then2.i.if.end10.i_crit_edge
  %29 = ptrtoint ptr %j_last.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %j_last.i, align 4
  %add.i = add i32 %30, 1
  %j_fc_first.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 29
  %31 = ptrtoint ptr %j_fc_first.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %add.i, ptr %j_fc_first.i, align 8
  %j_fc_off.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 30
  %32 = ptrtoint ptr %j_fc_off.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %j_fc_off.i, align 4
  br label %if.end

if.end:                                           ; preds = %if.end10.i, %jbd2_has_feature_fast_commit.exit.i.if.end_crit_edge
  %33 = ptrtoint ptr %j_format_version.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %.pr = load i32, ptr %j_format_version.i.i, align 8
  %34 = ptrtoint ptr %j_superblock.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %j_superblock.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %.pr)
  %cmp = icmp sgt i32 %.pr, 1
  br i1 %cmp, label %if.then1, label %if.end.if.end8_crit_edge

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end8

if.then1:                                         ; preds = %if.end
  %s_feature_ro_compat = getelementptr inbounds %struct.journal_superblock_s, ptr %35, i32 0, i32 9
  %36 = ptrtoint ptr %s_feature_ro_compat to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %s_feature_ro_compat, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool2.not = icmp eq i32 %37, 0
  br i1 %tobool2.not, label %lor.lhs.false, label %if.then1.do.end_crit_edge

if.then1.do.end_crit_edge:                        ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end

lor.lhs.false:                                    ; preds = %if.then1
  %s_feature_incompat = getelementptr inbounds %struct.journal_superblock_s, ptr %35, i32 0, i32 8
  %38 = ptrtoint ptr %s_feature_incompat to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %s_feature_incompat, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %39)
  %tobool4.not = icmp ult i32 %39, 64
  br i1 %tobool4.not, label %lor.lhs.false.if.end8_crit_edge, label %lor.lhs.false.do.end_crit_edge

lor.lhs.false.do.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end

lor.lhs.false.if.end8_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end8

do.end:                                           ; preds = %lor.lhs.false.do.end_crit_edge, %if.then1.do.end_crit_edge
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.17) #22
  br label %cleanup

if.end8:                                          ; preds = %lor.lhs.false.if.end8_crit_edge, %if.end.if.end8_crit_edge, %if.end.thread
  %40 = phi ptr [ %20, %if.end.thread ], [ %35, %lor.lhs.false.if.end8_crit_edge ], [ %35, %if.end.if.end8_crit_edge ]
  %s_blocksize = getelementptr inbounds %struct.journal_superblock_s, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %s_blocksize to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %s_blocksize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %42)
  %cmp.i.i53 = icmp ugt i32 %42, 1
  br i1 %cmp.i.i53, label %cond.end18.i, label %if.end8.if.then30.i_crit_edge

if.end8.if.then30.i_crit_edge:                    ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then30.i

cond.end18.i:                                     ; preds = %if.end8
  %sub.i60.i = add i32 %42, -1
  %43 = tail call i32 @llvm.ctlz.i32(i32 %sub.i60.i, i1 true) #19, !range !800
  %sub6.i.i = xor i32 %43, 31
  %sub20.i = sub nsw i32 22, %43
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %42)
  %cmp21.i = icmp eq i32 %42, 4096
  br i1 %cmp21.i, label %cond.end18.i.if.end12_crit_edge, label %if.end.i54

cond.end18.i.if.end12_crit_edge:                  ; preds = %cond.end18.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end12

if.end.i54:                                       ; preds = %cond.end18.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %sub6.i.i)
  %cmp23.i = icmp ugt i32 %sub6.i.i, 16
  br i1 %cmp23.i, label %if.end.i54.cleanup_crit_edge, label %if.end26.i

if.end.i54.cleanup_crit_edge:                     ; preds = %if.end.i54
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end26.i:                                       ; preds = %if.end.i54
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %sub6.i.i)
  %cmp27.i = icmp ult i32 %sub6.i.i, 9
  br i1 %cmp27.i, label %if.end26.i.if.then30.i_crit_edge, label %if.end26.i.if.end31.i_crit_edge, !prof !789

if.end26.i.if.end31.i_crit_edge:                  ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end31.i

if.end26.i.if.then30.i_crit_edge:                 ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then30.i

if.then30.i:                                      ; preds = %if.end26.i.if.then30.i_crit_edge, %if.end8.if.then30.i_crit_edge
  br label %if.end31.i

if.end31.i:                                       ; preds = %if.then30.i, %if.end26.i.if.end31.i_crit_edge
  %i.0.i = phi i32 [ 0, %if.then30.i ], [ %sub20.i, %if.end26.i.if.end31.i_crit_edge ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @jbd2_journal_create_slab.jbd2_slab_create_mutex, i32 noundef 0) #19
  %arrayidx.i = getelementptr [8 x ptr], ptr @jbd2_slab, i32 0, i32 %i.0.i
  %44 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %arrayidx.i, align 4
  %tobool32.not.i = icmp eq ptr %45, null
  br i1 %tobool32.not.i, label %if.end34.i, label %if.then33.i

if.then33.i:                                      ; preds = %if.end31.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @mutex_unlock(ptr noundef nonnull @jbd2_journal_create_slab.jbd2_slab_create_mutex) #19
  br label %if.end12

if.end34.i:                                       ; preds = %if.end31.i
  %shl.i = shl i32 1024, %i.0.i
  %arrayidx36.i = getelementptr [8 x ptr], ptr @jbd2_slab_names, i32 0, i32 %i.0.i
  %46 = ptrtoint ptr %arrayidx36.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %arrayidx36.i, align 4
  %call37.i = tail call ptr @kmem_cache_create(ptr noundef %47, i32 noundef %shl.i, i32 noundef %shl.i, i32 noundef 0, ptr noundef null) #19
  %48 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %call37.i, ptr %arrayidx.i, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @jbd2_journal_create_slab.jbd2_slab_create_mutex) #19
  %49 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %arrayidx.i, align 4
  %tobool40.not.i = icmp eq ptr %50, null
  br i1 %tobool40.not.i, label %do.end.i, label %if.end34.i.if.end12_crit_edge

if.end34.i.if.end12_crit_edge:                    ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end12

do.end.i:                                         ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #21
  %call42.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.203) #22
  br label %cleanup

if.end12:                                         ; preds = %if.end34.i.if.end12_crit_edge, %if.then33.i, %cond.end18.i.if.end12_crit_edge
  %call13 = tail call i32 @jbd2_journal_recover(ptr noundef %journal) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.end16, label %if.end12.do.end34_crit_edge

if.end12.do.end34_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end34

if.end16:                                         ; preds = %if.end12
  %j_failed_commit = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 68
  %51 = ptrtoint ptr %j_failed_commit to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %j_failed_commit, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool17.not = icmp eq i32 %52, 0
  br i1 %tobool17.not, label %if.end25, label %do.end21

do.end21:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  %j_devname = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 35
  %call24 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.20, i32 noundef %52, ptr noundef %j_devname) #22
  br label %cleanup

if.end25:                                         ; preds = %if.end16
  %53 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %journal, align 8
  %and26 = and i32 %54, -3
  store i32 %and26, ptr %journal, align 8
  %55 = ptrtoint ptr %j_superblock.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %j_superblock.i, align 4
  %s_first.i56 = getelementptr inbounds %struct.journal_superblock_s, ptr %56, i32 0, i32 3
  %57 = ptrtoint ptr %s_first.i56 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %s_first.i56, align 4
  %conv.i = zext i32 %58 to i64
  %s_maxlen.i57 = getelementptr inbounds %struct.journal_superblock_s, ptr %56, i32 0, i32 2
  %59 = ptrtoint ptr %s_maxlen.i57 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %s_maxlen.i57, align 4
  %conv1.i = zext i32 %60 to i64
  %add.i58 = add nuw nsw i64 %conv.i, 1024
  %add2.i = add nuw nsw i64 %conv1.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i58, i64 %add2.i)
  %cmp.i59 = icmp ugt i64 %add.i58, %add2.i
  br i1 %cmp.i59, label %do.end.i61, label %if.end.i70

do.end.i61:                                       ; preds = %if.end25
  %call.i60 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.155, i64 noundef %conv.i, i64 noundef %conv1.i) #22
  %j_sb_buffer.i.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 4
  %61 = ptrtoint ptr %j_sb_buffer.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %j_sb_buffer.i.i, align 8
  %tobool.not.i.i.i = icmp eq ptr %62, null
  br i1 %tobool.not.i.i.i, label %do.end.i61.journal_reset.exit.thread77_crit_edge, label %if.then.i.i.i

do.end.i61.journal_reset.exit.thread77_crit_edge: ; preds = %do.end.i61
  call void @__sanitizer_cov_trace_pc() #21
  br label %journal_reset.exit.thread77

if.then.i.i.i:                                    ; preds = %do.end.i61
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @__brelse(ptr noundef nonnull %62) #19
  br label %journal_reset.exit.thread77

journal_reset.exit.thread77:                      ; preds = %if.then.i.i.i, %do.end.i61.journal_reset.exit.thread77_crit_edge
  %63 = ptrtoint ptr %j_sb_buffer.i.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr null, ptr %j_sb_buffer.i.i, align 8
  br label %do.end34

if.end.i70:                                       ; preds = %if.end25
  %64 = ptrtoint ptr %j_first.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %58, ptr %j_first.i, align 8
  %65 = ptrtoint ptr %j_last.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %60, ptr %j_last.i, align 4
  %j_head.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 24
  %66 = ptrtoint ptr %j_head.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %58, ptr %j_head.i, align 4
  %67 = ptrtoint ptr %j_tail.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %58, ptr %j_tail.i, align 8
  %sub.i65 = sub i32 %60, %58
  %j_free.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 26
  %68 = ptrtoint ptr %j_free.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %sub.i65, ptr %j_free.i, align 4
  %j_transaction_sequence.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 42
  %69 = ptrtoint ptr %j_transaction_sequence.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %j_transaction_sequence.i, align 8
  %71 = ptrtoint ptr %j_tail_sequence.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %70, ptr %j_tail_sequence.i, align 4
  %sub11.i = add i32 %70, -1
  %j_commit_sequence.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 43
  %72 = ptrtoint ptr %j_commit_sequence.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %sub11.i, ptr %j_commit_sequence.i, align 4
  %j_commit_request.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 44
  %73 = ptrtoint ptr %j_commit_request.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %sub11.i, ptr %j_commit_request.i, align 8
  %j_total_len.i.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 37
  %74 = ptrtoint ptr %j_total_len.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %j_total_len.i.i, align 4
  %j_fc_wbufsize.i.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 57
  %76 = ptrtoint ptr %j_fc_wbufsize.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %j_fc_wbufsize.i.i, align 8
  %sub.i.i = sub i32 %75, %77
  %div2.i.i = lshr i32 %sub.i.i, 2
  %j_max_transaction_buffers.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 47
  %78 = ptrtoint ptr %j_max_transaction_buffers.i to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %div2.i.i, ptr %j_max_transaction_buffers.i, align 8
  %s_feature_incompat.i.i67 = getelementptr inbounds %struct.journal_superblock_s, ptr %56, i32 0, i32 8
  %79 = ptrtoint ptr %s_feature_incompat.i.i67 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %s_feature_incompat.i.i67, align 4
  %and.i.i68 = and i32 %80, -33
  store i32 %and.i.i68, ptr %s_feature_incompat.i.i67, align 4
  %s_start.i69 = getelementptr inbounds %struct.journal_superblock_s, ptr %56, i32 0, i32 5
  %81 = ptrtoint ptr %s_start.i69 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %s_start.i69, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %82)
  %cmp14.i = icmp eq i32 %82, 0
  br i1 %cmp14.i, label %if.then16.i, label %if.else.i

if.then16.i:                                      ; preds = %if.end.i70
  call void @__sanitizer_cov_trace_pc() #21
  %83 = ptrtoint ptr %j_tail.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %j_tail.i, align 8
  %85 = ptrtoint ptr %j_tail_sequence.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %j_tail_sequence.i, align 4
  %87 = ptrtoint ptr %j_errno.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %j_errno.i, align 8
  tail call void (i32, ptr, ptr, i32, ptr, ...) @__jbd2_debug(i32 noundef 1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.156, i32 noundef 1581, ptr noundef nonnull @.str.157, i32 noundef %84, i32 noundef %86, i32 noundef %88) #19
  %89 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %journal, align 8
  %or.i = or i32 %90, 8
  store i32 %or.i, ptr %journal, align 8
  br label %if.end23.i

if.else.i:                                        ; preds = %if.end.i70
  call void @__sanitizer_cov_trace_pc() #21
  %j_checkpoint_mutex.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 19
  tail call void @mutex_lock_io_nested(ptr noundef %j_checkpoint_mutex.i, i32 noundef 0) #19
  %91 = ptrtoint ptr %j_tail_sequence.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %j_tail_sequence.i, align 4
  %93 = ptrtoint ptr %j_tail.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %j_tail.i, align 8
  %call21.i = tail call i32 @jbd2_journal_update_sb_log_tail(ptr noundef %journal, i32 noundef %92, i32 noundef %94, i32 noundef 133120) #19
  tail call void @mutex_unlock(ptr noundef %j_checkpoint_mutex.i) #19
  br label %if.end23.i

if.end23.i:                                       ; preds = %if.else.i, %if.then16.i
  %j_devname.i.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 35
  %call.i.i = tail call ptr (ptr, ptr, i32, ptr, ...) @kthread_create_on_node(ptr noundef nonnull @kjournald2, ptr noundef %journal, i32 noundef -1, ptr noundef nonnull @.str.158, ptr noundef %j_devname.i.i) #19
  %cmp.i.i.i = icmp ugt ptr %call.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %if.end23.i.do.end34_crit_edge, label %do.body7.i.i

if.end23.i.do.end34_crit_edge:                    ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end34

do.body7.i.i:                                     ; preds = %if.end23.i
  %call2.i.i = tail call i32 @wake_up_process(ptr noundef %call.i.i) #19
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 285) #19
  %j_task.i.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 46
  %95 = ptrtoint ptr %j_task.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %j_task.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %96, null
  br i1 %cmp.not.i.i, label %if.end12.i.i, label %do.body7.i.i.if.end30_crit_edge

do.body7.i.i.if.end30_crit_edge:                  ; preds = %do.body7.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end30

if.end12.i.i:                                     ; preds = %do.body7.i.i
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry.i.i) #19
  %97 = call ptr @memset(ptr %__wq_entry.i.i, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry.i.i, i32 noundef 0) #19
  %j_wait_done_commit.i.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 14
  %call1334.i.i = call i32 @prepare_to_wait_event(ptr noundef %j_wait_done_commit.i.i, ptr noundef nonnull %__wq_entry.i.i, i32 noundef 2) #19
  %98 = ptrtoint ptr %j_task.i.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %j_task.i.i, align 4
  %cmp15.not35.i.i = icmp eq ptr %99, null
  br i1 %cmp15.not35.i.i, label %if.end12.i.i.cleanup.i.i_crit_edge, label %if.end12.i.i.for.end.i.i_crit_edge

if.end12.i.i.for.end.i.i_crit_edge:               ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end.i.i

if.end12.i.i.cleanup.i.i_crit_edge:               ; preds = %if.end12.i.i
  br label %cleanup.i.i

cleanup.i.i:                                      ; preds = %cleanup.i.i.cleanup.i.i_crit_edge, %if.end12.i.i.cleanup.i.i_crit_edge
  call void @schedule() #19
  %call13.i.i = call i32 @prepare_to_wait_event(ptr noundef %j_wait_done_commit.i.i, ptr noundef nonnull %__wq_entry.i.i, i32 noundef 2) #19
  %100 = ptrtoint ptr %j_task.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %j_task.i.i, align 4
  %cmp15.not.i.i = icmp eq ptr %101, null
  br i1 %cmp15.not.i.i, label %cleanup.i.i.cleanup.i.i_crit_edge, label %cleanup.i.i.for.end.i.i_crit_edge

cleanup.i.i.for.end.i.i_crit_edge:                ; preds = %cleanup.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end.i.i

cleanup.i.i.cleanup.i.i_crit_edge:                ; preds = %cleanup.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.i.i

for.end.i.i:                                      ; preds = %cleanup.i.i.for.end.i.i_crit_edge, %if.end12.i.i.for.end.i.i_crit_edge
  call void @finish_wait(ptr noundef %j_wait_done_commit.i.i, ptr noundef nonnull %__wq_entry.i.i) #19
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry.i.i) #19
  br label %if.end30

if.end30:                                         ; preds = %for.end.i.i, %do.body7.i.i.if.end30_crit_edge
  %102 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %journal, align 8
  %or = or i32 %103, 16
  store i32 %or, ptr %journal, align 8
  br label %cleanup

do.end34:                                         ; preds = %if.end23.i.do.end34_crit_edge, %journal_reset.exit.thread77, %if.end12.do.end34_crit_edge
  %call36 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.23) #22
  br label %cleanup

cleanup:                                          ; preds = %do.end34, %if.end30, %do.end21, %do.end.i, %if.end.i54.cleanup_crit_edge, %do.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %do.end ], [ -5, %do.end34 ], [ -117, %do.end21 ], [ 0, %if.end30 ], [ %call.i, %entry.cleanup_crit_edge ], [ -12, %do.end.i ], [ -22, %if.end.i54.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_journal_destroy(ptr noundef %journal) #0 align 64 {
entry:
  %__wq_entry.i = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_state_lock.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_write_lock(ptr noundef %j_state_lock.i) #19
  %0 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %journal, align 8
  %or.i = or i32 %1, 1
  store i32 %or.i, ptr %journal, align 8
  %j_task.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 46
  %2 = ptrtoint ptr %j_task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %j_task.i, align 4
  %tobool.not28.i = icmp eq ptr %3, null
  br i1 %tobool.not28.i, label %entry.journal_kill_thread.exit_crit_edge, label %while.body.lr.ph.i

entry.journal_kill_thread.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %journal_kill_thread.exit

while.body.lr.ph.i:                               ; preds = %entry
  %j_wait_commit.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 15
  %j_wait_done_commit.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 14
  br label %while.body.i

while.body.i:                                     ; preds = %do.end11.i.while.body.i_crit_edge, %while.body.lr.ph.i
  call void @_raw_write_unlock(ptr noundef %j_state_lock.i) #19
  call void @__wake_up(ptr noundef %j_wait_commit.i, i32 noundef 3, i32 noundef 1, ptr noundef null) #19
  call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 297) #19
  %4 = ptrtoint ptr %j_task.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %j_task.i, align 4
  %cmp.i = icmp eq ptr %5, null
  br i1 %cmp.i, label %while.body.i.do.end11.i_crit_edge, label %if.end.i

while.body.i.do.end11.i_crit_edge:                ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end11.i

if.end.i:                                         ; preds = %while.body.i
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry.i) #19
  %6 = call ptr @memset(ptr %__wq_entry.i, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry.i, i32 noundef 0) #19
  %call26.i = call i32 @prepare_to_wait_event(ptr noundef %j_wait_done_commit.i, ptr noundef nonnull %__wq_entry.i, i32 noundef 2) #19
  %7 = ptrtoint ptr %j_task.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %j_task.i, align 4
  %cmp727.i = icmp eq ptr %8, null
  br i1 %cmp727.i, label %if.end.i.for.end.i_crit_edge, label %if.end.i.cleanup.i_crit_edge

if.end.i.cleanup.i_crit_edge:                     ; preds = %if.end.i
  br label %cleanup.i

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end.i

cleanup.i:                                        ; preds = %cleanup.i.cleanup.i_crit_edge, %if.end.i.cleanup.i_crit_edge
  call void @schedule() #19
  %call.i = call i32 @prepare_to_wait_event(ptr noundef %j_wait_done_commit.i, ptr noundef nonnull %__wq_entry.i, i32 noundef 2) #19
  %9 = ptrtoint ptr %j_task.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %j_task.i, align 4
  %cmp7.i = icmp eq ptr %10, null
  br i1 %cmp7.i, label %cleanup.i.for.end.i_crit_edge, label %cleanup.i.cleanup.i_crit_edge

cleanup.i.cleanup.i_crit_edge:                    ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.i

cleanup.i.for.end.i_crit_edge:                    ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end.i

for.end.i:                                        ; preds = %cleanup.i.for.end.i_crit_edge, %if.end.i.for.end.i_crit_edge
  call void @finish_wait(ptr noundef %j_wait_done_commit.i, ptr noundef nonnull %__wq_entry.i) #19
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry.i) #19
  br label %do.end11.i

do.end11.i:                                       ; preds = %for.end.i, %while.body.i.do.end11.i_crit_edge
  call void @_raw_write_lock(ptr noundef %j_state_lock.i) #19
  %11 = ptrtoint ptr %j_task.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %j_task.i, align 4
  %tobool.not.i = icmp eq ptr %12, null
  br i1 %tobool.not.i, label %do.end11.i.journal_kill_thread.exit_crit_edge, label %do.end11.i.while.body.i_crit_edge

do.end11.i.while.body.i_crit_edge:                ; preds = %do.end11.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %while.body.i

do.end11.i.journal_kill_thread.exit_crit_edge:    ; preds = %do.end11.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %journal_kill_thread.exit

journal_kill_thread.exit:                         ; preds = %do.end11.i.journal_kill_thread.exit_crit_edge, %entry.journal_kill_thread.exit_crit_edge
  call void @_raw_write_unlock(ptr noundef %j_state_lock.i) #19
  %j_running_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 10
  %13 = ptrtoint ptr %j_running_transaction to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %j_running_transaction, align 8
  %tobool.not = icmp eq ptr %14, null
  br i1 %tobool.not, label %journal_kill_thread.exit.if.end_crit_edge, label %if.then

journal_kill_thread.exit.if.end_crit_edge:        ; preds = %journal_kill_thread.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.then:                                          ; preds = %journal_kill_thread.exit
  call void @__sanitizer_cov_trace_pc() #21
  call void @jbd2_journal_commit_transaction(ptr noundef %journal) #19
  br label %if.end

if.end:                                           ; preds = %if.then, %journal_kill_thread.exit.if.end_crit_edge
  %j_list_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 39
  call void @_raw_spin_lock(ptr noundef %j_list_lock) #19
  %j_checkpoint_transactions = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 12
  %15 = ptrtoint ptr %j_checkpoint_transactions to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %j_checkpoint_transactions, align 8
  %cmp.not142 = icmp eq ptr %16, null
  br i1 %cmp.not142, label %if.end.do.body_crit_edge, label %while.body.lr.ph

if.end.do.body_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body

while.body.lr.ph:                                 ; preds = %if.end
  %j_checkpoint_mutex = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 19
  br label %while.body

while.body:                                       ; preds = %if.end6.while.body_crit_edge, %while.body.lr.ph
  call void @_raw_spin_unlock(ptr noundef %j_list_lock) #19
  call void @mutex_lock_io_nested(ptr noundef %j_checkpoint_mutex, i32 noundef 0) #19
  %call = call i32 @jbd2_log_do_checkpoint(ptr noundef %journal) #19
  call void @mutex_unlock(ptr noundef %j_checkpoint_mutex) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool3.not = icmp eq i32 %call, 0
  br i1 %tobool3.not, label %if.end6, label %if.then4

if.then4:                                         ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #21
  call void @jbd2_journal_destroy_checkpoint(ptr noundef %journal) #19
  call void @_raw_spin_lock(ptr noundef %j_list_lock) #19
  br label %do.body

if.end6:                                          ; preds = %while.body
  call void @_raw_spin_lock(ptr noundef %j_list_lock) #19
  %17 = ptrtoint ptr %j_checkpoint_transactions to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %j_checkpoint_transactions, align 8
  %cmp.not = icmp eq ptr %18, null
  br i1 %cmp.not, label %if.end6.do.body_crit_edge, label %if.end6.while.body_crit_edge

if.end6.while.body_crit_edge:                     ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #21
  br label %while.body

if.end6.do.body_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body

do.body:                                          ; preds = %if.end6.do.body_crit_edge, %if.then4, %if.end.do.body_crit_edge
  %err.1 = phi i32 [ %call, %if.then4 ], [ 0, %if.end.do.body_crit_edge ], [ 0, %if.end6.do.body_crit_edge ]
  %19 = ptrtoint ptr %j_running_transaction to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %j_running_transaction, align 8
  %cmp9.not = icmp eq ptr %20, null
  br i1 %cmp9.not, label %do.body21, label %do.body14, !prof !788

do.body14:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #21
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2155, 0\0A.popsection", ""() #19, !srcloc !801
  unreachable

do.body21:                                        ; preds = %do.body
  %j_committing_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 11
  %21 = ptrtoint ptr %j_committing_transaction to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %j_committing_transaction, align 4
  %cmp22.not = icmp eq ptr %22, null
  br i1 %cmp22.not, label %do.body41, label %do.body32, !prof !788

do.body32:                                        ; preds = %do.body21
  call void @__sanitizer_cov_trace_pc() #21
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2156, 0\0A.popsection", ""() #19, !srcloc !802
  unreachable

do.body41:                                        ; preds = %do.body21
  %23 = ptrtoint ptr %j_checkpoint_transactions to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %j_checkpoint_transactions, align 8
  %cmp43.not = icmp eq ptr %24, null
  br i1 %cmp43.not, label %do.end61, label %do.body53, !prof !788

do.body53:                                        ; preds = %do.body41
  call void @__sanitizer_cov_trace_pc() #21
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2157, 0\0A.popsection", ""() #19, !srcloc !803
  unreachable

do.end61:                                         ; preds = %do.body41
  call void @_raw_spin_unlock(ptr noundef %j_list_lock) #19
  %25 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %journal, align 8
  %and.i = and i32 %26, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool64.not = icmp eq i32 %and.i, 0
  br i1 %tobool64.not, label %land.lhs.true, label %do.end61.if.end68_crit_edge

do.end61.if.end68_crit_edge:                      ; preds = %do.end61
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end68

land.lhs.true:                                    ; preds = %do.end61
  %j_atomic_flags = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 1
  %27 = ptrtoint ptr %j_atomic_flags to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %j_atomic_flags, align 4
  %29 = and i32 %28, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool66.not = icmp eq i32 %29, 0
  br i1 %tobool66.not, label %land.lhs.true.if.end68_crit_edge, label %if.then67

land.lhs.true.if.end68_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end68

if.then67:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  call void @jbd2_journal_abort(ptr noundef %journal, i32 noundef -5)
  br label %if.end68

if.end68:                                         ; preds = %if.then67, %land.lhs.true.if.end68_crit_edge, %do.end61.if.end68_crit_edge
  %j_sb_buffer = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 4
  %30 = ptrtoint ptr %j_sb_buffer to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %j_sb_buffer, align 8
  %tobool69.not = icmp eq ptr %31, null
  br i1 %tobool69.not, label %if.end68.if.end79_crit_edge, label %if.then70

if.end68.if.end79_crit_edge:                      ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end79

if.then70:                                        ; preds = %if.end68
  %32 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %journal, align 8
  %and.i136 = and i32 %33, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i136)
  %tobool72.not = icmp eq i32 %and.i136, 0
  br i1 %tobool72.not, label %if.then73, label %if.then70.if.end77_crit_edge

if.then70.if.end77_crit_edge:                     ; preds = %if.then70
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end77

if.then73:                                        ; preds = %if.then70
  call void @__sanitizer_cov_trace_pc() #21
  %j_checkpoint_mutex74 = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 19
  call void @mutex_lock_io_nested(ptr noundef %j_checkpoint_mutex74, i32 noundef 0) #19
  call void @_raw_write_lock(ptr noundef %j_state_lock.i) #19
  %j_transaction_sequence = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 42
  %34 = ptrtoint ptr %j_transaction_sequence to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %j_transaction_sequence, align 8
  %inc = add i32 %35, 1
  store i32 %inc, ptr %j_transaction_sequence, align 8
  %j_tail_sequence = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 41
  %36 = ptrtoint ptr %j_tail_sequence to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %inc, ptr %j_tail_sequence, align 4
  call void @_raw_write_unlock(ptr noundef %j_state_lock.i) #19
  call fastcc void @jbd2_mark_journal_empty(ptr noundef %journal, i32 noundef 395264)
  call void @mutex_unlock(ptr noundef %j_checkpoint_mutex74) #19
  br label %if.end77

if.end77:                                         ; preds = %if.then73, %if.then70.if.end77_crit_edge
  %err.2 = phi i32 [ %err.1, %if.then73 ], [ -5, %if.then70.if.end77_crit_edge ]
  %37 = ptrtoint ptr %j_sb_buffer to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %j_sb_buffer, align 8
  %tobool.not.i137 = icmp eq ptr %38, null
  br i1 %tobool.not.i137, label %if.end77.if.end79_crit_edge, label %if.then.i

if.end77.if.end79_crit_edge:                      ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end79

if.then.i:                                        ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #21
  call void @__brelse(ptr noundef nonnull %38) #19
  br label %if.end79

if.end79:                                         ; preds = %if.then.i, %if.end77.if.end79_crit_edge, %if.end68.if.end79_crit_edge
  %err.3 = phi i32 [ %err.1, %if.end68.if.end79_crit_edge ], [ %err.2, %if.end77.if.end79_crit_edge ], [ %err.2, %if.then.i ]
  %flags = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 21, i32 4
  %39 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %flags, align 8
  %and = and i32 %40, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool80.not = icmp eq i32 %and, 0
  br i1 %tobool80.not, label %if.end79.if.end83_crit_edge, label %if.then81

if.end79.if.end83_crit_edge:                      ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end83

if.then81:                                        ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #21
  %j_shrinker = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 21
  %j_checkpoint_jh_count = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 22
  call void @percpu_counter_destroy(ptr noundef %j_checkpoint_jh_count) #19
  call void @unregister_shrinker(ptr noundef %j_shrinker) #19
  br label %if.end83

if.end83:                                         ; preds = %if.then81, %if.end79.if.end83_crit_edge
  %j_proc_entry = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 66
  %41 = ptrtoint ptr %j_proc_entry to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %j_proc_entry, align 8
  %tobool84.not = icmp eq ptr %42, null
  br i1 %tobool84.not, label %if.end83.if.end86_crit_edge, label %if.then85

if.end83.if.end86_crit_edge:                      ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end86

if.then85:                                        ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #21
  call void @remove_proc_entry(ptr noundef nonnull @.str.138, ptr noundef nonnull %42) #19
  %j_devname.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 35
  %43 = load ptr, ptr @proc_jbd2_stats, align 4
  call void @remove_proc_entry(ptr noundef %j_devname.i, ptr noundef %43) #19
  br label %if.end86

if.end86:                                         ; preds = %if.then85, %if.end83.if.end86_crit_edge
  %j_inode = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 40
  %44 = ptrtoint ptr %j_inode to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %j_inode, align 8
  call void @iput(ptr noundef %45) #19
  %j_revoke = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 52
  %46 = ptrtoint ptr %j_revoke to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %j_revoke, align 8
  %tobool87.not = icmp eq ptr %47, null
  br i1 %tobool87.not, label %if.end86.if.end89_crit_edge, label %if.then88

if.end86.if.end89_crit_edge:                      ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end89

if.then88:                                        ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #21
  call void @jbd2_journal_destroy_revoke(ptr noundef %journal) #19
  br label %if.end89

if.end89:                                         ; preds = %if.then88, %if.end86.if.end89_crit_edge
  %j_chksum_driver = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 70
  %48 = ptrtoint ptr %j_chksum_driver to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %j_chksum_driver, align 8
  %tobool90.not = icmp eq ptr %49, null
  br i1 %tobool90.not, label %if.end89.if.end93_crit_edge, label %if.then91

if.end89.if.end93_crit_edge:                      ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end93

if.then91:                                        ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #21
  %base.i.i = getelementptr inbounds %struct.crypto_shash, ptr %49, i32 0, i32 2
  call void @crypto_destroy_tfm(ptr noundef nonnull %49, ptr noundef %base.i.i) #19
  br label %if.end93

if.end93:                                         ; preds = %if.then91, %if.end89.if.end93_crit_edge
  %j_fc_wbuf = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 55
  %50 = ptrtoint ptr %j_fc_wbuf to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %j_fc_wbuf, align 8
  call void @kfree(ptr noundef %51) #19
  %j_wbuf = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 54
  %52 = ptrtoint ptr %j_wbuf to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %j_wbuf, align 4
  call void @kfree(ptr noundef %53) #19
  call void @kfree(ptr noundef %journal) #19
  ret i32 %err.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @jbd2_journal_abort(ptr noundef %journal, i32 noundef %errno) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_abort_mutex = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 3
  tail call void @mutex_lock_nested(ptr noundef %j_abort_mutex, i32 noundef 0) #19
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  %0 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %journal, align 8
  %and = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.end, label %if.then

if.then:                                          ; preds = %entry
  %j_errno = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 2
  %2 = ptrtoint ptr %j_errno to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %j_errno, align 8
  tail call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 -108, i32 %3)
  %cmp.not = icmp ne i32 %3, -108
  call void @__sanitizer_cov_trace_const_cmp4(i32 -108, i32 %errno)
  %cmp2 = icmp eq i32 %errno, -108
  %or.cond = and i1 %cmp2, %cmp.not
  br i1 %or.cond, label %if.then3, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then3:                                         ; preds = %if.then
  %4 = ptrtoint ptr %j_errno to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -108, ptr %j_errno, align 8
  %j_superblock.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 5
  %5 = ptrtoint ptr %j_superblock.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %j_superblock.i, align 4
  %j_sb_buffer.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 4
  %7 = ptrtoint ptr %j_sb_buffer.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %j_sb_buffer.i, align 8
  tail call void @__might_sleep(ptr noundef nonnull @.str.104, i32 noundef 366) #19
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %8, i32 noundef 4) #19
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %8, align 4
  %and.i.i.i.i = and i32 %10, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %trylock_buffer.exit.i, label %if.then3.cleanup.sink.split.sink.split_crit_edge

if.then3.cleanup.sink.split.sink.split_crit_edge: ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.sink.split

trylock_buffer.exit.i:                            ; preds = %if.then3
  tail call void @llvm.prefetch.p0(ptr %8, i32 1, i32 3, i32 1) #19
  %11 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %8, ptr %8, i32 4, ptr elementtype(i32) %8) #19, !srcloc !798
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %11, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !799
  %12 = and i32 %asmresult.i.i.i.i.i.i.i, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.not.i = icmp eq i32 %12, 0
  br i1 %tobool.not.not.i, label %trylock_buffer.exit.i.cleanup.sink.split_crit_edge, label %trylock_buffer.exit.i.cleanup.sink.split.sink.split_crit_edge

trylock_buffer.exit.i.cleanup.sink.split.sink.split_crit_edge: ; preds = %trylock_buffer.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.sink.split

trylock_buffer.exit.i.cleanup.sink.split_crit_edge: ; preds = %trylock_buffer.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split

do.end:                                           ; preds = %entry
  %j_devname = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 35
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.36, ptr noundef %j_devname) #22
  %13 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %journal, align 8
  %or = or i32 %14, 2
  store i32 %or, ptr %journal, align 8
  %j_errno8 = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 2
  %15 = ptrtoint ptr %j_errno8 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %errno, ptr %j_errno8, align 8
  %j_running_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 10
  %16 = ptrtoint ptr %j_running_transaction to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %j_running_transaction, align 8
  %tobool9.not = icmp eq ptr %17, null
  br i1 %tobool9.not, label %do.end.if.end12_crit_edge, label %if.then10

do.end.if.end12_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end12

if.then10:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #21
  %t_tid = getelementptr inbounds %struct.transaction_s, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %t_tid to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %t_tid, align 4
  %call11 = tail call i32 @__jbd2_log_start_commit(ptr noundef %journal, i32 noundef %19)
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %do.end.if.end12_crit_edge
  tail call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  %j_superblock.i33 = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 5
  %20 = ptrtoint ptr %j_superblock.i33 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %j_superblock.i33, align 4
  %j_sb_buffer.i34 = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 4
  %22 = ptrtoint ptr %j_sb_buffer.i34 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %j_sb_buffer.i34, align 8
  tail call void @__might_sleep(ptr noundef nonnull @.str.104, i32 noundef 366) #19
  %call.i.i.i.i40 = tail call zeroext i1 @__kasan_check_write(ptr noundef %23, i32 noundef 4) #19
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %23, align 4
  %and.i.i.i.i41 = and i32 %25, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i41)
  %tobool.not.i.i.i.i42 = icmp eq i32 %and.i.i.i.i41, 0
  br i1 %tobool.not.i.i.i.i42, label %trylock_buffer.exit.i45, label %if.end12.cleanup.sink.split.sink.split_crit_edge

if.end12.cleanup.sink.split.sink.split_crit_edge: ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.sink.split

trylock_buffer.exit.i45:                          ; preds = %if.end12
  tail call void @llvm.prefetch.p0(ptr %23, i32 1, i32 3, i32 1) #19
  %26 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %23, ptr %23, i32 4, ptr elementtype(i32) %23) #19, !srcloc !798
  %asmresult.i.i.i.i.i.i.i43 = extractvalue { i32, i32, i32 } %26, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !799
  %27 = and i32 %asmresult.i.i.i.i.i.i.i43, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.not.not.i44 = icmp eq i32 %27, 0
  br i1 %tobool.not.not.i44, label %trylock_buffer.exit.i45.cleanup.sink.split_crit_edge, label %trylock_buffer.exit.i45.cleanup.sink.split.sink.split_crit_edge

trylock_buffer.exit.i45.cleanup.sink.split.sink.split_crit_edge: ; preds = %trylock_buffer.exit.i45
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.sink.split

trylock_buffer.exit.i45.cleanup.sink.split_crit_edge: ; preds = %trylock_buffer.exit.i45
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split

cleanup.sink.split.sink.split:                    ; preds = %trylock_buffer.exit.i45.cleanup.sink.split.sink.split_crit_edge, %if.end12.cleanup.sink.split.sink.split_crit_edge, %trylock_buffer.exit.i.cleanup.sink.split.sink.split_crit_edge, %if.then3.cleanup.sink.split.sink.split_crit_edge
  %.sink51 = phi ptr [ %8, %trylock_buffer.exit.i.cleanup.sink.split.sink.split_crit_edge ], [ %8, %if.then3.cleanup.sink.split.sink.split_crit_edge ], [ %23, %trylock_buffer.exit.i45.cleanup.sink.split.sink.split_crit_edge ], [ %23, %if.end12.cleanup.sink.split.sink.split_crit_edge ]
  %j_errno8.sink.ph = phi ptr [ %j_errno, %trylock_buffer.exit.i.cleanup.sink.split.sink.split_crit_edge ], [ %j_errno, %if.then3.cleanup.sink.split.sink.split_crit_edge ], [ %j_errno8, %trylock_buffer.exit.i45.cleanup.sink.split.sink.split_crit_edge ], [ %j_errno8, %if.end12.cleanup.sink.split.sink.split_crit_edge ]
  %.sink.ph = phi ptr [ %6, %trylock_buffer.exit.i.cleanup.sink.split.sink.split_crit_edge ], [ %6, %if.then3.cleanup.sink.split.sink.split_crit_edge ], [ %21, %trylock_buffer.exit.i45.cleanup.sink.split.sink.split_crit_edge ], [ %21, %if.end12.cleanup.sink.split.sink.split_crit_edge ]
  tail call void @__lock_buffer(ptr noundef %.sink51) #19
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %cleanup.sink.split.sink.split, %trylock_buffer.exit.i45.cleanup.sink.split_crit_edge, %trylock_buffer.exit.i.cleanup.sink.split_crit_edge
  %j_errno8.sink = phi ptr [ %j_errno, %trylock_buffer.exit.i.cleanup.sink.split_crit_edge ], [ %j_errno8, %trylock_buffer.exit.i45.cleanup.sink.split_crit_edge ], [ %j_errno8.sink.ph, %cleanup.sink.split.sink.split ]
  %.sink = phi ptr [ %6, %trylock_buffer.exit.i.cleanup.sink.split_crit_edge ], [ %21, %trylock_buffer.exit.i45.cleanup.sink.split_crit_edge ], [ %.sink.ph, %cleanup.sink.split.sink.split ]
  %28 = ptrtoint ptr %j_errno8.sink to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %j_errno8.sink, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -108, i32 %29)
  %cmp.i36 = icmp eq i32 %29, -108
  %spec.store.select.i37 = select i1 %cmp.i36, i32 0, i32 %29
  tail call void (i32, ptr, ptr, i32, ptr, ...) @__jbd2_debug(i32 noundef 1, ptr noundef nonnull @.str.2, ptr noundef nonnull @__func__.jbd2_journal_update_sb_errno, i32 noundef 1868, ptr noundef nonnull @.str.16, i32 noundef %spec.store.select.i37) #19
  %s_errno.i = getelementptr inbounds %struct.journal_superblock_s, ptr %.sink, i32 0, i32 6
  %30 = ptrtoint ptr %s_errno.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %spec.store.select.i37, ptr %s_errno.i, align 4
  %call.i = tail call fastcc i32 @jbd2_write_superblock(ptr noundef %journal, i32 noundef 133120) #19
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.then.cleanup_crit_edge
  tail call void @mutex_unlock(ptr noundef %j_abort_mutex) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_journal_errno(ptr noundef %journal) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_read_lock(ptr noundef %j_state_lock) #19
  %0 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %journal, align 8
  %and = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %j_errno = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 2
  %2 = ptrtoint ptr %j_errno to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %j_errno, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %entry.if.end_crit_edge
  %err.0 = phi i32 [ %3, %if.else ], [ -30, %entry.if.end_crit_edge ]
  tail call void @_raw_read_unlock(ptr noundef %j_state_lock) #19
  ret i32 %err.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @jbd2_journal_ack_err(ptr noundef %journal) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  %j_errno = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 2
  %0 = ptrtoint ptr %j_errno to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %j_errno, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %2 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %journal, align 8
  %or = or i32 %3, 4
  store i32 %or, ptr %journal, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_journal_clear_err(ptr noundef %journal) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  %0 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %journal, align 8
  %and = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %j_errno = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 2
  %2 = ptrtoint ptr %j_errno to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %j_errno, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %entry.if.end_crit_edge
  %err.0 = phi i32 [ 0, %if.else ], [ -30, %entry.if.end_crit_edge ]
  tail call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  ret i32 %err.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_log_wait_commit(ptr noundef %journal, i32 noundef %tid) #0 align 64 {
entry:
  %__wq_entry = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_read_lock(ptr noundef %j_state_lock) #19
  %j_commit_sequence = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 43
  %0 = ptrtoint ptr %j_commit_sequence to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %j_commit_sequence, align 4
  %sub.i = sub i32 %tid, %1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i)
  %cmp.i = icmp slt i32 %sub.i, 1
  br i1 %cmp.i, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %j_committing_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 11
  %2 = ptrtoint ptr %j_committing_transaction to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %j_committing_transaction, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.if.then_crit_edge, label %lor.lhs.false

land.lhs.true.if.then_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then

lor.lhs.false:                                    ; preds = %land.lhs.true
  %t_tid = getelementptr inbounds %struct.transaction_s, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %t_tid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %t_tid, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %tid)
  %cmp.not = icmp eq i32 %5, %tid
  br i1 %cmp.not, label %lor.lhs.false.if.end_crit_edge, label %lor.lhs.false.if.then_crit_edge

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %land.lhs.true.if.then_crit_edge
  tail call void @_raw_read_unlock(ptr noundef %j_state_lock) #19
  %j_trans_commit_map = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 72
  br label %__here

__here:                                           ; preds = %if.then
  tail call void @lock_acquire(ptr noundef %j_trans_commit_map, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@jbd2_log_wait_commit, %__here) to i32)) #19
  br label %__here5

__here5:                                          ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @lock_release(ptr noundef %j_trans_commit_map, i32 noundef ptrtoint (ptr blockaddress(@jbd2_log_wait_commit, %__here5) to i32)) #19
  tail call void @_raw_read_lock(ptr noundef %j_state_lock) #19
  br label %if.end

if.end:                                           ; preds = %__here5, %lor.lhs.false.if.end_crit_edge, %entry.if.end_crit_edge
  %j_commit_request = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 44
  %6 = ptrtoint ptr %j_commit_request to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %j_commit_request, align 8
  %8 = xor i32 %7, -1
  %9 = add i32 %8, %tid
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %9)
  %tobool9.not = icmp sgt i32 %9, -1
  br i1 %tobool9.not, label %do.end13, label %if.end.if.end17_crit_edge

if.end.if.end17_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end17

do.end13:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %call16 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.6, i32 noundef %7, i32 noundef %tid) #22
  br label %if.end17

if.end17:                                         ; preds = %do.end13, %if.end.if.end17_crit_edge
  %10 = ptrtoint ptr %j_commit_sequence to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %j_commit_sequence, align 4
  %sub.i8195 = sub i32 %tid, %11
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i8195)
  %cmp.i8296 = icmp slt i32 %sub.i8195, 1
  br i1 %cmp.i8296, label %if.end17.while.end_crit_edge, label %while.body.lr.ph

if.end17.while.end_crit_edge:                     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #21
  br label %while.end

while.body.lr.ph:                                 ; preds = %if.end17
  %j_wait_commit = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 15
  %j_wait_done_commit = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 14
  br label %while.body

while.body:                                       ; preds = %do.end44.while.body_crit_edge, %while.body.lr.ph
  %12 = phi i32 [ %11, %while.body.lr.ph ], [ %21, %do.end44.while.body_crit_edge ]
  call void (i32, ptr, ptr, i32, ptr, ...) @__jbd2_debug(i32 noundef 1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.6, i32 noundef 709, ptr noundef nonnull @.str.7, i32 noundef %tid, i32 noundef %12)
  call void @_raw_read_unlock(ptr noundef %j_state_lock) #19
  call void @__wake_up(ptr noundef %j_wait_commit, i32 noundef 3, i32 noundef 1, ptr noundef null) #19
  call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 713) #19
  %13 = ptrtoint ptr %j_commit_sequence to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %j_commit_sequence, align 4
  %sub.i84 = sub i32 %tid, %14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i84)
  %cmp.i85 = icmp slt i32 %sub.i84, 1
  br i1 %cmp.i85, label %while.body.do.end44_crit_edge, label %if.end34

while.body.do.end44_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end44

if.end34:                                         ; preds = %while.body
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry) #19
  %15 = call ptr @memset(ptr %__wq_entry, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry, i32 noundef 0) #19
  %call3592 = call i32 @prepare_to_wait_event(ptr noundef %j_wait_done_commit, ptr noundef nonnull %__wq_entry, i32 noundef 2) #19
  %16 = ptrtoint ptr %j_commit_sequence to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %j_commit_sequence, align 4
  %sub.i8793 = sub i32 %tid, %17
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i8793)
  %cmp.i8894 = icmp slt i32 %sub.i8793, 1
  br i1 %cmp.i8894, label %if.end34.for.end_crit_edge, label %if.end34.cleanup_crit_edge

if.end34.cleanup_crit_edge:                       ; preds = %if.end34
  br label %cleanup

if.end34.for.end_crit_edge:                       ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end

cleanup:                                          ; preds = %cleanup.cleanup_crit_edge, %if.end34.cleanup_crit_edge
  call void @schedule() #19
  %call35 = call i32 @prepare_to_wait_event(ptr noundef %j_wait_done_commit, ptr noundef nonnull %__wq_entry, i32 noundef 2) #19
  %18 = ptrtoint ptr %j_commit_sequence to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %j_commit_sequence, align 4
  %sub.i87 = sub i32 %tid, %19
  %cmp.i88 = icmp slt i32 %sub.i87, 1
  br i1 %cmp.i88, label %cleanup.for.end_crit_edge, label %cleanup.cleanup_crit_edge

cleanup.cleanup_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %if.end34.for.end_crit_edge
  call void @finish_wait(ptr noundef %j_wait_done_commit, ptr noundef nonnull %__wq_entry) #19
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry) #19
  br label %do.end44

do.end44:                                         ; preds = %for.end, %while.body.do.end44_crit_edge
  call void @_raw_read_lock(ptr noundef %j_state_lock) #19
  %20 = ptrtoint ptr %j_commit_sequence to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %j_commit_sequence, align 4
  %sub.i81 = sub i32 %tid, %21
  %cmp.i82 = icmp slt i32 %sub.i81, 1
  br i1 %cmp.i82, label %do.end44.while.end_crit_edge, label %do.end44.while.body_crit_edge

do.end44.while.body_crit_edge:                    ; preds = %do.end44
  call void @__sanitizer_cov_trace_pc() #21
  br label %while.body

do.end44.while.end_crit_edge:                     ; preds = %do.end44
  call void @__sanitizer_cov_trace_pc() #21
  br label %while.end

while.end:                                        ; preds = %do.end44.while.end_crit_edge, %if.end17.while.end_crit_edge
  call void @_raw_read_unlock(ptr noundef %j_state_lock) #19
  %22 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %journal, align 8
  %and.i = and i32 %23, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool48.not = icmp eq i32 %and.i, 0
  br i1 %tobool48.not, label %while.end.if.end52_crit_edge, label %if.then51, !prof !788

while.end.if.end52_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end52

if.then51:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end52

if.end52:                                         ; preds = %if.then51, %while.end.if.end52_crit_edge
  %err.0 = phi i32 [ -5, %if.then51 ], [ 0, %while.end.if.end52_crit_edge ]
  ret i32 %err.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_log_start_commit(ptr noundef %journal, i32 noundef %tid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  %call = tail call i32 @__jbd2_log_start_commit(ptr noundef %journal, i32 noundef %tid)
  tail call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_journal_start_commit(ptr noundef %journal, ptr noundef writeonly %ptid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  %j_running_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 10
  %0 = ptrtoint ptr %j_running_transaction to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %j_running_transaction, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %t_tid = getelementptr inbounds %struct.transaction_s, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %t_tid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %t_tid, align 4
  %call = tail call i32 @__jbd2_log_start_commit(ptr noundef %journal, i32 noundef %3)
  %tobool2.not = icmp eq ptr %ptid, null
  br i1 %tobool2.not, label %if.then.if.end12_crit_edge, label %if.then.if.end12.sink.split_crit_edge

if.then.if.end12.sink.split_crit_edge:            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end12.sink.split

if.then.if.end12_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end12

if.else:                                          ; preds = %entry
  %j_committing_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 11
  %4 = ptrtoint ptr %j_committing_transaction to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %j_committing_transaction, align 4
  %tobool4.not = icmp eq ptr %5, null
  br i1 %tobool4.not, label %if.else.if.end12_crit_edge, label %if.then5

if.else.if.end12_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end12

if.then5:                                         ; preds = %if.else
  %tobool6.not = icmp eq ptr %ptid, null
  br i1 %tobool6.not, label %if.then5.if.end12_crit_edge, label %if.then7

if.then5.if.end12_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end12

if.then7:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #21
  %t_tid9 = getelementptr inbounds %struct.transaction_s, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %t_tid9 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %t_tid9, align 4
  br label %if.end12.sink.split

if.end12.sink.split:                              ; preds = %if.then7, %if.then.if.end12.sink.split_crit_edge
  %.sink = phi i32 [ %7, %if.then7 ], [ %3, %if.then.if.end12.sink.split_crit_edge ]
  %8 = ptrtoint ptr %ptid to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %.sink, ptr %ptid, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.end12.sink.split, %if.then5.if.end12_crit_edge, %if.else.if.end12_crit_edge, %if.then.if.end12_crit_edge
  %ret.0 = phi i32 [ 0, %if.else.if.end12_crit_edge ], [ 1, %if.then.if.end12_crit_edge ], [ 1, %if.then5.if.end12_crit_edge ], [ 1, %if.end12.sink.split ]
  tail call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_journal_force_commit_nested(ptr noundef %journal) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__jbd2_journal_force_commit(ptr noundef %journal)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp sgt i32 %call, 0
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_journal_wipe(ptr noundef %journal, i32 noundef %write) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %journal, align 8
  %and = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.end10, label %do.body5, !prof !788

do.body5:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2523, 0\0A.popsection", ""() #19, !srcloc !804
  unreachable

do.end10:                                         ; preds = %entry
  %call.i = tail call fastcc i32 @journal_get_superblock(ptr noundef %journal) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %do.end10.cleanup_crit_edge

do.end10.cleanup_crit_edge:                       ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end.i:                                         ; preds = %do.end10
  %j_superblock.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 5
  %2 = ptrtoint ptr %j_superblock.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %j_superblock.i, align 4
  %s_sequence.i = getelementptr inbounds %struct.journal_superblock_s, ptr %3, i32 0, i32 4
  %4 = ptrtoint ptr %s_sequence.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %s_sequence.i, align 4
  %j_tail_sequence.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 41
  %6 = ptrtoint ptr %j_tail_sequence.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %j_tail_sequence.i, align 4
  %s_start.i = getelementptr inbounds %struct.journal_superblock_s, ptr %3, i32 0, i32 5
  %7 = ptrtoint ptr %s_start.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %s_start.i, align 4
  %j_tail.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 25
  %9 = ptrtoint ptr %j_tail.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %j_tail.i, align 8
  %s_first.i = getelementptr inbounds %struct.journal_superblock_s, ptr %3, i32 0, i32 3
  %10 = ptrtoint ptr %s_first.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %s_first.i, align 4
  %j_first.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 27
  %12 = ptrtoint ptr %j_first.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %j_first.i, align 8
  %s_errno.i = getelementptr inbounds %struct.journal_superblock_s, ptr %3, i32 0, i32 6
  %13 = ptrtoint ptr %s_errno.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %s_errno.i, align 4
  %j_errno.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 2
  %15 = ptrtoint ptr %j_errno.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %j_errno.i, align 8
  %s_maxlen.i = getelementptr inbounds %struct.journal_superblock_s, ptr %3, i32 0, i32 2
  %16 = ptrtoint ptr %s_maxlen.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %s_maxlen.i, align 4
  %j_last.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 28
  %18 = ptrtoint ptr %j_last.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %j_last.i, align 4
  %j_format_version.i.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 6
  %19 = ptrtoint ptr %j_format_version.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %j_format_version.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %20)
  %cmp.i.i = icmp sgt i32 %20, 1
  br i1 %cmp.i.i, label %jbd2_has_feature_fast_commit.exit.i, label %if.end.i.if.end13_crit_edge

if.end.i.if.end13_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end13

jbd2_has_feature_fast_commit.exit.i:              ; preds = %if.end.i
  %s_feature_incompat.i.i = getelementptr inbounds %struct.journal_superblock_s, ptr %3, i32 0, i32 8
  %21 = ptrtoint ptr %s_feature_incompat.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %s_feature_incompat.i.i, align 4
  %and.i.i = and i32 %22, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %cmp1.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %cmp1.i.not.i, label %jbd2_has_feature_fast_commit.exit.i.if.end13_crit_edge, label %if.then2.i

jbd2_has_feature_fast_commit.exit.i.if.end13_crit_edge: ; preds = %jbd2_has_feature_fast_commit.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end13

if.then2.i:                                       ; preds = %jbd2_has_feature_fast_commit.exit.i
  %23 = ptrtoint ptr %s_maxlen.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %s_maxlen.i, align 4
  %j_fc_last.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 31
  %25 = ptrtoint ptr %j_fc_last.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %j_fc_last.i, align 8
  %s_num_fc_blks.i.i = getelementptr inbounds %struct.journal_superblock_s, ptr %3, i32 0, i32 17
  %26 = ptrtoint ptr %s_num_fc_blks.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %s_num_fc_blks.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.not.i.i = icmp eq i32 %27, 0
  %spec.select.i.i = select i1 %tobool.not.i.i, i32 256, i32 %27
  %sub.i = sub i32 %17, %spec.select.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1023, i32 %sub.i)
  %cmp.i = icmp ugt i32 %sub.i, 1023
  br i1 %cmp.i, label %if.then6.i, label %if.then2.i.if.end10.i_crit_edge

if.then2.i.if.end10.i_crit_edge:                  ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end10.i

if.then6.i:                                       ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  %sub8.i = sub i32 %24, %spec.select.i.i
  %28 = ptrtoint ptr %j_last.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %sub8.i, ptr %j_last.i, align 4
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then6.i, %if.then2.i.if.end10.i_crit_edge
  %29 = ptrtoint ptr %j_last.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %j_last.i, align 4
  %add.i = add i32 %30, 1
  %j_fc_first.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 29
  %31 = ptrtoint ptr %j_fc_first.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %add.i, ptr %j_fc_first.i, align 8
  %j_fc_off.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 30
  %32 = ptrtoint ptr %j_fc_off.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %j_fc_off.i, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.end10.i, %jbd2_has_feature_fast_commit.exit.i.if.end13_crit_edge, %if.end.i.if.end13_crit_edge
  %33 = ptrtoint ptr %j_tail.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %j_tail.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool14.not = icmp eq i32 %34, 0
  br i1 %tobool14.not, label %if.end13.cleanup_crit_edge, label %do.end19

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

do.end19:                                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %write)
  %tobool20.not = icmp eq i32 %write, 0
  %cond = select i1 %tobool20.not, ptr @.str.35, ptr @.str.34
  %call21 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.32, ptr noundef nonnull %cond) #22
  %call22 = tail call i32 @jbd2_journal_skip_recovery(ptr noundef %journal) #19
  br i1 %tobool20.not, label %do.end19.cleanup_crit_edge, label %if.then24

do.end19.cleanup_crit_edge:                       ; preds = %do.end19
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then24:                                        ; preds = %do.end19
  call void @__sanitizer_cov_trace_pc() #21
  %j_checkpoint_mutex = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 19
  tail call void @mutex_lock_io_nested(ptr noundef %j_checkpoint_mutex, i32 noundef 0) #19
  tail call fastcc void @jbd2_mark_journal_empty(ptr noundef %journal, i32 noundef 133120)
  tail call void @mutex_unlock(ptr noundef %j_checkpoint_mutex) #19
  br label %cleanup

cleanup:                                          ; preds = %if.then24, %do.end19.cleanup_crit_edge, %if.end13.cleanup_crit_edge, %do.end10.cleanup_crit_edge
  %retval.0 = phi i32 [ %call22, %if.then24 ], [ %call22, %do.end19.cleanup_crit_edge ], [ 0, %if.end13.cleanup_crit_edge ], [ %call.i, %do.end10.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @jbd2_journal_blocks_per_page(ptr nocapture noundef readonly %inode) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb, align 4
  %s_blocksize_bits = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %s_blocksize_bits to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %s_blocksize_bits, align 4
  %conv = zext i8 %3 to i32
  %sub = sub nsw i32 12, %conv
  %shl = shl nuw nsw i32 1, %sub
  ret i32 %shl
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_invalidatepage(ptr noundef, ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_try_to_free_buffers(ptr noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_journal_force_commit(ptr noundef %journal) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %journal_info = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 146
  %4 = ptrtoint ptr %journal_info to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %journal_info, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %do.end10, label %do.body5, !prof !788

do.body5:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 597, 0\0A.popsection", ""() #19, !srcloc !805
  unreachable

do.end10:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %call11 = tail call fastcc i32 @__jbd2_journal_force_commit(ptr noundef %journal)
  %6 = tail call i32 @llvm.smin.i32(i32 %call11, i32 0)
  ret i32 %6
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_inode_ranged_write(ptr noundef, ptr noundef, i64 noundef, i64 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_inode_ranged_wait(ptr noundef, ptr noundef, i64 noundef, i64 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_submit_inode_data_buffers(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_finish_inode_data_buffers(ptr noundef) #2

; Function Attrs: argmemonly nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @jbd2_journal_init_jbd_inode(ptr noundef %jinode, ptr noundef %inode) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %jinode to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %jinode, align 8
  %i_next_transaction = getelementptr inbounds %struct.jbd2_inode, ptr %jinode, i32 0, i32 1
  %1 = ptrtoint ptr %i_next_transaction to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr null, ptr %i_next_transaction, align 4
  %i_vfs_inode = getelementptr inbounds %struct.jbd2_inode, ptr %jinode, i32 0, i32 3
  %2 = ptrtoint ptr %i_vfs_inode to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %inode, ptr %i_vfs_inode, align 8
  %i_flags = getelementptr inbounds %struct.jbd2_inode, ptr %jinode, i32 0, i32 4
  %i_list = getelementptr inbounds %struct.jbd2_inode, ptr %jinode, i32 0, i32 2
  %3 = call ptr @memset(ptr %i_flags, i32 0, i32 20)
  %4 = ptrtoint ptr %i_list to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %i_list, ptr %i_list, align 4
  %prev.i = getelementptr inbounds %struct.jbd2_inode, ptr %jinode, i32 0, i32 2, i32 1
  %5 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %i_list, ptr %prev.i, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @jbd2_journal_release_jbd_inode(ptr noundef %journal, ptr noundef %jinode) #0 align 64 {
entry:
  %wait = alloca %struct.wait_bit_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %journal, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %restart.preheader

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

restart.preheader:                                ; preds = %entry
  %j_list_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 39
  call void @_raw_spin_lock(ptr noundef %j_list_lock) #19
  %i_flags = getelementptr inbounds %struct.jbd2_inode, ptr %jinode, i32 0, i32 4
  %0 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %i_flags, align 4
  %and30 = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30)
  %tobool1.not31 = icmp eq i32 %and30, 0
  br i1 %tobool1.not31, label %restart.preheader.if.end15_crit_edge, label %if.then2.lr.ph

restart.preheader.if.end15_crit_edge:             ; preds = %restart.preheader
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end15

if.then2.lr.ph:                                   ; preds = %restart.preheader
  %2 = getelementptr inbounds %struct.wait_bit_key, ptr %wait, i32 0, i32 1
  %3 = getelementptr inbounds %struct.wait_bit_key, ptr %wait, i32 0, i32 2
  %4 = getelementptr inbounds %struct.wait_bit_queue_entry, ptr %wait, i32 0, i32 1
  %5 = getelementptr inbounds %struct.wait_bit_queue_entry, ptr %wait, i32 0, i32 1, i32 1
  %6 = getelementptr inbounds %struct.wait_bit_queue_entry, ptr %wait, i32 0, i32 1, i32 2
  %7 = getelementptr inbounds %struct.wait_bit_queue_entry, ptr %wait, i32 0, i32 1, i32 3
  %8 = getelementptr inbounds %struct.wait_bit_queue_entry, ptr %wait, i32 0, i32 1, i32 3, i32 1
  %9 = getelementptr inbounds i8, ptr %wait, i32 16
  br label %if.then2

if.then2:                                         ; preds = %if.then2.if.then2_crit_edge, %if.then2.lr.ph
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %wait) #19
  %10 = call ptr @memset(ptr %9, i32 255, i32 16)
  %11 = ptrtoint ptr %wait to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %i_flags, ptr %wait, align 4
  %12 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %2, align 4
  %13 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %3, align 4
  %14 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %4, align 4
  %15 = call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %task, align 8
  %19 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %18, ptr %5, align 4
  %20 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr @wake_bit_function, ptr %6, align 4
  %21 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %7, ptr %7, align 4
  %22 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %7, ptr %8, align 4
  %call11 = call ptr @bit_waitqueue(ptr noundef %i_flags, i32 noundef 0) #19
  call void @prepare_to_wait(ptr noundef %call11, ptr noundef %4, i32 noundef 2) #19
  call void @_raw_spin_unlock(ptr noundef %j_list_lock) #19
  call void @schedule() #19
  call void @finish_wait(ptr noundef %call11, ptr noundef %4) #19
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %wait) #19
  call void @_raw_spin_lock(ptr noundef %j_list_lock) #19
  %23 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %i_flags, align 4
  %and = and i32 %24, 1
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %if.then2.if.end15_crit_edge, label %if.then2.if.then2_crit_edge

if.then2.if.then2_crit_edge:                      ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then2

if.then2.if.end15_crit_edge:                      ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end15

if.end15:                                         ; preds = %if.then2.if.end15_crit_edge, %restart.preheader.if.end15_crit_edge
  %25 = ptrtoint ptr %jinode to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %jinode, align 8
  %tobool16.not = icmp eq ptr %26, null
  br i1 %tobool16.not, label %if.end15.if.end19_crit_edge, label %if.then17

if.end15.if.end19_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end19

if.then17:                                        ; preds = %if.end15
  %i_list = getelementptr inbounds %struct.jbd2_inode, ptr %jinode, i32 0, i32 2
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %i_list) #19
  br i1 %call.i.i, label %if.end.i.i, label %if.then17.list_del.exit_crit_edge

if.then17.list_del.exit_crit_edge:                ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #21
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #21
  %prev.i.i = getelementptr inbounds %struct.jbd2_inode, ptr %jinode, i32 0, i32 2, i32 1
  %27 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %prev.i.i, align 4
  %29 = ptrtoint ptr %i_list to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %i_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %28, ptr %prev1.i.i.i, align 4
  %32 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile ptr %30, ptr %28, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then17.list_del.exit_crit_edge
  %33 = ptrtoint ptr %i_list to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr inttoptr (i32 256 to ptr), ptr %i_list, align 4
  %prev.i = getelementptr inbounds %struct.jbd2_inode, ptr %jinode, i32 0, i32 2, i32 1
  %34 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %35 = ptrtoint ptr %jinode to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr null, ptr %jinode, align 8
  br label %if.end19

if.end19:                                         ; preds = %list_del.exit, %if.end15.if.end19_crit_edge
  call void @_raw_spin_unlock(ptr noundef %j_list_lock) #19
  br label %return

return:                                           ; preds = %if.end19, %entry.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_begin_ordered_truncate(ptr noundef, ptr noundef, i64 noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__jbd2_debug(i32 noundef %level, ptr noundef %file, ptr noundef %func, i32 noundef %line, ptr noundef %fmt, ...) #0 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #19
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #19
  %0 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !790
  %1 = load i16, ptr @jbd2_journal_enable_debug, align 2
  %conv = zext i16 %1 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv, i32 %level)
  %cmp = icmp slt i32 %conv, %level
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %2 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.va_start(ptr nonnull %args)
  %3 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %fmt, ptr %vaf, align 4
  %4 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %args, ptr %2, align 4
  %call = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str, ptr noundef %file, ptr noundef %func, i32 noundef %line, ptr noundef nonnull %vaf) #22
  call void @llvm.va_end(ptr nonnull %args)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #19
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #19
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #6

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #7

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_journal_write_metadata_buffer(ptr noundef %transaction, ptr noundef %jh_in, ptr nocapture noundef writeonly %bh_out, i64 noundef %blocknr) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %jh_in to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %jh_in, align 4
  %2 = ptrtoint ptr %transaction to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %transaction, align 8
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %1, align 4
  %6 = and i32 %5, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %do.body5, label %do.end10, !prof !789

do.body5:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 362, 0\0A.popsection", ""() #19, !srcloc !806
  unreachable

do.end10:                                         ; preds = %entry
  %call11 = tail call ptr @alloc_buffer_head(i32 noundef 35904) #19
  %b_count = getelementptr inbounds %struct.buffer_head, ptr %call11, i32 0, i32 11
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %b_count, i32 noundef 4) #19
  %7 = ptrtoint ptr %b_count to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile i32 1, ptr %b_count, align 4
  %b_state_lock = getelementptr inbounds %struct.journal_head, ptr %jh_in, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %b_state_lock) #19
  %b_frozen_data = getelementptr inbounds %struct.journal_head, ptr %jh_in, i32 0, i32 5
  %b_triggers = getelementptr inbounds %struct.journal_head, ptr %jh_in, i32 0, i32 14
  %b_size = getelementptr inbounds %struct.buffer_head, ptr %1, i32 0, i32 4
  br label %repeat

repeat:                                           ; preds = %repeat.backedge, %do.end10
  %tobool35.not238 = phi i1 [ true, %do.end10 ], [ false, %repeat.backedge ]
  %do_escape.0 = phi i32 [ 0, %do.end10 ], [ %spec.select149, %repeat.backedge ]
  %8 = ptrtoint ptr %b_frozen_data to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %b_frozen_data, align 4
  %tobool12.not = icmp eq ptr %9, null
  br i1 %tobool12.not, label %if.else, label %if.then13

if.then13:                                        ; preds = %repeat
  call void @__sanitizer_cov_trace_pc() #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %10 = load ptr, ptr @mem_map, align 4
  %11 = ptrtoint ptr %9 to i32
  %sub = add i32 %11, 1073741824
  %shr = lshr i32 %sub, 12
  %add.ptr = getelementptr %struct.page, ptr %10, i32 %shr
  br label %if.end20

if.else:                                          ; preds = %repeat
  call void @__sanitizer_cov_trace_pc() #21
  %12 = ptrtoint ptr %jh_in to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %jh_in, align 4
  %b_page = getelementptr inbounds %struct.buffer_head, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %b_page to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %b_page, align 8
  %b_data = getelementptr inbounds %struct.buffer_head, ptr %13, i32 0, i32 5
  %16 = ptrtoint ptr %b_data to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %b_data, align 4
  %18 = ptrtoint ptr %17 to i32
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then13
  %done_copy_out.1 = phi i32 [ 2, %if.then13 ], [ 0, %if.else ]
  %new_page.0 = phi ptr [ %add.ptr, %if.then13 ], [ %15, %if.else ]
  %new_offset.0.in = phi i32 [ %11, %if.then13 ], [ %18, %if.else ]
  %new_offset.0 = and i32 %new_offset.0.in, 4095
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %19 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %19, 512
  %20 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %23, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !807
  %24 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i1.i.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 2
  %26 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %27, i32 0, i32 213
  %28 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %inc.i.i.i.i = add i32 %29, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !808
  %call.i.i154 = tail call ptr @__kmap_local_page_prot(ptr noundef %new_page.0, i32 noundef %or.i) #19
  br i1 %tobool12.not, label %if.then23, label %if.end20.if.end25_crit_edge

if.end20.if.end25_crit_edge:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end25

if.then23:                                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #21
  %add.ptr24 = getelementptr i8, ptr %call.i.i154, i32 %new_offset.0
  %30 = ptrtoint ptr %b_triggers to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %b_triggers, align 4
  tail call void @jbd2_buffer_frozen_trigger(ptr noundef %jh_in, ptr noundef %add.ptr24, ptr noundef %31) #19
  br label %if.end25

if.end25:                                         ; preds = %if.then23, %if.end20.if.end25_crit_edge
  %add.ptr26 = getelementptr i8, ptr %call.i.i154, i32 %new_offset.0
  %32 = ptrtoint ptr %add.ptr26 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %add.ptr26, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1069860456, i32 %33)
  %cmp = icmp eq i32 %33, -1069860456
  %spec.select149 = select i1 %cmp, i32 1, i32 %do_escape.0
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i154) #19
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !809
  %34 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i1.i = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 2
  %36 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %37, i32 0, i32 213
  %38 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %39, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !810
  %40 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i = and i32 %40, -16384
  %41 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %41, i32 0, i32 1
  %42 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %43, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  %not.cmp = xor i1 %cmp, true
  %tobool35.not = and i1 %tobool35.not238, %not.cmp
  %tobool22.not.not = xor i1 %tobool12.not, true
  %brmerge = or i1 %tobool35.not, %tobool22.not.not
  br i1 %brmerge, label %if.end66.loopexit, label %if.then37

if.then37:                                        ; preds = %if.end25
  tail call void @_raw_spin_unlock(ptr noundef %b_state_lock) #19
  %44 = ptrtoint ptr %b_size to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %b_size, align 8
  %sub.i = add i32 %45, -1
  %46 = tail call i32 @llvm.ctpop.i32(i32 %45) #19, !range !800
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %46)
  %tobool.not.i155 = icmp ult i32 %46, 2
  br i1 %tobool.not.i155, label %do.end8.i, label %do.body3.i, !prof !788

do.body3.i:                                       ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2803, 0\0A.popsection", ""() #19, !srcloc !811
  unreachable

do.end8.i:                                        ; preds = %if.then37
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %45)
  %cmp.i = icmp ult i32 %45, 4096
  br i1 %cmp.i, label %cond.false16.i.i, label %get_order.exit.i

cond.false16.i.i:                                 ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %45)
  %cmp.i.i.i = icmp ugt i32 %45, 1
  br i1 %cmp.i.i.i, label %cond.end18.i.i, label %cond.false16.i.i.if.then38.i.i_crit_edge

cond.false16.i.i.if.then38.i.i_crit_edge:         ; preds = %cond.false16.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then38.i.i

cond.end18.i.i:                                   ; preds = %cond.false16.i.i
  %47 = tail call i32 @llvm.ctlz.i32(i32 %sub.i, i1 true) #19, !range !800
  %sub6.i.i.i = xor i32 %47, 31
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %sub6.i.i.i)
  %cmp21.i.i = icmp ugt i32 %sub6.i.i.i, 16
  br i1 %cmp21.i.i, label %do.body24.i.i, label %do.end29.i.i, !prof !789

do.body24.i.i:                                    ; preds = %cond.end18.i.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2792, 0\0A.popsection", ""() #19, !srcloc !812
  unreachable

do.end29.i.i:                                     ; preds = %cond.end18.i.i
  %sub20.i.i = sub nsw i32 22, %47
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %sub6.i.i.i)
  %cmp30.i.i = icmp ult i32 %sub6.i.i.i, 9
  br i1 %cmp30.i.i, label %do.end29.i.i.if.then38.i.i_crit_edge, label %do.end29.i.i.do.body40.i.i_crit_edge, !prof !789

do.end29.i.i.do.body40.i.i_crit_edge:             ; preds = %do.end29.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body40.i.i

do.end29.i.i.if.then38.i.i_crit_edge:             ; preds = %do.end29.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then38.i.i

if.then38.i.i:                                    ; preds = %do.end29.i.i.if.then38.i.i_crit_edge, %cond.false16.i.i.if.then38.i.i_crit_edge
  br label %do.body40.i.i

do.body40.i.i:                                    ; preds = %if.then38.i.i, %do.end29.i.i.do.body40.i.i_crit_edge
  %i.0.i.i = phi i32 [ 0, %if.then38.i.i ], [ %sub20.i.i, %do.end29.i.i.do.body40.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr [8 x ptr], ptr @jbd2_slab, i32 0, i32 %i.0.i.i
  %48 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %arrayidx.i.i, align 4
  %cmp41.i.i = icmp eq ptr %49, null
  br i1 %cmp41.i.i, label %do.body50.i.i, label %get_slab.exit.i, !prof !789

do.body50.i.i:                                    ; preds = %do.body40.i.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2795, 0\0A.popsection", ""() #19, !srcloc !813
  unreachable

get_slab.exit.i:                                  ; preds = %do.body40.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %call10.i = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef nonnull %49, i32 noundef 3136) #19
  br label %do.body14.i

get_order.exit.i:                                 ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %sub.i)
  %tobool.not.i.i.i = icmp ult i32 %sub.i, 4096
  %shr.i.i156 = lshr i32 %sub.i, 12
  %50 = tail call i32 @llvm.ctlz.i32(i32 %shr.i.i156, i1 true) #19, !range !800
  %sub.i.i.i = sub nuw nsw i32 32, %50
  %cond.i.i.i = select i1 %tobool.not.i.i.i, i32 0, i32 %sub.i.i.i
  %call12.i = tail call i32 @__get_free_pages(i32 noundef 3136, i32 noundef %cond.i.i.i) #19
  %51 = inttoptr i32 %call12.i to ptr
  br label %do.body14.i

do.body14.i:                                      ; preds = %get_order.exit.i, %get_slab.exit.i
  %ptr.0.i = phi ptr [ %call10.i, %get_slab.exit.i ], [ %51, %get_order.exit.i ]
  %52 = ptrtoint ptr %ptr.0.i to i32
  %and16.i = and i32 %sub.i, %52
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and16.i)
  %tobool17.not.i = icmp eq i32 %and16.i, 0
  br i1 %tobool17.not.i, label %jbd2_alloc.exit, label %do.body25.i, !prof !788

do.body25.i:                                      ; preds = %do.body14.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2812, 0\0A.popsection", ""() #19, !srcloc !814
  unreachable

jbd2_alloc.exit:                                  ; preds = %do.body14.i
  %tobool40.not = icmp eq ptr %ptr.0.i, null
  br i1 %tobool40.not, label %if.then41, label %if.end42

if.then41:                                        ; preds = %jbd2_alloc.exit
  %tobool.not.i157 = icmp eq ptr %call11, null
  br i1 %tobool.not.i157, label %if.then41.cleanup85_crit_edge, label %if.then.i158

if.then41.cleanup85_crit_edge:                    ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup85

if.then.i158:                                     ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @__brelse(ptr noundef nonnull %call11) #19
  br label %cleanup85

if.end42:                                         ; preds = %jbd2_alloc.exit
  tail call void @_raw_spin_lock(ptr noundef %b_state_lock) #19
  %53 = ptrtoint ptr %b_frozen_data to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %b_frozen_data, align 4
  %tobool45.not = icmp eq ptr %54, null
  br i1 %tobool45.not, label %cleanup.thread233, label %if.then46

if.then46:                                        ; preds = %if.end42
  %55 = ptrtoint ptr %b_size to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %b_size, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %56)
  %cmp.i159 = icmp ult i32 %56, 4096
  br i1 %cmp.i159, label %cond.false16.i.i166, label %get_order.exit.i196

cond.false16.i.i166:                              ; preds = %if.then46
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %56)
  %cmp.i.i.i165 = icmp ugt i32 %56, 1
  br i1 %cmp.i.i.i165, label %cond.end18.i.i171, label %cond.false16.i.i166.if.then38.i.i176_crit_edge

cond.false16.i.i166.if.then38.i.i176_crit_edge:   ; preds = %cond.false16.i.i166
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then38.i.i176

cond.end18.i.i171:                                ; preds = %cond.false16.i.i166
  %sub.i70.i.i = add nsw i32 %56, -1
  %57 = tail call i32 @llvm.ctlz.i32(i32 %sub.i70.i.i, i1 true) #19, !range !800
  %sub6.i.i.i169 = xor i32 %57, 31
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %sub6.i.i.i169)
  %cmp21.i.i170 = icmp ugt i32 %sub6.i.i.i169, 16
  br i1 %cmp21.i.i170, label %do.body24.i.i172, label %do.end29.i.i175, !prof !789

do.body24.i.i172:                                 ; preds = %cond.end18.i.i171
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2792, 0\0A.popsection", ""() #19, !srcloc !812
  unreachable

do.end29.i.i175:                                  ; preds = %cond.end18.i.i171
  %sub20.i.i173 = sub nsw i32 22, %57
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %sub6.i.i.i169)
  %cmp30.i.i174 = icmp ult i32 %sub6.i.i.i169, 9
  br i1 %cmp30.i.i174, label %do.end29.i.i175.if.then38.i.i176_crit_edge, label %do.end29.i.i175.do.body40.i.i180_crit_edge, !prof !789

do.end29.i.i175.do.body40.i.i180_crit_edge:       ; preds = %do.end29.i.i175
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body40.i.i180

do.end29.i.i175.if.then38.i.i176_crit_edge:       ; preds = %do.end29.i.i175
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then38.i.i176

if.then38.i.i176:                                 ; preds = %do.end29.i.i175.if.then38.i.i176_crit_edge, %cond.false16.i.i166.if.then38.i.i176_crit_edge
  br label %do.body40.i.i180

do.body40.i.i180:                                 ; preds = %if.then38.i.i176, %do.end29.i.i175.do.body40.i.i180_crit_edge
  %i.0.i.i177 = phi i32 [ 0, %if.then38.i.i176 ], [ %sub20.i.i173, %do.end29.i.i175.do.body40.i.i180_crit_edge ]
  %arrayidx.i.i178 = getelementptr [8 x ptr], ptr @jbd2_slab, i32 0, i32 %i.0.i.i177
  %58 = ptrtoint ptr %arrayidx.i.i178 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %arrayidx.i.i178, align 4
  %cmp41.i.i179 = icmp eq ptr %59, null
  br i1 %cmp41.i.i179, label %do.body50.i.i181, label %get_slab.exit.i182, !prof !789

do.body50.i.i181:                                 ; preds = %do.body40.i.i180
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2795, 0\0A.popsection", ""() #19, !srcloc !813
  unreachable

get_slab.exit.i182:                               ; preds = %do.body40.i.i180
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @kmem_cache_free(ptr noundef nonnull %59, ptr noundef nonnull %ptr.0.i) #19
  br label %repeat.backedge

get_order.exit.i196:                              ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #21
  %sub.i.i183 = add i32 %56, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %sub.i.i183)
  %tobool.not.i.i.i191 = icmp ult i32 %sub.i.i183, 4096
  %shr.i.i190 = lshr i32 %sub.i.i183, 12
  %60 = tail call i32 @llvm.ctlz.i32(i32 %shr.i.i190, i1 true) #19, !range !800
  %sub.i.i.i192 = sub nuw nsw i32 32, %60
  %cond.i.i.i193 = select i1 %tobool.not.i.i.i191, i32 0, i32 %sub.i.i.i192
  tail call void @free_pages(i32 noundef %52, i32 noundef %cond.i.i.i193) #19
  br label %repeat.backedge

repeat.backedge:                                  ; preds = %get_order.exit.i196, %get_slab.exit.i182
  br label %repeat

cleanup.thread233:                                ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #21
  %61 = ptrtoint ptr %ptr.0.i to i32
  %62 = ptrtoint ptr %b_frozen_data to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %ptr.0.i, ptr %b_frozen_data, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %63 = load i32, ptr @pgprot_kernel, align 4
  %or.i197 = or i32 %63, 512
  %64 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i.i198 = and i32 %64, -16384
  %65 = inttoptr i32 %and.i.i.i.i.i198 to ptr
  %preempt_count.i.i.i.i199 = getelementptr inbounds %struct.thread_info, ptr %65, i32 0, i32 1
  %66 = ptrtoint ptr %preempt_count.i.i.i.i199 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %preempt_count.i.i.i.i199, align 4
  %add.i.i.i200 = add i32 %67, 1
  store volatile i32 %add.i.i.i200, ptr %preempt_count.i.i.i.i199, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !807
  %68 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i1.i.i201 = and i32 %68, -16384
  %69 = inttoptr i32 %and.i.i.i1.i.i201 to ptr
  %task.i.i.i.i202 = getelementptr inbounds %struct.thread_info, ptr %69, i32 0, i32 2
  %70 = ptrtoint ptr %task.i.i.i.i202 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %task.i.i.i.i202, align 8
  %pagefault_disabled.i.i.i.i203 = getelementptr inbounds %struct.task_struct, ptr %71, i32 0, i32 213
  %72 = ptrtoint ptr %pagefault_disabled.i.i.i.i203 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %pagefault_disabled.i.i.i.i203, align 8
  %inc.i.i.i.i204 = add i32 %73, 1
  store i32 %inc.i.i.i.i204, ptr %pagefault_disabled.i.i.i.i203, align 8
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !808
  %call.i.i205 = tail call ptr @__kmap_local_page_prot(ptr noundef %new_page.0, i32 noundef %or.i197) #19
  %add.ptr51 = getelementptr i8, ptr %call.i.i205, i32 %new_offset.0
  %74 = ptrtoint ptr %b_size to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %b_size, align 8
  %76 = call ptr @memcpy(ptr %ptr.0.i, ptr %add.ptr51, i32 %75)
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i205) #19
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !809
  %77 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i1.i206 = and i32 %77, -16384
  %78 = inttoptr i32 %and.i.i.i1.i206 to ptr
  %task.i.i.i207 = getelementptr inbounds %struct.thread_info, ptr %78, i32 0, i32 2
  %79 = ptrtoint ptr %task.i.i.i207 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %task.i.i.i207, align 8
  %pagefault_disabled.i.i.i208 = getelementptr inbounds %struct.task_struct, ptr %80, i32 0, i32 213
  %81 = ptrtoint ptr %pagefault_disabled.i.i.i208 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %pagefault_disabled.i.i.i208, align 8
  %dec.i.i.i209 = add i32 %82, -1
  store i32 %dec.i.i.i209, ptr %pagefault_disabled.i.i.i208, align 8
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !810
  %83 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i210 = and i32 %83, -16384
  %84 = inttoptr i32 %and.i.i.i.i210 to ptr
  %preempt_count.i.i.i211 = getelementptr inbounds %struct.thread_info, ptr %84, i32 0, i32 1
  %85 = ptrtoint ptr %preempt_count.i.i.i211 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load volatile i32, ptr %preempt_count.i.i.i211, align 4
  %sub.i.i212 = add i32 %86, -1
  store volatile i32 %sub.i.i212, ptr %preempt_count.i.i.i211, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %87 = load ptr, ptr @mem_map, align 4
  %sub59 = add i32 %61, 1073741824
  %shr60 = lshr i32 %sub59, 12
  %add.ptr63 = getelementptr %struct.page, ptr %87, i32 %shr60
  %and64 = and i32 %61, 4095
  %88 = ptrtoint ptr %b_triggers to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %b_triggers, align 4
  %b_frozen_triggers = getelementptr inbounds %struct.journal_head, ptr %jh_in, i32 0, i32 15
  %90 = ptrtoint ptr %b_frozen_triggers to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr %89, ptr %b_frozen_triggers, align 4
  br label %if.end66

if.end66.loopexit:                                ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #21
  %done_copy_out.1.mux.le = select i1 %tobool35.not, i32 %done_copy_out.1, i32 2
  br label %if.end66

if.end66:                                         ; preds = %if.end66.loopexit, %cleanup.thread233
  %done_copy_out.3 = phi i32 [ 2, %cleanup.thread233 ], [ %done_copy_out.1.mux.le, %if.end66.loopexit ]
  %new_page.2 = phi ptr [ %add.ptr63, %cleanup.thread233 ], [ %new_page.0, %if.end66.loopexit ]
  %new_offset.2 = phi i32 [ %and64, %cleanup.thread233 ], [ %new_offset.0, %if.end66.loopexit ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select149)
  %tobool67.not = icmp eq i32 %spec.select149, 0
  br i1 %tobool67.not, label %if.end66.if.end77_crit_edge, label %if.then68

if.end66.if.end77_crit_edge:                      ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end77

if.then68:                                        ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %91 = load i32, ptr @pgprot_kernel, align 4
  %or.i213 = or i32 %91, 512
  %92 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i.i214 = and i32 %92, -16384
  %93 = inttoptr i32 %and.i.i.i.i.i214 to ptr
  %preempt_count.i.i.i.i215 = getelementptr inbounds %struct.thread_info, ptr %93, i32 0, i32 1
  %94 = ptrtoint ptr %preempt_count.i.i.i.i215 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load volatile i32, ptr %preempt_count.i.i.i.i215, align 4
  %add.i.i.i216 = add i32 %95, 1
  store volatile i32 %add.i.i.i216, ptr %preempt_count.i.i.i.i215, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !807
  %96 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i1.i.i217 = and i32 %96, -16384
  %97 = inttoptr i32 %and.i.i.i1.i.i217 to ptr
  %task.i.i.i.i218 = getelementptr inbounds %struct.thread_info, ptr %97, i32 0, i32 2
  %98 = ptrtoint ptr %task.i.i.i.i218 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %task.i.i.i.i218, align 8
  %pagefault_disabled.i.i.i.i219 = getelementptr inbounds %struct.task_struct, ptr %99, i32 0, i32 213
  %100 = ptrtoint ptr %pagefault_disabled.i.i.i.i219 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %pagefault_disabled.i.i.i.i219, align 8
  %inc.i.i.i.i220 = add i32 %101, 1
  store i32 %inc.i.i.i.i220, ptr %pagefault_disabled.i.i.i.i219, align 8
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !808
  %call.i.i221 = tail call ptr @__kmap_local_page_prot(ptr noundef %new_page.2, i32 noundef %or.i213) #19
  %add.ptr70 = getelementptr i8, ptr %call.i.i221, i32 %new_offset.2
  %102 = ptrtoint ptr %add.ptr70 to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 0, ptr %add.ptr70, align 4
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i221) #19
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !809
  %103 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i1.i222 = and i32 %103, -16384
  %104 = inttoptr i32 %and.i.i.i1.i222 to ptr
  %task.i.i.i223 = getelementptr inbounds %struct.thread_info, ptr %104, i32 0, i32 2
  %105 = ptrtoint ptr %task.i.i.i223 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %task.i.i.i223, align 8
  %pagefault_disabled.i.i.i224 = getelementptr inbounds %struct.task_struct, ptr %106, i32 0, i32 213
  %107 = ptrtoint ptr %pagefault_disabled.i.i.i224 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %pagefault_disabled.i.i.i224, align 8
  %dec.i.i.i225 = add i32 %108, -1
  store i32 %dec.i.i.i225, ptr %pagefault_disabled.i.i.i224, align 8
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !810
  %109 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i226 = and i32 %109, -16384
  %110 = inttoptr i32 %and.i.i.i.i226 to ptr
  %preempt_count.i.i.i227 = getelementptr inbounds %struct.thread_info, ptr %110, i32 0, i32 1
  %111 = ptrtoint ptr %preempt_count.i.i.i227 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load volatile i32, ptr %preempt_count.i.i.i227, align 4
  %sub.i.i228 = add i32 %112, -1
  store volatile i32 %sub.i.i228, ptr %preempt_count.i.i.i227, align 4
  br label %if.end77

if.end77:                                         ; preds = %if.then68, %if.end66.if.end77_crit_edge
  tail call void @set_bh_page(ptr noundef %call11, ptr noundef %new_page.2, i32 noundef %new_offset.2) #19
  %113 = ptrtoint ptr %b_size to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %b_size, align 8
  %b_size79 = getelementptr inbounds %struct.buffer_head, ptr %call11, i32 0, i32 4
  %115 = ptrtoint ptr %b_size79 to i32
  call void @__asan_store4_noabort(i32 %115)
  store i32 %114, ptr %b_size79, align 8
  %j_dev = getelementptr inbounds %struct.journal_s, ptr %3, i32 0, i32 32
  %116 = ptrtoint ptr %j_dev to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %j_dev, align 4
  %b_bdev = getelementptr inbounds %struct.buffer_head, ptr %call11, i32 0, i32 6
  %118 = ptrtoint ptr %b_bdev to i32
  call void @__asan_store4_noabort(i32 %118)
  store ptr %117, ptr %b_bdev, align 8
  %b_blocknr = getelementptr inbounds %struct.buffer_head, ptr %call11, i32 0, i32 3
  %119 = ptrtoint ptr %b_blocknr to i32
  call void @__asan_store8_noabort(i32 %119)
  store i64 %blocknr, ptr %b_blocknr, align 8
  %b_private = getelementptr inbounds %struct.buffer_head, ptr %call11, i32 0, i32 8
  %120 = ptrtoint ptr %b_private to i32
  call void @__asan_store4_noabort(i32 %120)
  store ptr %1, ptr %b_private, align 8
  %121 = ptrtoint ptr %call11 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load volatile i32, ptr %call11, align 4
  %123 = and i32 %122, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %123)
  %tobool.not.i = icmp eq i32 %123, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end77.set_buffer_mapped.exit_crit_edge

if.end77.set_buffer_mapped.exit_crit_edge:        ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #21
  br label %set_buffer_mapped.exit

if.then.i:                                        ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @_set_bit(i32 noundef 4, ptr noundef %call11) #19
  br label %set_buffer_mapped.exit

set_buffer_mapped.exit:                           ; preds = %if.then.i, %if.end77.set_buffer_mapped.exit_crit_edge
  %124 = ptrtoint ptr %call11 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load volatile i32, ptr %call11, align 4
  %126 = and i32 %125, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %126)
  %tobool.not.i150 = icmp eq i32 %126, 0
  br i1 %tobool.not.i150, label %if.then.i151, label %set_buffer_mapped.exit.set_buffer_dirty.exit_crit_edge

set_buffer_mapped.exit.set_buffer_dirty.exit_crit_edge: ; preds = %set_buffer_mapped.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %set_buffer_dirty.exit

if.then.i151:                                     ; preds = %set_buffer_mapped.exit
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @_set_bit(i32 noundef 1, ptr noundef %call11) #19
  br label %set_buffer_dirty.exit

set_buffer_dirty.exit:                            ; preds = %if.then.i151, %set_buffer_mapped.exit.set_buffer_dirty.exit_crit_edge
  %127 = ptrtoint ptr %bh_out to i32
  call void @__asan_store4_noabort(i32 %127)
  store ptr %call11, ptr %bh_out, align 4
  %j_list_lock = getelementptr inbounds %struct.journal_s, ptr %3, i32 0, i32 39
  tail call void @_raw_spin_lock(ptr noundef %j_list_lock) #19
  tail call void @__jbd2_journal_file_buffer(ptr noundef %jh_in, ptr noundef %transaction, i32 noundef 3) #19
  tail call void @_raw_spin_unlock(ptr noundef %j_list_lock) #19
  %128 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load volatile i32, ptr %1, align 4
  %130 = and i32 %129, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %130)
  %tobool.not.i152 = icmp eq i32 %130, 0
  br i1 %tobool.not.i152, label %if.then.i153, label %set_buffer_dirty.exit.set_buffer_shadow.exit_crit_edge

set_buffer_dirty.exit.set_buffer_shadow.exit_crit_edge: ; preds = %set_buffer_dirty.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %set_buffer_shadow.exit

if.then.i153:                                     ; preds = %set_buffer_dirty.exit
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @_set_bit(i32 noundef 23, ptr noundef %1) #19
  br label %set_buffer_shadow.exit

set_buffer_shadow.exit:                           ; preds = %if.then.i153, %set_buffer_dirty.exit.set_buffer_shadow.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %b_state_lock) #19
  %or = or i32 %done_copy_out.3, %spec.select149
  br label %cleanup85

cleanup85:                                        ; preds = %set_buffer_shadow.exit, %if.then.i158, %if.then41.cleanup85_crit_edge
  %retval.2 = phi i32 [ %or, %set_buffer_shadow.exit ], [ -12, %if.then41.cleanup85_crit_edge ], [ -12, %if.then.i158 ]
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_buffer_head(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @jbd2_buffer_frozen_trigger(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @jbd2_alloc(i32 noundef %size, i32 noundef %flags) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %sub = add i32 %size, -1
  %0 = tail call i32 @llvm.ctpop.i32(i32 %size), !range !800
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %0)
  %tobool.not = icmp ult i32 %0, 2
  br i1 %tobool.not, label %do.end8, label %do.body3, !prof !788

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2803, 0\0A.popsection", ""() #19, !srcloc !811
  unreachable

do.end8:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %size)
  %cmp = icmp ult i32 %size, 4096
  br i1 %cmp, label %cond.false16.i, label %get_order.exit

cond.false16.i:                                   ; preds = %do.end8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %size)
  %cmp.i.i = icmp ugt i32 %size, 1
  br i1 %cmp.i.i, label %cond.end18.i, label %cond.false16.i.if.then38.i_crit_edge

cond.false16.i.if.then38.i_crit_edge:             ; preds = %cond.false16.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then38.i

cond.end18.i:                                     ; preds = %cond.false16.i
  %1 = tail call i32 @llvm.ctlz.i32(i32 %sub, i1 true) #19, !range !800
  %sub6.i.i = xor i32 %1, 31
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %sub6.i.i)
  %cmp21.i = icmp ugt i32 %sub6.i.i, 16
  br i1 %cmp21.i, label %do.body24.i, label %do.end29.i, !prof !789

do.body24.i:                                      ; preds = %cond.end18.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2792, 0\0A.popsection", ""() #19, !srcloc !812
  unreachable

do.end29.i:                                       ; preds = %cond.end18.i
  %sub20.i = sub nsw i32 22, %1
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %sub6.i.i)
  %cmp30.i = icmp ult i32 %sub6.i.i, 9
  br i1 %cmp30.i, label %do.end29.i.if.then38.i_crit_edge, label %do.end29.i.do.body40.i_crit_edge, !prof !789

do.end29.i.do.body40.i_crit_edge:                 ; preds = %do.end29.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body40.i

do.end29.i.if.then38.i_crit_edge:                 ; preds = %do.end29.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then38.i

if.then38.i:                                      ; preds = %do.end29.i.if.then38.i_crit_edge, %cond.false16.i.if.then38.i_crit_edge
  br label %do.body40.i

do.body40.i:                                      ; preds = %if.then38.i, %do.end29.i.do.body40.i_crit_edge
  %i.0.i = phi i32 [ 0, %if.then38.i ], [ %sub20.i, %do.end29.i.do.body40.i_crit_edge ]
  %arrayidx.i = getelementptr [8 x ptr], ptr @jbd2_slab, i32 0, i32 %i.0.i
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx.i, align 4
  %cmp41.i = icmp eq ptr %3, null
  br i1 %cmp41.i, label %do.body50.i, label %get_slab.exit, !prof !789

do.body50.i:                                      ; preds = %do.body40.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2795, 0\0A.popsection", ""() #19, !srcloc !813
  unreachable

get_slab.exit:                                    ; preds = %do.body40.i
  call void @__sanitizer_cov_trace_pc() #21
  %call10 = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef nonnull %3, i32 noundef %flags) #19
  br label %do.body14

get_order.exit:                                   ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %sub)
  %tobool.not.i.i = icmp ult i32 %sub, 4096
  %shr.i = lshr i32 %sub, 12
  %4 = tail call i32 @llvm.ctlz.i32(i32 %shr.i, i1 true) #19, !range !800
  %sub.i.i = sub nuw nsw i32 32, %4
  %cond.i.i = select i1 %tobool.not.i.i, i32 0, i32 %sub.i.i
  %call12 = tail call i32 @__get_free_pages(i32 noundef %flags, i32 noundef %cond.i.i) #19
  %5 = inttoptr i32 %call12 to ptr
  br label %do.body14

do.body14:                                        ; preds = %get_order.exit, %get_slab.exit
  %ptr.0 = phi ptr [ %call10, %get_slab.exit ], [ %5, %get_order.exit ]
  %6 = ptrtoint ptr %ptr.0 to i32
  %and16 = and i32 %sub, %6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and16)
  %tobool17.not = icmp eq i32 %and16, 0
  br i1 %tobool17.not, label %do.end33, label %do.body25, !prof !788

do.body25:                                        ; preds = %do.body14
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2812, 0\0A.popsection", ""() #19, !srcloc !814
  unreachable

do.end33:                                         ; preds = %do.body14
  call void @__sanitizer_cov_trace_pc() #21
  ret ptr %ptr.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @jbd2_free(ptr noundef %ptr, i32 noundef %size) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %size)
  %cmp = icmp ult i32 %size, 4096
  br i1 %cmp, label %cond.false16.i, label %if.else

cond.false16.i:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %size)
  %cmp.i.i = icmp ugt i32 %size, 1
  br i1 %cmp.i.i, label %cond.end18.i, label %cond.false16.i.if.then38.i_crit_edge

cond.false16.i.if.then38.i_crit_edge:             ; preds = %cond.false16.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then38.i

cond.end18.i:                                     ; preds = %cond.false16.i
  %sub.i70.i = add nsw i32 %size, -1
  %0 = tail call i32 @llvm.ctlz.i32(i32 %sub.i70.i, i1 true) #19, !range !800
  %sub6.i.i = xor i32 %0, 31
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %sub6.i.i)
  %cmp21.i = icmp ugt i32 %sub6.i.i, 16
  br i1 %cmp21.i, label %do.body24.i, label %do.end29.i, !prof !789

do.body24.i:                                      ; preds = %cond.end18.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2792, 0\0A.popsection", ""() #19, !srcloc !812
  unreachable

do.end29.i:                                       ; preds = %cond.end18.i
  %sub20.i = sub nsw i32 22, %0
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %sub6.i.i)
  %cmp30.i = icmp ult i32 %sub6.i.i, 9
  br i1 %cmp30.i, label %do.end29.i.if.then38.i_crit_edge, label %do.end29.i.do.body40.i_crit_edge, !prof !789

do.end29.i.do.body40.i_crit_edge:                 ; preds = %do.end29.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body40.i

do.end29.i.if.then38.i_crit_edge:                 ; preds = %do.end29.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then38.i

if.then38.i:                                      ; preds = %do.end29.i.if.then38.i_crit_edge, %cond.false16.i.if.then38.i_crit_edge
  br label %do.body40.i

do.body40.i:                                      ; preds = %if.then38.i, %do.end29.i.do.body40.i_crit_edge
  %i.0.i = phi i32 [ 0, %if.then38.i ], [ %sub20.i, %do.end29.i.do.body40.i_crit_edge ]
  %arrayidx.i = getelementptr [8 x ptr], ptr @jbd2_slab, i32 0, i32 %i.0.i
  %1 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx.i, align 4
  %cmp41.i = icmp eq ptr %2, null
  br i1 %cmp41.i, label %do.body50.i, label %get_slab.exit, !prof !789

do.body50.i:                                      ; preds = %do.body40.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2795, 0\0A.popsection", ""() #19, !srcloc !813
  unreachable

get_slab.exit:                                    ; preds = %do.body40.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @kmem_cache_free(ptr noundef nonnull %2, ptr noundef %ptr) #19
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %3 = ptrtoint ptr %ptr to i32
  %sub.i = add i32 %size, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %sub.i)
  %tobool.not.i.i = icmp ult i32 %sub.i, 4096
  %shr.i = lshr i32 %sub.i, 12
  %4 = tail call i32 @llvm.ctlz.i32(i32 %shr.i, i1 true) #19, !range !800
  %sub.i.i = sub nuw nsw i32 32, %4
  %cond.i.i = select i1 %tobool.not.i.i, i32 0, i32 %sub.i.i
  tail call void @free_pages(i32 noundef %3, i32 noundef %cond.i.i) #19
  br label %if.end

if.end:                                           ; preds = %if.else, %get_slab.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @set_bh_page(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__jbd2_journal_file_buffer(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__jbd2_log_start_commit(ptr noundef %journal, i32 noundef %target) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_commit_request = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 44
  %0 = ptrtoint ptr %j_commit_request to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %j_commit_request, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %target)
  %cmp = icmp eq i32 %1, %target
  br i1 %cmp, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end:                                           ; preds = %entry
  %j_running_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 10
  %2 = ptrtoint ptr %j_running_transaction to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %j_running_transaction, align 8
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.end.if.else_crit_edge, label %land.lhs.true

if.end.if.else_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.else

land.lhs.true:                                    ; preds = %if.end
  %t_tid = getelementptr inbounds %struct.transaction_s, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %t_tid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %t_tid, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %target)
  %cmp2 = icmp eq i32 %5, %target
  br i1 %cmp2, label %if.then3, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.else

if.then3:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  %6 = ptrtoint ptr %j_commit_request to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %target, ptr %j_commit_request, align 8
  %j_commit_sequence = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 43
  %7 = ptrtoint ptr %j_commit_sequence to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %j_commit_sequence, align 4
  tail call void (i32, ptr, ptr, i32, ptr, ...) @__jbd2_debug(i32 noundef 1, ptr noundef nonnull @.str.2, ptr noundef nonnull @__func__.__jbd2_log_start_commit, i32 noundef 505, ptr noundef nonnull @.str.3, i32 noundef %target, i32 noundef %8)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %9 = load volatile i32, ptr @jiffies, align 128
  %10 = ptrtoint ptr %j_running_transaction to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %j_running_transaction, align 8
  %t_requested = getelementptr inbounds %struct.transaction_s, ptr %11, i32 0, i32 15
  %12 = ptrtoint ptr %t_requested to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %9, ptr %t_requested, align 8
  %j_wait_commit = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 15
  tail call void @__wake_up(ptr noundef %j_wait_commit, i32 noundef 3, i32 noundef 1, ptr noundef null) #19
  br label %return

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %if.end.if.else_crit_edge
  %13 = xor i32 %1, -1
  %14 = add i32 %13, %target
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %14)
  %tobool8.not = icmp sgt i32 %14, -1
  br i1 %tobool8.not, label %land.end, label %if.else.return_crit_edge

if.else.return_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

land.end:                                         ; preds = %if.else
  %.b72 = load i1, ptr @__jbd2_log_start_commit.__already_done, align 1
  br i1 %.b72, label %land.end.return_crit_edge, label %if.then15, !prof !788

land.end.return_crit_edge:                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.then15:                                        ; preds = %land.end
  store i1 true, ptr @__jbd2_log_start_commit.__already_done, align 1
  %j_commit_sequence26 = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 43
  %15 = ptrtoint ptr %j_commit_sequence26 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %j_commit_sequence26, align 4
  br i1 %tobool.not, label %if.then15.cond.end_crit_edge, label %cond.true

if.then15.cond.end_crit_edge:                     ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #21
  br label %cond.end

cond.true:                                        ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #21
  %t_tid30 = getelementptr inbounds %struct.transaction_s, ptr %3, i32 0, i32 1
  %17 = ptrtoint ptr %t_tid30 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %t_tid30, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.then15.cond.end_crit_edge
  %cond = phi i32 [ %18, %cond.true ], [ 0, %if.then15.cond.end_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 517, i32 noundef 9, ptr noundef nonnull @.str.4, i32 noundef %1, i32 noundef %16, i32 noundef %target, i32 noundef %cond) #19
  br label %return

return:                                           ; preds = %cond.end, %land.end.return_crit_edge, %if.else.return_crit_edge, %if.then3, %entry.return_crit_edge
  %retval.0 = phi i32 [ 1, %if.then3 ], [ 0, %entry.return_crit_edge ], [ 0, %land.end.return_crit_edge ], [ 0, %cond.end ], [ 0, %if.else.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__jbd2_journal_force_commit(ptr noundef %journal) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_read_lock(ptr noundef %j_state_lock) #19
  %j_running_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 10
  %0 = ptrtoint ptr %j_running_transaction to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %j_running_transaction, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end10_crit_edge, label %land.lhs.true

entry.if.end10_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end10

land.lhs.true:                                    ; preds = %entry
  %2 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task, align 8
  %journal_info = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 146
  %6 = ptrtoint ptr %journal_info to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %journal_info, align 4
  %tobool1.not = icmp eq ptr %7, null
  br i1 %tobool1.not, label %if.end14, label %land.lhs.true.if.end10_crit_edge

land.lhs.true.if.end10_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end10

if.end10:                                         ; preds = %land.lhs.true.if.end10_crit_edge, %entry.if.end10_crit_edge
  %j_committing_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 11
  %8 = ptrtoint ptr %j_committing_transaction to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %j_committing_transaction, align 4
  %tobool11.not = icmp eq ptr %9, null
  br i1 %tobool11.not, label %if.then12, label %if.end14.thread

if.end14.thread:                                  ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #21
  %t_tid1550 = getelementptr inbounds %struct.transaction_s, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %t_tid1550 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %t_tid1550, align 4
  tail call void @_raw_read_unlock(ptr noundef %j_state_lock) #19
  br label %if.end20

if.then12:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @_raw_read_unlock(ptr noundef %j_state_lock) #19
  br label %cleanup

if.end14:                                         ; preds = %land.lhs.true
  %j_commit_request = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 44
  %12 = ptrtoint ptr %j_commit_request to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %j_commit_request, align 8
  %t_tid = getelementptr inbounds %struct.transaction_s, ptr %1, i32 0, i32 1
  %14 = ptrtoint ptr %t_tid to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %t_tid, align 4
  %16 = xor i32 %13, -1
  %17 = add i32 %15, %16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool4.not = icmp slt i32 %17, 0
  tail call void @_raw_read_unlock(ptr noundef %j_state_lock) #19
  br i1 %tobool4.not, label %if.end14.if.end20_crit_edge, label %if.then18

if.end14.if.end20_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end20

if.then18:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  %call.i = tail call i32 @__jbd2_log_start_commit(ptr noundef %journal, i32 noundef %15) #19
  tail call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end14.if.end20_crit_edge, %if.end14.thread
  %18 = phi i32 [ %11, %if.end14.thread ], [ %15, %if.then18 ], [ %15, %if.end14.if.end20_crit_edge ]
  %call21 = tail call i32 @jbd2_log_wait_commit(ptr noundef %journal, i32 noundef %18)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  %spec.store.select = select i1 %tobool22.not, i32 1, i32 %call21
  br label %cleanup

cleanup:                                          ; preds = %if.end20, %if.then12
  %retval.0 = phi i32 [ %spec.store.select, %if.end20 ], [ 0, %if.then12 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_trans_will_send_data_barrier(ptr noundef %journal, i32 noundef %tid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %journal, align 8
  %and = and i32 %1, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_read_lock(ptr noundef %j_state_lock) #19
  %j_commit_sequence = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 43
  %2 = ptrtoint ptr %j_commit_sequence to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %j_commit_sequence, align 4
  %4 = xor i32 %3, -1
  %5 = add i32 %4, %tid
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %5)
  %tobool1.not = icmp sgt i32 %5, -1
  br i1 %tobool1.not, label %if.end3, label %if.end.out_crit_edge

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %out

if.end3:                                          ; preds = %if.end
  %j_committing_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 11
  %6 = ptrtoint ptr %j_committing_transaction to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %j_committing_transaction, align 4
  %tobool4.not = icmp eq ptr %7, null
  br i1 %tobool4.not, label %if.end3.out_crit_edge, label %lor.lhs.false

if.end3.out_crit_edge:                            ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #21
  br label %out

lor.lhs.false:                                    ; preds = %if.end3
  %t_tid = getelementptr inbounds %struct.transaction_s, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %t_tid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %t_tid, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %tid)
  %cmp.not = icmp eq i32 %9, %tid
  br i1 %cmp.not, label %if.end6, label %lor.lhs.false.out_crit_edge

lor.lhs.false.out_crit_edge:                      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %out

if.end6:                                          ; preds = %lor.lhs.false
  %j_fs_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 36
  %10 = ptrtoint ptr %j_fs_dev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %j_fs_dev, align 8
  %j_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 32
  %12 = ptrtoint ptr %j_dev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %j_dev, align 4
  %cmp7.not = icmp eq ptr %11, %13
  br i1 %cmp7.not, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.end6
  %t_need_data_flush = getelementptr inbounds %struct.transaction_s, ptr %7, i32 0, i32 26
  %14 = ptrtoint ptr %t_need_data_flush to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %t_need_data_flush, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool9.not = icmp eq i32 %15, 0
  br i1 %tobool9.not, label %if.then8.out_crit_edge, label %lor.lhs.false10

if.then8.out_crit_edge:                           ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #21
  br label %out

lor.lhs.false10:                                  ; preds = %if.then8
  %t_state = getelementptr inbounds %struct.transaction_s, ptr %7, i32 0, i32 2
  %16 = ptrtoint ptr %t_state to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %t_state, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %17)
  %cmp11 = icmp ugt i32 %17, 4
  br i1 %cmp11, label %lor.lhs.false10.out_crit_edge, label %lor.lhs.false10.if.end18_crit_edge

lor.lhs.false10.if.end18_crit_edge:               ; preds = %lor.lhs.false10
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end18

lor.lhs.false10.out_crit_edge:                    ; preds = %lor.lhs.false10
  call void @__sanitizer_cov_trace_pc() #21
  br label %out

if.else:                                          ; preds = %if.end6
  %t_state14 = getelementptr inbounds %struct.transaction_s, ptr %7, i32 0, i32 2
  %18 = ptrtoint ptr %t_state14 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %t_state14, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %19)
  %cmp15 = icmp ugt i32 %19, 5
  br i1 %cmp15, label %if.else.out_crit_edge, label %if.else.if.end18_crit_edge

if.else.if.end18_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end18

if.else.out_crit_edge:                            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %out

if.end18:                                         ; preds = %if.else.if.end18_crit_edge, %lor.lhs.false10.if.end18_crit_edge
  br label %out

out:                                              ; preds = %if.end18, %if.else.out_crit_edge, %lor.lhs.false10.out_crit_edge, %if.then8.out_crit_edge, %lor.lhs.false.out_crit_edge, %if.end3.out_crit_edge, %if.end.out_crit_edge
  %ret.0 = phi i32 [ 0, %if.end.out_crit_edge ], [ 0, %lor.lhs.false10.out_crit_edge ], [ 1, %if.end18 ], [ 0, %if.then8.out_crit_edge ], [ 0, %if.else.out_crit_edge ], [ 1, %lor.lhs.false.out_crit_edge ], [ 1, %if.end3.out_crit_edge ]
  tail call void @_raw_read_unlock(ptr noundef %j_state_lock) #19
  br label %cleanup

cleanup:                                          ; preds = %out, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %out ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_wait_entry(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prepare_to_wait_event(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_fc_begin_commit(ptr noundef %journal, i32 noundef %tid) #0 align 64 {
entry:
  %wait = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %journal, align 8
  %and.i = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.end, label %entry.return_crit_edge, !prof !788

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end:                                           ; preds = %entry
  %j_stats = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 67
  %2 = ptrtoint ptr %j_stats to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %j_stats, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool3.not = icmp eq i32 %3, 0
  br i1 %tobool3.not, label %if.end.return_crit_edge, label %if.end5

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end5:                                          ; preds = %if.end
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  %j_commit_sequence = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 43
  %4 = ptrtoint ptr %j_commit_sequence to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %j_commit_sequence, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %tid)
  %cmp.not = icmp ult i32 %5, %tid
  br i1 %cmp.not, label %if.end8, label %if.then6

if.then6:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  br label %return

if.end8:                                          ; preds = %if.end5
  %6 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %journal, align 8
  %8 = and i32 %7, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %if.end20, label %if.then13

if.then13:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %wait) #19
  %10 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 1
  %11 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 2
  %12 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3
  %13 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3, i32 1
  %14 = ptrtoint ptr %wait to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %wait, align 4
  %15 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i35 = and i32 %15, -16384
  %16 = inttoptr i32 %and.i35 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %task, align 8
  %19 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %18, ptr %10, align 4
  %20 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr @autoremove_wake_function, ptr %11, align 4
  %21 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %12, ptr %12, align 4
  %22 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %12, ptr %13, align 4
  %j_fc_wait = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 18
  call void @prepare_to_wait(ptr noundef %j_fc_wait, ptr noundef nonnull %wait, i32 noundef 2) #19
  call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  call void @schedule() #19
  call void @finish_wait(ptr noundef %j_fc_wait, ptr noundef nonnull %wait) #19
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %wait) #19
  br label %return

if.end20:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #21
  %or = or i32 %7, 256
  %23 = ptrtoint ptr %journal to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %or, ptr %journal, align 8
  tail call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  tail call void @jbd2_journal_lock_updates(ptr noundef %journal) #19
  br label %return

return:                                           ; preds = %if.end20, %if.then13, %if.then6, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -114, %if.then6 ], [ -114, %if.then13 ], [ 0, %if.end20 ], [ -5, %entry.return_crit_edge ], [ -22, %if.end.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @autoremove_wake_function(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @prepare_to_wait(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_fc_end_commit(ptr noundef %journal) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @jbd2_journal_unlock_updates(ptr noundef %journal) #19
  %j_fc_cleanup_callback.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 73
  %0 = ptrtoint ptr %j_fc_cleanup_callback.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %j_fc_cleanup_callback.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.__jbd2_fc_end_commit.exit_crit_edge, label %if.then.i

entry.__jbd2_fc_end_commit.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %__jbd2_fc_end_commit.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void %1(ptr noundef %journal, i32 noundef 0, i32 noundef 0) #19
  br label %__jbd2_fc_end_commit.exit

__jbd2_fc_end_commit.exit:                        ; preds = %if.then.i, %entry.__jbd2_fc_end_commit.exit_crit_edge
  %j_state_lock.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_write_lock(ptr noundef %j_state_lock.i) #19
  %2 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %journal, align 8
  %and.i = and i32 %3, -257
  store i32 %and.i, ptr %journal, align 8
  tail call void @_raw_write_unlock(ptr noundef %j_state_lock.i) #19
  %j_fc_wait.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 18
  tail call void @__wake_up(ptr noundef %j_fc_wait.i, i32 noundef 3, i32 noundef 1, ptr noundef null) #19
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_fc_end_commit_fallback(ptr noundef %journal) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_read_lock(ptr noundef %j_state_lock) #19
  %j_running_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 10
  %0 = ptrtoint ptr %j_running_transaction to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %j_running_transaction, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %t_tid = getelementptr inbounds %struct.transaction_s, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %t_tid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %t_tid, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi i32 [ %3, %cond.true ], [ 0, %entry.cond.end_crit_edge ]
  tail call void @_raw_read_unlock(ptr noundef %j_state_lock) #19
  tail call void @jbd2_journal_unlock_updates(ptr noundef %journal) #19
  %j_fc_cleanup_callback.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 73
  %4 = ptrtoint ptr %j_fc_cleanup_callback.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %j_fc_cleanup_callback.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %cond.end.__jbd2_fc_end_commit.exit_crit_edge, label %if.then.i

cond.end.__jbd2_fc_end_commit.exit_crit_edge:     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %__jbd2_fc_end_commit.exit

if.then.i:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #21
  tail call void %5(ptr noundef %journal, i32 noundef 0, i32 noundef %cond) #19
  br label %__jbd2_fc_end_commit.exit

__jbd2_fc_end_commit.exit:                        ; preds = %if.then.i, %cond.end.__jbd2_fc_end_commit.exit_crit_edge
  tail call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  %6 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %journal, align 8
  %and.i = and i32 %7, -769
  %or.i = or i32 %and.i, 512
  store i32 %or.i, ptr %journal, align 8
  tail call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  %j_fc_wait.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 18
  tail call void @__wake_up(ptr noundef %j_fc_wait.i, i32 noundef 3, i32 noundef 1, ptr noundef null) #19
  %call.i = tail call i32 @jbd2_complete_transaction(ptr noundef %journal, i32 noundef %cond) #19
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_transaction_committed(ptr noundef %journal, i32 noundef %tid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_read_lock(ptr noundef %j_state_lock) #19
  %j_running_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 10
  %0 = ptrtoint ptr %j_running_transaction to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %j_running_transaction, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %t_tid = getelementptr inbounds %struct.transaction_s, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %t_tid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %t_tid, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %tid)
  %cmp = icmp ne i32 %3, %tid
  %spec.select = zext i1 %cmp to i32
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry.if.end_crit_edge
  %ret.0 = phi i32 [ 1, %entry.if.end_crit_edge ], [ %spec.select, %land.lhs.true ]
  %j_committing_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 11
  %4 = ptrtoint ptr %j_committing_transaction to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %j_committing_transaction, align 4
  %tobool2.not = icmp eq ptr %5, null
  br i1 %tobool2.not, label %if.end.if.end8_crit_edge, label %land.lhs.true3

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end8

land.lhs.true3:                                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %t_tid5 = getelementptr inbounds %struct.transaction_s, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %t_tid5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %t_tid5, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %tid)
  %cmp6 = icmp eq i32 %7, %tid
  %spec.select17 = select i1 %cmp6, i32 0, i32 %ret.0
  br label %if.end8

if.end8:                                          ; preds = %land.lhs.true3, %if.end.if.end8_crit_edge
  %ret.1 = phi i32 [ %ret.0, %if.end.if.end8_crit_edge ], [ %spec.select17, %land.lhs.true3 ]
  tail call void @_raw_read_unlock(ptr noundef %j_state_lock) #19
  ret i32 %ret.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_complete_transaction(ptr noundef %journal, i32 noundef %tid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_read_lock(ptr noundef %j_state_lock) #19
  %j_running_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 10
  %0 = ptrtoint ptr %j_running_transaction to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %j_running_transaction, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.else_crit_edge, label %land.lhs.true

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.else

land.lhs.true:                                    ; preds = %entry
  %t_tid = getelementptr inbounds %struct.transaction_s, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %t_tid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %t_tid, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %tid)
  %cmp = icmp eq i32 %3, %tid
  br i1 %cmp, label %if.then, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.else

if.then:                                          ; preds = %land.lhs.true
  %j_commit_request = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 44
  %4 = ptrtoint ptr %j_commit_request to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %j_commit_request, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %tid)
  %cmp2.not = icmp eq i32 %5, %tid
  tail call void @_raw_read_unlock(ptr noundef %j_state_lock) #19
  br i1 %cmp2.not, label %if.then.wait_commit_crit_edge, label %if.then3

if.then.wait_commit_crit_edge:                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #21
  br label %wait_commit

if.then3:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  %call.i = tail call i32 @__jbd2_log_start_commit(ptr noundef %journal, i32 noundef %tid) #19
  tail call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  br label %wait_commit

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %entry.if.else_crit_edge
  %j_committing_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 11
  %6 = ptrtoint ptr %j_committing_transaction to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %j_committing_transaction, align 4
  %tobool5.not = icmp eq ptr %7, null
  br i1 %tobool5.not, label %if.else.if.then15.critedge_crit_edge, label %land.lhs.true6

if.else.if.then15.critedge_crit_edge:             ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then15.critedge

land.lhs.true6:                                   ; preds = %if.else
  %t_tid8 = getelementptr inbounds %struct.transaction_s, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %t_tid8 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %t_tid8, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %tid)
  %cmp9 = icmp eq i32 %9, %tid
  br i1 %cmp9, label %wait_commit.critedge, label %land.lhs.true6.if.then15.critedge_crit_edge

land.lhs.true6.if.then15.critedge_crit_edge:      ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then15.critedge

if.then15.critedge:                               ; preds = %land.lhs.true6.if.then15.critedge_crit_edge, %if.else.if.then15.critedge_crit_edge
  tail call void @_raw_read_unlock(ptr noundef %j_state_lock) #19
  br label %cleanup

wait_commit.critedge:                             ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @_raw_read_unlock(ptr noundef %j_state_lock) #19
  br label %wait_commit

wait_commit:                                      ; preds = %wait_commit.critedge, %if.then3, %if.then.wait_commit_crit_edge
  %call17 = tail call i32 @jbd2_log_wait_commit(ptr noundef %journal, i32 noundef %tid)
  br label %cleanup

cleanup:                                          ; preds = %wait_commit, %if.then15.critedge
  %retval.0 = phi i32 [ %call17, %wait_commit ], [ 0, %if.then15.critedge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_journal_next_log_block(ptr noundef %journal, ptr nocapture noundef writeonly %retp) local_unnamed_addr #0 align 64 {
entry:
  %block.i = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  %j_free = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 26
  %0 = ptrtoint ptr %j_free to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %j_free, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %cmp = icmp ult i32 %1, 2
  br i1 %cmp, label %do.body3, label %do.end8, !prof !789

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 861, 0\0A.popsection", ""() #19, !srcloc !815
  unreachable

do.end8:                                          ; preds = %entry
  %j_head = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 24
  %2 = ptrtoint ptr %j_head to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %j_head, align 4
  %inc = add i32 %3, 1
  store i32 %inc, ptr %j_head, align 4
  %dec = add i32 %1, -1
  %4 = ptrtoint ptr %j_free to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %dec, ptr %j_free, align 4
  %j_last = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 28
  %5 = ptrtoint ptr %j_last to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %j_last, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc, i32 %6)
  %cmp12 = icmp eq i32 %inc, %6
  br i1 %cmp12, label %if.then13, label %do.end8.if.end15_crit_edge

do.end8.if.end15_crit_edge:                       ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end15

if.then13:                                        ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #21
  %j_first = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 27
  %7 = ptrtoint ptr %j_first to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %j_first, align 8
  %9 = ptrtoint ptr %j_head to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %j_head, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %do.end8.if.end15_crit_edge
  tail call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %block.i) #19
  %j_inode.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 40
  %10 = ptrtoint ptr %j_inode.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %j_inode.i, align 8
  %tobool.not.i = icmp eq ptr %11, null
  %conv8.i = zext i32 %3 to i64
  br i1 %tobool.not.i, label %if.else7.i, label %if.then.i

if.then.i:                                        ; preds = %if.end15
  %12 = ptrtoint ptr %block.i to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %conv8.i, ptr %block.i, align 8
  %call.i = call i32 @bmap(ptr noundef nonnull %11, ptr noundef nonnull %block.i) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool3.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool3.not.i, label %lor.lhs.false.i, label %if.then.i.do.end.i_crit_edge

if.then.i.do.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end.i

lor.lhs.false.i:                                  ; preds = %if.then.i
  %13 = ptrtoint ptr %block.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %block.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %14)
  %tobool4.not.i = icmp eq i64 %14, 0
  br i1 %tobool4.not.i, label %lor.lhs.false.i.do.end.i_crit_edge, label %if.else.i

lor.lhs.false.i.do.end.i_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end.i

do.end.i:                                         ; preds = %lor.lhs.false.i.do.end.i_crit_edge, %if.then.i.do.end.i_crit_edge
  %j_devname.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 35
  %call6.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.9, i32 noundef %3, ptr noundef %j_devname.i) #22
  call void @jbd2_journal_abort(ptr noundef %journal, i32 noundef -5) #19
  br label %jbd2_journal_bmap.exit

if.else.i:                                        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #21
  %15 = ptrtoint ptr %retp to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %retp, align 8
  br label %jbd2_journal_bmap.exit

if.else7.i:                                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #21
  %16 = ptrtoint ptr %retp to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %conv8.i, ptr %retp, align 8
  br label %jbd2_journal_bmap.exit

jbd2_journal_bmap.exit:                           ; preds = %if.else7.i, %if.else.i, %do.end.i
  %err.0.i = phi i32 [ -5, %do.end.i ], [ 0, %if.else.i ], [ 0, %if.else7.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %block.i) #19
  ret i32 %err.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_journal_bmap(ptr noundef %journal, i32 noundef %blocknr, ptr nocapture noundef writeonly %retp) local_unnamed_addr #0 align 64 {
entry:
  %block = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %block) #19
  %j_inode = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 40
  %0 = ptrtoint ptr %j_inode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %j_inode, align 8
  %tobool.not = icmp eq ptr %1, null
  %conv8 = zext i32 %blocknr to i64
  br i1 %tobool.not, label %if.else7, label %if.then

if.then:                                          ; preds = %entry
  %2 = ptrtoint ptr %block to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 %conv8, ptr %block, align 8
  %call = call i32 @bmap(ptr noundef nonnull %1, ptr noundef nonnull %block) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool3.not = icmp eq i32 %call, 0
  br i1 %tobool3.not, label %lor.lhs.false, label %if.then.do.end_crit_edge

if.then.do.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end

lor.lhs.false:                                    ; preds = %if.then
  %3 = ptrtoint ptr %block to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %block, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %4)
  %tobool4.not = icmp eq i64 %4, 0
  br i1 %tobool4.not, label %lor.lhs.false.do.end_crit_edge, label %if.else

lor.lhs.false.do.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end

do.end:                                           ; preds = %lor.lhs.false.do.end_crit_edge, %if.then.do.end_crit_edge
  %j_devname = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 35
  %call6 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.9, i32 noundef %blocknr, ptr noundef %j_devname) #22
  call void @jbd2_journal_abort(ptr noundef %journal, i32 noundef -5)
  br label %if.end9

if.else:                                          ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  %5 = ptrtoint ptr %retp to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %4, ptr %retp, align 8
  br label %if.end9

if.else7:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %6 = ptrtoint ptr %retp to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 %conv8, ptr %retp, align 8
  br label %if.end9

if.end9:                                          ; preds = %if.else7, %if.else, %do.end
  %err.0 = phi i32 [ -5, %do.end ], [ 0, %if.else ], [ 0, %if.else7 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %block) #19
  ret i32 %err.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_fc_get_buf(ptr noundef %journal, ptr nocapture noundef writeonly %bh_out) #0 align 64 {
entry:
  %block.i = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %bh_out to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %bh_out, align 4
  %j_fc_off = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 30
  %1 = ptrtoint ptr %j_fc_off to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %j_fc_off, align 4
  %j_fc_first = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 29
  %3 = ptrtoint ptr %j_fc_first to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %j_fc_first, align 8
  %add = add i32 %4, %2
  %j_fc_last = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 31
  %5 = ptrtoint ptr %j_fc_last to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %j_fc_last, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %6)
  %cmp = icmp ult i32 %add, %6
  br i1 %cmp, label %if.end6, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end6:                                          ; preds = %entry
  %inc = add i32 %2, 1
  %7 = ptrtoint ptr %j_fc_off to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %inc, ptr %j_fc_off, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %block.i) #19
  %j_inode.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 40
  %8 = ptrtoint ptr %j_inode.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %j_inode.i, align 8
  %tobool.not.i = icmp eq ptr %9, null
  %conv8.i = zext i32 %add to i64
  br i1 %tobool.not.i, label %if.end6.if.end9_crit_edge, label %if.then.i

if.end6.if.end9_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end9

if.then.i:                                        ; preds = %if.end6
  %10 = ptrtoint ptr %block.i to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %conv8.i, ptr %block.i, align 8
  %call.i = call i32 @bmap(ptr noundef nonnull %9, ptr noundef nonnull %block.i) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool3.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool3.not.i, label %lor.lhs.false.i, label %if.then.i.jbd2_journal_bmap.exit_crit_edge

if.then.i.jbd2_journal_bmap.exit_crit_edge:       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_journal_bmap.exit

lor.lhs.false.i:                                  ; preds = %if.then.i
  %11 = ptrtoint ptr %block.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %block.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %12)
  %tobool4.not.i = icmp eq i64 %12, 0
  br i1 %tobool4.not.i, label %lor.lhs.false.i.jbd2_journal_bmap.exit_crit_edge, label %lor.lhs.false.i.if.end9_crit_edge

lor.lhs.false.i.if.end9_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end9

lor.lhs.false.i.jbd2_journal_bmap.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_journal_bmap.exit

jbd2_journal_bmap.exit:                           ; preds = %lor.lhs.false.i.jbd2_journal_bmap.exit_crit_edge, %if.then.i.jbd2_journal_bmap.exit_crit_edge
  %j_devname.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 35
  %call6.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.9, i32 noundef %add, ptr noundef %j_devname.i) #22
  call void @jbd2_journal_abort(ptr noundef %journal, i32 noundef -5) #19
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %block.i) #19
  br label %cleanup

if.end9:                                          ; preds = %lor.lhs.false.i.if.end9_crit_edge, %if.end6.if.end9_crit_edge
  %pblock.0.ph = phi i64 [ %conv8.i, %if.end6.if.end9_crit_edge ], [ %12, %lor.lhs.false.i.if.end9_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %block.i) #19
  %j_dev = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 32
  %13 = ptrtoint ptr %j_dev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %j_dev, align 4
  %j_blocksize = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 33
  %15 = ptrtoint ptr %j_blocksize to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %j_blocksize, align 8
  %call.i34 = call ptr @__getblk_gfp(ptr noundef %14, i64 noundef %pblock.0.ph, i32 noundef %16, i32 noundef 8) #19
  %tobool11.not = icmp eq ptr %call.i34, null
  br i1 %tobool11.not, label %if.end9.cleanup_crit_edge, label %if.end13

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end13:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #21
  %j_fc_wbuf = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 55
  %17 = ptrtoint ptr %j_fc_wbuf to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %j_fc_wbuf, align 8
  %arrayidx = getelementptr ptr, ptr %18, i32 %2
  %19 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call.i34, ptr %arrayidx, align 4
  %20 = ptrtoint ptr %bh_out to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %call.i34, ptr %bh_out, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end9.cleanup_crit_edge, %jbd2_journal_bmap.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end13 ], [ -5, %jbd2_journal_bmap.exit ], [ -12, %if.end9.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_fc_wait_bufs(ptr nocapture noundef readonly %journal, i32 noundef %num_blks) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_fc_off1 = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 30
  %0 = ptrtoint ptr %j_fc_off1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %j_fc_off1, align 4
  %sub2 = sub i32 %1, %num_blks
  %j_fc_wbuf = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 55
  br label %for.cond

for.cond:                                         ; preds = %wait_on_buffer.exit.for.cond_crit_edge, %entry
  %i.0.in = phi i32 [ %1, %entry ], [ %i.0, %wait_on_buffer.exit.for.cond_crit_edge ]
  %i.0 = add i32 %i.0.in, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0, i32 %sub2)
  %cmp.not = icmp slt i32 %i.0, %sub2
  br i1 %cmp.not, label %for.cond.cleanup_crit_edge, label %for.body

for.cond.cleanup_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

for.body:                                         ; preds = %for.cond
  %2 = ptrtoint ptr %j_fc_wbuf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %j_fc_wbuf, align 8
  %arrayidx = getelementptr ptr, ptr %3, i32 %i.0
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  tail call void @__might_sleep(ptr noundef nonnull @.str.104, i32 noundef 354) #19
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %5, align 4
  %8 = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i = icmp eq i32 %8, 0
  br i1 %tobool.not.i, label %for.body.wait_on_buffer.exit_crit_edge, label %if.then.i

for.body.wait_on_buffer.exit_crit_edge:           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #21
  br label %wait_on_buffer.exit

if.then.i:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @__wait_on_buffer(ptr noundef %5) #19
  br label %wait_on_buffer.exit

wait_on_buffer.exit:                              ; preds = %if.then.i, %for.body.wait_on_buffer.exit_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !816
  %b_count.i = getelementptr inbounds %struct.buffer_head, ptr %5, i32 0, i32 11
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %b_count.i, i32 noundef 4) #19
  tail call void @llvm.prefetch.p0(ptr %b_count.i, i32 1, i32 3, i32 1) #19
  %9 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %b_count.i, ptr %b_count.i, i32 1, ptr elementtype(i32) %b_count.i) #19, !srcloc !817
  %10 = ptrtoint ptr %j_fc_wbuf to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %j_fc_wbuf, align 8
  %arrayidx4 = getelementptr ptr, ptr %11, i32 %i.0
  %12 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %arrayidx4, align 4
  %13 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %5, align 4
  %and1.i.i = and i32 %14, 1
  %tobool.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not, label %wait_on_buffer.exit.cleanup_crit_edge, label %wait_on_buffer.exit.for.cond_crit_edge, !prof !789

wait_on_buffer.exit.for.cond_crit_edge:           ; preds = %wait_on_buffer.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.cond

wait_on_buffer.exit.cleanup_crit_edge:            ; preds = %wait_on_buffer.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

cleanup:                                          ; preds = %wait_on_buffer.exit.cleanup_crit_edge, %for.cond.cleanup_crit_edge
  %retval.0 = phi i32 [ -5, %wait_on_buffer.exit.cleanup_crit_edge ], [ 0, %for.cond.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_fc_release_bufs(ptr nocapture noundef readonly %journal) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_fc_off1 = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 30
  %0 = ptrtoint ptr %j_fc_off1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %j_fc_off1, align 4
  %j_fc_wbuf = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 55
  %i.010 = add i32 %1, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %i.010)
  %cmp11 = icmp sgt i32 %i.010, -1
  br i1 %cmp11, label %entry.for.body_crit_edge, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %entry.for.body_crit_edge
  %i.012 = phi i32 [ %i.0, %if.end.for.body_crit_edge ], [ %i.010, %entry.for.body_crit_edge ]
  %2 = ptrtoint ptr %j_fc_wbuf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %j_fc_wbuf, align 8
  %arrayidx = getelementptr ptr, ptr %3, i32 %i.012
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %for.body.for.end_crit_edge, label %if.end

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end

if.end:                                           ; preds = %for.body
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !816
  %b_count.i = getelementptr inbounds %struct.buffer_head, ptr %5, i32 0, i32 11
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %b_count.i, i32 noundef 4) #19
  tail call void @llvm.prefetch.p0(ptr %b_count.i, i32 1, i32 3, i32 1) #19
  %6 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %b_count.i, ptr %b_count.i, i32 1, ptr elementtype(i32) %b_count.i) #19, !srcloc !817
  %7 = ptrtoint ptr %j_fc_wbuf to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %j_fc_wbuf, align 8
  %arrayidx3 = getelementptr ptr, ptr %8, i32 %i.012
  %9 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %arrayidx3, align 4
  %i.0 = add i32 %i.012, -1
  %cmp = icmp sgt i32 %i.0, -1
  br i1 %cmp, label %if.end.for.body_crit_edge, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.body

for.end:                                          ; preds = %if.end.for.end_crit_edge, %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bmap(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @jbd2_journal_get_descriptor_buffer(ptr noundef %transaction, i32 noundef %type) local_unnamed_addr #0 align 64 {
entry:
  %blocknr = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %transaction to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %transaction, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %blocknr) #19
  %2 = ptrtoint ptr %blocknr to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 -1, ptr %blocknr, align 8, !annotation !790
  %call = call i32 @jbd2_journal_next_log_block(ptr noundef %1, ptr noundef nonnull %blocknr)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %j_dev = getelementptr inbounds %struct.journal_s, ptr %1, i32 0, i32 32
  %3 = ptrtoint ptr %j_dev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %j_dev, align 4
  %5 = ptrtoint ptr %blocknr to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %blocknr, align 8
  %j_blocksize = getelementptr inbounds %struct.journal_s, ptr %1, i32 0, i32 33
  %7 = ptrtoint ptr %j_blocksize to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %j_blocksize, align 8
  %call.i = tail call ptr @__getblk_gfp(ptr noundef %4, i64 noundef %6, i32 noundef %8, i32 noundef 8) #19
  %tobool2.not = icmp eq ptr %call.i, null
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %t_outstanding_credits = getelementptr inbounds %struct.transaction_s, ptr %transaction, i32 0, i32 18
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %t_outstanding_credits, i32 noundef 4) #19
  tail call void @llvm.prefetch.p0(ptr %t_outstanding_credits, i32 1, i32 3, i32 1) #19
  %9 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %t_outstanding_credits, ptr %t_outstanding_credits, i32 1, ptr elementtype(i32) %t_outstanding_credits) #19, !srcloc !817
  tail call void @__might_sleep(ptr noundef nonnull @.str.104, i32 noundef 366) #19
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call.i, i32 noundef 4) #19
  %10 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %call.i, align 4
  %and.i.i.i.i = and i32 %11, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %trylock_buffer.exit.i, label %if.end4.if.then.i24_crit_edge

if.end4.if.then.i24_crit_edge:                    ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i24

trylock_buffer.exit.i:                            ; preds = %if.end4
  tail call void @llvm.prefetch.p0(ptr nonnull %call.i, i32 1, i32 3, i32 1) #19
  %12 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %call.i, ptr nonnull %call.i, i32 4, ptr nonnull elementtype(i32) %call.i) #19, !srcloc !798
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %12, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !799
  %13 = and i32 %asmresult.i.i.i.i.i.i.i, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.not.i = icmp eq i32 %13, 0
  br i1 %tobool.not.not.i, label %trylock_buffer.exit.i.lock_buffer.exit_crit_edge, label %trylock_buffer.exit.i.if.then.i24_crit_edge

trylock_buffer.exit.i.if.then.i24_crit_edge:      ; preds = %trylock_buffer.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i24

trylock_buffer.exit.i.lock_buffer.exit_crit_edge: ; preds = %trylock_buffer.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %lock_buffer.exit

if.then.i24:                                      ; preds = %trylock_buffer.exit.i.if.then.i24_crit_edge, %if.end4.if.then.i24_crit_edge
  tail call void @__lock_buffer(ptr noundef nonnull %call.i) #19
  br label %lock_buffer.exit

lock_buffer.exit:                                 ; preds = %if.then.i24, %trylock_buffer.exit.i.lock_buffer.exit_crit_edge
  %b_data = getelementptr inbounds %struct.buffer_head, ptr %call.i, i32 0, i32 5
  %14 = ptrtoint ptr %b_data to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %b_data, align 4
  %16 = ptrtoint ptr %j_blocksize to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %j_blocksize, align 8
  %18 = call ptr @memset(ptr %15, i32 0, i32 %17)
  %19 = load ptr, ptr %b_data, align 4
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 -1069860456, ptr %19, align 4
  %h_blocktype = getelementptr inbounds %struct.journal_header_s, ptr %19, i32 0, i32 1
  %21 = ptrtoint ptr %h_blocktype to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %type, ptr %h_blocktype, align 4
  %t_tid = getelementptr inbounds %struct.transaction_s, ptr %transaction, i32 0, i32 1
  %22 = ptrtoint ptr %t_tid to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %t_tid, align 4
  %h_sequence = getelementptr inbounds %struct.journal_header_s, ptr %19, i32 0, i32 2
  %24 = ptrtoint ptr %h_sequence to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %h_sequence, align 4
  %25 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %call.i, align 4
  %and1.i.i = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %lock_buffer.exit.set_buffer_uptodate.exit_crit_edge

lock_buffer.exit.set_buffer_uptodate.exit_crit_edge: ; preds = %lock_buffer.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %set_buffer_uptodate.exit

if.then.i:                                        ; preds = %lock_buffer.exit
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @_set_bit(i32 noundef 0, ptr noundef nonnull %call.i) #19
  br label %set_buffer_uptodate.exit

set_buffer_uptodate.exit:                         ; preds = %if.then.i, %lock_buffer.exit.set_buffer_uptodate.exit_crit_edge
  tail call void @unlock_buffer(ptr noundef nonnull %call.i) #19
  br label %cleanup

cleanup:                                          ; preds = %set_buffer_uptodate.exit, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %call.i, %set_buffer_uptodate.exit ], [ null, %entry.cleanup_crit_edge ], [ null, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %blocknr) #19
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @unlock_buffer(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @jbd2_descriptor_block_csum_set(ptr nocapture noundef readonly %j, ptr nocapture noundef readonly %bh) local_unnamed_addr #0 align 64 {
entry:
  %desc.i = alloca %struct.anon.130, align 8
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_format_version.i.i.i = getelementptr inbounds %struct.journal_s, ptr %j, i32 0, i32 6
  %0 = ptrtoint ptr %j_format_version.i.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %j_format_version.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i.i.i = icmp sgt i32 %1, 1
  br i1 %cmp.i.i.i, label %jbd2_has_feature_csum2.exit.i.i, label %entry.jbd2_journal_has_csum_v2or3.exit_crit_edge

entry.jbd2_journal_has_csum_v2or3.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_journal_has_csum_v2or3.exit

jbd2_has_feature_csum2.exit.i.i:                  ; preds = %entry
  %j_superblock.i.i.i = getelementptr inbounds %struct.journal_s, ptr %j, i32 0, i32 5
  %2 = ptrtoint ptr %j_superblock.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %j_superblock.i.i.i, align 4
  %s_feature_incompat.i.i.i = getelementptr inbounds %struct.journal_superblock_s, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %s_feature_incompat.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %s_feature_incompat.i.i.i, align 4
  %6 = and i32 %5, 24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %.not.i = icmp eq i32 %6, 0
  br i1 %.not.i, label %jbd2_has_feature_csum2.exit.i.i.jbd2_journal_has_csum_v2or3.exit_crit_edge, label %land.rhs.i

jbd2_has_feature_csum2.exit.i.i.jbd2_journal_has_csum_v2or3.exit_crit_edge: ; preds = %jbd2_has_feature_csum2.exit.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_journal_has_csum_v2or3.exit

land.rhs.i:                                       ; preds = %jbd2_has_feature_csum2.exit.i.i
  %j_chksum_driver.i = getelementptr inbounds %struct.journal_s, ptr %j, i32 0, i32 70
  %7 = ptrtoint ptr %j_chksum_driver.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %j_chksum_driver.i, align 8
  %cmp.i = icmp eq ptr %8, null
  br i1 %cmp.i, label %land.rhs2.i, label %land.rhs.i.jbd2_journal_has_csum_v2or3.exit_crit_edge

land.rhs.i.jbd2_journal_has_csum_v2or3.exit_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_journal_has_csum_v2or3.exit

land.rhs2.i:                                      ; preds = %land.rhs.i
  %.b43.i = load i1, ptr @jbd2_journal_has_csum_v2or3.__already_done, align 1
  br i1 %.b43.i, label %land.rhs2.i.jbd2_journal_has_csum_v2or3.exit_crit_edge, label %if.then.i, !prof !788

land.rhs2.i.jbd2_journal_has_csum_v2or3.exit_crit_edge: ; preds = %land.rhs2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_journal_has_csum_v2or3.exit

if.then.i:                                        ; preds = %land.rhs2.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @jbd2_journal_has_csum_v2or3.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.105, i32 noundef 1735, i32 noundef 9, ptr noundef null) #19
  br label %jbd2_journal_has_csum_v2or3.exit

jbd2_journal_has_csum_v2or3.exit:                 ; preds = %if.then.i, %land.rhs2.i.jbd2_journal_has_csum_v2or3.exit_crit_edge, %land.rhs.i.jbd2_journal_has_csum_v2or3.exit_crit_edge, %jbd2_has_feature_csum2.exit.i.i.jbd2_journal_has_csum_v2or3.exit_crit_edge, %entry.jbd2_journal_has_csum_v2or3.exit_crit_edge
  %j_chksum_driver37.i = getelementptr inbounds %struct.journal_s, ptr %j, i32 0, i32 70
  %9 = ptrtoint ptr %j_chksum_driver37.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %j_chksum_driver37.i, align 8
  %cmp38.i.not = icmp eq ptr %10, null
  br i1 %cmp38.i.not, label %jbd2_journal_has_csum_v2or3.exit.cleanup_crit_edge, label %if.end

jbd2_journal_has_csum_v2or3.exit.cleanup_crit_edge: ; preds = %jbd2_journal_has_csum_v2or3.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %jbd2_journal_has_csum_v2or3.exit
  %b_data = getelementptr inbounds %struct.buffer_head, ptr %bh, i32 0, i32 5
  %11 = ptrtoint ptr %b_data to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %b_data, align 4
  %j_blocksize = getelementptr inbounds %struct.journal_s, ptr %j, i32 0, i32 33
  %13 = ptrtoint ptr %j_blocksize to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %j_blocksize, align 8
  %add.ptr = getelementptr i8, ptr %12, i32 %14
  %add.ptr1 = getelementptr i8, ptr %add.ptr, i32 -4
  %15 = ptrtoint ptr %add.ptr1 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 0, ptr %add.ptr1, align 4
  %j_csum_seed = getelementptr inbounds %struct.journal_s, ptr %j, i32 0, i32 71
  %16 = ptrtoint ptr %j_csum_seed to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %j_csum_seed, align 4
  %18 = load ptr, ptr %b_data, align 4
  %19 = load i32, ptr %j_blocksize, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %desc.i) #19
  %20 = getelementptr inbounds %struct.anon.130, ptr %desc.i, i32 0, i32 1
  %21 = call ptr @memset(ptr %desc.i, i32 255, i32 16)
  %22 = ptrtoint ptr %j_chksum_driver37.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %j_chksum_driver37.i, align 8
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %23, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %25)
  %cmp.i14 = icmp ugt i32 %25, 4
  br i1 %cmp.i14, label %do.body2.i, label %do.end7.i, !prof !789

do.body2.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/jbd2.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1787, 0\0A.popsection", ""() #19, !srcloc !796
  unreachable

do.end7.i:                                        ; preds = %if.end
  %26 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %23, ptr %desc.i, align 8
  %27 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %17, ptr %20, align 8
  %call10.i = call i32 @crypto_shash_update(ptr noundef nonnull %desc.i, ptr noundef %18, i32 noundef %19) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool12.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool12.not.i, label %jbd2_chksum.exit, label %do.body20.i, !prof !788

do.body20.i:                                      ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #21
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/jbd2.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1793, 0\0A.popsection", ""() #19, !srcloc !797
  unreachable

jbd2_chksum.exit:                                 ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #21
  %28 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %20, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %desc.i) #19
  %30 = ptrtoint ptr %add.ptr1 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %add.ptr1, align 4
  br label %cleanup

cleanup:                                          ; preds = %jbd2_chksum.exit, %jbd2_journal_has_csum_v2or3.exit.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_journal_get_log_tail(ptr noundef %journal, ptr nocapture noundef %tid, ptr nocapture noundef writeonly %block) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_read_lock(ptr noundef %j_state_lock) #19
  %j_list_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 39
  tail call void @_raw_spin_lock(ptr noundef %j_list_lock) #19
  %j_checkpoint_transactions = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 12
  %0 = ptrtoint ptr %j_checkpoint_transactions to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %j_checkpoint_transactions, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %t_tid = getelementptr inbounds %struct.transaction_s, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %t_tid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %t_tid, align 4
  %4 = ptrtoint ptr %tid to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %tid, align 4
  %t_log_start = getelementptr inbounds %struct.transaction_s, ptr %1, i32 0, i32 3
  br label %if.end11

if.else:                                          ; preds = %entry
  %j_committing_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 11
  %5 = ptrtoint ptr %j_committing_transaction to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %j_committing_transaction, align 4
  %cmp.not = icmp eq ptr %6, null
  br i1 %cmp.not, label %if.else4, label %if.then1

if.then1:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  %t_tid2 = getelementptr inbounds %struct.transaction_s, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %t_tid2 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %t_tid2, align 4
  %9 = ptrtoint ptr %tid to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %tid, align 4
  %t_log_start3 = getelementptr inbounds %struct.transaction_s, ptr %6, i32 0, i32 3
  br label %if.end11

if.else4:                                         ; preds = %if.else
  %j_running_transaction = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 10
  %10 = ptrtoint ptr %j_running_transaction to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %j_running_transaction, align 8
  %cmp5.not = icmp eq ptr %11, null
  br i1 %cmp5.not, label %if.else8, label %if.then6

if.then6:                                         ; preds = %if.else4
  call void @__sanitizer_cov_trace_pc() #21
  %t_tid7 = getelementptr inbounds %struct.transaction_s, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %t_tid7 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %t_tid7, align 4
  %14 = ptrtoint ptr %tid to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %tid, align 4
  %j_head = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 24
  br label %if.end11

if.else8:                                         ; preds = %if.else4
  call void @__sanitizer_cov_trace_pc() #21
  %j_transaction_sequence = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 42
  %15 = ptrtoint ptr %j_transaction_sequence to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %j_transaction_sequence, align 8
  %17 = ptrtoint ptr %tid to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %tid, align 4
  %j_head9 = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 24
  br label %if.end11

if.end11:                                         ; preds = %if.else8, %if.then6, %if.then1, %if.then
  %t_log_start3.sink = phi ptr [ %t_log_start3, %if.then1 ], [ %j_head9, %if.else8 ], [ %j_head, %if.then6 ], [ %t_log_start, %if.then ]
  %18 = ptrtoint ptr %t_log_start3.sink to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %t_log_start3.sink, align 4
  %20 = ptrtoint ptr %block to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %block, align 4
  %21 = ptrtoint ptr %tid to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %tid, align 4
  %j_tail_sequence = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 41
  %23 = ptrtoint ptr %j_tail_sequence to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %j_tail_sequence, align 4
  %sub.i = sub i32 %22, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp.i = icmp sgt i32 %sub.i, 0
  %conv.i = zext i1 %cmp.i to i32
  tail call void @_raw_spin_unlock(ptr noundef %j_list_lock) #19
  tail call void @_raw_read_unlock(ptr noundef %j_state_lock) #19
  ret i32 %conv.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__jbd2_update_log_tail(ptr noundef %journal, i32 noundef %tid, i32 noundef %block) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_checkpoint_mutex = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 19
  %call = tail call zeroext i1 @mutex_is_locked(ptr noundef %j_checkpoint_mutex) #19
  br i1 %call, label %do.end8, label %do.body3, !prof !788

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1101, 0\0A.popsection", ""() #19, !srcloc !818
  unreachable

do.end8:                                          ; preds = %entry
  %call9 = tail call i32 @jbd2_journal_update_sb_log_tail(ptr noundef %journal, i32 noundef %tid, i32 noundef %block, i32 noundef 133120)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end12, label %do.end8.out_crit_edge

do.end8.out_crit_edge:                            ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %out

if.end12:                                         ; preds = %do.end8
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  %j_tail = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 25
  %0 = ptrtoint ptr %j_tail to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %j_tail, align 8
  %sub = sub i32 %block, %1
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %block)
  %cmp = icmp ugt i32 %1, %block
  br i1 %cmp, label %if.then14, label %if.end12.if.end16_crit_edge

if.end12.if.end16_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end16

if.then14:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %j_last = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 28
  %2 = ptrtoint ptr %j_last to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %j_last, align 4
  %j_first = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 27
  %4 = ptrtoint ptr %j_first to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %j_first, align 8
  %sub15 = add i32 %3, %sub
  %add = sub i32 %sub15, %5
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %if.end12.if.end16_crit_edge
  %freed.0 = phi i32 [ %add, %if.then14 ], [ %sub, %if.end12.if.end16_crit_edge ]
  tail call fastcc void @trace_jbd2_update_log_tail(ptr noundef %journal, i32 noundef %tid, i32 noundef %block, i32 noundef %freed.0)
  %j_tail_sequence = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 41
  %6 = ptrtoint ptr %j_tail_sequence to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %j_tail_sequence, align 4
  tail call void (i32, ptr, ptr, i32, ptr, ...) @__jbd2_debug(i32 noundef 1, ptr noundef nonnull @.str.2, ptr noundef nonnull @__func__.__jbd2_update_log_tail, i32 noundef 1123, ptr noundef nonnull @.str.10, i32 noundef %7, i32 noundef %tid, i32 noundef %block, i32 noundef %freed.0)
  %j_free = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 26
  %8 = ptrtoint ptr %j_free to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %j_free, align 4
  %add17 = add i32 %9, %freed.0
  store i32 %add17, ptr %j_free, align 4
  %10 = ptrtoint ptr %j_tail_sequence to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %tid, ptr %j_tail_sequence, align 4
  %11 = ptrtoint ptr %j_tail to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %block, ptr %j_tail, align 8
  tail call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  br label %out

out:                                              ; preds = %if.end16, %do.end8.out_crit_edge
  ret i32 %call9
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mutex_is_locked(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @jbd2_journal_update_sb_log_tail(ptr noundef %journal, i32 noundef %tail_tid, i32 noundef %tail_block, i32 noundef %write_op) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_superblock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 5
  %0 = ptrtoint ptr %j_superblock to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %j_superblock, align 4
  %2 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %journal, align 8
  %and.i = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %j_atomic_flags = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 1
  %4 = ptrtoint ptr %j_atomic_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %j_atomic_flags, align 4
  %6 = and i32 %5, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool2.not = icmp eq i32 %6, 0
  br i1 %tobool2.not, label %do.body, label %if.then3

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @jbd2_journal_abort(ptr noundef %journal, i32 noundef -5)
  br label %cleanup

do.body:                                          ; preds = %if.end
  %j_checkpoint_mutex = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 19
  %call5 = tail call zeroext i1 @mutex_is_locked(ptr noundef %j_checkpoint_mutex) #19
  br i1 %call5, label %do.end16, label %do.body10, !prof !788

do.body10:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1680, 0\0A.popsection", ""() #19, !srcloc !819
  unreachable

do.end16:                                         ; preds = %do.body
  tail call void (i32, ptr, ptr, i32, ptr, ...) @__jbd2_debug(i32 noundef 1, ptr noundef nonnull @.str.2, ptr noundef nonnull @__func__.jbd2_journal_update_sb_log_tail, i32 noundef 1682, ptr noundef nonnull @.str.15, i32 noundef %tail_block, i32 noundef %tail_tid)
  %j_sb_buffer = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 4
  %7 = ptrtoint ptr %j_sb_buffer to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %j_sb_buffer, align 8
  tail call void @__might_sleep(ptr noundef nonnull @.str.104, i32 noundef 366) #19
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %8, i32 noundef 4) #19
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %8, align 4
  %and.i.i.i.i = and i32 %10, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %trylock_buffer.exit.i, label %do.end16.if.then.i_crit_edge

do.end16.if.then.i_crit_edge:                     ; preds = %do.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i

trylock_buffer.exit.i:                            ; preds = %do.end16
  tail call void @llvm.prefetch.p0(ptr %8, i32 1, i32 3, i32 1) #19
  %11 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %8, ptr %8, i32 4, ptr elementtype(i32) %8) #19, !srcloc !798
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %11, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !799
  %12 = and i32 %asmresult.i.i.i.i.i.i.i, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.not.i = icmp eq i32 %12, 0
  br i1 %tobool.not.not.i, label %trylock_buffer.exit.i.lock_buffer.exit_crit_edge, label %trylock_buffer.exit.i.if.then.i_crit_edge

trylock_buffer.exit.i.if.then.i_crit_edge:        ; preds = %trylock_buffer.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i

trylock_buffer.exit.i.lock_buffer.exit_crit_edge: ; preds = %trylock_buffer.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %lock_buffer.exit

if.then.i:                                        ; preds = %trylock_buffer.exit.i.if.then.i_crit_edge, %do.end16.if.then.i_crit_edge
  tail call void @__lock_buffer(ptr noundef %8) #19
  br label %lock_buffer.exit

lock_buffer.exit:                                 ; preds = %if.then.i, %trylock_buffer.exit.i.lock_buffer.exit_crit_edge
  %s_sequence = getelementptr inbounds %struct.journal_superblock_s, ptr %1, i32 0, i32 4
  %13 = ptrtoint ptr %s_sequence to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %tail_tid, ptr %s_sequence, align 4
  %s_start = getelementptr inbounds %struct.journal_superblock_s, ptr %1, i32 0, i32 5
  %14 = ptrtoint ptr %s_start to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %tail_block, ptr %s_start, align 4
  %call17 = tail call fastcc i32 @jbd2_write_superblock(ptr noundef %journal, i32 noundef %write_op)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %if.end20, label %lock_buffer.exit.cleanup_crit_edge

lock_buffer.exit.cleanup_crit_edge:               ; preds = %lock_buffer.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end20:                                         ; preds = %lock_buffer.exit
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  %15 = ptrtoint ptr %s_sequence to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %s_sequence, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool22.not = icmp eq i32 %16, 0
  br i1 %tobool22.not, label %do.end40, label %if.end20.if.end46_crit_edge, !prof !789

if.end20.if.end46_crit_edge:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end46

do.end40:                                         ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #21
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1694, i32 noundef 9, ptr noundef null) #19
  br label %if.end46

if.end46:                                         ; preds = %do.end40, %if.end20.if.end46_crit_edge
  %17 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %journal, align 8
  %and = and i32 %18, -9
  store i32 %and, ptr %journal, align 8
  tail call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end46, %lock_buffer.exit.cleanup_crit_edge, %if.then3, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -5, %if.then3 ], [ -5, %entry.cleanup_crit_edge ], [ %call17, %lock_buffer.exit.cleanup_crit_edge ], [ 0, %if.end46 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_jbd2_update_log_tail(ptr noundef %journal, i32 noundef %first_tid, i32 noundef %block_nr, i32 noundef %freed) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_update_log_tail, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_jbd2_update_log_tail, %do.body)) #19
          to label %if.end48 [label %do.body], !srcloc !820

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !788

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.108, i32 noundef 108, i32 noundef 9, ptr noundef null) #19
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !821
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_update_log_tail, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %journal, i32 noundef %first_tid, i32 noundef %block_nr, i32 noundef %freed) #19
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !822
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !822
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !788

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.108, i32 noundef 108, i32 noundef 9, ptr noundef null) #19
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !823
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_update_log_tail, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_jbd2_update_log_tail.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @trace_jbd2_update_log_tail.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.106, i32 noundef 354, ptr noundef nonnull @.str.107) #19
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !824
  %38 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @jbd2_update_log_tail(ptr noundef %journal, i32 noundef %tid, i32 noundef %block) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_checkpoint_mutex = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 19
  tail call void @mutex_lock_io_nested(ptr noundef %j_checkpoint_mutex, i32 noundef 0) #19
  %j_tail_sequence = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 41
  %0 = ptrtoint ptr %j_tail_sequence to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %j_tail_sequence, align 4
  %sub.i = sub i32 %tid, %1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i)
  %cmp.i = icmp slt i32 %sub.i, 1
  br i1 %cmp.i, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %call1 = tail call i32 @__jbd2_update_log_tail(ptr noundef %journal, i32 noundef %tid, i32 noundef %block)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call void @mutex_unlock(ptr noundef %j_checkpoint_mutex) #19
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_io_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @journal_init_common(ptr noundef %bdev, ptr noundef %fs_dev, i64 noundef %start, i32 noundef %len, i32 noundef %blocksize) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 1560) #24
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

do.body:                                          ; preds = %entry
  %j_wait_transaction_locked = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 13
  tail call void @__init_waitqueue_head(ptr noundef %j_wait_transaction_locked, ptr noundef nonnull @.str.109, ptr noundef nonnull @journal_init_common.__key) #19
  %j_wait_done_commit = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 14
  tail call void @__init_waitqueue_head(ptr noundef %j_wait_done_commit, ptr noundef nonnull @.str.111, ptr noundef nonnull @journal_init_common.__key.110) #19
  %j_wait_commit = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 15
  tail call void @__init_waitqueue_head(ptr noundef %j_wait_commit, ptr noundef nonnull @.str.113, ptr noundef nonnull @journal_init_common.__key.112) #19
  %j_wait_updates = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 16
  tail call void @__init_waitqueue_head(ptr noundef %j_wait_updates, ptr noundef nonnull @.str.115, ptr noundef nonnull @journal_init_common.__key.114) #19
  %j_wait_reserved = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 17
  tail call void @__init_waitqueue_head(ptr noundef %j_wait_reserved, ptr noundef nonnull @.str.117, ptr noundef nonnull @journal_init_common.__key.116) #19
  %j_fc_wait = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 18
  tail call void @__init_waitqueue_head(ptr noundef %j_fc_wait, ptr noundef nonnull @.str.119, ptr noundef nonnull @journal_init_common.__key.118) #19
  %j_abort_mutex = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 3
  tail call void @__mutex_init(ptr noundef %j_abort_mutex, ptr noundef nonnull @.str.121, ptr noundef nonnull @journal_init_common.__key.120) #19
  %j_barrier = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 9
  tail call void @__mutex_init(ptr noundef %j_barrier, ptr noundef nonnull @.str.123, ptr noundef nonnull @journal_init_common.__key.122) #19
  %j_checkpoint_mutex = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 19
  tail call void @__mutex_init(ptr noundef %j_checkpoint_mutex, ptr noundef nonnull @.str.125, ptr noundef nonnull @journal_init_common.__key.124) #19
  %j_revoke_lock = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 51
  tail call void @__raw_spin_lock_init(ptr noundef %j_revoke_lock, ptr noundef nonnull @.str.127, ptr noundef nonnull @journal_init_common.__key.126, i16 noundef signext 3) #19
  %j_list_lock = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 39
  tail call void @__raw_spin_lock_init(ptr noundef %j_list_lock, ptr noundef nonnull @.str.129, ptr noundef nonnull @journal_init_common.__key.128, i16 noundef signext 3) #19
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 7
  tail call void @__rwlock_init(ptr noundef %j_state_lock, ptr noundef nonnull @.str.131, ptr noundef nonnull @journal_init_common.__key.130) #19
  %j_commit_interval = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 49
  %1 = ptrtoint ptr %j_commit_interval to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 500, ptr %j_commit_interval, align 8
  %j_min_batch_time = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 60
  %2 = ptrtoint ptr %j_min_batch_time to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %j_min_batch_time, align 8
  %j_max_batch_time = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 61
  %3 = ptrtoint ptr %j_max_batch_time to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 15000, ptr %j_max_batch_time, align 4
  %j_reserved_credits = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 38
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %j_reserved_credits, i32 noundef 4) #19
  %4 = ptrtoint ptr %j_reserved_credits to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile i32 0, ptr %j_reserved_credits, align 8
  %5 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 2, ptr %call7.i.i, align 8
  %call36 = tail call i32 @jbd2_journal_init_revoke(ptr noundef nonnull %call7.i.i, i32 noundef 256) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36)
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %do.body40, label %do.body.err_cleanup_crit_edge

do.body.err_cleanup_crit_edge:                    ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #21
  br label %err_cleanup

do.body40:                                        ; preds = %do.body
  %j_history_lock = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 65
  tail call void @__raw_spin_lock_init(ptr noundef %j_history_lock, ptr noundef nonnull @.str.133, ptr noundef nonnull @journal_init_common.__key.132, i16 noundef signext 3) #19
  %j_trans_commit_map = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 72
  tail call void @lockdep_init_map_type(ptr noundef %j_trans_commit_map, ptr noundef nonnull @.str.134, ptr noundef nonnull @journal_init_common.jbd2_trans_commit_key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #19
  %j_blocksize = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 33
  %6 = ptrtoint ptr %j_blocksize to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %blocksize, ptr %j_blocksize, align 8
  %j_dev = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 32
  %7 = ptrtoint ptr %j_dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %bdev, ptr %j_dev, align 4
  %j_fs_dev = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 36
  %8 = ptrtoint ptr %j_fs_dev to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %fs_dev, ptr %j_fs_dev, align 8
  %j_blk_offset = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 34
  %9 = ptrtoint ptr %j_blk_offset to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %start, ptr %j_blk_offset, align 8
  %j_total_len = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 37
  %10 = ptrtoint ptr %j_total_len to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %len, ptr %j_total_len, align 4
  %div = sdiv i32 %blocksize, 8
  %j_wbufsize = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 56
  %11 = ptrtoint ptr %j_wbufsize to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %div, ptr %j_wbufsize, align 4
  %j_fc_wbuf = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 55
  %12 = ptrtoint ptr %j_fc_wbuf to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %j_fc_wbuf, align 8
  %13 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %div, i32 4) #19
  %14 = extractvalue { i32, i1 } %13, 1
  br i1 %14, label %kmalloc_array.exit.thread, label %if.end7.i, !prof !789

kmalloc_array.exit.thread:                        ; preds = %do.body40
  call void @__sanitizer_cov_trace_pc() #21
  %j_wbuf135 = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 54
  %15 = ptrtoint ptr %j_wbuf135 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %j_wbuf135, align 4
  br label %err_cleanup

if.end7.i:                                        ; preds = %do.body40
  %16 = extractvalue { i32, i1 } %13, 0
  %call8.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %16, i32 noundef 3264) #23
  %j_wbuf = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 54
  %17 = ptrtoint ptr %j_wbuf to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %call8.i, ptr %j_wbuf, align 4
  %tobool48.not = icmp eq ptr %call8.i, null
  br i1 %tobool48.not, label %if.end7.i.err_cleanup_crit_edge, label %if.end50

if.end7.i.err_cleanup_crit_edge:                  ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %err_cleanup

if.end50:                                         ; preds = %if.end7.i
  %18 = ptrtoint ptr %j_dev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %j_dev, align 4
  %20 = ptrtoint ptr %j_blocksize to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %j_blocksize, align 8
  %call.i = tail call ptr @__getblk_gfp(ptr noundef %19, i64 noundef %start, i32 noundef %21, i32 noundef 0) #19
  %tobool54.not = icmp eq ptr %call.i, null
  br i1 %tobool54.not, label %do.end58, label %if.end60

do.end58:                                         ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #21
  %call59 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, ptr noundef nonnull @.str.136) #22
  br label %err_cleanup

if.end60:                                         ; preds = %if.end50
  %j_sb_buffer = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 4
  %22 = ptrtoint ptr %j_sb_buffer to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %call.i, ptr %j_sb_buffer, align 8
  %b_data = getelementptr inbounds %struct.buffer_head, ptr %call.i, i32 0, i32 5
  %23 = ptrtoint ptr %b_data to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %b_data, align 4
  %j_superblock = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 5
  %25 = ptrtoint ptr %j_superblock to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %24, ptr %j_superblock, align 4
  %j_shrink_transaction = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 23
  %26 = ptrtoint ptr %j_shrink_transaction to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr null, ptr %j_shrink_transaction, align 8
  %j_shrinker = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 21
  %scan_objects = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 21, i32 1
  %27 = ptrtoint ptr %scan_objects to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr @jbd2_journal_shrink_scan, ptr %scan_objects, align 4
  %28 = ptrtoint ptr %j_shrinker to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr @jbd2_journal_shrink_count, ptr %j_shrinker, align 8
  %seeks = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 21, i32 3
  %29 = ptrtoint ptr %seeks to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 2, ptr %seeks, align 4
  %j_max_transaction_buffers = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 47
  %30 = ptrtoint ptr %j_max_transaction_buffers to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %j_max_transaction_buffers, align 8
  %batch = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 21, i32 2
  %32 = ptrtoint ptr %batch to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %batch, align 8
  %j_checkpoint_jh_count = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 22
  %call65 = tail call i32 @__percpu_counter_init(ptr noundef %j_checkpoint_jh_count, i64 noundef 0, i32 noundef 3264, ptr noundef nonnull @journal_init_common.__key.137) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call65)
  %tobool66.not = icmp eq i32 %call65, 0
  br i1 %tobool66.not, label %if.end68, label %if.end60.err_cleanup_crit_edge

if.end60.err_cleanup_crit_edge:                   ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #21
  br label %err_cleanup

if.end68:                                         ; preds = %if.end60
  %call70 = tail call i32 @register_shrinker(ptr noundef %j_shrinker) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call70)
  %tobool71.not = icmp eq i32 %call70, 0
  br i1 %tobool71.not, label %if.end68.cleanup_crit_edge, label %if.then72

if.end68.cleanup_crit_edge:                       ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then72:                                        ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @percpu_counter_destroy(ptr noundef %j_checkpoint_jh_count) #19
  br label %err_cleanup

err_cleanup:                                      ; preds = %if.then72, %if.end60.err_cleanup_crit_edge, %do.end58, %if.end7.i.err_cleanup_crit_edge, %kmalloc_array.exit.thread, %do.body.err_cleanup_crit_edge
  %j_sb_buffer75 = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 4
  %33 = ptrtoint ptr %j_sb_buffer75 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %j_sb_buffer75, align 8
  %tobool.not.i = icmp eq ptr %34, null
  br i1 %tobool.not.i, label %err_cleanup.brelse.exit_crit_edge, label %if.then.i

err_cleanup.brelse.exit_crit_edge:                ; preds = %err_cleanup
  call void @__sanitizer_cov_trace_pc() #21
  br label %brelse.exit

if.then.i:                                        ; preds = %err_cleanup
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @__brelse(ptr noundef nonnull %34) #19
  br label %brelse.exit

brelse.exit:                                      ; preds = %if.then.i, %err_cleanup.brelse.exit_crit_edge
  %j_wbuf76 = getelementptr inbounds %struct.journal_s, ptr %call7.i.i, i32 0, i32 54
  %35 = ptrtoint ptr %j_wbuf76 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %j_wbuf76, align 4
  tail call void @kfree(ptr noundef %36) #19
  tail call void @jbd2_journal_destroy_revoke(ptr noundef nonnull %call7.i.i) #19
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #19
  br label %cleanup

cleanup:                                          ; preds = %brelse.exit, %if.end68.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %brelse.exit ], [ null, %entry.cleanup_crit_edge ], [ %call7.i.i, %if.end68.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bdevname(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strreplace(ptr noundef, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #9

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @jbd2_write_superblock(ptr noundef %journal, i32 noundef %write_flags) unnamed_addr #0 align 64 {
entry:
  %desc.i.i = alloca %struct.anon.130, align 8
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_sb_buffer = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 4
  %0 = ptrtoint ptr %j_sb_buffer to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %j_sb_buffer, align 8
  %j_superblock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 5
  %2 = ptrtoint ptr %j_superblock to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %j_superblock, align 4
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %1, align 4
  %6 = and i32 %5, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @unlock_buffer(ptr noundef %1) #19
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call fastcc void @trace_jbd2_write_superblock(ptr noundef %journal, i32 noundef %write_flags)
  %7 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %journal, align 8
  %and = and i32 %8, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  %9 = and i32 %write_flags, -393217
  %spec.select = select i1 %tobool1.not, i32 %9, i32 %write_flags
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %1, align 4
  %12 = and i32 %11, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool7.not = icmp eq i32 %12, 0
  br i1 %tobool7.not, label %if.end.if.end10_crit_edge, label %do.end

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end10

do.end:                                           ; preds = %if.end
  %j_devname = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 35
  %call9 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.150, ptr noundef %j_devname) #22
  tail call void @_clear_bit(i32 noundef 10, ptr noundef %1) #19
  %13 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %1, align 4
  %and1.i.i65 = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i65)
  %tobool.not.i = icmp eq i32 %and1.i.i65, 0
  br i1 %tobool.not.i, label %if.then.i, label %do.end.if.end10_crit_edge

do.end.if.end10_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end10

if.then.i:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @_set_bit(i32 noundef 0, ptr noundef %1) #19
  br label %if.end10

if.end10:                                         ; preds = %if.then.i, %do.end.if.end10_crit_edge, %if.end.if.end10_crit_edge
  %j_format_version.i.i.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 6
  %15 = ptrtoint ptr %j_format_version.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %j_format_version.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %16)
  %cmp.i.i.i = icmp sgt i32 %16, 1
  br i1 %cmp.i.i.i, label %jbd2_has_feature_csum2.exit.i.i, label %if.end10.jbd2_journal_has_csum_v2or3.exit_crit_edge

if.end10.jbd2_journal_has_csum_v2or3.exit_crit_edge: ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_journal_has_csum_v2or3.exit

jbd2_has_feature_csum2.exit.i.i:                  ; preds = %if.end10
  %17 = ptrtoint ptr %j_superblock to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %j_superblock, align 4
  %s_feature_incompat.i.i.i = getelementptr inbounds %struct.journal_superblock_s, ptr %18, i32 0, i32 8
  %19 = ptrtoint ptr %s_feature_incompat.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %s_feature_incompat.i.i.i, align 4
  %21 = and i32 %20, 24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %.not.i = icmp eq i32 %21, 0
  br i1 %.not.i, label %jbd2_has_feature_csum2.exit.i.i.jbd2_journal_has_csum_v2or3.exit_crit_edge, label %land.rhs.i

jbd2_has_feature_csum2.exit.i.i.jbd2_journal_has_csum_v2or3.exit_crit_edge: ; preds = %jbd2_has_feature_csum2.exit.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_journal_has_csum_v2or3.exit

land.rhs.i:                                       ; preds = %jbd2_has_feature_csum2.exit.i.i
  %j_chksum_driver.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 70
  %22 = ptrtoint ptr %j_chksum_driver.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %j_chksum_driver.i, align 8
  %cmp.i = icmp eq ptr %23, null
  br i1 %cmp.i, label %land.rhs2.i, label %land.rhs.i.jbd2_journal_has_csum_v2or3.exit_crit_edge

land.rhs.i.jbd2_journal_has_csum_v2or3.exit_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_journal_has_csum_v2or3.exit

land.rhs2.i:                                      ; preds = %land.rhs.i
  %.b43.i = load i1, ptr @jbd2_journal_has_csum_v2or3.__already_done, align 1
  br i1 %.b43.i, label %land.rhs2.i.jbd2_journal_has_csum_v2or3.exit_crit_edge, label %if.then.i72, !prof !788

land.rhs2.i.jbd2_journal_has_csum_v2or3.exit_crit_edge: ; preds = %land.rhs2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_journal_has_csum_v2or3.exit

if.then.i72:                                      ; preds = %land.rhs2.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @jbd2_journal_has_csum_v2or3.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.105, i32 noundef 1735, i32 noundef 9, ptr noundef null) #19
  br label %jbd2_journal_has_csum_v2or3.exit

jbd2_journal_has_csum_v2or3.exit:                 ; preds = %if.then.i72, %land.rhs2.i.jbd2_journal_has_csum_v2or3.exit_crit_edge, %land.rhs.i.jbd2_journal_has_csum_v2or3.exit_crit_edge, %jbd2_has_feature_csum2.exit.i.i.jbd2_journal_has_csum_v2or3.exit_crit_edge, %if.end10.jbd2_journal_has_csum_v2or3.exit_crit_edge
  %j_chksum_driver37.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 70
  %24 = ptrtoint ptr %j_chksum_driver37.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %j_chksum_driver37.i, align 8
  %cmp38.i.not = icmp eq ptr %25, null
  br i1 %cmp38.i.not, label %jbd2_journal_has_csum_v2or3.exit.if.end15_crit_edge, label %if.then13

jbd2_journal_has_csum_v2or3.exit.if.end15_crit_edge: ; preds = %jbd2_journal_has_csum_v2or3.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end15

if.then13:                                        ; preds = %jbd2_journal_has_csum_v2or3.exit
  %s_checksum.i = getelementptr inbounds %struct.journal_superblock_s, ptr %3, i32 0, i32 19
  %26 = ptrtoint ptr %s_checksum.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %s_checksum.i, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %desc.i.i) #19
  %27 = call ptr @memset(ptr %desc.i.i, i32 255, i32 16)
  %28 = ptrtoint ptr %j_chksum_driver37.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %j_chksum_driver37.i, align 8
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %29, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %31)
  %cmp.i.i = icmp ugt i32 %31, 4
  br i1 %cmp.i.i, label %do.body2.i.i, label %do.end7.i.i, !prof !789

do.body2.i.i:                                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/jbd2.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1787, 0\0A.popsection", ""() #19, !srcloc !796
  unreachable

do.end7.i.i:                                      ; preds = %if.then13
  %32 = ptrtoint ptr %desc.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %29, ptr %desc.i.i, align 8
  %call10.i.i = call i32 @crypto_shash_update(ptr noundef nonnull %desc.i.i, ptr noundef %3, i32 noundef 1024) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i.i)
  %tobool12.not.i.i = icmp eq i32 %call10.i.i, 0
  br i1 %tobool12.not.i.i, label %jbd2_superblock_csum.exit, label %do.body20.i.i, !prof !788

do.body20.i.i:                                    ; preds = %do.end7.i.i
  call void @__sanitizer_cov_trace_pc() #21
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/jbd2.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1793, 0\0A.popsection", ""() #19, !srcloc !797
  unreachable

jbd2_superblock_csum.exit:                        ; preds = %do.end7.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %33 = getelementptr inbounds %struct.anon.130, ptr %desc.i.i, i32 0, i32 1
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %33, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %desc.i.i) #19
  %36 = ptrtoint ptr %s_checksum.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %s_checksum.i, align 4
  br label %if.end15

if.end15:                                         ; preds = %jbd2_superblock_csum.exit, %jbd2_journal_has_csum_v2or3.exit.if.end15_crit_edge
  %b_count.i = getelementptr inbounds %struct.buffer_head, ptr %1, i32 0, i32 11
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %b_count.i, i32 noundef 4) #19
  call void @llvm.prefetch.p0(ptr %b_count.i, i32 1, i32 3, i32 1) #19
  %37 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %b_count.i, ptr %b_count.i, i32 1, ptr elementtype(i32) %b_count.i) #19, !srcloc !825
  %b_end_io = getelementptr inbounds %struct.buffer_head, ptr %1, i32 0, i32 7
  %38 = ptrtoint ptr %b_end_io to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr @end_buffer_write_sync, ptr %b_end_io, align 4
  %call16 = call i32 @submit_bh(i32 noundef 1, i32 noundef %spec.select, ptr noundef %1) #19
  call void @__might_sleep(ptr noundef nonnull @.str.104, i32 noundef 354) #19
  %39 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %1, align 4
  %41 = and i32 %40, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool.not.i73 = icmp eq i32 %41, 0
  br i1 %tobool.not.i73, label %if.end15.wait_on_buffer.exit_crit_edge, label %if.then.i74

if.end15.wait_on_buffer.exit_crit_edge:           ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #21
  br label %wait_on_buffer.exit

if.then.i74:                                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #21
  call void @__wait_on_buffer(ptr noundef %1) #19
  br label %wait_on_buffer.exit

wait_on_buffer.exit:                              ; preds = %if.then.i74, %if.end15.wait_on_buffer.exit_crit_edge
  %42 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %1, align 4
  %44 = and i32 %43, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool18.not = icmp eq i32 %44, 0
  br i1 %tobool18.not, label %if.end20, label %if.then19

if.then19:                                        ; preds = %wait_on_buffer.exit
  call void @_clear_bit(i32 noundef 10, ptr noundef %1) #19
  %45 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %1, align 4
  %and1.i.i68 = and i32 %46, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i68)
  %tobool.not.i69 = icmp eq i32 %and1.i.i68, 0
  br i1 %tobool.not.i69, label %if.then.i70, label %if.then19.do.end25_crit_edge

if.then19.do.end25_crit_edge:                     ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end25

if.then.i70:                                      ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #21
  call void @_set_bit(i32 noundef 0, ptr noundef %1) #19
  br label %do.end25

if.end20:                                         ; preds = %wait_on_buffer.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool21.not = icmp eq i32 %call16, 0
  br i1 %tobool21.not, label %if.end20.cleanup_crit_edge, label %if.end20.do.end25_crit_edge

if.end20.do.end25_crit_edge:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end25

if.end20.cleanup_crit_edge:                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

do.end25:                                         ; preds = %if.end20.do.end25_crit_edge, %if.then.i70, %if.then19.do.end25_crit_edge
  %ret.077 = phi i32 [ %call16, %if.end20.do.end25_crit_edge ], [ -5, %if.then19.do.end25_crit_edge ], [ -5, %if.then.i70 ]
  %j_devname27 = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 35
  %call29 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.153, i32 noundef %ret.077, ptr noundef %j_devname27) #22
  %47 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %journal, align 8
  %and.i = and i32 %48, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool31.not = icmp eq i32 %and.i, 0
  br i1 %tobool31.not, label %if.then32, label %do.end25.cleanup_crit_edge

do.end25.cleanup_crit_edge:                       ; preds = %do.end25
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then32:                                        ; preds = %do.end25
  call void @__sanitizer_cov_trace_pc() #21
  call void @jbd2_journal_abort(ptr noundef %journal, i32 noundef %ret.077)
  br label %cleanup

cleanup:                                          ; preds = %if.then32, %do.end25.cleanup_crit_edge, %if.end20.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ -5, %if.then ], [ %ret.077, %do.end25.cleanup_crit_edge ], [ %ret.077, %if.then32 ], [ 0, %if.end20.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @jbd2_journal_update_sb_errno(ptr noundef %journal) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_superblock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 5
  %0 = ptrtoint ptr %j_superblock to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %j_superblock, align 4
  %j_sb_buffer = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 4
  %2 = ptrtoint ptr %j_sb_buffer to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %j_sb_buffer, align 8
  tail call void @__might_sleep(ptr noundef nonnull @.str.104, i32 noundef 366) #19
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %3, i32 noundef 4) #19
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %3, align 4
  %and.i.i.i.i = and i32 %5, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %trylock_buffer.exit.i, label %entry.if.then.i_crit_edge

entry.if.then.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i

trylock_buffer.exit.i:                            ; preds = %entry
  tail call void @llvm.prefetch.p0(ptr %3, i32 1, i32 3, i32 1) #19
  %6 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %3, ptr %3, i32 4, ptr elementtype(i32) %3) #19, !srcloc !798
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %6, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !799
  %7 = and i32 %asmresult.i.i.i.i.i.i.i, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not.not.i = icmp eq i32 %7, 0
  br i1 %tobool.not.not.i, label %trylock_buffer.exit.i.lock_buffer.exit_crit_edge, label %trylock_buffer.exit.i.if.then.i_crit_edge

trylock_buffer.exit.i.if.then.i_crit_edge:        ; preds = %trylock_buffer.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i

trylock_buffer.exit.i.lock_buffer.exit_crit_edge: ; preds = %trylock_buffer.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %lock_buffer.exit

if.then.i:                                        ; preds = %trylock_buffer.exit.i.if.then.i_crit_edge, %entry.if.then.i_crit_edge
  tail call void @__lock_buffer(ptr noundef %3) #19
  br label %lock_buffer.exit

lock_buffer.exit:                                 ; preds = %if.then.i, %trylock_buffer.exit.i.lock_buffer.exit_crit_edge
  %j_errno = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 2
  %8 = ptrtoint ptr %j_errno to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %j_errno, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -108, i32 %9)
  %cmp = icmp eq i32 %9, -108
  %spec.store.select = select i1 %cmp, i32 0, i32 %9
  tail call void (i32, ptr, ptr, i32, ptr, ...) @__jbd2_debug(i32 noundef 1, ptr noundef nonnull @.str.2, ptr noundef nonnull @__func__.jbd2_journal_update_sb_errno, i32 noundef 1868, ptr noundef nonnull @.str.16, i32 noundef %spec.store.select)
  %s_errno = getelementptr inbounds %struct.journal_superblock_s, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %s_errno to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %spec.store.select, ptr %s_errno, align 4
  %call = tail call fastcc i32 @jbd2_write_superblock(ptr noundef %journal, i32 noundef 133120)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_recover(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @jbd2_journal_commit_transaction(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_log_do_checkpoint(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @jbd2_journal_destroy_checkpoint(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @jbd2_mark_journal_empty(ptr noundef %journal, i32 noundef %write_op) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_superblock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 5
  %0 = ptrtoint ptr %j_superblock to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %j_superblock, align 4
  %j_checkpoint_mutex = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 19
  %call = tail call zeroext i1 @mutex_is_locked(ptr noundef %j_checkpoint_mutex) #19
  br i1 %call, label %do.end8, label %do.body3, !prof !788

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1715, 0\0A.popsection", ""() #19, !srcloc !826
  unreachable

do.end8:                                          ; preds = %entry
  %j_sb_buffer = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 4
  %2 = ptrtoint ptr %j_sb_buffer to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %j_sb_buffer, align 8
  tail call void @__might_sleep(ptr noundef nonnull @.str.104, i32 noundef 366) #19
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %3, i32 noundef 4) #19
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %3, align 4
  %and.i.i.i.i = and i32 %5, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %trylock_buffer.exit.i, label %do.end8.if.then.i_crit_edge

do.end8.if.then.i_crit_edge:                      ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i

trylock_buffer.exit.i:                            ; preds = %do.end8
  tail call void @llvm.prefetch.p0(ptr %3, i32 1, i32 3, i32 1) #19
  %6 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %3, ptr %3, i32 4, ptr elementtype(i32) %3) #19, !srcloc !798
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %6, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !799
  %7 = and i32 %asmresult.i.i.i.i.i.i.i, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not.not.i = icmp eq i32 %7, 0
  br i1 %tobool.not.not.i, label %trylock_buffer.exit.i.lock_buffer.exit_crit_edge, label %trylock_buffer.exit.i.if.then.i_crit_edge

trylock_buffer.exit.i.if.then.i_crit_edge:        ; preds = %trylock_buffer.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i

trylock_buffer.exit.i.lock_buffer.exit_crit_edge: ; preds = %trylock_buffer.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %lock_buffer.exit

if.then.i:                                        ; preds = %trylock_buffer.exit.i.if.then.i_crit_edge, %do.end8.if.then.i_crit_edge
  tail call void @__lock_buffer(ptr noundef %3) #19
  br label %lock_buffer.exit

lock_buffer.exit:                                 ; preds = %if.then.i, %trylock_buffer.exit.i.lock_buffer.exit_crit_edge
  %s_start = getelementptr inbounds %struct.journal_superblock_s, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %s_start to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %s_start, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp = icmp eq i32 %9, 0
  br i1 %cmp, label %if.then9, label %if.end11

if.then9:                                         ; preds = %lock_buffer.exit
  call void @__sanitizer_cov_trace_pc() #21
  %10 = ptrtoint ptr %j_sb_buffer to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %j_sb_buffer, align 8
  tail call void @unlock_buffer(ptr noundef %11) #19
  br label %cleanup

if.end11:                                         ; preds = %lock_buffer.exit
  %j_tail_sequence = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 41
  %12 = ptrtoint ptr %j_tail_sequence to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %j_tail_sequence, align 4
  tail call void (i32, ptr, ptr, i32, ptr, ...) @__jbd2_debug(i32 noundef 1, ptr noundef nonnull @.str.2, ptr noundef nonnull @__func__.jbd2_mark_journal_empty, i32 noundef 1723, ptr noundef nonnull @.str.167, i32 noundef %13)
  %14 = ptrtoint ptr %j_tail_sequence to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %j_tail_sequence, align 4
  %s_sequence = getelementptr inbounds %struct.journal_superblock_s, ptr %1, i32 0, i32 4
  %16 = ptrtoint ptr %s_sequence to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %s_sequence, align 4
  %17 = ptrtoint ptr %s_start to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %s_start, align 4
  %j_format_version.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 6
  %18 = ptrtoint ptr %j_format_version.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %j_format_version.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %19)
  %cmp.i = icmp sgt i32 %19, 1
  br i1 %cmp.i, label %jbd2_has_feature_fast_commit.exit, label %if.end11.if.end20.critedge_crit_edge

if.end11.if.end20.critedge_crit_edge:             ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end20.critedge

jbd2_has_feature_fast_commit.exit:                ; preds = %if.end11
  %20 = ptrtoint ptr %j_superblock to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %j_superblock, align 4
  %s_feature_incompat.i = getelementptr inbounds %struct.journal_superblock_s, ptr %21, i32 0, i32 8
  %22 = ptrtoint ptr %s_feature_incompat.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %s_feature_incompat.i, align 4
  %and.i = and i32 %23, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %cmp1.i.not = icmp eq i32 %and.i, 0
  br i1 %cmp1.i.not, label %jbd2_has_feature_fast_commit.exit.if.end20.critedge_crit_edge, label %if.then15

jbd2_has_feature_fast_commit.exit.if.end20.critedge_crit_edge: ; preds = %jbd2_has_feature_fast_commit.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end20.critedge

if.then15:                                        ; preds = %jbd2_has_feature_fast_commit.exit
  call void @__sanitizer_cov_trace_pc() #21
  %24 = ptrtoint ptr %j_superblock to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %j_superblock, align 4
  %s_feature_incompat.i39 = getelementptr inbounds %struct.journal_superblock_s, ptr %25, i32 0, i32 8
  %26 = ptrtoint ptr %s_feature_incompat.i39 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %s_feature_incompat.i39, align 4
  %and.i40 = and i32 %27, -33
  store i32 %and.i40, ptr %s_feature_incompat.i39, align 4
  %call17.c = tail call fastcc i32 @jbd2_write_superblock(ptr noundef %journal, i32 noundef %write_op)
  %28 = ptrtoint ptr %j_superblock to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %j_superblock, align 4
  %s_feature_incompat.i42 = getelementptr inbounds %struct.journal_superblock_s, ptr %29, i32 0, i32 8
  %30 = ptrtoint ptr %s_feature_incompat.i42 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %s_feature_incompat.i42, align 4
  %or.i = or i32 %31, 32
  store i32 %or.i, ptr %s_feature_incompat.i42, align 4
  br label %if.end20

if.end20.critedge:                                ; preds = %jbd2_has_feature_fast_commit.exit.if.end20.critedge_crit_edge, %if.end11.if.end20.critedge_crit_edge
  %call17.c37 = tail call fastcc i32 @jbd2_write_superblock(ptr noundef %journal, i32 noundef %write_op)
  br label %if.end20

if.end20:                                         ; preds = %if.end20.critedge, %if.then15
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 7
  tail call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  %32 = ptrtoint ptr %journal to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %journal, align 8
  %or = or i32 %33, 8
  store i32 %or, ptr %journal, align 8
  tail call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end20, %if.then9
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_counter_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @unregister_shrinker(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @iput(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @jbd2_journal_destroy_revoke(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @journal_get_superblock(ptr noundef %journal) unnamed_addr #0 align 64 {
entry:
  %desc.i = alloca %struct.anon.130, align 8
  %desc.i.i = alloca %struct.anon.130, align 8
  %bh = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %bh) #19
  %j_sb_buffer = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 4
  %0 = ptrtoint ptr %j_sb_buffer to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %j_sb_buffer, align 8
  %2 = ptrtoint ptr %bh to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %1, ptr %bh, align 4
  %cmp.not = icmp eq ptr %1, null
  br i1 %cmp.not, label %do.body3, label %do.end8, !prof !789

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1902, 0\0A.popsection", ""() #19, !srcloc !827
  unreachable

do.end8:                                          ; preds = %entry
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %1, align 4
  %and1.i.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool9.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool9.not, label %if.then10, label %do.end8.if.end19_crit_edge

do.end8.if.end19_crit_edge:                       ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end19

if.then10:                                        ; preds = %do.end8
  call void @ll_rw_block(i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef nonnull %bh) #19
  %5 = ptrtoint ptr %bh to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %bh, align 4
  call void @__might_sleep(ptr noundef nonnull @.str.104, i32 noundef 354) #19
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %6, align 4
  %9 = and i32 %8, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i171 = icmp eq i32 %9, 0
  br i1 %tobool.not.i171, label %if.then10.wait_on_buffer.exit_crit_edge, label %if.then.i172

if.then10.wait_on_buffer.exit_crit_edge:          ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #21
  br label %wait_on_buffer.exit

if.then.i172:                                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #21
  call void @__wait_on_buffer(ptr noundef %6) #19
  br label %wait_on_buffer.exit

wait_on_buffer.exit:                              ; preds = %if.then.i172, %if.then10.wait_on_buffer.exit_crit_edge
  %10 = ptrtoint ptr %bh to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %bh, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  %and1.i.i169 = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i169)
  %tobool12.not = icmp eq i32 %and1.i.i169, 0
  br i1 %tobool12.not, label %do.end16, label %wait_on_buffer.exit.if.end19_crit_edge

wait_on_buffer.exit.if.end19_crit_edge:           ; preds = %wait_on_buffer.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end19

do.end16:                                         ; preds = %wait_on_buffer.exit
  call void @__sanitizer_cov_trace_pc() #21
  %call17 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.168) #22
  br label %out

if.end19:                                         ; preds = %wait_on_buffer.exit.if.end19_crit_edge, %do.end8.if.end19_crit_edge
  %14 = ptrtoint ptr %bh to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bh, align 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %15, align 4
  %18 = and i32 %17, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool21.not = icmp eq i32 %18, 0
  br i1 %tobool21.not, label %if.end23, label %if.end19.cleanup_crit_edge

if.end19.cleanup_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end23:                                         ; preds = %if.end19
  %j_superblock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 5
  %19 = ptrtoint ptr %j_superblock to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %j_superblock, align 4
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %20, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1069860456, i32 %22)
  %cmp24.not = icmp eq i32 %22, -1069860456
  br i1 %cmp24.not, label %lor.lhs.false, label %if.end23.do.end29_crit_edge

if.end23.do.end29_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end29

lor.lhs.false:                                    ; preds = %if.end23
  %s_blocksize = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 1
  %23 = ptrtoint ptr %s_blocksize to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %s_blocksize, align 4
  %j_blocksize = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 33
  %25 = ptrtoint ptr %j_blocksize to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %j_blocksize, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %24, i32 %26)
  %cmp25.not = icmp eq i32 %24, %26
  br i1 %cmp25.not, label %if.end32, label %lor.lhs.false.do.end29_crit_edge

lor.lhs.false.do.end29_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end29

do.end29:                                         ; preds = %lor.lhs.false.do.end29_crit_edge, %if.end23.do.end29_crit_edge
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.171) #22
  br label %out

if.end32:                                         ; preds = %lor.lhs.false
  %h_blocktype = getelementptr inbounds %struct.journal_header_s, ptr %20, i32 0, i32 1
  %27 = ptrtoint ptr %h_blocktype to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %h_blocktype, align 4
  %29 = zext i32 %28 to i64
  call void @__sanitizer_cov_trace_switch(i64 %29, ptr @__sancov_gen_cov_switch_values)
  switch i32 %28, label %do.end38 [
    i32 3, label %if.end32.sw.epilog_crit_edge
    i32 4, label %sw.bb34
  ]

if.end32.sw.epilog_crit_edge:                     ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.epilog

sw.bb34:                                          ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.epilog

do.end38:                                         ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #21
  %call40 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.174) #22
  br label %out

sw.epilog:                                        ; preds = %sw.bb34, %if.end32.sw.epilog_crit_edge
  %.sink = phi i32 [ 2, %sw.bb34 ], [ 1, %if.end32.sw.epilog_crit_edge ]
  %j_format_version35 = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 6
  %30 = ptrtoint ptr %j_format_version35 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %.sink, ptr %j_format_version35, align 8
  %s_maxlen = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 2
  %31 = ptrtoint ptr %s_maxlen to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %s_maxlen, align 4
  %j_total_len = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 37
  %33 = ptrtoint ptr %j_total_len to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %j_total_len, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %32, i32 %34)
  %cmp41 = icmp ult i32 %32, %34
  br i1 %cmp41, label %if.then42, label %if.else

if.then42:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  %35 = ptrtoint ptr %j_total_len to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %32, ptr %j_total_len, align 4
  br label %if.end55

if.else:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_cmp4(i32 %32, i32 %34)
  %cmp47 = icmp ugt i32 %32, %34
  br i1 %cmp47, label %do.end51, label %if.else.if.end55_crit_edge

if.else.if.end55_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end55

do.end51:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  %call53 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.177) #22
  br label %out

if.end55:                                         ; preds = %if.else.if.end55_crit_edge, %if.then42
  %s_first = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 3
  %36 = ptrtoint ptr %s_first to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %s_first, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %cmp56 = icmp eq i32 %37, 0
  br i1 %cmp56, label %if.end55.do.end64_crit_edge, label %lor.lhs.false57

if.end55.do.end64_crit_edge:                      ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end64

lor.lhs.false57:                                  ; preds = %if.end55
  %38 = ptrtoint ptr %j_total_len to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %j_total_len, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %37, i32 %39)
  %cmp60.not = icmp ult i32 %37, %39
  br i1 %cmp60.not, label %if.end68, label %lor.lhs.false57.do.end64_crit_edge

lor.lhs.false57.do.end64_crit_edge:               ; preds = %lor.lhs.false57
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end64

do.end64:                                         ; preds = %lor.lhs.false57.do.end64_crit_edge, %if.end55.do.end64_crit_edge
  %call67 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.180, i32 noundef %37) #22
  br label %out

if.end68:                                         ; preds = %lor.lhs.false57
  %j_format_version.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 6
  %40 = ptrtoint ptr %j_format_version.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %j_format_version.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %41)
  %cmp.i = icmp sgt i32 %41, 1
  br i1 %cmp.i, label %jbd2_has_feature_csum2.exit, label %if.end68.jbd2_journal_has_csum_v2or3.exit_crit_edge

if.end68.jbd2_journal_has_csum_v2or3.exit_crit_edge: ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_journal_has_csum_v2or3.exit

jbd2_has_feature_csum2.exit:                      ; preds = %if.end68
  %s_feature_incompat.i = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 8
  %42 = ptrtoint ptr %s_feature_incompat.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %s_feature_incompat.i, align 4
  %and.i = and i32 %43, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %cmp1.i.not = icmp eq i32 %and.i, 0
  br i1 %cmp1.i.not, label %jbd2_has_feature_csum2.exit.jbd2_has_feature_csum2.exit.i_crit_edge, label %jbd2_has_feature_csum3.exit

jbd2_has_feature_csum2.exit.jbd2_has_feature_csum2.exit.i_crit_edge: ; preds = %jbd2_has_feature_csum2.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_has_feature_csum2.exit.i

jbd2_has_feature_csum3.exit:                      ; preds = %jbd2_has_feature_csum2.exit
  %44 = ptrtoint ptr %s_feature_incompat.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %s_feature_incompat.i, align 4
  %and.i177 = and i32 %45, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i177)
  %cmp1.i178.not = icmp eq i32 %and.i177, 0
  br i1 %cmp1.i178.not, label %jbd2_has_feature_csum3.exit.jbd2_has_feature_csum2.exit.i_crit_edge, label %do.end74

jbd2_has_feature_csum3.exit.jbd2_has_feature_csum2.exit.i_crit_edge: ; preds = %jbd2_has_feature_csum3.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_has_feature_csum2.exit.i

do.end74:                                         ; preds = %jbd2_has_feature_csum3.exit
  call void @__sanitizer_cov_trace_pc() #21
  %call76 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.183) #22
  br label %out

jbd2_has_feature_csum2.exit.i:                    ; preds = %jbd2_has_feature_csum3.exit.jbd2_has_feature_csum2.exit.i_crit_edge, %jbd2_has_feature_csum2.exit.jbd2_has_feature_csum2.exit.i_crit_edge
  %46 = ptrtoint ptr %s_feature_incompat.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %s_feature_incompat.i, align 4
  %48 = and i32 %47, 24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %.not = icmp eq i32 %48, 0
  br i1 %.not, label %jbd2_has_feature_csum2.exit.i.jbd2_has_feature_csum2.exit.i.i_crit_edge, label %jbd2_has_feature_checksum.exit

jbd2_has_feature_csum2.exit.i.jbd2_has_feature_csum2.exit.i.i_crit_edge: ; preds = %jbd2_has_feature_csum2.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_has_feature_csum2.exit.i.i

jbd2_has_feature_checksum.exit:                   ; preds = %jbd2_has_feature_csum2.exit.i
  %s_feature_compat.i = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 7
  %49 = ptrtoint ptr %s_feature_compat.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %s_feature_compat.i, align 4
  %and.i183 = and i32 %50, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i183)
  %cmp1.i184.not = icmp eq i32 %and.i183, 0
  br i1 %cmp1.i184.not, label %jbd2_has_feature_checksum.exit.jbd2_has_feature_csum2.exit.i.i_crit_edge, label %do.end84

jbd2_has_feature_checksum.exit.jbd2_has_feature_csum2.exit.i.i_crit_edge: ; preds = %jbd2_has_feature_checksum.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_has_feature_csum2.exit.i.i

do.end84:                                         ; preds = %jbd2_has_feature_checksum.exit
  call void @__sanitizer_cov_trace_pc() #21
  %call86 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.186) #22
  br label %out

jbd2_has_feature_csum2.exit.i.i:                  ; preds = %jbd2_has_feature_checksum.exit.jbd2_has_feature_csum2.exit.i.i_crit_edge, %jbd2_has_feature_csum2.exit.i.jbd2_has_feature_csum2.exit.i.i_crit_edge
  %51 = ptrtoint ptr %s_feature_incompat.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %s_feature_incompat.i, align 4
  %53 = and i32 %52, 24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %.not.i = icmp eq i32 %53, 0
  br i1 %.not.i, label %jbd2_has_feature_csum2.exit.i.i.jbd2_has_feature_csum2.exit.i193_crit_edge, label %jbd2_verify_csum_type.exit

jbd2_has_feature_csum2.exit.i.i.jbd2_has_feature_csum2.exit.i193_crit_edge: ; preds = %jbd2_has_feature_csum2.exit.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_has_feature_csum2.exit.i193

jbd2_verify_csum_type.exit:                       ; preds = %jbd2_has_feature_csum2.exit.i.i
  %s_checksum_type.i = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 15
  %54 = ptrtoint ptr %s_checksum_type.i to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %s_checksum_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %55)
  %cmp.i186.not = icmp eq i8 %55, 4
  br i1 %cmp.i186.not, label %jbd2_verify_csum_type.exit.jbd2_has_feature_csum2.exit.i193_crit_edge, label %do.end93

jbd2_verify_csum_type.exit.jbd2_has_feature_csum2.exit.i193_crit_edge: ; preds = %jbd2_verify_csum_type.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_has_feature_csum2.exit.i193

do.end93:                                         ; preds = %jbd2_verify_csum_type.exit
  call void @__sanitizer_cov_trace_pc() #21
  %call95 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.189) #22
  br label %out

jbd2_has_feature_csum2.exit.i193:                 ; preds = %jbd2_verify_csum_type.exit.jbd2_has_feature_csum2.exit.i193_crit_edge, %jbd2_has_feature_csum2.exit.i.i.jbd2_has_feature_csum2.exit.i193_crit_edge
  %56 = ptrtoint ptr %s_feature_incompat.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %s_feature_incompat.i, align 4
  %58 = and i32 %57, 24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %.not228 = icmp eq i32 %58, 0
  br i1 %.not228, label %jbd2_has_feature_csum2.exit.i193.if.end112_crit_edge, label %if.then98

jbd2_has_feature_csum2.exit.i193.if.end112_crit_edge: ; preds = %jbd2_has_feature_csum2.exit.i193
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end112

if.then98:                                        ; preds = %jbd2_has_feature_csum2.exit.i193
  %call99 = call ptr @crypto_alloc_shash(ptr noundef nonnull @.str.27, i32 noundef 0, i32 noundef 0) #19
  %j_chksum_driver = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 70
  %59 = ptrtoint ptr %j_chksum_driver to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr %call99, ptr %j_chksum_driver, align 8
  %cmp.i199 = icmp ugt ptr %call99, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i199, label %do.end105, label %if.then98.if.end112_crit_edge

if.then98.if.end112_crit_edge:                    ; preds = %if.then98
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end112

do.end105:                                        ; preds = %if.then98
  call void @__sanitizer_cov_trace_pc() #21
  %call107 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.29) #22
  %60 = ptrtoint ptr %j_chksum_driver to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %j_chksum_driver, align 8
  %62 = ptrtoint ptr %61 to i32
  store ptr null, ptr %j_chksum_driver, align 8
  br label %out

if.end112:                                        ; preds = %if.then98.if.end112_crit_edge, %jbd2_has_feature_csum2.exit.i193.if.end112_crit_edge
  %63 = ptrtoint ptr %j_format_version.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %.pr = load i32, ptr %j_format_version.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %.pr)
  %cmp.i.i.i201 = icmp sgt i32 %.pr, 1
  br i1 %cmp.i.i.i201, label %jbd2_has_feature_csum2.exit.i.i205, label %if.end112.jbd2_journal_has_csum_v2or3.exit_crit_edge

if.end112.jbd2_journal_has_csum_v2or3.exit_crit_edge: ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_journal_has_csum_v2or3.exit

jbd2_has_feature_csum2.exit.i.i205:               ; preds = %if.end112
  %64 = ptrtoint ptr %j_superblock to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %j_superblock, align 4
  %s_feature_incompat.i.i.i203 = getelementptr inbounds %struct.journal_superblock_s, ptr %65, i32 0, i32 8
  %66 = ptrtoint ptr %s_feature_incompat.i.i.i203 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %s_feature_incompat.i.i.i203, align 4
  %68 = and i32 %67, 24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %.not.i204 = icmp eq i32 %68, 0
  br i1 %.not.i204, label %jbd2_has_feature_csum2.exit.i.i205.jbd2_journal_has_csum_v2or3.exit_crit_edge, label %land.rhs.i207

jbd2_has_feature_csum2.exit.i.i205.jbd2_journal_has_csum_v2or3.exit_crit_edge: ; preds = %jbd2_has_feature_csum2.exit.i.i205
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_journal_has_csum_v2or3.exit

land.rhs.i207:                                    ; preds = %jbd2_has_feature_csum2.exit.i.i205
  %j_chksum_driver.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 70
  %69 = ptrtoint ptr %j_chksum_driver.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %j_chksum_driver.i, align 8
  %cmp.i206 = icmp eq ptr %70, null
  br i1 %cmp.i206, label %land.rhs2.i, label %land.rhs.i207.jbd2_journal_has_csum_v2or3.exit_crit_edge

land.rhs.i207.jbd2_journal_has_csum_v2or3.exit_crit_edge: ; preds = %land.rhs.i207
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_journal_has_csum_v2or3.exit

land.rhs2.i:                                      ; preds = %land.rhs.i207
  %.b43.i = load i1, ptr @jbd2_journal_has_csum_v2or3.__already_done, align 1
  br i1 %.b43.i, label %land.rhs2.i.jbd2_journal_has_csum_v2or3.exit_crit_edge, label %if.then.i208, !prof !788

land.rhs2.i.jbd2_journal_has_csum_v2or3.exit_crit_edge: ; preds = %land.rhs2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_journal_has_csum_v2or3.exit

if.then.i208:                                     ; preds = %land.rhs2.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @jbd2_journal_has_csum_v2or3.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.105, i32 noundef 1735, i32 noundef 9, ptr noundef null) #19
  br label %jbd2_journal_has_csum_v2or3.exit

jbd2_journal_has_csum_v2or3.exit:                 ; preds = %if.then.i208, %land.rhs2.i.jbd2_journal_has_csum_v2or3.exit_crit_edge, %land.rhs.i207.jbd2_journal_has_csum_v2or3.exit_crit_edge, %jbd2_has_feature_csum2.exit.i.i205.jbd2_journal_has_csum_v2or3.exit_crit_edge, %if.end112.jbd2_journal_has_csum_v2or3.exit_crit_edge, %if.end68.jbd2_journal_has_csum_v2or3.exit_crit_edge
  %j_chksum_driver37.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 70
  %71 = ptrtoint ptr %j_chksum_driver37.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %j_chksum_driver37.i, align 8
  %cmp38.i.not = icmp eq ptr %72, null
  br i1 %cmp38.i.not, label %jbd2_journal_has_csum_v2or3.exit.if.end126_crit_edge, label %if.then115

jbd2_journal_has_csum_v2or3.exit.if.end126_crit_edge: ; preds = %jbd2_journal_has_csum_v2or3.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end126

if.then115:                                       ; preds = %jbd2_journal_has_csum_v2or3.exit
  %s_checksum = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 19
  %73 = ptrtoint ptr %s_checksum to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %s_checksum, align 4
  store i32 0, ptr %s_checksum, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %desc.i.i) #19
  %75 = call ptr @memset(ptr %desc.i.i, i32 255, i32 16)
  %76 = ptrtoint ptr %j_chksum_driver37.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %j_chksum_driver37.i, align 8
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %77, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %79)
  %cmp.i.i209 = icmp ugt i32 %79, 4
  br i1 %cmp.i.i209, label %do.body2.i.i, label %do.end7.i.i, !prof !789

do.body2.i.i:                                     ; preds = %if.then115
  call void @__sanitizer_cov_trace_pc() #21
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/jbd2.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1787, 0\0A.popsection", ""() #19, !srcloc !796
  unreachable

do.end7.i.i:                                      ; preds = %if.then115
  %80 = ptrtoint ptr %desc.i.i to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr %77, ptr %desc.i.i, align 8
  %call10.i.i = call i32 @crypto_shash_update(ptr noundef nonnull %desc.i.i, ptr noundef %20, i32 noundef 1024) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i.i)
  %tobool12.not.i.i = icmp eq i32 %call10.i.i, 0
  br i1 %tobool12.not.i.i, label %jbd2_superblock_csum.exit, label %do.body20.i.i, !prof !788

do.body20.i.i:                                    ; preds = %do.end7.i.i
  call void @__sanitizer_cov_trace_pc() #21
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/jbd2.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1793, 0\0A.popsection", ""() #19, !srcloc !797
  unreachable

jbd2_superblock_csum.exit:                        ; preds = %do.end7.i.i
  %81 = getelementptr inbounds %struct.anon.130, ptr %desc.i.i, i32 0, i32 1
  %82 = ptrtoint ptr %81 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %81, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %desc.i.i) #19
  %84 = ptrtoint ptr %s_checksum to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 %74, ptr %s_checksum, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %74, i32 %83)
  %cmp117.not = icmp eq i32 %74, %83
  br i1 %cmp117.not, label %if.end124, label %do.end121

do.end121:                                        ; preds = %jbd2_superblock_csum.exit
  call void @__sanitizer_cov_trace_pc() #21
  %call123 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.194) #22
  br label %out

if.end124:                                        ; preds = %jbd2_superblock_csum.exit
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %desc.i) #19
  %85 = getelementptr inbounds %struct.anon.130, ptr %desc.i, i32 0, i32 1
  %86 = call ptr @memset(ptr %desc.i, i32 255, i32 16)
  %87 = ptrtoint ptr %j_chksum_driver37.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %j_chksum_driver37.i, align 8
  %89 = ptrtoint ptr %88 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %88, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %90)
  %cmp.i211 = icmp ugt i32 %90, 4
  br i1 %cmp.i211, label %do.body2.i, label %do.end7.i, !prof !789

do.body2.i:                                       ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #21
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/jbd2.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1787, 0\0A.popsection", ""() #19, !srcloc !796
  unreachable

do.end7.i:                                        ; preds = %if.end124
  %s_uuid = getelementptr inbounds %struct.journal_superblock_s, ptr %20, i32 0, i32 10
  %91 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %88, ptr %desc.i, align 8
  %call10.i = call i32 @crypto_shash_update(ptr noundef nonnull %desc.i, ptr noundef %s_uuid, i32 noundef 16) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool12.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool12.not.i, label %jbd2_chksum.exit, label %do.body20.i, !prof !788

do.body20.i:                                      ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #21
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/jbd2.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1793, 0\0A.popsection", ""() #19, !srcloc !797
  unreachable

jbd2_chksum.exit:                                 ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #21
  %92 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %85, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %desc.i) #19
  %j_csum_seed = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 71
  %94 = ptrtoint ptr %j_csum_seed to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 %93, ptr %j_csum_seed, align 4
  br label %if.end126

if.end126:                                        ; preds = %jbd2_chksum.exit, %jbd2_journal_has_csum_v2or3.exit.if.end126_crit_edge
  %95 = ptrtoint ptr %j_blocksize to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %j_blocksize, align 8
  %97 = ptrtoint ptr %j_format_version.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %j_format_version.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %98)
  %cmp.i.i213 = icmp sgt i32 %98, 1
  br i1 %cmp.i.i213, label %jbd2_has_feature_64bit.exit.i, label %if.end126.journal_revoke_records_per_block.exit_crit_edge

if.end126.journal_revoke_records_per_block.exit_crit_edge: ; preds = %if.end126
  call void @__sanitizer_cov_trace_pc() #21
  br label %journal_revoke_records_per_block.exit

jbd2_has_feature_64bit.exit.i:                    ; preds = %if.end126
  %99 = ptrtoint ptr %j_superblock to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %j_superblock, align 4
  %s_feature_incompat.i.i215 = getelementptr inbounds %struct.journal_superblock_s, ptr %100, i32 0, i32 8
  %101 = ptrtoint ptr %s_feature_incompat.i.i215 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %s_feature_incompat.i.i215, align 4
  %and.i.i216 = and i32 %102, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i216)
  %cmp1.i.not.i217 = icmp eq i32 %and.i.i216, 0
  %spec.select.i = select i1 %cmp1.i.not.i217, i32 4, i32 8
  %103 = and i32 %102, 24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %103)
  %.not.i.i = icmp eq i32 %103, 0
  br i1 %.not.i.i, label %jbd2_has_feature_64bit.exit.i.journal_revoke_records_per_block.exit_crit_edge, label %land.rhs.i9.i219

jbd2_has_feature_64bit.exit.i.journal_revoke_records_per_block.exit_crit_edge: ; preds = %jbd2_has_feature_64bit.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %journal_revoke_records_per_block.exit

land.rhs.i9.i219:                                 ; preds = %jbd2_has_feature_64bit.exit.i
  %104 = ptrtoint ptr %j_chksum_driver37.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %j_chksum_driver37.i, align 8
  %cmp.i8.i = icmp eq ptr %105, null
  br i1 %cmp.i8.i, label %land.rhs2.i.i, label %land.rhs.i9.i219.journal_revoke_records_per_block.exit_crit_edge

land.rhs.i9.i219.journal_revoke_records_per_block.exit_crit_edge: ; preds = %land.rhs.i9.i219
  call void @__sanitizer_cov_trace_pc() #21
  br label %journal_revoke_records_per_block.exit

land.rhs2.i.i:                                    ; preds = %land.rhs.i9.i219
  %.b43.i.i = load i1, ptr @jbd2_journal_has_csum_v2or3.__already_done, align 1
  br i1 %.b43.i.i, label %land.rhs2.i.i.journal_revoke_records_per_block.exit_crit_edge, label %if.then.i.i, !prof !788

land.rhs2.i.i.journal_revoke_records_per_block.exit_crit_edge: ; preds = %land.rhs2.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %journal_revoke_records_per_block.exit

if.then.i.i:                                      ; preds = %land.rhs2.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @jbd2_journal_has_csum_v2or3.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.105, i32 noundef 1735, i32 noundef 9, ptr noundef null) #19
  br label %journal_revoke_records_per_block.exit

journal_revoke_records_per_block.exit:            ; preds = %if.then.i.i, %land.rhs2.i.i.journal_revoke_records_per_block.exit_crit_edge, %land.rhs.i9.i219.journal_revoke_records_per_block.exit_crit_edge, %jbd2_has_feature_64bit.exit.i.journal_revoke_records_per_block.exit_crit_edge, %if.end126.journal_revoke_records_per_block.exit_crit_edge
  %106 = phi i32 [ %spec.select.i, %jbd2_has_feature_64bit.exit.i.journal_revoke_records_per_block.exit_crit_edge ], [ %spec.select.i, %land.rhs.i9.i219.journal_revoke_records_per_block.exit_crit_edge ], [ %spec.select.i, %land.rhs2.i.i.journal_revoke_records_per_block.exit_crit_edge ], [ %spec.select.i, %if.then.i.i ], [ 4, %if.end126.journal_revoke_records_per_block.exit_crit_edge ]
  %107 = ptrtoint ptr %j_chksum_driver37.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %j_chksum_driver37.i, align 8
  %cmp38.i.not.i = icmp eq ptr %108, null
  %space.0.v.i = select i1 %cmp38.i.not.i, i32 -16, i32 -20
  %space.0.i = add i32 %space.0.v.i, %96
  %div.i = sdiv i32 %space.0.i, %106
  %j_revoke_records_per_block = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 48
  %109 = ptrtoint ptr %j_revoke_records_per_block to i32
  call void @__asan_store4_noabort(i32 %109)
  store i32 %div.i, ptr %j_revoke_records_per_block, align 4
  %110 = ptrtoint ptr %bh to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %bh, align 4
  %112 = ptrtoint ptr %111 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load volatile i32, ptr %111, align 4
  %114 = and i32 %113, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %114)
  %tobool.not.i = icmp eq i32 %114, 0
  br i1 %tobool.not.i, label %if.then.i, label %journal_revoke_records_per_block.exit.cleanup_crit_edge

journal_revoke_records_per_block.exit.cleanup_crit_edge: ; preds = %journal_revoke_records_per_block.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then.i:                                        ; preds = %journal_revoke_records_per_block.exit
  call void @__sanitizer_cov_trace_pc() #21
  call void @_set_bit(i32 noundef 24, ptr noundef %111) #19
  br label %cleanup

out:                                              ; preds = %do.end121, %do.end105, %do.end93, %do.end84, %do.end74, %do.end64, %do.end51, %do.end38, %do.end29, %do.end16
  %err.0 = phi i32 [ -22, %do.end29 ], [ -22, %do.end38 ], [ -22, %do.end64 ], [ -22, %do.end74 ], [ -22, %do.end84 ], [ %62, %do.end105 ], [ -74, %do.end121 ], [ -22, %do.end93 ], [ -22, %do.end51 ], [ -5, %do.end16 ]
  %115 = ptrtoint ptr %j_sb_buffer to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %j_sb_buffer, align 8
  %tobool.not.i.i = icmp eq ptr %116, null
  br i1 %tobool.not.i.i, label %out.journal_fail_superblock.exit_crit_edge, label %if.then.i.i220

out.journal_fail_superblock.exit_crit_edge:       ; preds = %out
  call void @__sanitizer_cov_trace_pc() #21
  br label %journal_fail_superblock.exit

if.then.i.i220:                                   ; preds = %out
  call void @__sanitizer_cov_trace_pc() #21
  call void @__brelse(ptr noundef nonnull %116) #19
  br label %journal_fail_superblock.exit

journal_fail_superblock.exit:                     ; preds = %if.then.i.i220, %out.journal_fail_superblock.exit_crit_edge
  %117 = ptrtoint ptr %j_sb_buffer to i32
  call void @__asan_store4_noabort(i32 %117)
  store ptr null, ptr %j_sb_buffer, align 8
  br label %cleanup

cleanup:                                          ; preds = %journal_fail_superblock.exit, %if.then.i, %journal_revoke_records_per_block.exit.cleanup_crit_edge, %if.end19.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %journal_fail_superblock.exit ], [ 0, %if.end19.cleanup_crit_edge ], [ 0, %journal_revoke_records_per_block.exit.cleanup_crit_edge ], [ 0, %if.then.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %bh) #19
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @crypto_alloc_shash(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @jbd2_journal_clear_features(ptr nocapture noundef %journal, i32 noundef %compat, i32 noundef %ro, i32 noundef %incompat) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void (i32, ptr, ptr, i32, ptr, ...) @__jbd2_debug(i32 noundef 1, ptr noundef nonnull @.str.2, ptr noundef nonnull @__func__.jbd2_journal_clear_features, i32 noundef 2410, ptr noundef nonnull @.str.31, i32 noundef %compat, i32 noundef %ro, i32 noundef %incompat)
  %j_superblock = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 5
  %0 = ptrtoint ptr %j_superblock to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %j_superblock, align 4
  %neg = xor i32 %compat, -1
  %s_feature_compat = getelementptr inbounds %struct.journal_superblock_s, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %s_feature_compat to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %s_feature_compat, align 4
  %and = and i32 %3, %neg
  store i32 %and, ptr %s_feature_compat, align 4
  %neg1 = xor i32 %ro, -1
  %s_feature_ro_compat = getelementptr inbounds %struct.journal_superblock_s, ptr %1, i32 0, i32 9
  %4 = ptrtoint ptr %s_feature_ro_compat to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %s_feature_ro_compat, align 4
  %and2 = and i32 %5, %neg1
  store i32 %and2, ptr %s_feature_ro_compat, align 4
  %neg3 = xor i32 %incompat, -1
  %s_feature_incompat = getelementptr inbounds %struct.journal_superblock_s, ptr %1, i32 0, i32 8
  %6 = ptrtoint ptr %s_feature_incompat to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %s_feature_incompat, align 4
  %and4 = and i32 %7, %neg3
  store i32 %and4, ptr %s_feature_incompat, align 4
  %j_blocksize.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 33
  %8 = ptrtoint ptr %j_blocksize.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %j_blocksize.i, align 8
  %j_format_version.i.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 6
  %10 = ptrtoint ptr %j_format_version.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %j_format_version.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %cmp.i.i = icmp sgt i32 %11, 1
  br i1 %cmp.i.i, label %jbd2_has_feature_64bit.exit.i, label %entry.journal_revoke_records_per_block.exit_crit_edge

entry.journal_revoke_records_per_block.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %journal_revoke_records_per_block.exit

jbd2_has_feature_64bit.exit.i:                    ; preds = %entry
  %12 = ptrtoint ptr %j_superblock to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %j_superblock, align 4
  %s_feature_incompat.i.i = getelementptr inbounds %struct.journal_superblock_s, ptr %13, i32 0, i32 8
  %14 = ptrtoint ptr %s_feature_incompat.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %s_feature_incompat.i.i, align 4
  %and.i.i = and i32 %15, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %cmp1.i.not.i = icmp eq i32 %and.i.i, 0
  %spec.select.i = select i1 %cmp1.i.not.i, i32 4, i32 8
  %16 = and i32 %15, 24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %.not.i.i = icmp eq i32 %16, 0
  br i1 %.not.i.i, label %jbd2_has_feature_64bit.exit.i.journal_revoke_records_per_block.exit_crit_edge, label %land.rhs.i9.i

jbd2_has_feature_64bit.exit.i.journal_revoke_records_per_block.exit_crit_edge: ; preds = %jbd2_has_feature_64bit.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %journal_revoke_records_per_block.exit

land.rhs.i9.i:                                    ; preds = %jbd2_has_feature_64bit.exit.i
  %j_chksum_driver.i.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 70
  %17 = ptrtoint ptr %j_chksum_driver.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %j_chksum_driver.i.i, align 8
  %cmp.i8.i = icmp eq ptr %18, null
  br i1 %cmp.i8.i, label %land.rhs2.i.i, label %land.rhs.i9.i.journal_revoke_records_per_block.exit_crit_edge

land.rhs.i9.i.journal_revoke_records_per_block.exit_crit_edge: ; preds = %land.rhs.i9.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %journal_revoke_records_per_block.exit

land.rhs2.i.i:                                    ; preds = %land.rhs.i9.i
  %.b43.i.i = load i1, ptr @jbd2_journal_has_csum_v2or3.__already_done, align 1
  br i1 %.b43.i.i, label %land.rhs2.i.i.journal_revoke_records_per_block.exit_crit_edge, label %if.then.i.i, !prof !788

land.rhs2.i.i.journal_revoke_records_per_block.exit_crit_edge: ; preds = %land.rhs2.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %journal_revoke_records_per_block.exit

if.then.i.i:                                      ; preds = %land.rhs2.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @jbd2_journal_has_csum_v2or3.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.105, i32 noundef 1735, i32 noundef 9, ptr noundef null) #19
  br label %journal_revoke_records_per_block.exit

journal_revoke_records_per_block.exit:            ; preds = %if.then.i.i, %land.rhs2.i.i.journal_revoke_records_per_block.exit_crit_edge, %land.rhs.i9.i.journal_revoke_records_per_block.exit_crit_edge, %jbd2_has_feature_64bit.exit.i.journal_revoke_records_per_block.exit_crit_edge, %entry.journal_revoke_records_per_block.exit_crit_edge
  %19 = phi i32 [ %spec.select.i, %jbd2_has_feature_64bit.exit.i.journal_revoke_records_per_block.exit_crit_edge ], [ %spec.select.i, %land.rhs.i9.i.journal_revoke_records_per_block.exit_crit_edge ], [ %spec.select.i, %land.rhs2.i.i.journal_revoke_records_per_block.exit_crit_edge ], [ %spec.select.i, %if.then.i.i ], [ 4, %entry.journal_revoke_records_per_block.exit_crit_edge ]
  %j_chksum_driver37.i.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 70
  %20 = ptrtoint ptr %j_chksum_driver37.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %j_chksum_driver37.i.i, align 8
  %cmp38.i.not.i = icmp eq ptr %21, null
  %space.0.v.i = select i1 %cmp38.i.not.i, i32 -16, i32 -20
  %space.0.i = add i32 %space.0.v.i, %9
  %div.i = sdiv i32 %space.0.i, %19
  %j_revoke_records_per_block = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 48
  %22 = ptrtoint ptr %j_revoke_records_per_block to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %div.i, ptr %j_revoke_records_per_block, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_cleanup_journal_tail(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_skip_recovery(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @journal_tag_bytes(ptr nocapture noundef readonly %journal) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_format_version.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 6
  %0 = ptrtoint ptr %j_format_version.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %j_format_version.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp sgt i32 %1, 1
  br i1 %cmp.i, label %jbd2_has_feature_csum3.exit, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

jbd2_has_feature_csum3.exit:                      ; preds = %entry
  %j_superblock.i = getelementptr inbounds %struct.journal_s, ptr %journal, i32 0, i32 5
  %2 = ptrtoint ptr %j_superblock.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %j_superblock.i, align 4
  %s_feature_incompat.i = getelementptr inbounds %struct.journal_superblock_s, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %s_feature_incompat.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %s_feature_incompat.i, align 4
  %and.i = and i32 %5, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %cmp1.i.not = icmp eq i32 %and.i, 0
  br i1 %cmp1.i.not, label %jbd2_has_feature_csum2.exit, label %jbd2_has_feature_csum3.exit.cleanup_crit_edge

jbd2_has_feature_csum3.exit.cleanup_crit_edge:    ; preds = %jbd2_has_feature_csum3.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

jbd2_has_feature_csum2.exit:                      ; preds = %jbd2_has_feature_csum3.exit
  call void @__sanitizer_cov_trace_pc() #21
  %6 = ptrtoint ptr %j_superblock.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %j_superblock.i, align 4
  %s_feature_incompat.i14 = getelementptr inbounds %struct.journal_superblock_s, ptr %7, i32 0, i32 8
  %8 = ptrtoint ptr %s_feature_incompat.i14 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %s_feature_incompat.i14, align 4
  %and.i15 = and i32 %9, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i15)
  %cmp1.i16.not = icmp eq i32 %and.i15, 0
  %spec.select = select i1 %cmp1.i16.not, i32 12, i32 14
  %and.i22 = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i22)
  %cmp1.i23.not = icmp eq i32 %and.i22, 0
  %sub = add nsw i32 %spec.select, -4
  %spec.select26 = select i1 %cmp1.i23.not, i32 %sub, i32 %spec.select
  br label %cleanup

cleanup:                                          ; preds = %jbd2_has_feature_csum2.exit, %jbd2_has_feature_csum3.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 16, %jbd2_has_feature_csum3.exit.cleanup_crit_edge ], [ 8, %entry.cleanup_crit_edge ], [ %spec.select26, %jbd2_has_feature_csum2.exit ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kmem_cache_alloc(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__get_free_pages(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_pages(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @jbd2_journal_add_journal_head(ptr noundef %bh) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %b_count = getelementptr inbounds %struct.buffer_head, ptr %bh, i32 0, i32 11
  %b_page = getelementptr inbounds %struct.buffer_head, ptr %bh, i32 0, i32 2
  br label %repeat

repeat:                                           ; preds = %jbd_unlock_bh_journal_head.exit, %entry
  %0 = ptrtoint ptr %bh to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %bh, align 4
  %2 = and i32 %1, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %if.then, label %repeat.if.end_crit_edge

repeat.if.end_crit_edge:                          ; preds = %repeat
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.then:                                          ; preds = %repeat
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @nr_journal_heads, i32 noundef 4) #19
  tail call void @llvm.prefetch.p0(ptr nonnull @nr_journal_heads, i32 1, i32 3, i32 1) #19
  %3 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_journal_heads, ptr nonnull @nr_journal_heads, i32 1, ptr nonnull elementtype(i32) @nr_journal_heads) #19, !srcloc !825
  %4 = load ptr, ptr @jbd2_journal_head_cache, align 4
  %call.i.i52 = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %4, i32 noundef 3392) #19
  %tobool.not.i53 = icmp eq ptr %call.i.i52, null
  br i1 %tobool.not.i53, label %if.then.i54, label %if.then.do.body9.i_crit_edge

if.then.do.body9.i_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body9.i

if.then.i54:                                      ; preds = %if.then
  tail call void (i32, ptr, ptr, i32, ptr, ...) @__jbd2_debug(i32 noundef 1, ptr noundef nonnull @.str.2, ptr noundef nonnull @__func__.journal_alloc_journal_head, i32 noundef 2866, ptr noundef nonnull @.str.213) #19
  %call1.i = tail call i32 @___ratelimit(ptr noundef nonnull @journal_alloc_journal_head._rs, ptr noundef nonnull @__func__.journal_alloc_journal_head) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %if.then.i54.if.end6.i_crit_edge, label %do.end.i

if.then.i54.if.end6.i_crit_edge:                  ; preds = %if.then.i54
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end6.i

do.end.i:                                         ; preds = %if.then.i54
  call void @__sanitizer_cov_trace_pc() #21
  %call4.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.215, ptr noundef nonnull @__func__.journal_alloc_journal_head) #22
  br label %if.end6.i

if.end6.i:                                        ; preds = %do.end.i, %if.then.i54.if.end6.i_crit_edge
  %5 = load ptr, ptr @jbd2_journal_head_cache, align 4
  %call.i17.i = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %5, i32 noundef 36160) #19
  %tobool7.not.i = icmp eq ptr %call.i17.i, null
  br i1 %tobool7.not.i, label %if.end6.i.if.end_crit_edge, label %if.end6.i.do.body9.i_crit_edge

if.end6.i.do.body9.i_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body9.i

if.end6.i.if.end_crit_edge:                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.body9.i:                                       ; preds = %if.end6.i.do.body9.i_crit_edge, %if.then.do.body9.i_crit_edge
  %ret.020.i = phi ptr [ %call.i17.i, %if.end6.i.do.body9.i_crit_edge ], [ %call.i.i52, %if.then.do.body9.i_crit_edge ]
  %b_state_lock.i = getelementptr inbounds %struct.journal_head, ptr %ret.020.i, i32 0, i32 1
  tail call void @__raw_spin_lock_init(ptr noundef %b_state_lock.i, ptr noundef nonnull @.str.216, ptr noundef nonnull @journal_alloc_journal_head.__key, i16 noundef signext 3) #19
  br label %if.end

if.end:                                           ; preds = %do.body9.i, %if.end6.i.if.end_crit_edge, %repeat.if.end_crit_edge
  %new_jh.1 = phi ptr [ null, %repeat.if.end_crit_edge ], [ %ret.020.i, %do.body9.i ], [ null, %if.end6.i.if.end_crit_edge ]
  %6 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %9, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !828
  br label %while.cond.i.i

while.cond.i.i:                                   ; preds = %do.body14.i.i, %if.end
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %bh, i32 noundef 4) #19
  %10 = ptrtoint ptr %bh to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %bh, align 4
  %and.i.i.i.i = and i32 %11, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %test_and_set_bit_lock.exit.i.i, label %while.cond.i.i.do.body2.i.i_crit_edge, !prof !829

while.cond.i.i.do.body2.i.i_crit_edge:            ; preds = %while.cond.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2.i.i

test_and_set_bit_lock.exit.i.i:                   ; preds = %while.cond.i.i
  tail call void @llvm.prefetch.p0(ptr %bh, i32 1, i32 3, i32 1) #19
  %12 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %bh, ptr %bh, i32 4194304, ptr elementtype(i32) %bh) #19, !srcloc !798
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %12, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !799
  %13 = and i32 %asmresult.i.i.i.i.i.i.i, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %phi.cmp.i.not.i.i = icmp eq i32 %13, 0
  br i1 %phi.cmp.i.not.i.i, label %jbd_lock_bh_journal_head.exit, label %test_and_set_bit_lock.exit.i.i.do.body2.i.i_crit_edge, !prof !788

test_and_set_bit_lock.exit.i.i.do.body2.i.i_crit_edge: ; preds = %test_and_set_bit_lock.exit.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2.i.i

do.body2.i.i:                                     ; preds = %test_and_set_bit_lock.exit.i.i.do.body2.i.i_crit_edge, %while.cond.i.i.do.body2.i.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !830
  %14 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i1.i.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %preempt_count.i.i2.i.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i2.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i2.i.i, align 4
  %sub.i.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i2.i.i, align 4
  br label %do.body4.i.i

do.body4.i.i:                                     ; preds = %do.body4.i.i.do.body4.i.i_crit_edge, %do.body2.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !831
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #19, !srcloc !832
  %18 = ptrtoint ptr %bh to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %bh, align 4
  %20 = and i32 %19, 4194304
  %tobool12.not.i.i = icmp eq i32 %20, 0
  br i1 %tobool12.not.i.i, label %do.body14.i.i, label %do.body4.i.i.do.body4.i.i_crit_edge

do.body4.i.i.do.body4.i.i_crit_edge:              ; preds = %do.body4.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body4.i.i

do.body14.i.i:                                    ; preds = %do.body4.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %21 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i3.i.i = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i.i3.i.i to ptr
  %preempt_count.i.i4.i.i = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %preempt_count.i.i4.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %preempt_count.i.i4.i.i, align 4
  %add.i5.i.i = add i32 %24, 1
  store volatile i32 %add.i5.i.i, ptr %preempt_count.i.i4.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !833
  br label %while.cond.i.i

jbd_lock_bh_journal_head.exit:                    ; preds = %test_and_set_bit_lock.exit.i.i
  %25 = ptrtoint ptr %bh to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %bh, align 4
  %27 = and i32 %26, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool3.not = icmp eq i32 %27, 0
  br i1 %tobool3.not, label %do.body, label %if.then4

if.then4:                                         ; preds = %jbd_lock_bh_journal_head.exit
  call void @__sanitizer_cov_trace_pc() #21
  %b_private.i = getelementptr inbounds %struct.buffer_head, ptr %bh, i32 0, i32 8
  %28 = ptrtoint ptr %b_private.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %b_private.i, align 8
  br label %if.end27

do.body:                                          ; preds = %jbd_lock_bh_journal_head.exit
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %b_count, i32 noundef 4) #19
  %30 = ptrtoint ptr %b_count to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %b_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %cmp = icmp sgt i32 %31, 0
  br i1 %cmp, label %do.body.do.end20_crit_edge, label %lor.rhs

do.body.do.end20_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end20

lor.rhs:                                          ; preds = %do.body
  %32 = ptrtoint ptr %b_page to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %b_page, align 8
  %tobool7.not = icmp eq ptr %33, null
  br i1 %tobool7.not, label %lor.rhs.do.body14_crit_edge, label %land.rhs

lor.rhs.do.body14_crit_edge:                      ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body14

land.rhs:                                         ; preds = %lor.rhs
  %mapping = getelementptr inbounds %struct.page, ptr %33, i32 0, i32 1, i32 0, i32 1
  %34 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %mapping, align 4
  %tobool9.not = icmp eq ptr %35, null
  br i1 %tobool9.not, label %land.rhs.do.body14_crit_edge, label %land.rhs.do.end20_crit_edge, !prof !789

land.rhs.do.end20_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end20

land.rhs.do.body14_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body14

do.body14:                                        ; preds = %land.rhs.do.body14_crit_edge, %lor.rhs.do.body14_crit_edge
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2941, 0\0A.popsection", ""() #19, !srcloc !834
  unreachable

do.end20:                                         ; preds = %land.rhs.do.end20_crit_edge, %do.body.do.end20_crit_edge
  %tobool21.not = icmp eq ptr %new_jh.1, null
  %36 = ptrtoint ptr %bh to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %bh, align 4
  br i1 %tobool21.not, label %if.then22, label %if.end23

if.then22:                                        ; preds = %do.end20
  %38 = and i32 %37, 4194304
  %tobool.not.i.i = icmp eq i32 %38, 0
  br i1 %tobool.not.i.i, label %do.body4.i.i55, label %jbd_unlock_bh_journal_head.exit, !prof !789

do.body4.i.i55:                                   ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/bit_spinlock.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 60, 0\0A.popsection", ""() #19, !srcloc !835
  unreachable

jbd_unlock_bh_journal_head.exit:                  ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i.i56 = tail call zeroext i1 @__kasan_check_write(ptr noundef %bh, i32 noundef 4) #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !836
  tail call void @llvm.prefetch.p0(ptr %bh, i32 1, i32 3, i32 1) #19
  %39 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %bh, ptr %bh, i32 4194304, ptr elementtype(i32) %bh) #19, !srcloc !837
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !838
  %40 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i.i57 = and i32 %40, -16384
  %41 = inttoptr i32 %and.i.i.i.i.i57 to ptr
  %preempt_count.i.i.i.i58 = getelementptr inbounds %struct.thread_info, ptr %41, i32 0, i32 1
  %42 = ptrtoint ptr %preempt_count.i.i.i.i58 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %preempt_count.i.i.i.i58, align 4
  %sub.i.i.i59 = add i32 %43, -1
  store volatile i32 %sub.i.i.i59, ptr %preempt_count.i.i.i.i58, align 4
  br label %repeat

if.end23:                                         ; preds = %do.end20
  %44 = and i32 %37, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool.not.i = icmp eq i32 %44, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end23.set_buffer_jbd.exit_crit_edge

if.end23.set_buffer_jbd.exit_crit_edge:           ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #21
  br label %set_buffer_jbd.exit

if.then.i:                                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @_set_bit(i32 noundef 16, ptr noundef %bh) #19
  br label %set_buffer_jbd.exit

set_buffer_jbd.exit:                              ; preds = %if.then.i, %if.end23.set_buffer_jbd.exit_crit_edge
  %b_private = getelementptr inbounds %struct.buffer_head, ptr %bh, i32 0, i32 8
  %45 = ptrtoint ptr %b_private to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %new_jh.1, ptr %b_private, align 8
  %46 = ptrtoint ptr %new_jh.1 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %bh, ptr %new_jh.1, align 4
  %call.i.i.i60 = tail call zeroext i1 @__kasan_check_write(ptr noundef %b_count, i32 noundef 4) #19
  tail call void @llvm.prefetch.p0(ptr %b_count, i32 1, i32 3, i32 1) #19
  %47 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %b_count, ptr %b_count, i32 1, ptr elementtype(i32) %b_count) #19, !srcloc !825
  br label %if.end27

if.end27:                                         ; preds = %set_buffer_jbd.exit, %if.then4
  %jh.0 = phi ptr [ %29, %if.then4 ], [ %new_jh.1, %set_buffer_jbd.exit ]
  %new_jh.2 = phi ptr [ %new_jh.1, %if.then4 ], [ null, %set_buffer_jbd.exit ]
  %b_jcount = getelementptr inbounds %struct.journal_head, ptr %jh.0, i32 0, i32 2
  %48 = ptrtoint ptr %b_jcount to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %b_jcount, align 4
  %inc = add i32 %49, 1
  store i32 %inc, ptr %b_jcount, align 4
  %50 = ptrtoint ptr %bh to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %bh, align 4
  %52 = and i32 %51, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool.not.i.i61 = icmp eq i32 %52, 0
  br i1 %tobool.not.i.i61, label %do.body4.i.i62, label %jbd_unlock_bh_journal_head.exit67, !prof !789

do.body4.i.i62:                                   ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/bit_spinlock.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 60, 0\0A.popsection", ""() #19, !srcloc !835
  unreachable

jbd_unlock_bh_journal_head.exit67:                ; preds = %if.end27
  %call.i.i.i.i63 = tail call zeroext i1 @__kasan_check_write(ptr noundef %bh, i32 noundef 4) #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !836
  tail call void @llvm.prefetch.p0(ptr %bh, i32 1, i32 3, i32 1) #19
  %53 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %bh, ptr %bh, i32 4194304, ptr elementtype(i32) %bh) #19, !srcloc !837
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !838
  %54 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i.i64 = and i32 %54, -16384
  %55 = inttoptr i32 %and.i.i.i.i.i64 to ptr
  %preempt_count.i.i.i.i65 = getelementptr inbounds %struct.thread_info, ptr %55, i32 0, i32 1
  %56 = ptrtoint ptr %preempt_count.i.i.i.i65 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %preempt_count.i.i.i.i65, align 4
  %sub.i.i.i66 = add i32 %57, -1
  store volatile i32 %sub.i.i.i66, ptr %preempt_count.i.i.i.i65, align 4
  %tobool28.not = icmp eq ptr %new_jh.2, null
  br i1 %tobool28.not, label %jbd_unlock_bh_journal_head.exit67.if.end30_crit_edge, label %if.then29

jbd_unlock_bh_journal_head.exit67.if.end30_crit_edge: ; preds = %jbd_unlock_bh_journal_head.exit67
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end30

if.then29:                                        ; preds = %jbd_unlock_bh_journal_head.exit67
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i68 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @nr_journal_heads, i32 noundef 4) #19
  tail call void @llvm.prefetch.p0(ptr nonnull @nr_journal_heads, i32 1, i32 3, i32 1) #19
  %58 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_journal_heads, ptr nonnull @nr_journal_heads, i32 1, ptr nonnull elementtype(i32) @nr_journal_heads) #19, !srcloc !817
  %59 = call ptr @memset(ptr %new_jh.2, i32 92, i32 104)
  %60 = load ptr, ptr @jbd2_journal_head_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %60, ptr noundef nonnull %new_jh.2) #19
  br label %if.end30

if.end30:                                         ; preds = %if.then29, %jbd_unlock_bh_journal_head.exit67.if.end30_crit_edge
  %b_private31 = getelementptr inbounds %struct.buffer_head, ptr %bh, i32 0, i32 8
  %61 = ptrtoint ptr %b_private31 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %b_private31, align 8
  ret ptr %62
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @jbd2_journal_grab_journal_head(ptr noundef %bh) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !828
  br label %while.cond.i.i

while.cond.i.i:                                   ; preds = %do.body14.i.i, %entry
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %bh, i32 noundef 4) #19
  %4 = ptrtoint ptr %bh to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %bh, align 4
  %and.i.i.i.i = and i32 %5, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %test_and_set_bit_lock.exit.i.i, label %while.cond.i.i.do.body2.i.i_crit_edge, !prof !829

while.cond.i.i.do.body2.i.i_crit_edge:            ; preds = %while.cond.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2.i.i

test_and_set_bit_lock.exit.i.i:                   ; preds = %while.cond.i.i
  tail call void @llvm.prefetch.p0(ptr %bh, i32 1, i32 3, i32 1) #19
  %6 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %bh, ptr %bh, i32 4194304, ptr elementtype(i32) %bh) #19, !srcloc !798
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %6, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !799
  %7 = and i32 %asmresult.i.i.i.i.i.i.i, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %phi.cmp.i.not.i.i = icmp eq i32 %7, 0
  br i1 %phi.cmp.i.not.i.i, label %jbd_lock_bh_journal_head.exit, label %test_and_set_bit_lock.exit.i.i.do.body2.i.i_crit_edge, !prof !788

test_and_set_bit_lock.exit.i.i.do.body2.i.i_crit_edge: ; preds = %test_and_set_bit_lock.exit.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2.i.i

do.body2.i.i:                                     ; preds = %test_and_set_bit_lock.exit.i.i.do.body2.i.i_crit_edge, %while.cond.i.i.do.body2.i.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !830
  %8 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i1.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %preempt_count.i.i2.i.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i2.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i2.i.i, align 4
  %sub.i.i.i = add i32 %11, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i2.i.i, align 4
  br label %do.body4.i.i

do.body4.i.i:                                     ; preds = %do.body4.i.i.do.body4.i.i_crit_edge, %do.body2.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !831
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #19, !srcloc !832
  %12 = ptrtoint ptr %bh to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %bh, align 4
  %14 = and i32 %13, 4194304
  %tobool12.not.i.i = icmp eq i32 %14, 0
  br i1 %tobool12.not.i.i, label %do.body14.i.i, label %do.body4.i.i.do.body4.i.i_crit_edge

do.body4.i.i.do.body4.i.i_crit_edge:              ; preds = %do.body4.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body4.i.i

do.body14.i.i:                                    ; preds = %do.body4.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %15 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i3.i.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i.i3.i.i to ptr
  %preempt_count.i.i4.i.i = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %preempt_count.i.i4.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %preempt_count.i.i4.i.i, align 4
  %add.i5.i.i = add i32 %18, 1
  store volatile i32 %add.i5.i.i, ptr %preempt_count.i.i4.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !833
  br label %while.cond.i.i

jbd_lock_bh_journal_head.exit:                    ; preds = %test_and_set_bit_lock.exit.i.i
  %19 = ptrtoint ptr %bh to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %bh, align 4
  %21 = and i32 %20, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool.not = icmp eq i32 %21, 0
  br i1 %tobool.not, label %jbd_lock_bh_journal_head.exit.if.end_crit_edge, label %if.then

jbd_lock_bh_journal_head.exit.if.end_crit_edge:   ; preds = %jbd_lock_bh_journal_head.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.then:                                          ; preds = %jbd_lock_bh_journal_head.exit
  call void @__sanitizer_cov_trace_pc() #21
  %b_private.i = getelementptr inbounds %struct.buffer_head, ptr %bh, i32 0, i32 8
  %22 = ptrtoint ptr %b_private.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %b_private.i, align 8
  %b_jcount = getelementptr inbounds %struct.journal_head, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %b_jcount to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %b_jcount, align 4
  %inc = add i32 %25, 1
  store i32 %inc, ptr %b_jcount, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %jbd_lock_bh_journal_head.exit.if.end_crit_edge
  %jh.0 = phi ptr [ %23, %if.then ], [ null, %jbd_lock_bh_journal_head.exit.if.end_crit_edge ]
  %26 = ptrtoint ptr %bh to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %bh, align 4
  %28 = and i32 %27, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool.not.i.i = icmp eq i32 %28, 0
  br i1 %tobool.not.i.i, label %do.body4.i.i6, label %jbd_unlock_bh_journal_head.exit, !prof !789

do.body4.i.i6:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/bit_spinlock.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 60, 0\0A.popsection", ""() #19, !srcloc !835
  unreachable

jbd_unlock_bh_journal_head.exit:                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i.i7 = tail call zeroext i1 @__kasan_check_write(ptr noundef %bh, i32 noundef 4) #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !836
  tail call void @llvm.prefetch.p0(ptr %bh, i32 1, i32 3, i32 1) #19
  %29 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %bh, ptr %bh, i32 4194304, ptr elementtype(i32) %bh) #19, !srcloc !837
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !838
  %30 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i.i8 = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i.i.i.i8 to ptr
  %preempt_count.i.i.i.i9 = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %preempt_count.i.i.i.i9 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %preempt_count.i.i.i.i9, align 4
  %sub.i.i.i10 = add i32 %33, -1
  store volatile i32 %sub.i.i.i10, ptr %preempt_count.i.i.i.i9, align 4
  ret ptr %jh.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @jbd2_journal_put_journal_head(ptr noundef %jh) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %jh to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %jh, align 4
  %2 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %5, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !828
  br label %while.cond.i.i

while.cond.i.i:                                   ; preds = %do.body14.i.i, %entry
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %1, i32 noundef 4) #19
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %1, align 4
  %and.i.i.i.i = and i32 %7, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %test_and_set_bit_lock.exit.i.i, label %while.cond.i.i.do.body2.i.i_crit_edge, !prof !829

while.cond.i.i.do.body2.i.i_crit_edge:            ; preds = %while.cond.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2.i.i

test_and_set_bit_lock.exit.i.i:                   ; preds = %while.cond.i.i
  tail call void @llvm.prefetch.p0(ptr %1, i32 1, i32 3, i32 1) #19
  %8 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %1, ptr %1, i32 4194304, ptr elementtype(i32) %1) #19, !srcloc !798
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %8, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !799
  %9 = and i32 %asmresult.i.i.i.i.i.i.i, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %phi.cmp.i.not.i.i = icmp eq i32 %9, 0
  br i1 %phi.cmp.i.not.i.i, label %jbd_lock_bh_journal_head.exit, label %test_and_set_bit_lock.exit.i.i.do.body2.i.i_crit_edge, !prof !788

test_and_set_bit_lock.exit.i.i.do.body2.i.i_crit_edge: ; preds = %test_and_set_bit_lock.exit.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2.i.i

do.body2.i.i:                                     ; preds = %test_and_set_bit_lock.exit.i.i.do.body2.i.i_crit_edge, %while.cond.i.i.do.body2.i.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !830
  %10 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i1.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %preempt_count.i.i2.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i2.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i2.i.i, align 4
  %sub.i.i.i = add i32 %13, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i2.i.i, align 4
  br label %do.body4.i.i

do.body4.i.i:                                     ; preds = %do.body4.i.i.do.body4.i.i_crit_edge, %do.body2.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !831
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #19, !srcloc !832
  %14 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %1, align 4
  %16 = and i32 %15, 4194304
  %tobool12.not.i.i = icmp eq i32 %16, 0
  br i1 %tobool12.not.i.i, label %do.body14.i.i, label %do.body4.i.i.do.body4.i.i_crit_edge

do.body4.i.i.do.body4.i.i_crit_edge:              ; preds = %do.body4.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body4.i.i

do.body14.i.i:                                    ; preds = %do.body4.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %17 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i3.i.i = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i3.i.i to ptr
  %preempt_count.i.i4.i.i = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %preempt_count.i.i4.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %preempt_count.i.i4.i.i, align 4
  %add.i5.i.i = add i32 %20, 1
  store volatile i32 %add.i5.i.i, ptr %preempt_count.i.i4.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !833
  br label %while.cond.i.i

jbd_lock_bh_journal_head.exit:                    ; preds = %test_and_set_bit_lock.exit.i.i
  %b_jcount = getelementptr inbounds %struct.journal_head, ptr %jh, i32 0, i32 2
  %21 = ptrtoint ptr %b_jcount to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %b_jcount, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %22)
  %cmp = icmp slt i32 %22, 1
  br i1 %cmp, label %do.body3, label %do.end8, !prof !789

do.body3:                                         ; preds = %jbd_lock_bh_journal_head.exit
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3021, 0\0A.popsection", ""() #19, !srcloc !839
  unreachable

do.end8:                                          ; preds = %jbd_lock_bh_journal_head.exit
  %dec = add nsw i32 %22, -1
  %23 = ptrtoint ptr %b_jcount to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %dec, ptr %b_jcount, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool11.not = icmp eq i32 %dec, 0
  br i1 %tobool11.not, label %if.then12, label %if.else

if.then12:                                        ; preds = %do.end8
  %b_private.i.i = getelementptr inbounds %struct.buffer_head, ptr %1, i32 0, i32 8
  %24 = ptrtoint ptr %b_private.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %b_private.i.i, align 8
  %b_transaction.i = getelementptr inbounds %struct.journal_head, ptr %25, i32 0, i32 7
  %26 = ptrtoint ptr %b_transaction.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %b_transaction.i, align 4
  %cmp.not.i = icmp eq ptr %27, null
  br i1 %cmp.not.i, label %do.body9.i, label %do.body3.i, !prof !788

do.body3.i:                                       ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2985, 0\0A.popsection", ""() #19, !srcloc !840
  unreachable

do.body9.i:                                       ; preds = %if.then12
  %b_next_transaction.i = getelementptr inbounds %struct.journal_head, ptr %25, i32 0, i32 8
  %28 = ptrtoint ptr %b_next_transaction.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %b_next_transaction.i, align 4
  %cmp10.not.i = icmp eq ptr %29, null
  br i1 %cmp10.not.i, label %do.body29.i, label %do.body20.i, !prof !788

do.body20.i:                                      ; preds = %do.body9.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2986, 0\0A.popsection", ""() #19, !srcloc !841
  unreachable

do.body29.i:                                      ; preds = %do.body9.i
  %b_cp_transaction.i = getelementptr inbounds %struct.journal_head, ptr %25, i32 0, i32 11
  %30 = ptrtoint ptr %b_cp_transaction.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %b_cp_transaction.i, align 4
  %cmp30.not.i = icmp eq ptr %31, null
  br i1 %cmp30.not.i, label %do.body49.i, label %do.body40.i, !prof !788

do.body40.i:                                      ; preds = %do.body29.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2987, 0\0A.popsection", ""() #19, !srcloc !842
  unreachable

do.body49.i:                                      ; preds = %do.body29.i
  %b_jlist.i = getelementptr inbounds %struct.journal_head, ptr %25, i32 0, i32 3
  %32 = ptrtoint ptr %b_jlist.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %b_jlist.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %cmp50.not.i = icmp eq i32 %33, 0
  br i1 %cmp50.not.i, label %do.body69.i, label %do.body60.i, !prof !788

do.body60.i:                                      ; preds = %do.body49.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2988, 0\0A.popsection", ""() #19, !srcloc !843
  unreachable

do.body69.i:                                      ; preds = %do.body49.i
  %34 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %1, align 4
  %36 = and i32 %35, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool71.not.i = icmp eq i32 %36, 0
  br i1 %tobool71.not.i, label %do.body81.i, label %do.body90.i, !prof !789

do.body81.i:                                      ; preds = %do.body69.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2989, 0\0A.popsection", ""() #19, !srcloc !844
  unreachable

do.body90.i:                                      ; preds = %do.body69.i
  %37 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %25, align 4
  %cmp92.not.i = icmp eq ptr %38, %1
  br i1 %cmp92.not.i, label %__journal_remove_journal_head.exit, label %do.body102.i, !prof !788

do.body102.i:                                     ; preds = %do.body90.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2990, 0\0A.popsection", ""() #19, !srcloc !845
  unreachable

__journal_remove_journal_head.exit:               ; preds = %do.body90.i
  %39 = ptrtoint ptr %b_private.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %b_private.i.i, align 8
  %40 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr null, ptr %25, align 4
  tail call void @_clear_bit(i32 noundef 16, ptr noundef %1) #19
  %41 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %1, align 4
  %43 = and i32 %42, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool.not.i.i = icmp eq i32 %43, 0
  br i1 %tobool.not.i.i, label %do.body4.i.i23, label %jbd_unlock_bh_journal_head.exit, !prof !789

do.body4.i.i23:                                   ; preds = %__journal_remove_journal_head.exit
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/bit_spinlock.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 60, 0\0A.popsection", ""() #19, !srcloc !835
  unreachable

jbd_unlock_bh_journal_head.exit:                  ; preds = %__journal_remove_journal_head.exit
  %call.i.i.i.i24 = tail call zeroext i1 @__kasan_check_write(ptr noundef %1, i32 noundef 4) #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !836
  tail call void @llvm.prefetch.p0(ptr %1, i32 1, i32 3, i32 1) #19
  %44 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %1, ptr %1, i32 4194304, ptr elementtype(i32) %1) #19, !srcloc !837
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !838
  %45 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i.i25 = and i32 %45, -16384
  %46 = inttoptr i32 %and.i.i.i.i.i25 to ptr
  %preempt_count.i.i.i.i26 = getelementptr inbounds %struct.thread_info, ptr %46, i32 0, i32 1
  %47 = ptrtoint ptr %preempt_count.i.i.i.i26 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %preempt_count.i.i.i.i26, align 4
  %sub.i.i.i27 = add i32 %48, -1
  store volatile i32 %sub.i.i.i27, ptr %preempt_count.i.i.i.i26, align 4
  %b_size = getelementptr inbounds %struct.buffer_head, ptr %1, i32 0, i32 4
  %49 = ptrtoint ptr %b_size to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %b_size, align 8
  %b_frozen_data.i = getelementptr inbounds %struct.journal_head, ptr %jh, i32 0, i32 5
  %51 = ptrtoint ptr %b_frozen_data.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %b_frozen_data.i, align 4
  %tobool.not.i = icmp eq ptr %52, null
  br i1 %tobool.not.i, label %jbd_unlock_bh_journal_head.exit.if.end.i_crit_edge, label %do.end.i

jbd_unlock_bh_journal_head.exit.if.end.i_crit_edge: ; preds = %jbd_unlock_bh_journal_head.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i

do.end.i:                                         ; preds = %jbd_unlock_bh_journal_head.exit
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.217, ptr noundef nonnull @.str.218) #22
  %53 = ptrtoint ptr %b_frozen_data.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %b_frozen_data.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %50)
  %cmp.i.i = icmp ult i32 %50, 4096
  br i1 %cmp.i.i, label %cond.false16.i.i.i, label %if.else.i.i

cond.false16.i.i.i:                               ; preds = %do.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %50)
  %cmp.i.i.i.i = icmp ugt i32 %50, 1
  br i1 %cmp.i.i.i.i, label %cond.end18.i.i.i, label %cond.false16.i.i.i.if.then38.i.i.i_crit_edge

cond.false16.i.i.i.if.then38.i.i.i_crit_edge:     ; preds = %cond.false16.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then38.i.i.i

cond.end18.i.i.i:                                 ; preds = %cond.false16.i.i.i
  %sub.i70.i.i.i = add nsw i32 %50, -1
  %55 = tail call i32 @llvm.ctlz.i32(i32 %sub.i70.i.i.i, i1 true) #19, !range !800
  %sub6.i.i.i.i = xor i32 %55, 31
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %sub6.i.i.i.i)
  %cmp21.i.i.i = icmp ugt i32 %sub6.i.i.i.i, 16
  br i1 %cmp21.i.i.i, label %do.body24.i.i.i, label %do.end29.i.i.i, !prof !789

do.body24.i.i.i:                                  ; preds = %cond.end18.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2792, 0\0A.popsection", ""() #19, !srcloc !812
  unreachable

do.end29.i.i.i:                                   ; preds = %cond.end18.i.i.i
  %sub20.i.i.i = sub nsw i32 22, %55
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %sub6.i.i.i.i)
  %cmp30.i.i.i = icmp ult i32 %sub6.i.i.i.i, 9
  br i1 %cmp30.i.i.i, label %do.end29.i.i.i.if.then38.i.i.i_crit_edge, label %do.end29.i.i.i.do.body40.i.i.i_crit_edge, !prof !789

do.end29.i.i.i.do.body40.i.i.i_crit_edge:         ; preds = %do.end29.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body40.i.i.i

do.end29.i.i.i.if.then38.i.i.i_crit_edge:         ; preds = %do.end29.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then38.i.i.i

if.then38.i.i.i:                                  ; preds = %do.end29.i.i.i.if.then38.i.i.i_crit_edge, %cond.false16.i.i.i.if.then38.i.i.i_crit_edge
  br label %do.body40.i.i.i

do.body40.i.i.i:                                  ; preds = %if.then38.i.i.i, %do.end29.i.i.i.do.body40.i.i.i_crit_edge
  %i.0.i.i.i = phi i32 [ 0, %if.then38.i.i.i ], [ %sub20.i.i.i, %do.end29.i.i.i.do.body40.i.i.i_crit_edge ]
  %arrayidx.i.i.i = getelementptr [8 x ptr], ptr @jbd2_slab, i32 0, i32 %i.0.i.i.i
  %56 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %arrayidx.i.i.i, align 4
  %cmp41.i.i.i = icmp eq ptr %57, null
  br i1 %cmp41.i.i.i, label %do.body50.i.i.i, label %get_slab.exit.i.i, !prof !789

do.body50.i.i.i:                                  ; preds = %do.body40.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2795, 0\0A.popsection", ""() #19, !srcloc !813
  unreachable

get_slab.exit.i.i:                                ; preds = %do.body40.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @kmem_cache_free(ptr noundef nonnull %57, ptr noundef %54) #19
  br label %if.end.i

if.else.i.i:                                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #21
  %58 = ptrtoint ptr %54 to i32
  %sub.i.i.i28 = add i32 %50, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %sub.i.i.i28)
  %tobool.not.i.i.i.i30 = icmp ult i32 %sub.i.i.i28, 4096
  %shr.i.i.i = lshr i32 %sub.i.i.i28, 12
  %59 = tail call i32 @llvm.ctlz.i32(i32 %shr.i.i.i, i1 true) #19, !range !800
  %sub.i.i.i.i = sub nuw nsw i32 32, %59
  %cond.i.i.i.i = select i1 %tobool.not.i.i.i.i30, i32 0, i32 %sub.i.i.i.i
  tail call void @free_pages(i32 noundef %58, i32 noundef %cond.i.i.i.i) #19
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i.i, %get_slab.exit.i.i, %jbd_unlock_bh_journal_head.exit.if.end.i_crit_edge
  %b_committed_data.i = getelementptr inbounds %struct.journal_head, ptr %jh, i32 0, i32 6
  %60 = ptrtoint ptr %b_committed_data.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %b_committed_data.i, align 4
  %tobool2.not.i = icmp eq ptr %61, null
  br i1 %tobool2.not.i, label %if.end.i.journal_release_journal_head.exit_crit_edge, label %do.end5.i

if.end.i.journal_release_journal_head.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %journal_release_journal_head.exit

do.end5.i:                                        ; preds = %if.end.i
  %call7.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.220, ptr noundef nonnull @.str.218) #22
  %62 = ptrtoint ptr %b_committed_data.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %b_committed_data.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %50)
  %cmp.i15.i = icmp ult i32 %50, 4096
  br i1 %cmp.i15.i, label %cond.false16.i.i24.i, label %if.else.i45.i

cond.false16.i.i24.i:                             ; preds = %do.end5.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %50)
  %cmp.i.i.i23.i = icmp ugt i32 %50, 1
  br i1 %cmp.i.i.i23.i, label %cond.end18.i.i32.i, label %cond.false16.i.i24.i.if.then38.i.i37.i_crit_edge

cond.false16.i.i24.i.if.then38.i.i37.i_crit_edge: ; preds = %cond.false16.i.i24.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then38.i.i37.i

cond.end18.i.i32.i:                               ; preds = %cond.false16.i.i24.i
  %sub.i70.i.i25.i = add nsw i32 %50, -1
  %64 = tail call i32 @llvm.ctlz.i32(i32 %sub.i70.i.i25.i, i1 true) #19, !range !800
  %sub6.i.i.i30.i = xor i32 %64, 31
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %sub6.i.i.i30.i)
  %cmp21.i.i31.i = icmp ugt i32 %sub6.i.i.i30.i, 16
  br i1 %cmp21.i.i31.i, label %do.body24.i.i33.i, label %do.end29.i.i36.i, !prof !789

do.body24.i.i33.i:                                ; preds = %cond.end18.i.i32.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2792, 0\0A.popsection", ""() #19, !srcloc !812
  unreachable

do.end29.i.i36.i:                                 ; preds = %cond.end18.i.i32.i
  %sub20.i.i34.i = sub nsw i32 22, %64
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %sub6.i.i.i30.i)
  %cmp30.i.i35.i = icmp ult i32 %sub6.i.i.i30.i, 9
  br i1 %cmp30.i.i35.i, label %do.end29.i.i36.i.if.then38.i.i37.i_crit_edge, label %do.end29.i.i36.i.do.body40.i.i41.i_crit_edge, !prof !789

do.end29.i.i36.i.do.body40.i.i41.i_crit_edge:     ; preds = %do.end29.i.i36.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body40.i.i41.i

do.end29.i.i36.i.if.then38.i.i37.i_crit_edge:     ; preds = %do.end29.i.i36.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then38.i.i37.i

if.then38.i.i37.i:                                ; preds = %do.end29.i.i36.i.if.then38.i.i37.i_crit_edge, %cond.false16.i.i24.i.if.then38.i.i37.i_crit_edge
  br label %do.body40.i.i41.i

do.body40.i.i41.i:                                ; preds = %if.then38.i.i37.i, %do.end29.i.i36.i.do.body40.i.i41.i_crit_edge
  %i.0.i.i38.i = phi i32 [ 0, %if.then38.i.i37.i ], [ %sub20.i.i34.i, %do.end29.i.i36.i.do.body40.i.i41.i_crit_edge ]
  %arrayidx.i.i39.i = getelementptr [8 x ptr], ptr @jbd2_slab, i32 0, i32 %i.0.i.i38.i
  %65 = ptrtoint ptr %arrayidx.i.i39.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %arrayidx.i.i39.i, align 4
  %cmp41.i.i40.i = icmp eq ptr %66, null
  br i1 %cmp41.i.i40.i, label %do.body50.i.i42.i, label %get_slab.exit.i43.i, !prof !789

do.body50.i.i42.i:                                ; preds = %do.body40.i.i41.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2795, 0\0A.popsection", ""() #19, !srcloc !813
  unreachable

get_slab.exit.i43.i:                              ; preds = %do.body40.i.i41.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @kmem_cache_free(ptr noundef nonnull %66, ptr noundef %63) #19
  br label %journal_release_journal_head.exit

if.else.i45.i:                                    ; preds = %do.end5.i
  call void @__sanitizer_cov_trace_pc() #21
  %67 = ptrtoint ptr %63 to i32
  %sub.i.i44.i = add i32 %50, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %sub.i.i44.i)
  %tobool.not.i.i.i52.i = icmp ult i32 %sub.i.i44.i, 4096
  %shr.i.i51.i = lshr i32 %sub.i.i44.i, 12
  %68 = tail call i32 @llvm.ctlz.i32(i32 %shr.i.i51.i, i1 true) #19, !range !800
  %sub.i.i.i53.i = sub nuw nsw i32 32, %68
  %cond.i.i.i54.i = select i1 %tobool.not.i.i.i52.i, i32 0, i32 %sub.i.i.i53.i
  tail call void @free_pages(i32 noundef %67, i32 noundef %cond.i.i.i54.i) #19
  br label %journal_release_journal_head.exit

journal_release_journal_head.exit:                ; preds = %if.else.i45.i, %get_slab.exit.i43.i, %if.end.i.journal_release_journal_head.exit_crit_edge
  %call.i.i.i.i31 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @nr_journal_heads, i32 noundef 4) #19
  tail call void @llvm.prefetch.p0(ptr nonnull @nr_journal_heads, i32 1, i32 3, i32 1) #19
  %69 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_journal_heads, ptr nonnull @nr_journal_heads, i32 1, ptr nonnull elementtype(i32) @nr_journal_heads) #19, !srcloc !817
  %70 = call ptr @memset(ptr %jh, i32 92, i32 104)
  %71 = load ptr, ptr @jbd2_journal_head_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %71, ptr noundef %jh) #19
  tail call void @__brelse(ptr noundef %1) #19
  br label %if.end13

if.else:                                          ; preds = %do.end8
  %72 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %1, align 4
  %74 = and i32 %73, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %tobool.not.i.i32 = icmp eq i32 %74, 0
  br i1 %tobool.not.i.i32, label %do.body4.i.i33, label %jbd_unlock_bh_journal_head.exit38, !prof !789

do.body4.i.i33:                                   ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/bit_spinlock.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 60, 0\0A.popsection", ""() #19, !srcloc !835
  unreachable

jbd_unlock_bh_journal_head.exit38:                ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i.i34 = tail call zeroext i1 @__kasan_check_write(ptr noundef %1, i32 noundef 4) #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !836
  tail call void @llvm.prefetch.p0(ptr %1, i32 1, i32 3, i32 1) #19
  %75 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %1, ptr %1, i32 4194304, ptr elementtype(i32) %1) #19, !srcloc !837
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !838
  %76 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i.i35 = and i32 %76, -16384
  %77 = inttoptr i32 %and.i.i.i.i.i35 to ptr
  %preempt_count.i.i.i.i36 = getelementptr inbounds %struct.thread_info, ptr %77, i32 0, i32 1
  %78 = ptrtoint ptr %preempt_count.i.i.i.i36 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load volatile i32, ptr %preempt_count.i.i.i.i36, align 4
  %sub.i.i.i37 = add i32 %79, -1
  store volatile i32 %sub.i.i.i37, ptr %preempt_count.i.i.i.i36, align 4
  br label %if.end13

if.end13:                                         ; preds = %jbd_unlock_bh_journal_head.exit38, %journal_release_journal_head.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__brelse(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wake_bit_function(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bit_waitqueue(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal void @jbd2_remove_jbd_stats_proc_entry() #10 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %0 = load ptr, ptr @proc_jbd2_stats, align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @remove_proc_entry(ptr noundef nonnull @.str.38, ptr noundef null) #19
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @remove_proc_entry(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal void @journal_exit() #10 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @nr_journal_heads, i32 noundef 4) #19
  %0 = load volatile i32, ptr @nr_journal_heads, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %call1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.39, i32 noundef %0) #22
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %1 = load ptr, ptr @proc_jbd2_stats, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.end.jbd2_remove_jbd_stats_proc_entry.exit_crit_edge, label %if.then.i

if.end.jbd2_remove_jbd_stats_proc_entry.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %jbd2_remove_jbd_stats_proc_entry.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @remove_proc_entry(ptr noundef nonnull @.str.38, ptr noundef null) #19
  br label %jbd2_remove_jbd_stats_proc_entry.exit

jbd2_remove_jbd_stats_proc_entry.exit:            ; preds = %if.then.i, %if.end.jbd2_remove_jbd_stats_proc_entry.exit_crit_edge
  tail call fastcc void @jbd2_journal_destroy_caches()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @jbd2_journal_destroy_caches() unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @jbd2_journal_destroy_revoke_record_cache() #19
  tail call void @jbd2_journal_destroy_revoke_table_cache() #19
  %0 = load ptr, ptr @jbd2_journal_head_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %0) #19
  store ptr null, ptr @jbd2_journal_head_cache, align 4
  %1 = load ptr, ptr @jbd2_handle_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %1) #19
  store ptr null, ptr @jbd2_handle_cache, align 4
  %2 = load ptr, ptr @jbd2_inode_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %2) #19
  store ptr null, ptr @jbd2_inode_cache, align 4
  tail call void @jbd2_journal_destroy_transaction_cache() #19
  %3 = load ptr, ptr @jbd2_slab, align 4
  tail call void @kmem_cache_destroy(ptr noundef %3) #19
  store ptr null, ptr @jbd2_slab, align 4
  %4 = load ptr, ptr getelementptr inbounds ([8 x ptr], ptr @jbd2_slab, i32 0, i32 1), align 4
  tail call void @kmem_cache_destroy(ptr noundef %4) #19
  store ptr null, ptr getelementptr inbounds ([8 x ptr], ptr @jbd2_slab, i32 0, i32 1), align 4
  %5 = load ptr, ptr getelementptr inbounds ([8 x ptr], ptr @jbd2_slab, i32 0, i32 2), align 4
  tail call void @kmem_cache_destroy(ptr noundef %5) #19
  store ptr null, ptr getelementptr inbounds ([8 x ptr], ptr @jbd2_slab, i32 0, i32 2), align 4
  %6 = load ptr, ptr getelementptr inbounds ([8 x ptr], ptr @jbd2_slab, i32 0, i32 3), align 4
  tail call void @kmem_cache_destroy(ptr noundef %6) #19
  store ptr null, ptr getelementptr inbounds ([8 x ptr], ptr @jbd2_slab, i32 0, i32 3), align 4
  %7 = load ptr, ptr getelementptr inbounds ([8 x ptr], ptr @jbd2_slab, i32 0, i32 4), align 4
  tail call void @kmem_cache_destroy(ptr noundef %7) #19
  store ptr null, ptr getelementptr inbounds ([8 x ptr], ptr @jbd2_slab, i32 0, i32 4), align 4
  %8 = load ptr, ptr getelementptr inbounds ([8 x ptr], ptr @jbd2_slab, i32 0, i32 5), align 4
  tail call void @kmem_cache_destroy(ptr noundef %8) #19
  store ptr null, ptr getelementptr inbounds ([8 x ptr], ptr @jbd2_slab, i32 0, i32 5), align 4
  %9 = load ptr, ptr getelementptr inbounds ([8 x ptr], ptr @jbd2_slab, i32 0, i32 6), align 4
  tail call void @kmem_cache_destroy(ptr noundef %9) #19
  store ptr null, ptr getelementptr inbounds ([8 x ptr], ptr @jbd2_slab, i32 0, i32 6), align 4
  %10 = load ptr, ptr getelementptr inbounds ([8 x ptr], ptr @jbd2_slab, i32 0, i32 7), align 4
  tail call void @kmem_cache_destroy(ptr noundef %10) #19
  store ptr null, ptr getelementptr inbounds ([8 x ptr], ptr @jbd2_slab, i32 0, i32 7), align 4
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @journal_init() #10 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @journal_init_caches() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %call.i = tail call ptr @proc_mkdir(ptr noundef nonnull @.str.38, ptr noundef null) #19
  store ptr %call.i, ptr @proc_jbd2_stats, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call fastcc void @jbd2_journal_destroy_caches()
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_jbd2_checkpoint(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %result = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %result to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %result, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.45, i32 noundef %shr, i32 noundef %and, i32 noundef %5) #19
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_jbd2_commit(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_commit, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %transaction = getelementptr inbounds %struct.trace_event_raw_jbd2_commit, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %transaction to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %transaction, align 4
  %sync_commit = getelementptr inbounds %struct.trace_event_raw_jbd2_commit, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %sync_commit to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %sync_commit, align 4
  %conv = zext i8 %7 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.49, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %conv) #19
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_jbd2_end_commit(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_end_commit, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %transaction = getelementptr inbounds %struct.trace_event_raw_jbd2_end_commit, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %transaction to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %transaction, align 4
  %sync_commit = getelementptr inbounds %struct.trace_event_raw_jbd2_end_commit, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %sync_commit to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %sync_commit, align 4
  %conv = zext i8 %7 to i32
  %head = getelementptr inbounds %struct.trace_event_raw_jbd2_end_commit, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %head, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.51, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %conv, i32 noundef %9) #19
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_jbd2_submit_inode_data(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_submit_inode_data, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %ino = getelementptr inbounds %struct.trace_event_raw_jbd2_submit_inode_data, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %ino to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ino, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.54, i32 noundef %shr, i32 noundef %and, i32 noundef %5) #19
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_jbd2_handle_start_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_start_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %tid = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_start_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %tid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %tid, align 4
  %type = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_start_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type, align 4
  %line_no = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_start_class, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %line_no to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %line_no, align 4
  %requested_blocks = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_start_class, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %requested_blocks to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %requested_blocks, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.61, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11) #19
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_jbd2_handle_extend(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_extend, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %tid = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_extend, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %tid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %tid, align 4
  %type = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_extend, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type, align 4
  %line_no = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_extend, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %line_no to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %line_no, align 4
  %buffer_credits = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_extend, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %buffer_credits to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %buffer_credits, align 4
  %requested_blocks = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_extend, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %requested_blocks to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %requested_blocks, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.63, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13) #19
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_jbd2_handle_stats(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %tid = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %tid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %tid, align 4
  %type = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type, align 4
  %line_no = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %line_no to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %line_no, align 4
  %interval = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %interval to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %interval, align 4
  %sync = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %sync to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sync, align 4
  %requested_blocks = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %requested_blocks to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %requested_blocks, align 4
  %dirtied_blocks = getelementptr inbounds %struct.trace_event_raw_jbd2_handle_stats, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %dirtied_blocks to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %dirtied_blocks, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.67, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17) #19
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_jbd2_run_stats(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %tid = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %tid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %tid, align 4
  %wait = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %wait to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %wait, align 4
  %call2 = tail call i32 @jiffies_to_msecs(i32 noundef %7) #19
  %request_delay = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %request_delay to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %request_delay, align 4
  %call3 = tail call i32 @jiffies_to_msecs(i32 noundef %9) #19
  %running = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %running to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %running, align 4
  %call4 = tail call i32 @jiffies_to_msecs(i32 noundef %11) #19
  %locked = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %locked to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %locked, align 4
  %call5 = tail call i32 @jiffies_to_msecs(i32 noundef %13) #19
  %flushing = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %flushing to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flushing, align 4
  %call6 = tail call i32 @jiffies_to_msecs(i32 noundef %15) #19
  %logging = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %logging to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %logging, align 4
  %call7 = tail call i32 @jiffies_to_msecs(i32 noundef %17) #19
  %handle_count = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %1, i32 0, i32 9
  %18 = ptrtoint ptr %handle_count to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %handle_count, align 4
  %blocks = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %1, i32 0, i32 10
  %20 = ptrtoint ptr %blocks to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %blocks, align 4
  %blocks_logged = getelementptr inbounds %struct.trace_event_raw_jbd2_run_stats, ptr %1, i32 0, i32 11
  %22 = ptrtoint ptr %blocks_logged to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %blocks_logged, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.78, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %call2, i32 noundef %call3, i32 noundef %call4, i32 noundef %call5, i32 noundef %call6, i32 noundef %call7, i32 noundef %19, i32 noundef %21, i32 noundef %23) #19
  %call8 = tail call i32 @trace_handle_return(ptr noundef %seq) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call8, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jiffies_to_msecs(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_jbd2_checkpoint_stats(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint_stats, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %tid = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint_stats, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %tid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %tid, align 4
  %chp_time = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint_stats, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %chp_time to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %chp_time, align 4
  %call2 = tail call i32 @jiffies_to_msecs(i32 noundef %7) #19
  %forced_to_close = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint_stats, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %forced_to_close to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %forced_to_close, align 4
  %written = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint_stats, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %written to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %written, align 4
  %dropped = getelementptr inbounds %struct.trace_event_raw_jbd2_checkpoint_stats, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %dropped to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %dropped, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.83, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %call2, i32 noundef %9, i32 noundef %11, i32 noundef %13) #19
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_jbd2_update_log_tail(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_update_log_tail, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %tail_sequence = getelementptr inbounds %struct.trace_event_raw_jbd2_update_log_tail, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %tail_sequence to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %tail_sequence, align 4
  %first_tid = getelementptr inbounds %struct.trace_event_raw_jbd2_update_log_tail, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %first_tid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %first_tid, align 4
  %block_nr = getelementptr inbounds %struct.trace_event_raw_jbd2_update_log_tail, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %block_nr to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %block_nr, align 4
  %freed = getelementptr inbounds %struct.trace_event_raw_jbd2_update_log_tail, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %freed to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %freed, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.89, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11) #19
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_jbd2_write_superblock(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_write_superblock, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %write_op = getelementptr inbounds %struct.trace_event_raw_jbd2_write_superblock, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %write_op to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %write_op, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.91, i32 noundef %shr, i32 noundef %and, i32 noundef %5) #19
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_jbd2_lock_buffer_stall(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_lock_buffer_stall, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %stall_ms = getelementptr inbounds %struct.trace_event_raw_jbd2_lock_buffer_stall, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %stall_ms to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %stall_ms, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.93, i32 noundef %shr, i32 noundef %and, i32 noundef %5) #19
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_jbd2_journal_shrink(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_journal_shrink, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %nr_to_scan = getelementptr inbounds %struct.trace_event_raw_jbd2_journal_shrink, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %nr_to_scan to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_to_scan, align 4
  %count = getelementptr inbounds %struct.trace_event_raw_jbd2_journal_shrink, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %count, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.96, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7) #19
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_jbd2_shrink_scan_exit(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_scan_exit, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %nr_to_scan = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_scan_exit, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %nr_to_scan to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_to_scan, align 4
  %nr_shrunk = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_scan_exit, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %nr_shrunk to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nr_shrunk, align 4
  %count = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_scan_exit, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %count, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.98, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7, i32 noundef %9) #19
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_jbd2_shrink_checkpoint_list(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %first_tid = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %first_tid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %first_tid, align 4
  %tid = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %tid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %tid, align 4
  %last_tid = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %last_tid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %last_tid, align 4
  %nr_freed = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %nr_freed to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %nr_freed, align 4
  %nr_scanned = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %nr_scanned, align 4
  %next_tid = getelementptr inbounds %struct.trace_event_raw_jbd2_shrink_checkpoint_list, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %next_tid to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %next_tid, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.103, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15) #19
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #11

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #11

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run5(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run6(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run8(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run3(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run4(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run7(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__kmap_local_page_prot(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kunmap_local_indexed(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__getblk_gfp(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wait_on_buffer(ptr noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #13

; Function Attrs: null_pointer_is_valid
declare dso_local void @__lock_buffer(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @crypto_shash_update(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_waitqueue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__rwlock_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_init_revoke(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @jbd2_journal_shrink_scan(ptr noundef %shrink, ptr nocapture noundef readonly %sc) #0 align 64 {
entry:
  %nr_to_scan = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %shrink, i32 -928
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nr_to_scan) #19
  %nr_to_scan1 = getelementptr inbounds %struct.shrink_control, ptr %sc, i32 0, i32 2
  %0 = ptrtoint ptr %nr_to_scan1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nr_to_scan1, align 4
  %2 = ptrtoint ptr %nr_to_scan to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %1, ptr %nr_to_scan, align 4
  %count.i = getelementptr i8, ptr %shrink, i32 88
  %3 = ptrtoint ptr %count.i to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load volatile i64, ptr %count.i, align 8
  %5 = tail call i64 @llvm.smax.i64(i64 %4, i64 0) #19
  %conv = trunc i64 %5 to i32
  tail call fastcc void @trace_jbd2_shrink_scan_enter(ptr noundef %add.ptr, i32 noundef %1, i32 noundef %conv)
  %call3 = call i32 @jbd2_journal_shrink_checkpoint_list(ptr noundef %add.ptr, ptr noundef nonnull %nr_to_scan) #19
  %6 = ptrtoint ptr %count.i to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load volatile i64, ptr %count.i, align 8
  %8 = call i64 @llvm.smax.i64(i64 %7, i64 0) #19
  %conv6 = trunc i64 %8 to i32
  %9 = ptrtoint ptr %nr_to_scan to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %nr_to_scan, align 4
  call fastcc void @trace_jbd2_shrink_scan_exit(ptr noundef %add.ptr, i32 noundef %10, i32 noundef %call3, i32 noundef %conv6)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nr_to_scan) #19
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @jbd2_journal_shrink_count(ptr noundef %shrink, ptr nocapture noundef readonly %sc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %shrink, i32 -928
  %count.i = getelementptr i8, ptr %shrink, i32 88
  %0 = ptrtoint ptr %count.i to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load volatile i64, ptr %count.i, align 8
  %2 = tail call i64 @llvm.smax.i64(i64 %1, i64 0) #19
  %conv = trunc i64 %2 to i32
  %nr_to_scan = getelementptr inbounds %struct.shrink_control, ptr %sc, i32 0, i32 2
  %3 = ptrtoint ptr %nr_to_scan to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %nr_to_scan, align 4
  tail call fastcc void @trace_jbd2_shrink_count(ptr noundef %add.ptr, i32 noundef %4, i32 noundef %conv)
  ret i32 %conv
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__percpu_counter_init(ptr noundef, i64 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_shrinker(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #14

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #15

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #16

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_jbd2_shrink_scan_enter(ptr noundef %journal, i32 noundef %nr_to_scan, i32 noundef %count) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_shrink_scan_enter, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_jbd2_shrink_scan_enter, %do.body)) #19
          to label %if.end48 [label %do.body], !srcloc !820

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !788

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.108, i32 noundef 108, i32 noundef 9, ptr noundef null) #19
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !846
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_shrink_scan_enter, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %journal, i32 noundef %nr_to_scan, i32 noundef %count) #19
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !847
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !847
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !788

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.108, i32 noundef 108, i32 noundef 9, ptr noundef null) #19
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !823
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_shrink_scan_enter, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_jbd2_shrink_scan_enter.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @trace_jbd2_shrink_scan_enter.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.106, i32 noundef 433, ptr noundef nonnull @.str.107) #19
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !824
  %38 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_shrink_checkpoint_list(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_jbd2_shrink_scan_exit(ptr noundef %journal, i32 noundef %nr_to_scan, i32 noundef %nr_shrunk, i32 noundef %count) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_shrink_scan_exit, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_jbd2_shrink_scan_exit, %do.body)) #19
          to label %if.end48 [label %do.body], !srcloc !820

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !788

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.108, i32 noundef 108, i32 noundef 9, ptr noundef null) #19
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !848
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_shrink_scan_exit, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %journal, i32 noundef %nr_to_scan, i32 noundef %nr_shrunk, i32 noundef %count) #19
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !849
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !849
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !788

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.108, i32 noundef 108, i32 noundef 9, ptr noundef null) #19
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !823
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_shrink_scan_exit, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_jbd2_shrink_scan_exit.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @trace_jbd2_shrink_scan_exit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.106, i32 noundef 460, ptr noundef nonnull @.str.107) #19
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !824
  %38 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_jbd2_shrink_count(ptr noundef %journal, i32 noundef %nr_to_scan, i32 noundef %count) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_shrink_count, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_jbd2_shrink_count, %do.body)) #19
          to label %if.end48 [label %do.body], !srcloc !820

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !788

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.108, i32 noundef 108, i32 noundef 9, ptr noundef null) #19
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !850
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_shrink_count, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %journal, i32 noundef %nr_to_scan, i32 noundef %count) #19
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !851
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !851
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !788

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.108, i32 noundef 108, i32 noundef 9, ptr noundef null) #19
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !823
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_shrink_count, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_jbd2_shrink_count.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @trace_jbd2_shrink_count.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.106, i32 noundef 426, ptr noundef nonnull @.str.107) #19
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !824
  %38 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @proc_mkdir(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @proc_create_data(ptr noundef, i16 noundef zeroext, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @jbd2_seq_info_open(ptr nocapture noundef readonly %inode, ptr noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %i_private.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 54
  %0 = ptrtoint ptr %i_private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_private.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3264, i32 noundef 16) #24
  %cmp = icmp eq ptr %call7.i, null
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %3 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i32 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %3, i32 noundef 3264, i32 noundef 44) #24
  %stats = getelementptr inbounds %struct.jbd2_stats_proc_session, ptr %call7.i, i32 0, i32 1
  %4 = ptrtoint ptr %stats to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call7.i32, ptr %stats, align 4
  %cmp4 = icmp eq ptr %call7.i32, null
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @kfree(ptr noundef nonnull %call7.i) #19
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %j_history_lock = getelementptr inbounds %struct.journal_s, ptr %1, i32 0, i32 65
  tail call void @_raw_spin_lock(ptr noundef %j_history_lock) #19
  %5 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %stats, align 4
  %j_stats = getelementptr inbounds %struct.journal_s, ptr %1, i32 0, i32 67
  %7 = call ptr @memcpy(ptr %6, ptr %j_stats, i32 44)
  %8 = ptrtoint ptr %call7.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %1, ptr %call7.i, align 8
  tail call void @_raw_spin_unlock(ptr noundef %j_history_lock) #19
  %call10 = tail call i32 @seq_open(ptr noundef %file, ptr noundef nonnull @jbd2_seq_info_ops) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %cmp11 = icmp eq i32 %call10, 0
  br i1 %cmp11, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #21
  %private_data = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 16
  %9 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %private_data, align 4
  %private = getelementptr inbounds %struct.seq_file, ptr %10, i32 0, i32 11
  %11 = ptrtoint ptr %private to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %call7.i, ptr %private, align 8
  br label %cleanup

if.else:                                          ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #21
  %12 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %stats, align 4
  tail call void @kfree(ptr noundef %13) #19
  tail call void @kfree(ptr noundef nonnull %call7.i) #19
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then12, %if.then5, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %if.then5 ], [ -12, %entry.cleanup_crit_edge ], [ %call10, %if.else ], [ 0, %if.then12 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @seq_read(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @seq_lseek(ptr noundef, i64 noundef, i32 noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @jbd2_seq_info_release(ptr noundef %inode, ptr noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %private = getelementptr inbounds %struct.seq_file, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %private, align 8
  %stats = getelementptr inbounds %struct.jbd2_stats_proc_session, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %stats, align 4
  tail call void @kfree(ptr noundef %5) #19
  tail call void @kfree(ptr noundef %3) #19
  %call = tail call i32 @seq_release(ptr noundef %inode, ptr noundef %file) #19
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @seq_open(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal ptr @jbd2_seq_info_start(ptr nocapture noundef readnone %seq, ptr nocapture noundef readonly %pos) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pos to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %pos, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %1)
  %tobool.not = icmp eq i64 %1, 0
  %cond = select i1 %tobool.not, ptr inttoptr (i32 1 to ptr), ptr null
  ret ptr %cond
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @jbd2_seq_info_stop(ptr nocapture noundef %seq, ptr nocapture noundef %v) #17 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal noalias ptr @jbd2_seq_info_next(ptr nocapture noundef readnone %seq, ptr nocapture noundef readnone %v, ptr nocapture noundef %pos) #18 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pos to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %pos, align 8
  %inc = add i64 %1, 1
  store i64 %inc, ptr %pos, align 8
  ret ptr null
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @jbd2_seq_info_show(ptr noundef %seq, ptr noundef readnone %v) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.seq_file, ptr %seq, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 8
  %cmp.not = icmp eq ptr %v, inttoptr (i32 1 to ptr)
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %stats = getelementptr inbounds %struct.jbd2_stats_proc_session, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %stats, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 4
  %ts_requested = getelementptr inbounds %struct.transaction_stats_s, ptr %3, i32 0, i32 1
  %6 = ptrtoint ptr %ts_requested to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ts_requested, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %1, align 4
  %j_max_transaction_buffers = getelementptr inbounds %struct.journal_s, ptr %9, i32 0, i32 47
  %10 = ptrtoint ptr %j_max_transaction_buffers to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %j_max_transaction_buffers, align 8
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.139, i32 noundef %5, i32 noundef %7, i32 noundef %11) #19
  %12 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %stats, align 4
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp4 = icmp eq i32 %15, 0
  br i1 %cmp4, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %run = getelementptr inbounds %struct.transaction_stats_s, ptr %13, i32 0, i32 2
  %16 = ptrtoint ptr %run to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %run, align 4
  %div = udiv i32 %17, %15
  %call = tail call i32 @jiffies_to_msecs(i32 noundef %div) #19
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.140, i32 noundef %call) #19
  %18 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %stats, align 4
  %ts_requested11 = getelementptr inbounds %struct.transaction_stats_s, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %ts_requested11 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %ts_requested11, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp12 = icmp eq i32 %21, 0
  br i1 %cmp12, label %if.end6.cond.end_crit_edge, label %cond.false

if.end6.cond.end_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #21
  br label %cond.end

cond.false:                                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #21
  %rs_request_delay = getelementptr inbounds %struct.transaction_stats_s, ptr %19, i32 0, i32 2, i32 1
  %22 = ptrtoint ptr %rs_request_delay to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %rs_request_delay, align 4
  %div17 = udiv i32 %23, %21
  %call18 = tail call i32 @jiffies_to_msecs(i32 noundef %div17) #19
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end6.cond.end_crit_edge
  %cond = phi i32 [ %call18, %cond.false ], [ 0, %if.end6.cond.end_crit_edge ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.141, i32 noundef %cond) #19
  %24 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %stats, align 4
  %rs_running = getelementptr inbounds %struct.transaction_stats_s, ptr %25, i32 0, i32 2, i32 2
  %26 = ptrtoint ptr %rs_running to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %rs_running, align 4
  %28 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %25, align 4
  %div23 = udiv i32 %27, %29
  %call24 = tail call i32 @jiffies_to_msecs(i32 noundef %div23) #19
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.142, i32 noundef %call24) #19
  %30 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %stats, align 4
  %rs_locked = getelementptr inbounds %struct.transaction_stats_s, ptr %31, i32 0, i32 2, i32 3
  %32 = ptrtoint ptr %rs_locked to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rs_locked, align 4
  %34 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %31, align 4
  %div29 = udiv i32 %33, %35
  %call30 = tail call i32 @jiffies_to_msecs(i32 noundef %div29) #19
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.143, i32 noundef %call30) #19
  %36 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %stats, align 4
  %rs_flushing = getelementptr inbounds %struct.transaction_stats_s, ptr %37, i32 0, i32 2, i32 4
  %38 = ptrtoint ptr %rs_flushing to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rs_flushing, align 4
  %40 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %37, align 4
  %div35 = udiv i32 %39, %41
  %call36 = tail call i32 @jiffies_to_msecs(i32 noundef %div35) #19
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.144, i32 noundef %call36) #19
  %42 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %stats, align 4
  %rs_logging = getelementptr inbounds %struct.transaction_stats_s, ptr %43, i32 0, i32 2, i32 5
  %44 = ptrtoint ptr %rs_logging to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %rs_logging, align 4
  %46 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %43, align 4
  %div41 = udiv i32 %45, %47
  %call42 = tail call i32 @jiffies_to_msecs(i32 noundef %div41) #19
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.145, i32 noundef %call42) #19
  %48 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %1, align 4
  %j_average_commit_time = getelementptr inbounds %struct.journal_s, ptr %49, i32 0, i32 59
  %50 = ptrtoint ptr %j_average_commit_time to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %j_average_commit_time, align 8
  %52 = tail call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %51, i32 0) #26, !srcloc !852
  %asmresult.i.i.i = extractvalue { i64, i32 } %52, 0
  %asmresult4.i.i.i = extractvalue { i64, i32 } %52, 1
  %53 = tail call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %51, i64 %asmresult.i.i.i, i32 %asmresult4.i.i.i) #26, !srcloc !853
  %asmresult10.i.i.i = extractvalue { i64, i32 } %53, 0
  %div1581.i.i = lshr i64 %asmresult10.i.i.i, 9
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.146, i64 noundef %div1581.i.i) #19
  %54 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %stats, align 4
  %rs_handle_count = getelementptr inbounds %struct.transaction_stats_s, ptr %55, i32 0, i32 2, i32 6
  %56 = ptrtoint ptr %rs_handle_count to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %rs_handle_count, align 4
  %58 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %55, align 4
  %div49 = udiv i32 %57, %59
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.147, i32 noundef %div49) #19
  %60 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %stats, align 4
  %rs_blocks = getelementptr inbounds %struct.transaction_stats_s, ptr %61, i32 0, i32 2, i32 7
  %62 = ptrtoint ptr %rs_blocks to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %rs_blocks, align 4
  %64 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %61, align 4
  %div54 = udiv i32 %63, %65
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.148, i32 noundef %div54) #19
  %66 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %stats, align 4
  %rs_blocks_logged = getelementptr inbounds %struct.transaction_stats_s, ptr %67, i32 0, i32 2, i32 8
  %68 = ptrtoint ptr %rs_blocks_logged to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %rs_blocks_logged, align 4
  %70 = ptrtoint ptr %67 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %67, align 4
  %div59 = udiv i32 %69, %71
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.149, i32 noundef %div59) #19
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #16

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @seq_release(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_jbd2_write_superblock(ptr noundef %journal, i32 noundef %write_op) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_write_superblock, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_jbd2_write_superblock, %do.body)) #19
          to label %if.end48 [label %do.body], !srcloc !820

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !788

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.108, i32 noundef 108, i32 noundef 9, ptr noundef null) #19
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !854
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_write_superblock, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %journal, i32 noundef %write_op) #19
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !855
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !855
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !788

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #21
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.108, i32 noundef 108, i32 noundef 9, ptr noundef null) #19
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !823
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_jbd2_write_superblock, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_jbd2_write_superblock.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @trace_jbd2_write_superblock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.106, i32 noundef 374, ptr noundef nonnull @.str.107) #19
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !824
  %38 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @end_buffer_write_sync(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @submit_bh(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kthread_create_on_node(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @kjournald2(ptr noundef %arg) #0 align 64 {
entry:
  %wait = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_commit_timer = getelementptr inbounds %struct.journal_s, ptr %arg, i32 0, i32 50
  tail call void @init_timer_key(ptr noundef %j_commit_timer, ptr noundef nonnull @commit_timeout, i32 noundef 0, ptr noundef nonnull @.str.159, ptr noundef nonnull @kjournald2.__key) #19
  %call = tail call zeroext i1 @set_freezable() #19
  %0 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %j_task = getelementptr inbounds %struct.journal_s, ptr %arg, i32 0, i32 46
  %4 = ptrtoint ptr %j_task to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %3, ptr %j_task, align 4
  %j_wait_done_commit = getelementptr inbounds %struct.journal_s, ptr %arg, i32 0, i32 14
  tail call void @__wake_up(ptr noundef %j_wait_done_commit, i32 noundef 3, i32 noundef 1, ptr noundef null) #19
  %5 = tail call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task.i, align 8
  %flags1.i = getelementptr inbounds %struct.task_struct, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags1.i, align 4
  %or.i = or i32 %10, 262144
  store i32 %or.i, ptr %flags1.i, align 4
  %j_state_lock = getelementptr inbounds %struct.journal_s, ptr %arg, i32 0, i32 7
  tail call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  %11 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arg, align 8
  %and102 = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and102)
  %tobool.not103 = icmp eq i32 %and102, 0
  br i1 %tobool.not103, label %if.end.lr.ph, label %entry.end_loop_crit_edge

entry.end_loop_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %end_loop

if.end.lr.ph:                                     ; preds = %entry
  %j_commit_sequence = getelementptr inbounds %struct.journal_s, ptr %arg, i32 0, i32 43
  %j_commit_request = getelementptr inbounds %struct.journal_s, ptr %arg, i32 0, i32 44
  %13 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 1
  %14 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 2
  %15 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3
  %16 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3, i32 1
  %j_wait_commit = getelementptr inbounds %struct.journal_s, ptr %arg, i32 0, i32 15
  %j_running_transaction = getelementptr inbounds %struct.journal_s, ptr %arg, i32 0, i32 10
  br label %if.end

if.end:                                           ; preds = %loop.backedge.if.end_crit_edge, %if.end.lr.ph
  %17 = ptrtoint ptr %j_commit_sequence to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %j_commit_sequence, align 4
  %19 = ptrtoint ptr %j_commit_request to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %j_commit_request, align 8
  call void (i32, ptr, ptr, i32, ptr, ...) @__jbd2_debug(i32 noundef 1, ptr noundef nonnull @.str.2, ptr noundef nonnull @__func__.kjournald2, i32 noundef 207, ptr noundef nonnull @.str.160, i32 noundef %18, i32 noundef %20)
  %21 = ptrtoint ptr %j_commit_sequence to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %j_commit_sequence, align 4
  %23 = ptrtoint ptr %j_commit_request to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %j_commit_request, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %22, i32 %24)
  %cmp.not = icmp eq i32 %22, %24
  br i1 %cmp.not, label %if.end10, label %if.then5

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  call void (i32, ptr, ptr, i32, ptr, ...) @__jbd2_debug(i32 noundef 1, ptr noundef nonnull @.str.2, ptr noundef nonnull @__func__.kjournald2, i32 noundef 210, ptr noundef nonnull @.str.161)
  call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  %call8 = call i32 @del_timer_sync(ptr noundef %j_commit_timer) #19
  call void @jbd2_journal_commit_transaction(ptr noundef %arg) #19
  call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  br label %loop.backedge

loop.backedge:                                    ; preds = %if.then51, %land.lhs.true47.loop.backedge_crit_edge, %if.end44.loop.backedge_crit_edge, %if.then5
  %25 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arg, align 8
  %and = and i32 %26, 1
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %loop.backedge.if.end_crit_edge, label %loop.backedge.end_loop_crit_edge

loop.backedge.end_loop_crit_edge:                 ; preds = %loop.backedge
  call void @__sanitizer_cov_trace_pc() #21
  br label %end_loop

loop.backedge.if.end_crit_edge:                   ; preds = %loop.backedge
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end10:                                         ; preds = %if.end
  call void @__wake_up(ptr noundef %j_wait_done_commit, i32 noundef 3, i32 noundef 1, ptr noundef null) #19
  %27 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %task, align 8
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @system_freezing_cnt, i32 noundef 4) #19
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_freezing_cnt to i32))
  %29 = load volatile i32, ptr @system_freezing_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.not.i = icmp eq i32 %29, 0
  br i1 %tobool.not.i, label %if.end10.if.else_crit_edge, label %freezing.exit, !prof !788

if.end10.if.else_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.else

freezing.exit:                                    ; preds = %if.end10
  %call4.i = call zeroext i1 @freezing_slow_path(ptr noundef %28) #19
  br i1 %call4.i, label %if.then15, label %freezing.exit.if.else_crit_edge

freezing.exit.if.else_crit_edge:                  ; preds = %freezing.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.else

if.then15:                                        ; preds = %freezing.exit
  call void (i32, ptr, ptr, i32, ptr, ...) @__jbd2_debug(i32 noundef 1, ptr noundef nonnull @.str.2, ptr noundef nonnull @__func__.kjournald2, i32 noundef 225, ptr noundef nonnull @.str.162)
  call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  %30 = call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i95 = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i95 to ptr
  %task.i96 = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 2
  %32 = ptrtoint ptr %task.i96 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %task.i96, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %33, i32 0, i32 3
  %34 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %flags.i, align 4
  %and.i97 = and i32 %35, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i97)
  %tobool.not.i98 = icmp eq i32 %and.i97, 0
  br i1 %tobool.not.i98, label %if.then.i, label %if.then15.if.end.i99_crit_edge

if.then15.if.end.i99_crit_edge:                   ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i99

if.then.i:                                        ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #21
  call void @debug_check_no_locks_held() #19
  br label %if.end.i99

if.end.i99:                                       ; preds = %if.then.i, %if.then15.if.end.i99_crit_edge
  call void @__might_sleep(ptr noundef nonnull @.str.166, i32 noundef 57) #19
  %36 = call i32 @llvm.read_register.i32(metadata !778) #19
  %and.i.i.i = and i32 %36, -16384
  %37 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 2
  %38 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %task.i.i, align 8
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @system_freezing_cnt, i32 noundef 4) #19
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_freezing_cnt to i32))
  %40 = load volatile i32, ptr @system_freezing_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool.not.i.i.i = icmp eq i32 %40, 0
  br i1 %tobool.not.i.i.i, label %if.end.i99.try_to_freeze.exit_crit_edge, label %freezing.exit.i.i, !prof !788

if.end.i99.try_to_freeze.exit_crit_edge:          ; preds = %if.end.i99
  call void @__sanitizer_cov_trace_pc() #21
  br label %try_to_freeze.exit

freezing.exit.i.i:                                ; preds = %if.end.i99
  %call4.i.i.i = call zeroext i1 @freezing_slow_path(ptr noundef %39) #19
  br i1 %call4.i.i.i, label %if.end.i.i, label %freezing.exit.i.i.try_to_freeze.exit_crit_edge, !prof !789

freezing.exit.i.i.try_to_freeze.exit_crit_edge:   ; preds = %freezing.exit.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %try_to_freeze.exit

if.end.i.i:                                       ; preds = %freezing.exit.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %call6.i.i = call zeroext i1 @__refrigerator(i1 noundef zeroext false) #19
  br label %try_to_freeze.exit

try_to_freeze.exit:                               ; preds = %if.end.i.i, %freezing.exit.i.i.try_to_freeze.exit_crit_edge, %if.end.i99.try_to_freeze.exit_crit_edge
  call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  br label %if.end44

if.else:                                          ; preds = %freezing.exit.if.else_crit_edge, %if.end10.if.else_crit_edge
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %wait) #19
  %41 = ptrtoint ptr %wait to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 0, ptr %wait, align 4
  %42 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %task, align 8
  %44 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %43, ptr %13, align 4
  %45 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr @autoremove_wake_function, ptr %14, align 4
  %46 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %15, ptr %15, align 4
  %47 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %15, ptr %16, align 4
  call void @prepare_to_wait(ptr noundef %j_wait_commit, ptr noundef nonnull %wait, i32 noundef 1) #19
  %48 = ptrtoint ptr %j_commit_sequence to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %j_commit_sequence, align 4
  %50 = ptrtoint ptr %j_commit_request to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %j_commit_request, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %49, i32 %51)
  %cmp26.not = icmp eq i32 %49, %51
  %spec.select = zext i1 %cmp26.not to i32
  %52 = ptrtoint ptr %j_running_transaction to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %j_running_transaction, align 8
  %tobool29.not = icmp eq ptr %53, null
  br i1 %tobool29.not, label %if.else.if.end32_crit_edge, label %land.lhs.true

if.else.if.end32_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end32

land.lhs.true:                                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %54 = load volatile i32, ptr @jiffies, align 128
  %t_expires = getelementptr inbounds %struct.transaction_s, ptr %53, i32 0, i32 23
  %55 = ptrtoint ptr %t_expires to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %t_expires, align 4
  %sub = sub i32 %54, %56
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp30.inv = icmp slt i32 %sub, 0
  %spec.select93 = select i1 %cmp30.inv, i32 %spec.select, i32 0
  br label %if.end32

if.end32:                                         ; preds = %land.lhs.true, %if.else.if.end32_crit_edge
  %should_sleep.1 = phi i32 [ %spec.select, %if.else.if.end32_crit_edge ], [ %spec.select93, %land.lhs.true ]
  %57 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %arg, align 8
  %and34 = and i32 %58, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34)
  %tobool35.not = icmp ne i32 %and34, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %should_sleep.1)
  %tobool38.not101 = icmp eq i32 %should_sleep.1, 0
  %tobool38.not = select i1 %tobool35.not, i1 true, i1 %tobool38.not101
  br i1 %tobool38.not, label %if.end32.if.end42_crit_edge, label %if.then39

if.end32.if.end42_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end42

if.then39:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #21
  call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  call void @schedule() #19
  call void @_raw_write_lock(ptr noundef %j_state_lock) #19
  br label %if.end42

if.end42:                                         ; preds = %if.then39, %if.end32.if.end42_crit_edge
  call void @finish_wait(ptr noundef %j_wait_commit, ptr noundef nonnull %wait) #19
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %wait) #19
  br label %if.end44

if.end44:                                         ; preds = %if.end42, %try_to_freeze.exit
  call void (i32, ptr, ptr, i32, ptr, ...) @__jbd2_debug(i32 noundef 1, ptr noundef nonnull @.str.2, ptr noundef nonnull @__func__.kjournald2, i32 noundef 255, ptr noundef nonnull @.str.163)
  %59 = ptrtoint ptr %j_running_transaction to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %j_running_transaction, align 8
  %tobool46.not = icmp eq ptr %60, null
  br i1 %tobool46.not, label %if.end44.loop.backedge_crit_edge, label %land.lhs.true47

if.end44.loop.backedge_crit_edge:                 ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #21
  br label %loop.backedge

land.lhs.true47:                                  ; preds = %if.end44
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %61 = load volatile i32, ptr @jiffies, align 128
  %t_expires48 = getelementptr inbounds %struct.transaction_s, ptr %60, i32 0, i32 23
  %62 = ptrtoint ptr %t_expires48 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %t_expires48, align 4
  %sub49 = sub i32 %61, %63
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub49)
  %cmp50 = icmp sgt i32 %sub49, -1
  br i1 %cmp50, label %if.then51, label %land.lhs.true47.loop.backedge_crit_edge

land.lhs.true47.loop.backedge_crit_edge:          ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #21
  br label %loop.backedge

if.then51:                                        ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #21
  %t_tid = getelementptr inbounds %struct.transaction_s, ptr %60, i32 0, i32 1
  %64 = ptrtoint ptr %t_tid to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %t_tid, align 4
  %66 = ptrtoint ptr %j_commit_request to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %65, ptr %j_commit_request, align 8
  call void (i32, ptr, ptr, i32, ptr, ...) @__jbd2_debug(i32 noundef 1, ptr noundef nonnull @.str.2, ptr noundef nonnull @__func__.kjournald2, i32 noundef 263, ptr noundef nonnull @.str.164)
  br label %loop.backedge

end_loop:                                         ; preds = %loop.backedge.end_loop_crit_edge, %entry.end_loop_crit_edge
  %call55 = call i32 @del_timer_sync(ptr noundef %j_commit_timer) #19
  %67 = ptrtoint ptr %j_task to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr null, ptr %j_task, align 4
  call void @__wake_up(ptr noundef %j_wait_done_commit, i32 noundef 3, i32 noundef 1, ptr noundef null) #19
  call void (i32, ptr, ptr, i32, ptr, ...) @__jbd2_debug(i32 noundef 1, ptr noundef nonnull @.str.2, ptr noundef nonnull @__func__.kjournald2, i32 noundef 271, ptr noundef nonnull @.str.165)
  call void @_raw_write_unlock(ptr noundef %j_state_lock) #19
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wake_up_process(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @commit_timeout(ptr nocapture noundef readonly %t) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %j_task = getelementptr i8, ptr %t, i32 -16
  %0 = ptrtoint ptr %j_task to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %j_task, align 4
  %call = tail call i32 @wake_up_process(ptr noundef %1) #19
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @set_freezable() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @del_timer_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @freezing_slow_path(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_check_no_locks_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__refrigerator(i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @crypto_destroy_tfm(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ll_rw_block(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @truncate_inode_pages_range(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blkdev_issue_discard(ptr noundef, i64 noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blkdev_issue_zeroout(ptr noundef, i64 noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blkdev_issue_flush(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @jbd2_journal_destroy_revoke_record_cache() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @jbd2_journal_destroy_revoke_table_cache() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @jbd2_journal_destroy_transaction_cache() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @journal_init_caches() unnamed_addr #10 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @jbd2_journal_init_revoke_record_cache() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.end, label %entry.if.end17_crit_edge

entry.if.end17_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end17

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @jbd2_journal_init_revoke_table_cache() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp2 = icmp eq i32 %call1, 0
  br i1 %cmp2, label %if.end5, label %if.end.if.end17_crit_edge

if.end.if.end17_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end17

if.end5:                                          ; preds = %if.end
  %call4 = tail call fastcc i32 @jbd2_journal_init_journal_head_cache() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %cmp6 = icmp eq i32 %call4, 0
  br i1 %cmp6, label %if.end9, label %if.end5.if.end17_crit_edge

if.end5.if.end17_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end17

if.end9:                                          ; preds = %if.end5
  %call8 = tail call fastcc i32 @jbd2_journal_init_handle_cache() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %cmp10 = icmp eq i32 %call8, 0
  br i1 %cmp10, label %if.end13, label %if.end9.if.end17_crit_edge

if.end9.if.end17_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end17

if.end13:                                         ; preds = %if.end9
  %call12 = tail call fastcc i32 @jbd2_journal_init_inode_cache() #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %cmp14 = icmp eq i32 %call12, 0
  br i1 %cmp14, label %if.then15, label %if.end13.if.end17_crit_edge

if.end13.if.end17_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end17

if.then15:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #21
  %call16 = tail call i32 @jbd2_journal_init_transaction_cache() #22
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end13.if.end17_crit_edge, %if.end9.if.end17_crit_edge, %if.end5.if.end17_crit_edge, %if.end.if.end17_crit_edge, %entry.if.end17_crit_edge
  %ret.4 = phi i32 [ %call16, %if.then15 ], [ %call12, %if.end13.if.end17_crit_edge ], [ %call8, %if.end9.if.end17_crit_edge ], [ %call4, %if.end5.if.end17_crit_edge ], [ %call1, %if.end.if.end17_crit_edge ], [ %call, %entry.if.end17_crit_edge ]
  ret i32 %ret.4
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @jbd2_journal_init_revoke_record_cache() local_unnamed_addr #7 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @jbd2_journal_init_revoke_table_cache() local_unnamed_addr #7 section ".init.text"

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @jbd2_journal_init_journal_head_cache() unnamed_addr #10 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @jbd2_journal_head_cache, align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %do.end8, label %do.body5, !prof !788

do.body5:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2835, 0\0A.popsection", ""() #19, !srcloc !856
  unreachable

do.end8:                                          ; preds = %entry
  %call = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.222, i32 noundef 104, i32 noundef 0, i32 noundef 655360, ptr noundef null) #19
  store ptr %call, ptr @jbd2_journal_head_cache, align 4
  %tobool9.not = icmp eq ptr %call, null
  br i1 %tobool9.not, label %do.end12, label %do.end8.return_crit_edge

do.end8.return_crit_edge:                         ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

do.end12:                                         ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #21
  %call13 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.223) #22
  br label %return

return:                                           ; preds = %do.end12, %do.end8.return_crit_edge
  %retval.0 = phi i32 [ -12, %do.end12 ], [ 0, %do.end8.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @jbd2_journal_init_handle_cache() unnamed_addr #10 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @jbd2_handle_cache, align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %do.end8, label %do.body5, !prof !788

do.body5:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3117, 0\0A.popsection", ""() #19, !srcloc !857
  unreachable

do.end8:                                          ; preds = %entry
  %call = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.225, i32 noundef 44, i32 noundef 4, i32 noundef 131072, ptr noundef null) #19
  store ptr %call, ptr @jbd2_handle_cache, align 4
  %tobool9.not = icmp eq ptr %call, null
  br i1 %tobool9.not, label %do.end12, label %do.end8.return_crit_edge

do.end8.return_crit_edge:                         ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

do.end12:                                         ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #21
  %call13 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.226) #22
  br label %return

return:                                           ; preds = %do.end12, %do.end8.return_crit_edge
  %retval.0 = phi i32 [ -12, %do.end12 ], [ 0, %do.end8.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @jbd2_journal_init_inode_cache() unnamed_addr #10 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @jbd2_inode_cache, align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %do.end8, label %do.body5, !prof !788

do.body5:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/jbd2/journal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3106, 0\0A.popsection", ""() #19, !srcloc !858
  unreachable

do.end8:                                          ; preds = %entry
  %call = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.228, i32 noundef 40, i32 noundef 8, i32 noundef 0, ptr noundef null) #19
  store ptr %call, ptr @jbd2_inode_cache, align 4
  %tobool9.not = icmp eq ptr %call, null
  br i1 %tobool9.not, label %do.end12, label %do.end8.return_crit_edge

do.end8.return_crit_edge:                         ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

do.end12:                                         ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #21
  %call13 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.229) #22
  br label %return

return:                                           ; preds = %do.end12, %do.end8.return_crit_edge
  %retval.0 = phi i32 [ -12, %do.end12 ], [ 0, %do.end8.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @jbd2_journal_init_transaction_cache() local_unnamed_addr #7 section ".init.text"

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.smax.i64(i64, i64) #16

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #19

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #20 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 315)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #20 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 315)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { argmemonly nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { nocallback nofree nosync nounwind willreturn }
attributes #7 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #12 = { nounwind readonly }
attributes #13 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #14 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #17 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #18 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #19 = { nounwind }
attributes #20 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #21 = { nomerge }
attributes #22 = { cold nounwind }
attributes #23 = { nounwind allocsize(0) }
attributes #24 = { nounwind allocsize(2) }
attributes #25 = { cold }
attributes #26 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !10, !11, !12, !14, !15, !16, !18, !19, !20, !22, !23, !24, !26, !27, !28, !30, !31, !32, !34, !35, !36, !38, !39, !40, !42, !43, !44, !46, !47, !48, !50, !51, !52, !54, !55, !56, !58, !59, !60, !62, !63, !64, !66, !67, !68, !70, !71, !72, !74, !75, !76, !78, !79, !80, !82, !83, !84, !85, !86, !87, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !167, !169, !170, !172, !174, !176, !178, !180, !182, !184, !186, !188, !190, !192, !194, !196, !198, !200, !202, !204, !206, !208, !210, !212, !214, !216, !218, !220, !222, !224, !226, !228, !230, !232, !234, !236, !238, !240, !242, !244, !246, !248, !250, !252, !254, !255, !256, !257, !258, !260, !262, !263, !265, !266, !268, !270, !271, !272, !273, !275, !277, !279, !281, !283, !285, !287, !289, !291, !293, !294, !295, !296, !298, !299, !301, !302, !303, !304, !306, !308, !310, !311, !313, !314, !316, !318, !319, !320, !321, !323, !324, !325, !327, !328, !329, !331, !332, !334, !335, !336, !338, !340, !341, !342, !344, !345, !347, !349, !350, !351, !352, !353, !354, !356, !357, !358, !359, !361, !363, !365, !367, !368, !369, !370, !372, !373, !375, !377, !379, !381, !383, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !519, !521, !522, !523, !524, !525, !526, !528, !529, !531, !533, !534, !536, !537, !539, !540, !542, !543, !545, !546, !548, !549, !551, !552, !554, !555, !557, !558, !560, !561, !563, !564, !566, !567, !569, !570, !572, !574, !575, !576, !577, !579, !580, !581, !582, !583, !584, !585, !587, !589, !591, !593, !595, !597, !599, !601, !603, !605, !607, !609, !611, !613, !615, !616, !617, !618, !620, !621, !622, !623, !624, !626, !627, !628, !629, !631, !633, !635, !636, !638, !639, !641, !643, !645, !647, !649, !651, !653, !654, !656, !657, !658, !659, !661, !662, !663, !665, !666, !667, !669, !670, !671, !673, !674, !675, !677, !678, !679, !681, !682, !683, !685, !686, !687, !689, !690, !692, !693, !694, !696, !697, !698, !699, !701, !702, !703, !705, !706, !707, !709, !710, !711, !712, !714, !716, !718, !720, !722, !724, !726, !728, !730, !732, !734, !735, !737, !738, !739, !740, !741, !743, !744, !746, !748, !749, !750, !751, !753, !754, !755, !757, !759, !761, !762, !763, !764, !766, !768, !769, !770, !771, !773, !775, !776, !777}
!llvm.named.register.sp = !{!778}
!llvm.module.flags = !{!779, !780, !781, !782, !783, !784, !785, !786}
!llvm.ident = !{!787}

!0 = !{ptr @__tracepoint_jbd2_checkpoint, !1, !"__tracepoint_jbd2_checkpoint", i1 false, i1 false}
!1 = !{!"../include/trace/events/jbd2.h", i32 14, i32 1}
!2 = !{ptr @__tracepoint_ptr_jbd2_checkpoint, !1, !"__tracepoint_ptr_jbd2_checkpoint", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_jbd2_checkpoint, !1, !"__SCK__tp_func_jbd2_checkpoint", i1 false, i1 false}
!4 = !{ptr @__tracepoint_jbd2_start_commit, !5, !"__tracepoint_jbd2_start_commit", i1 false, i1 false}
!5 = !{!"../include/trace/events/jbd2.h", i32 57, i32 1}
!6 = !{ptr @__tracepoint_ptr_jbd2_start_commit, !5, !"__tracepoint_ptr_jbd2_start_commit", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_jbd2_start_commit, !5, !"__SCK__tp_func_jbd2_start_commit", i1 false, i1 false}
!8 = !{ptr @__tracepoint_jbd2_commit_locking, !9, !"__tracepoint_jbd2_commit_locking", i1 false, i1 false}
!9 = !{!"../include/trace/events/jbd2.h", i32 64, i32 1}
!10 = !{ptr @__tracepoint_ptr_jbd2_commit_locking, !9, !"__tracepoint_ptr_jbd2_commit_locking", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_jbd2_commit_locking, !9, !"__SCK__tp_func_jbd2_commit_locking", i1 false, i1 false}
!12 = !{ptr @__tracepoint_jbd2_commit_flushing, !13, !"__tracepoint_jbd2_commit_flushing", i1 false, i1 false}
!13 = !{!"../include/trace/events/jbd2.h", i32 71, i32 1}
!14 = !{ptr @__tracepoint_ptr_jbd2_commit_flushing, !13, !"__tracepoint_ptr_jbd2_commit_flushing", i1 false, i1 false}
!15 = !{ptr @__SCK__tp_func_jbd2_commit_flushing, !13, !"__SCK__tp_func_jbd2_commit_flushing", i1 false, i1 false}
!16 = !{ptr @__tracepoint_jbd2_commit_logging, !17, !"__tracepoint_jbd2_commit_logging", i1 false, i1 false}
!17 = !{!"../include/trace/events/jbd2.h", i32 78, i32 1}
!18 = !{ptr @__tracepoint_ptr_jbd2_commit_logging, !17, !"__tracepoint_ptr_jbd2_commit_logging", i1 false, i1 false}
!19 = !{ptr @__SCK__tp_func_jbd2_commit_logging, !17, !"__SCK__tp_func_jbd2_commit_logging", i1 false, i1 false}
!20 = !{ptr @__tracepoint_jbd2_drop_transaction, !21, !"__tracepoint_jbd2_drop_transaction", i1 false, i1 false}
!21 = !{!"../include/trace/events/jbd2.h", i32 85, i32 1}
!22 = !{ptr @__tracepoint_ptr_jbd2_drop_transaction, !21, !"__tracepoint_ptr_jbd2_drop_transaction", i1 false, i1 false}
!23 = !{ptr @__SCK__tp_func_jbd2_drop_transaction, !21, !"__SCK__tp_func_jbd2_drop_transaction", i1 false, i1 false}
!24 = !{ptr @__tracepoint_jbd2_end_commit, !25, !"__tracepoint_jbd2_end_commit", i1 false, i1 false}
!25 = !{!"../include/trace/events/jbd2.h", i32 92, i32 1}
!26 = !{ptr @__tracepoint_ptr_jbd2_end_commit, !25, !"__tracepoint_ptr_jbd2_end_commit", i1 false, i1 false}
!27 = !{ptr @__SCK__tp_func_jbd2_end_commit, !25, !"__SCK__tp_func_jbd2_end_commit", i1 false, i1 false}
!28 = !{ptr @__tracepoint_jbd2_submit_inode_data, !29, !"__tracepoint_jbd2_submit_inode_data", i1 false, i1 false}
!29 = !{!"../include/trace/events/jbd2.h", i32 116, i32 1}
!30 = !{ptr @__tracepoint_ptr_jbd2_submit_inode_data, !29, !"__tracepoint_ptr_jbd2_submit_inode_data", i1 false, i1 false}
!31 = !{ptr @__SCK__tp_func_jbd2_submit_inode_data, !29, !"__SCK__tp_func_jbd2_submit_inode_data", i1 false, i1 false}
!32 = !{ptr @__tracepoint_jbd2_handle_start, !33, !"__tracepoint_jbd2_handle_start", i1 false, i1 false}
!33 = !{!"../include/trace/events/jbd2.h", i32 164, i32 1}
!34 = !{ptr @__tracepoint_ptr_jbd2_handle_start, !33, !"__tracepoint_ptr_jbd2_handle_start", i1 false, i1 false}
!35 = !{ptr @__SCK__tp_func_jbd2_handle_start, !33, !"__SCK__tp_func_jbd2_handle_start", i1 false, i1 false}
!36 = !{ptr @__tracepoint_jbd2_handle_restart, !37, !"__tracepoint_jbd2_handle_restart", i1 false, i1 false}
!37 = !{!"../include/trace/events/jbd2.h", i32 171, i32 1}
!38 = !{ptr @__tracepoint_ptr_jbd2_handle_restart, !37, !"__tracepoint_ptr_jbd2_handle_restart", i1 false, i1 false}
!39 = !{ptr @__SCK__tp_func_jbd2_handle_restart, !37, !"__SCK__tp_func_jbd2_handle_restart", i1 false, i1 false}
!40 = !{ptr @__tracepoint_jbd2_handle_extend, !41, !"__tracepoint_jbd2_handle_extend", i1 false, i1 false}
!41 = !{!"../include/trace/events/jbd2.h", i32 178, i32 1}
!42 = !{ptr @__tracepoint_ptr_jbd2_handle_extend, !41, !"__tracepoint_ptr_jbd2_handle_extend", i1 false, i1 false}
!43 = !{ptr @__SCK__tp_func_jbd2_handle_extend, !41, !"__SCK__tp_func_jbd2_handle_extend", i1 false, i1 false}
!44 = !{ptr @__tracepoint_jbd2_handle_stats, !45, !"__tracepoint_jbd2_handle_stats", i1 false, i1 false}
!45 = !{!"../include/trace/events/jbd2.h", i32 210, i32 1}
!46 = !{ptr @__tracepoint_ptr_jbd2_handle_stats, !45, !"__tracepoint_ptr_jbd2_handle_stats", i1 false, i1 false}
!47 = !{ptr @__SCK__tp_func_jbd2_handle_stats, !45, !"__SCK__tp_func_jbd2_handle_stats", i1 false, i1 false}
!48 = !{ptr @__tracepoint_jbd2_run_stats, !49, !"__tracepoint_jbd2_run_stats", i1 false, i1 false}
!49 = !{!"../include/trace/events/jbd2.h", i32 248, i32 1}
!50 = !{ptr @__tracepoint_ptr_jbd2_run_stats, !49, !"__tracepoint_ptr_jbd2_run_stats", i1 false, i1 false}
!51 = !{ptr @__SCK__tp_func_jbd2_run_stats, !49, !"__SCK__tp_func_jbd2_run_stats", i1 false, i1 false}
!52 = !{ptr @__tracepoint_jbd2_checkpoint_stats, !53, !"__tracepoint_jbd2_checkpoint_stats", i1 false, i1 false}
!53 = !{!"../include/trace/events/jbd2.h", i32 296, i32 1}
!54 = !{ptr @__tracepoint_ptr_jbd2_checkpoint_stats, !53, !"__tracepoint_ptr_jbd2_checkpoint_stats", i1 false, i1 false}
!55 = !{ptr @__SCK__tp_func_jbd2_checkpoint_stats, !53, !"__SCK__tp_func_jbd2_checkpoint_stats", i1 false, i1 false}
!56 = !{ptr @__tracepoint_jbd2_update_log_tail, !57, !"__tracepoint_jbd2_update_log_tail", i1 false, i1 false}
!57 = !{!"../include/trace/events/jbd2.h", i32 327, i32 1}
!58 = !{ptr @__tracepoint_ptr_jbd2_update_log_tail, !57, !"__tracepoint_ptr_jbd2_update_log_tail", i1 false, i1 false}
!59 = !{ptr @__SCK__tp_func_jbd2_update_log_tail, !57, !"__SCK__tp_func_jbd2_update_log_tail", i1 false, i1 false}
!60 = !{ptr @__tracepoint_jbd2_write_superblock, !61, !"__tracepoint_jbd2_write_superblock", i1 false, i1 false}
!61 = !{!"../include/trace/events/jbd2.h", i32 356, i32 1}
!62 = !{ptr @__tracepoint_ptr_jbd2_write_superblock, !61, !"__tracepoint_ptr_jbd2_write_superblock", i1 false, i1 false}
!63 = !{ptr @__SCK__tp_func_jbd2_write_superblock, !61, !"__SCK__tp_func_jbd2_write_superblock", i1 false, i1 false}
!64 = !{ptr @__tracepoint_jbd2_lock_buffer_stall, !65, !"__tracepoint_jbd2_lock_buffer_stall", i1 false, i1 false}
!65 = !{!"../include/trace/events/jbd2.h", i32 376, i32 1}
!66 = !{ptr @__tracepoint_ptr_jbd2_lock_buffer_stall, !65, !"__tracepoint_ptr_jbd2_lock_buffer_stall", i1 false, i1 false}
!67 = !{ptr @__SCK__tp_func_jbd2_lock_buffer_stall, !65, !"__SCK__tp_func_jbd2_lock_buffer_stall", i1 false, i1 false}
!68 = !{ptr @__tracepoint_jbd2_shrink_count, !69, !"__tracepoint_jbd2_shrink_count", i1 false, i1 false}
!69 = !{!"../include/trace/events/jbd2.h", i32 421, i32 1}
!70 = !{ptr @__tracepoint_ptr_jbd2_shrink_count, !69, !"__tracepoint_ptr_jbd2_shrink_count", i1 false, i1 false}
!71 = !{ptr @__SCK__tp_func_jbd2_shrink_count, !69, !"__SCK__tp_func_jbd2_shrink_count", i1 false, i1 false}
!72 = !{ptr @__tracepoint_jbd2_shrink_scan_enter, !73, !"__tracepoint_jbd2_shrink_scan_enter", i1 false, i1 false}
!73 = !{!"../include/trace/events/jbd2.h", i32 428, i32 1}
!74 = !{ptr @__tracepoint_ptr_jbd2_shrink_scan_enter, !73, !"__tracepoint_ptr_jbd2_shrink_scan_enter", i1 false, i1 false}
!75 = !{ptr @__SCK__tp_func_jbd2_shrink_scan_enter, !73, !"__SCK__tp_func_jbd2_shrink_scan_enter", i1 false, i1 false}
!76 = !{ptr @__tracepoint_jbd2_shrink_scan_exit, !77, !"__tracepoint_jbd2_shrink_scan_exit", i1 false, i1 false}
!77 = !{!"../include/trace/events/jbd2.h", i32 435, i32 1}
!78 = !{ptr @__tracepoint_ptr_jbd2_shrink_scan_exit, !77, !"__tracepoint_ptr_jbd2_shrink_scan_exit", i1 false, i1 false}
!79 = !{ptr @__SCK__tp_func_jbd2_shrink_scan_exit, !77, !"__SCK__tp_func_jbd2_shrink_scan_exit", i1 false, i1 false}
!80 = !{ptr @__tracepoint_jbd2_shrink_checkpoint_list, !81, !"__tracepoint_jbd2_shrink_checkpoint_list", i1 false, i1 false}
!81 = !{!"../include/trace/events/jbd2.h", i32 462, i32 1}
!82 = !{ptr @__tracepoint_ptr_jbd2_shrink_checkpoint_list, !81, !"__tracepoint_ptr_jbd2_shrink_checkpoint_list", i1 false, i1 false}
!83 = !{ptr @__SCK__tp_func_jbd2_shrink_checkpoint_list, !81, !"__SCK__tp_func_jbd2_shrink_checkpoint_list", i1 false, i1 false}
!84 = !{ptr @event_class_jbd2_checkpoint, !1, !"event_class_jbd2_checkpoint", i1 false, i1 false}
!85 = !{ptr @event_jbd2_checkpoint, !1, !"event_jbd2_checkpoint", i1 false, i1 false}
!86 = !{ptr @__event_jbd2_checkpoint, !1, !"__event_jbd2_checkpoint", i1 false, i1 false}
!87 = !{ptr @event_class_jbd2_commit, !88, !"event_class_jbd2_commit", i1 false, i1 false}
!88 = !{!"../include/trace/events/jbd2.h", i32 34, i32 1}
!89 = !{ptr @event_jbd2_start_commit, !5, !"event_jbd2_start_commit", i1 false, i1 false}
!90 = !{ptr @__event_jbd2_start_commit, !5, !"__event_jbd2_start_commit", i1 false, i1 false}
!91 = !{ptr @event_jbd2_commit_locking, !9, !"event_jbd2_commit_locking", i1 false, i1 false}
!92 = !{ptr @__event_jbd2_commit_locking, !9, !"__event_jbd2_commit_locking", i1 false, i1 false}
!93 = !{ptr @event_jbd2_commit_flushing, !13, !"event_jbd2_commit_flushing", i1 false, i1 false}
!94 = !{ptr @__event_jbd2_commit_flushing, !13, !"__event_jbd2_commit_flushing", i1 false, i1 false}
!95 = !{ptr @event_jbd2_commit_logging, !17, !"event_jbd2_commit_logging", i1 false, i1 false}
!96 = !{ptr @__event_jbd2_commit_logging, !17, !"__event_jbd2_commit_logging", i1 false, i1 false}
!97 = !{ptr @event_jbd2_drop_transaction, !21, !"event_jbd2_drop_transaction", i1 false, i1 false}
!98 = !{ptr @__event_jbd2_drop_transaction, !21, !"__event_jbd2_drop_transaction", i1 false, i1 false}
!99 = !{ptr @event_class_jbd2_end_commit, !25, !"event_class_jbd2_end_commit", i1 false, i1 false}
!100 = !{ptr @event_jbd2_end_commit, !25, !"event_jbd2_end_commit", i1 false, i1 false}
!101 = !{ptr @__event_jbd2_end_commit, !25, !"__event_jbd2_end_commit", i1 false, i1 false}
!102 = !{ptr @event_class_jbd2_submit_inode_data, !29, !"event_class_jbd2_submit_inode_data", i1 false, i1 false}
!103 = !{ptr @event_jbd2_submit_inode_data, !29, !"event_jbd2_submit_inode_data", i1 false, i1 false}
!104 = !{ptr @__event_jbd2_submit_inode_data, !29, !"__event_jbd2_submit_inode_data", i1 false, i1 false}
!105 = !{ptr @event_class_jbd2_handle_start_class, !106, !"event_class_jbd2_handle_start_class", i1 false, i1 false}
!106 = !{!"../include/trace/events/jbd2.h", i32 136, i32 1}
!107 = !{ptr @event_jbd2_handle_start, !33, !"event_jbd2_handle_start", i1 false, i1 false}
!108 = !{ptr @__event_jbd2_handle_start, !33, !"__event_jbd2_handle_start", i1 false, i1 false}
!109 = !{ptr @event_jbd2_handle_restart, !37, !"event_jbd2_handle_restart", i1 false, i1 false}
!110 = !{ptr @__event_jbd2_handle_restart, !37, !"__event_jbd2_handle_restart", i1 false, i1 false}
!111 = !{ptr @event_class_jbd2_handle_extend, !41, !"event_class_jbd2_handle_extend", i1 false, i1 false}
!112 = !{ptr @event_jbd2_handle_extend, !41, !"event_jbd2_handle_extend", i1 false, i1 false}
!113 = !{ptr @__event_jbd2_handle_extend, !41, !"__event_jbd2_handle_extend", i1 false, i1 false}
!114 = !{ptr @event_class_jbd2_handle_stats, !45, !"event_class_jbd2_handle_stats", i1 false, i1 false}
!115 = !{ptr @event_jbd2_handle_stats, !45, !"event_jbd2_handle_stats", i1 false, i1 false}
!116 = !{ptr @__event_jbd2_handle_stats, !45, !"__event_jbd2_handle_stats", i1 false, i1 false}
!117 = !{ptr @event_class_jbd2_run_stats, !49, !"event_class_jbd2_run_stats", i1 false, i1 false}
!118 = !{ptr @event_jbd2_run_stats, !49, !"event_jbd2_run_stats", i1 false, i1 false}
!119 = !{ptr @__event_jbd2_run_stats, !49, !"__event_jbd2_run_stats", i1 false, i1 false}
!120 = !{ptr @event_class_jbd2_checkpoint_stats, !53, !"event_class_jbd2_checkpoint_stats", i1 false, i1 false}
!121 = !{ptr @event_jbd2_checkpoint_stats, !53, !"event_jbd2_checkpoint_stats", i1 false, i1 false}
!122 = !{ptr @__event_jbd2_checkpoint_stats, !53, !"__event_jbd2_checkpoint_stats", i1 false, i1 false}
!123 = !{ptr @event_class_jbd2_update_log_tail, !57, !"event_class_jbd2_update_log_tail", i1 false, i1 false}
!124 = !{ptr @event_jbd2_update_log_tail, !57, !"event_jbd2_update_log_tail", i1 false, i1 false}
!125 = !{ptr @__event_jbd2_update_log_tail, !57, !"__event_jbd2_update_log_tail", i1 false, i1 false}
!126 = !{ptr @event_class_jbd2_write_superblock, !61, !"event_class_jbd2_write_superblock", i1 false, i1 false}
!127 = !{ptr @event_jbd2_write_superblock, !61, !"event_jbd2_write_superblock", i1 false, i1 false}
!128 = !{ptr @__event_jbd2_write_superblock, !61, !"__event_jbd2_write_superblock", i1 false, i1 false}
!129 = !{ptr @event_class_jbd2_lock_buffer_stall, !65, !"event_class_jbd2_lock_buffer_stall", i1 false, i1 false}
!130 = !{ptr @event_jbd2_lock_buffer_stall, !65, !"event_jbd2_lock_buffer_stall", i1 false, i1 false}
!131 = !{ptr @__event_jbd2_lock_buffer_stall, !65, !"__event_jbd2_lock_buffer_stall", i1 false, i1 false}
!132 = !{ptr @event_class_jbd2_journal_shrink, !133, !"event_class_jbd2_journal_shrink", i1 false, i1 false}
!133 = !{!"../include/trace/events/jbd2.h", i32 397, i32 1}
!134 = !{ptr @event_jbd2_shrink_count, !69, !"event_jbd2_shrink_count", i1 false, i1 false}
!135 = !{ptr @__event_jbd2_shrink_count, !69, !"__event_jbd2_shrink_count", i1 false, i1 false}
!136 = !{ptr @event_jbd2_shrink_scan_enter, !73, !"event_jbd2_shrink_scan_enter", i1 false, i1 false}
!137 = !{ptr @__event_jbd2_shrink_scan_enter, !73, !"__event_jbd2_shrink_scan_enter", i1 false, i1 false}
!138 = !{ptr @event_class_jbd2_shrink_scan_exit, !77, !"event_class_jbd2_shrink_scan_exit", i1 false, i1 false}
!139 = !{ptr @event_jbd2_shrink_scan_exit, !77, !"event_jbd2_shrink_scan_exit", i1 false, i1 false}
!140 = !{ptr @__event_jbd2_shrink_scan_exit, !77, !"__event_jbd2_shrink_scan_exit", i1 false, i1 false}
!141 = !{ptr @event_class_jbd2_shrink_checkpoint_list, !81, !"event_class_jbd2_shrink_checkpoint_list", i1 false, i1 false}
!142 = !{ptr @event_jbd2_shrink_checkpoint_list, !81, !"event_jbd2_shrink_checkpoint_list", i1 false, i1 false}
!143 = !{ptr @__event_jbd2_shrink_checkpoint_list, !81, !"__event_jbd2_shrink_checkpoint_list", i1 false, i1 false}
!144 = !{ptr @__bpf_trace_tp_map_jbd2_checkpoint, !1, !"__bpf_trace_tp_map_jbd2_checkpoint", i1 false, i1 false}
!145 = !{ptr @__bpf_trace_tp_map_jbd2_start_commit, !5, !"__bpf_trace_tp_map_jbd2_start_commit", i1 false, i1 false}
!146 = !{ptr @__bpf_trace_tp_map_jbd2_commit_locking, !9, !"__bpf_trace_tp_map_jbd2_commit_locking", i1 false, i1 false}
!147 = !{ptr @__bpf_trace_tp_map_jbd2_commit_flushing, !13, !"__bpf_trace_tp_map_jbd2_commit_flushing", i1 false, i1 false}
!148 = !{ptr @__bpf_trace_tp_map_jbd2_commit_logging, !17, !"__bpf_trace_tp_map_jbd2_commit_logging", i1 false, i1 false}
!149 = !{ptr @__bpf_trace_tp_map_jbd2_drop_transaction, !21, !"__bpf_trace_tp_map_jbd2_drop_transaction", i1 false, i1 false}
!150 = !{ptr @__bpf_trace_tp_map_jbd2_end_commit, !25, !"__bpf_trace_tp_map_jbd2_end_commit", i1 false, i1 false}
!151 = !{ptr @__bpf_trace_tp_map_jbd2_submit_inode_data, !29, !"__bpf_trace_tp_map_jbd2_submit_inode_data", i1 false, i1 false}
!152 = !{ptr @__bpf_trace_tp_map_jbd2_handle_start, !33, !"__bpf_trace_tp_map_jbd2_handle_start", i1 false, i1 false}
!153 = !{ptr @__bpf_trace_tp_map_jbd2_handle_restart, !37, !"__bpf_trace_tp_map_jbd2_handle_restart", i1 false, i1 false}
!154 = !{ptr @__bpf_trace_tp_map_jbd2_handle_extend, !41, !"__bpf_trace_tp_map_jbd2_handle_extend", i1 false, i1 false}
!155 = !{ptr @__bpf_trace_tp_map_jbd2_handle_stats, !45, !"__bpf_trace_tp_map_jbd2_handle_stats", i1 false, i1 false}
!156 = !{ptr @__bpf_trace_tp_map_jbd2_run_stats, !49, !"__bpf_trace_tp_map_jbd2_run_stats", i1 false, i1 false}
!157 = !{ptr @__bpf_trace_tp_map_jbd2_checkpoint_stats, !53, !"__bpf_trace_tp_map_jbd2_checkpoint_stats", i1 false, i1 false}
!158 = !{ptr @__bpf_trace_tp_map_jbd2_update_log_tail, !57, !"__bpf_trace_tp_map_jbd2_update_log_tail", i1 false, i1 false}
!159 = !{ptr @__bpf_trace_tp_map_jbd2_write_superblock, !61, !"__bpf_trace_tp_map_jbd2_write_superblock", i1 false, i1 false}
!160 = !{ptr @__bpf_trace_tp_map_jbd2_lock_buffer_stall, !65, !"__bpf_trace_tp_map_jbd2_lock_buffer_stall", i1 false, i1 false}
!161 = !{ptr @__bpf_trace_tp_map_jbd2_shrink_count, !69, !"__bpf_trace_tp_map_jbd2_shrink_count", i1 false, i1 false}
!162 = !{ptr @__bpf_trace_tp_map_jbd2_shrink_scan_enter, !73, !"__bpf_trace_tp_map_jbd2_shrink_scan_enter", i1 false, i1 false}
!163 = !{ptr @__bpf_trace_tp_map_jbd2_shrink_scan_exit, !77, !"__bpf_trace_tp_map_jbd2_shrink_scan_exit", i1 false, i1 false}
!164 = !{ptr @__bpf_trace_tp_map_jbd2_shrink_checkpoint_list, !81, !"__bpf_trace_tp_map_jbd2_shrink_checkpoint_list", i1 false, i1 false}
!165 = !{ptr @__ksymtab_jbd2_journal_enable_debug, !166, !"__ksymtab_jbd2_journal_enable_debug", i1 false, i1 false}
!166 = !{!"../fs/jbd2/journal.c", i32 53, i32 1}
!167 = !{ptr @__param_jbd2_debug, !168, !"__param_jbd2_debug", i1 false, i1 false}
!168 = !{!"../fs/jbd2/journal.c", i32 55, i32 1}
!169 = !{ptr @__UNIQUE_ID_jbd2_debugtype411, !168, !"__UNIQUE_ID_jbd2_debugtype411", i1 false, i1 false}
!170 = !{ptr @__UNIQUE_ID_jbd2_debug412, !171, !"__UNIQUE_ID_jbd2_debug412", i1 false, i1 false}
!171 = !{!"../fs/jbd2/journal.c", i32 56, i32 1}
!172 = !{ptr @__ksymtab_jbd2_journal_extend, !173, !"__ksymtab_jbd2_journal_extend", i1 false, i1 false}
!173 = !{!"../fs/jbd2/journal.c", i32 59, i32 1}
!174 = !{ptr @__ksymtab_jbd2_journal_stop, !175, !"__ksymtab_jbd2_journal_stop", i1 false, i1 false}
!175 = !{!"../fs/jbd2/journal.c", i32 60, i32 1}
!176 = !{ptr @__ksymtab_jbd2_journal_lock_updates, !177, !"__ksymtab_jbd2_journal_lock_updates", i1 false, i1 false}
!177 = !{!"../fs/jbd2/journal.c", i32 61, i32 1}
!178 = !{ptr @__ksymtab_jbd2_journal_unlock_updates, !179, !"__ksymtab_jbd2_journal_unlock_updates", i1 false, i1 false}
!179 = !{!"../fs/jbd2/journal.c", i32 62, i32 1}
!180 = !{ptr @__ksymtab_jbd2_journal_get_write_access, !181, !"__ksymtab_jbd2_journal_get_write_access", i1 false, i1 false}
!181 = !{!"../fs/jbd2/journal.c", i32 63, i32 1}
!182 = !{ptr @__ksymtab_jbd2_journal_get_create_access, !183, !"__ksymtab_jbd2_journal_get_create_access", i1 false, i1 false}
!183 = !{!"../fs/jbd2/journal.c", i32 64, i32 1}
!184 = !{ptr @__ksymtab_jbd2_journal_get_undo_access, !185, !"__ksymtab_jbd2_journal_get_undo_access", i1 false, i1 false}
!185 = !{!"../fs/jbd2/journal.c", i32 65, i32 1}
!186 = !{ptr @__ksymtab_jbd2_journal_set_triggers, !187, !"__ksymtab_jbd2_journal_set_triggers", i1 false, i1 false}
!187 = !{!"../fs/jbd2/journal.c", i32 66, i32 1}
!188 = !{ptr @__ksymtab_jbd2_journal_dirty_metadata, !189, !"__ksymtab_jbd2_journal_dirty_metadata", i1 false, i1 false}
!189 = !{!"../fs/jbd2/journal.c", i32 67, i32 1}
!190 = !{ptr @__ksymtab_jbd2_journal_forget, !191, !"__ksymtab_jbd2_journal_forget", i1 false, i1 false}
!191 = !{!"../fs/jbd2/journal.c", i32 68, i32 1}
!192 = !{ptr @__ksymtab_jbd2_journal_flush, !193, !"__ksymtab_jbd2_journal_flush", i1 false, i1 false}
!193 = !{!"../fs/jbd2/journal.c", i32 69, i32 1}
!194 = !{ptr @__ksymtab_jbd2_journal_revoke, !195, !"__ksymtab_jbd2_journal_revoke", i1 false, i1 false}
!195 = !{!"../fs/jbd2/journal.c", i32 70, i32 1}
!196 = !{ptr @__ksymtab_jbd2_journal_init_dev, !197, !"__ksymtab_jbd2_journal_init_dev", i1 false, i1 false}
!197 = !{!"../fs/jbd2/journal.c", i32 72, i32 1}
!198 = !{ptr @__ksymtab_jbd2_journal_init_inode, !199, !"__ksymtab_jbd2_journal_init_inode", i1 false, i1 false}
!199 = !{!"../fs/jbd2/journal.c", i32 73, i32 1}
!200 = !{ptr @__ksymtab_jbd2_journal_check_used_features, !201, !"__ksymtab_jbd2_journal_check_used_features", i1 false, i1 false}
!201 = !{!"../fs/jbd2/journal.c", i32 74, i32 1}
!202 = !{ptr @__ksymtab_jbd2_journal_check_available_features, !203, !"__ksymtab_jbd2_journal_check_available_features", i1 false, i1 false}
!203 = !{!"../fs/jbd2/journal.c", i32 75, i32 1}
!204 = !{ptr @__ksymtab_jbd2_journal_set_features, !205, !"__ksymtab_jbd2_journal_set_features", i1 false, i1 false}
!205 = !{!"../fs/jbd2/journal.c", i32 76, i32 1}
!206 = !{ptr @__ksymtab_jbd2_journal_load, !207, !"__ksymtab_jbd2_journal_load", i1 false, i1 false}
!207 = !{!"../fs/jbd2/journal.c", i32 77, i32 1}
!208 = !{ptr @__ksymtab_jbd2_journal_destroy, !209, !"__ksymtab_jbd2_journal_destroy", i1 false, i1 false}
!209 = !{!"../fs/jbd2/journal.c", i32 78, i32 1}
!210 = !{ptr @__ksymtab_jbd2_journal_abort, !211, !"__ksymtab_jbd2_journal_abort", i1 false, i1 false}
!211 = !{!"../fs/jbd2/journal.c", i32 79, i32 1}
!212 = !{ptr @__ksymtab_jbd2_journal_errno, !213, !"__ksymtab_jbd2_journal_errno", i1 false, i1 false}
!213 = !{!"../fs/jbd2/journal.c", i32 80, i32 1}
!214 = !{ptr @__ksymtab_jbd2_journal_ack_err, !215, !"__ksymtab_jbd2_journal_ack_err", i1 false, i1 false}
!215 = !{!"../fs/jbd2/journal.c", i32 81, i32 1}
!216 = !{ptr @__ksymtab_jbd2_journal_clear_err, !217, !"__ksymtab_jbd2_journal_clear_err", i1 false, i1 false}
!217 = !{!"../fs/jbd2/journal.c", i32 82, i32 1}
!218 = !{ptr @__ksymtab_jbd2_log_wait_commit, !219, !"__ksymtab_jbd2_log_wait_commit", i1 false, i1 false}
!219 = !{!"../fs/jbd2/journal.c", i32 83, i32 1}
!220 = !{ptr @__ksymtab_jbd2_log_start_commit, !221, !"__ksymtab_jbd2_log_start_commit", i1 false, i1 false}
!221 = !{!"../fs/jbd2/journal.c", i32 84, i32 1}
!222 = !{ptr @__ksymtab_jbd2_journal_start_commit, !223, !"__ksymtab_jbd2_journal_start_commit", i1 false, i1 false}
!223 = !{!"../fs/jbd2/journal.c", i32 85, i32 1}
!224 = !{ptr @__ksymtab_jbd2_journal_force_commit_nested, !225, !"__ksymtab_jbd2_journal_force_commit_nested", i1 false, i1 false}
!225 = !{!"../fs/jbd2/journal.c", i32 86, i32 1}
!226 = !{ptr @__ksymtab_jbd2_journal_wipe, !227, !"__ksymtab_jbd2_journal_wipe", i1 false, i1 false}
!227 = !{!"../fs/jbd2/journal.c", i32 87, i32 1}
!228 = !{ptr @__ksymtab_jbd2_journal_blocks_per_page, !229, !"__ksymtab_jbd2_journal_blocks_per_page", i1 false, i1 false}
!229 = !{!"../fs/jbd2/journal.c", i32 88, i32 1}
!230 = !{ptr @__ksymtab_jbd2_journal_invalidatepage, !231, !"__ksymtab_jbd2_journal_invalidatepage", i1 false, i1 false}
!231 = !{!"../fs/jbd2/journal.c", i32 89, i32 1}
!232 = !{ptr @__ksymtab_jbd2_journal_try_to_free_buffers, !233, !"__ksymtab_jbd2_journal_try_to_free_buffers", i1 false, i1 false}
!233 = !{!"../fs/jbd2/journal.c", i32 90, i32 1}
!234 = !{ptr @__ksymtab_jbd2_journal_force_commit, !235, !"__ksymtab_jbd2_journal_force_commit", i1 false, i1 false}
!235 = !{!"../fs/jbd2/journal.c", i32 91, i32 1}
!236 = !{ptr @__ksymtab_jbd2_journal_inode_ranged_write, !237, !"__ksymtab_jbd2_journal_inode_ranged_write", i1 false, i1 false}
!237 = !{!"../fs/jbd2/journal.c", i32 92, i32 1}
!238 = !{ptr @__ksymtab_jbd2_journal_inode_ranged_wait, !239, !"__ksymtab_jbd2_journal_inode_ranged_wait", i1 false, i1 false}
!239 = !{!"../fs/jbd2/journal.c", i32 93, i32 1}
!240 = !{ptr @__ksymtab_jbd2_journal_submit_inode_data_buffers, !241, !"__ksymtab_jbd2_journal_submit_inode_data_buffers", i1 false, i1 false}
!241 = !{!"../fs/jbd2/journal.c", i32 94, i32 1}
!242 = !{ptr @__ksymtab_jbd2_journal_finish_inode_data_buffers, !243, !"__ksymtab_jbd2_journal_finish_inode_data_buffers", i1 false, i1 false}
!243 = !{!"../fs/jbd2/journal.c", i32 95, i32 1}
!244 = !{ptr @__ksymtab_jbd2_journal_init_jbd_inode, !245, !"__ksymtab_jbd2_journal_init_jbd_inode", i1 false, i1 false}
!245 = !{!"../fs/jbd2/journal.c", i32 96, i32 1}
!246 = !{ptr @__ksymtab_jbd2_journal_release_jbd_inode, !247, !"__ksymtab_jbd2_journal_release_jbd_inode", i1 false, i1 false}
!247 = !{!"../fs/jbd2/journal.c", i32 97, i32 1}
!248 = !{ptr @__ksymtab_jbd2_journal_begin_ordered_truncate, !249, !"__ksymtab_jbd2_journal_begin_ordered_truncate", i1 false, i1 false}
!249 = !{!"../fs/jbd2/journal.c", i32 98, i32 1}
!250 = !{ptr @__ksymtab_jbd2_inode_cache, !251, !"__ksymtab_jbd2_inode_cache", i1 false, i1 false}
!251 = !{!"../fs/jbd2/journal.c", i32 99, i32 1}
!252 = !{ptr @.str, !253, !"<string literal>", i1 false, i1 false}
!253 = !{!"../fs/jbd2/journal.c", i32 115, i32 2}
!254 = !{ptr @.str.1, !253, !"<string literal>", i1 false, i1 false}
!255 = !{ptr @.str.2, !253, !"<string literal>", i1 false, i1 false}
!256 = !{ptr @__jbd2_debug._entry, !253, !"_entry", i1 false, i1 false}
!257 = !{ptr @__jbd2_debug._entry_ptr, !253, !"_entry_ptr", i1 false, i1 false}
!258 = !{ptr @__ksymtab___jbd2_debug, !259, !"__ksymtab___jbd2_debug", i1 false, i1 false}
!259 = !{!"../fs/jbd2/journal.c", i32 118, i32 1}
!260 = !{ptr @__func__.__jbd2_log_start_commit, !261, !"<string literal>", i1 false, i1 false}
!261 = !{!"../fs/jbd2/journal.c", i32 503, i32 3}
!262 = !{ptr @.str.3, !261, !"<string literal>", i1 false, i1 false}
!263 = distinct !{null, !264, !"__already_done", i1 false, i1 false}
!264 = !{!"../fs/jbd2/journal.c", i32 513, i32 3}
!265 = !{ptr @.str.4, !264, !"<string literal>", i1 false, i1 false}
!266 = !{ptr @__ksymtab_jbd2_trans_will_send_data_barrier, !267, !"__ksymtab_jbd2_trans_will_send_data_barrier", i1 false, i1 false}
!267 = !{!"../fs/jbd2/journal.c", i32 675, i32 1}
!268 = !{ptr @.str.5, !269, !"<string literal>", i1 false, i1 false}
!269 = !{!"../fs/jbd2/journal.c", i32 702, i32 3}
!270 = !{ptr @.str.6, !269, !"<string literal>", i1 false, i1 false}
!271 = !{ptr @jbd2_log_wait_commit._entry, !269, !"_entry", i1 false, i1 false}
!272 = !{ptr @jbd2_log_wait_commit._entry_ptr, !269, !"_entry_ptr", i1 false, i1 false}
!273 = !{ptr @.str.7, !274, !"<string literal>", i1 false, i1 false}
!274 = !{!"../fs/jbd2/journal.c", i32 708, i32 3}
!275 = !{ptr @__ksymtab_jbd2_fc_begin_commit, !276, !"__ksymtab_jbd2_fc_begin_commit", i1 false, i1 false}
!276 = !{!"../fs/jbd2/journal.c", i32 764, i32 1}
!277 = !{ptr @__ksymtab_jbd2_fc_end_commit, !278, !"__ksymtab_jbd2_fc_end_commit", i1 false, i1 false}
!278 = !{!"../fs/jbd2/journal.c", i32 790, i32 1}
!279 = !{ptr @__ksymtab_jbd2_fc_end_commit_fallback, !280, !"__ksymtab_jbd2_fc_end_commit_fallback", i1 false, i1 false}
!280 = !{!"../fs/jbd2/journal.c", i32 802, i32 1}
!281 = !{ptr @__ksymtab_jbd2_transaction_committed, !282, !"__ksymtab_jbd2_transaction_committed", i1 false, i1 false}
!282 = !{!"../fs/jbd2/journal.c", i32 819, i32 1}
!283 = !{ptr @__ksymtab_jbd2_complete_transaction, !284, !"__ksymtab_jbd2_complete_transaction", i1 false, i1 false}
!284 = !{!"../fs/jbd2/journal.c", i32 850, i32 1}
!285 = !{ptr @__ksymtab_jbd2_fc_get_buf, !286, !"__ksymtab_jbd2_fc_get_buf", i1 false, i1 false}
!286 = !{!"../fs/jbd2/journal.c", i32 909, i32 1}
!287 = !{ptr @__ksymtab_jbd2_fc_wait_bufs, !288, !"__ksymtab_jbd2_fc_wait_bufs", i1 false, i1 false}
!288 = !{!"../fs/jbd2/journal.c", i32 937, i32 1}
!289 = !{ptr @__ksymtab_jbd2_fc_release_bufs, !290, !"__ksymtab_jbd2_fc_release_bufs", i1 false, i1 false}
!290 = !{!"../fs/jbd2/journal.c", i32 956, i32 1}
!291 = !{ptr @.str.8, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../fs/jbd2/journal.c", i32 977, i32 4}
!293 = !{ptr @.str.9, !292, !"<string literal>", i1 false, i1 false}
!294 = !{ptr @jbd2_journal_bmap._entry, !292, !"_entry", i1 false, i1 false}
!295 = !{ptr @jbd2_journal_bmap._entry_ptr, !292, !"_entry_ptr", i1 false, i1 false}
!296 = !{ptr @__func__.__jbd2_update_log_tail, !297, !"<string literal>", i1 false, i1 false}
!297 = !{!"../fs/jbd2/journal.c", i32 1120, i32 2}
!298 = !{ptr @.str.10, !297, !"<string literal>", i1 false, i1 false}
!299 = !{ptr @.str.11, !300, !"<string literal>", i1 false, i1 false}
!300 = !{!"../fs/jbd2/journal.c", i32 1494, i32 3}
!301 = !{ptr @.str.12, !300, !"<string literal>", i1 false, i1 false}
!302 = !{ptr @jbd2_journal_init_inode._entry, !300, !"_entry", i1 false, i1 false}
!303 = !{ptr @jbd2_journal_init_inode._entry_ptr, !300, !"_entry_ptr", i1 false, i1 false}
!304 = !{ptr @.str.13, !305, !"<string literal>", i1 false, i1 false}
!305 = !{!"../fs/jbd2/journal.c", i32 1499, i32 2}
!306 = !{ptr @.str.14, !307, !"<string literal>", i1 false, i1 false}
!307 = !{!"../fs/jbd2/journal.c", i32 1512, i32 13}
!308 = !{ptr @__func__.jbd2_journal_update_sb_log_tail, !309, !"<string literal>", i1 false, i1 false}
!309 = !{!"../fs/jbd2/journal.c", i32 1681, i32 2}
!310 = !{ptr @.str.15, !309, !"<string literal>", i1 false, i1 false}
!311 = !{ptr @__func__.jbd2_journal_update_sb_errno, !312, !"<string literal>", i1 false, i1 false}
!312 = !{!"../fs/jbd2/journal.c", i32 1868, i32 2}
!313 = !{ptr @.str.16, !312, !"<string literal>", i1 false, i1 false}
!314 = !{ptr @__ksymtab_jbd2_journal_update_sb_errno, !315, !"__ksymtab_jbd2_journal_update_sb_errno", i1 false, i1 false}
!315 = !{!"../fs/jbd2/journal.c", i32 1873, i32 1}
!316 = !{ptr @.str.17, !317, !"<string literal>", i1 false, i1 false}
!317 = !{!"../fs/jbd2/journal.c", i32 2071, i32 4}
!318 = !{ptr @.str.18, !317, !"<string literal>", i1 false, i1 false}
!319 = !{ptr @jbd2_journal_load._entry, !317, !"_entry", i1 false, i1 false}
!320 = !{ptr @jbd2_journal_load._entry_ptr, !317, !"_entry_ptr", i1 false, i1 false}
!321 = !{ptr @.str.20, !322, !"<string literal>", i1 false, i1 false}
!322 = !{!"../fs/jbd2/journal.c", i32 2090, i32 3}
!323 = !{ptr @jbd2_journal_load._entry.19, !322, !"_entry", i1 false, i1 false}
!324 = !{ptr @jbd2_journal_load._entry_ptr.21, !322, !"_entry_ptr", i1 false, i1 false}
!325 = !{ptr @.str.23, !326, !"<string literal>", i1 false, i1 false}
!326 = !{!"../fs/jbd2/journal.c", i32 2111, i32 2}
!327 = !{ptr @jbd2_journal_load._entry.22, !326, !"_entry", i1 false, i1 false}
!328 = !{ptr @jbd2_journal_load._entry_ptr.24, !326, !"_entry_ptr", i1 false, i1 false}
!329 = !{ptr @__func__.jbd2_journal_set_features, !330, !"<string literal>", i1 false, i1 false}
!330 = !{!"../fs/jbd2/journal.c", i32 2340, i32 2}
!331 = !{ptr @.str.25, !330, !"<string literal>", i1 false, i1 false}
!332 = !{ptr @.str.26, !333, !"<string literal>", i1 false, i1 false}
!333 = !{!"../fs/jbd2/journal.c", i32 2347, i32 4}
!334 = !{ptr @jbd2_journal_set_features._entry, !333, !"_entry", i1 false, i1 false}
!335 = !{ptr @jbd2_journal_set_features._entry_ptr, !333, !"_entry_ptr", i1 false, i1 false}
!336 = !{ptr @.str.27, !337, !"<string literal>", i1 false, i1 false}
!337 = !{!"../fs/jbd2/journal.c", i32 2355, i32 49}
!338 = !{ptr @.str.29, !339, !"<string literal>", i1 false, i1 false}
!339 = !{!"../fs/jbd2/journal.c", i32 2357, i32 4}
!340 = !{ptr @jbd2_journal_set_features._entry.28, !339, !"_entry", i1 false, i1 false}
!341 = !{ptr @jbd2_journal_set_features._entry_ptr.30, !339, !"_entry_ptr", i1 false, i1 false}
!342 = !{ptr @__func__.jbd2_journal_clear_features, !343, !"<string literal>", i1 false, i1 false}
!343 = !{!"../fs/jbd2/journal.c", i32 2409, i32 2}
!344 = !{ptr @.str.31, !343, !"<string literal>", i1 false, i1 false}
!345 = !{ptr @__ksymtab_jbd2_journal_clear_features, !346, !"__ksymtab_jbd2_journal_clear_features", i1 false, i1 false}
!346 = !{!"../fs/jbd2/journal.c", i32 2420, i32 1}
!347 = !{ptr @.str.32, !348, !"<string literal>", i1 false, i1 false}
!348 = !{!"../fs/jbd2/journal.c", i32 2532, i32 2}
!349 = !{ptr @.str.33, !348, !"<string literal>", i1 false, i1 false}
!350 = !{ptr @jbd2_journal_wipe._entry, !348, !"_entry", i1 false, i1 false}
!351 = !{ptr @jbd2_journal_wipe._entry_ptr, !348, !"_entry_ptr", i1 false, i1 false}
!352 = !{ptr @.str.34, !348, !"<string literal>", i1 false, i1 false}
!353 = !{ptr @.str.35, !348, !"<string literal>", i1 false, i1 false}
!354 = !{ptr @.str.36, !355, !"<string literal>", i1 false, i1 false}
!355 = !{!"../fs/jbd2/journal.c", i32 2621, i32 2}
!356 = !{ptr @.str.37, !355, !"<string literal>", i1 false, i1 false}
!357 = !{ptr @jbd2_journal_abort._entry, !355, !"_entry", i1 false, i1 false}
!358 = !{ptr @jbd2_journal_abort._entry_ptr, !355, !"_entry_ptr", i1 false, i1 false}
!359 = !{ptr @__ksymtab_jbd2_journal_grab_journal_head, !360, !"__ksymtab_jbd2_journal_grab_journal_head", i1 false, i1 false}
!360 = !{!"../fs/jbd2/journal.c", i32 2979, i32 1}
!361 = !{ptr @__ksymtab_jbd2_journal_put_journal_head, !362, !"__ksymtab_jbd2_journal_put_journal_head", i1 false, i1 false}
!362 = !{!"../fs/jbd2/journal.c", i32 3032, i32 1}
!363 = !{ptr @.str.38, !364, !"<string literal>", i1 false, i1 false}
!364 = !{!"../fs/jbd2/journal.c", i32 3092, i32 21}
!365 = !{ptr @.str.39, !366, !"<string literal>", i1 false, i1 false}
!366 = !{!"../fs/jbd2/journal.c", i32 3191, i32 3}
!367 = !{ptr @.str.40, !366, !"<string literal>", i1 false, i1 false}
!368 = !{ptr @journal_exit._entry, !366, !"_entry", i1 false, i1 false}
!369 = !{ptr @journal_exit._entry_ptr, !366, !"_entry_ptr", i1 false, i1 false}
!370 = !{ptr @__UNIQUE_ID_file417, !371, !"__UNIQUE_ID_file417", i1 false, i1 false}
!371 = !{!"../fs/jbd2/journal.c", i32 3197, i32 1}
!372 = !{ptr @__UNIQUE_ID_license418, !371, !"__UNIQUE_ID_license418", i1 false, i1 false}
!373 = !{ptr @__initcall__kmod_jbd2__419_3198_journal_init6, !374, !"__initcall__kmod_jbd2__419_3198_journal_init6", i1 false, i1 false}
!374 = !{!"../fs/jbd2/journal.c", i32 3198, i32 1}
!375 = !{ptr @__exitcall_journal_exit, !376, !"__exitcall_journal_exit", i1 false, i1 false}
!376 = !{!"../fs/jbd2/journal.c", i32 3199, i32 1}
!377 = !{ptr @jbd2_journal_enable_debug, !378, !"jbd2_journal_enable_debug", i1 false, i1 false}
!378 = !{!"../fs/jbd2/journal.c", i32 52, i32 8}
!379 = !{ptr @proc_jbd2_stats, !380, !"proc_jbd2_stats", i1 false, i1 false}
!380 = !{!"../fs/jbd2/journal.c", i32 1261, i32 31}
!381 = !{ptr @jbd2_handle_cache, !382, !"jbd2_handle_cache", i1 false, i1 false}
!382 = !{!"../fs/jbd2/journal.c", i32 3102, i32 20}
!383 = !{ptr @jbd2_inode_cache, !384, !"jbd2_inode_cache", i1 false, i1 false}
!384 = !{!"../fs/jbd2/journal.c", i32 3102, i32 40}
!385 = !{ptr @__tpstrtab_jbd2_checkpoint, !1, !"__tpstrtab_jbd2_checkpoint", i1 false, i1 false}
!386 = !{ptr @__tpstrtab_jbd2_start_commit, !5, !"__tpstrtab_jbd2_start_commit", i1 false, i1 false}
!387 = !{ptr @__tpstrtab_jbd2_commit_locking, !9, !"__tpstrtab_jbd2_commit_locking", i1 false, i1 false}
!388 = !{ptr @__tpstrtab_jbd2_commit_flushing, !13, !"__tpstrtab_jbd2_commit_flushing", i1 false, i1 false}
!389 = !{ptr @__tpstrtab_jbd2_commit_logging, !17, !"__tpstrtab_jbd2_commit_logging", i1 false, i1 false}
!390 = !{ptr @__tpstrtab_jbd2_drop_transaction, !21, !"__tpstrtab_jbd2_drop_transaction", i1 false, i1 false}
!391 = !{ptr @__tpstrtab_jbd2_end_commit, !25, !"__tpstrtab_jbd2_end_commit", i1 false, i1 false}
!392 = !{ptr @__tpstrtab_jbd2_submit_inode_data, !29, !"__tpstrtab_jbd2_submit_inode_data", i1 false, i1 false}
!393 = !{ptr @__tpstrtab_jbd2_handle_start, !33, !"__tpstrtab_jbd2_handle_start", i1 false, i1 false}
!394 = !{ptr @__tpstrtab_jbd2_handle_restart, !37, !"__tpstrtab_jbd2_handle_restart", i1 false, i1 false}
!395 = !{ptr @__tpstrtab_jbd2_handle_extend, !41, !"__tpstrtab_jbd2_handle_extend", i1 false, i1 false}
!396 = !{ptr @__tpstrtab_jbd2_handle_stats, !45, !"__tpstrtab_jbd2_handle_stats", i1 false, i1 false}
!397 = !{ptr @__tpstrtab_jbd2_run_stats, !49, !"__tpstrtab_jbd2_run_stats", i1 false, i1 false}
!398 = !{ptr @__tpstrtab_jbd2_checkpoint_stats, !53, !"__tpstrtab_jbd2_checkpoint_stats", i1 false, i1 false}
!399 = !{ptr @__tpstrtab_jbd2_update_log_tail, !57, !"__tpstrtab_jbd2_update_log_tail", i1 false, i1 false}
!400 = !{ptr @__tpstrtab_jbd2_write_superblock, !61, !"__tpstrtab_jbd2_write_superblock", i1 false, i1 false}
!401 = !{ptr @__tpstrtab_jbd2_lock_buffer_stall, !65, !"__tpstrtab_jbd2_lock_buffer_stall", i1 false, i1 false}
!402 = !{ptr @__tpstrtab_jbd2_shrink_count, !69, !"__tpstrtab_jbd2_shrink_count", i1 false, i1 false}
!403 = !{ptr @__tpstrtab_jbd2_shrink_scan_enter, !73, !"__tpstrtab_jbd2_shrink_scan_enter", i1 false, i1 false}
!404 = !{ptr @__tpstrtab_jbd2_shrink_scan_exit, !77, !"__tpstrtab_jbd2_shrink_scan_exit", i1 false, i1 false}
!405 = !{ptr @__tpstrtab_jbd2_shrink_checkpoint_list, !81, !"__tpstrtab_jbd2_shrink_checkpoint_list", i1 false, i1 false}
!406 = !{ptr @str__jbd2__trace_system_name, !407, !"str__jbd2__trace_system_name", i1 false, i1 false}
!407 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!408 = !{ptr @.str.41, !1, !"<string literal>", i1 false, i1 false}
!409 = !{ptr @.str.42, !1, !"<string literal>", i1 false, i1 false}
!410 = !{ptr @.str.43, !1, !"<string literal>", i1 false, i1 false}
!411 = !{ptr @.str.44, !1, !"<string literal>", i1 false, i1 false}
!412 = !{ptr @trace_event_fields_jbd2_checkpoint, !1, !"trace_event_fields_jbd2_checkpoint", i1 false, i1 false}
!413 = !{ptr @trace_event_type_funcs_jbd2_checkpoint, !1, !"trace_event_type_funcs_jbd2_checkpoint", i1 false, i1 false}
!414 = !{ptr @.str.45, !1, !"<string literal>", i1 false, i1 false}
!415 = !{ptr @print_fmt_jbd2_checkpoint, !1, !"print_fmt_jbd2_checkpoint", i1 false, i1 false}
!416 = !{ptr @.str.46, !88, !"<string literal>", i1 false, i1 false}
!417 = !{ptr @.str.47, !88, !"<string literal>", i1 false, i1 false}
!418 = !{ptr @.str.48, !88, !"<string literal>", i1 false, i1 false}
!419 = !{ptr @trace_event_fields_jbd2_commit, !88, !"trace_event_fields_jbd2_commit", i1 false, i1 false}
!420 = !{ptr @trace_event_type_funcs_jbd2_commit, !88, !"trace_event_type_funcs_jbd2_commit", i1 false, i1 false}
!421 = !{ptr @.str.49, !88, !"<string literal>", i1 false, i1 false}
!422 = !{ptr @print_fmt_jbd2_commit, !88, !"print_fmt_jbd2_commit", i1 false, i1 false}
!423 = !{ptr @.str.50, !25, !"<string literal>", i1 false, i1 false}
!424 = !{ptr @trace_event_fields_jbd2_end_commit, !25, !"trace_event_fields_jbd2_end_commit", i1 false, i1 false}
!425 = !{ptr @trace_event_type_funcs_jbd2_end_commit, !25, !"trace_event_type_funcs_jbd2_end_commit", i1 false, i1 false}
!426 = !{ptr @.str.51, !25, !"<string literal>", i1 false, i1 false}
!427 = !{ptr @print_fmt_jbd2_end_commit, !25, !"print_fmt_jbd2_end_commit", i1 false, i1 false}
!428 = !{ptr @.str.52, !29, !"<string literal>", i1 false, i1 false}
!429 = !{ptr @.str.53, !29, !"<string literal>", i1 false, i1 false}
!430 = !{ptr @trace_event_fields_jbd2_submit_inode_data, !29, !"trace_event_fields_jbd2_submit_inode_data", i1 false, i1 false}
!431 = !{ptr @trace_event_type_funcs_jbd2_submit_inode_data, !29, !"trace_event_type_funcs_jbd2_submit_inode_data", i1 false, i1 false}
!432 = !{ptr @.str.54, !29, !"<string literal>", i1 false, i1 false}
!433 = !{ptr @print_fmt_jbd2_submit_inode_data, !29, !"print_fmt_jbd2_submit_inode_data", i1 false, i1 false}
!434 = !{ptr @.str.55, !106, !"<string literal>", i1 false, i1 false}
!435 = !{ptr @.str.56, !106, !"<string literal>", i1 false, i1 false}
!436 = !{ptr @.str.57, !106, !"<string literal>", i1 false, i1 false}
!437 = !{ptr @.str.58, !106, !"<string literal>", i1 false, i1 false}
!438 = !{ptr @.str.59, !106, !"<string literal>", i1 false, i1 false}
!439 = !{ptr @.str.60, !106, !"<string literal>", i1 false, i1 false}
!440 = !{ptr @trace_event_fields_jbd2_handle_start_class, !106, !"trace_event_fields_jbd2_handle_start_class", i1 false, i1 false}
!441 = !{ptr @trace_event_type_funcs_jbd2_handle_start_class, !106, !"trace_event_type_funcs_jbd2_handle_start_class", i1 false, i1 false}
!442 = !{ptr @.str.61, !106, !"<string literal>", i1 false, i1 false}
!443 = !{ptr @print_fmt_jbd2_handle_start_class, !106, !"print_fmt_jbd2_handle_start_class", i1 false, i1 false}
!444 = !{ptr @.str.62, !41, !"<string literal>", i1 false, i1 false}
!445 = !{ptr @trace_event_fields_jbd2_handle_extend, !41, !"trace_event_fields_jbd2_handle_extend", i1 false, i1 false}
!446 = !{ptr @trace_event_type_funcs_jbd2_handle_extend, !41, !"trace_event_type_funcs_jbd2_handle_extend", i1 false, i1 false}
!447 = !{ptr @.str.63, !41, !"<string literal>", i1 false, i1 false}
!448 = !{ptr @print_fmt_jbd2_handle_extend, !41, !"print_fmt_jbd2_handle_extend", i1 false, i1 false}
!449 = !{ptr @.str.64, !45, !"<string literal>", i1 false, i1 false}
!450 = !{ptr @.str.65, !45, !"<string literal>", i1 false, i1 false}
!451 = !{ptr @.str.66, !45, !"<string literal>", i1 false, i1 false}
!452 = !{ptr @trace_event_fields_jbd2_handle_stats, !45, !"trace_event_fields_jbd2_handle_stats", i1 false, i1 false}
!453 = !{ptr @trace_event_type_funcs_jbd2_handle_stats, !45, !"trace_event_type_funcs_jbd2_handle_stats", i1 false, i1 false}
!454 = !{ptr @.str.67, !45, !"<string literal>", i1 false, i1 false}
!455 = !{ptr @print_fmt_jbd2_handle_stats, !45, !"print_fmt_jbd2_handle_stats", i1 false, i1 false}
!456 = !{ptr @.str.68, !49, !"<string literal>", i1 false, i1 false}
!457 = !{ptr @.str.69, !49, !"<string literal>", i1 false, i1 false}
!458 = !{ptr @.str.70, !49, !"<string literal>", i1 false, i1 false}
!459 = !{ptr @.str.71, !49, !"<string literal>", i1 false, i1 false}
!460 = !{ptr @.str.72, !49, !"<string literal>", i1 false, i1 false}
!461 = !{ptr @.str.73, !49, !"<string literal>", i1 false, i1 false}
!462 = !{ptr @.str.74, !49, !"<string literal>", i1 false, i1 false}
!463 = !{ptr @.str.75, !49, !"<string literal>", i1 false, i1 false}
!464 = !{ptr @.str.76, !49, !"<string literal>", i1 false, i1 false}
!465 = !{ptr @.str.77, !49, !"<string literal>", i1 false, i1 false}
!466 = !{ptr @trace_event_fields_jbd2_run_stats, !49, !"trace_event_fields_jbd2_run_stats", i1 false, i1 false}
!467 = !{ptr @trace_event_type_funcs_jbd2_run_stats, !49, !"trace_event_type_funcs_jbd2_run_stats", i1 false, i1 false}
!468 = !{ptr @.str.78, !49, !"<string literal>", i1 false, i1 false}
!469 = !{ptr @print_fmt_jbd2_run_stats, !49, !"print_fmt_jbd2_run_stats", i1 false, i1 false}
!470 = !{ptr @.str.79, !53, !"<string literal>", i1 false, i1 false}
!471 = !{ptr @.str.80, !53, !"<string literal>", i1 false, i1 false}
!472 = !{ptr @.str.81, !53, !"<string literal>", i1 false, i1 false}
!473 = !{ptr @.str.82, !53, !"<string literal>", i1 false, i1 false}
!474 = !{ptr @trace_event_fields_jbd2_checkpoint_stats, !53, !"trace_event_fields_jbd2_checkpoint_stats", i1 false, i1 false}
!475 = !{ptr @trace_event_type_funcs_jbd2_checkpoint_stats, !53, !"trace_event_type_funcs_jbd2_checkpoint_stats", i1 false, i1 false}
!476 = !{ptr @.str.83, !53, !"<string literal>", i1 false, i1 false}
!477 = !{ptr @print_fmt_jbd2_checkpoint_stats, !53, !"print_fmt_jbd2_checkpoint_stats", i1 false, i1 false}
!478 = !{ptr @.str.84, !57, !"<string literal>", i1 false, i1 false}
!479 = !{ptr @.str.85, !57, !"<string literal>", i1 false, i1 false}
!480 = !{ptr @.str.86, !57, !"<string literal>", i1 false, i1 false}
!481 = !{ptr @.str.87, !57, !"<string literal>", i1 false, i1 false}
!482 = !{ptr @.str.88, !57, !"<string literal>", i1 false, i1 false}
!483 = !{ptr @trace_event_fields_jbd2_update_log_tail, !57, !"trace_event_fields_jbd2_update_log_tail", i1 false, i1 false}
!484 = !{ptr @trace_event_type_funcs_jbd2_update_log_tail, !57, !"trace_event_type_funcs_jbd2_update_log_tail", i1 false, i1 false}
!485 = !{ptr @.str.89, !57, !"<string literal>", i1 false, i1 false}
!486 = !{ptr @print_fmt_jbd2_update_log_tail, !57, !"print_fmt_jbd2_update_log_tail", i1 false, i1 false}
!487 = !{ptr @.str.90, !61, !"<string literal>", i1 false, i1 false}
!488 = !{ptr @trace_event_fields_jbd2_write_superblock, !61, !"trace_event_fields_jbd2_write_superblock", i1 false, i1 false}
!489 = !{ptr @trace_event_type_funcs_jbd2_write_superblock, !61, !"trace_event_type_funcs_jbd2_write_superblock", i1 false, i1 false}
!490 = !{ptr @.str.91, !61, !"<string literal>", i1 false, i1 false}
!491 = !{ptr @print_fmt_jbd2_write_superblock, !61, !"print_fmt_jbd2_write_superblock", i1 false, i1 false}
!492 = !{ptr @.str.92, !65, !"<string literal>", i1 false, i1 false}
!493 = !{ptr @trace_event_fields_jbd2_lock_buffer_stall, !65, !"trace_event_fields_jbd2_lock_buffer_stall", i1 false, i1 false}
!494 = !{ptr @trace_event_type_funcs_jbd2_lock_buffer_stall, !65, !"trace_event_type_funcs_jbd2_lock_buffer_stall", i1 false, i1 false}
!495 = !{ptr @.str.93, !65, !"<string literal>", i1 false, i1 false}
!496 = !{ptr @print_fmt_jbd2_lock_buffer_stall, !65, !"print_fmt_jbd2_lock_buffer_stall", i1 false, i1 false}
!497 = !{ptr @.str.94, !133, !"<string literal>", i1 false, i1 false}
!498 = !{ptr @.str.95, !133, !"<string literal>", i1 false, i1 false}
!499 = !{ptr @trace_event_fields_jbd2_journal_shrink, !133, !"trace_event_fields_jbd2_journal_shrink", i1 false, i1 false}
!500 = !{ptr @trace_event_type_funcs_jbd2_journal_shrink, !133, !"trace_event_type_funcs_jbd2_journal_shrink", i1 false, i1 false}
!501 = !{ptr @.str.96, !133, !"<string literal>", i1 false, i1 false}
!502 = !{ptr @print_fmt_jbd2_journal_shrink, !133, !"print_fmt_jbd2_journal_shrink", i1 false, i1 false}
!503 = !{ptr @.str.97, !77, !"<string literal>", i1 false, i1 false}
!504 = !{ptr @trace_event_fields_jbd2_shrink_scan_exit, !77, !"trace_event_fields_jbd2_shrink_scan_exit", i1 false, i1 false}
!505 = !{ptr @trace_event_type_funcs_jbd2_shrink_scan_exit, !77, !"trace_event_type_funcs_jbd2_shrink_scan_exit", i1 false, i1 false}
!506 = !{ptr @.str.98, !77, !"<string literal>", i1 false, i1 false}
!507 = !{ptr @print_fmt_jbd2_shrink_scan_exit, !77, !"print_fmt_jbd2_shrink_scan_exit", i1 false, i1 false}
!508 = !{ptr @.str.99, !81, !"<string literal>", i1 false, i1 false}
!509 = !{ptr @.str.100, !81, !"<string literal>", i1 false, i1 false}
!510 = !{ptr @.str.101, !81, !"<string literal>", i1 false, i1 false}
!511 = !{ptr @.str.102, !81, !"<string literal>", i1 false, i1 false}
!512 = !{ptr @trace_event_fields_jbd2_shrink_checkpoint_list, !81, !"trace_event_fields_jbd2_shrink_checkpoint_list", i1 false, i1 false}
!513 = !{ptr @trace_event_type_funcs_jbd2_shrink_checkpoint_list, !81, !"trace_event_type_funcs_jbd2_shrink_checkpoint_list", i1 false, i1 false}
!514 = !{ptr @.str.103, !81, !"<string literal>", i1 false, i1 false}
!515 = !{ptr @print_fmt_jbd2_shrink_checkpoint_list, !81, !"print_fmt_jbd2_shrink_checkpoint_list", i1 false, i1 false}
!516 = !{ptr @__param_str_jbd2_debug, !168, !"__param_str_jbd2_debug", i1 false, i1 false}
!517 = !{ptr @.str.104, !518, !"<string literal>", i1 false, i1 false}
!518 = !{!"../include/linux/buffer_head.h", i32 354, i32 2}
!519 = distinct !{null, !520, !"__already_done", i1 false, i1 false}
!520 = !{!"../include/linux/jbd2.h", i32 1734, i32 2}
!521 = !{ptr @.str.105, !520, !"<string literal>", i1 false, i1 false}
!522 = distinct !{null, !57, !"__already_done", i1 false, i1 false}
!523 = !{ptr @.str.106, !57, !"<string literal>", i1 false, i1 false}
!524 = distinct !{null, !57, !"__warned", i1 false, i1 false}
!525 = !{ptr @.str.107, !57, !"<string literal>", i1 false, i1 false}
!526 = distinct !{null, !527, !"__already_done", i1 false, i1 false}
!527 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!528 = !{ptr @.str.108, !527, !"<string literal>", i1 false, i1 false}
!529 = !{ptr @journal_init_common.jbd2_trans_commit_key, !530, !"jbd2_trans_commit_key", i1 false, i1 false}
!530 = !{!"../fs/jbd2/journal.c", i32 1347, i32 31}
!531 = !{ptr @journal_init_common.__key, !532, !"__key", i1 false, i1 false}
!532 = !{!"../fs/jbd2/journal.c", i32 1357, i32 2}
!533 = !{ptr @.str.109, !532, !"<string literal>", i1 false, i1 false}
!534 = !{ptr @journal_init_common.__key.110, !535, !"__key", i1 false, i1 false}
!535 = !{!"../fs/jbd2/journal.c", i32 1358, i32 2}
!536 = !{ptr @.str.111, !535, !"<string literal>", i1 false, i1 false}
!537 = !{ptr @journal_init_common.__key.112, !538, !"__key", i1 false, i1 false}
!538 = !{!"../fs/jbd2/journal.c", i32 1359, i32 2}
!539 = !{ptr @.str.113, !538, !"<string literal>", i1 false, i1 false}
!540 = !{ptr @journal_init_common.__key.114, !541, !"__key", i1 false, i1 false}
!541 = !{!"../fs/jbd2/journal.c", i32 1360, i32 2}
!542 = !{ptr @.str.115, !541, !"<string literal>", i1 false, i1 false}
!543 = !{ptr @journal_init_common.__key.116, !544, !"__key", i1 false, i1 false}
!544 = !{!"../fs/jbd2/journal.c", i32 1361, i32 2}
!545 = !{ptr @.str.117, !544, !"<string literal>", i1 false, i1 false}
!546 = !{ptr @journal_init_common.__key.118, !547, !"__key", i1 false, i1 false}
!547 = !{!"../fs/jbd2/journal.c", i32 1362, i32 2}
!548 = !{ptr @.str.119, !547, !"<string literal>", i1 false, i1 false}
!549 = !{ptr @journal_init_common.__key.120, !550, !"__key", i1 false, i1 false}
!550 = !{!"../fs/jbd2/journal.c", i32 1363, i32 2}
!551 = !{ptr @.str.121, !550, !"<string literal>", i1 false, i1 false}
!552 = !{ptr @journal_init_common.__key.122, !553, !"__key", i1 false, i1 false}
!553 = !{!"../fs/jbd2/journal.c", i32 1364, i32 2}
!554 = !{ptr @.str.123, !553, !"<string literal>", i1 false, i1 false}
!555 = !{ptr @journal_init_common.__key.124, !556, !"__key", i1 false, i1 false}
!556 = !{!"../fs/jbd2/journal.c", i32 1365, i32 2}
!557 = !{ptr @.str.125, !556, !"<string literal>", i1 false, i1 false}
!558 = !{ptr @journal_init_common.__key.126, !559, !"__key", i1 false, i1 false}
!559 = !{!"../fs/jbd2/journal.c", i32 1366, i32 2}
!560 = !{ptr @.str.127, !559, !"<string literal>", i1 false, i1 false}
!561 = !{ptr @journal_init_common.__key.128, !562, !"__key", i1 false, i1 false}
!562 = !{!"../fs/jbd2/journal.c", i32 1367, i32 2}
!563 = !{ptr @.str.129, !562, !"<string literal>", i1 false, i1 false}
!564 = !{ptr @journal_init_common.__key.130, !565, !"__key", i1 false, i1 false}
!565 = !{!"../fs/jbd2/journal.c", i32 1368, i32 2}
!566 = !{ptr @.str.131, !565, !"<string literal>", i1 false, i1 false}
!567 = !{ptr @journal_init_common.__key.132, !568, !"__key", i1 false, i1 false}
!568 = !{!"../fs/jbd2/journal.c", i32 1383, i32 2}
!569 = !{ptr @.str.133, !568, !"<string literal>", i1 false, i1 false}
!570 = !{ptr @.str.134, !571, !"<string literal>", i1 false, i1 false}
!571 = !{!"../fs/jbd2/journal.c", i32 1385, i32 49}
!572 = !{ptr @.str.135, !573, !"<string literal>", i1 false, i1 false}
!573 = !{!"../fs/jbd2/journal.c", i32 1405, i32 3}
!574 = !{ptr @.str.136, !573, !"<string literal>", i1 false, i1 false}
!575 = !{ptr @journal_init_common._entry, !573, !"_entry", i1 false, i1 false}
!576 = !{ptr @journal_init_common._entry_ptr, !573, !"_entry_ptr", i1 false, i1 false}
!577 = !{ptr @journal_init_common.__key.137, !578, !"__key", i1 false, i1 false}
!578 = !{!"../fs/jbd2/journal.c", i32 1418, i32 6}
!579 = distinct !{null, !73, !"__already_done", i1 false, i1 false}
!580 = distinct !{null, !73, !"__warned", i1 false, i1 false}
!581 = distinct !{null, !77, !"__already_done", i1 false, i1 false}
!582 = distinct !{null, !77, !"__warned", i1 false, i1 false}
!583 = distinct !{null, !69, !"__already_done", i1 false, i1 false}
!584 = distinct !{null, !69, !"__warned", i1 false, i1 false}
!585 = !{ptr @.str.138, !586, !"<string literal>", i1 false, i1 false}
!586 = !{!"../fs/jbd2/journal.c", i32 1267, i32 20}
!587 = !{ptr @jbd2_info_proc_ops, !588, !"jbd2_info_proc_ops", i1 false, i1 false}
!588 = !{!"../fs/jbd2/journal.c", i32 1254, i32 30}
!589 = !{ptr @jbd2_seq_info_ops, !590, !"jbd2_seq_info_ops", i1 false, i1 false}
!590 = !{!"../fs/jbd2/journal.c", i32 1206, i32 36}
!591 = !{ptr @.str.139, !592, !"<string literal>", i1 false, i1 false}
!592 = !{!"../fs/jbd2/journal.c", i32 1171, i32 18}
!593 = !{ptr @.str.140, !594, !"<string literal>", i1 false, i1 false}
!594 = !{!"../fs/jbd2/journal.c", i32 1177, i32 18}
!595 = !{ptr @.str.141, !596, !"<string literal>", i1 false, i1 false}
!596 = !{!"../fs/jbd2/journal.c", i32 1179, i32 18}
!597 = !{ptr @.str.142, !598, !"<string literal>", i1 false, i1 false}
!598 = !{!"../fs/jbd2/journal.c", i32 1183, i32 18}
!599 = !{ptr @.str.143, !600, !"<string literal>", i1 false, i1 false}
!600 = !{!"../fs/jbd2/journal.c", i32 1185, i32 18}
!601 = !{ptr @.str.144, !602, !"<string literal>", i1 false, i1 false}
!602 = !{!"../fs/jbd2/journal.c", i32 1187, i32 18}
!603 = !{ptr @.str.145, !604, !"<string literal>", i1 false, i1 false}
!604 = !{!"../fs/jbd2/journal.c", i32 1189, i32 18}
!605 = !{ptr @.str.146, !606, !"<string literal>", i1 false, i1 false}
!606 = !{!"../fs/jbd2/journal.c", i32 1191, i32 18}
!607 = !{ptr @.str.147, !608, !"<string literal>", i1 false, i1 false}
!608 = !{!"../fs/jbd2/journal.c", i32 1193, i32 18}
!609 = !{ptr @.str.148, !610, !"<string literal>", i1 false, i1 false}
!610 = !{!"../fs/jbd2/journal.c", i32 1195, i32 18}
!611 = !{ptr @.str.149, !612, !"<string literal>", i1 false, i1 false}
!612 = !{!"../fs/jbd2/journal.c", i32 1197, i32 18}
!613 = !{ptr @.str.150, !614, !"<string literal>", i1 false, i1 false}
!614 = !{!"../fs/jbd2/journal.c", i32 1629, i32 3}
!615 = !{ptr @.str.151, !614, !"<string literal>", i1 false, i1 false}
!616 = !{ptr @jbd2_write_superblock._entry, !614, !"_entry", i1 false, i1 false}
!617 = !{ptr @jbd2_write_superblock._entry_ptr, !614, !"_entry_ptr", i1 false, i1 false}
!618 = !{ptr @.str.153, !619, !"<string literal>", i1 false, i1 false}
!619 = !{!"../fs/jbd2/journal.c", i32 1647, i32 3}
!620 = !{ptr @jbd2_write_superblock._entry.152, !619, !"_entry", i1 false, i1 false}
!621 = !{ptr @jbd2_write_superblock._entry_ptr.154, !619, !"_entry_ptr", i1 false, i1 false}
!622 = distinct !{null, !61, !"__already_done", i1 false, i1 false}
!623 = distinct !{null, !61, !"__warned", i1 false, i1 false}
!624 = !{ptr @.str.155, !625, !"<string literal>", i1 false, i1 false}
!625 = !{!"../fs/jbd2/journal.c", i32 1545, i32 3}
!626 = !{ptr @.str.156, !625, !"<string literal>", i1 false, i1 false}
!627 = !{ptr @journal_reset._entry, !625, !"_entry", i1 false, i1 false}
!628 = !{ptr @journal_reset._entry_ptr, !625, !"_entry_ptr", i1 false, i1 false}
!629 = !{ptr @.str.157, !630, !"<string literal>", i1 false, i1 false}
!630 = !{!"../fs/jbd2/journal.c", i32 1578, i32 3}
!631 = !{ptr @.str.158, !632, !"<string literal>", i1 false, i1 false}
!632 = !{!"../fs/jbd2/journal.c", i32 280, i32 6}
!633 = !{ptr @kjournald2.__key, !634, !"__key", i1 false, i1 false}
!634 = !{!"../fs/jbd2/journal.c", i32 181, i32 2}
!635 = !{ptr @.str.159, !634, !"<string literal>", i1 false, i1 false}
!636 = !{ptr @__func__.kjournald2, !637, !"<string literal>", i1 false, i1 false}
!637 = !{!"../fs/jbd2/journal.c", i32 206, i32 2}
!638 = !{ptr @.str.160, !637, !"<string literal>", i1 false, i1 false}
!639 = !{ptr @.str.161, !640, !"<string literal>", i1 false, i1 false}
!640 = !{!"../fs/jbd2/journal.c", i32 210, i32 3}
!641 = !{ptr @.str.162, !642, !"<string literal>", i1 false, i1 false}
!642 = !{!"../fs/jbd2/journal.c", i32 225, i32 3}
!643 = !{ptr @.str.163, !644, !"<string literal>", i1 false, i1 false}
!644 = !{!"../fs/jbd2/journal.c", i32 255, i32 2}
!645 = !{ptr @.str.164, !646, !"<string literal>", i1 false, i1 false}
!646 = !{!"../fs/jbd2/journal.c", i32 263, i32 3}
!647 = !{ptr @.str.165, !648, !"<string literal>", i1 false, i1 false}
!648 = !{!"../fs/jbd2/journal.c", i32 271, i32 2}
!649 = !{ptr @.str.166, !650, !"<string literal>", i1 false, i1 false}
!650 = !{!"../include/linux/freezer.h", i32 57, i32 2}
!651 = !{ptr @__func__.jbd2_mark_journal_empty, !652, !"<string literal>", i1 false, i1 false}
!652 = !{!"../fs/jbd2/journal.c", i32 1722, i32 2}
!653 = !{ptr @.str.167, !652, !"<string literal>", i1 false, i1 false}
!654 = !{ptr @.str.168, !655, !"<string literal>", i1 false, i1 false}
!655 = !{!"../fs/jbd2/journal.c", i32 1907, i32 4}
!656 = !{ptr @.str.169, !655, !"<string literal>", i1 false, i1 false}
!657 = !{ptr @journal_get_superblock._entry, !655, !"_entry", i1 false, i1 false}
!658 = !{ptr @journal_get_superblock._entry_ptr, !655, !"_entry_ptr", i1 false, i1 false}
!659 = !{ptr @.str.171, !660, !"<string literal>", i1 false, i1 false}
!660 = !{!"../fs/jbd2/journal.c", i32 1922, i32 3}
!661 = !{ptr @journal_get_superblock._entry.170, !660, !"_entry", i1 false, i1 false}
!662 = !{ptr @journal_get_superblock._entry_ptr.172, !660, !"_entry_ptr", i1 false, i1 false}
!663 = !{ptr @.str.174, !664, !"<string literal>", i1 false, i1 false}
!664 = !{!"../fs/jbd2/journal.c", i32 1934, i32 3}
!665 = !{ptr @journal_get_superblock._entry.173, !664, !"_entry", i1 false, i1 false}
!666 = !{ptr @journal_get_superblock._entry_ptr.175, !664, !"_entry_ptr", i1 false, i1 false}
!667 = !{ptr @.str.177, !668, !"<string literal>", i1 false, i1 false}
!668 = !{!"../fs/jbd2/journal.c", i32 1941, i32 3}
!669 = !{ptr @journal_get_superblock._entry.176, !668, !"_entry", i1 false, i1 false}
!670 = !{ptr @journal_get_superblock._entry_ptr.178, !668, !"_entry_ptr", i1 false, i1 false}
!671 = !{ptr @.str.180, !672, !"<string literal>", i1 false, i1 false}
!672 = !{!"../fs/jbd2/journal.c", i32 1947, i32 3}
!673 = !{ptr @journal_get_superblock._entry.179, !672, !"_entry", i1 false, i1 false}
!674 = !{ptr @journal_get_superblock._entry_ptr.181, !672, !"_entry_ptr", i1 false, i1 false}
!675 = !{ptr @.str.183, !676, !"<string literal>", i1 false, i1 false}
!676 = !{!"../fs/jbd2/journal.c", i32 1956, i32 3}
!677 = !{ptr @journal_get_superblock._entry.182, !676, !"_entry", i1 false, i1 false}
!678 = !{ptr @journal_get_superblock._entry_ptr.184, !676, !"_entry_ptr", i1 false, i1 false}
!679 = !{ptr @.str.186, !680, !"<string literal>", i1 false, i1 false}
!680 = !{!"../fs/jbd2/journal.c", i32 1964, i32 3}
!681 = !{ptr @journal_get_superblock._entry.185, !680, !"_entry", i1 false, i1 false}
!682 = !{ptr @journal_get_superblock._entry_ptr.187, !680, !"_entry_ptr", i1 false, i1 false}
!683 = !{ptr @.str.189, !684, !"<string literal>", i1 false, i1 false}
!684 = !{!"../fs/jbd2/journal.c", i32 1970, i32 3}
!685 = !{ptr @journal_get_superblock._entry.188, !684, !"_entry", i1 false, i1 false}
!686 = !{ptr @journal_get_superblock._entry_ptr.190, !684, !"_entry_ptr", i1 false, i1 false}
!687 = !{ptr @journal_get_superblock._entry.191, !688, !"_entry", i1 false, i1 false}
!688 = !{!"../fs/jbd2/journal.c", i32 1978, i32 4}
!689 = !{ptr @journal_get_superblock._entry_ptr.192, !688, !"_entry_ptr", i1 false, i1 false}
!690 = !{ptr @.str.194, !691, !"<string literal>", i1 false, i1 false}
!691 = !{!"../fs/jbd2/journal.c", i32 1988, i32 4}
!692 = !{ptr @journal_get_superblock._entry.193, !691, !"_entry", i1 false, i1 false}
!693 = !{ptr @journal_get_superblock._entry_ptr.195, !691, !"_entry_ptr", i1 false, i1 false}
!694 = !{ptr @.str.196, !695, !"<string literal>", i1 false, i1 false}
!695 = !{!"../fs/jbd2/journal.c", i32 1788, i32 4}
!696 = !{ptr @.str.197, !695, !"<string literal>", i1 false, i1 false}
!697 = !{ptr @__jbd2_journal_erase._entry, !695, !"_entry", i1 false, i1 false}
!698 = !{ptr @__jbd2_journal_erase._entry_ptr, !695, !"_entry_ptr", i1 false, i1 false}
!699 = !{ptr @.str.199, !700, !"<string literal>", i1 false, i1 false}
!700 = !{!"../fs/jbd2/journal.c", i32 1840, i32 4}
!701 = !{ptr @__jbd2_journal_erase._entry.198, !700, !"_entry", i1 false, i1 false}
!702 = !{ptr @__jbd2_journal_erase._entry_ptr.200, !700, !"_entry_ptr", i1 false, i1 false}
!703 = !{ptr @.str.201, !704, !"<string literal>", i1 false, i1 false}
!704 = !{!"../fs/jbd2/journal.c", i32 2759, i32 9}
!705 = !{ptr @.str.202, !704, !"<string literal>", i1 false, i1 false}
!706 = !{ptr @jbd2_journal_create_slab.jbd2_slab_create_mutex, !704, !"jbd2_slab_create_mutex", i1 false, i1 false}
!707 = !{ptr @.str.203, !708, !"<string literal>", i1 false, i1 false}
!708 = !{!"../fs/jbd2/journal.c", i32 2782, i32 3}
!709 = !{ptr @.str.204, !708, !"<string literal>", i1 false, i1 false}
!710 = !{ptr @jbd2_journal_create_slab._entry, !708, !"_entry", i1 false, i1 false}
!711 = !{ptr @jbd2_journal_create_slab._entry_ptr, !708, !"_entry_ptr", i1 false, i1 false}
!712 = !{ptr @jbd2_slab, !713, !"jbd2_slab", i1 false, i1 false}
!713 = !{!"../fs/jbd2/journal.c", i32 2739, i32 27}
!714 = !{ptr @.str.205, !715, !"<string literal>", i1 false, i1 false}
!715 = !{!"../fs/jbd2/journal.c", i32 2742, i32 2}
!716 = !{ptr @.str.206, !717, !"<string literal>", i1 false, i1 false}
!717 = !{!"../fs/jbd2/journal.c", i32 2742, i32 13}
!718 = !{ptr @.str.207, !719, !"<string literal>", i1 false, i1 false}
!719 = !{!"../fs/jbd2/journal.c", i32 2742, i32 24}
!720 = !{ptr @.str.208, !721, !"<string literal>", i1 false, i1 false}
!721 = !{!"../fs/jbd2/journal.c", i32 2742, i32 35}
!722 = !{ptr @.str.209, !723, !"<string literal>", i1 false, i1 false}
!723 = !{!"../fs/jbd2/journal.c", i32 2743, i32 2}
!724 = !{ptr @.str.210, !725, !"<string literal>", i1 false, i1 false}
!725 = !{!"../fs/jbd2/journal.c", i32 2743, i32 14}
!726 = !{ptr @.str.211, !727, !"<string literal>", i1 false, i1 false}
!727 = !{!"../fs/jbd2/journal.c", i32 2743, i32 26}
!728 = !{ptr @.str.212, !729, !"<string literal>", i1 false, i1 false}
!729 = !{!"../fs/jbd2/journal.c", i32 2743, i32 38}
!730 = !{ptr @jbd2_slab_names, !731, !"jbd2_slab_names", i1 false, i1 false}
!731 = !{!"../fs/jbd2/journal.c", i32 2741, i32 20}
!732 = !{ptr @__func__.journal_alloc_journal_head, !733, !"<string literal>", i1 false, i1 false}
!733 = !{!"../fs/jbd2/journal.c", i32 2866, i32 3}
!734 = !{ptr @.str.213, !733, !"<string literal>", i1 false, i1 false}
!735 = !{ptr @.str.214, !736, !"<string literal>", i1 false, i1 false}
!736 = !{!"../fs/jbd2/journal.c", i32 2867, i32 3}
!737 = !{ptr @journal_alloc_journal_head._rs, !736, !"_rs", i1 false, i1 false}
!738 = !{ptr @.str.215, !736, !"<string literal>", i1 false, i1 false}
!739 = !{ptr @journal_alloc_journal_head._entry, !736, !"_entry", i1 false, i1 false}
!740 = !{ptr @journal_alloc_journal_head._entry_ptr, !736, !"_entry_ptr", i1 false, i1 false}
!741 = !{ptr @journal_alloc_journal_head.__key, !742, !"__key", i1 false, i1 false}
!742 = !{!"../fs/jbd2/journal.c", i32 2872, i32 3}
!743 = !{ptr @.str.216, !742, !"<string literal>", i1 false, i1 false}
!744 = !{ptr @jbd2_journal_head_cache, !745, !"jbd2_journal_head_cache", i1 false, i1 false}
!745 = !{!"../fs/jbd2/journal.c", i32 2828, i32 27}
!746 = !{ptr @.str.217, !747, !"<string literal>", i1 false, i1 false}
!747 = !{!"../fs/jbd2/journal.c", i32 3002, i32 3}
!748 = !{ptr @.str.218, !747, !"<string literal>", i1 false, i1 false}
!749 = !{ptr @journal_release_journal_head._entry, !747, !"_entry", i1 false, i1 false}
!750 = !{ptr @journal_release_journal_head._entry_ptr, !747, !"_entry_ptr", i1 false, i1 false}
!751 = !{ptr @.str.220, !752, !"<string literal>", i1 false, i1 false}
!752 = !{!"../fs/jbd2/journal.c", i32 3006, i32 3}
!753 = !{ptr @journal_release_journal_head._entry.219, !752, !"_entry", i1 false, i1 false}
!754 = !{ptr @journal_release_journal_head._entry_ptr.221, !752, !"_entry_ptr", i1 false, i1 false}
!755 = !{ptr @nr_journal_heads, !756, !"nr_journal_heads", i1 false, i1 false}
!756 = !{!"../fs/jbd2/journal.c", i32 2830, i32 17}
!757 = !{ptr @.str.222, !758, !"<string literal>", i1 false, i1 false}
!758 = !{!"../fs/jbd2/journal.c", i32 2836, i32 46}
!759 = !{ptr @.str.223, !760, !"<string literal>", i1 false, i1 false}
!760 = !{!"../fs/jbd2/journal.c", i32 2842, i32 3}
!761 = !{ptr @.str.224, !760, !"<string literal>", i1 false, i1 false}
!762 = !{ptr @jbd2_journal_init_journal_head_cache._entry, !760, !"_entry", i1 false, i1 false}
!763 = !{ptr @jbd2_journal_init_journal_head_cache._entry_ptr, !760, !"_entry_ptr", i1 false, i1 false}
!764 = !{ptr @.str.225, !765, !"<string literal>", i1 false, i1 false}
!765 = !{!"../fs/jbd2/journal.c", i32 3118, i32 22}
!766 = !{ptr @.str.226, !767, !"<string literal>", i1 false, i1 false}
!767 = !{!"../fs/jbd2/journal.c", i32 3120, i32 3}
!768 = !{ptr @.str.227, !767, !"<string literal>", i1 false, i1 false}
!769 = !{ptr @jbd2_journal_init_handle_cache._entry, !767, !"_entry", i1 false, i1 false}
!770 = !{ptr @jbd2_journal_init_handle_cache._entry_ptr, !767, !"_entry_ptr", i1 false, i1 false}
!771 = !{ptr @.str.228, !772, !"<string literal>", i1 false, i1 false}
!772 = !{!"../fs/jbd2/journal.c", i32 3107, i32 21}
!773 = !{ptr @.str.229, !774, !"<string literal>", i1 false, i1 false}
!774 = !{!"../fs/jbd2/journal.c", i32 3109, i32 3}
!775 = !{ptr @.str.230, !774, !"<string literal>", i1 false, i1 false}
!776 = !{ptr @jbd2_journal_init_inode_cache._entry, !774, !"_entry", i1 false, i1 false}
!777 = !{ptr @jbd2_journal_init_inode_cache._entry_ptr, !774, !"_entry_ptr", i1 false, i1 false}
!778 = !{!"sp"}
!779 = !{i32 1, !"wchar_size", i32 2}
!780 = !{i32 1, !"min_enum_size", i32 4}
!781 = !{i32 8, !"branch-target-enforcement", i32 0}
!782 = !{i32 8, !"sign-return-address", i32 0}
!783 = !{i32 8, !"sign-return-address-all", i32 0}
!784 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!785 = !{i32 7, !"uwtable", i32 1}
!786 = !{i32 7, !"frame-pointer", i32 2}
!787 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!788 = !{!"branch_weights", i32 2000, i32 1}
!789 = !{!"branch_weights", i32 1, i32 2000}
!790 = !{!"auto-init"}
!791 = !{i64 2157618586, i64 2157619069, i64 2157618623, i64 2157618679, i64 2157618713, i64 2157618737, i64 2157618778, i64 2157618799, i64 2157618827, i64 2157618861}
!792 = !{i64 2157620270, i64 2157620753, i64 2157620307, i64 2157620363, i64 2157620397, i64 2157620421, i64 2157620462, i64 2157620483, i64 2157620511, i64 2157620545}
!793 = !{i64 2157621957, i64 2157622440, i64 2157621994, i64 2157622050, i64 2157622084, i64 2157622108, i64 2157622149, i64 2157622170, i64 2157622198, i64 2157622232}
!794 = !{i64 2157623641, i64 2157624124, i64 2157623678, i64 2157623734, i64 2157623768, i64 2157623792, i64 2157623833, i64 2157623854, i64 2157623882, i64 2157623916}
!795 = !{i64 2157625400, i64 2157625883, i64 2157625437, i64 2157625493, i64 2157625527, i64 2157625551, i64 2157625592, i64 2157625613, i64 2157625641, i64 2157625675}
!796 = !{i64 2154632435, i64 2154632921, i64 2154632472, i64 2154632528, i64 2154632562, i64 2154632586, i64 2154632627, i64 2154632648, i64 2154632676, i64 2154632710}
!797 = !{i64 2154634003, i64 2154634489, i64 2154634040, i64 2154634096, i64 2154634130, i64 2154634154, i64 2154634195, i64 2154634216, i64 2154634244, i64 2154634278}
!798 = !{i64 2148438230, i64 2148438262, i64 2148438291, i64 2148438325, i64 2148438356, i64 2148438379}
!799 = !{i64 2148527335}
!800 = !{i32 0, i32 33}
!801 = !{i64 2157605482, i64 2157605965, i64 2157605519, i64 2157605575, i64 2157605609, i64 2157605633, i64 2157605674, i64 2157605695, i64 2157605723, i64 2157605757}
!802 = !{i64 2157607220, i64 2157607703, i64 2157607257, i64 2157607313, i64 2157607347, i64 2157607371, i64 2157607412, i64 2157607433, i64 2157607461, i64 2157607495}
!803 = !{i64 2157608961, i64 2157609444, i64 2157608998, i64 2157609054, i64 2157609088, i64 2157609112, i64 2157609153, i64 2157609174, i64 2157609202, i64 2157609236}
!804 = !{i64 2157627119, i64 2157627602, i64 2157627156, i64 2157627212, i64 2157627246, i64 2157627270, i64 2157627311, i64 2157627332, i64 2157627360, i64 2157627394}
!805 = !{i64 2157520595, i64 2157521077, i64 2157520632, i64 2157520688, i64 2157520722, i64 2157520746, i64 2157520787, i64 2157520808, i64 2157520836, i64 2157520870}
!806 = !{i64 2157509486, i64 2157509968, i64 2157509523, i64 2157509579, i64 2157509613, i64 2157509637, i64 2157509678, i64 2157509699, i64 2157509727, i64 2157509761}
!807 = !{i64 2153951747}
!808 = !{i64 2152496806}
!809 = !{i64 2152497013}
!810 = !{i64 2153954518}
!811 = !{i64 2157639376, i64 2157639859, i64 2157639413, i64 2157639469, i64 2157639503, i64 2157639527, i64 2157639568, i64 2157639589, i64 2157639617, i64 2157639651}
!812 = !{i64 2157636141, i64 2157636624, i64 2157636178, i64 2157636234, i64 2157636268, i64 2157636292, i64 2157636333, i64 2157636354, i64 2157636382, i64 2157636416}
!813 = !{i64 2157637793, i64 2157638276, i64 2157637830, i64 2157637886, i64 2157637920, i64 2157637944, i64 2157637985, i64 2157638006, i64 2157638034, i64 2157638068}
!814 = !{i64 2157645114, i64 2157645597, i64 2157645151, i64 2157645207, i64 2157645241, i64 2157645265, i64 2157645306, i64 2157645327, i64 2157645355, i64 2157645389}
!815 = !{i64 2157541926, i64 2157542408, i64 2157541963, i64 2157542019, i64 2157542053, i64 2157542077, i64 2157542118, i64 2157542139, i64 2157542167, i64 2157542201}
!816 = !{i64 2154059375}
!817 = !{i64 2148431837, i64 2148431863, i64 2148431892, i64 2148431926, i64 2148431957, i64 2148431980}
!818 = !{i64 2157550192, i64 2157550675, i64 2157550229, i64 2157550285, i64 2157550319, i64 2157550343, i64 2157550384, i64 2157550405, i64 2157550433, i64 2157550467}
!819 = !{i64 2157567778, i64 2157568261, i64 2157567815, i64 2157567871, i64 2157567905, i64 2157567929, i64 2157567970, i64 2157567991, i64 2157568019, i64 2157568053}
!820 = !{i64 2149042749, i64 2149042754, i64 2149042767, i64 2149042811, i64 2149042845, i64 2149042866}
!821 = !{i64 2155547567}
!822 = !{i64 2155547840}
!823 = !{i64 2149454090}
!824 = !{i64 2149455126}
!825 = !{i64 2148429372, i64 2148429398, i64 2148429427, i64 2148429461, i64 2148429492, i64 2148429515}
!826 = !{i64 2157570282, i64 2157570765, i64 2157570319, i64 2157570375, i64 2157570409, i64 2157570433, i64 2157570474, i64 2157570495, i64 2157570523, i64 2157570557}
!827 = !{i64 2157582440, i64 2157582923, i64 2157582477, i64 2157582533, i64 2157582567, i64 2157582591, i64 2157582632, i64 2157582653, i64 2157582681, i64 2157582715}
!828 = !{i64 2151939886}
!829 = !{!"branch_weights", i32 2146410443, i32 1073205}
!830 = !{i64 2151940046}
!831 = !{i64 2151940323}
!832 = !{i64 2151940165}
!833 = !{i64 2151940528}
!834 = !{i64 2157653744, i64 2157654227, i64 2157653781, i64 2157653837, i64 2157653871, i64 2157653895, i64 2157653936, i64 2157653957, i64 2157653985, i64 2157654019}
!835 = !{i64 2151941591, i64 2151942083, i64 2151941628, i64 2151941684, i64 2151941718, i64 2151941742, i64 2151941783, i64 2151941804, i64 2151941832, i64 2151941866}
!836 = !{i64 2148526222}
!837 = !{i64 2148436617, i64 2148436649, i64 2148436678, i64 2148436712, i64 2148436743, i64 2148436766}
!838 = !{i64 2151942986}
!839 = !{i64 2157670396, i64 2157670879, i64 2157670433, i64 2157670489, i64 2157670523, i64 2157670547, i64 2157670588, i64 2157670609, i64 2157670637, i64 2157670671}
!840 = !{i64 2157657314, i64 2157657797, i64 2157657351, i64 2157657407, i64 2157657441, i64 2157657465, i64 2157657506, i64 2157657527, i64 2157657555, i64 2157657589}
!841 = !{i64 2157659072, i64 2157659555, i64 2157659109, i64 2157659165, i64 2157659199, i64 2157659223, i64 2157659264, i64 2157659285, i64 2157659313, i64 2157659347}
!842 = !{i64 2157660822, i64 2157661305, i64 2157660859, i64 2157660915, i64 2157660949, i64 2157660973, i64 2157661014, i64 2157661035, i64 2157661063, i64 2157661097}
!843 = !{i64 2157662486, i64 2157662969, i64 2157662523, i64 2157662579, i64 2157662613, i64 2157662637, i64 2157662678, i64 2157662699, i64 2157662727, i64 2157662761}
!844 = !{i64 2157664140, i64 2157664623, i64 2157664177, i64 2157664233, i64 2157664267, i64 2157664291, i64 2157664332, i64 2157664353, i64 2157664381, i64 2157664415}
!845 = !{i64 2157665798, i64 2157666281, i64 2157665835, i64 2157665891, i64 2157665925, i64 2157665949, i64 2157665990, i64 2157666011, i64 2157666039, i64 2157666073}
!846 = !{i64 2155620682}
!847 = !{i64 2155620941}
!848 = !{i64 2155642951}
!849 = !{i64 2155643230}
!850 = !{i64 2155603197}
!851 = !{i64 2155603446}
!852 = !{i64 790252, i64 790279, i64 790301, i64 790329}
!853 = !{i64 790660, i64 790687, i64 790720, i64 790741, i64 790768, i64 790794}
!854 = !{i64 2155568802}
!855 = !{i64 2155569041}
!856 = !{i64 2157647030, i64 2157647513, i64 2157647067, i64 2157647123, i64 2157647157, i64 2157647181, i64 2157647222, i64 2157647243, i64 2157647271, i64 2157647305}
!857 = !{i64 2157678552, i64 2157679035, i64 2157678589, i64 2157678645, i64 2157678679, i64 2157678703, i64 2157678744, i64 2157678765, i64 2157678793, i64 2157678827}
!858 = !{i64 2157674963, i64 2157675446, i64 2157675000, i64 2157675056, i64 2157675090, i64 2157675114, i64 2157675155, i64 2157675176, i64 2157675204, i64 2157675238}
