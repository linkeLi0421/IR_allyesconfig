; ModuleID = '/llk/IR_all_yes/fs/namei.c_pt.bc'
source_filename = "../fs/namei.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+generic_permission\22, \22a\22\09"
module asm "\09.weak\09__crc_generic_permission\09\09\09\09"
module asm "\09.long\09__crc_generic_permission\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_generic_permission:\09\09\09\09\09"
module asm "\09.asciz \09\22generic_permission\22\09\09\09\09\09"
module asm "__kstrtabns_generic_permission:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+inode_permission\22, \22a\22\09"
module asm "\09.weak\09__crc_inode_permission\09\09\09\09"
module asm "\09.long\09__crc_inode_permission\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_inode_permission:\09\09\09\09\09"
module asm "\09.asciz \09\22inode_permission\22\09\09\09\09\09"
module asm "__kstrtabns_inode_permission:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+path_get\22, \22a\22\09"
module asm "\09.weak\09__crc_path_get\09\09\09\09"
module asm "\09.long\09__crc_path_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_path_get:\09\09\09\09\09"
module asm "\09.asciz \09\22path_get\22\09\09\09\09\09"
module asm "__kstrtabns_path_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+path_put\22, \22a\22\09"
module asm "\09.weak\09__crc_path_put\09\09\09\09"
module asm "\09.long\09__crc_path_put\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_path_put:\09\09\09\09\09"
module asm "\09.asciz \09\22path_put\22\09\09\09\09\09"
module asm "__kstrtabns_path_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+follow_up\22, \22a\22\09"
module asm "\09.weak\09__crc_follow_up\09\09\09\09"
module asm "\09.long\09__crc_follow_up\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_follow_up:\09\09\09\09\09"
module asm "\09.asciz \09\22follow_up\22\09\09\09\09\09"
module asm "__kstrtabns_follow_up:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+follow_down_one\22, \22a\22\09"
module asm "\09.weak\09__crc_follow_down_one\09\09\09\09"
module asm "\09.long\09__crc_follow_down_one\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_follow_down_one:\09\09\09\09\09"
module asm "\09.asciz \09\22follow_down_one\22\09\09\09\09\09"
module asm "__kstrtabns_follow_down_one:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+follow_down\22, \22a\22\09"
module asm "\09.weak\09__crc_follow_down\09\09\09\09"
module asm "\09.long\09__crc_follow_down\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_follow_down:\09\09\09\09\09"
module asm "\09.asciz \09\22follow_down\22\09\09\09\09\09"
module asm "__kstrtabns_follow_down:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+full_name_hash\22, \22a\22\09"
module asm "\09.weak\09__crc_full_name_hash\09\09\09\09"
module asm "\09.long\09__crc_full_name_hash\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_full_name_hash:\09\09\09\09\09"
module asm "\09.asciz \09\22full_name_hash\22\09\09\09\09\09"
module asm "__kstrtabns_full_name_hash:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+hashlen_string\22, \22a\22\09"
module asm "\09.weak\09__crc_hashlen_string\09\09\09\09"
module asm "\09.long\09__crc_hashlen_string\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_hashlen_string:\09\09\09\09\09"
module asm "\09.asciz \09\22hashlen_string\22\09\09\09\09\09"
module asm "__kstrtabns_hashlen_string:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+kern_path\22, \22a\22\09"
module asm "\09.weak\09__crc_kern_path\09\09\09\09"
module asm "\09.long\09__crc_kern_path\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_kern_path:\09\09\09\09\09"
module asm "\09.asciz \09\22kern_path\22\09\09\09\09\09"
module asm "__kstrtabns_kern_path:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vfs_path_lookup\22, \22a\22\09"
module asm "\09.weak\09__crc_vfs_path_lookup\09\09\09\09"
module asm "\09.long\09__crc_vfs_path_lookup\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vfs_path_lookup:\09\09\09\09\09"
module asm "\09.asciz \09\22vfs_path_lookup\22\09\09\09\09\09"
module asm "__kstrtabns_vfs_path_lookup:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+try_lookup_one_len\22, \22a\22\09"
module asm "\09.weak\09__crc_try_lookup_one_len\09\09\09\09"
module asm "\09.long\09__crc_try_lookup_one_len\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_try_lookup_one_len:\09\09\09\09\09"
module asm "\09.asciz \09\22try_lookup_one_len\22\09\09\09\09\09"
module asm "__kstrtabns_try_lookup_one_len:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+lookup_one_len\22, \22a\22\09"
module asm "\09.weak\09__crc_lookup_one_len\09\09\09\09"
module asm "\09.long\09__crc_lookup_one_len\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lookup_one_len:\09\09\09\09\09"
module asm "\09.asciz \09\22lookup_one_len\22\09\09\09\09\09"
module asm "__kstrtabns_lookup_one_len:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+lookup_one\22, \22a\22\09"
module asm "\09.weak\09__crc_lookup_one\09\09\09\09"
module asm "\09.long\09__crc_lookup_one\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lookup_one:\09\09\09\09\09"
module asm "\09.asciz \09\22lookup_one\22\09\09\09\09\09"
module asm "__kstrtabns_lookup_one:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+lookup_one_len_unlocked\22, \22a\22\09"
module asm "\09.weak\09__crc_lookup_one_len_unlocked\09\09\09\09"
module asm "\09.long\09__crc_lookup_one_len_unlocked\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lookup_one_len_unlocked:\09\09\09\09\09"
module asm "\09.asciz \09\22lookup_one_len_unlocked\22\09\09\09\09\09"
module asm "__kstrtabns_lookup_one_len_unlocked:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+lookup_positive_unlocked\22, \22a\22\09"
module asm "\09.weak\09__crc_lookup_positive_unlocked\09\09\09\09"
module asm "\09.long\09__crc_lookup_positive_unlocked\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lookup_positive_unlocked:\09\09\09\09\09"
module asm "\09.asciz \09\22lookup_positive_unlocked\22\09\09\09\09\09"
module asm "__kstrtabns_lookup_positive_unlocked:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+user_path_at_empty\22, \22a\22\09"
module asm "\09.weak\09__crc_user_path_at_empty\09\09\09\09"
module asm "\09.long\09__crc_user_path_at_empty\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_user_path_at_empty:\09\09\09\09\09"
module asm "\09.asciz \09\22user_path_at_empty\22\09\09\09\09\09"
module asm "__kstrtabns_user_path_at_empty:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__check_sticky\22, \22a\22\09"
module asm "\09.weak\09__crc___check_sticky\09\09\09\09"
module asm "\09.long\09__crc___check_sticky\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___check_sticky:\09\09\09\09\09"
module asm "\09.asciz \09\22__check_sticky\22\09\09\09\09\09"
module asm "__kstrtabns___check_sticky:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+lock_rename\22, \22a\22\09"
module asm "\09.weak\09__crc_lock_rename\09\09\09\09"
module asm "\09.long\09__crc_lock_rename\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lock_rename:\09\09\09\09\09"
module asm "\09.asciz \09\22lock_rename\22\09\09\09\09\09"
module asm "__kstrtabns_lock_rename:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+unlock_rename\22, \22a\22\09"
module asm "\09.weak\09__crc_unlock_rename\09\09\09\09"
module asm "\09.long\09__crc_unlock_rename\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_unlock_rename:\09\09\09\09\09"
module asm "\09.asciz \09\22unlock_rename\22\09\09\09\09\09"
module asm "__kstrtabns_unlock_rename:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vfs_create\22, \22a\22\09"
module asm "\09.weak\09__crc_vfs_create\09\09\09\09"
module asm "\09.long\09__crc_vfs_create\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vfs_create:\09\09\09\09\09"
module asm "\09.asciz \09\22vfs_create\22\09\09\09\09\09"
module asm "__kstrtabns_vfs_create:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vfs_mkobj\22, \22a\22\09"
module asm "\09.weak\09__crc_vfs_mkobj\09\09\09\09"
module asm "\09.long\09__crc_vfs_mkobj\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vfs_mkobj:\09\09\09\09\09"
module asm "\09.asciz \09\22vfs_mkobj\22\09\09\09\09\09"
module asm "__kstrtabns_vfs_mkobj:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vfs_tmpfile\22, \22a\22\09"
module asm "\09.weak\09__crc_vfs_tmpfile\09\09\09\09"
module asm "\09.long\09__crc_vfs_tmpfile\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vfs_tmpfile:\09\09\09\09\09"
module asm "\09.asciz \09\22vfs_tmpfile\22\09\09\09\09\09"
module asm "__kstrtabns_vfs_tmpfile:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+kern_path_create\22, \22a\22\09"
module asm "\09.weak\09__crc_kern_path_create\09\09\09\09"
module asm "\09.long\09__crc_kern_path_create\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_kern_path_create:\09\09\09\09\09"
module asm "\09.asciz \09\22kern_path_create\22\09\09\09\09\09"
module asm "__kstrtabns_kern_path_create:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+done_path_create\22, \22a\22\09"
module asm "\09.weak\09__crc_done_path_create\09\09\09\09"
module asm "\09.long\09__crc_done_path_create\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_done_path_create:\09\09\09\09\09"
module asm "\09.asciz \09\22done_path_create\22\09\09\09\09\09"
module asm "__kstrtabns_done_path_create:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+user_path_create\22, \22a\22\09"
module asm "\09.weak\09__crc_user_path_create\09\09\09\09"
module asm "\09.long\09__crc_user_path_create\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_user_path_create:\09\09\09\09\09"
module asm "\09.asciz \09\22user_path_create\22\09\09\09\09\09"
module asm "__kstrtabns_user_path_create:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vfs_mknod\22, \22a\22\09"
module asm "\09.weak\09__crc_vfs_mknod\09\09\09\09"
module asm "\09.long\09__crc_vfs_mknod\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vfs_mknod:\09\09\09\09\09"
module asm "\09.asciz \09\22vfs_mknod\22\09\09\09\09\09"
module asm "__kstrtabns_vfs_mknod:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vfs_mkdir\22, \22a\22\09"
module asm "\09.weak\09__crc_vfs_mkdir\09\09\09\09"
module asm "\09.long\09__crc_vfs_mkdir\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vfs_mkdir:\09\09\09\09\09"
module asm "\09.asciz \09\22vfs_mkdir\22\09\09\09\09\09"
module asm "__kstrtabns_vfs_mkdir:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vfs_rmdir\22, \22a\22\09"
module asm "\09.weak\09__crc_vfs_rmdir\09\09\09\09"
module asm "\09.long\09__crc_vfs_rmdir\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vfs_rmdir:\09\09\09\09\09"
module asm "\09.asciz \09\22vfs_rmdir\22\09\09\09\09\09"
module asm "__kstrtabns_vfs_rmdir:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vfs_unlink\22, \22a\22\09"
module asm "\09.weak\09__crc_vfs_unlink\09\09\09\09"
module asm "\09.long\09__crc_vfs_unlink\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vfs_unlink:\09\09\09\09\09"
module asm "\09.asciz \09\22vfs_unlink\22\09\09\09\09\09"
module asm "__kstrtabns_vfs_unlink:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vfs_symlink\22, \22a\22\09"
module asm "\09.weak\09__crc_vfs_symlink\09\09\09\09"
module asm "\09.long\09__crc_vfs_symlink\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vfs_symlink:\09\09\09\09\09"
module asm "\09.asciz \09\22vfs_symlink\22\09\09\09\09\09"
module asm "__kstrtabns_vfs_symlink:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vfs_link\22, \22a\22\09"
module asm "\09.weak\09__crc_vfs_link\09\09\09\09"
module asm "\09.long\09__crc_vfs_link\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vfs_link:\09\09\09\09\09"
module asm "\09.asciz \09\22vfs_link\22\09\09\09\09\09"
module asm "__kstrtabns_vfs_link:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vfs_rename\22, \22a\22\09"
module asm "\09.weak\09__crc_vfs_rename\09\09\09\09"
module asm "\09.long\09__crc_vfs_rename\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vfs_rename:\09\09\09\09\09"
module asm "\09.asciz \09\22vfs_rename\22\09\09\09\09\09"
module asm "__kstrtabns_vfs_rename:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vfs_readlink\22, \22a\22\09"
module asm "\09.weak\09__crc_vfs_readlink\09\09\09\09"
module asm "\09.long\09__crc_vfs_readlink\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vfs_readlink:\09\09\09\09\09"
module asm "\09.asciz \09\22vfs_readlink\22\09\09\09\09\09"
module asm "__kstrtabns_vfs_readlink:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vfs_get_link\22, \22a\22\09"
module asm "\09.weak\09__crc_vfs_get_link\09\09\09\09"
module asm "\09.long\09__crc_vfs_get_link\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vfs_get_link:\09\09\09\09\09"
module asm "\09.asciz \09\22vfs_get_link\22\09\09\09\09\09"
module asm "__kstrtabns_vfs_get_link:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+page_get_link\22, \22a\22\09"
module asm "\09.weak\09__crc_page_get_link\09\09\09\09"
module asm "\09.long\09__crc_page_get_link\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_page_get_link:\09\09\09\09\09"
module asm "\09.asciz \09\22page_get_link\22\09\09\09\09\09"
module asm "__kstrtabns_page_get_link:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+page_put_link\22, \22a\22\09"
module asm "\09.weak\09__crc_page_put_link\09\09\09\09"
module asm "\09.long\09__crc_page_put_link\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_page_put_link:\09\09\09\09\09"
module asm "\09.asciz \09\22page_put_link\22\09\09\09\09\09"
module asm "__kstrtabns_page_put_link:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+page_readlink\22, \22a\22\09"
module asm "\09.weak\09__crc_page_readlink\09\09\09\09"
module asm "\09.long\09__crc_page_readlink\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_page_readlink:\09\09\09\09\09"
module asm "\09.asciz \09\22page_readlink\22\09\09\09\09\09"
module asm "__kstrtabns_page_readlink:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__page_symlink\22, \22a\22\09"
module asm "\09.weak\09__crc___page_symlink\09\09\09\09"
module asm "\09.long\09__crc___page_symlink\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___page_symlink:\09\09\09\09\09"
module asm "\09.asciz \09\22__page_symlink\22\09\09\09\09\09"
module asm "__kstrtabns___page_symlink:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+page_symlink\22, \22a\22\09"
module asm "\09.weak\09__crc_page_symlink\09\09\09\09"
module asm "\09.long\09__crc_page_symlink\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_page_symlink:\09\09\09\09\09"
module asm "\09.asciz \09\22page_symlink\22\09\09\09\09\09"
module asm "__kstrtabns_page_symlink:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+page_symlink_inode_operations\22, \22a\22\09"
module asm "\09.weak\09__crc_page_symlink_inode_operations\09\09\09\09"
module asm "\09.long\09__crc_page_symlink_inode_operations\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_page_symlink_inode_operations:\09\09\09\09\09"
module asm "\09.asciz \09\22page_symlink_inode_operations\22\09\09\09\09\09"
module asm "__kstrtabns_page_symlink_inode_operations:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.spinlock = type { %union.anon.12 }
%union.anon.12 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i32, i8, %struct.list_head, ptr, %struct.rw_semaphore, ptr, %struct.work_struct, %struct.ctl_table_set, ptr, ptr, [16 x i32] }
%struct.uid_gid_map = type { i32, %union.anon }
%union.anon = type { [5 x %struct.uid_gid_extent] }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.atomic_t = type { i32 }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.10, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.10 = type { %struct.anon.11 }
%struct.anon.11 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.anon.16 = type { i32, i32 }
%struct.qstr = type { %union.anon.15, ptr }
%union.anon.15 = type { i64 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.syscall_metadata = type { ptr, i32, i32, ptr, ptr, %struct.list_head, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.107, %struct.trace_event, ptr, ptr, %union.anon.109, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.107 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.109 = type { ptr }
%struct.inode_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [36 x i8] }
%struct.ctl_table = type { ptr, ptr, i32, i16, ptr, ptr, ptr, ptr, ptr }
%struct.lock_class_key = type { %union.anon.2 }
%union.anon.2 = type { %struct.hlist_node }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t, %union.anon.108 }
%union.anon.108 = type { i32 }
%struct.filename = type { ptr, ptr, i32, ptr, [0 x i8] }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.125, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.126, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.127, ptr, %struct.address_space, %struct.list_head, %union.anon.128, i32, i32, ptr, ptr, ptr, ptr }
%union.anon.125 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%union.anon.126 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.atomic64_t = type { i64 }
%union.anon.127 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%union.anon.128 = type { ptr }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, i16, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [24 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [24 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.list_lru = type { ptr, %struct.list_head, i32, i8 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.113, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.38 }
%struct.llist_node = type { ptr }
%union.anon.38 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%struct.cpumask = type { [1 x i32] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.40 }
%union.anon.40 = type { %struct.anon.41 }
%struct.anon.41 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.tlbflush_unmap_batch = type {}
%union.anon.113 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.cred = type { %struct.atomic_t, %struct.atomic_t, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %union.anon.45 }
%struct.kernel_cap_struct = type { [2 x i32] }
%union.anon.45 = type { %struct.callback_head }
%struct.path = type { ptr, ptr }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, ptr, %struct.qstr, ptr, [36 x i8], %struct.lockref, ptr, ptr, i32, ptr, %union.anon.123, %struct.list_head, %struct.list_head, %union.anon.124 }
%struct.hlist_bl_node = type { ptr, ptr }
%struct.lockref = type { %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { %struct.spinlock, i32 }
%union.anon.123 = type { %struct.list_head }
%union.anon.124 = type { %struct.hlist_node }
%struct.nameidata = type { %struct.path, %struct.qstr, %struct.path, ptr, i32, i32, i32, i32, i32, i32, i32, i32, ptr, [2 x %struct.saved], ptr, ptr, i32, i32, %struct.kuid_t, i16 }
%struct.saved = type { %struct.path, %struct.delayed_call, ptr, i32 }
%struct.delayed_call = type { ptr, ptr }
%struct.mount = type { %struct.hlist_node, ptr, ptr, %struct.vfsmount, %union.anon.129, ptr, %struct.list_head, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, ptr, ptr, ptr, %union.anon.130, %struct.list_head, ptr, i32, i32, i32, i32, %struct.hlist_head, %struct.hlist_head }
%struct.vfsmount = type { ptr, ptr, i32, ptr }
%union.anon.129 = type { %struct.callback_head }
%union.anon.130 = type { %struct.hlist_node }
%struct.dentry_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [76 x i8] }
%struct.open_flags = type { i32, i16, i32, i32, i32 }
%struct.file = type { %union.anon.32, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, ptr, i32, i32 }
%union.anon.32 = type { %struct.callback_head }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.name_snapshot = type { %struct.qstr, [36 x i8] }
%struct.renamedata = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.file_system_type = type { ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.page = type { i32, %union.anon.19, %union.anon.119, %struct.atomic_t, i32 }
%union.anon.19 = type { %struct.anon.20 }
%struct.anon.20 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.119 = type { %struct.atomic_t }
%struct.posix_acl = type { %struct.refcount_struct, %struct.callback_head, i32, [0 x %struct.posix_acl_entry] }
%struct.posix_acl_entry = type { i16, i16, %union.anon.14 }
%union.anon.14 = type { %struct.kuid_t }
%struct.fs_struct = type { i32, %struct.spinlock, %struct.seqcount_spinlock, i32, i32, %struct.path, %struct.path }

@names_cachep = external dso_local local_unnamed_addr global ptr, align 4
@__kstrtab_generic_permission = external dso_local constant [0 x i8], align 1
@__kstrtabns_generic_permission = external dso_local constant [0 x i8], align 1
@__ksymtab_generic_permission = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @generic_permission to i32), ptr @__kstrtab_generic_permission, ptr @__kstrtabns_generic_permission }, section "___ksymtab+generic_permission", align 4
@__kstrtab_inode_permission = external dso_local constant [0 x i8], align 1
@__kstrtabns_inode_permission = external dso_local constant [0 x i8], align 1
@__ksymtab_inode_permission = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @inode_permission to i32), ptr @__kstrtab_inode_permission, ptr @__kstrtabns_inode_permission }, section "___ksymtab+inode_permission", align 4
@__kstrtab_path_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_path_get = external dso_local constant [0 x i8], align 1
@__ksymtab_path_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @path_get to i32), ptr @__kstrtab_path_get, ptr @__kstrtabns_path_get }, section "___ksymtab+path_get", align 4
@__kstrtab_path_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_path_put = external dso_local constant [0 x i8], align 1
@__ksymtab_path_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @path_put to i32), ptr @__kstrtab_path_put, ptr @__kstrtabns_path_put }, section "___ksymtab+path_put", align 4
@__initcall__kmod_namei__310_1074_init_fs_namei_sysctls5 = internal global ptr @init_fs_namei_sysctls, section ".initcall5.init", align 4
@sysctl_protected_hardlinks = internal global i32 0, section ".data..read_mostly", align 4
@.str = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"linkat\00", [25 x i8] zeroinitializer }, align 32
@mount_lock = external dso_local global %struct.seqlock_t, align 4
@__kstrtab_follow_up = external dso_local constant [0 x i8], align 1
@__kstrtabns_follow_up = external dso_local constant [0 x i8], align 1
@__ksymtab_follow_up = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @follow_up to i32), ptr @__kstrtab_follow_up, ptr @__kstrtabns_follow_up }, section "___ksymtab+follow_up", align 4
@__kstrtab_follow_down_one = external dso_local constant [0 x i8], align 1
@__kstrtabns_follow_down_one = external dso_local constant [0 x i8], align 1
@__ksymtab_follow_down_one = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @follow_down_one to i32), ptr @__kstrtab_follow_down_one, ptr @__kstrtabns_follow_down_one }, section "___ksymtab+follow_down_one", align 4
@__kstrtab_follow_down = external dso_local constant [0 x i8], align 1
@__kstrtabns_follow_down = external dso_local constant [0 x i8], align 1
@__ksymtab_follow_down = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @follow_down to i32), ptr @__kstrtab_follow_down, ptr @__kstrtabns_follow_down }, section "___ksymtab+follow_down", align 4
@__kstrtab_full_name_hash = external dso_local constant [0 x i8], align 1
@__kstrtabns_full_name_hash = external dso_local constant [0 x i8], align 1
@__ksymtab_full_name_hash = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @full_name_hash to i32), ptr @__kstrtab_full_name_hash, ptr @__kstrtabns_full_name_hash }, section "___ksymtab+full_name_hash", align 4
@__kstrtab_hashlen_string = external dso_local constant [0 x i8], align 1
@__kstrtabns_hashlen_string = external dso_local constant [0 x i8], align 1
@__ksymtab_hashlen_string = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @hashlen_string to i32), ptr @__kstrtab_hashlen_string, ptr @__kstrtabns_hashlen_string }, section "___ksymtab+hashlen_string", align 4
@__kstrtab_kern_path = external dso_local constant [0 x i8], align 1
@__kstrtabns_kern_path = external dso_local constant [0 x i8], align 1
@__ksymtab_kern_path = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @kern_path to i32), ptr @__kstrtab_kern_path, ptr @__kstrtabns_kern_path }, section "___ksymtab+kern_path", align 4
@__kstrtab_vfs_path_lookup = external dso_local constant [0 x i8], align 1
@__kstrtabns_vfs_path_lookup = external dso_local constant [0 x i8], align 1
@__ksymtab_vfs_path_lookup = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vfs_path_lookup to i32), ptr @__kstrtab_vfs_path_lookup, ptr @__kstrtabns_vfs_path_lookup }, section "___ksymtab+vfs_path_lookup", align 4
@try_lookup_one_len.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.1 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"fs/namei.c\00", [21 x i8] zeroinitializer }, align 32
@init_user_ns = external dso_local global %struct.user_namespace, align 4
@__kstrtab_try_lookup_one_len = external dso_local constant [0 x i8], align 1
@__kstrtabns_try_lookup_one_len = external dso_local constant [0 x i8], align 1
@__ksymtab_try_lookup_one_len = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @try_lookup_one_len to i32), ptr @__kstrtab_try_lookup_one_len, ptr @__kstrtabns_try_lookup_one_len }, section "___ksymtab+try_lookup_one_len", align 4
@lookup_one_len.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_lookup_one_len = external dso_local constant [0 x i8], align 1
@__kstrtabns_lookup_one_len = external dso_local constant [0 x i8], align 1
@__ksymtab_lookup_one_len = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lookup_one_len to i32), ptr @__kstrtab_lookup_one_len, ptr @__kstrtabns_lookup_one_len }, section "___ksymtab+lookup_one_len", align 4
@lookup_one.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_lookup_one = external dso_local constant [0 x i8], align 1
@__kstrtabns_lookup_one = external dso_local constant [0 x i8], align 1
@__ksymtab_lookup_one = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lookup_one to i32), ptr @__kstrtab_lookup_one, ptr @__kstrtabns_lookup_one }, section "___ksymtab+lookup_one", align 4
@__kstrtab_lookup_one_len_unlocked = external dso_local constant [0 x i8], align 1
@__kstrtabns_lookup_one_len_unlocked = external dso_local constant [0 x i8], align 1
@__ksymtab_lookup_one_len_unlocked = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lookup_one_len_unlocked to i32), ptr @__kstrtab_lookup_one_len_unlocked, ptr @__kstrtabns_lookup_one_len_unlocked }, section "___ksymtab+lookup_one_len_unlocked", align 4
@__kstrtab_lookup_positive_unlocked = external dso_local constant [0 x i8], align 1
@__kstrtabns_lookup_positive_unlocked = external dso_local constant [0 x i8], align 1
@__ksymtab_lookup_positive_unlocked = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lookup_positive_unlocked to i32), ptr @__kstrtab_lookup_positive_unlocked, ptr @__kstrtabns_lookup_positive_unlocked }, section "___ksymtab+lookup_positive_unlocked", align 4
@.str.2 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"pts\00", [28 x i8] zeroinitializer }, align 32
@__const.path_pts.this = private unnamed_addr constant { { %struct.anon.16 }, ptr, [4 x i8] } { { %struct.anon.16 } { %struct.anon.16 { i32 3, i32 0 } }, ptr @.str.2, [4 x i8] c"\FF\FF\FF\FF" }, align 8
@__kstrtab_user_path_at_empty = external dso_local constant [0 x i8], align 1
@__kstrtabns_user_path_at_empty = external dso_local constant [0 x i8], align 1
@__ksymtab_user_path_at_empty = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @user_path_at_empty to i32), ptr @__kstrtab_user_path_at_empty, ptr @__kstrtabns_user_path_at_empty }, section "___ksymtab+user_path_at_empty", align 4
@__kstrtab___check_sticky = external dso_local constant [0 x i8], align 1
@__kstrtabns___check_sticky = external dso_local constant [0 x i8], align 1
@__ksymtab___check_sticky = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__check_sticky to i32), ptr @__kstrtab___check_sticky, ptr @__kstrtabns___check_sticky }, section "___ksymtab+__check_sticky", align 4
@__kstrtab_lock_rename = external dso_local constant [0 x i8], align 1
@__kstrtabns_lock_rename = external dso_local constant [0 x i8], align 1
@__ksymtab_lock_rename = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lock_rename to i32), ptr @__kstrtab_lock_rename, ptr @__kstrtabns_lock_rename }, section "___ksymtab+lock_rename", align 4
@__kstrtab_unlock_rename = external dso_local constant [0 x i8], align 1
@__kstrtabns_unlock_rename = external dso_local constant [0 x i8], align 1
@__ksymtab_unlock_rename = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @unlock_rename to i32), ptr @__kstrtab_unlock_rename, ptr @__kstrtabns_unlock_rename }, section "___ksymtab+unlock_rename", align 4
@__kstrtab_vfs_create = external dso_local constant [0 x i8], align 1
@__kstrtabns_vfs_create = external dso_local constant [0 x i8], align 1
@__ksymtab_vfs_create = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vfs_create to i32), ptr @__kstrtab_vfs_create, ptr @__kstrtabns_vfs_create }, section "___ksymtab+vfs_create", align 4
@__kstrtab_vfs_mkobj = external dso_local constant [0 x i8], align 1
@__kstrtabns_vfs_mkobj = external dso_local constant [0 x i8], align 1
@__ksymtab_vfs_mkobj = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vfs_mkobj to i32), ptr @__kstrtab_vfs_mkobj, ptr @__kstrtabns_vfs_mkobj }, section "___ksymtab+vfs_mkobj", align 4
@slash_name = external dso_local constant %struct.qstr, align 8
@__kstrtab_vfs_tmpfile = external dso_local constant [0 x i8], align 1
@__kstrtabns_vfs_tmpfile = external dso_local constant [0 x i8], align 1
@__ksymtab_vfs_tmpfile = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vfs_tmpfile to i32), ptr @__kstrtab_vfs_tmpfile, ptr @__kstrtabns_vfs_tmpfile }, section "___ksymtab+vfs_tmpfile", align 4
@__kstrtab_kern_path_create = external dso_local constant [0 x i8], align 1
@__kstrtabns_kern_path_create = external dso_local constant [0 x i8], align 1
@__ksymtab_kern_path_create = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @kern_path_create to i32), ptr @__kstrtab_kern_path_create, ptr @__kstrtabns_kern_path_create }, section "___ksymtab+kern_path_create", align 4
@__kstrtab_done_path_create = external dso_local constant [0 x i8], align 1
@__kstrtabns_done_path_create = external dso_local constant [0 x i8], align 1
@__ksymtab_done_path_create = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @done_path_create to i32), ptr @__kstrtab_done_path_create, ptr @__kstrtabns_done_path_create }, section "___ksymtab+done_path_create", align 4
@__kstrtab_user_path_create = external dso_local constant [0 x i8], align 1
@__kstrtabns_user_path_create = external dso_local constant [0 x i8], align 1
@__ksymtab_user_path_create = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @user_path_create to i32), ptr @__kstrtab_user_path_create, ptr @__kstrtabns_user_path_create }, section "___ksymtab+user_path_create", align 4
@__kstrtab_vfs_mknod = external dso_local constant [0 x i8], align 1
@__kstrtabns_vfs_mknod = external dso_local constant [0 x i8], align 1
@__ksymtab_vfs_mknod = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vfs_mknod to i32), ptr @__kstrtab_vfs_mknod, ptr @__kstrtabns_vfs_mknod }, section "___ksymtab+vfs_mknod", align 4
@event_class_syscall_enter = external dso_local global %struct.trace_event_class, align 4
@.str.3 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sys_enter_mknodat\00", [46 x i8] zeroinitializer }, align 32
@enter_syscall_print_funcs = external dso_local global %struct.trace_event_functions, align 4
@__syscall_meta__mknodat = internal global %struct.syscall_metadata { ptr @.str.5, i32 -1, i32 4, ptr @types__mknodat, ptr @args__mknodat, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__mknodat, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__mknodat, i64 20) }, ptr @event_enter__mknodat, ptr @event_exit__mknodat }, align 4
@event_enter__mknodat = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.107 { ptr @.str.3 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__mknodat, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__mknodat = internal global ptr @event_enter__mknodat, section "_ftrace_events", align 4
@event_class_syscall_exit = external dso_local global %struct.trace_event_class, align 4
@.str.4 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"sys_exit_mknodat\00", [47 x i8] zeroinitializer }, align 32
@exit_syscall_print_funcs = external dso_local global %struct.trace_event_functions, align 4
@event_exit__mknodat = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.107 { ptr @.str.4 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__mknodat, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__mknodat = internal global ptr @event_exit__mknodat, section "_ftrace_events", align 4
@.str.5 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"sys_mknodat\00", [20 x i8] zeroinitializer }, align 32
@types__mknodat = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61], [16 x i8] zeroinitializer }, align 32
@args__mknodat = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65], [16 x i8] zeroinitializer }, align 32
@__p_syscall_meta__mknodat = internal global ptr @__syscall_meta__mknodat, section "__syscalls_metadata", align 4
@.str.6 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sys_enter_mknod\00", [16 x i8] zeroinitializer }, align 32
@__syscall_meta__mknod = internal global %struct.syscall_metadata { ptr @.str.8, i32 -1, i32 3, ptr @types__mknod, ptr @args__mknod, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__mknod, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__mknod, i64 20) }, ptr @event_enter__mknod, ptr @event_exit__mknod }, align 4
@event_enter__mknod = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.107 { ptr @.str.6 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__mknod, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__mknod = internal global ptr @event_enter__mknod, section "_ftrace_events", align 4
@.str.7 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sys_exit_mknod\00", [17 x i8] zeroinitializer }, align 32
@event_exit__mknod = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.107 { ptr @.str.7 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__mknod, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__mknod = internal global ptr @event_exit__mknod, section "_ftrace_events", align 4
@.str.8 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"sys_mknod\00", [22 x i8] zeroinitializer }, align 32
@types__mknod = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.59, ptr @.str.60, ptr @.str.66], [20 x i8] zeroinitializer }, align 32
@args__mknod = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.63, ptr @.str.64, ptr @.str.65], [20 x i8] zeroinitializer }, align 32
@__p_syscall_meta__mknod = internal global ptr @__syscall_meta__mknod, section "__syscalls_metadata", align 4
@__kstrtab_vfs_mkdir = external dso_local constant [0 x i8], align 1
@__kstrtabns_vfs_mkdir = external dso_local constant [0 x i8], align 1
@__ksymtab_vfs_mkdir = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vfs_mkdir to i32), ptr @__kstrtab_vfs_mkdir, ptr @__kstrtabns_vfs_mkdir }, section "___ksymtab+vfs_mkdir", align 4
@.str.9 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sys_enter_mkdirat\00", [46 x i8] zeroinitializer }, align 32
@__syscall_meta__mkdirat = internal global %struct.syscall_metadata { ptr @.str.11, i32 -1, i32 3, ptr @types__mkdirat, ptr @args__mkdirat, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__mkdirat, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__mkdirat, i64 20) }, ptr @event_enter__mkdirat, ptr @event_exit__mkdirat }, align 4
@event_enter__mkdirat = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.107 { ptr @.str.9 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__mkdirat, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__mkdirat = internal global ptr @event_enter__mkdirat, section "_ftrace_events", align 4
@.str.10 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"sys_exit_mkdirat\00", [47 x i8] zeroinitializer }, align 32
@event_exit__mkdirat = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.107 { ptr @.str.10 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__mkdirat, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__mkdirat = internal global ptr @event_exit__mkdirat, section "_ftrace_events", align 4
@.str.11 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"sys_mkdirat\00", [20 x i8] zeroinitializer }, align 32
@types__mkdirat = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.58, ptr @.str.59, ptr @.str.60], [20 x i8] zeroinitializer }, align 32
@args__mkdirat = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.62, ptr @.str.67, ptr @.str.64], [20 x i8] zeroinitializer }, align 32
@__p_syscall_meta__mkdirat = internal global ptr @__syscall_meta__mkdirat, section "__syscalls_metadata", align 4
@.str.12 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sys_enter_mkdir\00", [16 x i8] zeroinitializer }, align 32
@__syscall_meta__mkdir = internal global %struct.syscall_metadata { ptr @.str.14, i32 -1, i32 2, ptr @types__mkdir, ptr @args__mkdir, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__mkdir, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__mkdir, i64 20) }, ptr @event_enter__mkdir, ptr @event_exit__mkdir }, align 4
@event_enter__mkdir = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.107 { ptr @.str.12 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__mkdir, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__mkdir = internal global ptr @event_enter__mkdir, section "_ftrace_events", align 4
@.str.13 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sys_exit_mkdir\00", [17 x i8] zeroinitializer }, align 32
@event_exit__mkdir = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.107 { ptr @.str.13 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__mkdir, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__mkdir = internal global ptr @event_exit__mkdir, section "_ftrace_events", align 4
@.str.14 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"sys_mkdir\00", [22 x i8] zeroinitializer }, align 32
@types__mkdir = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.59, ptr @.str.60], [24 x i8] zeroinitializer }, align 32
@args__mkdir = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.67, ptr @.str.64], [24 x i8] zeroinitializer }, align 32
@__p_syscall_meta__mkdir = internal global ptr @__syscall_meta__mkdir, section "__syscalls_metadata", align 4
@__kstrtab_vfs_rmdir = external dso_local constant [0 x i8], align 1
@__kstrtabns_vfs_rmdir = external dso_local constant [0 x i8], align 1
@__ksymtab_vfs_rmdir = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vfs_rmdir to i32), ptr @__kstrtab_vfs_rmdir, ptr @__kstrtabns_vfs_rmdir }, section "___ksymtab+vfs_rmdir", align 4
@.str.15 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sys_enter_rmdir\00", [16 x i8] zeroinitializer }, align 32
@__syscall_meta__rmdir = internal global %struct.syscall_metadata { ptr @.str.17, i32 -1, i32 1, ptr @types__rmdir, ptr @args__rmdir, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__rmdir, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__rmdir, i64 20) }, ptr @event_enter__rmdir, ptr @event_exit__rmdir }, align 4
@event_enter__rmdir = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.107 { ptr @.str.15 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__rmdir, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__rmdir = internal global ptr @event_enter__rmdir, section "_ftrace_events", align 4
@.str.16 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sys_exit_rmdir\00", [17 x i8] zeroinitializer }, align 32
@event_exit__rmdir = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.107 { ptr @.str.16 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__rmdir, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__rmdir = internal global ptr @event_exit__rmdir, section "_ftrace_events", align 4
@.str.17 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"sys_rmdir\00", [22 x i8] zeroinitializer }, align 32
@types__rmdir = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.59], [28 x i8] zeroinitializer }, align 32
@args__rmdir = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.67], [28 x i8] zeroinitializer }, align 32
@__p_syscall_meta__rmdir = internal global ptr @__syscall_meta__rmdir, section "__syscalls_metadata", align 4
@__kstrtab_vfs_unlink = external dso_local constant [0 x i8], align 1
@__kstrtabns_vfs_unlink = external dso_local constant [0 x i8], align 1
@__ksymtab_vfs_unlink = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vfs_unlink to i32), ptr @__kstrtab_vfs_unlink, ptr @__kstrtabns_vfs_unlink }, section "___ksymtab+vfs_unlink", align 4
@.str.18 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"sys_enter_unlinkat\00", [45 x i8] zeroinitializer }, align 32
@__syscall_meta__unlinkat = internal global %struct.syscall_metadata { ptr @.str.20, i32 -1, i32 3, ptr @types__unlinkat, ptr @args__unlinkat, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__unlinkat, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__unlinkat, i64 20) }, ptr @event_enter__unlinkat, ptr @event_exit__unlinkat }, align 4
@event_enter__unlinkat = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.107 { ptr @.str.18 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__unlinkat, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__unlinkat = internal global ptr @event_enter__unlinkat, section "_ftrace_events", align 4
@.str.19 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sys_exit_unlinkat\00", [46 x i8] zeroinitializer }, align 32
@event_exit__unlinkat = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.107 { ptr @.str.19 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__unlinkat, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__unlinkat = internal global ptr @event_exit__unlinkat, section "_ftrace_events", align 4
@.str.20 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"sys_unlinkat\00", [19 x i8] zeroinitializer }, align 32
@types__unlinkat = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.58, ptr @.str.59, ptr @.str.58], [20 x i8] zeroinitializer }, align 32
@args__unlinkat = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.62, ptr @.str.67, ptr @.str.69], [20 x i8] zeroinitializer }, align 32
@__p_syscall_meta__unlinkat = internal global ptr @__syscall_meta__unlinkat, section "__syscalls_metadata", align 4
@.str.21 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"sys_enter_unlink\00", [47 x i8] zeroinitializer }, align 32
@__syscall_meta__unlink = internal global %struct.syscall_metadata { ptr @.str.23, i32 -1, i32 1, ptr @types__unlink, ptr @args__unlink, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__unlink, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__unlink, i64 20) }, ptr @event_enter__unlink, ptr @event_exit__unlink }, align 4
@event_enter__unlink = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.107 { ptr @.str.21 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__unlink, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__unlink = internal global ptr @event_enter__unlink, section "_ftrace_events", align 4
@.str.22 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sys_exit_unlink\00", [16 x i8] zeroinitializer }, align 32
@event_exit__unlink = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.107 { ptr @.str.22 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__unlink, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__unlink = internal global ptr @event_exit__unlink, section "_ftrace_events", align 4
@.str.23 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"sys_unlink\00", [21 x i8] zeroinitializer }, align 32
@types__unlink = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.59], [28 x i8] zeroinitializer }, align 32
@args__unlink = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.67], [28 x i8] zeroinitializer }, align 32
@__p_syscall_meta__unlink = internal global ptr @__syscall_meta__unlink, section "__syscalls_metadata", align 4
@__kstrtab_vfs_symlink = external dso_local constant [0 x i8], align 1
@__kstrtabns_vfs_symlink = external dso_local constant [0 x i8], align 1
@__ksymtab_vfs_symlink = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vfs_symlink to i32), ptr @__kstrtab_vfs_symlink, ptr @__kstrtabns_vfs_symlink }, section "___ksymtab+vfs_symlink", align 4
@.str.24 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"sys_enter_symlinkat\00", [44 x i8] zeroinitializer }, align 32
@__syscall_meta__symlinkat = internal global %struct.syscall_metadata { ptr @.str.26, i32 -1, i32 3, ptr @types__symlinkat, ptr @args__symlinkat, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__symlinkat, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__symlinkat, i64 20) }, ptr @event_enter__symlinkat, ptr @event_exit__symlinkat }, align 4
@event_enter__symlinkat = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.107 { ptr @.str.24 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__symlinkat, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__symlinkat = internal global ptr @event_enter__symlinkat, section "_ftrace_events", align 4
@.str.25 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"sys_exit_symlinkat\00", [45 x i8] zeroinitializer }, align 32
@event_exit__symlinkat = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.107 { ptr @.str.25 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__symlinkat, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__symlinkat = internal global ptr @event_exit__symlinkat, section "_ftrace_events", align 4
@.str.26 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"sys_symlinkat\00", [18 x i8] zeroinitializer }, align 32
@types__symlinkat = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.59, ptr @.str.58, ptr @.str.59], [20 x i8] zeroinitializer }, align 32
@args__symlinkat = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.70, ptr @.str.71, ptr @.str.72], [20 x i8] zeroinitializer }, align 32
@__p_syscall_meta__symlinkat = internal global ptr @__syscall_meta__symlinkat, section "__syscalls_metadata", align 4
@.str.27 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sys_enter_symlink\00", [46 x i8] zeroinitializer }, align 32
@__syscall_meta__symlink = internal global %struct.syscall_metadata { ptr @.str.29, i32 -1, i32 2, ptr @types__symlink, ptr @args__symlink, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__symlink, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__symlink, i64 20) }, ptr @event_enter__symlink, ptr @event_exit__symlink }, align 4
@event_enter__symlink = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.107 { ptr @.str.27 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__symlink, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__symlink = internal global ptr @event_enter__symlink, section "_ftrace_events", align 4
@.str.28 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"sys_exit_symlink\00", [47 x i8] zeroinitializer }, align 32
@event_exit__symlink = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.107 { ptr @.str.28 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__symlink, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__symlink = internal global ptr @event_exit__symlink, section "_ftrace_events", align 4
@.str.29 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"sys_symlink\00", [20 x i8] zeroinitializer }, align 32
@types__symlink = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.59, ptr @.str.59], [24 x i8] zeroinitializer }, align 32
@args__symlink = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.70, ptr @.str.72], [24 x i8] zeroinitializer }, align 32
@__p_syscall_meta__symlink = internal global ptr @__syscall_meta__symlink, section "__syscalls_metadata", align 4
@__kstrtab_vfs_link = external dso_local constant [0 x i8], align 1
@__kstrtabns_vfs_link = external dso_local constant [0 x i8], align 1
@__ksymtab_vfs_link = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vfs_link to i32), ptr @__kstrtab_vfs_link, ptr @__kstrtabns_vfs_link }, section "___ksymtab+vfs_link", align 4
@.str.30 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"sys_enter_linkat\00", [47 x i8] zeroinitializer }, align 32
@__syscall_meta__linkat = internal global %struct.syscall_metadata { ptr @.str.32, i32 -1, i32 5, ptr @types__linkat, ptr @args__linkat, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__linkat, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__linkat, i64 20) }, ptr @event_enter__linkat, ptr @event_exit__linkat }, align 4
@event_enter__linkat = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.107 { ptr @.str.30 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__linkat, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__linkat = internal global ptr @event_enter__linkat, section "_ftrace_events", align 4
@.str.31 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sys_exit_linkat\00", [16 x i8] zeroinitializer }, align 32
@event_exit__linkat = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.107 { ptr @.str.31 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__linkat, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__linkat = internal global ptr @event_exit__linkat, section "_ftrace_events", align 4
@.str.32 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"sys_linkat\00", [21 x i8] zeroinitializer }, align 32
@types__linkat = internal global { [5 x ptr], [44 x i8] } { [5 x ptr] [ptr @.str.58, ptr @.str.59, ptr @.str.58, ptr @.str.59, ptr @.str.58], [44 x i8] zeroinitializer }, align 32
@args__linkat = internal global { [5 x ptr], [44 x i8] } { [5 x ptr] [ptr @.str.73, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.74], [44 x i8] zeroinitializer }, align 32
@__p_syscall_meta__linkat = internal global ptr @__syscall_meta__linkat, section "__syscalls_metadata", align 4
@.str.33 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sys_enter_link\00", [17 x i8] zeroinitializer }, align 32
@__syscall_meta__link = internal global %struct.syscall_metadata { ptr @.str.35, i32 -1, i32 2, ptr @types__link, ptr @args__link, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__link, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__link, i64 20) }, ptr @event_enter__link, ptr @event_exit__link }, align 4
@event_enter__link = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.107 { ptr @.str.33 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__link, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__link = internal global ptr @event_enter__link, section "_ftrace_events", align 4
@.str.34 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"sys_exit_link\00", [18 x i8] zeroinitializer }, align 32
@event_exit__link = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.107 { ptr @.str.34 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__link, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__link = internal global ptr @event_exit__link, section "_ftrace_events", align 4
@.str.35 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"sys_link\00", [23 x i8] zeroinitializer }, align 32
@types__link = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.59, ptr @.str.59], [24 x i8] zeroinitializer }, align 32
@args__link = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.70, ptr @.str.72], [24 x i8] zeroinitializer }, align 32
@__p_syscall_meta__link = internal global ptr @__syscall_meta__link, section "__syscalls_metadata", align 4
@__kstrtab_vfs_rename = external dso_local constant [0 x i8], align 1
@__kstrtabns_vfs_rename = external dso_local constant [0 x i8], align 1
@__ksymtab_vfs_rename = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vfs_rename to i32), ptr @__kstrtab_vfs_rename, ptr @__kstrtabns_vfs_rename }, section "___ksymtab+vfs_rename", align 4
@.str.36 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"sys_enter_renameat2\00", [44 x i8] zeroinitializer }, align 32
@__syscall_meta__renameat2 = internal global %struct.syscall_metadata { ptr @.str.38, i32 -1, i32 5, ptr @types__renameat2, ptr @args__renameat2, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__renameat2, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__renameat2, i64 20) }, ptr @event_enter__renameat2, ptr @event_exit__renameat2 }, align 4
@event_enter__renameat2 = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.107 { ptr @.str.36 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__renameat2, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__renameat2 = internal global ptr @event_enter__renameat2, section "_ftrace_events", align 4
@.str.37 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"sys_exit_renameat2\00", [45 x i8] zeroinitializer }, align 32
@event_exit__renameat2 = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.107 { ptr @.str.37 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__renameat2, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__renameat2 = internal global ptr @event_exit__renameat2, section "_ftrace_events", align 4
@.str.38 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"sys_renameat2\00", [18 x i8] zeroinitializer }, align 32
@types__renameat2 = internal global { [5 x ptr], [44 x i8] } { [5 x ptr] [ptr @.str.58, ptr @.str.59, ptr @.str.58, ptr @.str.59, ptr @.str.61], [44 x i8] zeroinitializer }, align 32
@args__renameat2 = internal global { [5 x ptr], [44 x i8] } { [5 x ptr] [ptr @.str.73, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.74], [44 x i8] zeroinitializer }, align 32
@__p_syscall_meta__renameat2 = internal global ptr @__syscall_meta__renameat2, section "__syscalls_metadata", align 4
@.str.39 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"sys_enter_renameat\00", [45 x i8] zeroinitializer }, align 32
@__syscall_meta__renameat = internal global %struct.syscall_metadata { ptr @.str.41, i32 -1, i32 4, ptr @types__renameat, ptr @args__renameat, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__renameat, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__renameat, i64 20) }, ptr @event_enter__renameat, ptr @event_exit__renameat }, align 4
@event_enter__renameat = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.107 { ptr @.str.39 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__renameat, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__renameat = internal global ptr @event_enter__renameat, section "_ftrace_events", align 4
@.str.40 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sys_exit_renameat\00", [46 x i8] zeroinitializer }, align 32
@event_exit__renameat = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.107 { ptr @.str.40 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__renameat, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__renameat = internal global ptr @event_exit__renameat, section "_ftrace_events", align 4
@.str.41 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"sys_renameat\00", [19 x i8] zeroinitializer }, align 32
@types__renameat = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.58, ptr @.str.59, ptr @.str.58, ptr @.str.59], [16 x i8] zeroinitializer }, align 32
@args__renameat = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.73, ptr @.str.70, ptr @.str.71, ptr @.str.72], [16 x i8] zeroinitializer }, align 32
@__p_syscall_meta__renameat = internal global ptr @__syscall_meta__renameat, section "__syscalls_metadata", align 4
@.str.42 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"sys_enter_rename\00", [47 x i8] zeroinitializer }, align 32
@__syscall_meta__rename = internal global %struct.syscall_metadata { ptr @.str.44, i32 -1, i32 2, ptr @types__rename, ptr @args__rename, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__rename, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__rename, i64 20) }, ptr @event_enter__rename, ptr @event_exit__rename }, align 4
@event_enter__rename = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.107 { ptr @.str.42 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__rename, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__rename = internal global ptr @event_enter__rename, section "_ftrace_events", align 4
@.str.43 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sys_exit_rename\00", [16 x i8] zeroinitializer }, align 32
@event_exit__rename = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.107 { ptr @.str.43 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.109 zeroinitializer, ptr @__syscall_meta__rename, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__rename = internal global ptr @event_exit__rename, section "_ftrace_events", align 4
@.str.44 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"sys_rename\00", [21 x i8] zeroinitializer }, align 32
@types__rename = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.59, ptr @.str.59], [24 x i8] zeroinitializer }, align 32
@args__rename = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.70, ptr @.str.72], [24 x i8] zeroinitializer }, align 32
@__p_syscall_meta__rename = internal global ptr @__syscall_meta__rename, section "__syscalls_metadata", align 4
@__kstrtab_vfs_readlink = external dso_local constant [0 x i8], align 1
@__kstrtabns_vfs_readlink = external dso_local constant [0 x i8], align 1
@__ksymtab_vfs_readlink = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vfs_readlink to i32), ptr @__kstrtab_vfs_readlink, ptr @__kstrtabns_vfs_readlink }, section "___ksymtab+vfs_readlink", align 4
@__kstrtab_vfs_get_link = external dso_local constant [0 x i8], align 1
@__kstrtabns_vfs_get_link = external dso_local constant [0 x i8], align 1
@__ksymtab_vfs_get_link = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vfs_get_link to i32), ptr @__kstrtab_vfs_get_link, ptr @__kstrtabns_vfs_get_link }, section "___ksymtab+vfs_get_link", align 4
@__kstrtab_page_get_link = external dso_local constant [0 x i8], align 1
@__kstrtabns_page_get_link = external dso_local constant [0 x i8], align 1
@__ksymtab_page_get_link = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @page_get_link to i32), ptr @__kstrtab_page_get_link, ptr @__kstrtabns_page_get_link }, section "___ksymtab+page_get_link", align 4
@__kstrtab_page_put_link = external dso_local constant [0 x i8], align 1
@__kstrtabns_page_put_link = external dso_local constant [0 x i8], align 1
@__ksymtab_page_put_link = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @page_put_link to i32), ptr @__kstrtab_page_put_link, ptr @__kstrtabns_page_put_link }, section "___ksymtab+page_put_link", align 4
@__kstrtab_page_readlink = external dso_local constant [0 x i8], align 1
@__kstrtabns_page_readlink = external dso_local constant [0 x i8], align 1
@__ksymtab_page_readlink = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @page_readlink to i32), ptr @__kstrtab_page_readlink, ptr @__kstrtabns_page_readlink }, section "___ksymtab+page_readlink", align 4
@__kstrtab___page_symlink = external dso_local constant [0 x i8], align 1
@__kstrtabns___page_symlink = external dso_local constant [0 x i8], align 1
@__ksymtab___page_symlink = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__page_symlink to i32), ptr @__kstrtab___page_symlink, ptr @__kstrtabns___page_symlink }, section "___ksymtab+__page_symlink", align 4
@__kstrtab_page_symlink = external dso_local constant [0 x i8], align 1
@__kstrtabns_page_symlink = external dso_local constant [0 x i8], align 1
@__ksymtab_page_symlink = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @page_symlink to i32), ptr @__kstrtab_page_symlink, ptr @__kstrtabns_page_symlink }, section "___ksymtab+page_symlink", align 4
@page_symlink_inode_operations = dso_local constant %struct.inode_operations { ptr null, ptr @page_get_link, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, [36 x i8] undef }, align 128
@__kstrtab_page_symlink_inode_operations = external dso_local constant [0 x i8], align 1
@__kstrtabns_page_symlink_inode_operations = external dso_local constant [0 x i8], align 1
@__ksymtab_page_symlink_inode_operations = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @page_symlink_inode_operations to i32), ptr @__kstrtab_page_symlink_inode_operations, ptr @__kstrtabns_page_symlink_inode_operations }, section "___ksymtab+page_symlink_inode_operations", align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@.str.45 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"fs\00", [29 x i8] zeroinitializer }, align 32
@namei_sysctls = internal global { [5 x %struct.ctl_table], [44 x i8] } { [5 x %struct.ctl_table] [%struct.ctl_table { ptr @.str.47, ptr @sysctl_protected_symlinks, i32 4, i16 384, ptr null, ptr @proc_dointvec_minmax, ptr null, ptr getelementptr (i8, ptr @sysctl_vals, i64 4), ptr getelementptr (i8, ptr @sysctl_vals, i64 8) }, %struct.ctl_table { ptr @.str.48, ptr @sysctl_protected_hardlinks, i32 4, i16 384, ptr null, ptr @proc_dointvec_minmax, ptr null, ptr getelementptr (i8, ptr @sysctl_vals, i64 4), ptr getelementptr (i8, ptr @sysctl_vals, i64 8) }, %struct.ctl_table { ptr @.str.49, ptr @sysctl_protected_fifos, i32 4, i16 384, ptr null, ptr @proc_dointvec_minmax, ptr null, ptr getelementptr (i8, ptr @sysctl_vals, i64 4), ptr getelementptr (i8, ptr @sysctl_vals, i64 12) }, %struct.ctl_table { ptr @.str.50, ptr @sysctl_protected_regular, i32 4, i16 384, ptr null, ptr @proc_dointvec_minmax, ptr null, ptr getelementptr (i8, ptr @sysctl_vals, i64 4), ptr getelementptr (i8, ptr @sysctl_vals, i64 12) }, %struct.ctl_table zeroinitializer], [44 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"namei_sysctls\00", [18 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"protected_symlinks\00", [45 x i8] zeroinitializer }, align 32
@sysctl_protected_symlinks = internal global i32 0, section ".data..read_mostly", align 4
@sysctl_vals = external dso_local constant [0 x i32], align 4
@.str.48 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"protected_hardlinks\00", [44 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"protected_fifos\00", [16 x i8] zeroinitializer }, align 32
@sysctl_protected_fifos = internal global i32 0, section ".data..read_mostly", align 4
@.str.50 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"protected_regular\00", [46 x i8] zeroinitializer }, align 32
@sysctl_protected_regular = internal global i32 0, section ".data..read_mostly", align 4
@rename_lock = external dso_local global %struct.seqlock_t, align 4
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.51 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.53 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"follow_link\00", [20 x i8] zeroinitializer }, align 32
@__lookup_slow.__key = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.55 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"&wq\00", [28 x i8] zeroinitializer }, align 32
@lookup_open.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.56 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"sticky_create_fifo\00", [45 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"sticky_create_regular\00", [42 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"const char *\00", [19 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"umode_t\00", [24 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"dfd\00", [28 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"filename\00", [23 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"mode\00", [27 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"dev\00", [28 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"unsigned\00", [23 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"pathname\00", [23 x i8] zeroinitializer }, align 32
@fsnotify_unlink.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.68 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/fsnotify.h\00", [39 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"flag\00", [27 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"oldname\00", [24 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"newdfd\00", [25 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"newname\00", [24 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"olddfd\00", [25 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"flags\00", [26 x i8] zeroinitializer }, align 32
@check_copy_size.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.75 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/linux/thread_info.h\00", [36 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/uaccess.h\00", [40 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"VM_BUG_ON_PAGE(PageTail(page))\00", [33 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"VM_BUG_ON_PAGE(page_ref_count(page) == 0)\00", [54 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod_and_test = external dso_local global %struct.tracepoint, align 4
@switch.table.do_rmdir = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 -16, i32 -22, i32 -39], [20 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 4294967283, i64 4294967285]
@__sancov_gen_cov_switch_values.81 = internal global [5 x i64] [i64 3, i64 16, i64 16384, i64 32768, i64 40960]
@__sancov_gen_cov_switch_values.82 = internal global [4 x i64] [i64 2, i64 16, i64 8192, i64 24576]
@__sancov_gen_cov_switch_values.83 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 47]
@__sancov_gen_cov_switch_values.84 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967295]
@__sancov_gen_cov_switch_values.85 = internal global [4 x i64] [i64 2, i64 16, i64 8192, i64 24576]
@__sancov_gen_cov_switch_values.86 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 47]
@__sancov_gen_cov_switch_values.87 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.88 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 47]
@__sancov_gen_cov_switch_values.89 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967275]
@__sancov_gen_cov_switch_values.90 = internal global [9 x i64] [i64 7, i64 32, i64 0, i64 1, i64 3, i64 5, i64 7, i64 9, i64 11]
@__sancov_gen_cov_switch_values.91 = internal global [9 x i64] [i64 7, i64 32, i64 0, i64 1, i64 2, i64 4, i64 6, i64 8, i64 12]
@__sancov_gen_cov_switch_values.92 = internal global [8 x i64] [i64 6, i64 32, i64 0, i64 1, i64 2, i64 6, i64 8, i64 12]
@___asan_gen_.95 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 1198, i32 41 }
@___asan_gen_.98 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 2702, i32 2 }
@___asan_gen_.101 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 2828, i32 21 }
@___asan_gen_.105 = private unnamed_addr constant [21 x i8] c"event_enter__mknodat\00", align 1
@___asan_gen_.111 = private unnamed_addr constant [20 x i8] c"event_exit__mknodat\00", align 1
@___asan_gen_.117 = private unnamed_addr constant [15 x i8] c"types__mknodat\00", align 1
@___asan_gen_.120 = private unnamed_addr constant [14 x i8] c"args__mknodat\00", align 1
@___asan_gen_.126 = private unnamed_addr constant [19 x i8] c"event_enter__mknod\00", align 1
@___asan_gen_.132 = private unnamed_addr constant [18 x i8] c"event_exit__mknod\00", align 1
@___asan_gen_.138 = private unnamed_addr constant [13 x i8] c"types__mknod\00", align 1
@___asan_gen_.141 = private unnamed_addr constant [12 x i8] c"args__mknod\00", align 1
@___asan_gen_.147 = private unnamed_addr constant [21 x i8] c"event_enter__mkdirat\00", align 1
@___asan_gen_.153 = private unnamed_addr constant [20 x i8] c"event_exit__mkdirat\00", align 1
@___asan_gen_.159 = private unnamed_addr constant [15 x i8] c"types__mkdirat\00", align 1
@___asan_gen_.162 = private unnamed_addr constant [14 x i8] c"args__mkdirat\00", align 1
@___asan_gen_.168 = private unnamed_addr constant [19 x i8] c"event_enter__mkdir\00", align 1
@___asan_gen_.174 = private unnamed_addr constant [18 x i8] c"event_exit__mkdir\00", align 1
@___asan_gen_.180 = private unnamed_addr constant [13 x i8] c"types__mkdir\00", align 1
@___asan_gen_.183 = private unnamed_addr constant [12 x i8] c"args__mkdir\00", align 1
@___asan_gen_.185 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 3977, i32 1 }
@___asan_gen_.189 = private unnamed_addr constant [19 x i8] c"event_enter__rmdir\00", align 1
@___asan_gen_.195 = private unnamed_addr constant [18 x i8] c"event_exit__rmdir\00", align 1
@___asan_gen_.201 = private unnamed_addr constant [13 x i8] c"types__rmdir\00", align 1
@___asan_gen_.204 = private unnamed_addr constant [12 x i8] c"args__rmdir\00", align 1
@___asan_gen_.206 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 4097, i32 1 }
@___asan_gen_.210 = private unnamed_addr constant [22 x i8] c"event_enter__unlinkat\00", align 1
@___asan_gen_.216 = private unnamed_addr constant [21 x i8] c"event_exit__unlinkat\00", align 1
@___asan_gen_.222 = private unnamed_addr constant [16 x i8] c"types__unlinkat\00", align 1
@___asan_gen_.225 = private unnamed_addr constant [15 x i8] c"args__unlinkat\00", align 1
@___asan_gen_.231 = private unnamed_addr constant [20 x i8] c"event_enter__unlink\00", align 1
@___asan_gen_.237 = private unnamed_addr constant [19 x i8] c"event_exit__unlink\00", align 1
@___asan_gen_.243 = private unnamed_addr constant [14 x i8] c"types__unlink\00", align 1
@___asan_gen_.246 = private unnamed_addr constant [13 x i8] c"args__unlink\00", align 1
@___asan_gen_.248 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 4264, i32 1 }
@___asan_gen_.252 = private unnamed_addr constant [23 x i8] c"event_enter__symlinkat\00", align 1
@___asan_gen_.258 = private unnamed_addr constant [22 x i8] c"event_exit__symlinkat\00", align 1
@___asan_gen_.264 = private unnamed_addr constant [17 x i8] c"types__symlinkat\00", align 1
@___asan_gen_.267 = private unnamed_addr constant [16 x i8] c"args__symlinkat\00", align 1
@___asan_gen_.273 = private unnamed_addr constant [21 x i8] c"event_enter__symlink\00", align 1
@___asan_gen_.279 = private unnamed_addr constant [20 x i8] c"event_exit__symlink\00", align 1
@___asan_gen_.285 = private unnamed_addr constant [15 x i8] c"types__symlink\00", align 1
@___asan_gen_.288 = private unnamed_addr constant [14 x i8] c"args__symlink\00", align 1
@___asan_gen_.290 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 4348, i32 1 }
@___asan_gen_.294 = private unnamed_addr constant [20 x i8] c"event_enter__linkat\00", align 1
@___asan_gen_.300 = private unnamed_addr constant [19 x i8] c"event_exit__linkat\00", align 1
@___asan_gen_.306 = private unnamed_addr constant [14 x i8] c"types__linkat\00", align 1
@___asan_gen_.309 = private unnamed_addr constant [13 x i8] c"args__linkat\00", align 1
@___asan_gen_.315 = private unnamed_addr constant [18 x i8] c"event_enter__link\00", align 1
@___asan_gen_.321 = private unnamed_addr constant [17 x i8] c"event_exit__link\00", align 1
@___asan_gen_.327 = private unnamed_addr constant [12 x i8] c"types__link\00", align 1
@___asan_gen_.330 = private unnamed_addr constant [11 x i8] c"args__link\00", align 1
@___asan_gen_.332 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 4530, i32 1 }
@___asan_gen_.336 = private unnamed_addr constant [23 x i8] c"event_enter__renameat2\00", align 1
@___asan_gen_.342 = private unnamed_addr constant [22 x i8] c"event_exit__renameat2\00", align 1
@___asan_gen_.348 = private unnamed_addr constant [17 x i8] c"types__renameat2\00", align 1
@___asan_gen_.351 = private unnamed_addr constant [16 x i8] c"args__renameat2\00", align 1
@___asan_gen_.353 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 4858, i32 1 }
@___asan_gen_.357 = private unnamed_addr constant [22 x i8] c"event_enter__renameat\00", align 1
@___asan_gen_.363 = private unnamed_addr constant [21 x i8] c"event_exit__renameat\00", align 1
@___asan_gen_.369 = private unnamed_addr constant [16 x i8] c"types__renameat\00", align 1
@___asan_gen_.372 = private unnamed_addr constant [15 x i8] c"args__renameat\00", align 1
@___asan_gen_.374 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 4865, i32 1 }
@___asan_gen_.378 = private unnamed_addr constant [20 x i8] c"event_enter__rename\00", align 1
@___asan_gen_.384 = private unnamed_addr constant [19 x i8] c"event_exit__rename\00", align 1
@___asan_gen_.390 = private unnamed_addr constant [14 x i8] c"types__rename\00", align 1
@___asan_gen_.393 = private unnamed_addr constant [13 x i8] c"args__rename\00", align 1
@___asan_gen_.395 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 4872, i32 1 }
@___asan_gen_.399 = private unnamed_addr constant [14 x i8] c"namei_sysctls\00", align 1
@___asan_gen_.401 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 1029, i32 25 }
@___asan_gen_.404 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 1071, i32 2 }
@___asan_gen_.407 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 1031, i32 15 }
@___asan_gen_.410 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 1040, i32 15 }
@___asan_gen_.413 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 1049, i32 15 }
@___asan_gen_.416 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 1058, i32 15 }
@___asan_gen_.422 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.424, i32 695, i32 2 }
@___asan_gen_.424 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.425 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.424, i32 723, i32 2 }
@___asan_gen_.428 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 1119, i32 41 }
@___asan_gen_.431 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 1686, i32 2 }
@___asan_gen_.432 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.434 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 3245, i32 2 }
@___asan_gen_.437 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 1247, i32 6 }
@___asan_gen_.440 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 1248, i32 6 }
@___asan_gen_.464 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 3887, i32 1 }
@___asan_gen_.467 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 3893, i32 1 }
@___asan_gen_.470 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 3972, i32 1 }
@___asan_gen_.472 = private unnamed_addr constant [28 x i8] c"../include/linux/fsnotify.h\00", align 1
@___asan_gen_.473 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.472, i32 271, i32 6 }
@___asan_gen_.476 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 4254, i32 1 }
@___asan_gen_.485 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 4342, i32 1 }
@___asan_gen_.490 = private constant [14 x i8] c"../fs/namei.c\00", align 1
@___asan_gen_.491 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.490, i32 4523, i32 1 }
@___asan_gen_.494 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.496, i32 230, i32 6 }
@___asan_gen_.496 = private unnamed_addr constant [31 x i8] c"../include/linux/thread_info.h\00", align 1
@___asan_gen_.497 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.496, i32 214, i32 2 }
@___asan_gen_.499 = private unnamed_addr constant [27 x i8] c"../include/linux/uaccess.h\00", align 1
@___asan_gen_.500 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.499, i32 174, i32 2 }
@___asan_gen_.502 = private unnamed_addr constant [30 x i8] c"../include/linux/page-flags.h\00", align 1
@___asan_gen_.503 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.502, i32 260, i32 2 }
@___asan_gen_.504 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.505 = private unnamed_addr constant [22 x i8] c"../include/linux/mm.h\00", align 1
@___asan_gen_.506 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.505, i32 717, i32 2 }
@___asan_gen_.507 = private unnamed_addr constant [22 x i8] c"switch.table.do_rmdir\00", align 1
@llvm.compiler.used = appending global [237 x ptr] [ptr @__event_enter__link, ptr @__event_enter__linkat, ptr @__event_enter__mkdir, ptr @__event_enter__mkdirat, ptr @__event_enter__mknod, ptr @__event_enter__mknodat, ptr @__event_enter__rename, ptr @__event_enter__renameat, ptr @__event_enter__renameat2, ptr @__event_enter__rmdir, ptr @__event_enter__symlink, ptr @__event_enter__symlinkat, ptr @__event_enter__unlink, ptr @__event_enter__unlinkat, ptr @__event_exit__link, ptr @__event_exit__linkat, ptr @__event_exit__mkdir, ptr @__event_exit__mkdirat, ptr @__event_exit__mknod, ptr @__event_exit__mknodat, ptr @__event_exit__rename, ptr @__event_exit__renameat, ptr @__event_exit__renameat2, ptr @__event_exit__rmdir, ptr @__event_exit__symlink, ptr @__event_exit__symlinkat, ptr @__event_exit__unlink, ptr @__event_exit__unlinkat, ptr @__initcall__kmod_namei__310_1074_init_fs_namei_sysctls5, ptr @__ksymtab___check_sticky, ptr @__ksymtab___page_symlink, ptr @__ksymtab_done_path_create, ptr @__ksymtab_follow_down, ptr @__ksymtab_follow_down_one, ptr @__ksymtab_follow_up, ptr @__ksymtab_full_name_hash, ptr @__ksymtab_generic_permission, ptr @__ksymtab_hashlen_string, ptr @__ksymtab_inode_permission, ptr @__ksymtab_kern_path, ptr @__ksymtab_kern_path_create, ptr @__ksymtab_lock_rename, ptr @__ksymtab_lookup_one, ptr @__ksymtab_lookup_one_len, ptr @__ksymtab_lookup_one_len_unlocked, ptr @__ksymtab_lookup_positive_unlocked, ptr @__ksymtab_page_get_link, ptr @__ksymtab_page_put_link, ptr @__ksymtab_page_readlink, ptr @__ksymtab_page_symlink, ptr @__ksymtab_page_symlink_inode_operations, ptr @__ksymtab_path_get, ptr @__ksymtab_path_put, ptr @__ksymtab_try_lookup_one_len, ptr @__ksymtab_unlock_rename, ptr @__ksymtab_user_path_at_empty, ptr @__ksymtab_user_path_create, ptr @__ksymtab_vfs_create, ptr @__ksymtab_vfs_get_link, ptr @__ksymtab_vfs_link, ptr @__ksymtab_vfs_mkdir, ptr @__ksymtab_vfs_mknod, ptr @__ksymtab_vfs_mkobj, ptr @__ksymtab_vfs_path_lookup, ptr @__ksymtab_vfs_readlink, ptr @__ksymtab_vfs_rename, ptr @__ksymtab_vfs_rmdir, ptr @__ksymtab_vfs_symlink, ptr @__ksymtab_vfs_tmpfile, ptr @__ksymtab_vfs_unlink, ptr @__p_syscall_meta__link, ptr @__p_syscall_meta__linkat, ptr @__p_syscall_meta__mkdir, ptr @__p_syscall_meta__mkdirat, ptr @__p_syscall_meta__mknod, ptr @__p_syscall_meta__mknodat, ptr @__p_syscall_meta__rename, ptr @__p_syscall_meta__renameat, ptr @__p_syscall_meta__renameat2, ptr @__p_syscall_meta__rmdir, ptr @__p_syscall_meta__symlink, ptr @__p_syscall_meta__symlinkat, ptr @__p_syscall_meta__unlink, ptr @__p_syscall_meta__unlinkat, ptr @__syscall_meta__link, ptr @__syscall_meta__linkat, ptr @__syscall_meta__mkdir, ptr @__syscall_meta__mkdirat, ptr @__syscall_meta__mknod, ptr @__syscall_meta__mknodat, ptr @__syscall_meta__rename, ptr @__syscall_meta__renameat, ptr @__syscall_meta__renameat2, ptr @__syscall_meta__rmdir, ptr @__syscall_meta__symlink, ptr @__syscall_meta__symlinkat, ptr @__syscall_meta__unlink, ptr @__syscall_meta__unlinkat, ptr @event_enter__link, ptr @event_enter__linkat, ptr @event_enter__mkdir, ptr @event_enter__mkdirat, ptr @event_enter__mknod, ptr @event_enter__mknodat, ptr @event_enter__rename, ptr @event_enter__renameat, ptr @event_enter__renameat2, ptr @event_enter__rmdir, ptr @event_enter__symlink, ptr @event_enter__symlinkat, ptr @event_enter__unlink, ptr @event_enter__unlinkat, ptr @event_exit__link, ptr @event_exit__linkat, ptr @event_exit__mkdir, ptr @event_exit__mkdirat, ptr @event_exit__mknod, ptr @event_exit__mknodat, ptr @event_exit__rename, ptr @event_exit__renameat, ptr @event_exit__renameat2, ptr @event_exit__rmdir, ptr @event_exit__symlink, ptr @event_exit__symlinkat, ptr @event_exit__unlink, ptr @event_exit__unlinkat, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @types__mknodat, ptr @args__mknodat, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @types__mknod, ptr @args__mknod, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @types__mkdirat, ptr @args__mkdirat, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @types__mkdir, ptr @args__mkdir, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @types__rmdir, ptr @args__rmdir, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @types__unlinkat, ptr @args__unlinkat, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @types__unlink, ptr @args__unlink, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @types__symlinkat, ptr @args__symlinkat, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @types__symlink, ptr @args__symlink, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @types__linkat, ptr @args__linkat, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @types__link, ptr @args__link, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @types__renameat2, ptr @args__renameat2, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @types__renameat, ptr @args__renameat, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @types__rename, ptr @args__rename, ptr @.str.45, ptr @namei_sysctls, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @lookup_open.__key, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.80, ptr @switch.table.do_rmdir], section "llvm.metadata"
@0 = internal global [139 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.95 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.98 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.101 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__mknodat to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.105 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__mknodat to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.111 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__mknodat to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.117 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__mknodat to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.120 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__mknod to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.126 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__mknod to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.132 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__mknod to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.138 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__mknod to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.141 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__mkdirat to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.147 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__mkdirat to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.153 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__mkdirat to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.159 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__mkdirat to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__mkdir to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.168 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__mkdir to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.174 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__mkdir to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.180 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__mkdir to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.183 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__rmdir to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.189 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__rmdir to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.195 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__rmdir to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.201 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__rmdir to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.204 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__unlinkat to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.210 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__unlinkat to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__unlinkat to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.222 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__unlinkat to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.225 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__unlink to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__unlink to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.237 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__unlink to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.243 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__unlink to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.246 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__symlinkat to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.252 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__symlinkat to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.258 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__symlinkat to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__symlinkat to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__symlink to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__symlink to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.279 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__symlink to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.285 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__symlink to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.288 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__linkat to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.294 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__linkat to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.300 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__linkat to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__linkat to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.309 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__link to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.315 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__link to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.321 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__link to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.327 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__link to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.330 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__renameat2 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__renameat2 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.342 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__renameat2 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__renameat2 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__renameat to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.357 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__renameat to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__renameat to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.369 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__renameat to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__rename to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.378 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__rename to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__rename to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__rename to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @namei_sysctls to i32), i32 180, i32 224, i32 ptrtoint (ptr @___asan_gen_.399 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.407 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.425 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.431 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lookup_open.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.432 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.434 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.497 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.506 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.do_rmdir to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.507 to i32), i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

@sys_mknodat = dso_local alias i32 (i32, ptr, i16, i32), ptr @__se_sys_mknodat
@sys_mknod = dso_local alias i32 (ptr, i16, i32), ptr @__se_sys_mknod
@sys_mkdirat = dso_local alias i32 (i32, ptr, i16), ptr @__se_sys_mkdirat
@sys_mkdir = dso_local alias i32 (ptr, i16), ptr @__se_sys_mkdir
@sys_rmdir = dso_local alias i32 (ptr), ptr @__se_sys_rmdir
@sys_unlinkat = dso_local alias i32 (i32, ptr, i32), ptr @__se_sys_unlinkat
@sys_unlink = dso_local alias i32 (ptr), ptr @__se_sys_unlink
@sys_symlinkat = dso_local alias i32 (ptr, i32, ptr), ptr @__se_sys_symlinkat
@sys_symlink = dso_local alias i32 (ptr, ptr), ptr @__se_sys_symlink
@sys_linkat = dso_local alias i32 (i32, ptr, i32, ptr, i32), ptr @__se_sys_linkat
@sys_link = dso_local alias i32 (ptr, ptr), ptr @__se_sys_link
@sys_renameat2 = dso_local alias i32 (i32, ptr, i32, ptr, i32), ptr @__se_sys_renameat2
@sys_renameat = dso_local alias i32 (i32, ptr, i32, ptr), ptr @__se_sys_renameat
@sys_rename = dso_local alias i32 (ptr, ptr), ptr @__se_sys_rename

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @getname_flags(ptr noundef %filename, i32 noundef %flags, ptr noundef writeonly %empty) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %0 = load ptr, ptr @names_cachep, align 4
  %call1 = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %0, i32 noundef 3264) #13
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %entry.cleanup81_crit_edge, label %if.end8, !prof !360

entry.cleanup81_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup81

if.end8:                                          ; preds = %entry
  %iname = getelementptr inbounds %struct.filename, ptr %call1, i32 0, i32 4
  %1 = ptrtoint ptr %call1 to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %iname, ptr %call1, align 8
  %call9 = tail call i32 @strncpy_from_user(ptr noundef %iname, ptr noundef %filename, i32 noundef 4080) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %cmp = icmp slt i32 %call9, 0
  br i1 %cmp, label %if.then16, label %if.end18, !prof !360

if.then16:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %2 = load ptr, ptr @names_cachep, align 4
  tail call void @kmem_cache_free(ptr noundef %2, ptr noundef nonnull %call1) #13
  %3 = inttoptr i32 %call9 to ptr
  br label %cleanup81

if.end18:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4080, i32 %call9)
  %cmp19 = icmp eq i32 %call9, 4080
  br i1 %cmp19, label %if.then26, label %if.end18.if.end62_crit_edge, !prof !360

if.end18.if.end62_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end62

if.then26:                                        ; preds = %if.end18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %4 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %4, i32 noundef 3520, i32 noundef 17) #16
  %tobool28.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool28.not, label %if.then37, label %if.end39, !prof !360

if.then37:                                        ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %5 = load ptr, ptr @names_cachep, align 4
  tail call void @kmem_cache_free(ptr noundef %5, ptr noundef nonnull %call1) #13
  br label %cleanup81

if.end39:                                         ; preds = %if.then26
  %6 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call1, ptr %call7.i.i, align 8
  %call41 = tail call i32 @strncpy_from_user(ptr noundef nonnull %call1, ptr noundef %filename, i32 noundef 4096) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %cmp42 = icmp slt i32 %call41, 0
  br i1 %cmp42, label %if.then49, label %if.end51, !prof !360

if.then49:                                        ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %7 = load ptr, ptr @names_cachep, align 4
  tail call void @kmem_cache_free(ptr noundef %7, ptr noundef nonnull %call1) #13
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #13
  %8 = inttoptr i32 %call41 to ptr
  br label %cleanup81

if.end51:                                         ; preds = %if.end39
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %call41)
  %cmp52 = icmp eq i32 %call41, 4096
  br i1 %cmp52, label %if.then59, label %if.end51.if.end62_crit_edge, !prof !360

if.end51.if.end62_crit_edge:                      ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end62

if.then59:                                        ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %9 = load ptr, ptr @names_cachep, align 4
  tail call void @kmem_cache_free(ptr noundef %9, ptr noundef nonnull %call1) #13
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #13
  br label %cleanup81

if.end62:                                         ; preds = %if.end51.if.end62_crit_edge, %if.end18.if.end62_crit_edge
  %result.0 = phi ptr [ %call1, %if.end18.if.end62_crit_edge ], [ %call7.i.i, %if.end51.if.end62_crit_edge ]
  %len.1 = phi i32 [ %call9, %if.end18.if.end62_crit_edge ], [ %call41, %if.end51.if.end62_crit_edge ]
  %refcnt = getelementptr inbounds %struct.filename, ptr %result.0, i32 0, i32 2
  %10 = ptrtoint ptr %refcnt to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 1, ptr %refcnt, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.1)
  %tobool63.not = icmp eq i32 %len.1, 0
  br i1 %tobool63.not, label %if.then72, label %if.end62.if.end80_crit_edge, !prof !360

if.end62.if.end80_crit_edge:                      ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end80

if.then72:                                        ; preds = %if.end62
  %tobool73.not = icmp eq ptr %empty, null
  br i1 %tobool73.not, label %if.then72.if.end75_crit_edge, label %if.then74

if.then72.if.end75_crit_edge:                     ; preds = %if.then72
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end75

if.then74:                                        ; preds = %if.then72
  call void @__sanitizer_cov_trace_pc() #15
  %11 = ptrtoint ptr %empty to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 1, ptr %empty, align 4
  br label %if.end75

if.end75:                                         ; preds = %if.then74, %if.then72.if.end75_crit_edge
  %and = and i32 %flags, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool76.not = icmp eq i32 %and, 0
  br i1 %tobool76.not, label %if.then77, label %if.end75.if.end80_crit_edge

if.end75.if.end80_crit_edge:                      ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end80

if.then77:                                        ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @putname(ptr noundef nonnull %result.0)
  br label %cleanup81

if.end80:                                         ; preds = %if.end75.if.end80_crit_edge, %if.end62.if.end80_crit_edge
  %uptr = getelementptr inbounds %struct.filename, ptr %result.0, i32 0, i32 1
  %12 = ptrtoint ptr %uptr to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %filename, ptr %uptr, align 4
  %aname = getelementptr inbounds %struct.filename, ptr %result.0, i32 0, i32 3
  %13 = ptrtoint ptr %aname to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %aname, align 4
  br label %cleanup81

cleanup81:                                        ; preds = %if.end80, %if.then77, %if.then59, %if.then49, %if.then37, %if.then16, %entry.cleanup81_crit_edge
  %retval.1 = phi ptr [ %3, %if.then16 ], [ %result.0, %if.end80 ], [ inttoptr (i32 -2 to ptr), %if.then77 ], [ inttoptr (i32 -12 to ptr), %entry.cleanup81_crit_edge ], [ inttoptr (i32 -36 to ptr), %if.then59 ], [ %8, %if.then49 ], [ inttoptr (i32 -12 to ptr), %if.then37 ]
  ret ptr %retval.1
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kmem_cache_alloc(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @strncpy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @putname(ptr noundef %name) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp.i = icmp ugt ptr %name, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %entry.if.end16_crit_edge, label %do.body

entry.if.end16_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16

do.body:                                          ; preds = %entry
  %refcnt = getelementptr inbounds %struct.filename, ptr %name, i32 0, i32 2
  %0 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp = icmp slt i32 %1, 1
  br i1 %cmp, label %do.body3, label %do.end7, !prof !360

do.body3:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 261, 0\0A.popsection", ""() #13, !srcloc !361
  unreachable

do.end7:                                          ; preds = %do.body
  %dec = add nsw i32 %1, -1
  %2 = ptrtoint ptr %refcnt to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %dec, ptr %refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %cmp9.not = icmp eq i32 %dec, 0
  br i1 %cmp9.not, label %if.end11, label %do.end7.if.end16_crit_edge

do.end7.if.end16_crit_edge:                       ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16

if.end11:                                         ; preds = %do.end7
  %3 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %name, align 4
  %iname = getelementptr inbounds %struct.filename, ptr %name, i32 0, i32 4
  %cmp13.not = icmp eq ptr %4, %iname
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %5 = load ptr, ptr @names_cachep, align 4
  br i1 %cmp13.not, label %if.else, label %if.then14

if.then14:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @kmem_cache_free(ptr noundef %5, ptr noundef %4) #13
  tail call void @kfree(ptr noundef %name) #13
  br label %if.end16

if.else:                                          ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @kmem_cache_free(ptr noundef %5, ptr noundef %name) #13
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then14, %do.end7.if.end16_crit_edge, %entry.if.end16_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @getname_uflags(ptr noundef %filename, i32 noundef %uflags) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %and = shl i32 %uflags, 2
  %0 = and i32 %and, 16384
  %call = tail call ptr @getname_flags(ptr noundef %filename, i32 noundef %0, ptr noundef null)
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @getname(ptr noundef %filename) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @getname_flags(ptr noundef %filename, i32 noundef 0, ptr noundef null)
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @getname_kernel(ptr nocapture noundef readonly %filename) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @strlen(ptr noundef %filename) #17
  %add = add i32 %call, 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %0 = load ptr, ptr @names_cachep, align 4
  %call1 = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %0, i32 noundef 3264) #13
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %entry.cleanup29_crit_edge, label %if.end, !prof !360

entry.cleanup29_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup29

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 4081, i32 %add)
  %cmp = icmp ult i32 %add, 4081
  br i1 %cmp, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %iname = getelementptr inbounds %struct.filename, ptr %call1, i32 0, i32 4
  %1 = ptrtoint ptr %call1 to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %iname, ptr %call1, align 8
  br label %if.end27

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 4097, i32 %add)
  %cmp7 = icmp slt i32 %add, 4097
  br i1 %cmp7, label %if.then8, label %if.else24

if.then8:                                         ; preds = %if.else
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3264, i32 noundef 17) #16
  %tobool10.not = icmp eq ptr %call7.i, null
  br i1 %tobool10.not, label %cleanup.thread, label %cleanup, !prof !360

cleanup.thread:                                   ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %3 = load ptr, ptr @names_cachep, align 4
  tail call void @kmem_cache_free(ptr noundef %3, ptr noundef nonnull %call1) #13
  br label %cleanup29

cleanup:                                          ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #15
  %4 = ptrtoint ptr %call7.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call1, ptr %call7.i, align 8
  br label %if.end27

if.else24:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %5 = load ptr, ptr @names_cachep, align 4
  tail call void @kmem_cache_free(ptr noundef %5, ptr noundef nonnull %call1) #13
  br label %cleanup29

if.end27:                                         ; preds = %cleanup, %if.then6
  %result.1 = phi ptr [ %call1, %if.then6 ], [ %call7.i, %cleanup ]
  %6 = ptrtoint ptr %result.1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %result.1, align 8
  %8 = call ptr @memcpy(ptr %7, ptr %filename, i32 %add)
  %uptr = getelementptr inbounds %struct.filename, ptr %result.1, i32 0, i32 1
  %9 = ptrtoint ptr %uptr to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %uptr, align 4
  %aname = getelementptr inbounds %struct.filename, ptr %result.1, i32 0, i32 3
  %10 = ptrtoint ptr %aname to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %aname, align 4
  %refcnt = getelementptr inbounds %struct.filename, ptr %result.1, i32 0, i32 2
  %11 = ptrtoint ptr %refcnt to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 1, ptr %refcnt, align 8
  br label %cleanup29

cleanup29:                                        ; preds = %if.end27, %if.else24, %cleanup.thread, %entry.cleanup29_crit_edge
  %retval.1 = phi ptr [ %result.1, %if.end27 ], [ inttoptr (i32 -36 to ptr), %if.else24 ], [ inttoptr (i32 -12 to ptr), %entry.cleanup29_crit_edge ], [ inttoptr (i32 -12 to ptr), %cleanup.thread ]
  ret ptr %retval.1
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @generic_permission(ptr noundef %mnt_userns, ptr noundef %inode, i32 noundef %mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %inode to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %inode, align 8
  %conv.i = zext i16 %1 to i32
  %i_sb.i.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb.i.i.i, align 4
  %s_user_ns.i.i.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 53
  %4 = ptrtoint ptr %s_user_ns.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_user_ns.i.i.i, align 8
  %i_uid.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 2
  %6 = ptrtoint ptr %i_uid.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %.unpack.i.i = load i32, ptr %i_uid.i.i, align 4
  %7 = insertvalue [1 x i32] undef, i32 %.unpack.i.i, 0
  %cmp.i.i.i.i.i = icmp eq ptr %mnt_userns, @init_user_ns
  %cmp.i.i.i.i = icmp eq ptr %5, %mnt_userns
  %spec.select.i.i.i.i = or i1 %cmp.i.i.i.i.i, %cmp.i.i.i.i
  br i1 %spec.select.i.i.i.i, label %entry.i_uid_into_mnt.exit.i_crit_edge, label %if.end.i.i.i

entry.i_uid_into_mnt.exit.i_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %i_uid_into_mnt.exit.i

if.end.i.i.i:                                     ; preds = %entry
  %cmp.i21.i.i.i = icmp eq ptr %5, @init_user_ns
  br i1 %cmp.i21.i.i.i, label %if.end.i.i.i.if.end7.i.i.i_crit_edge, label %if.else.i.i.i

if.end.i.i.i.if.end7.i.i.i_crit_edge:             ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7.i.i.i

if.else.i.i.i:                                    ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call6.i.i.i = tail call i32 @from_kuid(ptr noundef %5, [1 x i32] %7) #13
  br label %if.end7.i.i.i

if.end7.i.i.i:                                    ; preds = %if.else.i.i.i, %if.end.i.i.i.if.end7.i.i.i_crit_edge
  %uid.0.i.i.i = phi i32 [ %call6.i.i.i, %if.else.i.i.i ], [ %.unpack.i.i, %if.end.i.i.i.if.end7.i.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %uid.0.i.i.i)
  %cmp.i.i.i = icmp eq i32 %uid.0.i.i.i, -1
  br i1 %cmp.i.i.i, label %if.end7.i.i.i.i_uid_into_mnt.exit.i_crit_edge, label %if.end9.i.i.i

if.end7.i.i.i.i_uid_into_mnt.exit.i_crit_edge:    ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %i_uid_into_mnt.exit.i

if.end9.i.i.i:                                    ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call10.i.i.i = tail call i32 @make_kuid(ptr noundef %mnt_userns, i32 noundef %uid.0.i.i.i) #13
  br label %i_uid_into_mnt.exit.i

i_uid_into_mnt.exit.i:                            ; preds = %if.end9.i.i.i, %if.end7.i.i.i.i_uid_into_mnt.exit.i_crit_edge, %entry.i_uid_into_mnt.exit.i_crit_edge
  %retval.sroa.0.0.i.i.i = phi i32 [ %call10.i.i.i, %if.end9.i.i.i ], [ -1, %if.end7.i.i.i.i_uid_into_mnt.exit.i_crit_edge ], [ %.unpack.i.i, %entry.i_uid_into_mnt.exit.i_crit_edge ]
  %8 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %11, i32 0, i32 99
  %12 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %cred.i, align 16
  %fsuid.i = getelementptr inbounds %struct.cred, ptr %13, i32 0, i32 10
  %14 = ptrtoint ptr %fsuid.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %agg.tmp.sroa.0.0.copyload.i = load i32, ptr %fsuid.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %agg.tmp.sroa.0.0.copyload.i, i32 %retval.sroa.0.0.i.i.i)
  %cmp.i.i = icmp eq i32 %agg.tmp.sroa.0.0.copyload.i, %retval.sroa.0.0.i.i.i
  br i1 %cmp.i.i, label %if.then.i, label %if.end.i, !prof !362

if.then.i:                                        ; preds = %i_uid_into_mnt.exit.i
  %and.i = and i32 %mask, 7
  %shr.i = lshr i32 %conv.i, 6
  %neg.i = xor i32 %shr.i, -1
  %and7.i = and i32 %and.i, %neg.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7.i)
  %tobool8.not.i = icmp eq i32 %and7.i, 0
  br i1 %tobool8.not.i, label %if.then.i.cleanup_crit_edge, label %if.then.i.if.end_crit_edge

if.then.i.if.end_crit_edge:                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i:                                         ; preds = %i_uid_into_mnt.exit.i
  %15 = ptrtoint ptr %i_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %i_sb.i.i.i, align 4
  %s_flags.i = getelementptr inbounds %struct.super_block, ptr %16, i32 0, i32 10
  %17 = ptrtoint ptr %s_flags.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %s_flags.i, align 4
  %and9.i = and i32 %18, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9.i)
  %tobool10.not.i = icmp eq i32 %and9.i, 0
  %and11.i = and i32 %conv.i, 56
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11.i)
  %tobool12.not.i = icmp eq i32 %and11.i, 0
  %or.cond.i = select i1 %tobool10.not.i, i1 true, i1 %tobool12.not.i
  br i1 %or.cond.i, label %if.end.i.if.end18.i_crit_edge, label %if.then13.i

if.end.i.if.end18.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18.i

if.then13.i:                                      ; preds = %if.end.i
  %call14.i = tail call fastcc i32 @check_acl(ptr noundef %mnt_userns, ptr noundef %inode, i32 noundef %mask) #13
  %19 = zext i32 %call14.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %19, ptr @__sancov_gen_cov_switch_values)
  switch i32 %call14.i, label %if.then13.i.cleanup_crit_edge [
    i32 -11, label %if.then13.i.if.end18.i_crit_edge
    i32 -13, label %if.then13.i.if.end_crit_edge
  ]

if.then13.i.if.end_crit_edge:                     ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then13.i.if.end18.i_crit_edge:                 ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18.i

if.then13.i.cleanup_crit_edge:                    ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end18.i:                                       ; preds = %if.then13.i.if.end18.i_crit_edge, %if.end.i.if.end18.i_crit_edge
  %and19.i = and i32 %mask, 7
  %shr20.i = lshr i32 %conv.i, 3
  %xor.i = xor i32 %shr20.i, %conv.i
  %and21.i = and i32 %xor.i, %and19.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i)
  %tobool22.not.i = icmp eq i32 %and21.i, 0
  br i1 %tobool22.not.i, label %if.end18.i.if.end32.i_crit_edge, label %if.then23.i

if.end18.i.if.end32.i_crit_edge:                  ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end32.i

if.then23.i:                                      ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #15
  %call24.i = tail call fastcc i32 @i_gid_into_mnt(ptr noundef %mnt_userns, ptr noundef %inode) #13
  %.fca.0.insert.i = insertvalue [1 x i32] poison, i32 %call24.i, 0
  %call27.i = tail call i32 @in_group_p([1 x i32] %.fca.0.insert.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27.i)
  %tobool28.not.i = icmp eq i32 %call27.i, 0
  %spec.select.i = select i1 %tobool28.not.i, i32 %conv.i, i32 %shr20.i
  br label %if.end32.i

if.end32.i:                                       ; preds = %if.then23.i, %if.end18.i.if.end32.i_crit_edge
  %mode.1.i = phi i32 [ %spec.select.i, %if.then23.i ], [ %conv.i, %if.end18.i.if.end32.i_crit_edge ]
  %neg33.i = xor i32 %mode.1.i, -1
  %and34.i = and i32 %and19.i, %neg33.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34.i)
  %tobool35.not.i = icmp eq i32 %and34.i, 0
  br i1 %tobool35.not.i, label %if.end32.i.cleanup_crit_edge, label %if.end32.i.if.end_crit_edge

if.end32.i.if.end_crit_edge:                      ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end32.i.cleanup_crit_edge:                     ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %if.end32.i.if.end_crit_edge, %if.then13.i.if.end_crit_edge, %if.then.i.if.end_crit_edge
  %20 = ptrtoint ptr %inode to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %inode, align 8
  %22 = and i16 %21, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %22)
  %cmp1 = icmp eq i16 %22, 16384
  br i1 %cmp1, label %if.then3, label %if.end13

if.then3:                                         ; preds = %if.end
  %and4 = and i32 %mask, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool.not = icmp eq i32 %and4, 0
  br i1 %tobool.not, label %if.then5, label %if.then3.if.end9_crit_edge

if.then3.if.end9_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end9

if.then5:                                         ; preds = %if.then3
  %call6 = tail call zeroext i1 @capable_wrt_inode_uidgid(ptr noundef %mnt_userns, ptr noundef %inode, i32 noundef 2) #13
  br i1 %call6, label %if.then5.cleanup_crit_edge, label %if.then5.if.end9_crit_edge

if.then5.if.end9_crit_edge:                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end9

if.then5.cleanup_crit_edge:                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end9:                                          ; preds = %if.then5.if.end9_crit_edge, %if.then3.if.end9_crit_edge
  %call10 = tail call zeroext i1 @capable_wrt_inode_uidgid(ptr noundef %mnt_userns, ptr noundef %inode, i32 noundef 1) #13
  %. = select i1 %call10, i32 0, i32 -13
  br label %cleanup

if.end13:                                         ; preds = %if.end
  %and14 = and i32 %mask, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %and14)
  %cmp15 = icmp eq i32 %and14, 4
  br i1 %cmp15, label %if.then17, label %if.end13.if.end21_crit_edge

if.end13.if.end21_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end21

if.then17:                                        ; preds = %if.end13
  %call18 = tail call zeroext i1 @capable_wrt_inode_uidgid(ptr noundef %mnt_userns, ptr noundef %inode, i32 noundef 2) #13
  br i1 %call18, label %if.then17.cleanup_crit_edge, label %if.then17.if.end21_crit_edge

if.then17.if.end21_crit_edge:                     ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end21

if.then17.cleanup_crit_edge:                      ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end21:                                         ; preds = %if.then17.if.end21_crit_edge, %if.end13.if.end21_crit_edge
  %and22 = and i32 %mask, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22)
  %tobool23.not = icmp eq i32 %and22, 0
  br i1 %tobool23.not, label %if.end21.if.then28_crit_edge, label %lor.lhs.false

if.end21.if.then28_crit_edge:                     ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then28

lor.lhs.false:                                    ; preds = %if.end21
  %23 = ptrtoint ptr %inode to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %inode, align 8
  %25 = and i16 %24, 73
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %25)
  %tobool27.not = icmp eq i16 %25, 0
  br i1 %tobool27.not, label %lor.lhs.false.if.end32_crit_edge, label %lor.lhs.false.if.then28_crit_edge

lor.lhs.false.if.then28_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then28

lor.lhs.false.if.end32_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end32

if.then28:                                        ; preds = %lor.lhs.false.if.then28_crit_edge, %if.end21.if.then28_crit_edge
  %call29 = tail call zeroext i1 @capable_wrt_inode_uidgid(ptr noundef %mnt_userns, ptr noundef %inode, i32 noundef 1) #13
  br i1 %call29, label %if.then28.cleanup_crit_edge, label %if.then28.if.end32_crit_edge

if.then28.if.end32_crit_edge:                     ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end32

if.then28.cleanup_crit_edge:                      ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end32:                                         ; preds = %if.then28.if.end32_crit_edge, %lor.lhs.false.if.end32_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end32, %if.then28.cleanup_crit_edge, %if.then17.cleanup_crit_edge, %if.end9, %if.then5.cleanup_crit_edge, %if.end32.i.cleanup_crit_edge, %if.then13.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge
  %retval.0 = phi i32 [ -13, %if.end32 ], [ 0, %if.then5.cleanup_crit_edge ], [ %., %if.end9 ], [ 0, %if.then17.cleanup_crit_edge ], [ 0, %if.then28.cleanup_crit_edge ], [ 0, %if.then.i.cleanup_crit_edge ], [ 0, %if.end32.i.cleanup_crit_edge ], [ %call14.i, %if.then13.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @capable_wrt_inode_uidgid(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @inode_permission(ptr noundef %mnt_userns, ptr noundef %inode, i32 noundef %mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %and.i = and i32 %mask, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end13_crit_edge, label %if.then.i, !prof !362

entry.if.end13_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end13

if.then.i:                                        ; preds = %entry
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb, align 4
  %s_flags.i.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %s_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %s_flags.i.i, align 4
  %and.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.then.i.if.then5_crit_edge, label %land.lhs.true.i

if.then.i.if.then5_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then5

land.lhs.true.i:                                  ; preds = %if.then.i
  %4 = ptrtoint ptr %inode to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %inode, align 8
  %6 = and i16 %5, -4096
  %7 = zext i16 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.81)
  switch i16 %6, label %land.lhs.true.i.if.then5_crit_edge [
    i16 -32768, label %land.lhs.true.i.cleanup_crit_edge
    i16 16384, label %land.lhs.true.i.cleanup_crit_edge50
    i16 -24576, label %land.lhs.true.i.cleanup_crit_edge51
  ]

land.lhs.true.i.cleanup_crit_edge51:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

land.lhs.true.i.cleanup_crit_edge50:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

land.lhs.true.i.if.then5_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then5

if.then5:                                         ; preds = %land.lhs.true.i.if.then5_crit_edge, %if.then.i.if.then5_crit_edge
  %i_flags = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 4
  %8 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %i_flags, align 4
  %and6 = and i32 %9, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  br i1 %tobool7.not, label %if.end9, label %if.then5.cleanup_crit_edge

if.then5.cleanup_crit_edge:                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end9:                                          ; preds = %if.then5
  %call10 = tail call fastcc zeroext i1 @HAS_UNMAPPED_ID(ptr noundef %mnt_userns, ptr noundef %inode)
  br i1 %call10, label %if.end9.cleanup_crit_edge, label %if.end9.if.end13_crit_edge

if.end9.if.end13_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end13

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end13:                                         ; preds = %if.end9.if.end13_crit_edge, %entry.if.end13_crit_edge
  %i_opflags.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 1
  %10 = ptrtoint ptr %i_opflags.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %i_opflags.i, align 2
  %12 = and i16 %11, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %12)
  %tobool.not.i39 = icmp eq i16 %12, 0
  br i1 %tobool.not.i39, label %if.then.i40, label %if.end13.if.end18.i_crit_edge, !prof !360

if.end13.if.end18.i_crit_edge:                    ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18.i

if.then.i40:                                      ; preds = %if.end13
  %i_op.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 7
  %13 = ptrtoint ptr %i_op.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %i_op.i, align 8
  %permission.i = getelementptr inbounds %struct.inode_operations, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %permission.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %permission.i, align 8
  %tobool4.not.i = icmp eq ptr %16, null
  br i1 %tobool4.not.i, label %if.end.i, label %if.then11.i, !prof !360

if.then11.i:                                      ; preds = %if.then.i40
  call void @__sanitizer_cov_trace_pc() #15
  %call.i = tail call i32 %16(ptr noundef %mnt_userns, ptr noundef %inode, i32 noundef %mask) #13
  br label %do_inode_permission.exit

if.end.i:                                         ; preds = %if.then.i40
  call void @__sanitizer_cov_trace_pc() #15
  %i_lock.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock.i) #13
  %17 = ptrtoint ptr %i_opflags.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %i_opflags.i, align 2
  %19 = or i16 %18, 1
  store i16 %19, ptr %i_opflags.i, align 2
  tail call void @_raw_spin_unlock(ptr noundef %i_lock.i) #13
  br label %if.end18.i

if.end18.i:                                       ; preds = %if.end.i, %if.end13.if.end18.i_crit_edge
  %call19.i = tail call i32 @generic_permission(ptr noundef %mnt_userns, ptr noundef %inode, i32 noundef %mask) #13
  br label %do_inode_permission.exit

do_inode_permission.exit:                         ; preds = %if.end18.i, %if.then11.i
  %retval.0.i = phi i32 [ %call.i, %if.then11.i ], [ %call19.i, %if.end18.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool15.not = icmp eq i32 %retval.0.i, 0
  br i1 %tobool15.not, label %if.end17, label %do_inode_permission.exit.cleanup_crit_edge

do_inode_permission.exit.cleanup_crit_edge:       ; preds = %do_inode_permission.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end17:                                         ; preds = %do_inode_permission.exit
  %i_rdev.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 13
  %20 = ptrtoint ptr %i_rdev.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %i_rdev.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool.not.i41 = icmp eq i32 %21, 0
  br i1 %tobool.not.i41, label %if.end17.if.end21_crit_edge, label %if.end.i42, !prof !362

if.end17.if.end21_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end21

if.end.i42:                                       ; preds = %if.end17
  %22 = ptrtoint ptr %inode to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %inode, align 8
  %24 = and i16 %23, -4096
  %25 = zext i16 %24 to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.82)
  switch i16 %24, label %if.end.i42.if.end21_crit_edge [
    i16 24576, label %if.end.i42.devcgroup_inode_permission.exit_crit_edge
    i16 8192, label %if.then11.i43
  ]

if.end.i42.devcgroup_inode_permission.exit_crit_edge: ; preds = %if.end.i42
  call void @__sanitizer_cov_trace_pc() #15
  br label %devcgroup_inode_permission.exit

if.end.i42.if.end21_crit_edge:                    ; preds = %if.end.i42
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end21

if.then11.i43:                                    ; preds = %if.end.i42
  call void @__sanitizer_cov_trace_pc() #15
  br label %devcgroup_inode_permission.exit

devcgroup_inode_permission.exit:                  ; preds = %if.then11.i43, %if.end.i42.devcgroup_inode_permission.exit_crit_edge
  %type.0.i = phi i16 [ 2, %if.then11.i43 ], [ 1, %if.end.i42.devcgroup_inode_permission.exit_crit_edge ]
  %26 = trunc i32 %mask to i16
  %27 = shl i16 %26, 1
  %28 = and i16 %27, 4
  %29 = lshr i16 %26, 1
  %30 = and i16 %29, 2
  %31 = or i16 %30, %28
  %shr.i.i = lshr i32 %21, 20
  %and.i.i44 = and i32 %21, 1048575
  %call29.i = tail call i32 @devcgroup_check_permission(i16 noundef signext %type.0.i, i32 noundef %shr.i.i, i32 noundef %and.i.i44, i16 noundef signext %31) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29.i)
  %tobool19.not = icmp eq i32 %call29.i, 0
  br i1 %tobool19.not, label %devcgroup_inode_permission.exit.if.end21_crit_edge, label %devcgroup_inode_permission.exit.cleanup_crit_edge

devcgroup_inode_permission.exit.cleanup_crit_edge: ; preds = %devcgroup_inode_permission.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

devcgroup_inode_permission.exit.if.end21_crit_edge: ; preds = %devcgroup_inode_permission.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end21

if.end21:                                         ; preds = %devcgroup_inode_permission.exit.if.end21_crit_edge, %if.end.i42.if.end21_crit_edge, %if.end17.if.end21_crit_edge
  %call22 = tail call i32 @security_inode_permission(ptr noundef %inode, i32 noundef %mask) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end21, %devcgroup_inode_permission.exit.cleanup_crit_edge, %do_inode_permission.exit.cleanup_crit_edge, %if.end9.cleanup_crit_edge, %if.then5.cleanup_crit_edge, %land.lhs.true.i.cleanup_crit_edge, %land.lhs.true.i.cleanup_crit_edge50, %land.lhs.true.i.cleanup_crit_edge51
  %retval.0 = phi i32 [ %call22, %if.end21 ], [ -1, %if.then5.cleanup_crit_edge ], [ -13, %if.end9.cleanup_crit_edge ], [ %retval.0.i, %do_inode_permission.exit.cleanup_crit_edge ], [ %call29.i, %devcgroup_inode_permission.exit.cleanup_crit_edge ], [ -30, %land.lhs.true.i.cleanup_crit_edge ], [ -30, %land.lhs.true.i.cleanup_crit_edge50 ], [ -30, %land.lhs.true.i.cleanup_crit_edge51 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @HAS_UNMAPPED_ID(ptr noundef %mnt_userns, ptr nocapture noundef readonly %inode) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb.i.i, align 4
  %s_user_ns.i.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 53
  %2 = ptrtoint ptr %s_user_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_user_ns.i.i, align 8
  %i_uid.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 2
  %4 = ptrtoint ptr %i_uid.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %.unpack.i = load i32, ptr %i_uid.i, align 4
  %5 = insertvalue [1 x i32] undef, i32 %.unpack.i, 0
  %cmp.i.i.i.i = icmp eq ptr %mnt_userns, @init_user_ns
  %cmp.i.i.i = icmp eq ptr %3, %mnt_userns
  %spec.select.i.i.i = or i1 %cmp.i.i.i.i, %cmp.i.i.i
  br i1 %spec.select.i.i.i, label %entry.i_uid_into_mnt.exit_crit_edge, label %if.end.i.i

entry.i_uid_into_mnt.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %i_uid_into_mnt.exit

if.end.i.i:                                       ; preds = %entry
  %cmp.i21.i.i = icmp eq ptr %3, @init_user_ns
  br i1 %cmp.i21.i.i, label %if.end.i.i.if.end7.i.i_crit_edge, label %if.else.i.i

if.end.i.i.if.end7.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7.i.i

if.else.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call6.i.i = tail call i32 @from_kuid(ptr noundef %3, [1 x i32] %5) #13
  br label %if.end7.i.i

if.end7.i.i:                                      ; preds = %if.else.i.i, %if.end.i.i.if.end7.i.i_crit_edge
  %uid.0.i.i = phi i32 [ %call6.i.i, %if.else.i.i ], [ %.unpack.i, %if.end.i.i.if.end7.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %uid.0.i.i)
  %cmp.i.i = icmp eq i32 %uid.0.i.i, -1
  br i1 %cmp.i.i, label %if.end7.i.i.lor.end_crit_edge, label %if.end9.i.i

if.end7.i.i.lor.end_crit_edge:                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.end

if.end9.i.i:                                      ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call10.i.i = tail call i32 @make_kuid(ptr noundef %mnt_userns, i32 noundef %uid.0.i.i) #13
  br label %i_uid_into_mnt.exit

i_uid_into_mnt.exit:                              ; preds = %if.end9.i.i, %entry.i_uid_into_mnt.exit_crit_edge
  %retval.sroa.0.0.i.i = phi i32 [ %call10.i.i, %if.end9.i.i ], [ %.unpack.i, %entry.i_uid_into_mnt.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.sroa.0.0.i.i)
  %cmp.i.not = icmp eq i32 %retval.sroa.0.0.i.i, -1
  br i1 %cmp.i.not, label %i_uid_into_mnt.exit.lor.end_crit_edge, label %lor.rhs

i_uid_into_mnt.exit.lor.end_crit_edge:            ; preds = %i_uid_into_mnt.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.end

lor.rhs:                                          ; preds = %i_uid_into_mnt.exit
  %6 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %i_sb.i.i, align 4
  %s_user_ns.i.i12 = getelementptr inbounds %struct.super_block, ptr %7, i32 0, i32 53
  %8 = ptrtoint ptr %s_user_ns.i.i12 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %s_user_ns.i.i12, align 8
  %i_gid.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 3
  %10 = ptrtoint ptr %i_gid.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %.unpack.i13 = load i32, ptr %i_gid.i, align 8
  %11 = insertvalue [1 x i32] undef, i32 %.unpack.i13, 0
  %cmp.i.i.i15 = icmp eq ptr %9, %mnt_userns
  %spec.select.i.i.i16 = or i1 %cmp.i.i.i.i, %cmp.i.i.i15
  br i1 %spec.select.i.i.i16, label %lor.rhs.i_gid_into_mnt.exit_crit_edge, label %if.end.i.i18

lor.rhs.i_gid_into_mnt.exit_crit_edge:            ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #15
  br label %i_gid_into_mnt.exit

if.end.i.i18:                                     ; preds = %lor.rhs
  %cmp.i21.i.i17 = icmp eq ptr %9, @init_user_ns
  br i1 %cmp.i21.i.i17, label %if.end.i.i18.if.end7.i.i22_crit_edge, label %if.else.i.i20

if.end.i.i18.if.end7.i.i22_crit_edge:             ; preds = %if.end.i.i18
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7.i.i22

if.else.i.i20:                                    ; preds = %if.end.i.i18
  call void @__sanitizer_cov_trace_pc() #15
  %call6.i.i19 = tail call i32 @from_kgid(ptr noundef %9, [1 x i32] %11) #13
  br label %if.end7.i.i22

if.end7.i.i22:                                    ; preds = %if.else.i.i20, %if.end.i.i18.if.end7.i.i22_crit_edge
  %gid.0.i.i = phi i32 [ %call6.i.i19, %if.else.i.i20 ], [ %.unpack.i13, %if.end.i.i18.if.end7.i.i22_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %gid.0.i.i)
  %cmp.i.i21 = icmp eq i32 %gid.0.i.i, -1
  br i1 %cmp.i.i21, label %if.end7.i.i22.i_gid_into_mnt.exit_crit_edge, label %if.end9.i.i24

if.end7.i.i22.i_gid_into_mnt.exit_crit_edge:      ; preds = %if.end7.i.i22
  call void @__sanitizer_cov_trace_pc() #15
  br label %i_gid_into_mnt.exit

if.end9.i.i24:                                    ; preds = %if.end7.i.i22
  call void @__sanitizer_cov_trace_pc() #15
  %call10.i.i23 = tail call i32 @make_kgid(ptr noundef %mnt_userns, i32 noundef %gid.0.i.i) #13
  br label %i_gid_into_mnt.exit

i_gid_into_mnt.exit:                              ; preds = %if.end9.i.i24, %if.end7.i.i22.i_gid_into_mnt.exit_crit_edge, %lor.rhs.i_gid_into_mnt.exit_crit_edge
  %retval.sroa.0.0.i.i25 = phi i32 [ %call10.i.i23, %if.end9.i.i24 ], [ -1, %if.end7.i.i22.i_gid_into_mnt.exit_crit_edge ], [ %.unpack.i13, %lor.rhs.i_gid_into_mnt.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.sroa.0.0.i.i25)
  %cmp.i26.not = icmp eq i32 %retval.sroa.0.0.i.i25, -1
  br label %lor.end

lor.end:                                          ; preds = %i_gid_into_mnt.exit, %i_uid_into_mnt.exit.lor.end_crit_edge, %if.end7.i.i.lor.end_crit_edge
  %12 = phi i1 [ true, %i_uid_into_mnt.exit.lor.end_crit_edge ], [ %cmp.i26.not, %i_gid_into_mnt.exit ], [ true, %if.end7.i.i.lor.end_crit_edge ]
  ret i1 %12
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_inode_permission(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @path_get(ptr nocapture noundef readonly %path) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %path, align 4
  %call = tail call ptr @mntget(ptr noundef %1) #13
  %dentry = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %2 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dentry, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.dget.exit_crit_edge, label %if.then.i

entry.dget.exit_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %dget.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %d_lockref.i = getelementptr inbounds %struct.dentry, ptr %3, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i) #13
  br label %dget.exit

dget.exit:                                        ; preds = %if.then.i, %entry.dget.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mntget(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @path_put(ptr nocapture noundef readonly %path) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %dentry = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %0 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dentry, align 4
  tail call void @dput(ptr noundef %1) #13
  %2 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %path, align 4
  tail call void @mntput(ptr noundef %3) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dput(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mntput(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nd_jump_link(ptr nocapture noundef readonly %path) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %nameidata = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 102
  %4 = ptrtoint ptr %nameidata to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nameidata, align 8
  %flags = getelementptr inbounds %struct.nameidata, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags, align 4
  %and = and i32 %7, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.err_crit_edge, !prof !362

entry.err_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %err

if.end:                                           ; preds = %entry
  %and4 = and i32 %7, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  br i1 %tobool5.not, label %if.end17, label %if.then12, !prof !362

if.then12:                                        ; preds = %if.end
  %8 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %5, align 8
  %10 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %path, align 4
  %cmp.not = icmp eq ptr %9, %11
  %and19 = and i32 %7, 1572864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19)
  %tobool20.not = icmp eq i32 %and19, 0
  %or.cond = select i1 %cmp.not, i1 %tobool20.not, i1 false
  br i1 %or.cond, label %if.then12.if.end28_crit_edge, label %if.then12.err_crit_edge, !prof !363

if.then12.err_crit_edge:                          ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #15
  br label %err

if.then12.if.end28_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end28

if.end17:                                         ; preds = %if.end
  %and19.old = and i32 %7, 1572864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19.old)
  %tobool20.not.old = icmp eq i32 %and19.old, 0
  br i1 %tobool20.not.old, label %if.end17.if.end28_crit_edge, label %if.end17.err_crit_edge, !prof !362

if.end17.err_crit_edge:                           ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #15
  br label %err

if.end17.if.end28_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end28

if.end28:                                         ; preds = %if.end17.if.end28_crit_edge, %if.then12.if.end28_crit_edge
  %dentry.i = getelementptr inbounds %struct.path, ptr %5, i32 0, i32 1
  %12 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dentry.i, align 4
  tail call void @dput(ptr noundef %13) #13
  %14 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %5, align 4
  tail call void @mntput(ptr noundef %15) #13
  %16 = ptrtoint ptr %path to i32
  call void @__asan_loadN_noabort(i32 %16, i32 8)
  %17 = load i64, ptr %path, align 4
  %18 = ptrtoint ptr %5 to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %17, ptr %5, align 8
  %19 = trunc i64 %17 to i32
  %20 = inttoptr i32 %19 to ptr
  %d_inode = getelementptr inbounds %struct.dentry, ptr %20, i32 0, i32 5
  %21 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %d_inode, align 8
  %inode = getelementptr inbounds %struct.nameidata, ptr %5, i32 0, i32 3
  %23 = ptrtoint ptr %inode to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %22, ptr %inode, align 8
  %state = getelementptr inbounds %struct.nameidata, ptr %5, i32 0, i32 5
  %24 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %state, align 8
  %or = or i32 %25, 4
  store i32 %or, ptr %state, align 8
  br label %cleanup

err:                                              ; preds = %if.end17.err_crit_edge, %if.then12.err_crit_edge, %entry.err_crit_edge
  %error.0 = phi i32 [ -40, %entry.err_crit_edge ], [ -18, %if.then12.err_crit_edge ], [ -18, %if.end17.err_crit_edge ]
  tail call void @path_put(ptr noundef %path)
  br label %cleanup

cleanup:                                          ; preds = %err, %if.end28
  %retval.0 = phi i32 [ %error.0, %err ], [ 0, %if.end28 ]
  ret i32 %retval.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @init_fs_namei_sysctls() #5 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__register_sysctl_init(ptr noundef nonnull @.str.45, ptr noundef nonnull @namei_sysctls, ptr noundef nonnull @.str.46) #13
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @may_linkat(ptr noundef %mnt_userns, ptr nocapture noundef readonly %link) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %dentry = getelementptr inbounds %struct.path, ptr %link, i32 0, i32 1
  %0 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dentry, align 4
  %d_inode = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %d_inode, align 8
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %i_sb.i.i, align 4
  %s_user_ns.i.i = getelementptr inbounds %struct.super_block, ptr %5, i32 0, i32 53
  %6 = ptrtoint ptr %s_user_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %s_user_ns.i.i, align 8
  %i_uid.i = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 2
  %8 = ptrtoint ptr %i_uid.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %.unpack.i = load i32, ptr %i_uid.i, align 4
  %9 = insertvalue [1 x i32] undef, i32 %.unpack.i, 0
  %cmp.i.i.i.i = icmp eq ptr %mnt_userns, @init_user_ns
  %cmp.i.i.i = icmp eq ptr %7, %mnt_userns
  %spec.select.i.i.i = or i1 %cmp.i.i.i.i, %cmp.i.i.i
  br i1 %spec.select.i.i.i, label %entry.i_uid_into_mnt.exit_crit_edge, label %if.end.i.i

entry.i_uid_into_mnt.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %i_uid_into_mnt.exit

if.end.i.i:                                       ; preds = %entry
  %cmp.i21.i.i = icmp eq ptr %7, @init_user_ns
  br i1 %cmp.i21.i.i, label %if.end.i.i.if.end7.i.i_crit_edge, label %if.else.i.i

if.end.i.i.if.end7.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7.i.i

if.else.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call6.i.i = tail call i32 @from_kuid(ptr noundef %7, [1 x i32] %9) #13
  br label %if.end7.i.i

if.end7.i.i:                                      ; preds = %if.else.i.i, %if.end.i.i.if.end7.i.i_crit_edge
  %uid.0.i.i = phi i32 [ %call6.i.i, %if.else.i.i ], [ %.unpack.i, %if.end.i.i.if.end7.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %uid.0.i.i)
  %cmp.i.i = icmp eq i32 %uid.0.i.i, -1
  br i1 %cmp.i.i, label %if.end7.i.i.cleanup_crit_edge, label %if.end9.i.i

if.end7.i.i.cleanup_crit_edge:                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end9.i.i:                                      ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call10.i.i = tail call i32 @make_kuid(ptr noundef %mnt_userns, i32 noundef %uid.0.i.i) #13
  br label %i_uid_into_mnt.exit

i_uid_into_mnt.exit:                              ; preds = %if.end9.i.i, %entry.i_uid_into_mnt.exit_crit_edge
  %retval.sroa.0.0.i.i = phi i32 [ %call10.i.i, %if.end9.i.i ], [ %.unpack.i, %entry.i_uid_into_mnt.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.sroa.0.0.i.i)
  %cmp.i.not = icmp eq i32 %retval.sroa.0.0.i.i, -1
  br i1 %cmp.i.not, label %i_uid_into_mnt.exit.cleanup_crit_edge, label %lor.lhs.false

i_uid_into_mnt.exit.cleanup_crit_edge:            ; preds = %i_uid_into_mnt.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

lor.lhs.false:                                    ; preds = %i_uid_into_mnt.exit
  %10 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %i_sb.i.i, align 4
  %s_user_ns.i.i23 = getelementptr inbounds %struct.super_block, ptr %11, i32 0, i32 53
  %12 = ptrtoint ptr %s_user_ns.i.i23 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %s_user_ns.i.i23, align 8
  %i_gid.i = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 3
  %14 = ptrtoint ptr %i_gid.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %.unpack.i24 = load i32, ptr %i_gid.i, align 8
  %15 = insertvalue [1 x i32] undef, i32 %.unpack.i24, 0
  %cmp.i.i.i26 = icmp eq ptr %13, %mnt_userns
  %spec.select.i.i.i27 = or i1 %cmp.i.i.i.i, %cmp.i.i.i26
  br i1 %spec.select.i.i.i27, label %lor.lhs.false.i_gid_into_mnt.exit_crit_edge, label %if.end.i.i29

lor.lhs.false.i_gid_into_mnt.exit_crit_edge:      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %i_gid_into_mnt.exit

if.end.i.i29:                                     ; preds = %lor.lhs.false
  %cmp.i21.i.i28 = icmp eq ptr %13, @init_user_ns
  br i1 %cmp.i21.i.i28, label %if.end.i.i29.if.end7.i.i33_crit_edge, label %if.else.i.i31

if.end.i.i29.if.end7.i.i33_crit_edge:             ; preds = %if.end.i.i29
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7.i.i33

if.else.i.i31:                                    ; preds = %if.end.i.i29
  call void @__sanitizer_cov_trace_pc() #15
  %call6.i.i30 = tail call i32 @from_kgid(ptr noundef %13, [1 x i32] %15) #13
  br label %if.end7.i.i33

if.end7.i.i33:                                    ; preds = %if.else.i.i31, %if.end.i.i29.if.end7.i.i33_crit_edge
  %gid.0.i.i = phi i32 [ %call6.i.i30, %if.else.i.i31 ], [ %.unpack.i24, %if.end.i.i29.if.end7.i.i33_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %gid.0.i.i)
  %cmp.i.i32 = icmp eq i32 %gid.0.i.i, -1
  br i1 %cmp.i.i32, label %if.end7.i.i33.cleanup_crit_edge, label %if.end9.i.i35

if.end7.i.i33.cleanup_crit_edge:                  ; preds = %if.end7.i.i33
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end9.i.i35:                                    ; preds = %if.end7.i.i33
  call void @__sanitizer_cov_trace_pc() #15
  %call10.i.i34 = tail call i32 @make_kgid(ptr noundef %mnt_userns, i32 noundef %gid.0.i.i) #13
  br label %i_gid_into_mnt.exit

i_gid_into_mnt.exit:                              ; preds = %if.end9.i.i35, %lor.lhs.false.i_gid_into_mnt.exit_crit_edge
  %retval.sroa.0.0.i.i36 = phi i32 [ %call10.i.i34, %if.end9.i.i35 ], [ %.unpack.i24, %lor.lhs.false.i_gid_into_mnt.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.sroa.0.0.i.i36)
  %cmp.i37.not = icmp eq i32 %retval.sroa.0.0.i.i36, -1
  br i1 %cmp.i37.not, label %i_gid_into_mnt.exit.cleanup_crit_edge, label %if.end

i_gid_into_mnt.exit.cleanup_crit_edge:            ; preds = %i_gid_into_mnt.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %i_gid_into_mnt.exit
  %16 = load i32, ptr @sysctl_protected_hardlinks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not = icmp eq i32 %16, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end9

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end9:                                          ; preds = %if.end
  %17 = ptrtoint ptr %3 to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %3, align 8
  %conv.i = zext i16 %18 to i32
  %19 = and i32 %conv.i, 63488
  call void @__sanitizer_cov_trace_const_cmp4(i32 32768, i32 %19)
  %20 = icmp ne i32 %19, 32768
  %and7.i = and i32 %conv.i, 1032
  call void @__sanitizer_cov_trace_const_cmp4(i32 1032, i32 %and7.i)
  %cmp8.i = icmp eq i32 %and7.i, 1032
  %or.cond18.i = or i1 %20, %cmp8.i
  br i1 %or.cond18.i, label %if.end9.lor.lhs.false11_crit_edge, label %safe_hardlink_source.exit

if.end9.lor.lhs.false11_crit_edge:                ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false11

safe_hardlink_source.exit:                        ; preds = %if.end9
  %call.i = tail call i32 @inode_permission(ptr noundef %mnt_userns, ptr noundef %3, i32 noundef 6) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool12.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool12.not.i, label %safe_hardlink_source.exit.cleanup_crit_edge, label %safe_hardlink_source.exit.lor.lhs.false11_crit_edge

safe_hardlink_source.exit.lor.lhs.false11_crit_edge: ; preds = %safe_hardlink_source.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false11

safe_hardlink_source.exit.cleanup_crit_edge:      ; preds = %safe_hardlink_source.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

lor.lhs.false11:                                  ; preds = %safe_hardlink_source.exit.lor.lhs.false11_crit_edge, %if.end9.lor.lhs.false11_crit_edge
  %call12 = tail call zeroext i1 @inode_owner_or_capable(ptr noundef %mnt_userns, ptr noundef %3) #13
  br i1 %call12, label %lor.lhs.false11.cleanup_crit_edge, label %if.end14

lor.lhs.false11.cleanup_crit_edge:                ; preds = %lor.lhs.false11
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end14:                                         ; preds = %lor.lhs.false11
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @audit_log_path_denied(i32 noundef 1702, ptr noundef nonnull @.str) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %lor.lhs.false11.cleanup_crit_edge, %safe_hardlink_source.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %i_gid_into_mnt.exit.cleanup_crit_edge, %if.end7.i.i33.cleanup_crit_edge, %i_uid_into_mnt.exit.cleanup_crit_edge, %if.end7.i.i.cleanup_crit_edge
  %retval.0 = phi i32 [ -1, %if.end14 ], [ -75, %i_gid_into_mnt.exit.cleanup_crit_edge ], [ -75, %i_uid_into_mnt.exit.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %lor.lhs.false11.cleanup_crit_edge ], [ 0, %safe_hardlink_source.exit.cleanup_crit_edge ], [ -75, %if.end7.i.i.cleanup_crit_edge ], [ -75, %if.end7.i.i33.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i_uid_into_mnt(ptr noundef %mnt_userns, ptr nocapture noundef readonly %inode) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb.i, align 4
  %s_user_ns.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 53
  %2 = ptrtoint ptr %s_user_ns.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_user_ns.i, align 8
  %i_uid = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 2
  %4 = ptrtoint ptr %i_uid to i32
  call void @__asan_load4_noabort(i32 %4)
  %.unpack = load i32, ptr %i_uid, align 4
  %5 = insertvalue [1 x i32] undef, i32 %.unpack, 0
  %cmp.i.i.i = icmp eq ptr %mnt_userns, @init_user_ns
  %cmp.i.i = icmp eq ptr %3, %mnt_userns
  %spec.select.i.i = or i1 %cmp.i.i.i, %cmp.i.i
  br i1 %spec.select.i.i, label %entry.mapped_kuid_fs.exit_crit_edge, label %if.end.i

entry.mapped_kuid_fs.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %mapped_kuid_fs.exit

if.end.i:                                         ; preds = %entry
  %cmp.i21.i = icmp eq ptr %3, @init_user_ns
  br i1 %cmp.i21.i, label %if.end.i.if.end7.i_crit_edge, label %if.else.i

if.end.i.if.end7.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7.i

if.else.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %call6.i = tail call i32 @from_kuid(ptr noundef %3, [1 x i32] %5) #13
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.else.i, %if.end.i.if.end7.i_crit_edge
  %uid.0.i = phi i32 [ %call6.i, %if.else.i ], [ %.unpack, %if.end.i.if.end7.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %uid.0.i)
  %cmp.i = icmp eq i32 %uid.0.i, -1
  br i1 %cmp.i, label %if.end7.i.mapped_kuid_fs.exit_crit_edge, label %if.end9.i

if.end7.i.mapped_kuid_fs.exit_crit_edge:          ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %mapped_kuid_fs.exit

if.end9.i:                                        ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  %call10.i = tail call i32 @make_kuid(ptr noundef %mnt_userns, i32 noundef %uid.0.i) #13
  br label %mapped_kuid_fs.exit

mapped_kuid_fs.exit:                              ; preds = %if.end9.i, %if.end7.i.mapped_kuid_fs.exit_crit_edge, %entry.mapped_kuid_fs.exit_crit_edge
  %retval.sroa.0.0.i = phi i32 [ %call10.i, %if.end9.i ], [ -1, %if.end7.i.mapped_kuid_fs.exit_crit_edge ], [ %.unpack, %entry.mapped_kuid_fs.exit_crit_edge ]
  ret i32 %retval.sroa.0.0.i
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @i_gid_into_mnt(ptr noundef %mnt_userns, ptr nocapture noundef readonly %inode) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb.i, align 4
  %s_user_ns.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 53
  %2 = ptrtoint ptr %s_user_ns.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_user_ns.i, align 8
  %i_gid = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 3
  %4 = ptrtoint ptr %i_gid to i32
  call void @__asan_load4_noabort(i32 %4)
  %.unpack = load i32, ptr %i_gid, align 8
  %5 = insertvalue [1 x i32] undef, i32 %.unpack, 0
  %cmp.i.i.i = icmp eq ptr %mnt_userns, @init_user_ns
  %cmp.i.i = icmp eq ptr %3, %mnt_userns
  %spec.select.i.i = or i1 %cmp.i.i.i, %cmp.i.i
  br i1 %spec.select.i.i, label %entry.mapped_kgid_fs.exit_crit_edge, label %if.end.i

entry.mapped_kgid_fs.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %mapped_kgid_fs.exit

if.end.i:                                         ; preds = %entry
  %cmp.i21.i = icmp eq ptr %3, @init_user_ns
  br i1 %cmp.i21.i, label %if.end.i.if.end7.i_crit_edge, label %if.else.i

if.end.i.if.end7.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7.i

if.else.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %call6.i = tail call i32 @from_kgid(ptr noundef %3, [1 x i32] %5) #13
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.else.i, %if.end.i.if.end7.i_crit_edge
  %gid.0.i = phi i32 [ %call6.i, %if.else.i ], [ %.unpack, %if.end.i.if.end7.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %gid.0.i)
  %cmp.i = icmp eq i32 %gid.0.i, -1
  br i1 %cmp.i, label %if.end7.i.mapped_kgid_fs.exit_crit_edge, label %if.end9.i

if.end7.i.mapped_kgid_fs.exit_crit_edge:          ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %mapped_kgid_fs.exit

if.end9.i:                                        ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  %call10.i = tail call i32 @make_kgid(ptr noundef %mnt_userns, i32 noundef %gid.0.i) #13
  br label %mapped_kgid_fs.exit

mapped_kgid_fs.exit:                              ; preds = %if.end9.i, %if.end7.i.mapped_kgid_fs.exit_crit_edge, %entry.mapped_kgid_fs.exit_crit_edge
  %retval.sroa.0.0.i = phi i32 [ %call10.i, %if.end9.i ], [ -1, %if.end7.i.mapped_kgid_fs.exit_crit_edge ], [ %.unpack, %entry.mapped_kgid_fs.exit_crit_edge ]
  ret i32 %retval.sroa.0.0.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @inode_owner_or_capable(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @audit_log_path_denied(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @follow_up(ptr nocapture noundef %path) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %path, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 -16
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #13
  %mnt_parent = getelementptr i8, ptr %1, i32 -8
  %2 = ptrtoint ptr %mnt_parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mnt_parent, align 4
  %cmp = icmp eq ptr %3, %add.ptr.i
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %mnt2 = getelementptr inbounds %struct.mount, ptr %3, i32 0, i32 3
  %call3 = tail call ptr @mntget(ptr noundef %mnt2) #13
  %mnt_mountpoint = getelementptr i8, ptr %1, i32 -4
  %4 = ptrtoint ptr %mnt_mountpoint to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mnt_mountpoint, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.end.dget.exit_crit_edge, label %if.then.i

if.end.dget.exit_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %dget.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %d_lockref.i = getelementptr inbounds %struct.dentry, ptr %5, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i) #13
  br label %dget.exit

dget.exit:                                        ; preds = %if.then.i, %if.end.dget.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #13
  %dentry = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %6 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dentry, align 4
  tail call void @dput(ptr noundef %7) #13
  %8 = ptrtoint ptr %dentry to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %dentry, align 4
  %9 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %path, align 4
  tail call void @mntput(ptr noundef %10) #13
  %11 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %mnt2, ptr %path, align 4
  br label %cleanup

cleanup:                                          ; preds = %dget.exit, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 1, %dget.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @follow_down_one(ptr noundef %path) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @lookup_mnt(ptr noundef %path) #13
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.then

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then:                                          ; preds = %entry
  %dentry = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %0 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dentry, align 4
  tail call void @dput(ptr noundef %1) #13
  %2 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %path, align 4
  tail call void @mntput(ptr noundef %3) #13
  %4 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call, ptr %path, align 4
  %5 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %call, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %if.then.dget.exit_crit_edge, label %if.then.i

if.then.dget.exit_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %dget.exit

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %d_lockref.i = getelementptr inbounds %struct.dentry, ptr %6, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i) #13
  br label %dget.exit

dget.exit:                                        ; preds = %if.then.i, %if.then.dget.exit_crit_edge
  %7 = ptrtoint ptr %dentry to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %6, ptr %dentry, align 4
  br label %cleanup

cleanup:                                          ; preds = %dget.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %dget.exit ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @lookup_mnt(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @follow_down(ptr noundef %path) #0 align 64 {
entry:
  %jumped = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %path, align 4
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %jumped) #13
  %dentry.i = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %2 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dentry.i, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %3, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !364
  %and.i = and i32 %5, 458752
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end15.i, !prof !362

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %and.i.i = and i32 %5, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %cmp.i.i = icmp eq i32 %and.i.i, 0
  %..i = select i1 %cmp.i.i, i32 -2, i32 0, !prof !360
  br label %traverse_mounts.exit

if.end15.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call16.i = call fastcc i32 @__traverse_mounts(ptr noundef %path, i32 noundef %5, ptr noundef nonnull %jumped, ptr noundef null, i32 noundef 0) #13
  br label %traverse_mounts.exit

traverse_mounts.exit:                             ; preds = %if.end15.i, %if.then.i
  %retval.0.i = phi i32 [ %call16.i, %if.end15.i ], [ %..i, %if.then.i ]
  %6 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %path, align 4
  %cmp.not = icmp eq ptr %7, %1
  br i1 %cmp.not, label %traverse_mounts.exit.if.end_crit_edge, label %if.then

traverse_mounts.exit.if.end_crit_edge:            ; preds = %traverse_mounts.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %traverse_mounts.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @mntput(ptr noundef %1) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %traverse_mounts.exit.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %jumped) #13
  ret i32 %retval.0.i
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @full_name_hash(ptr noundef %salt, ptr noundef %name, i32 noundef %len) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %salt to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %tobool.not28 = icmp eq i32 %len, 0
  br i1 %tobool.not28, label %entry.done_crit_edge, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  br label %if.end

entry.done_crit_edge:                             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %done

if.end:                                           ; preds = %if.end2.if.end_crit_edge, %entry.if.end_crit_edge
  %y.032 = phi i32 [ %mul, %if.end2.if.end_crit_edge ], [ %0, %entry.if.end_crit_edge ]
  %x.031 = phi i32 [ %add, %if.end2.if.end_crit_edge ], [ 0, %entry.if.end_crit_edge ]
  %len.addr.030 = phi i32 [ %sub, %if.end2.if.end_crit_edge ], [ %len, %entry.if.end_crit_edge ]
  %name.addr.029 = phi ptr [ %add.ptr, %if.end2.if.end_crit_edge ], [ %name, %entry.if.end_crit_edge ]
  %1 = tail call { i32, i32 } asm "1:\09ldr\09$0, [$2]\0A2:\0A\09.pushsection .text.fixup,\22ax\22\0A\09.align 2\0A3:\09and\09$1, $2, #0x3\0A\09bic\09$2, $2, #0x3\0A\09ldr\09$0, [$2]\0A\09lsl\09$1, $1, #0x3\0A\09lsl\09$0, $0, $1\0A\09b\092b\0A\09.popsection\0A\09.pushsection __ex_table,\22a\22\0A\09.align\093\0A\09.long\091b, 3b\0A\09.popsection", "=&r,=&r,r,*Qo"(ptr %name.addr.029, ptr elementtype(i32) %name.addr.029) #11, !srcloc !365
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %len.addr.030)
  %cmp = icmp ult i32 %len.addr.030, 4
  %asmresult.i.le = extractvalue { i32, i32 } %1, 0
  br i1 %cmp, label %for.end, label %if.end2

if.end2:                                          ; preds = %if.end
  %xor = xor i32 %asmresult.i.le, %x.031
  %xor3 = xor i32 %xor, %y.032
  %or.i = tail call i32 @llvm.fshl.i32(i32 %xor, i32 %xor, i32 7) #13
  %add = add i32 %or.i, %xor3
  %or.i23 = tail call i32 @llvm.fshl.i32(i32 %xor3, i32 %xor3, i32 20) #13
  %mul = mul i32 %or.i23, 9
  %add.ptr = getelementptr i8, ptr %name.addr.029, i32 4
  %sub = add i32 %len.addr.030, -4
  %tobool.not = icmp eq i32 %sub, 0
  br i1 %tobool.not, label %if.end2.done_crit_edge, label %if.end2.if.end_crit_edge

if.end2.if.end_crit_edge:                         ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end2.done_crit_edge:                           ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #15
  br label %done

for.end:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %asmresult.i.le.le = extractvalue { i32, i32 } %1, 0
  %mul6 = shl nuw nsw i32 %len.addr.030, 3
  %shr = lshr i32 -1, %mul6
  %neg = xor i32 %shr, -1
  %and = and i32 %asmresult.i.le.le, %neg
  %xor7 = xor i32 %and, %x.031
  br label %done

done:                                             ; preds = %for.end, %if.end2.done_crit_edge, %entry.done_crit_edge
  %y.025 = phi i32 [ %y.032, %for.end ], [ %0, %entry.done_crit_edge ], [ %mul, %if.end2.done_crit_edge ]
  %x.1 = phi i32 [ %xor7, %for.end ], [ 0, %entry.done_crit_edge ], [ %add, %if.end2.done_crit_edge ]
  %mul.i.i = mul i32 %x.1, 1640531527
  %xor.i = xor i32 %mul.i.i, %y.025
  %mul.i2.i = mul i32 %xor.i, 1640531527
  ret i32 %mul.i2.i
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i64 @hashlen_string(ptr noundef %salt, ptr noundef %name) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %salt to i32
  %1 = tail call { i32, i32 } asm "1:\09ldr\09$0, [$2]\0A2:\0A\09.pushsection .text.fixup,\22ax\22\0A\09.align 2\0A3:\09and\09$1, $2, #0x3\0A\09bic\09$2, $2, #0x3\0A\09ldr\09$0, [$2]\0A\09lsl\09$1, $1, #0x3\0A\09lsl\09$0, $0, $1\0A\09b\092b\0A\09.popsection\0A\09.pushsection __ex_table,\22a\22\0A\09.align\093\0A\09.long\091b, 3b\0A\09.popsection", "=&r,=&r,r,*Qo"(ptr %name, ptr elementtype(i32) %name) #11, !srcloc !365
  %asmresult.i37 = extractvalue { i32, i32 } %1, 0
  %or.i3038 = or i32 %asmresult.i37, 2139062143
  %add.i39 = add i32 %asmresult.i37, -16843009
  %neg.i40 = xor i32 %or.i3038, -1
  %and.i41 = and i32 %add.i39, %neg.i40
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i41)
  %tobool.i.not42 = icmp eq i32 %and.i41, 0
  br i1 %tobool.i.not42, label %entry.do.body_crit_edge, label %entry.do.end_crit_edge

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

entry.do.body_crit_edge:                          ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %do.body.do.body_crit_edge, %entry.do.body_crit_edge
  %asmresult.i46 = phi i32 [ %asmresult.i, %do.body.do.body_crit_edge ], [ %asmresult.i37, %entry.do.body_crit_edge ]
  %len.045 = phi i32 [ %add3, %do.body.do.body_crit_edge ], [ 0, %entry.do.body_crit_edge ]
  %y.044 = phi i32 [ %mul, %do.body.do.body_crit_edge ], [ %0, %entry.do.body_crit_edge ]
  %x.043 = phi i32 [ %add, %do.body.do.body_crit_edge ], [ 0, %entry.do.body_crit_edge ]
  %xor = xor i32 %asmresult.i46, %x.043
  %xor1 = xor i32 %xor, %y.044
  %or.i = tail call i32 @llvm.fshl.i32(i32 %xor, i32 %xor, i32 7) #13
  %add = add i32 %or.i, %xor1
  %or.i29 = tail call i32 @llvm.fshl.i32(i32 %xor1, i32 %xor1, i32 20) #13
  %mul = mul i32 %or.i29, 9
  %add3 = add i32 %len.045, 4
  %add.ptr = getelementptr i8, ptr %name, i32 %add3
  %2 = tail call { i32, i32 } asm "1:\09ldr\09$0, [$2]\0A2:\0A\09.pushsection .text.fixup,\22ax\22\0A\09.align 2\0A3:\09and\09$1, $2, #0x3\0A\09bic\09$2, $2, #0x3\0A\09ldr\09$0, [$2]\0A\09lsl\09$1, $1, #0x3\0A\09lsl\09$0, $0, $1\0A\09b\092b\0A\09.popsection\0A\09.pushsection __ex_table,\22a\22\0A\09.align\093\0A\09.long\091b, 3b\0A\09.popsection", "=&r,=&r,r,*Qo"(ptr %add.ptr, ptr elementtype(i32) %add.ptr) #11, !srcloc !365
  %asmresult.i = extractvalue { i32, i32 } %2, 0
  %or.i30 = or i32 %asmresult.i, 2139062143
  %add.i = add i32 %asmresult.i, -16843009
  %neg.i = xor i32 %or.i30, -1
  %and.i = and i32 %add.i, %neg.i
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %do.body.do.body_crit_edge, label %do.end.loopexit

do.body.do.body_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body

do.end.loopexit:                                  ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  %asmresult.i.le = extractvalue { i32, i32 } %2, 0
  br label %do.end

do.end:                                           ; preds = %do.end.loopexit, %entry.do.end_crit_edge
  %asmresult.i.le.pre-phi = phi i32 [ %asmresult.i37, %entry.do.end_crit_edge ], [ %asmresult.i.le, %do.end.loopexit ]
  %x.0.lcssa = phi i32 [ 0, %entry.do.end_crit_edge ], [ %add, %do.end.loopexit ]
  %y.0.lcssa = phi i32 [ %0, %entry.do.end_crit_edge ], [ %mul, %do.end.loopexit ]
  %len.0.lcssa = phi i32 [ 0, %entry.do.end_crit_edge ], [ %add3, %do.end.loopexit ]
  %or.i30.lcssa = phi i32 [ %or.i3038, %entry.do.end_crit_edge ], [ %or.i30, %do.end.loopexit ]
  %and.i32 = and i32 %asmresult.i.le.pre-phi, 2139062143
  %add.i33 = add nuw i32 %and.i32, 2139062143
  %or.i34 = or i32 %add.i33, %or.i30.lcssa
  %neg.i35 = xor i32 %or.i34, -1
  %3 = tail call i32 @llvm.ctlz.i32(i32 %neg.i35, i1 false) #13, !range !366
  %sub.i = sub nsw i32 31, %3
  %shl = shl i32 -2, %sub.i
  %and = and i32 %shl, %asmresult.i.le.pre-phi
  %xor8 = xor i32 %and, %x.0.lcssa
  call void @__sanitizer_cov_trace_const_cmp4(i32 -65537, i32 %or.i34)
  %tobool.not.i = icmp ugt i32 %or.i34, -65537
  %shr.i = lshr i32 %neg.i35, 16
  %mask.addr.0.i = select i1 %tobool.not.i, i32 %neg.i35, i32 %shr.i
  %byte.0.i = select i1 %tobool.not.i, i32 2, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %mask.addr.0.i)
  %tobool3.not.i = icmp ult i32 %mask.addr.0.i, 256
  %add4.i = zext i1 %tobool3.not.i to i32
  %cond.i = or i32 %byte.0.i, %len.0.lcssa
  %add10 = or i32 %cond.i, %add4.i
  %conv = zext i32 %add10 to i64
  %shl11 = shl nuw i64 %conv, 32
  %mul.i.i = mul i32 %xor8, 1640531527
  %xor.i = xor i32 %mul.i.i, %y.0.lcssa
  %mul.i2.i = mul i32 %xor.i, 1640531527
  %conv13 = zext i32 %mul.i2.i to i64
  %or = or i64 %shl11, %conv13
  ret i64 %or
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @filename_lookup(i32 noundef %dfd, ptr noundef %name, i32 noundef %flags, ptr nocapture noundef writeonly %path, ptr noundef readonly %root) local_unnamed_addr #0 align 64 {
entry:
  %nd = alloca %struct.nameidata, align 8
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %nd) #13
  %0 = getelementptr inbounds i8, ptr %nd, i32 8
  %1 = call ptr @memset(ptr %0, i32 255, i32 136)
  %cmp.i = icmp ugt ptr %name, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %2 = ptrtoint ptr %name to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task.i.i, align 8
  %nameidata.i.i = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 102
  %7 = ptrtoint ptr %nameidata.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %nameidata.i.i, align 8
  %internal.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 13
  %stack.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 12
  %9 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %internal.i.i, ptr %stack.i.i, align 4
  %depth.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 10
  %10 = ptrtoint ptr %depth.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %depth.i.i, align 4
  %dfd1.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 17
  %11 = ptrtoint ptr %dfd1.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %dfd, ptr %dfd1.i.i, align 4
  %name2.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 14
  %12 = ptrtoint ptr %name2.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %name, ptr %name2.i.i, align 8
  %13 = ptrtoint ptr %nd to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %nd, align 8
  %dentry.i.i = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %14 = ptrtoint ptr %dentry.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %dentry.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %8, null
  br i1 %tobool.not.i.i, label %if.end.__set_nameidata.exit.i_crit_edge, label %cond.true.i.i

if.end.__set_nameidata.exit.i_crit_edge:          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %__set_nameidata.exit.i

cond.true.i.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %total_link_count.i.i = getelementptr inbounds %struct.nameidata, ptr %8, i32 0, i32 11
  %15 = ptrtoint ptr %total_link_count.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %total_link_count.i.i, align 8
  br label %__set_nameidata.exit.i

__set_nameidata.exit.i:                           ; preds = %cond.true.i.i, %if.end.__set_nameidata.exit.i_crit_edge
  %cond.i.i = phi i32 [ %16, %cond.true.i.i ], [ 0, %if.end.__set_nameidata.exit.i_crit_edge ]
  %total_link_count4.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 11
  %17 = ptrtoint ptr %total_link_count4.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %cond.i.i, ptr %total_link_count4.i.i, align 8
  %saved.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 15
  %18 = ptrtoint ptr %saved.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %8, ptr %saved.i.i, align 4
  %19 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %task.i.i, align 8
  %nameidata7.i.i = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 102
  %21 = ptrtoint ptr %nameidata7.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %nd, ptr %nameidata7.i.i, align 8
  %state.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 5
  %22 = ptrtoint ptr %state.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 0, ptr %state.i, align 8
  %tobool.not.i = icmp eq ptr %root, null
  br i1 %tobool.not.i, label %__set_nameidata.exit.i.set_nameidata.exit_crit_edge, label %if.then.i, !prof !362

__set_nameidata.exit.i.set_nameidata.exit_crit_edge: ; preds = %__set_nameidata.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_nameidata.exit

if.then.i:                                        ; preds = %__set_nameidata.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %23 = ptrtoint ptr %state.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 1, ptr %state.i, align 8
  %root4.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2
  %24 = ptrtoint ptr %root to i32
  call void @__asan_loadN_noabort(i32 %24, i32 8)
  %25 = load i64, ptr %root, align 4
  %26 = ptrtoint ptr %root4.i to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %25, ptr %root4.i, align 8
  br label %set_nameidata.exit

set_nameidata.exit:                               ; preds = %if.then.i, %__set_nameidata.exit.i.set_nameidata.exit_crit_edge
  %or = or i32 %flags, 64
  %call3 = call fastcc i32 @path_lookupat(ptr noundef nonnull %nd, i32 noundef %or, ptr noundef %path)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -10, i32 %call3)
  %cmp = icmp eq i32 %call3, -10
  br i1 %cmp, label %if.then5, label %set_nameidata.exit.if.end7_crit_edge, !prof !360

set_nameidata.exit.if.end7_crit_edge:             ; preds = %set_nameidata.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7

if.then5:                                         ; preds = %set_nameidata.exit
  call void @__sanitizer_cov_trace_pc() #15
  %call6 = call fastcc i32 @path_lookupat(ptr noundef nonnull %nd, i32 noundef %flags, ptr noundef %path)
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %set_nameidata.exit.if.end7_crit_edge
  %retval1.0 = phi i32 [ %call6, %if.then5 ], [ %call3, %set_nameidata.exit.if.end7_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -116, i32 %retval1.0)
  %cmp8 = icmp eq i32 %retval1.0, -116
  br i1 %cmp8, label %if.then15, label %if.end7.if.end30_crit_edge, !prof !360

if.end7.if.end30_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end30

if.then15:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  %or16 = or i32 %flags, 32
  %call17 = call fastcc i32 @path_lookupat(ptr noundef nonnull %nd, i32 noundef %or16, ptr noundef %path)
  br label %if.end30

if.end30:                                         ; preds = %if.then15, %if.end7.if.end30_crit_edge
  %retval1.1 = phi i32 [ %call17, %if.then15 ], [ %retval1.0, %if.end7.if.end30_crit_edge ]
  %27 = call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 2
  %29 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %task.i, align 8
  %nameidata.i = getelementptr inbounds %struct.task_struct, ptr %30, i32 0, i32 102
  %31 = ptrtoint ptr %nameidata.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %nameidata.i, align 8
  %saved.i = getelementptr inbounds %struct.nameidata, ptr %32, i32 0, i32 15
  %33 = ptrtoint ptr %saved.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %saved.i, align 4
  store ptr %34, ptr %nameidata.i, align 8
  %tobool.not.i44 = icmp eq ptr %34, null
  br i1 %tobool.not.i44, label %if.end30.if.end.i_crit_edge, label %if.then.i45

if.end30.if.end.i_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.then.i45:                                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #15
  %total_link_count.i = getelementptr inbounds %struct.nameidata, ptr %32, i32 0, i32 11
  %35 = ptrtoint ptr %total_link_count.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %total_link_count.i, align 8
  %total_link_count4.i = getelementptr inbounds %struct.nameidata, ptr %34, i32 0, i32 11
  %37 = ptrtoint ptr %total_link_count4.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %total_link_count4.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i45, %if.end30.if.end.i_crit_edge
  %stack.i = getelementptr inbounds %struct.nameidata, ptr %32, i32 0, i32 12
  %38 = ptrtoint ptr %stack.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %stack.i, align 4
  %internal.i = getelementptr inbounds %struct.nameidata, ptr %32, i32 0, i32 13
  %cmp.not.i = icmp eq ptr %39, %internal.i
  br i1 %cmp.not.i, label %if.end.i.cleanup_crit_edge, label %if.then5.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kfree(ptr noundef %39) #13
  br label %cleanup

cleanup:                                          ; preds = %if.then5.i, %if.end.i.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ %2, %if.then ], [ %retval1.1, %if.end.i.cleanup_crit_edge ], [ %retval1.1, %if.then5.i ]
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %nd) #13
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @path_lookupat(ptr noundef %nd, i32 noundef %flags, ptr nocapture noundef writeonly %path) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @path_init(ptr noundef %nd, i32 noundef %flags)
  %and = and i32 %flags, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end13_crit_edge, label %land.lhs.true, !prof !362

entry.if.end13_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end13

land.lhs.true:                                    ; preds = %entry
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %land.lhs.true.if.end13_crit_edge, label %if.then

land.lhs.true.if.end13_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end13

if.then:                                          ; preds = %land.lhs.true
  %call4 = tail call fastcc i32 @handle_lookup_down(ptr noundef %nd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %cmp = icmp slt i32 %call4, 0
  br i1 %cmp, label %if.then11, label %if.then.if.end13_crit_edge, !prof !360

if.then.if.end13_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end13

if.then11:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %0 = inttoptr i32 %call4 to ptr
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.then.if.end13_crit_edge, %land.lhs.true.if.end13_crit_edge, %entry.if.end13_crit_edge
  %s.0 = phi ptr [ %call, %land.lhs.true.if.end13_crit_edge ], [ %0, %if.then11 ], [ %call, %if.then.if.end13_crit_edge ], [ %call, %entry.if.end13_crit_edge ]
  %last_type.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 9
  %last.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 1
  %name.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 1, i32 1
  %flags.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  br label %while.cond

while.cond:                                       ; preds = %lookup_last.exit.while.cond_crit_edge, %if.end13
  %s.1 = phi ptr [ %s.0, %if.end13 ], [ %call.i, %lookup_last.exit.while.cond_crit_edge ]
  %call14 = tail call fastcc i32 @link_path_walk(ptr noundef %s.1, ptr noundef %nd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %land.rhs, label %while.cond.if.end54_crit_edge

while.cond.if.end54_crit_edge:                    ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end54

land.rhs:                                         ; preds = %while.cond
  %1 = ptrtoint ptr %last_type.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %last_type.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp.i76 = icmp eq i32 %2, 0
  br i1 %cmp.i76, label %land.lhs.true.i, label %land.rhs.lookup_last.exit_crit_edge

land.rhs.lookup_last.exit_crit_edge:              ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #15
  br label %lookup_last.exit

land.lhs.true.i:                                  ; preds = %land.rhs
  %3 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %name.i, align 8
  %5 = ptrtoint ptr %last.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %last.i, align 8
  %arrayidx.i = getelementptr i8, ptr %4, i32 %6
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.not.i = icmp eq i8 %8, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.lookup_last.exit_crit_edge, label %if.then.i

land.lhs.true.i.lookup_last.exit_crit_edge:       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %lookup_last.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  %9 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags.i, align 4
  %or.i = or i32 %10, 3
  store i32 %or.i, ptr %flags.i, align 4
  br label %lookup_last.exit

lookup_last.exit:                                 ; preds = %if.then.i, %land.lhs.true.i.lookup_last.exit_crit_edge, %land.rhs.lookup_last.exit_crit_edge
  %call.i = tail call fastcc ptr @walk_component(ptr noundef %nd, i32 noundef 1) #13
  %cmp17.not = icmp eq ptr %call.i, null
  br i1 %cmp17.not, label %land.lhs.true19.critedge, label %lookup_last.exit.while.cond_crit_edge

lookup_last.exit.while.cond_crit_edge:            ; preds = %lookup_last.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond

land.lhs.true19.critedge:                         ; preds = %lookup_last.exit
  %11 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %flags.i, align 4
  %and21 = and i32 %12, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21)
  %tobool22.not = icmp eq i32 %and21, 0
  br i1 %tobool22.not, label %land.lhs.true19.critedge.if.end36_crit_edge, label %if.end32, !prof !362

land.lhs.true19.critedge.if.end36_crit_edge:      ; preds = %land.lhs.true19.critedge
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36

if.end32:                                         ; preds = %land.lhs.true19.critedge
  %call30 = tail call fastcc i32 @handle_lookup_down(ptr noundef %nd)
  %state = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 5
  %13 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %state, align 8
  %and31 = and i32 %14, -5
  store i32 %and31, ptr %state, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30)
  %tobool33.not = icmp eq i32 %call30, 0
  br i1 %tobool33.not, label %if.end32.if.end36_crit_edge, label %if.end32.if.end54_crit_edge

if.end32.if.end54_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end54

if.end32.if.end36_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36

if.end36:                                         ; preds = %if.end32.if.end36_crit_edge, %land.lhs.true19.critedge.if.end36_crit_edge
  %call35 = tail call fastcc i32 @complete_walk(ptr noundef %nd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35)
  %tobool37.not = icmp eq i32 %call35, 0
  br i1 %tobool37.not, label %land.lhs.true38, label %if.end36.if.end54_crit_edge

if.end36.if.end54_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end54

land.lhs.true38:                                  ; preds = %if.end36
  %15 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %flags.i, align 4
  %and40 = and i32 %16, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and40)
  %tobool41.not = icmp eq i32 %and40, 0
  br i1 %tobool41.not, label %land.lhs.true38.if.then49_crit_edge, label %if.then42

land.lhs.true38.if.then49_crit_edge:              ; preds = %land.lhs.true38
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then49

if.then42:                                        ; preds = %land.lhs.true38
  %dentry = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %17 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %dentry, align 4
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %18, align 8
  %and.i.i = and i32 %20, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %and.i.i)
  %cmp.i77 = icmp eq i32 %and.i.i, 2097152
  br i1 %cmp.i77, label %if.then42.if.then49_crit_edge, label %if.then42.if.end54_crit_edge

if.then42.if.end54_crit_edge:                     ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end54

if.then42.if.then49_crit_edge:                    ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then49

if.then49:                                        ; preds = %if.then42.if.then49_crit_edge, %land.lhs.true38.if.then49_crit_edge
  %21 = ptrtoint ptr %nd to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %nd, align 8
  %23 = ptrtoint ptr %path to i32
  call void @__asan_storeN_noabort(i32 %23, i32 8)
  store i64 %22, ptr %path, align 4
  store ptr null, ptr %nd, align 8
  %dentry53 = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %24 = ptrtoint ptr %dentry53 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr null, ptr %dentry53, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.then49, %if.then42.if.end54_crit_edge, %if.end36.if.end54_crit_edge, %if.end32.if.end54_crit_edge, %while.cond.if.end54_crit_edge
  %err.287 = phi i32 [ 0, %if.then49 ], [ -20, %if.then42.if.end54_crit_edge ], [ %call35, %if.end36.if.end54_crit_edge ], [ %call30, %if.end32.if.end54_crit_edge ], [ %call14, %while.cond.if.end54_crit_edge ]
  tail call fastcc void @terminate_walk(ptr noundef %nd)
  ret i32 %err.287
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @kern_path_locked(ptr nocapture noundef readonly %name, ptr nocapture noundef %path) local_unnamed_addr #0 align 64 {
entry:
  %last.i = alloca %struct.qstr, align 8
  %type.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @getname_kernel(ptr noundef %name)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %last.i) #13
  %0 = call ptr @memset(ptr %last.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %type.i) #13
  %1 = ptrtoint ptr %type.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %type.i, align 4, !annotation !367
  %call.i = call fastcc i32 @filename_parentat(i32 noundef -100, ptr noundef %call, i32 noundef 0, ptr noundef %path, ptr noundef nonnull %last.i, ptr noundef nonnull %type.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %2 = inttoptr i32 %call.i to ptr
  br label %__kern_path_locked.exit

if.end.i:                                         ; preds = %entry
  %3 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp.not.i = icmp eq i32 %4, 0
  %dentry.i = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %5 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dentry.i, align 4
  br i1 %cmp.not.i, label %if.end6.i, label %if.then4.i, !prof !362

if.then4.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dput(ptr noundef %6) #13
  %7 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %path, align 4
  tail call void @mntput(ptr noundef %8) #13
  br label %__kern_path_locked.exit

if.end6.i:                                        ; preds = %if.end.i
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %6, i32 0, i32 5
  %9 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %d_inode.i, align 8
  %i_rwsem.i.i = getelementptr inbounds %struct.inode, ptr %10, i32 0, i32 25
  tail call void @down_write_nested(ptr noundef %i_rwsem.i.i, i32 noundef 1) #13
  %11 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dentry.i, align 4
  %call8.i = call fastcc ptr @__lookup_hash(ptr noundef nonnull %last.i, ptr noundef %12, i32 noundef 0) #13
  %cmp.i.i = icmp ugt ptr %call8.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then10.i, label %if.end6.i.__kern_path_locked.exit_crit_edge

if.end6.i.__kern_path_locked.exit_crit_edge:      ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %__kern_path_locked.exit

if.then10.i:                                      ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #15
  %13 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dentry.i, align 4
  %d_inode12.i = getelementptr inbounds %struct.dentry, ptr %14, i32 0, i32 5
  %15 = ptrtoint ptr %d_inode12.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %d_inode12.i, align 8
  %i_rwsem.i24.i = getelementptr inbounds %struct.inode, ptr %16, i32 0, i32 25
  call void @up_write(ptr noundef %i_rwsem.i24.i) #13
  %17 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %dentry.i, align 4
  call void @dput(ptr noundef %18) #13
  %19 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %path, align 4
  call void @mntput(ptr noundef %20) #13
  br label %__kern_path_locked.exit

__kern_path_locked.exit:                          ; preds = %if.then10.i, %if.end6.i.__kern_path_locked.exit_crit_edge, %if.then4.i, %if.then.i
  %retval.0.i = phi ptr [ %2, %if.then.i ], [ inttoptr (i32 -22 to ptr), %if.then4.i ], [ %call8.i, %if.then10.i ], [ %call8.i, %if.end6.i.__kern_path_locked.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %type.i) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %last.i) #13
  %cmp.i.i3 = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i3, label %__kern_path_locked.exit.putname.exit_crit_edge, label %do.body.i

__kern_path_locked.exit.putname.exit_crit_edge:   ; preds = %__kern_path_locked.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

do.body.i:                                        ; preds = %__kern_path_locked.exit
  %refcnt.i = getelementptr inbounds %struct.filename, ptr %call, i32 0, i32 2
  %21 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %22)
  %cmp.i = icmp slt i32 %22, 1
  br i1 %cmp.i, label %do.body3.i, label %do.end7.i, !prof !360

do.body3.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 261, 0\0A.popsection", ""() #13, !srcloc !361
  unreachable

do.end7.i:                                        ; preds = %do.body.i
  %dec.i = add nsw i32 %22, -1
  %23 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %dec.i, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp9.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp9.not.i, label %if.end11.i, label %do.end7.i.putname.exit_crit_edge

do.end7.i.putname.exit_crit_edge:                 ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

if.end11.i:                                       ; preds = %do.end7.i
  %24 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %call, align 4
  %iname.i = getelementptr inbounds %struct.filename, ptr %call, i32 0, i32 4
  %cmp13.not.i = icmp eq ptr %25, %iname.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %26 = load ptr, ptr @names_cachep, align 4
  br i1 %cmp13.not.i, label %if.else.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %26, ptr noundef %25) #13
  call void @kfree(ptr noundef %call) #13
  br label %putname.exit

if.else.i:                                        ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %26, ptr noundef %call) #13
  br label %putname.exit

putname.exit:                                     ; preds = %if.else.i, %if.then14.i, %do.end7.i.putname.exit_crit_edge, %__kern_path_locked.exit.putname.exit_crit_edge
  ret ptr %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @kern_path(ptr nocapture noundef readonly %name, i32 noundef %flags, ptr nocapture noundef writeonly %path) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @getname_kernel(ptr noundef %name)
  %call1 = tail call i32 @filename_lookup(i32 noundef -100, ptr noundef %call, i32 noundef %flags, ptr noundef %path, ptr noundef null)
  %cmp.i.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %entry.putname.exit_crit_edge, label %do.body.i

entry.putname.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

do.body.i:                                        ; preds = %entry
  %refcnt.i = getelementptr inbounds %struct.filename, ptr %call, i32 0, i32 2
  %0 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %do.body3.i, label %do.end7.i, !prof !360

do.body3.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 261, 0\0A.popsection", ""() #13, !srcloc !361
  unreachable

do.end7.i:                                        ; preds = %do.body.i
  %dec.i = add nsw i32 %1, -1
  %2 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %dec.i, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp9.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp9.not.i, label %if.end11.i, label %do.end7.i.putname.exit_crit_edge

do.end7.i.putname.exit_crit_edge:                 ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

if.end11.i:                                       ; preds = %do.end7.i
  %3 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %call, align 4
  %iname.i = getelementptr inbounds %struct.filename, ptr %call, i32 0, i32 4
  %cmp13.not.i = icmp eq ptr %4, %iname.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %5 = load ptr, ptr @names_cachep, align 4
  br i1 %cmp13.not.i, label %if.else.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @kmem_cache_free(ptr noundef %5, ptr noundef %4) #13
  tail call void @kfree(ptr noundef %call) #13
  br label %putname.exit

if.else.i:                                        ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @kmem_cache_free(ptr noundef %5, ptr noundef %call) #13
  br label %putname.exit

putname.exit:                                     ; preds = %if.else.i, %if.then14.i, %do.end7.i.putname.exit_crit_edge, %entry.putname.exit_crit_edge
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vfs_path_lookup(ptr noundef %dentry, ptr noundef %mnt, ptr nocapture noundef readonly %name, i32 noundef %flags, ptr nocapture noundef writeonly %path) #0 align 64 {
entry:
  %root = alloca %struct.path, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %root) #13
  %0 = getelementptr inbounds %struct.path, ptr %root, i32 0, i32 1
  %1 = ptrtoint ptr %root to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %mnt, ptr %root, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %dentry, ptr %0, align 4
  %call = tail call ptr @getname_kernel(ptr noundef %name)
  %call3 = call i32 @filename_lookup(i32 noundef -100, ptr noundef %call, i32 noundef %flags, ptr noundef %path, ptr noundef nonnull %root)
  %cmp.i.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %entry.putname.exit_crit_edge, label %do.body.i

entry.putname.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

do.body.i:                                        ; preds = %entry
  %refcnt.i = getelementptr inbounds %struct.filename, ptr %call, i32 0, i32 2
  %3 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp.i = icmp slt i32 %4, 1
  br i1 %cmp.i, label %do.body3.i, label %do.end7.i, !prof !360

do.body3.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 261, 0\0A.popsection", ""() #13, !srcloc !361
  unreachable

do.end7.i:                                        ; preds = %do.body.i
  %dec.i = add nsw i32 %4, -1
  %5 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %dec.i, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp9.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp9.not.i, label %if.end11.i, label %do.end7.i.putname.exit_crit_edge

do.end7.i.putname.exit_crit_edge:                 ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

if.end11.i:                                       ; preds = %do.end7.i
  %6 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %call, align 4
  %iname.i = getelementptr inbounds %struct.filename, ptr %call, i32 0, i32 4
  %cmp13.not.i = icmp eq ptr %7, %iname.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %8 = load ptr, ptr @names_cachep, align 4
  br i1 %cmp13.not.i, label %if.else.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %8, ptr noundef %7) #13
  call void @kfree(ptr noundef %call) #13
  br label %putname.exit

if.else.i:                                        ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %8, ptr noundef %call) #13
  br label %putname.exit

putname.exit:                                     ; preds = %if.else.i, %if.then14.i, %do.end7.i.putname.exit_crit_edge, %entry.putname.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %root) #13
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @try_lookup_one_len(ptr noundef %name, ptr noundef %base, i32 noundef %len) #0 align 64 {
entry:
  %this = alloca %struct.qstr, align 8
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %this) #13
  %0 = call ptr @memset(ptr %this, i32 255, i32 16)
  %d_inode = getelementptr inbounds %struct.dentry, ptr %base, i32 0, i32 5
  %1 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %d_inode, align 8
  %i_rwsem.i = getelementptr inbounds %struct.inode, ptr %2, i32 0, i32 25
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %i_rwsem.i, i32 noundef 4) #13
  %3 = ptrtoint ptr %i_rwsem.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %i_rwsem.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp.i.i.not = icmp eq i32 %4, 0
  br i1 %cmp.i.i.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b49 = load i1, ptr @try_lookup_one_len.__already_done, align 1
  br i1 %.b49, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !362

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @try_lookup_one_len.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 2702, i32 noundef 9, ptr noundef null) #13
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %call37 = call fastcc i32 @lookup_one_common(ptr noundef nonnull @init_user_ns, ptr noundef %name, ptr noundef %base, i32 noundef %len, ptr noundef nonnull %this)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37)
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %if.end41, label %if.then39

if.then39:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  %5 = inttoptr i32 %call37 to ptr
  br label %cleanup

if.end41:                                         ; preds = %if.end29
  %call.i = call ptr @d_lookup(ptr noundef %base, ptr noundef nonnull %this) #13
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end41.cleanup_crit_edge, label %if.then.i

if.end41.cleanup_crit_edge:                       ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then.i:                                        ; preds = %if.end41
  %6 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %call.i, align 8
  %and.i.i = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.cleanup_crit_edge, label %d_revalidate.exit.i, !prof !362

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

d_revalidate.exit.i:                              ; preds = %if.then.i
  %d_op.i.i = getelementptr inbounds %struct.dentry, ptr %call.i, i32 0, i32 8
  %8 = ptrtoint ptr %d_op.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %d_op.i.i, align 8
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 128
  %call.i.i = call i32 %11(ptr noundef nonnull %call.i, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i.i)
  %cmp.i = icmp slt i32 %call.i.i, 1
  br i1 %cmp.i, label %if.then4.i, label %d_revalidate.exit.i.cleanup_crit_edge, !prof !360

d_revalidate.exit.i.cleanup_crit_edge:            ; preds = %d_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then4.i:                                       ; preds = %d_revalidate.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool5.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool5.not.i, label %if.then6.i, label %if.then4.i.cleanup.i_crit_edge

if.then4.i.cleanup.i_crit_edge:                   ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.i

if.then6.i:                                       ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @d_invalidate(ptr noundef nonnull %call.i) #13
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.then6.i, %if.then4.i.cleanup.i_crit_edge
  call void @dput(ptr noundef nonnull %call.i) #13
  %12 = inttoptr i32 %call.i.i to ptr
  br label %cleanup

cleanup:                                          ; preds = %cleanup.i, %d_revalidate.exit.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %if.end41.cleanup_crit_edge, %if.then39
  %retval.0 = phi ptr [ %5, %if.then39 ], [ %12, %cleanup.i ], [ null, %if.end41.cleanup_crit_edge ], [ %call.i, %d_revalidate.exit.i.cleanup_crit_edge ], [ %call.i, %if.then.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %this) #13
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @lookup_one_common(ptr noundef %mnt_userns, ptr noundef %name, ptr noundef %base, i32 noundef %len, ptr noundef %this) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %name1 = getelementptr inbounds %struct.qstr, ptr %this, i32 0, i32 1
  %0 = ptrtoint ptr %name1 to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %name, ptr %name1, align 8
  %1 = ptrtoint ptr %this to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %len, ptr %this, align 8
  %2 = ptrtoint ptr %base to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %tobool.not28.i = icmp eq i32 %len, 0
  br i1 %tobool.not28.i, label %full_name_hash.exit.thread, label %entry.if.end.i_crit_edge

entry.if.end.i_crit_edge:                         ; preds = %entry
  br label %if.end.i

full_name_hash.exit.thread:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %mul.i2.i.i63 = mul i32 %2, 1640531527
  %hash64 = getelementptr inbounds %struct.anon.16, ptr %this, i32 0, i32 1
  %3 = ptrtoint ptr %hash64 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %mul.i2.i.i63, ptr %hash64, align 4
  br label %return

if.end.i:                                         ; preds = %if.end2.i.if.end.i_crit_edge, %entry.if.end.i_crit_edge
  %y.032.i = phi i32 [ %mul.i, %if.end2.i.if.end.i_crit_edge ], [ %2, %entry.if.end.i_crit_edge ]
  %x.031.i = phi i32 [ %add.i, %if.end2.i.if.end.i_crit_edge ], [ 0, %entry.if.end.i_crit_edge ]
  %len.addr.030.i = phi i32 [ %sub.i, %if.end2.i.if.end.i_crit_edge ], [ %len, %entry.if.end.i_crit_edge ]
  %name.addr.029.i = phi ptr [ %add.ptr.i, %if.end2.i.if.end.i_crit_edge ], [ %name, %entry.if.end.i_crit_edge ]
  %4 = tail call { i32, i32 } asm "1:\09ldr\09$0, [$2]\0A2:\0A\09.pushsection .text.fixup,\22ax\22\0A\09.align 2\0A3:\09and\09$1, $2, #0x3\0A\09bic\09$2, $2, #0x3\0A\09ldr\09$0, [$2]\0A\09lsl\09$1, $1, #0x3\0A\09lsl\09$0, $0, $1\0A\09b\092b\0A\09.popsection\0A\09.pushsection __ex_table,\22a\22\0A\09.align\093\0A\09.long\091b, 3b\0A\09.popsection", "=&r,=&r,r,*Qo"(ptr %name.addr.029.i, ptr elementtype(i32) %name.addr.029.i) #11, !srcloc !365
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %len.addr.030.i)
  %cmp.i = icmp ult i32 %len.addr.030.i, 4
  %asmresult.i.le.i = extractvalue { i32, i32 } %4, 0
  br i1 %cmp.i, label %for.end.i, label %if.end2.i

if.end2.i:                                        ; preds = %if.end.i
  %xor.i = xor i32 %asmresult.i.le.i, %x.031.i
  %xor3.i = xor i32 %xor.i, %y.032.i
  %or.i.i = tail call i32 @llvm.fshl.i32(i32 %xor.i, i32 %xor.i, i32 7) #13
  %add.i = add i32 %or.i.i, %xor3.i
  %or.i23.i = tail call i32 @llvm.fshl.i32(i32 %xor3.i, i32 %xor3.i, i32 20) #13
  %mul.i = mul i32 %or.i23.i, 9
  %add.ptr.i = getelementptr i8, ptr %name.addr.029.i, i32 4
  %sub.i = add i32 %len.addr.030.i, -4
  %tobool.not.i = icmp eq i32 %sub.i, 0
  br i1 %tobool.not.i, label %if.end2.i.if.end_crit_edge, label %if.end2.i.if.end.i_crit_edge

if.end2.i.if.end.i_crit_edge:                     ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.end2.i.if.end_crit_edge:                       ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

for.end.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %asmresult.i.le.i.le = extractvalue { i32, i32 } %4, 0
  %mul6.i = shl nuw nsw i32 %len.addr.030.i, 3
  %shr.i = lshr i32 -1, %mul6.i
  %neg.i = xor i32 %shr.i, -1
  %and.i = and i32 %asmresult.i.le.i.le, %neg.i
  %xor7.i = xor i32 %and.i, %x.031.i
  br label %if.end

if.end:                                           ; preds = %for.end.i, %if.end2.i.if.end_crit_edge
  %y.025.i = phi i32 [ %y.032.i, %for.end.i ], [ %mul.i, %if.end2.i.if.end_crit_edge ]
  %x.1.i = phi i32 [ %xor7.i, %for.end.i ], [ %add.i, %if.end2.i.if.end_crit_edge ]
  %mul.i.i.i = mul i32 %x.1.i, 1640531527
  %xor.i.i = xor i32 %mul.i.i.i, %y.025.i
  %mul.i2.i.i = mul i32 %xor.i.i, 1640531527
  %hash = getelementptr inbounds %struct.anon.16, ptr %this, i32 0, i32 1
  %5 = ptrtoint ptr %hash to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %mul.i2.i.i, ptr %hash, align 4
  %6 = ptrtoint ptr %name to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %name, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 46, i8 %7)
  %cmp = icmp eq i8 %7, 46
  br i1 %cmp, label %if.then6, label %if.end.while.cond.preheader_crit_edge, !prof !360

if.end.while.cond.preheader_crit_edge:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.preheader

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %len)
  %cmp7 = icmp slt i32 %len, 2
  br i1 %cmp7, label %if.then6.return_crit_edge, label %lor.lhs.false

if.then6.return_crit_edge:                        ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

lor.lhs.false:                                    ; preds = %if.then6
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %len)
  %cmp9 = icmp eq i32 %len, 2
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false.while.cond.preheader_crit_edge

lor.lhs.false.while.cond.preheader_crit_edge:     ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.preheader

land.lhs.true:                                    ; preds = %lor.lhs.false
  %arrayidx11 = getelementptr i8, ptr %name, i32 1
  %8 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx11, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 46, i8 %9)
  %cmp13 = icmp eq i8 %9, 46
  br i1 %cmp13, label %land.lhs.true.return_crit_edge, label %land.lhs.true.while.cond.preheader_crit_edge

land.lhs.true.while.cond.preheader_crit_edge:     ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.preheader

land.lhs.true.return_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

while.cond.preheader:                             ; preds = %land.lhs.true.while.cond.preheader_crit_edge, %lor.lhs.false.while.cond.preheader_crit_edge, %if.end.while.cond.preheader_crit_edge
  br label %while.cond

while.cond:                                       ; preds = %while.body.while.cond_crit_edge, %while.cond.preheader
  %name.addr.0 = phi ptr [ %incdec.ptr, %while.body.while.cond_crit_edge ], [ %name, %while.cond.preheader ]
  %len.addr.0 = phi i32 [ %dec, %while.body.while.cond_crit_edge ], [ %len, %while.cond.preheader ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.addr.0)
  %tobool18.not = icmp eq i32 %len.addr.0, 0
  br i1 %tobool18.not, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond
  %dec = add i32 %len.addr.0, -1
  %incdec.ptr = getelementptr i8, ptr %name.addr.0, i32 1
  %10 = ptrtoint ptr %name.addr.0 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %name.addr.0, align 1
  %12 = zext i8 %11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.83)
  switch i8 %11, label %while.body.while.cond_crit_edge [
    i8 47, label %while.body.return_crit_edge
    i8 0, label %while.body.return_crit_edge89
  ]

while.body.return_crit_edge89:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

while.body.return_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

while.body.while.cond_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %13 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %base, align 8
  %and = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool27.not = icmp eq i32 %and, 0
  br i1 %tobool27.not, label %while.end.if.end37_crit_edge, label %if.then28

while.end.if.end37_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end37

if.then28:                                        ; preds = %while.end
  %d_op = getelementptr inbounds %struct.dentry, ptr %base, i32 0, i32 8
  %15 = ptrtoint ptr %d_op to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %d_op, align 8
  %d_hash = getelementptr inbounds %struct.dentry_operations, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %d_hash to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %d_hash, align 8
  %call29 = tail call i32 %18(ptr noundef %base, ptr noundef %this) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call29)
  %cmp30 = icmp sgt i32 %call29, -1
  br i1 %cmp30, label %if.then28.if.end37_crit_edge, label %if.then28.return_crit_edge

if.then28.return_crit_edge:                       ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.then28.if.end37_crit_edge:                     ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end37

if.end37:                                         ; preds = %if.then28.if.end37_crit_edge, %while.end.if.end37_crit_edge
  %d_inode = getelementptr inbounds %struct.dentry, ptr %base, i32 0, i32 5
  %19 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %d_inode, align 8
  %call38 = tail call i32 @inode_permission(ptr noundef %mnt_userns, ptr noundef %20, i32 noundef 1)
  br label %return

return:                                           ; preds = %if.end37, %if.then28.return_crit_edge, %while.body.return_crit_edge, %while.body.return_crit_edge89, %land.lhs.true.return_crit_edge, %if.then6.return_crit_edge, %full_name_hash.exit.thread
  %retval.3 = phi i32 [ %call29, %if.then28.return_crit_edge ], [ %call38, %if.end37 ], [ -13, %land.lhs.true.return_crit_edge ], [ -13, %if.then6.return_crit_edge ], [ -13, %full_name_hash.exit.thread ], [ -13, %while.body.return_crit_edge ], [ -13, %while.body.return_crit_edge89 ]
  ret i32 %retval.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @lookup_one_len(ptr noundef %name, ptr noundef %base, i32 noundef %len) #0 align 64 {
entry:
  %this = alloca %struct.qstr, align 8
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %this) #13
  %0 = call ptr @memset(ptr %this, i32 255, i32 16)
  %d_inode = getelementptr inbounds %struct.dentry, ptr %base, i32 0, i32 5
  %1 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %d_inode, align 8
  %i_rwsem.i = getelementptr inbounds %struct.inode, ptr %2, i32 0, i32 25
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %i_rwsem.i, i32 noundef 4) #13
  %3 = ptrtoint ptr %i_rwsem.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %i_rwsem.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp.i.i.not = icmp eq i32 %4, 0
  br i1 %cmp.i.i.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b54 = load i1, ptr @lookup_one_len.__already_done, align 1
  br i1 %.b54, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !362

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @lookup_one_len.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 2729, i32 noundef 9, ptr noundef null) #13
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %call37 = call fastcc i32 @lookup_one_common(ptr noundef nonnull @init_user_ns, ptr noundef %name, ptr noundef %base, i32 noundef %len, ptr noundef nonnull %this)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37)
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %if.end41, label %if.then39

if.then39:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  %5 = inttoptr i32 %call37 to ptr
  br label %cleanup

if.end41:                                         ; preds = %if.end29
  %call.i = call ptr @d_lookup(ptr noundef %base, ptr noundef nonnull %this) #13
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end41.cond.false_crit_edge, label %if.then.i

if.end41.cond.false_crit_edge:                    ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

if.then.i:                                        ; preds = %if.end41
  %6 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %call.i, align 8
  %and.i.i = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.cleanup_crit_edge, label %d_revalidate.exit.i, !prof !362

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

d_revalidate.exit.i:                              ; preds = %if.then.i
  %d_op.i.i = getelementptr inbounds %struct.dentry, ptr %call.i, i32 0, i32 8
  %8 = ptrtoint ptr %d_op.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %d_op.i.i, align 8
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 128
  %call.i.i = call i32 %11(ptr noundef nonnull %call.i, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i.i)
  %cmp.i = icmp slt i32 %call.i.i, 1
  br i1 %cmp.i, label %if.then4.i, label %d_revalidate.exit.i.cleanup_crit_edge, !prof !360

d_revalidate.exit.i.cleanup_crit_edge:            ; preds = %d_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then4.i:                                       ; preds = %d_revalidate.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool5.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool5.not.i, label %lookup_dcache.exit.thread60, label %lookup_dcache.exit

lookup_dcache.exit.thread60:                      ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @d_invalidate(ptr noundef nonnull %call.i) #13
  call void @dput(ptr noundef nonnull %call.i) #13
  br label %cond.false

lookup_dcache.exit:                               ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @dput(ptr noundef nonnull %call.i) #13
  %12 = inttoptr i32 %call.i.i to ptr
  br label %cleanup

cond.false:                                       ; preds = %lookup_dcache.exit.thread60, %if.end41.cond.false_crit_edge
  %call44 = call fastcc ptr @__lookup_slow(ptr noundef nonnull %this, ptr noundef %base, i32 noundef 0)
  br label %cleanup

cleanup:                                          ; preds = %cond.false, %lookup_dcache.exit, %d_revalidate.exit.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %if.then39
  %retval.0 = phi ptr [ %5, %if.then39 ], [ %call44, %cond.false ], [ %12, %lookup_dcache.exit ], [ %call.i, %d_revalidate.exit.i.cleanup_crit_edge ], [ %call.i, %if.then.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %this) #13
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__lookup_slow(ptr noundef %name, ptr noundef %dir, i32 noundef %flags) unnamed_addr #0 align 64 {
entry:
  %wq = alloca %struct.wait_queue_head, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %d_inode = getelementptr inbounds %struct.dentry, ptr %dir, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode, align 8
  call void @llvm.lifetime.start.p0(i64 52, ptr nonnull %wq) #13
  %2 = call ptr @memset(ptr %wq, i32 255, i32 52)
  call void @__init_waitqueue_head(ptr noundef nonnull %wq, ptr noundef nonnull @.str.55, ptr noundef nonnull @__lookup_slow.__key) #13
  %i_flags = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 4
  %3 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %i_flags, align 4
  %and = and i32 %4, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %again.preheader, label %entry.cleanup42_crit_edge, !prof !362

entry.cleanup42_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup42

again.preheader:                                  ; preds = %entry
  %call373 = call ptr @d_alloc_parallel(ptr noundef %dir, ptr noundef %name, ptr noundef nonnull %wq) #13
  %cmp.i74 = icmp ugt ptr %call373, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i74, label %again.preheader.cleanup42_crit_edge, label %again.preheader.if.end6_crit_edge

again.preheader.if.end6_crit_edge:                ; preds = %again.preheader
  br label %if.end6

again.preheader.cleanup42_crit_edge:              ; preds = %again.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup42

if.end6:                                          ; preds = %cleanup.if.end6_crit_edge, %again.preheader.if.end6_crit_edge
  %call375 = phi ptr [ %call3, %cleanup.if.end6_crit_edge ], [ %call373, %again.preheader.if.end6_crit_edge ]
  %5 = ptrtoint ptr %call375 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %call375, align 8
  %and.i = and i32 %6, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool8.not = icmp eq i32 %and.i, 0
  br i1 %tobool8.not, label %if.then17, label %if.else, !prof !360

if.then17:                                        ; preds = %if.end6
  %and.i63 = and i32 %6, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i63)
  %tobool.not.i = icmp eq i32 %and.i63, 0
  br i1 %tobool.not.i, label %if.then17.cleanup42_crit_edge, label %d_revalidate.exit, !prof !362

if.then17.cleanup42_crit_edge:                    ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup42

d_revalidate.exit:                                ; preds = %if.then17
  %d_op.i = getelementptr inbounds %struct.dentry, ptr %call375, i32 0, i32 8
  %7 = ptrtoint ptr %d_op.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %d_op.i, align 8
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 128
  %call.i = call i32 %10(ptr noundef %call375, i32 noundef %flags) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 1
  br i1 %cmp, label %if.then25, label %d_revalidate.exit.cleanup42_crit_edge, !prof !360

d_revalidate.exit.cleanup42_crit_edge:            ; preds = %d_revalidate.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup42

if.then25:                                        ; preds = %d_revalidate.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool26.not = icmp eq i32 %call.i, 0
  br i1 %tobool26.not, label %cleanup, label %if.end28

if.end28:                                         ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #15
  call void @dput(ptr noundef %call375) #13
  %11 = inttoptr i32 %call.i to ptr
  br label %cleanup42

cleanup:                                          ; preds = %if.then25
  call void @d_invalidate(ptr noundef %call375) #13
  call void @dput(ptr noundef %call375) #13
  %call3 = call ptr @d_alloc_parallel(ptr noundef %dir, ptr noundef %name, ptr noundef nonnull %wq) #13
  %cmp.i = icmp ugt ptr %call3, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %cleanup.cleanup42_crit_edge, label %cleanup.if.end6_crit_edge

cleanup.if.end6_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end6

cleanup.cleanup42_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup42

if.else:                                          ; preds = %if.end6
  %i_op = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %i_op, align 8
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 128
  %call31 = call ptr %15(ptr noundef %1, ptr noundef %call375, i32 noundef %flags) #13
  %16 = ptrtoint ptr %call375 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %call375, align 8
  %and.i.i = and i32 %17, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i64 = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i64, label %if.else.d_lookup_done.exit_crit_edge, label %if.then.i65, !prof !362

if.else.d_lookup_done.exit_crit_edge:             ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %d_lookup_done.exit

if.then.i65:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  %d_lockref.i = getelementptr inbounds %struct.dentry, ptr %call375, i32 0, i32 7
  call void @_raw_spin_lock(ptr noundef %d_lockref.i) #13
  call void @__d_lookup_done(ptr noundef %call375) #13
  call void @_raw_spin_unlock(ptr noundef %d_lockref.i) #13
  br label %d_lookup_done.exit

d_lookup_done.exit:                               ; preds = %if.then.i65, %if.else.d_lookup_done.exit_crit_edge
  %tobool32.not = icmp eq ptr %call31, null
  br i1 %tobool32.not, label %d_lookup_done.exit.cleanup42_crit_edge, label %if.then39, !prof !362

d_lookup_done.exit.cleanup42_crit_edge:           ; preds = %d_lookup_done.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup42

if.then39:                                        ; preds = %d_lookup_done.exit
  call void @__sanitizer_cov_trace_pc() #15
  call void @dput(ptr noundef %call375) #13
  br label %cleanup42

cleanup42:                                        ; preds = %if.then39, %d_lookup_done.exit.cleanup42_crit_edge, %cleanup.cleanup42_crit_edge, %if.end28, %d_revalidate.exit.cleanup42_crit_edge, %if.then17.cleanup42_crit_edge, %again.preheader.cleanup42_crit_edge, %entry.cleanup42_crit_edge
  %retval.0 = phi ptr [ %call31, %if.then39 ], [ %call375, %d_lookup_done.exit.cleanup42_crit_edge ], [ inttoptr (i32 -2 to ptr), %entry.cleanup42_crit_edge ], [ %11, %if.end28 ], [ %call373, %again.preheader.cleanup42_crit_edge ], [ %call3, %cleanup.cleanup42_crit_edge ], [ %call375, %d_revalidate.exit.cleanup42_crit_edge ], [ %call375, %if.then17.cleanup42_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 52, ptr nonnull %wq) #13
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @lookup_one(ptr noundef %mnt_userns, ptr noundef %name, ptr noundef %base, i32 noundef %len) #0 align 64 {
entry:
  %this = alloca %struct.qstr, align 8
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %this) #13
  %0 = call ptr @memset(ptr %this, i32 255, i32 16)
  %d_inode = getelementptr inbounds %struct.dentry, ptr %base, i32 0, i32 5
  %1 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %d_inode, align 8
  %i_rwsem.i = getelementptr inbounds %struct.inode, ptr %2, i32 0, i32 25
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %i_rwsem.i, i32 noundef 4) #13
  %3 = ptrtoint ptr %i_rwsem.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %i_rwsem.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp.i.i.not = icmp eq i32 %4, 0
  br i1 %cmp.i.i.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b54 = load i1, ptr @lookup_one.__already_done, align 1
  br i1 %.b54, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !362

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @lookup_one.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 2759, i32 noundef 9, ptr noundef null) #13
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %call37 = call fastcc i32 @lookup_one_common(ptr noundef %mnt_userns, ptr noundef %name, ptr noundef %base, i32 noundef %len, ptr noundef nonnull %this)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37)
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %if.end41, label %if.then39

if.then39:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  %5 = inttoptr i32 %call37 to ptr
  br label %cleanup

if.end41:                                         ; preds = %if.end29
  %call.i = call ptr @d_lookup(ptr noundef %base, ptr noundef nonnull %this) #13
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end41.cond.false_crit_edge, label %if.then.i

if.end41.cond.false_crit_edge:                    ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

if.then.i:                                        ; preds = %if.end41
  %6 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %call.i, align 8
  %and.i.i = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.cleanup_crit_edge, label %d_revalidate.exit.i, !prof !362

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

d_revalidate.exit.i:                              ; preds = %if.then.i
  %d_op.i.i = getelementptr inbounds %struct.dentry, ptr %call.i, i32 0, i32 8
  %8 = ptrtoint ptr %d_op.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %d_op.i.i, align 8
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 128
  %call.i.i = call i32 %11(ptr noundef nonnull %call.i, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i.i)
  %cmp.i = icmp slt i32 %call.i.i, 1
  br i1 %cmp.i, label %if.then4.i, label %d_revalidate.exit.i.cleanup_crit_edge, !prof !360

d_revalidate.exit.i.cleanup_crit_edge:            ; preds = %d_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then4.i:                                       ; preds = %d_revalidate.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool5.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool5.not.i, label %lookup_dcache.exit.thread60, label %lookup_dcache.exit

lookup_dcache.exit.thread60:                      ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @d_invalidate(ptr noundef nonnull %call.i) #13
  call void @dput(ptr noundef nonnull %call.i) #13
  br label %cond.false

lookup_dcache.exit:                               ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @dput(ptr noundef nonnull %call.i) #13
  %12 = inttoptr i32 %call.i.i to ptr
  br label %cleanup

cond.false:                                       ; preds = %lookup_dcache.exit.thread60, %if.end41.cond.false_crit_edge
  %call44 = call fastcc ptr @__lookup_slow(ptr noundef nonnull %this, ptr noundef %base, i32 noundef 0)
  br label %cleanup

cleanup:                                          ; preds = %cond.false, %lookup_dcache.exit, %d_revalidate.exit.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %if.then39
  %retval.0 = phi ptr [ %5, %if.then39 ], [ %call44, %cond.false ], [ %12, %lookup_dcache.exit ], [ %call.i, %d_revalidate.exit.i.cleanup_crit_edge ], [ %call.i, %if.then.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %this) #13
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @lookup_one_len_unlocked(ptr noundef %name, ptr noundef %base, i32 noundef %len) #0 align 64 {
entry:
  %this = alloca %struct.qstr, align 8
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %this) #13
  %0 = call ptr @memset(ptr %this, i32 255, i32 16)
  %call = call fastcc i32 @lookup_one_common(ptr noundef nonnull @init_user_ns, ptr noundef %name, ptr noundef %base, i32 noundef %len, ptr noundef nonnull %this)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %1 = inttoptr i32 %call to ptr
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i = call ptr @d_lookup(ptr noundef %base, ptr noundef nonnull %this) #13
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.if.then4_crit_edge, label %if.then.i

if.end.if.then4_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then4

if.then.i:                                        ; preds = %if.end
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 8
  %and.i.i = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.cleanup_crit_edge, label %d_revalidate.exit.i, !prof !362

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

d_revalidate.exit.i:                              ; preds = %if.then.i
  %d_op.i.i = getelementptr inbounds %struct.dentry, ptr %call.i, i32 0, i32 8
  %4 = ptrtoint ptr %d_op.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %d_op.i.i, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 128
  %call.i.i = call i32 %7(ptr noundef nonnull %call.i, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i.i)
  %cmp.i = icmp slt i32 %call.i.i, 1
  br i1 %cmp.i, label %if.then4.i, label %d_revalidate.exit.i.cleanup_crit_edge, !prof !360

d_revalidate.exit.i.cleanup_crit_edge:            ; preds = %d_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then4.i:                                       ; preds = %d_revalidate.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool5.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool5.not.i, label %lookup_dcache.exit.thread19, label %lookup_dcache.exit

lookup_dcache.exit.thread19:                      ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @d_invalidate(ptr noundef nonnull %call.i) #13
  call void @dput(ptr noundef nonnull %call.i) #13
  br label %if.then4

lookup_dcache.exit:                               ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @dput(ptr noundef nonnull %call.i) #13
  %8 = inttoptr i32 %call.i.i to ptr
  br label %cleanup

if.then4:                                         ; preds = %lookup_dcache.exit.thread19, %if.end.if.then4_crit_edge
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %base, i32 0, i32 5
  %9 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %d_inode.i, align 8
  %i_rwsem.i.i = getelementptr inbounds %struct.inode, ptr %10, i32 0, i32 25
  call void @down_read(ptr noundef %i_rwsem.i.i) #13
  %call.i13 = call fastcc ptr @__lookup_slow(ptr noundef nonnull %this, ptr noundef %base, i32 noundef 0) #13
  call void @up_read(ptr noundef %i_rwsem.i.i) #13
  br label %cleanup

cleanup:                                          ; preds = %if.then4, %lookup_dcache.exit, %d_revalidate.exit.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %if.then
  %retval.0 = phi ptr [ %1, %if.then ], [ %8, %lookup_dcache.exit ], [ %call.i13, %if.then4 ], [ %call.i, %d_revalidate.exit.i.cleanup_crit_edge ], [ %call.i, %if.then.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %this) #13
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @lookup_slow(ptr noundef %name, ptr noundef %dir, i32 noundef %flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %d_inode = getelementptr inbounds %struct.dentry, ptr %dir, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode, align 8
  %i_rwsem.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 25
  tail call void @down_read(ptr noundef %i_rwsem.i) #13
  %call = tail call fastcc ptr @__lookup_slow(ptr noundef %name, ptr noundef %dir, i32 noundef %flags)
  tail call void @up_read(ptr noundef %i_rwsem.i) #13
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @lookup_positive_unlocked(ptr noundef %name, ptr noundef %base, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @lookup_one_len_unlocked(ptr noundef %name, ptr noundef %base, i32 noundef %len)
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %0 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %call, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !368
  %and.i = and i32 %1, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %cmp.i11 = icmp eq i32 %and.i, 0
  br i1 %cmp.i11, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dput(ptr noundef %call) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %ret.0 = phi ptr [ %call, %entry.if.end_crit_edge ], [ inttoptr (i32 -2 to ptr), %if.then ], [ %call, %land.lhs.true.if.end_crit_edge ]
  ret ptr %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @path_pts(ptr noundef %path) local_unnamed_addr #0 align 64 {
entry:
  %jumped.i = alloca i8, align 1
  %this = alloca %struct.qstr, align 8
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %dentry = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %0 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dentry, align 4
  %call = tail call ptr @dget_parent(ptr noundef %1) #13
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %this) #13
  %2 = call ptr @memcpy(ptr %this, ptr @__const.path_pts.this, i32 16)
  %3 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %path, align 4
  %mnt_sb.i = getelementptr inbounds %struct.vfsmount, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %mnt_sb.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mnt_sb.i, align 4
  %7 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %4, align 4
  %s_root.i = getelementptr inbounds %struct.super_block, ptr %6, i32 0, i32 13
  %9 = ptrtoint ptr %s_root.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %s_root.i, align 64
  %cmp.i = icmp eq ptr %8, %10
  br i1 %cmp.i, label %entry.if.end_crit_edge, label %path_connected.exit

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

path_connected.exit:                              ; preds = %entry
  %call.i = tail call zeroext i1 @is_subdir(ptr noundef %call, ptr noundef %8) #13
  br i1 %call.i, label %path_connected.exit.if.end_crit_edge, label %if.then, !prof !362

path_connected.exit.if.end_crit_edge:             ; preds = %path_connected.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %path_connected.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dput(ptr noundef %call) #13
  br label %cleanup

if.end:                                           ; preds = %path_connected.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %11 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dentry, align 4
  tail call void @dput(ptr noundef %12) #13
  %13 = ptrtoint ptr %dentry to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call, ptr %dentry, align 4
  %call6 = call ptr @d_hash_and_lookup(ptr noundef %call, ptr noundef nonnull %this) #13
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end.cleanup_crit_edge, label %if.end9

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end9:                                          ; preds = %if.end
  %14 = ptrtoint ptr %dentry to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %call6, ptr %dentry, align 4
  call void @dput(ptr noundef %call) #13
  %15 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %path, align 4
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %jumped.i) #13
  %17 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %dentry, align 4
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %18, align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !364
  %and.i.i = and i32 %20, 458752
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end9.traverse_mounts.exit.i_crit_edge, label %if.end15.i.i, !prof !362

if.end9.traverse_mounts.exit.i_crit_edge:         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  br label %traverse_mounts.exit.i

if.end15.i.i:                                     ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  %call16.i.i = call fastcc i32 @__traverse_mounts(ptr noundef %path, i32 noundef %20, ptr noundef nonnull %jumped.i, ptr noundef null, i32 noundef 0) #13
  br label %traverse_mounts.exit.i

traverse_mounts.exit.i:                           ; preds = %if.end15.i.i, %if.end9.traverse_mounts.exit.i_crit_edge
  %21 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %path, align 4
  %cmp.not.i = icmp eq ptr %22, %16
  br i1 %cmp.not.i, label %traverse_mounts.exit.i.follow_down.exit_crit_edge, label %if.then.i

traverse_mounts.exit.i.follow_down.exit_crit_edge: ; preds = %traverse_mounts.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %follow_down.exit

if.then.i:                                        ; preds = %traverse_mounts.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @mntput(ptr noundef %16) #13
  br label %follow_down.exit

follow_down.exit:                                 ; preds = %if.then.i, %traverse_mounts.exit.i.follow_down.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %jumped.i) #13
  br label %cleanup

cleanup:                                          ; preds = %follow_down.exit, %if.end.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ -2, %if.then ], [ 0, %follow_down.exit ], [ -2, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %this) #13
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dget_parent(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @d_hash_and_lookup(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @user_path_at_empty(i32 noundef %dfd, ptr noundef %name, i32 noundef %flags, ptr nocapture noundef writeonly %path, ptr noundef %empty) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @getname_flags(ptr noundef %name, i32 noundef %flags, ptr noundef %empty)
  %call1 = tail call i32 @filename_lookup(i32 noundef %dfd, ptr noundef %call, i32 noundef %flags, ptr noundef %path, ptr noundef null)
  %cmp.i.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %entry.putname.exit_crit_edge, label %do.body.i

entry.putname.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

do.body.i:                                        ; preds = %entry
  %refcnt.i = getelementptr inbounds %struct.filename, ptr %call, i32 0, i32 2
  %0 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %do.body3.i, label %do.end7.i, !prof !360

do.body3.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 261, 0\0A.popsection", ""() #13, !srcloc !361
  unreachable

do.end7.i:                                        ; preds = %do.body.i
  %dec.i = add nsw i32 %1, -1
  %2 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %dec.i, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp9.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp9.not.i, label %if.end11.i, label %do.end7.i.putname.exit_crit_edge

do.end7.i.putname.exit_crit_edge:                 ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

if.end11.i:                                       ; preds = %do.end7.i
  %3 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %call, align 4
  %iname.i = getelementptr inbounds %struct.filename, ptr %call, i32 0, i32 4
  %cmp13.not.i = icmp eq ptr %4, %iname.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %5 = load ptr, ptr @names_cachep, align 4
  br i1 %cmp13.not.i, label %if.else.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @kmem_cache_free(ptr noundef %5, ptr noundef %4) #13
  tail call void @kfree(ptr noundef %call) #13
  br label %putname.exit

if.else.i:                                        ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @kmem_cache_free(ptr noundef %5, ptr noundef %call) #13
  br label %putname.exit

putname.exit:                                     ; preds = %if.else.i, %if.then14.i, %do.end7.i.putname.exit_crit_edge, %entry.putname.exit_crit_edge
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__check_sticky(ptr noundef %mnt_userns, ptr nocapture noundef readonly %dir, ptr noundef %inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred, align 16
  %fsuid1 = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 10
  %6 = ptrtoint ptr %fsuid1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %fsuid.sroa.0.0.copyload = load i32, ptr %fsuid1, align 4
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %7 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %i_sb.i.i, align 4
  %s_user_ns.i.i = getelementptr inbounds %struct.super_block, ptr %8, i32 0, i32 53
  %9 = ptrtoint ptr %s_user_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %s_user_ns.i.i, align 8
  %i_uid.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 2
  %11 = ptrtoint ptr %i_uid.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %.unpack.i = load i32, ptr %i_uid.i, align 4
  %12 = insertvalue [1 x i32] undef, i32 %.unpack.i, 0
  %cmp.i.i.i.i = icmp eq ptr %mnt_userns, @init_user_ns
  %cmp.i.i.i = icmp eq ptr %10, %mnt_userns
  %spec.select.i.i.i = or i1 %cmp.i.i.i.i, %cmp.i.i.i
  br i1 %spec.select.i.i.i, label %entry.i_uid_into_mnt.exit_crit_edge, label %if.end.i.i

entry.i_uid_into_mnt.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %i_uid_into_mnt.exit

if.end.i.i:                                       ; preds = %entry
  %cmp.i21.i.i = icmp eq ptr %10, @init_user_ns
  br i1 %cmp.i21.i.i, label %if.end.i.i.if.end7.i.i_crit_edge, label %if.else.i.i

if.end.i.i.if.end7.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7.i.i

if.else.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call6.i.i = tail call i32 @from_kuid(ptr noundef %10, [1 x i32] %12) #13
  br label %if.end7.i.i

if.end7.i.i:                                      ; preds = %if.else.i.i, %if.end.i.i.if.end7.i.i_crit_edge
  %uid.0.i.i = phi i32 [ %call6.i.i, %if.else.i.i ], [ %.unpack.i, %if.end.i.i.if.end7.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %uid.0.i.i)
  %cmp.i.i = icmp eq i32 %uid.0.i.i, -1
  br i1 %cmp.i.i, label %if.end7.i.i.i_uid_into_mnt.exit_crit_edge, label %if.end9.i.i

if.end7.i.i.i_uid_into_mnt.exit_crit_edge:        ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %i_uid_into_mnt.exit

if.end9.i.i:                                      ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call10.i.i = tail call i32 @make_kuid(ptr noundef %mnt_userns, i32 noundef %uid.0.i.i) #13
  br label %i_uid_into_mnt.exit

i_uid_into_mnt.exit:                              ; preds = %if.end9.i.i, %if.end7.i.i.i_uid_into_mnt.exit_crit_edge, %entry.i_uid_into_mnt.exit_crit_edge
  %retval.sroa.0.0.i.i = phi i32 [ %call10.i.i, %if.end9.i.i ], [ -1, %if.end7.i.i.i_uid_into_mnt.exit_crit_edge ], [ %.unpack.i, %entry.i_uid_into_mnt.exit_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.sroa.0.0.i.i, i32 %fsuid.sroa.0.0.copyload)
  %cmp.i = icmp eq i32 %retval.sroa.0.0.i.i, %fsuid.sroa.0.0.copyload
  br i1 %cmp.i, label %i_uid_into_mnt.exit.cleanup_crit_edge, label %if.end

i_uid_into_mnt.exit.cleanup_crit_edge:            ; preds = %i_uid_into_mnt.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %i_uid_into_mnt.exit
  %i_sb.i.i24 = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 8
  %13 = ptrtoint ptr %i_sb.i.i24 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %i_sb.i.i24, align 4
  %s_user_ns.i.i25 = getelementptr inbounds %struct.super_block, ptr %14, i32 0, i32 53
  %15 = ptrtoint ptr %s_user_ns.i.i25 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %s_user_ns.i.i25, align 8
  %i_uid.i26 = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 2
  %17 = ptrtoint ptr %i_uid.i26 to i32
  call void @__asan_load4_noabort(i32 %17)
  %.unpack.i27 = load i32, ptr %i_uid.i26, align 4
  %18 = insertvalue [1 x i32] undef, i32 %.unpack.i27, 0
  %cmp.i.i.i29 = icmp eq ptr %16, %mnt_userns
  %spec.select.i.i.i30 = or i1 %cmp.i.i.i.i, %cmp.i.i.i29
  br i1 %spec.select.i.i.i30, label %if.end.i_uid_into_mnt.exit41_crit_edge, label %if.end.i.i32

if.end.i_uid_into_mnt.exit41_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %i_uid_into_mnt.exit41

if.end.i.i32:                                     ; preds = %if.end
  %cmp.i21.i.i31 = icmp eq ptr %16, @init_user_ns
  br i1 %cmp.i21.i.i31, label %if.end.i.i32.if.end7.i.i37_crit_edge, label %if.else.i.i34

if.end.i.i32.if.end7.i.i37_crit_edge:             ; preds = %if.end.i.i32
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7.i.i37

if.else.i.i34:                                    ; preds = %if.end.i.i32
  call void @__sanitizer_cov_trace_pc() #15
  %call6.i.i33 = tail call i32 @from_kuid(ptr noundef %16, [1 x i32] %18) #13
  br label %if.end7.i.i37

if.end7.i.i37:                                    ; preds = %if.else.i.i34, %if.end.i.i32.if.end7.i.i37_crit_edge
  %uid.0.i.i35 = phi i32 [ %call6.i.i33, %if.else.i.i34 ], [ %.unpack.i27, %if.end.i.i32.if.end7.i.i37_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %uid.0.i.i35)
  %cmp.i.i36 = icmp eq i32 %uid.0.i.i35, -1
  br i1 %cmp.i.i36, label %if.end7.i.i37.i_uid_into_mnt.exit41_crit_edge, label %if.end9.i.i39

if.end7.i.i37.i_uid_into_mnt.exit41_crit_edge:    ; preds = %if.end7.i.i37
  call void @__sanitizer_cov_trace_pc() #15
  br label %i_uid_into_mnt.exit41

if.end9.i.i39:                                    ; preds = %if.end7.i.i37
  call void @__sanitizer_cov_trace_pc() #15
  %call10.i.i38 = tail call i32 @make_kuid(ptr noundef %mnt_userns, i32 noundef %uid.0.i.i35) #13
  br label %i_uid_into_mnt.exit41

i_uid_into_mnt.exit41:                            ; preds = %if.end9.i.i39, %if.end7.i.i37.i_uid_into_mnt.exit41_crit_edge, %if.end.i_uid_into_mnt.exit41_crit_edge
  %retval.sroa.0.0.i.i40 = phi i32 [ %call10.i.i38, %if.end9.i.i39 ], [ -1, %if.end7.i.i37.i_uid_into_mnt.exit41_crit_edge ], [ %.unpack.i27, %if.end.i_uid_into_mnt.exit41_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.sroa.0.0.i.i40, i32 %fsuid.sroa.0.0.copyload)
  %cmp.i42 = icmp eq i32 %retval.sroa.0.0.i.i40, %fsuid.sroa.0.0.copyload
  br i1 %cmp.i42, label %i_uid_into_mnt.exit41.cleanup_crit_edge, label %if.end13

i_uid_into_mnt.exit41.cleanup_crit_edge:          ; preds = %i_uid_into_mnt.exit41
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end13:                                         ; preds = %i_uid_into_mnt.exit41
  call void @__sanitizer_cov_trace_pc() #15
  %call14 = tail call zeroext i1 @capable_wrt_inode_uidgid(ptr noundef %mnt_userns, ptr noundef %inode, i32 noundef 3) #13
  %lnot = xor i1 %call14, true
  %lnot.ext = zext i1 %lnot to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %i_uid_into_mnt.exit41.cleanup_crit_edge, %i_uid_into_mnt.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %lnot.ext, %if.end13 ], [ 0, %i_uid_into_mnt.exit.cleanup_crit_edge ], [ 0, %i_uid_into_mnt.exit41.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @lock_rename(ptr noundef %p1, ptr noundef %p2) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp eq ptr %p1, %p2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %d_inode = getelementptr inbounds %struct.dentry, ptr %p1, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode, align 8
  %i_rwsem.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 25
  tail call void @down_write_nested(ptr noundef %i_rwsem.i, i32 noundef 1) #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %d_sb = getelementptr inbounds %struct.dentry, ptr %p1, i32 0, i32 9
  %2 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %d_sb, align 4
  %s_vfs_rename_mutex = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 43
  tail call void @mutex_lock_nested(ptr noundef %s_vfs_rename_mutex, i32 noundef 0) #13
  %call = tail call ptr @d_ancestor(ptr noundef %p2, ptr noundef %p1) #13
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.end4, label %if.then1

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %d_inode2 = getelementptr inbounds %struct.dentry, ptr %p2, i32 0, i32 5
  %4 = ptrtoint ptr %d_inode2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %d_inode2, align 8
  %i_rwsem.i28 = getelementptr inbounds %struct.inode, ptr %5, i32 0, i32 25
  tail call void @down_write_nested(ptr noundef %i_rwsem.i28, i32 noundef 1) #13
  %d_inode3 = getelementptr inbounds %struct.dentry, ptr %p1, i32 0, i32 5
  %6 = ptrtoint ptr %d_inode3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %d_inode3, align 8
  %i_rwsem.i29 = getelementptr inbounds %struct.inode, ptr %7, i32 0, i32 25
  tail call void @down_write_nested(ptr noundef %i_rwsem.i29, i32 noundef 2) #13
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %call5 = tail call ptr @d_ancestor(ptr noundef %p1, ptr noundef %p2) #13
  %tobool6.not = icmp eq ptr %call5, null
  %d_inode11 = getelementptr inbounds %struct.dentry, ptr %p1, i32 0, i32 5
  %8 = ptrtoint ptr %d_inode11 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %d_inode11, align 8
  %i_rwsem.i32 = getelementptr inbounds %struct.inode, ptr %9, i32 0, i32 25
  tail call void @down_write_nested(ptr noundef %i_rwsem.i32, i32 noundef 1) #13
  %d_inode12 = getelementptr inbounds %struct.dentry, ptr %p2, i32 0, i32 5
  %10 = ptrtoint ptr %d_inode12 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %d_inode12, align 8
  %i_rwsem.i33 = getelementptr inbounds %struct.inode, ptr %11, i32 0, i32 25
  br i1 %tobool6.not, label %if.end10, label %if.then7

if.then7:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @down_write_nested(ptr noundef %i_rwsem.i33, i32 noundef 2) #13
  br label %cleanup

if.end10:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @down_write_nested(ptr noundef %i_rwsem.i33, i32 noundef 5) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %if.then7, %if.then1, %if.then
  %retval.0 = phi ptr [ null, %if.then ], [ %call, %if.then1 ], [ %call5, %if.then7 ], [ null, %if.end10 ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @d_ancestor(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @unlock_rename(ptr noundef readonly %p1, ptr noundef readonly %p2) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %d_inode = getelementptr inbounds %struct.dentry, ptr %p1, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode, align 8
  %i_rwsem.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 25
  tail call void @up_write(ptr noundef %i_rwsem.i) #13
  %cmp.not = icmp eq ptr %p1, %p2
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %d_inode1 = getelementptr inbounds %struct.dentry, ptr %p2, i32 0, i32 5
  %2 = ptrtoint ptr %d_inode1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %d_inode1, align 8
  %i_rwsem.i5 = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 25
  tail call void @up_write(ptr noundef %i_rwsem.i5) #13
  %d_sb = getelementptr inbounds %struct.dentry, ptr %p1, i32 0, i32 9
  %4 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %d_sb, align 4
  %s_vfs_rename_mutex = getelementptr inbounds %struct.super_block, ptr %5, i32 0, i32 43
  tail call void @mutex_unlock(ptr noundef %s_vfs_rename_mutex) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vfs_create(ptr noundef %mnt_userns, ptr noundef %dir, ptr noundef %dentry, i16 noundef zeroext %mode, i1 noundef zeroext %want_excl) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.end.i, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %i_flags.i = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 4
  %2 = ptrtoint ptr %i_flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %i_flags.i, align 4
  %and.i = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %if.end3.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end3.i:                                        ; preds = %if.end.i
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 8
  %4 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %i_sb.i, align 4
  %call.i = tail call fastcc zeroext i1 @fsuidgid_has_mapping(ptr noundef %5, ptr noundef %mnt_userns) #13
  br i1 %call.i, label %may_create.exit, label %if.end3.i.cleanup_crit_edge

if.end3.i.cleanup_crit_edge:                      ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

may_create.exit:                                  ; preds = %if.end3.i
  %call6.i = tail call i32 @inode_permission(ptr noundef %mnt_userns, ptr noundef %dir, i32 noundef 3) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool.not = icmp eq i32 %call6.i, 0
  br i1 %tobool.not, label %if.end, label %may_create.exit.cleanup_crit_edge

may_create.exit.cleanup_crit_edge:                ; preds = %may_create.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %may_create.exit
  %i_op = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 7
  %6 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %i_op, align 8
  %create = getelementptr inbounds %struct.inode_operations, ptr %7, i32 0, i32 5
  %8 = ptrtoint ptr %create to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %create, align 4
  %tobool1.not = icmp eq ptr %9, null
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %10 = and i16 %mode, 4095
  %11 = or i16 %10, -32768
  %call7 = tail call i32 @security_inode_create(ptr noundef %dir, ptr noundef %dentry, i16 noundef zeroext %11) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.end10, label %if.end3.cleanup_crit_edge

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end10:                                         ; preds = %if.end3
  %12 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %i_op, align 8
  %create12 = getelementptr inbounds %struct.inode_operations, ptr %13, i32 0, i32 5
  %14 = ptrtoint ptr %create12 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %create12, align 4
  %call14 = tail call i32 %15(ptr noundef %mnt_userns, ptr noundef %dir, ptr noundef %dentry, i16 noundef zeroext %11, i1 noundef zeroext %want_excl) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.then16, label %if.end10.cleanup_crit_edge

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then16:                                        ; preds = %if.end10
  %16 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %i_sb.i, align 4
  %s_fsnotify_connectors.i.i.i = getelementptr inbounds %struct.super_block, ptr %17, i32 0, i32 48
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i.i.i, i32 noundef 4) #13
  %18 = ptrtoint ptr %s_fsnotify_connectors.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %s_fsnotify_connectors.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %cmp.i.i.i = icmp eq i32 %19, 0
  br i1 %cmp.i.i.i, label %if.then16.cleanup_crit_edge, label %if.end.i.i.i

if.then16.cleanup_crit_edge:                      ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i.i.i:                                     ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #15
  %d_name.i.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 4
  %call1.i.i.i = tail call i32 @fsnotify(i32 noundef 256, ptr noundef %dentry, i32 noundef 3, ptr noundef %dir, ptr noundef %d_name.i.i, ptr noundef null, i32 noundef 0) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i.i, %if.then16.cleanup_crit_edge, %if.end10.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %may_create.exit.cleanup_crit_edge, %if.end3.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6.i, %may_create.exit.cleanup_crit_edge ], [ -13, %if.end.cleanup_crit_edge ], [ %call7, %if.end3.cleanup_crit_edge ], [ %call14, %if.end10.cleanup_crit_edge ], [ 0, %if.then16.cleanup_crit_edge ], [ 0, %if.end.i.i.i ], [ -75, %if.end3.i.cleanup_crit_edge ], [ -2, %if.end.i.cleanup_crit_edge ], [ -17, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_inode_create(ptr noundef, ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @fsnotify_create(ptr noundef %dir, ptr noundef %dentry) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb.i.i, align 4
  %s_fsnotify_connectors.i.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 48
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i.i, i32 noundef 4) #13
  %2 = ptrtoint ptr %s_fsnotify_connectors.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %s_fsnotify_connectors.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.i.i = icmp eq i32 %3, 0
  br i1 %cmp.i.i, label %entry.fsnotify_dirent.exit_crit_edge, label %if.end.i.i

entry.fsnotify_dirent.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %fsnotify_dirent.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %d_name.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 4
  %call1.i.i = tail call i32 @fsnotify(i32 noundef 256, ptr noundef %dentry, i32 noundef 3, ptr noundef %dir, ptr noundef %d_name.i, ptr noundef null, i32 noundef 0) #13
  br label %fsnotify_dirent.exit

fsnotify_dirent.exit:                             ; preds = %if.end.i.i, %entry.fsnotify_dirent.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vfs_mkobj(ptr noundef %dentry, i16 noundef zeroext %mode, ptr nocapture noundef readonly %f, ptr noundef %arg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %d_parent = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 3
  %0 = ptrtoint ptr %d_parent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_parent, align 8
  %d_inode = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %d_inode, align 8
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %4 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %d_inode.i, align 8
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.end.i, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %i_flags.i = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 4
  %6 = ptrtoint ptr %i_flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %i_flags.i, align 4
  %and.i = and i32 %7, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %if.end3.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end3.i:                                        ; preds = %if.end.i
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 8
  %8 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %i_sb.i, align 4
  %s_user_ns.i = getelementptr inbounds %struct.super_block, ptr %9, i32 0, i32 53
  %10 = ptrtoint ptr %s_user_ns.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %s_user_ns.i, align 8
  %12 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 99
  %16 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %cred.i.i, align 16
  %fsuid.i.i = getelementptr inbounds %struct.cred, ptr %17, i32 0, i32 10
  %18 = ptrtoint ptr %fsuid.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %agg.tmp.sroa.0.0.copyload.i.i = load i32, ptr %fsuid.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %agg.tmp.sroa.0.0.copyload.i.i)
  %cmp.i.not.i = icmp eq i32 %agg.tmp.sroa.0.0.copyload.i.i, -1
  br i1 %cmp.i.not.i, label %if.end3.i.cleanup_crit_edge, label %if.end.i27

if.end3.i.cleanup_crit_edge:                      ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i27:                                       ; preds = %if.end3.i
  %fsgid.i.i = getelementptr inbounds %struct.cred, ptr %17, i32 0, i32 11
  %19 = ptrtoint ptr %fsgid.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %agg.tmp.sroa.0.0.copyload.i32.i = load i32, ptr %fsgid.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %agg.tmp.sroa.0.0.copyload.i32.i)
  %cmp.i45.not.i = icmp eq i32 %agg.tmp.sroa.0.0.copyload.i32.i, -1
  br i1 %cmp.i45.not.i, label %if.end.i27.cleanup_crit_edge, label %if.end9.i

if.end.i27.cleanup_crit_edge:                     ; preds = %if.end.i27
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end9.i:                                        ; preds = %if.end.i27
  %.fca.0.insert2052.i = insertvalue [1 x i32] undef, i32 %agg.tmp.sroa.0.0.copyload.i.i, 0
  %call.i.i = tail call i32 @from_kuid(ptr noundef %11, [1 x i32] %.fca.0.insert2052.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i.i)
  %cmp.i46.not.i = icmp eq i32 %call.i.i, -1
  br i1 %cmp.i46.not.i, label %if.end9.i.cleanup_crit_edge, label %fsuidgid_has_mapping.exit

if.end9.i.cleanup_crit_edge:                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

fsuidgid_has_mapping.exit:                        ; preds = %if.end9.i
  %.fca.0.insert60.i = insertvalue [1 x i32] undef, i32 %agg.tmp.sroa.0.0.copyload.i32.i, 0
  %call.i47.i = tail call i32 @from_kgid(ptr noundef %11, [1 x i32] %.fca.0.insert60.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i47.i)
  %cmp.i48.i.not = icmp eq i32 %call.i47.i, -1
  br i1 %cmp.i48.i.not, label %fsuidgid_has_mapping.exit.cleanup_crit_edge, label %may_create.exit

fsuidgid_has_mapping.exit.cleanup_crit_edge:      ; preds = %fsuidgid_has_mapping.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

may_create.exit:                                  ; preds = %fsuidgid_has_mapping.exit
  %call6.i = tail call i32 @inode_permission(ptr noundef nonnull @init_user_ns, ptr noundef %3, i32 noundef 3) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool.not = icmp eq i32 %call6.i, 0
  br i1 %tobool.not, label %if.end, label %may_create.exit.cleanup_crit_edge

may_create.exit.cleanup_crit_edge:                ; preds = %may_create.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %may_create.exit
  %20 = and i16 %mode, 4095
  %21 = or i16 %20, -32768
  %call4 = tail call i32 @security_inode_create(ptr noundef %3, ptr noundef %dentry, i16 noundef zeroext %21) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.end7, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %call8 = tail call i32 %f(ptr noundef %dentry, i16 noundef zeroext %21, ptr noundef %arg) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.then10, label %if.end7.cleanup_crit_edge

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then10:                                        ; preds = %if.end7
  %22 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %i_sb.i, align 4
  %s_fsnotify_connectors.i.i.i = getelementptr inbounds %struct.super_block, ptr %23, i32 0, i32 48
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i.i.i, i32 noundef 4) #13
  %24 = ptrtoint ptr %s_fsnotify_connectors.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %s_fsnotify_connectors.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp.i.i.i = icmp eq i32 %25, 0
  br i1 %cmp.i.i.i, label %if.then10.cleanup_crit_edge, label %if.end.i.i.i

if.then10.cleanup_crit_edge:                      ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i.i.i:                                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #15
  %d_name.i.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 4
  %call1.i.i.i = tail call i32 @fsnotify(i32 noundef 256, ptr noundef %dentry, i32 noundef 3, ptr noundef %3, ptr noundef %d_name.i.i, ptr noundef null, i32 noundef 0) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i.i, %if.then10.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %if.end.cleanup_crit_edge, %may_create.exit.cleanup_crit_edge, %fsuidgid_has_mapping.exit.cleanup_crit_edge, %if.end9.i.cleanup_crit_edge, %if.end.i27.cleanup_crit_edge, %if.end3.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6.i, %may_create.exit.cleanup_crit_edge ], [ %call4, %if.end.cleanup_crit_edge ], [ %call8, %if.end7.cleanup_crit_edge ], [ 0, %if.then10.cleanup_crit_edge ], [ 0, %if.end.i.i.i ], [ -75, %fsuidgid_has_mapping.exit.cleanup_crit_edge ], [ -2, %if.end.i.cleanup_crit_edge ], [ -17, %entry.cleanup_crit_edge ], [ -75, %if.end3.i.cleanup_crit_edge ], [ -75, %if.end.i27.cleanup_crit_edge ], [ -75, %if.end9.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @may_open_dev(ptr nocapture noundef readonly %path) local_unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %path, align 4
  %mnt_flags = getelementptr inbounds %struct.vfsmount, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mnt_flags, align 4
  %and = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.rhs, label %entry.land.end_crit_edge

entry.land.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.end

land.rhs:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %mnt_sb = getelementptr inbounds %struct.vfsmount, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mnt_sb, align 4
  %s_iflags = getelementptr inbounds %struct.super_block, ptr %5, i32 0, i32 11
  %6 = ptrtoint ptr %s_iflags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %s_iflags, align 8
  %and2 = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry.land.end_crit_edge
  %8 = phi i1 [ false, %entry.land.end_crit_edge ], [ %tobool3.not, %land.rhs ]
  ret i1 %8
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @vfs_tmpfile(ptr noundef %mnt_userns, ptr noundef %dentry, i16 noundef zeroext %mode, i32 noundef %open_flag) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %d_inode = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode, align 8
  %call = tail call i32 @inode_permission(ptr noundef %mnt_userns, ptr noundef %1, i32 noundef 3)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.out_err_crit_edge

entry.out_err_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_err

if.end:                                           ; preds = %entry
  %i_op = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_op, align 8
  %tmpfile = getelementptr inbounds %struct.inode_operations, ptr %3, i32 0, i32 19
  %4 = ptrtoint ptr %tmpfile to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %tmpfile, align 4
  %tobool1.not = icmp eq ptr %5, null
  br i1 %tobool1.not, label %if.end.out_err_crit_edge, label %if.end3

if.end.out_err_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_err

if.end3:                                          ; preds = %if.end
  %call4 = tail call ptr @d_alloc(ptr noundef %dentry, ptr noundef nonnull @slash_name) #13
  %tobool5.not = icmp eq ptr %call4, null
  br i1 %tobool5.not, label %if.end3.out_err_crit_edge, label %if.end10, !prof !360

if.end3.out_err_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_err

if.end10:                                         ; preds = %if.end3
  %6 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %i_op, align 8
  %tmpfile12 = getelementptr inbounds %struct.inode_operations, ptr %7, i32 0, i32 19
  %8 = ptrtoint ptr %tmpfile12 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %tmpfile12, align 4
  %call13 = tail call i32 %9(ptr noundef %mnt_userns, ptr noundef %1, ptr noundef nonnull %call4, i16 noundef zeroext %mode) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.end16, label %if.end10.out_err_crit_edge

if.end10.out_err_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_err

if.end16:                                         ; preds = %if.end10
  %d_inode17 = getelementptr inbounds %struct.dentry, ptr %call4, i32 0, i32 5
  %10 = ptrtoint ptr %d_inode17 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %d_inode17, align 8
  %tobool18.not = icmp eq ptr %11, null
  br i1 %tobool18.not, label %if.end16.out_err_crit_edge, label %if.end28, !prof !360

if.end16.out_err_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_err

if.end28:                                         ; preds = %if.end16
  %and = and i32 %open_flag, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool29.not = icmp eq i32 %and, 0
  br i1 %tobool29.not, label %if.then30, label %if.end28.if.end32_crit_edge

if.end28.if.end32_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end32

if.then30:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  %i_lock = getelementptr inbounds %struct.inode, ptr %11, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #13
  %i_state = getelementptr inbounds %struct.inode, ptr %11, i32 0, i32 24
  %12 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %i_state, align 8
  %or = or i32 %13, 1024
  store i32 %or, ptr %i_state, align 8
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #13
  br label %if.end32

if.end32:                                         ; preds = %if.then30, %if.end28.if.end32_crit_edge
  tail call void @ima_post_create_tmpfile(ptr noundef %mnt_userns, ptr noundef nonnull %11) #13
  br label %cleanup

out_err:                                          ; preds = %if.end16.out_err_crit_edge, %if.end10.out_err_crit_edge, %if.end3.out_err_crit_edge, %if.end.out_err_crit_edge, %entry.out_err_crit_edge
  %child.0 = phi ptr [ null, %entry.out_err_crit_edge ], [ null, %if.end3.out_err_crit_edge ], [ %call4, %if.end10.out_err_crit_edge ], [ %call4, %if.end16.out_err_crit_edge ], [ null, %if.end.out_err_crit_edge ]
  %error.0 = phi i32 [ %call, %entry.out_err_crit_edge ], [ -12, %if.end3.out_err_crit_edge ], [ %call13, %if.end10.out_err_crit_edge ], [ -2, %if.end16.out_err_crit_edge ], [ -95, %if.end.out_err_crit_edge ]
  tail call void @dput(ptr noundef %child.0) #13
  %14 = inttoptr i32 %error.0 to ptr
  br label %cleanup

cleanup:                                          ; preds = %out_err, %if.end32
  %retval.0 = phi ptr [ %14, %out_err ], [ %call4, %if.end32 ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @d_alloc(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ima_post_create_tmpfile(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @do_filp_open(i32 noundef %dfd, ptr noundef %pathname, ptr nocapture noundef readonly %op) local_unnamed_addr #0 align 64 {
entry:
  %nd = alloca %struct.nameidata, align 8
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %nd) #13
  %0 = getelementptr inbounds i8, ptr %nd, i32 8
  %1 = call ptr @memset(ptr %0, i32 255, i32 136)
  %lookup_flags = getelementptr inbounds %struct.open_flags, ptr %op, i32 0, i32 4
  %2 = ptrtoint ptr %lookup_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %lookup_flags, align 4
  %4 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task.i.i, align 8
  %nameidata.i.i = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 102
  %8 = ptrtoint ptr %nameidata.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %nameidata.i.i, align 8
  %internal.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 13
  %stack.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 12
  %10 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %internal.i.i, ptr %stack.i.i, align 4
  %depth.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 10
  %11 = ptrtoint ptr %depth.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %depth.i.i, align 4
  %dfd1.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 17
  %12 = ptrtoint ptr %dfd1.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %dfd, ptr %dfd1.i.i, align 4
  %name2.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 14
  %13 = ptrtoint ptr %name2.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %pathname, ptr %name2.i.i, align 8
  %14 = ptrtoint ptr %nd to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %nd, align 8
  %dentry.i.i = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %15 = ptrtoint ptr %dentry.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %dentry.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i, label %entry.set_nameidata.exit_crit_edge, label %cond.true.i.i

entry.set_nameidata.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_nameidata.exit

cond.true.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %total_link_count.i.i = getelementptr inbounds %struct.nameidata, ptr %9, i32 0, i32 11
  %16 = ptrtoint ptr %total_link_count.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %total_link_count.i.i, align 8
  br label %set_nameidata.exit

set_nameidata.exit:                               ; preds = %cond.true.i.i, %entry.set_nameidata.exit_crit_edge
  %cond.i.i = phi i32 [ %17, %cond.true.i.i ], [ 0, %entry.set_nameidata.exit_crit_edge ]
  %total_link_count4.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 11
  %18 = ptrtoint ptr %total_link_count4.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %cond.i.i, ptr %total_link_count4.i.i, align 8
  %saved.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 15
  %19 = ptrtoint ptr %saved.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %9, ptr %saved.i.i, align 4
  %20 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %task.i.i, align 8
  %nameidata7.i.i = getelementptr inbounds %struct.task_struct, ptr %21, i32 0, i32 102
  %22 = ptrtoint ptr %nameidata7.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %nd, ptr %nameidata7.i.i, align 8
  %state.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 5
  %23 = ptrtoint ptr %state.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 0, ptr %state.i, align 8
  %or = or i32 %3, 64
  %call = call fastcc ptr @path_openat(ptr noundef nonnull %nd, ptr noundef %op, i32 noundef %or)
  %cmp = icmp eq ptr %call, inttoptr (i32 -10 to ptr)
  br i1 %cmp, label %if.then, label %set_nameidata.exit.if.end_crit_edge, !prof !360

set_nameidata.exit.if.end_crit_edge:              ; preds = %set_nameidata.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %set_nameidata.exit
  call void @__sanitizer_cov_trace_pc() #15
  %call3 = call fastcc ptr @path_openat(ptr noundef nonnull %nd, ptr noundef %op, i32 noundef %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %set_nameidata.exit.if.end_crit_edge
  %filp.0 = phi ptr [ %call3, %if.then ], [ %call, %set_nameidata.exit.if.end_crit_edge ]
  %cmp5 = icmp eq ptr %filp.0, inttoptr (i32 -116 to ptr)
  br i1 %cmp5, label %if.then12, label %if.end.if.end15_crit_edge, !prof !360

if.end.if.end15_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end15

if.then12:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %or13 = or i32 %3, 32
  %call14 = call fastcc ptr @path_openat(ptr noundef nonnull %nd, ptr noundef %op, i32 noundef %or13)
  br label %if.end15

if.end15:                                         ; preds = %if.then12, %if.end.if.end15_crit_edge
  %filp.1 = phi ptr [ %call14, %if.then12 ], [ %filp.0, %if.end.if.end15_crit_edge ]
  %24 = call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 2
  %26 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %task.i, align 8
  %nameidata.i = getelementptr inbounds %struct.task_struct, ptr %27, i32 0, i32 102
  %28 = ptrtoint ptr %nameidata.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %nameidata.i, align 8
  %saved.i = getelementptr inbounds %struct.nameidata, ptr %29, i32 0, i32 15
  %30 = ptrtoint ptr %saved.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %saved.i, align 4
  store ptr %31, ptr %nameidata.i, align 8
  %tobool.not.i = icmp eq ptr %31, null
  br i1 %tobool.not.i, label %if.end15.if.end.i_crit_edge, label %if.then.i

if.end15.if.end.i_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.then.i:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #15
  %total_link_count.i = getelementptr inbounds %struct.nameidata, ptr %29, i32 0, i32 11
  %32 = ptrtoint ptr %total_link_count.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %total_link_count.i, align 8
  %total_link_count4.i = getelementptr inbounds %struct.nameidata, ptr %31, i32 0, i32 11
  %34 = ptrtoint ptr %total_link_count4.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %total_link_count4.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end15.if.end.i_crit_edge
  %stack.i = getelementptr inbounds %struct.nameidata, ptr %29, i32 0, i32 12
  %35 = ptrtoint ptr %stack.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %stack.i, align 4
  %internal.i = getelementptr inbounds %struct.nameidata, ptr %29, i32 0, i32 13
  %cmp.not.i = icmp eq ptr %36, %internal.i
  br i1 %cmp.not.i, label %if.end.i.restore_nameidata.exit_crit_edge, label %if.then5.i

if.end.i.restore_nameidata.exit_crit_edge:        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %restore_nameidata.exit

if.then5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kfree(ptr noundef %36) #13
  br label %restore_nameidata.exit

restore_nameidata.exit:                           ; preds = %if.then5.i, %if.end.i.restore_nameidata.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %nd) #13
  ret ptr %filp.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @path_openat(ptr noundef %nd, ptr nocapture noundef readonly %op, i32 noundef %flags) unnamed_addr #0 align 64 {
entry:
  %wq.i.i = alloca %struct.wait_queue_head, align 4
  %seq.i = alloca i32, align 4
  %inode.i = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %op, align 4
  %2 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 99
  %6 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cred, align 16
  %call1 = tail call ptr @alloc_empty_file(i32 noundef %1, ptr noundef %7) #13
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %f_flags = getelementptr inbounds %struct.file, ptr %call1, i32 0, i32 7
  %8 = ptrtoint ptr %f_flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %f_flags, align 4
  %and = and i32 %9, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then5, !prof !362

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call6 = tail call fastcc i32 @do_tmpfile(ptr noundef %nd, i32 noundef %flags, ptr noundef %op, ptr noundef %call1)
  br label %if.end28

if.else:                                          ; preds = %if.end
  %and8 = and i32 %9, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %if.else18, label %if.then16, !prof !362

if.then16:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  %call17 = tail call fastcc i32 @do_o_path(ptr noundef %nd, i32 noundef %flags, ptr noundef %call1)
  br label %if.end28

if.else18:                                        ; preds = %if.else
  %call19 = tail call fastcc ptr @path_init(ptr noundef %nd, i32 noundef %flags)
  %dentry.i = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %intent.i = getelementptr inbounds %struct.open_flags, ptr %op, i32 0, i32 3
  %flags.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %last_type.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 9
  %depth.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 10
  %stack.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 12
  %last51.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 1
  %name52.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 1, i32 1
  %mode3.i.i = getelementptr inbounds %struct.open_flags, ptr %op, i32 0, i32 1
  %f_mode.i.i = getelementptr inbounds %struct.file, ptr %call1, i32 0, i32 8
  %f_path.i.i.i = getelementptr inbounds %struct.file, ptr %call1, i32 0, i32 1
  %dentry2.i.i.i = getelementptr inbounds %struct.file, ptr %call1, i32 0, i32 1, i32 1
  br label %while.cond

while.cond:                                       ; preds = %open_last_lookups.exit.while.cond_crit_edge, %if.else18
  %s.0 = phi ptr [ %call19, %if.else18 ], [ %retval.0.i, %open_last_lookups.exit.while.cond_crit_edge ]
  %call20 = call fastcc i32 @link_path_walk(ptr noundef %s.0, ptr noundef %nd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %tobool21.not = icmp eq i32 %call20, 0
  br i1 %tobool21.not, label %land.rhs, label %while.cond.if.end26_crit_edge

while.cond.if.end26_crit_edge:                    ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end26

land.rhs:                                         ; preds = %while.cond
  %10 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dentry.i, align 4
  %12 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %op, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %seq.i) #13
  %14 = ptrtoint ptr %seq.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 -1, ptr %seq.i, align 4, !annotation !367
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %inode.i) #13
  %15 = ptrtoint ptr %inode.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr inttoptr (i32 -1 to ptr), ptr %inode.i, align 4, !annotation !367
  %16 = ptrtoint ptr %intent.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %intent.i, align 4
  %18 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags.i, align 4
  %or.i = or i32 %19, %17
  store i32 %or.i, ptr %flags.i, align 4
  %20 = ptrtoint ptr %last_type.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %last_type.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp.not.i = icmp eq i32 %21, 0
  br i1 %cmp.not.i, label %if.end5.i, label %if.then.i

if.then.i:                                        ; preds = %land.rhs
  %22 = ptrtoint ptr %depth.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %depth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool.not.i = icmp eq i32 %23, 0
  br i1 %tobool.not.i, label %if.then.i.if.end.i_crit_edge, label %if.then3.i

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.then3.i:                                       ; preds = %if.then.i
  %24 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %stack.i.i, align 4
  %dec.i.i = add i32 %23, -1
  %26 = ptrtoint ptr %depth.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %dec.i.i, ptr %depth.i, align 4
  %done.i.i = getelementptr %struct.saved, ptr %25, i32 %dec.i.i, i32 1
  %27 = ptrtoint ptr %done.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %done.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %28, null
  br i1 %tobool.not.i.i.i, label %if.then3.i.do_delayed_call.exit.i.i_crit_edge, label %if.then.i.i.i

if.then3.i.do_delayed_call.exit.i.i_crit_edge:    ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do_delayed_call.exit.i.i

if.then.i.i.i:                                    ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #15
  %arg.i.i.i = getelementptr %struct.saved, ptr %25, i32 %dec.i.i, i32 1, i32 1
  %29 = ptrtoint ptr %arg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arg.i.i.i, align 4
  call void %28(ptr noundef %30) #13
  br label %do_delayed_call.exit.i.i

do_delayed_call.exit.i.i:                         ; preds = %if.then.i.i.i, %if.then3.i.do_delayed_call.exit.i.i_crit_edge
  %31 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %flags.i, align 4
  %and.i.i = and i32 %32, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %do_delayed_call.exit.i.i.if.end.i_crit_edge

do_delayed_call.exit.i.i.if.end.i_crit_edge:      ; preds = %do_delayed_call.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.then.i.i:                                      ; preds = %do_delayed_call.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr.i.i = getelementptr %struct.saved, ptr %25, i32 %dec.i.i
  %dentry.i.i.i = getelementptr inbounds %struct.path, ptr %add.ptr.i.i, i32 0, i32 1
  %33 = ptrtoint ptr %dentry.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %dentry.i.i.i, align 4
  call void @dput(ptr noundef %34) #13
  %35 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %add.ptr.i.i, align 4
  call void @mntput(ptr noundef %36) #13
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i.i, %do_delayed_call.exit.i.i.if.end.i_crit_edge, %if.then.i.if.end.i_crit_edge
  %37 = ptrtoint ptr %last_type.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %last_type.i, align 8
  %call.i = call fastcc ptr @handle_dots(ptr noundef %nd, i32 noundef %38) #13
  br label %open_last_lookups.exit

if.end5.i:                                        ; preds = %land.rhs
  %and.i111 = and i32 %13, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i111)
  %tobool6.not.i = icmp eq i32 %and.i111, 0
  br i1 %tobool6.not.i, label %if.then7.i, label %if.else.i

if.then7.i:                                       ; preds = %if.end5.i
  %39 = ptrtoint ptr %name52.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %name52.i, align 8
  %41 = ptrtoint ptr %last51.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %last51.i, align 8
  %arrayidx.i = getelementptr i8, ptr %40, i32 %42
  %43 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %44)
  %tobool9.not.i = icmp eq i8 %44, 0
  br i1 %tobool9.not.i, label %if.then7.i.if.end13.i_crit_edge, label %if.then10.i

if.then7.i.if.end13.i_crit_edge:                  ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end13.i

if.then10.i:                                      ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #15
  %or12.i = or i32 %or.i, 3
  %45 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %or12.i, ptr %flags.i, align 4
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.then10.i, %if.then7.i.if.end13.i_crit_edge
  %call14.i = call fastcc ptr @lookup_fast(ptr noundef %nd, ptr noundef nonnull %inode.i, ptr noundef nonnull %seq.i) #13
  %cmp.i.i = icmp ugt ptr %call14.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.end13.i.open_last_lookups.exit_crit_edge, label %if.end18.i

if.end13.i.open_last_lookups.exit_crit_edge:      ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %open_last_lookups.exit

if.end18.i:                                       ; preds = %if.end13.i
  %tobool19.not.i = icmp eq ptr %call14.i, null
  br i1 %tobool19.not.i, label %do.body.i, label %if.end18.i.finish_lookup.i_crit_edge, !prof !360

if.end18.i.finish_lookup.i_crit_edge:             ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %finish_lookup.i

do.body.i:                                        ; preds = %if.end18.i
  %46 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %flags.i, align 4
  %and25.i = and i32 %47, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and25.i)
  %tobool26.not.i = icmp eq i32 %and25.i, 0
  br i1 %tobool26.not.i, label %do.body.i.if.end66.i_crit_edge, label %do.body34.i, !prof !362

do.body.i.if.end66.i_crit_edge:                   ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end66.i

do.body34.i:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3375, 0\0A.popsection", ""() #13, !srcloc !369
  unreachable

if.else.i:                                        ; preds = %if.end5.i
  %and42.i = and i32 %or.i, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and42.i)
  %tobool43.not.i = icmp eq i32 %and42.i, 0
  br i1 %tobool43.not.i, label %if.else.i.if.end49.i_crit_edge, label %if.then44.i

if.else.i.if.end49.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end49.i

if.then44.i:                                      ; preds = %if.else.i
  %call45.i = call fastcc zeroext i1 @try_to_unlazy(ptr noundef %nd) #13
  br i1 %call45.i, label %if.then44.i.if.end49.i_crit_edge, label %if.then44.i.open_last_lookups.exit_crit_edge

if.then44.i.open_last_lookups.exit_crit_edge:     ; preds = %if.then44.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %open_last_lookups.exit

if.then44.i.if.end49.i_crit_edge:                 ; preds = %if.then44.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end49.i

if.end49.i:                                       ; preds = %if.then44.i.if.end49.i_crit_edge, %if.else.i.if.end49.i_crit_edge
  %48 = ptrtoint ptr %name52.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %name52.i, align 8
  %50 = ptrtoint ptr %last51.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %last51.i, align 8
  %arrayidx55.i = getelementptr i8, ptr %49, i32 %51
  %52 = ptrtoint ptr %arrayidx55.i to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %arrayidx55.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %53)
  %tobool56.not.i = icmp eq i8 %53, 0
  br i1 %tobool56.not.i, label %if.end49.i.if.end66.i_crit_edge, label %if.end49.i.open_last_lookups.exit_crit_edge, !prof !362

if.end49.i.open_last_lookups.exit_crit_edge:      ; preds = %if.end49.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %open_last_lookups.exit

if.end49.i.if.end66.i_crit_edge:                  ; preds = %if.end49.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end66.i

if.end66.i:                                       ; preds = %if.end49.i.if.end66.i_crit_edge, %do.body.i.if.end66.i_crit_edge
  %and67.i = and i32 %13, 579
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and67.i)
  %tobool68.not.i = icmp eq i32 %and67.i, 0
  br i1 %tobool68.not.i, label %if.end66.i.if.end75.i_crit_edge, label %if.then69.i

if.end66.i.if.end75.i_crit_edge:                  ; preds = %if.end66.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end75.i

if.then69.i:                                      ; preds = %if.end66.i
  call void @__sanitizer_cov_trace_pc() #15
  %54 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %nd, align 8
  %call71.i = call i32 @mnt_want_write(ptr noundef %55) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call71.i)
  %tobool72.not.i = icmp eq i32 %call71.i, 0
  br label %if.end75.i

if.end75.i:                                       ; preds = %if.then69.i, %if.end66.i.if.end75.i_crit_edge
  %got_write.0.off0.i = phi i1 [ %tobool72.not.i, %if.then69.i ], [ false, %if.end66.i.if.end75.i_crit_edge ]
  %d_inode80.i = getelementptr inbounds %struct.dentry, ptr %11, i32 0, i32 5
  %56 = ptrtoint ptr %d_inode80.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %d_inode80.i, align 8
  %i_rwsem.i184.i = getelementptr inbounds %struct.inode, ptr %57, i32 0, i32 25
  br i1 %tobool6.not.i, label %if.else79.i, label %if.then78.i

if.then78.i:                                      ; preds = %if.end75.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @down_write(ptr noundef %i_rwsem.i184.i) #13
  br label %if.end81.i

if.else79.i:                                      ; preds = %if.end75.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @down_read(ptr noundef %i_rwsem.i184.i) #13
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.else79.i, %if.then78.i
  %58 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %dentry.i, align 4
  %d_inode.i.i = getelementptr inbounds %struct.dentry, ptr %59, i32 0, i32 5
  %60 = ptrtoint ptr %d_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %d_inode.i.i, align 8
  %62 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %op, align 4
  %64 = ptrtoint ptr %mode3.i.i to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load i16, ptr %mode3.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 52, ptr nonnull %wq.i.i) #13
  %66 = call ptr @memset(ptr %wq.i.i, i32 255, i32 52)
  call void @__init_waitqueue_head(ptr noundef nonnull %wq.i.i, ptr noundef nonnull @.str.55, ptr noundef nonnull @lookup_open.__key) #13
  %i_flags.i.i = getelementptr inbounds %struct.inode, ptr %61, i32 0, i32 4
  %67 = ptrtoint ptr %i_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %i_flags.i.i, align 4
  %and.i185.i = and i32 %68, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i185.i)
  %tobool.not.i186.i = icmp eq i32 %and.i185.i, 0
  br i1 %tobool.not.i186.i, label %if.end.i.i, label %lookup_open.exit.thread.i, !prof !362

lookup_open.exit.thread.i:                        ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.end.p0(i64 52, ptr nonnull %wq.i.i) #13
  br label %if.end89.i

if.end.i.i:                                       ; preds = %if.end81.i
  %69 = ptrtoint ptr %f_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %f_mode.i.i, align 8
  %and6.i.i = and i32 %70, -1048577
  store i32 %and6.i.i, ptr %f_mode.i.i, align 8
  %call7.i.i = call ptr @d_lookup(ptr noundef %59, ptr noundef %last51.i) #13
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %if.end31.i.i, %if.end.i.i
  %dentry2.0.i.i = phi ptr [ %call7.i.i, %if.end.i.i ], [ null, %if.end31.i.i ]
  %tobool8.not.i.i = icmp eq ptr %dentry2.0.i.i, null
  br i1 %tobool8.not.i.i, label %if.then9.i.i, label %for.cond.i.i.if.end15.i.i_crit_edge

for.cond.i.i.if.end15.i.i_crit_edge:              ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end15.i.i

if.then9.i.i:                                     ; preds = %for.cond.i.i
  %call11.i.i = call ptr @d_alloc_parallel(ptr noundef %59, ptr noundef %last51.i, ptr noundef nonnull %wq.i.i) #13
  %cmp.i.i.i = icmp ugt ptr %call11.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %if.then9.i.i.lookup_open.exit.i_crit_edge, label %if.then9.i.i.if.end15.i.i_crit_edge

if.then9.i.i.if.end15.i.i_crit_edge:              ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end15.i.i

if.then9.i.i.lookup_open.exit.i_crit_edge:        ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %lookup_open.exit.i

if.end15.i.i:                                     ; preds = %if.then9.i.i.if.end15.i.i_crit_edge, %for.cond.i.i.if.end15.i.i_crit_edge
  %dentry2.1.i.i = phi ptr [ %dentry2.0.i.i, %for.cond.i.i.if.end15.i.i_crit_edge ], [ %call11.i.i, %if.then9.i.i.if.end15.i.i_crit_edge ]
  %71 = ptrtoint ptr %dentry2.1.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %dentry2.1.i.i, align 8
  %73 = and i32 %72, 268435460
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %73)
  %.not.i.i = icmp eq i32 %73, 4
  br i1 %.not.i.i, label %d_revalidate.exit.i.i, label %if.end15.i.i.for.end.i.i_crit_edge, !prof !370

if.end15.i.i.for.end.i.i_crit_edge:               ; preds = %if.end15.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i.i

d_revalidate.exit.i.i:                            ; preds = %if.end15.i.i
  %74 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %flags.i, align 4
  %d_op.i.i.i = getelementptr inbounds %struct.dentry, ptr %dentry2.1.i.i, i32 0, i32 8
  %76 = ptrtoint ptr %d_op.i.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %d_op.i.i.i, align 8
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %77, align 128
  %call.i.i.i = call i32 %79(ptr noundef %dentry2.1.i.i, i32 noundef %75) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.i188.i = icmp sgt i32 %call.i.i.i, 0
  br i1 %cmp.i188.i, label %d_revalidate.exit.i.i.for.end.i.i_crit_edge, label %if.end28.i.i, !prof !362

d_revalidate.exit.i.i.for.end.i.i_crit_edge:      ; preds = %d_revalidate.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i.i

if.end28.i.i:                                     ; preds = %d_revalidate.exit.i.i
  %tobool29.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool29.not.i.i, label %if.end31.i.i, label %if.end28.i.i.out_dput.i.i_crit_edge

if.end28.i.i.out_dput.i.i_crit_edge:              ; preds = %if.end28.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_dput.i.i

if.end31.i.i:                                     ; preds = %if.end28.i.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @d_invalidate(ptr noundef %dentry2.1.i.i) #13
  call void @dput(ptr noundef %dentry2.1.i.i) #13
  br label %for.cond.i.i

for.end.i.i:                                      ; preds = %d_revalidate.exit.i.i.for.end.i.i_crit_edge, %if.end15.i.i.for.end.i.i_crit_edge
  %d_inode32.i.i = getelementptr inbounds %struct.dentry, ptr %dentry2.1.i.i, i32 0, i32 5
  %80 = ptrtoint ptr %d_inode32.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %d_inode32.i.i, align 8
  %tobool33.not.i.i = icmp eq ptr %81, null
  br i1 %tobool33.not.i.i, label %if.end35.i.i, label %for.end.i.i.lookup_open.exit.i_crit_edge

for.end.i.i.lookup_open.exit.i_crit_edge:         ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %lookup_open.exit.i

if.end35.i.i:                                     ; preds = %for.end.i.i
  br i1 %got_write.0.off0.i, label %if.end35.i.i.if.end47.i.i_crit_edge, label %if.then45.i.i, !prof !362

if.end35.i.i.if.end47.i.i_crit_edge:              ; preds = %if.end35.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end47.i.i

if.then45.i.i:                                    ; preds = %if.end35.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %and46.i.i = and i32 %63, -513
  br label %if.end47.i.i

if.end47.i.i:                                     ; preds = %if.then45.i.i, %if.end35.i.i.if.end47.i.i_crit_edge
  %open_flag.0.i.i = phi i32 [ %and46.i.i, %if.then45.i.i ], [ %63, %if.end35.i.i.if.end47.i.i_crit_edge ]
  %82 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %nd, align 8
  %mnt_userns.i.i.i = getelementptr inbounds %struct.vfsmount, ptr %83, i32 0, i32 3
  %84 = ptrtoint ptr %mnt_userns.i.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile ptr, ptr %mnt_userns.i.i.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !371
  %and50.i.i = and i32 %open_flag.0.i.i, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and50.i.i)
  %tobool51.not.i.i = icmp eq i32 %and50.i.i, 0
  br i1 %tobool51.not.i.i, label %if.end47.i.i.if.end77.i.i_crit_edge, label %if.then52.i.i

if.end47.i.i.if.end77.i.i_crit_edge:              ; preds = %if.end47.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end77.i.i

if.then52.i.i:                                    ; preds = %if.end47.i.i
  %and53.i.i = and i32 %open_flag.0.i.i, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and53.i.i)
  %tobool54.not.i.i = icmp eq i32 %and53.i.i, 0
  %and56.i.i = and i32 %open_flag.0.i.i, -513
  %spec.select.i.i = select i1 %tobool54.not.i.i, i32 %open_flag.0.i.i, i32 %and56.i.i
  %86 = ptrtoint ptr %d_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %d_inode.i.i, align 8
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %87, i32 0, i32 8
  %88 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %i_sb.i.i, align 4
  %s_flags.i.i = getelementptr inbounds %struct.super_block, ptr %89, i32 0, i32 10
  %90 = ptrtoint ptr %s_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %s_flags.i.i, align 4
  %and59.i.i = and i32 %91, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and59.i.i)
  %tobool60.not.i.i = icmp eq i32 %and59.i.i, 0
  br i1 %tobool60.not.i.i, label %if.then61.i.i, label %if.then52.i.i.if.end65.i.i_crit_edge

if.then52.i.i.if.end65.i.i_crit_edge:             ; preds = %if.then52.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end65.i.i

if.then61.i.i:                                    ; preds = %if.then52.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call62.i.i = call i32 @current_umask() #13
  %92 = trunc i32 %call62.i.i to i16
  %93 = xor i16 %92, -1
  %conv64.i.i = and i16 %65, %93
  br label %if.end65.i.i

if.end65.i.i:                                     ; preds = %if.then61.i.i, %if.then52.i.i.if.end65.i.i_crit_edge
  %mode.0.i.i = phi i16 [ %65, %if.then52.i.i.if.end65.i.i_crit_edge ], [ %conv64.i.i, %if.then61.i.i ]
  br i1 %got_write.0.off0.i, label %if.then73.i.i, label %if.end65.i.i.if.end77.i.i_crit_edge, !prof !362

if.end65.i.i.if.end77.i.i_crit_edge:              ; preds = %if.end65.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end77.i.i

if.then73.i.i:                                    ; preds = %if.end65.i.i
  %call.i227.i.i = call i32 @security_path_mknod(ptr noundef %nd, ptr noundef %dentry2.1.i.i, i16 noundef zeroext %mode.0.i.i, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i227.i.i)
  %tobool.not.i228.i.i = icmp eq i32 %call.i227.i.i, 0
  br i1 %tobool.not.i228.i.i, label %if.end.i.i.i, label %if.then73.i.i.if.end77.i.i_crit_edge

if.then73.i.i.if.end77.i.i_crit_edge:             ; preds = %if.then73.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end77.i.i

if.end.i.i.i:                                     ; preds = %if.then73.i.i
  %94 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %dentry.i, align 4
  %d_sb.i.i.i = getelementptr inbounds %struct.dentry, ptr %95, i32 0, i32 9
  %96 = ptrtoint ptr %d_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %d_sb.i.i.i, align 4
  %call2.i.i.i = call fastcc zeroext i1 @fsuidgid_has_mapping(ptr noundef %97, ptr noundef %85) #13
  br i1 %call2.i.i.i, label %if.end4.i.i.i, label %if.end.i.i.i.if.end77.i.i_crit_edge

if.end.i.i.i.if.end77.i.i_crit_edge:              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end77.i.i

if.end4.i.i.i:                                    ; preds = %if.end.i.i.i
  %98 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %dentry.i, align 4
  %d_inode.i.i.i = getelementptr inbounds %struct.dentry, ptr %99, i32 0, i32 5
  %100 = ptrtoint ptr %d_inode.i.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %d_inode.i.i.i, align 8
  %call6.i.i.i = call i32 @inode_permission(ptr noundef %85, ptr noundef %101, i32 noundef 3) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i.i)
  %tobool7.not.i.i.i = icmp eq i32 %call6.i.i.i, 0
  br i1 %tobool7.not.i.i.i, label %if.end9.i.i.i, label %if.end4.i.i.i.if.end77.i.i_crit_edge

if.end4.i.i.i.if.end77.i.i_crit_edge:             ; preds = %if.end4.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end77.i.i

if.end9.i.i.i:                                    ; preds = %if.end4.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %102 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %dentry.i, align 4
  %d_inode11.i.i.i = getelementptr inbounds %struct.dentry, ptr %103, i32 0, i32 5
  %104 = ptrtoint ptr %d_inode11.i.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %d_inode11.i.i.i, align 8
  %call12.i.i.i = call i32 @security_inode_create(ptr noundef %105, ptr noundef %dentry2.1.i.i, i16 noundef zeroext %mode.0.i.i) #13
  br label %if.end77.i.i

if.end77.i.i:                                     ; preds = %if.end9.i.i.i, %if.end4.i.i.i.if.end77.i.i_crit_edge, %if.end.i.i.i.if.end77.i.i_crit_edge, %if.then73.i.i.if.end77.i.i_crit_edge, %if.end65.i.i.if.end77.i.i_crit_edge, %if.end47.i.i.if.end77.i.i_crit_edge
  %open_flag.2.i.i = phi i32 [ %open_flag.0.i.i, %if.end47.i.i.if.end77.i.i_crit_edge ], [ %spec.select.i.i, %if.end65.i.i.if.end77.i.i_crit_edge ], [ %spec.select.i.i, %if.then73.i.i.if.end77.i.i_crit_edge ], [ %spec.select.i.i, %if.end.i.i.i.if.end77.i.i_crit_edge ], [ %spec.select.i.i, %if.end4.i.i.i.if.end77.i.i_crit_edge ], [ %spec.select.i.i, %if.end9.i.i.i ]
  %create_error.0.i.i = phi i32 [ 0, %if.end47.i.i.if.end77.i.i_crit_edge ], [ -30, %if.end65.i.i.if.end77.i.i_crit_edge ], [ %call.i227.i.i, %if.then73.i.i.if.end77.i.i_crit_edge ], [ -75, %if.end.i.i.i.if.end77.i.i_crit_edge ], [ %call6.i.i.i, %if.end4.i.i.i.if.end77.i.i_crit_edge ], [ %call12.i.i.i, %if.end9.i.i.i ]
  %mode.1.i.i = phi i16 [ %65, %if.end47.i.i.if.end77.i.i_crit_edge ], [ %mode.0.i.i, %if.end65.i.i.if.end77.i.i_crit_edge ], [ %mode.0.i.i, %if.then73.i.i.if.end77.i.i_crit_edge ], [ %mode.0.i.i, %if.end.i.i.i.if.end77.i.i_crit_edge ], [ %mode.0.i.i, %if.end4.i.i.i.if.end77.i.i_crit_edge ], [ %mode.0.i.i, %if.end9.i.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %create_error.0.i.i)
  %tobool78.not.i.i = icmp eq i32 %create_error.0.i.i, 0
  %and80.i.i = and i32 %open_flag.2.i.i, -65
  %spec.select225.i.i = select i1 %tobool78.not.i.i, i32 %open_flag.2.i.i, i32 %and80.i.i
  %i_op.i.i = getelementptr inbounds %struct.inode, ptr %61, i32 0, i32 7
  %106 = ptrtoint ptr %i_op.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %i_op.i.i, align 8
  %atomic_open.i.i = getelementptr inbounds %struct.inode_operations, ptr %107, i32 0, i32 18
  %108 = ptrtoint ptr %atomic_open.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %atomic_open.i.i, align 8
  %tobool82.not.i.i = icmp eq ptr %109, null
  br i1 %tobool82.not.i.i, label %if.end98.i.i, label %if.then83.i.i

if.then83.i.i:                                    ; preds = %if.end77.i.i
  %110 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %dentry.i, align 4
  %d_inode.i231.i.i = getelementptr inbounds %struct.dentry, ptr %111, i32 0, i32 5
  %112 = ptrtoint ptr %d_inode.i231.i.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %d_inode.i231.i.i, align 8
  %114 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %flags.i, align 4
  %and.i232.i.i = shl i32 %115, 13
  %116 = and i32 %and.i232.i.i, 16384
  %117 = or i32 %116, %spec.select225.i.i
  %118 = ptrtoint ptr %dentry2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %118)
  store ptr inttoptr (i32 -1 to ptr), ptr %dentry2.i.i.i, align 4
  %119 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %nd, align 8
  %121 = ptrtoint ptr %f_path.i.i.i to i32
  call void @__asan_store4_noabort(i32 %121)
  store ptr %120, ptr %f_path.i.i.i, align 8
  %i_op.i.i.i = getelementptr inbounds %struct.inode, ptr %113, i32 0, i32 7
  %122 = ptrtoint ptr %i_op.i.i.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %i_op.i.i.i, align 8
  %atomic_open.i.i.i = getelementptr inbounds %struct.inode_operations, ptr %123, i32 0, i32 18
  %124 = ptrtoint ptr %atomic_open.i.i.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %atomic_open.i.i.i, align 8
  %and.i.i.i.i = and i32 %spec.select225.i.i, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %and.i.i.i.i, 3
  %dec.i.i.i.i = sext i1 %cmp.i.i.i.i to i32
  %spec.select.i.i.i.i = add i32 %117, %dec.i.i.i.i
  %call6.i233.i.i = call i32 %125(ptr noundef %113, ptr noundef %dentry2.1.i.i, ptr noundef %call1, i32 noundef %spec.select.i.i.i.i, i16 noundef zeroext %mode.1.i.i) #13
  %126 = ptrtoint ptr %dentry2.1.i.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %dentry2.1.i.i, align 8
  %and.i.i.i.i.i = and i32 %127, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.then83.i.i.d_lookup_done.exit.i.i.i_crit_edge, label %if.then.i.i.i.i, !prof !362

if.then83.i.i.d_lookup_done.exit.i.i.i_crit_edge: ; preds = %if.then83.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %d_lookup_done.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.then83.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %d_lockref.i.i.i.i = getelementptr inbounds %struct.dentry, ptr %dentry2.1.i.i, i32 0, i32 7
  call void @_raw_spin_lock(ptr noundef %d_lockref.i.i.i.i) #13
  call void @__d_lookup_done(ptr noundef %dentry2.1.i.i) #13
  call void @_raw_spin_unlock(ptr noundef %d_lockref.i.i.i.i) #13
  br label %d_lookup_done.exit.i.i.i

d_lookup_done.exit.i.i.i:                         ; preds = %if.then.i.i.i.i, %if.then83.i.i.d_lookup_done.exit.i.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i233.i.i)
  %tobool7.not.i234.i.i = icmp eq i32 %call6.i233.i.i, 0
  br i1 %tobool7.not.i234.i.i, label %if.then8.i.i.i, label %d_lookup_done.exit.i.i.i.if.then72.i.i.i_crit_edge

d_lookup_done.exit.i.i.i.if.then72.i.i.i_crit_edge: ; preds = %d_lookup_done.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then72.i.i.i

if.then8.i.i.i:                                   ; preds = %d_lookup_done.exit.i.i.i
  %128 = ptrtoint ptr %f_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %f_mode.i.i, align 8
  %and9.i.i.i = and i32 %129, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9.i.i.i)
  %tobool10.not.i.i.i = icmp eq i32 %and9.i.i.i, 0
  %130 = ptrtoint ptr %dentry2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %dentry2.i.i.i, align 4
  br i1 %tobool10.not.i.i.i, label %if.else.i.i.i, label %if.then11.i.i.i

if.then11.i.i.i:                                  ; preds = %if.then8.i.i.i
  %cmp.not.i.i.i = icmp eq ptr %131, %dentry2.1.i.i
  br i1 %cmp.not.i.i.i, label %if.then11.i.i.i.atomic_open.exit.i.i_crit_edge, label %if.then16.i.i.i, !prof !362

if.then11.i.i.i.atomic_open.exit.i.i_crit_edge:   ; preds = %if.then11.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %atomic_open.exit.i.i

if.then16.i.i.i:                                  ; preds = %if.then11.i.i.i
  call void @dput(ptr noundef %dentry2.1.i.i) #13
  %132 = ptrtoint ptr %dentry2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %dentry2.i.i.i, align 4
  %tobool.not.i97.i.i.i = icmp eq ptr %133, null
  br i1 %tobool.not.i97.i.i.i, label %if.then16.i.i.i.atomic_open.exit.i.i_crit_edge, label %if.then.i99.i.i.i

if.then16.i.i.i.atomic_open.exit.i.i_crit_edge:   ; preds = %if.then16.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %atomic_open.exit.i.i

if.then.i99.i.i.i:                                ; preds = %if.then16.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %d_lockref.i98.i.i.i = getelementptr inbounds %struct.dentry, ptr %133, i32 0, i32 7
  call void @lockref_get(ptr noundef %d_lockref.i98.i.i.i) #13
  br label %atomic_open.exit.i.i

if.else.i.i.i:                                    ; preds = %if.then8.i.i.i
  %magicptr.i.i.i = ptrtoint ptr %131 to i32
  %134 = zext i32 %magicptr.i.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %134, ptr @__sancov_gen_cov_switch_values.84)
  switch i32 %magicptr.i.i.i, label %if.then55.i.i.i [
    i32 -1, label %do.end.i.i.i
    i32 0, label %if.else.i.i.i.if.end58.i.i.i_crit_edge
  ], !prof !372

if.else.i.i.i.if.end58.i.i.i_crit_edge:           ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end58.i.i.i

do.end.i.i.i:                                     ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 3201, i32 noundef 9, ptr noundef null) #13
  br label %if.then72.i.i.i

if.then55.i.i.i:                                  ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @dput(ptr noundef %dentry2.1.i.i) #13
  %135 = ptrtoint ptr %dentry2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %dentry2.i.i.i, align 4
  br label %if.end58.i.i.i

if.end58.i.i.i:                                   ; preds = %if.then55.i.i.i, %if.else.i.i.i.if.end58.i.i.i_crit_edge
  %dentry.addr.0.i.i.i = phi ptr [ %136, %if.then55.i.i.i ], [ %dentry2.1.i.i, %if.else.i.i.i.if.end58.i.i.i_crit_edge ]
  %137 = ptrtoint ptr %dentry.addr.0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %dentry.addr.0.i.i.i, align 8
  %and.i.i.i.i.i.i = and i32 %138, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i.i, label %if.end58.i.i.i.if.then72.i.i.i_crit_edge, label %if.end58.i.i.i.atomic_open.exit.i.i_crit_edge, !prof !360

if.end58.i.i.i.atomic_open.exit.i.i_crit_edge:    ; preds = %if.end58.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %atomic_open.exit.i.i

if.end58.i.i.i.if.then72.i.i.i_crit_edge:         ; preds = %if.end58.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then72.i.i.i

if.then72.i.i.i:                                  ; preds = %if.end58.i.i.i.if.then72.i.i.i_crit_edge, %do.end.i.i.i, %d_lookup_done.exit.i.i.i.if.then72.i.i.i_crit_edge
  %error.0.i.i.i = phi i32 [ %call6.i233.i.i, %d_lookup_done.exit.i.i.i.if.then72.i.i.i_crit_edge ], [ -5, %do.end.i.i.i ], [ -2, %if.end58.i.i.i.if.then72.i.i.i_crit_edge ]
  %dentry.addr.1.i.i.i = phi ptr [ %dentry2.1.i.i, %d_lookup_done.exit.i.i.i.if.then72.i.i.i_crit_edge ], [ %dentry2.1.i.i, %do.end.i.i.i ], [ %dentry.addr.0.i.i.i, %if.end58.i.i.i.if.then72.i.i.i_crit_edge ]
  call void @dput(ptr noundef %dentry.addr.1.i.i.i) #13
  %139 = inttoptr i32 %error.0.i.i.i to ptr
  br label %atomic_open.exit.i.i

atomic_open.exit.i.i:                             ; preds = %if.then72.i.i.i, %if.end58.i.i.i.atomic_open.exit.i.i_crit_edge, %if.then.i99.i.i.i, %if.then16.i.i.i.atomic_open.exit.i.i_crit_edge, %if.then11.i.i.i.atomic_open.exit.i.i_crit_edge
  %dentry.addr.2.i.i.i = phi ptr [ %139, %if.then72.i.i.i ], [ %133, %if.then.i99.i.i.i ], [ null, %if.then16.i.i.i.atomic_open.exit.i.i_crit_edge ], [ %dentry.addr.0.i.i.i, %if.end58.i.i.i.atomic_open.exit.i.i_crit_edge ], [ %dentry2.1.i.i, %if.then11.i.i.i.atomic_open.exit.i.i_crit_edge ]
  br i1 %tobool78.not.i.i, label %atomic_open.exit.i.i.lookup_open.exit.i_crit_edge, label %land.lhs.true.i.i, !prof !362

atomic_open.exit.i.i.lookup_open.exit.i_crit_edge: ; preds = %atomic_open.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %lookup_open.exit.i

land.lhs.true.i.i:                                ; preds = %atomic_open.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %cmp93.i.i = icmp eq ptr %dentry.addr.2.i.i.i, inttoptr (i32 -2 to ptr)
  %140 = inttoptr i32 %create_error.0.i.i to ptr
  %spec.select246.i.i = select i1 %cmp93.i.i, ptr %140, ptr %dentry.addr.2.i.i.i
  br label %lookup_open.exit.i

if.end98.i.i:                                     ; preds = %if.end77.i.i
  %141 = ptrtoint ptr %dentry2.1.i.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %dentry2.1.i.i, align 8
  %and.i235.i.i = and i32 %142, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i235.i.i)
  %tobool100.not.i.i = icmp eq i32 %and.i235.i.i, 0
  br i1 %tobool100.not.i.i, label %if.end98.i.i.if.end118.i.i_crit_edge, label %if.then101.i.i

if.end98.i.i.if.end118.i.i_crit_edge:             ; preds = %if.end98.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end118.i.i

if.then101.i.i:                                   ; preds = %if.end98.i.i
  %143 = ptrtoint ptr %107 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %107, align 128
  %145 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %flags.i, align 4
  %call104.i.i = call ptr %144(ptr noundef %61, ptr noundef %dentry2.1.i.i, i32 noundef %146) #13
  %147 = ptrtoint ptr %dentry2.1.i.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %dentry2.1.i.i, align 8
  %and.i.i236.i.i = and i32 %148, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i236.i.i)
  %tobool.not.i237.i.i = icmp eq i32 %and.i.i236.i.i, 0
  br i1 %tobool.not.i237.i.i, label %if.then101.i.i.d_lookup_done.exit.i.i_crit_edge, label %if.then.i238.i.i, !prof !362

if.then101.i.i.d_lookup_done.exit.i.i_crit_edge:  ; preds = %if.then101.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %d_lookup_done.exit.i.i

if.then.i238.i.i:                                 ; preds = %if.then101.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %d_lockref.i.i.i = getelementptr inbounds %struct.dentry, ptr %dentry2.1.i.i, i32 0, i32 7
  call void @_raw_spin_lock(ptr noundef %d_lockref.i.i.i) #13
  call void @__d_lookup_done(ptr noundef %dentry2.1.i.i) #13
  call void @_raw_spin_unlock(ptr noundef %d_lockref.i.i.i) #13
  br label %d_lookup_done.exit.i.i

d_lookup_done.exit.i.i:                           ; preds = %if.then.i238.i.i, %if.then101.i.i.d_lookup_done.exit.i.i_crit_edge
  %tobool105.not.i.i = icmp eq ptr %call104.i.i, null
  br i1 %tobool105.not.i.i, label %d_lookup_done.exit.i.i.if.end118.i.i_crit_edge, label %if.then112.i.i, !prof !362

d_lookup_done.exit.i.i.if.end118.i.i_crit_edge:   ; preds = %d_lookup_done.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end118.i.i

if.then112.i.i:                                   ; preds = %d_lookup_done.exit.i.i
  %cmp.i240.i.i = icmp ugt ptr %call104.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i240.i.i, label %cleanup.i.i, label %if.end116.i.i

if.end116.i.i:                                    ; preds = %if.then112.i.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @dput(ptr noundef %dentry2.1.i.i) #13
  br label %if.end118.i.i

cleanup.i.i:                                      ; preds = %if.then112.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %149 = ptrtoint ptr %call104.i.i to i32
  br label %out_dput.i.i

if.end118.i.i:                                    ; preds = %if.end116.i.i, %d_lookup_done.exit.i.i.if.end118.i.i_crit_edge, %if.end98.i.i.if.end118.i.i_crit_edge
  %dentry2.5.i.i = phi ptr [ %dentry2.1.i.i, %if.end98.i.i.if.end118.i.i_crit_edge ], [ %dentry2.1.i.i, %d_lookup_done.exit.i.i.if.end118.i.i_crit_edge ], [ %call104.i.i, %if.end116.i.i ]
  %d_inode119.i.i = getelementptr inbounds %struct.dentry, ptr %dentry2.5.i.i, i32 0, i32 5
  %150 = ptrtoint ptr %d_inode119.i.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %d_inode119.i.i, align 8
  %tobool120.not.i.i = icmp ne ptr %151, null
  %and122.i.i = and i32 %spec.select225.i.i, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and122.i.i)
  %tobool123.not.i.i = icmp eq i32 %and122.i.i, 0
  %or.cond.i.i = select i1 %tobool120.not.i.i, i1 true, i1 %tobool123.not.i.i
  br i1 %or.cond.i.i, label %if.end118.i.i.if.end138.i.i_crit_edge, label %if.then124.i.i

if.end118.i.i.if.end138.i.i_crit_edge:            ; preds = %if.end118.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end138.i.i

if.then124.i.i:                                   ; preds = %if.end118.i.i
  %152 = ptrtoint ptr %f_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %f_mode.i.i, align 8
  %or.i.i = or i32 %153, 1048576
  store i32 %or.i.i, ptr %f_mode.i.i, align 8
  %154 = ptrtoint ptr %i_op.i.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %i_op.i.i, align 8
  %create.i.i = getelementptr inbounds %struct.inode_operations, ptr %155, i32 0, i32 5
  %156 = ptrtoint ptr %create.i.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %create.i.i, align 4
  %tobool127.not.i.i = icmp eq ptr %157, null
  br i1 %tobool127.not.i.i, label %if.then124.i.i.out_dput.i.i_crit_edge, label %if.end129.i.i

if.then124.i.i.out_dput.i.i_crit_edge:            ; preds = %if.then124.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_dput.i.i

if.end129.i.i:                                    ; preds = %if.then124.i.i
  %and132.i.i = and i32 %spec.select225.i.i, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and132.i.i)
  %tobool133.i.i = icmp ne i32 %and132.i.i, 0
  %call134.i.i = call i32 %157(ptr noundef %85, ptr noundef %61, ptr noundef %dentry2.5.i.i, i16 noundef zeroext %mode.1.i.i, i1 noundef zeroext %tobool133.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call134.i.i)
  %tobool135.not.i.i = icmp eq i32 %call134.i.i, 0
  br i1 %tobool135.not.i.i, label %if.end129.i.i.if.end138.i.i_crit_edge, label %if.end129.i.i.out_dput.i.i_crit_edge

if.end129.i.i.out_dput.i.i_crit_edge:             ; preds = %if.end129.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_dput.i.i

if.end129.i.i.if.end138.i.i_crit_edge:            ; preds = %if.end129.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end138.i.i

if.end138.i.i:                                    ; preds = %if.end129.i.i.if.end138.i.i_crit_edge, %if.end118.i.i.if.end138.i.i_crit_edge
  br i1 %tobool78.not.i.i, label %if.end138.i.i.lookup_open.exit.i_crit_edge, label %land.lhs.true146.i.i, !prof !362

if.end138.i.i.lookup_open.exit.i_crit_edge:       ; preds = %if.end138.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %lookup_open.exit.i

land.lhs.true146.i.i:                             ; preds = %if.end138.i.i
  %158 = ptrtoint ptr %d_inode119.i.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %d_inode119.i.i, align 8
  %tobool148.not.i.i = icmp eq ptr %159, null
  br i1 %tobool148.not.i.i, label %land.lhs.true146.i.i.out_dput.i.i_crit_edge, label %land.lhs.true146.i.i.lookup_open.exit.i_crit_edge

land.lhs.true146.i.i.lookup_open.exit.i_crit_edge: ; preds = %land.lhs.true146.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %lookup_open.exit.i

land.lhs.true146.i.i.out_dput.i.i_crit_edge:      ; preds = %land.lhs.true146.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_dput.i.i

out_dput.i.i:                                     ; preds = %land.lhs.true146.i.i.out_dput.i.i_crit_edge, %if.end129.i.i.out_dput.i.i_crit_edge, %if.then124.i.i.out_dput.i.i_crit_edge, %cleanup.i.i, %if.end28.i.i.out_dput.i.i_crit_edge
  %dentry2.6.i.i = phi ptr [ %dentry2.1.i.i, %cleanup.i.i ], [ %dentry2.5.i.i, %if.end129.i.i.out_dput.i.i_crit_edge ], [ %dentry2.5.i.i, %if.then124.i.i.out_dput.i.i_crit_edge ], [ %dentry2.5.i.i, %land.lhs.true146.i.i.out_dput.i.i_crit_edge ], [ %dentry2.1.i.i, %if.end28.i.i.out_dput.i.i_crit_edge ]
  %error.3.i.i = phi i32 [ %149, %cleanup.i.i ], [ %call134.i.i, %if.end129.i.i.out_dput.i.i_crit_edge ], [ -13, %if.then124.i.i.out_dput.i.i_crit_edge ], [ %create_error.0.i.i, %land.lhs.true146.i.i.out_dput.i.i_crit_edge ], [ %call.i.i.i, %if.end28.i.i.out_dput.i.i_crit_edge ]
  call void @dput(ptr noundef %dentry2.6.i.i) #13
  %160 = inttoptr i32 %error.3.i.i to ptr
  br label %lookup_open.exit.i

lookup_open.exit.i:                               ; preds = %out_dput.i.i, %land.lhs.true146.i.i.lookup_open.exit.i_crit_edge, %if.end138.i.i.lookup_open.exit.i_crit_edge, %land.lhs.true.i.i, %atomic_open.exit.i.i.lookup_open.exit.i_crit_edge, %for.end.i.i.lookup_open.exit.i_crit_edge, %if.then9.i.i.lookup_open.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %160, %out_dput.i.i ], [ %dentry2.1.i.i, %for.end.i.i.lookup_open.exit.i_crit_edge ], [ %dentry.addr.2.i.i.i, %atomic_open.exit.i.i.lookup_open.exit.i_crit_edge ], [ %dentry2.5.i.i, %land.lhs.true146.i.i.lookup_open.exit.i_crit_edge ], [ %dentry2.5.i.i, %if.end138.i.i.lookup_open.exit.i_crit_edge ], [ %spec.select246.i.i, %land.lhs.true.i.i ], [ %call11.i.i, %if.then9.i.i.lookup_open.exit.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 52, ptr nonnull %wq.i.i) #13
  %cmp.i189.i = icmp ugt ptr %retval.0.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i189.i, label %lookup_open.exit.i.if.end89.i_crit_edge, label %land.lhs.true.i

lookup_open.exit.i.if.end89.i_crit_edge:          ; preds = %lookup_open.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end89.i

land.lhs.true.i:                                  ; preds = %lookup_open.exit.i
  %161 = ptrtoint ptr %f_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %f_mode.i.i, align 8
  %and85.i = and i32 %162, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and85.i)
  %tobool86.not.i = icmp eq i32 %and85.i, 0
  br i1 %tobool86.not.i, label %land.lhs.true.i.if.end89.i_crit_edge, label %if.then87.i

land.lhs.true.i.if.end89.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end89.i

if.then87.i:                                      ; preds = %land.lhs.true.i
  %163 = ptrtoint ptr %d_inode80.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %d_inode80.i, align 8
  %i_sb.i.i.i.i = getelementptr inbounds %struct.inode, ptr %164, i32 0, i32 8
  %165 = ptrtoint ptr %i_sb.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %i_sb.i.i.i.i, align 4
  %s_fsnotify_connectors.i.i.i.i = getelementptr inbounds %struct.super_block, ptr %166, i32 0, i32 48
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i.i.i.i, i32 noundef 4) #13
  %167 = ptrtoint ptr %s_fsnotify_connectors.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load volatile i32, ptr %s_fsnotify_connectors.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %168)
  %cmp.i.i.i190.i = icmp eq i32 %168, 0
  br i1 %cmp.i.i.i190.i, label %if.then87.i.if.end89.i_crit_edge, label %if.end.i.i.i.i

if.then87.i.if.end89.i_crit_edge:                 ; preds = %if.then87.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end89.i

if.end.i.i.i.i:                                   ; preds = %if.then87.i
  call void @__sanitizer_cov_trace_pc() #15
  %d_name.i.i.i = getelementptr inbounds %struct.dentry, ptr %retval.0.i.i, i32 0, i32 4
  %call1.i.i.i.i = call i32 @fsnotify(i32 noundef 256, ptr noundef %retval.0.i.i, i32 noundef 3, ptr noundef %164, ptr noundef %d_name.i.i.i, ptr noundef null, i32 noundef 0) #13
  br label %if.end89.i

if.end89.i:                                       ; preds = %if.end.i.i.i.i, %if.then87.i.if.end89.i_crit_edge, %land.lhs.true.i.if.end89.i_crit_edge, %lookup_open.exit.i.if.end89.i_crit_edge, %lookup_open.exit.thread.i
  %cmp.i189213.i = phi i1 [ true, %lookup_open.exit.thread.i ], [ false, %land.lhs.true.i.if.end89.i_crit_edge ], [ true, %lookup_open.exit.i.if.end89.i_crit_edge ], [ false, %if.then87.i.if.end89.i_crit_edge ], [ false, %if.end.i.i.i.i ]
  %retval.0.i212.i = phi ptr [ inttoptr (i32 -2 to ptr), %lookup_open.exit.thread.i ], [ %retval.0.i.i, %land.lhs.true.i.if.end89.i_crit_edge ], [ %retval.0.i.i, %lookup_open.exit.i.if.end89.i_crit_edge ], [ %retval.0.i.i, %if.then87.i.if.end89.i_crit_edge ], [ %retval.0.i.i, %if.end.i.i.i.i ]
  %169 = ptrtoint ptr %d_inode80.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %d_inode80.i, align 8
  %i_rwsem.i192.i = getelementptr inbounds %struct.inode, ptr %170, i32 0, i32 25
  br i1 %tobool6.not.i, label %if.else94.i, label %if.then92.i

if.then92.i:                                      ; preds = %if.end89.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @up_write(ptr noundef %i_rwsem.i192.i) #13
  br label %if.end96.i

if.else94.i:                                      ; preds = %if.end89.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @up_read(ptr noundef %i_rwsem.i192.i) #13
  br label %if.end96.i

if.end96.i:                                       ; preds = %if.else94.i, %if.then92.i
  br i1 %got_write.0.off0.i, label %if.then98.i, label %if.end96.i.if.end101.i_crit_edge

if.end96.i.if.end101.i_crit_edge:                 ; preds = %if.end96.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end101.i

if.then98.i:                                      ; preds = %if.end96.i
  call void @__sanitizer_cov_trace_pc() #15
  %171 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %nd, align 8
  call void @mnt_drop_write(ptr noundef %172) #13
  br label %if.end101.i

if.end101.i:                                      ; preds = %if.then98.i, %if.end96.i.if.end101.i_crit_edge
  br i1 %cmp.i189213.i, label %if.end101.i.open_last_lookups.exit_crit_edge, label %if.end105.i

if.end101.i.open_last_lookups.exit_crit_edge:     ; preds = %if.end101.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %open_last_lookups.exit

if.end105.i:                                      ; preds = %if.end101.i
  %173 = ptrtoint ptr %f_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %f_mode.i.i, align 8
  %and107.i = and i32 %174, 1572864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and107.i)
  %tobool108.not.i = icmp eq i32 %and107.i, 0
  br i1 %tobool108.not.i, label %if.end105.i.finish_lookup.i_crit_edge, label %if.then109.i

if.end105.i.finish_lookup.i_crit_edge:            ; preds = %if.end105.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %finish_lookup.i

if.then109.i:                                     ; preds = %if.end105.i
  call void @__sanitizer_cov_trace_pc() #15
  %175 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %dentry.i, align 4
  call void @dput(ptr noundef %176) #13
  %177 = ptrtoint ptr %dentry.i to i32
  call void @__asan_store4_noabort(i32 %177)
  store ptr %retval.0.i212.i, ptr %dentry.i, align 4
  br label %open_last_lookups.exit.thread

finish_lookup.i:                                  ; preds = %if.end105.i.finish_lookup.i_crit_edge, %if.end18.i.finish_lookup.i_crit_edge
  %dentry2.0.i = phi ptr [ %retval.0.i212.i, %if.end105.i.finish_lookup.i_crit_edge ], [ %call14.i, %if.end18.i.finish_lookup.i_crit_edge ]
  %178 = ptrtoint ptr %depth.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %depth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %179)
  %tobool116.not.i = icmp eq i32 %179, 0
  br i1 %tobool116.not.i, label %finish_lookup.i.if.end118.i_crit_edge, label %if.then117.i

finish_lookup.i.if.end118.i_crit_edge:            ; preds = %finish_lookup.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end118.i

if.then117.i:                                     ; preds = %finish_lookup.i
  %180 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %stack.i.i, align 4
  %dec.i196.i = add i32 %179, -1
  %182 = ptrtoint ptr %depth.i to i32
  call void @__asan_store4_noabort(i32 %182)
  store i32 %dec.i196.i, ptr %depth.i, align 4
  %done.i197.i = getelementptr %struct.saved, ptr %181, i32 %dec.i196.i, i32 1
  %183 = ptrtoint ptr %done.i197.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load ptr, ptr %done.i197.i, align 4
  %tobool.not.i.i198.i = icmp eq ptr %184, null
  br i1 %tobool.not.i.i198.i, label %if.then117.i.do_delayed_call.exit.i204.i_crit_edge, label %if.then.i.i200.i

if.then117.i.do_delayed_call.exit.i204.i_crit_edge: ; preds = %if.then117.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do_delayed_call.exit.i204.i

if.then.i.i200.i:                                 ; preds = %if.then117.i
  call void @__sanitizer_cov_trace_pc() #15
  %arg.i.i199.i = getelementptr %struct.saved, ptr %181, i32 %dec.i196.i, i32 1, i32 1
  %185 = ptrtoint ptr %arg.i.i199.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %arg.i.i199.i, align 4
  call void %184(ptr noundef %186) #13
  br label %do_delayed_call.exit.i204.i

do_delayed_call.exit.i204.i:                      ; preds = %if.then.i.i200.i, %if.then117.i.do_delayed_call.exit.i204.i_crit_edge
  %187 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load i32, ptr %flags.i, align 4
  %and.i202.i = and i32 %188, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i202.i)
  %tobool.not.i203.i = icmp eq i32 %and.i202.i, 0
  br i1 %tobool.not.i203.i, label %if.then.i207.i, label %do_delayed_call.exit.i204.i.if.end118.i_crit_edge

do_delayed_call.exit.i204.i.if.end118.i_crit_edge: ; preds = %do_delayed_call.exit.i204.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end118.i

if.then.i207.i:                                   ; preds = %do_delayed_call.exit.i204.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr.i205.i = getelementptr %struct.saved, ptr %181, i32 %dec.i196.i
  %dentry.i.i206.i = getelementptr inbounds %struct.path, ptr %add.ptr.i205.i, i32 0, i32 1
  %189 = ptrtoint ptr %dentry.i.i206.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %dentry.i.i206.i, align 4
  call void @dput(ptr noundef %190) #13
  %191 = ptrtoint ptr %add.ptr.i205.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %add.ptr.i205.i, align 4
  call void @mntput(ptr noundef %192) #13
  br label %if.end118.i

if.end118.i:                                      ; preds = %if.then.i207.i, %do_delayed_call.exit.i204.i.if.end118.i_crit_edge, %finish_lookup.i.if.end118.i_crit_edge
  %193 = ptrtoint ptr %inode.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load ptr, ptr %inode.i, align 4
  %195 = ptrtoint ptr %seq.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load i32, ptr %seq.i, align 4
  %call119.i = call fastcc ptr @step_into(ptr noundef %nd, i32 noundef 1, ptr noundef %dentry2.0.i, ptr noundef %194, i32 noundef %196) #13
  %tobool120.not.i = icmp eq ptr %call119.i, null
  br i1 %tobool120.not.i, label %if.end118.i.open_last_lookups.exit.thread_crit_edge, label %if.then127.i, !prof !362

if.end118.i.open_last_lookups.exit.thread_crit_edge: ; preds = %if.end118.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %open_last_lookups.exit.thread

if.then127.i:                                     ; preds = %if.end118.i
  call void @__sanitizer_cov_trace_pc() #15
  %197 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load i32, ptr %flags.i, align 4
  %and129.i = and i32 %198, -1793
  store i32 %and129.i, ptr %flags.i, align 4
  br label %open_last_lookups.exit

open_last_lookups.exit.thread:                    ; preds = %if.end118.i.open_last_lookups.exit.thread_crit_edge, %if.then109.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %inode.i) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %seq.i) #13
  br label %if.then24.critedge

open_last_lookups.exit:                           ; preds = %if.then127.i, %if.end101.i.open_last_lookups.exit_crit_edge, %if.end49.i.open_last_lookups.exit_crit_edge, %if.then44.i.open_last_lookups.exit_crit_edge, %if.end13.i.open_last_lookups.exit_crit_edge, %if.end.i
  %retval.0.i = phi ptr [ %call.i, %if.end.i ], [ %call119.i, %if.then127.i ], [ %call14.i, %if.end13.i.open_last_lookups.exit_crit_edge ], [ inttoptr (i32 -10 to ptr), %if.then44.i.open_last_lookups.exit_crit_edge ], [ inttoptr (i32 -21 to ptr), %if.end49.i.open_last_lookups.exit_crit_edge ], [ %retval.0.i212.i, %if.end101.i.open_last_lookups.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %inode.i) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %seq.i) #13
  %cmp.not = icmp eq ptr %retval.0.i, null
  br i1 %cmp.not, label %open_last_lookups.exit.if.then24.critedge_crit_edge, label %open_last_lookups.exit.while.cond_crit_edge

open_last_lookups.exit.while.cond_crit_edge:      ; preds = %open_last_lookups.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond

open_last_lookups.exit.if.then24.critedge_crit_edge: ; preds = %open_last_lookups.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then24.critedge

if.then24.critedge:                               ; preds = %open_last_lookups.exit.if.then24.critedge_crit_edge, %open_last_lookups.exit.thread
  %199 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %op, align 4
  %201 = ptrtoint ptr %f_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load i32, ptr %f_mode.i.i, align 8
  %and.i112 = and i32 %202, 1572864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i112)
  %tobool.not.i113 = icmp eq i32 %and.i112, 0
  br i1 %tobool.not.i113, label %if.then.i115, label %if.then24.critedge.if.end9.i_crit_edge

if.then24.critedge.if.end9.i_crit_edge:           ; preds = %if.then24.critedge
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end9.i

if.then.i115:                                     ; preds = %if.then24.critedge
  %call.i114 = call fastcc i32 @complete_walk(ptr noundef %nd) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i114)
  %tobool2.not.i = icmp eq i32 %call.i114, 0
  br i1 %tobool2.not.i, label %if.then.i115.if.end9.i_crit_edge, label %if.then.i115.if.end26_crit_edge

if.then.i115.if.end26_crit_edge:                  ; preds = %if.then.i115
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end26

if.then.i115.if.end9.i_crit_edge:                 ; preds = %if.then.i115
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.then.i115.if.end9.i_crit_edge, %if.then24.critedge.if.end9.i_crit_edge
  %203 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load ptr, ptr %nd, align 8
  %mnt_userns.i.i = getelementptr inbounds %struct.vfsmount, ptr %204, i32 0, i32 3
  %205 = ptrtoint ptr %mnt_userns.i.i to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load volatile ptr, ptr %mnt_userns.i.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !371
  %and12.i = and i32 %200, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i)
  %tobool13.not.i = icmp eq i32 %and12.i, 0
  br i1 %tobool13.not.i, label %if.end9.i.if.end36.i_crit_edge, label %if.then14.i

if.end9.i.if.end36.i_crit_edge:                   ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36.i

if.then14.i:                                      ; preds = %if.end9.i
  %and15.i = and i32 %200, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15.i)
  %tobool16.not.i = icmp eq i32 %and15.i, 0
  br i1 %tobool16.not.i, label %if.then14.i.if.end21.i_crit_edge, label %land.lhs.true.i117

if.then14.i.if.end21.i_crit_edge:                 ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end21.i

land.lhs.true.i117:                               ; preds = %if.then14.i
  %207 = ptrtoint ptr %f_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %f_mode.i.i, align 8
  %and18.i = and i32 %208, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18.i)
  %tobool19.not.i116 = icmp eq i32 %and18.i, 0
  br i1 %tobool19.not.i116, label %land.lhs.true.i117.if.end26_crit_edge, label %land.lhs.true.i117.if.end21.i_crit_edge

land.lhs.true.i117.if.end21.i_crit_edge:          ; preds = %land.lhs.true.i117
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end21.i

land.lhs.true.i117.if.end26_crit_edge:            ; preds = %land.lhs.true.i117
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end26

if.end21.i:                                       ; preds = %land.lhs.true.i117.if.end21.i_crit_edge, %if.then14.i.if.end21.i_crit_edge
  %209 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load ptr, ptr %dentry.i, align 4
  %211 = ptrtoint ptr %210 to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load i32, ptr %210, align 8
  %213 = and i32 %212, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %213)
  %214 = icmp eq i32 %213, 2097152
  br i1 %214, label %if.end21.i.if.end26_crit_edge, label %if.end26.i

if.end21.i.if.end26_crit_edge:                    ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end26

if.end26.i:                                       ; preds = %if.end21.i
  %d_inode.i.i118 = getelementptr inbounds %struct.dentry, ptr %210, i32 0, i32 5
  %215 = ptrtoint ptr %d_inode.i.i118 to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load ptr, ptr %d_inode.i.i118, align 8
  %dir_mode1.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 19
  %217 = ptrtoint ptr %dir_mode1.i.i to i32
  call void @__asan_load2_noabort(i32 %217)
  %218 = load i16, ptr %dir_mode1.i.i, align 4
  %dir_uid2.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 18
  %219 = ptrtoint ptr %dir_uid2.i.i to i32
  call void @__asan_load4_noabort(i32 %219)
  %dir_uid.sroa.0.0.copyload.i.i = load i32, ptr %dir_uid2.i.i, align 8
  %220 = load i32, ptr @sysctl_protected_fifos, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %220)
  %tobool.not.i.i119 = icmp eq i32 %220, 0
  br i1 %tobool.not.i.i119, label %land.lhs.true.i.i121, label %if.end26.i.lor.lhs.false.i.i_crit_edge

if.end26.i.lor.lhs.false.i.i_crit_edge:           ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false.i.i

land.lhs.true.i.i121:                             ; preds = %if.end26.i
  %221 = ptrtoint ptr %216 to i32
  call void @__asan_load2_noabort(i32 %221)
  %222 = load i16, ptr %216, align 8
  %223 = and i16 %222, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 4096, i16 %223)
  %cmp.i.i120 = icmp eq i16 %223, 4096
  br i1 %cmp.i.i120, label %land.lhs.true.i.i121.if.end36.i_crit_edge, label %land.lhs.true.i.i121.lor.lhs.false.i.i_crit_edge

land.lhs.true.i.i121.lor.lhs.false.i.i_crit_edge: ; preds = %land.lhs.true.i.i121
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false.i.i

land.lhs.true.i.i121.if.end36.i_crit_edge:        ; preds = %land.lhs.true.i.i121
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36.i

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i121.lor.lhs.false.i.i_crit_edge, %if.end26.i.lor.lhs.false.i.i_crit_edge
  %224 = load i32, ptr @sysctl_protected_regular, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %224)
  %tobool4.not.i.i = icmp eq i32 %224, 0
  br i1 %tobool4.not.i.i, label %land.lhs.true5.i.i, label %lor.lhs.false.i.i.lor.lhs.false11.i.i_crit_edge

lor.lhs.false.i.i.lor.lhs.false11.i.i_crit_edge:  ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false11.i.i

land.lhs.true5.i.i:                               ; preds = %lor.lhs.false.i.i
  %225 = ptrtoint ptr %216 to i32
  call void @__asan_load2_noabort(i32 %225)
  %226 = load i16, ptr %216, align 8
  %227 = and i16 %226, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32768, i16 %227)
  %cmp9.i.i = icmp eq i16 %227, -32768
  br i1 %cmp9.i.i, label %land.lhs.true5.i.i.if.end36.i_crit_edge, label %land.lhs.true5.i.i.lor.lhs.false11.i.i_crit_edge

land.lhs.true5.i.i.lor.lhs.false11.i.i_crit_edge: ; preds = %land.lhs.true5.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false11.i.i

land.lhs.true5.i.i.if.end36.i_crit_edge:          ; preds = %land.lhs.true5.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36.i

lor.lhs.false11.i.i:                              ; preds = %land.lhs.true5.i.i.lor.lhs.false11.i.i_crit_edge, %lor.lhs.false.i.i.lor.lhs.false11.i.i_crit_edge
  %conv12.i.i = zext i16 %218 to i32
  %and13.i.i = and i32 %conv12.i.i, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13.i.i)
  %tobool14.not.i.i = icmp eq i32 %and13.i.i, 0
  br i1 %tobool14.not.i.i, label %lor.lhs.false11.i.i.if.end36.i_crit_edge, label %lor.lhs.false18.i.i, !prof !362

lor.lhs.false11.i.i.if.end36.i_crit_edge:         ; preds = %lor.lhs.false11.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36.i

lor.lhs.false18.i.i:                              ; preds = %lor.lhs.false11.i.i
  %call.i.i = call fastcc i32 @i_uid_into_mnt(ptr noundef %206, ptr noundef %216) #13
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i, i32 %dir_uid.sroa.0.0.copyload.i.i)
  %cmp.i.i.i122 = icmp eq i32 %call.i.i, %dir_uid.sroa.0.0.copyload.i.i
  br i1 %cmp.i.i.i122, label %lor.lhs.false18.i.i.if.end36.i_crit_edge, label %do.end.i.i

lor.lhs.false18.i.i.if.end36.i_crit_edge:         ; preds = %lor.lhs.false18.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36.i

do.end.i.i:                                       ; preds = %lor.lhs.false18.i.i
  %228 = call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i.i = and i32 %228, -16384
  %229 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %229, i32 0, i32 2
  %230 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %231, i32 0, i32 99
  %232 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load ptr, ptr %cred.i.i, align 16
  %fsuid.i.i = getelementptr inbounds %struct.cred, ptr %233, i32 0, i32 10
  %234 = ptrtoint ptr %fsuid.i.i to i32
  call void @__asan_load4_noabort(i32 %234)
  %agg.tmp24.sroa.0.0.copyload.i.i = load i32, ptr %fsuid.i.i, align 4
  %call27.i.i = call fastcc i32 @i_uid_into_mnt(ptr noundef %206, ptr noundef %216) #13
  call void @__sanitizer_cov_trace_cmp4(i32 %agg.tmp24.sroa.0.0.copyload.i.i, i32 %call27.i.i)
  %cmp.i85.i.i = icmp eq i32 %agg.tmp24.sroa.0.0.copyload.i.i, %call27.i.i
  br i1 %cmp.i85.i.i, label %do.end.i.i.if.end36.i_crit_edge, label %if.end.i.i123

do.end.i.i.if.end36.i_crit_edge:                  ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36.i

if.end.i.i123:                                    ; preds = %do.end.i.i
  %and34.i.i = and i32 %conv12.i.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34.i.i)
  %tobool35.not.i.i = icmp eq i32 %and34.i.i, 0
  br i1 %tobool35.not.i.i, label %lor.lhs.false42.i.i, label %if.end.i.i123.may_create_in_sticky.exit.i_crit_edge, !prof !360

if.end.i.i123.may_create_in_sticky.exit.i_crit_edge: ; preds = %if.end.i.i123
  call void @__sanitizer_cov_trace_pc() #15
  br label %may_create_in_sticky.exit.i

lor.lhs.false42.i.i:                              ; preds = %if.end.i.i123
  %and44.i.i = and i32 %conv12.i.i, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and44.i.i)
  %tobool45.not.i.i = icmp eq i32 %and44.i.i, 0
  br i1 %tobool45.not.i.i, label %lor.lhs.false42.i.i.if.end36.i_crit_edge, label %land.lhs.true46.i.i

lor.lhs.false42.i.i.if.end36.i_crit_edge:         ; preds = %lor.lhs.false42.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36.i

land.lhs.true46.i.i:                              ; preds = %lor.lhs.false42.i.i
  %235 = load i32, ptr @sysctl_protected_fifos, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %235)
  %cmp47.i.i = icmp sgt i32 %235, 1
  br i1 %cmp47.i.i, label %land.lhs.true49.i.i, label %land.lhs.true46.i.i.lor.lhs.false55.i.i_crit_edge

land.lhs.true46.i.i.lor.lhs.false55.i.i_crit_edge: ; preds = %land.lhs.true46.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false55.i.i

land.lhs.true49.i.i:                              ; preds = %land.lhs.true46.i.i
  %236 = ptrtoint ptr %216 to i32
  call void @__asan_load2_noabort(i32 %236)
  %237 = load i16, ptr %216, align 8
  %238 = and i16 %237, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 4096, i16 %238)
  %cmp53.i.i = icmp eq i16 %238, 4096
  br i1 %cmp53.i.i, label %land.lhs.true49.i.i.may_create_in_sticky.exit.i_crit_edge, label %land.lhs.true49.i.i.lor.lhs.false55.i.i_crit_edge

land.lhs.true49.i.i.lor.lhs.false55.i.i_crit_edge: ; preds = %land.lhs.true49.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false55.i.i

land.lhs.true49.i.i.may_create_in_sticky.exit.i_crit_edge: ; preds = %land.lhs.true49.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %may_create_in_sticky.exit.i

lor.lhs.false55.i.i:                              ; preds = %land.lhs.true49.i.i.lor.lhs.false55.i.i_crit_edge, %land.lhs.true46.i.i.lor.lhs.false55.i.i_crit_edge
  %239 = load i32, ptr @sysctl_protected_regular, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %239)
  %cmp56.i.i = icmp sgt i32 %239, 1
  br i1 %cmp56.i.i, label %land.lhs.true58.i.i, label %lor.lhs.false55.i.i.if.end36.i_crit_edge

lor.lhs.false55.i.i.if.end36.i_crit_edge:         ; preds = %lor.lhs.false55.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36.i

land.lhs.true58.i.i:                              ; preds = %lor.lhs.false55.i.i
  %240 = ptrtoint ptr %216 to i32
  call void @__asan_load2_noabort(i32 %240)
  %241 = load i16, ptr %216, align 8
  %242 = and i16 %241, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32768, i16 %242)
  %cmp62.i.i = icmp eq i16 %242, -32768
  br i1 %cmp62.i.i, label %land.lhs.true58.i.i.may_create_in_sticky.exit.i_crit_edge, label %land.lhs.true58.i.i.if.end36.i_crit_edge

land.lhs.true58.i.i.if.end36.i_crit_edge:         ; preds = %land.lhs.true58.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36.i

land.lhs.true58.i.i.may_create_in_sticky.exit.i_crit_edge: ; preds = %land.lhs.true58.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %may_create_in_sticky.exit.i

may_create_in_sticky.exit.i:                      ; preds = %land.lhs.true58.i.i.may_create_in_sticky.exit.i_crit_edge, %land.lhs.true49.i.i.may_create_in_sticky.exit.i_crit_edge, %if.end.i.i123.may_create_in_sticky.exit.i_crit_edge
  %243 = ptrtoint ptr %216 to i32
  call void @__asan_load2_noabort(i32 %243)
  %244 = load i16, ptr %216, align 8
  %245 = and i16 %244, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 4096, i16 %245)
  %cmp68.i.i = icmp eq i16 %245, 4096
  %cond.i.i = select i1 %cmp68.i.i, ptr @.str.56, ptr @.str.57
  call void @audit_log_path_denied(i32 noundef 1703, ptr noundef nonnull %cond.i.i) #13
  br label %if.end26

if.end36.i:                                       ; preds = %land.lhs.true58.i.i.if.end36.i_crit_edge, %lor.lhs.false55.i.i.if.end36.i_crit_edge, %lor.lhs.false42.i.i.if.end36.i_crit_edge, %do.end.i.i.if.end36.i_crit_edge, %lor.lhs.false18.i.i.if.end36.i_crit_edge, %lor.lhs.false11.i.i.if.end36.i_crit_edge, %land.lhs.true5.i.i.if.end36.i_crit_edge, %land.lhs.true.i.i121.if.end36.i_crit_edge, %if.end9.i.if.end36.i_crit_edge
  %246 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load i32, ptr %flags.i, align 4
  %and37.i = and i32 %247, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and37.i)
  %tobool38.not.i = icmp eq i32 %and37.i, 0
  br i1 %tobool38.not.i, label %if.end36.i.if.end44.i_crit_edge, label %land.lhs.true39.i

if.end36.i.if.end44.i_crit_edge:                  ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end44.i

land.lhs.true39.i:                                ; preds = %if.end36.i
  %248 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load ptr, ptr %dentry.i, align 4
  %250 = ptrtoint ptr %249 to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load i32, ptr %249, align 8
  %and.i.i166.i = and i32 %251, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %and.i.i166.i)
  %cmp.i167.i = icmp eq i32 %and.i.i166.i, 2097152
  br i1 %cmp.i167.i, label %land.lhs.true39.i.if.end44.i_crit_edge, label %land.lhs.true39.i.if.end26_crit_edge

land.lhs.true39.i.if.end26_crit_edge:             ; preds = %land.lhs.true39.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end26

land.lhs.true39.i.if.end44.i_crit_edge:           ; preds = %land.lhs.true39.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end44.i

if.end44.i:                                       ; preds = %land.lhs.true39.i.if.end44.i_crit_edge, %if.end36.i.if.end44.i_crit_edge
  %acc_mode45.i = getelementptr inbounds %struct.open_flags, ptr %op, i32 0, i32 2
  %252 = ptrtoint ptr %acc_mode45.i to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load i32, ptr %acc_mode45.i, align 4
  %254 = ptrtoint ptr %f_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load i32, ptr %f_mode.i.i, align 8
  %and47.i = and i32 %255, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47.i)
  %tobool48.not.i = icmp eq i32 %and47.i, 0
  br i1 %tobool48.not.i, label %if.else.i126, label %if.then49.i

if.then49.i:                                      ; preds = %if.end44.i
  call void @__sanitizer_cov_trace_pc() #15
  %and50.i = and i32 %200, -513
  br label %if.end65.i

if.else.i126:                                     ; preds = %if.end44.i
  %256 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load ptr, ptr %dentry.i, align 4
  %258 = ptrtoint ptr %257 to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load i32, ptr %257, align 8
  %and.i.i168.i = and i32 %259, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 4194304, i32 %and.i.i168.i)
  %cmp.i169.i = icmp ne i32 %and.i.i168.i, 4194304
  %and55.i = and i32 %200, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and55.i)
  %tobool56.not.i125 = icmp eq i32 %and55.i, 0
  %or.cond.i = select i1 %cmp.i169.i, i1 true, i1 %tobool56.not.i125
  br i1 %or.cond.i, label %if.else.i126.if.end65.i_crit_edge, label %if.then57.i

if.else.i126.if.end65.i_crit_edge:                ; preds = %if.else.i126
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end65.i

if.then57.i:                                      ; preds = %if.else.i126
  %260 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load ptr, ptr %nd, align 8
  %call60.i = call i32 @mnt_want_write(ptr noundef %261) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60.i)
  %tobool61.not.i = icmp eq i32 %call60.i, 0
  br i1 %tobool61.not.i, label %if.then57.i.if.end65.i_crit_edge, label %if.then57.i.if.end26_crit_edge

if.then57.i.if.end26_crit_edge:                   ; preds = %if.then57.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end26

if.then57.i.if.end65.i_crit_edge:                 ; preds = %if.then57.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end65.i

if.end65.i:                                       ; preds = %if.then57.i.if.end65.i_crit_edge, %if.else.i126.if.end65.i_crit_edge, %if.then49.i
  %open_flag.0.i = phi i32 [ %and50.i, %if.then49.i ], [ %200, %if.else.i126.if.end65.i_crit_edge ], [ %200, %if.then57.i.if.end65.i_crit_edge ]
  %do_truncate.0.off0.i = phi i1 [ false, %if.then49.i ], [ false, %if.else.i126.if.end65.i_crit_edge ], [ true, %if.then57.i.if.end65.i_crit_edge ]
  %acc_mode.0.i = phi i32 [ 0, %if.then49.i ], [ %253, %if.else.i126.if.end65.i_crit_edge ], [ %253, %if.then57.i.if.end65.i_crit_edge ]
  %call67.i = call fastcc i32 @may_open(ptr noundef %206, ptr noundef %nd, i32 noundef %acc_mode.0.i, i32 noundef %open_flag.0.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call67.i)
  %tobool68.not.i127 = icmp eq i32 %call67.i, 0
  br i1 %tobool68.not.i127, label %land.lhs.true69.i, label %if.end65.i.if.end87.i_crit_edge

if.end65.i.if.end87.i_crit_edge:                  ; preds = %if.end65.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end87.i

land.lhs.true69.i:                                ; preds = %if.end65.i
  %262 = ptrtoint ptr %f_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load i32, ptr %f_mode.i.i, align 8
  %and71.i = and i32 %263, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and71.i)
  %tobool72.not.i128 = icmp eq i32 %and71.i, 0
  br i1 %tobool72.not.i128, label %if.end76.i, label %land.lhs.true69.i.if.end81.i129_crit_edge

land.lhs.true69.i.if.end81.i129_crit_edge:        ; preds = %land.lhs.true69.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end81.i129

if.end76.i:                                       ; preds = %land.lhs.true69.i
  %call75.i = call i32 @vfs_open(ptr noundef %nd, ptr noundef %call1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call75.i)
  %tobool77.not.i = icmp eq i32 %call75.i, 0
  br i1 %tobool77.not.i, label %if.end76.i.if.end81.i129_crit_edge, label %if.end76.i.if.end87.i_crit_edge

if.end76.i.if.end87.i_crit_edge:                  ; preds = %if.end76.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end87.i

if.end76.i.if.end81.i129_crit_edge:               ; preds = %if.end76.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end81.i129

if.end81.i129:                                    ; preds = %if.end76.i.if.end81.i129_crit_edge, %land.lhs.true69.i.if.end81.i129_crit_edge
  %264 = ptrtoint ptr %acc_mode45.i to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load i32, ptr %acc_mode45.i, align 4
  %call80.i = call i32 @ima_file_check(ptr noundef %call1, i32 noundef %265) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call80.i)
  %tobool82.not.i = icmp eq i32 %call80.i, 0
  %266 = and i1 %do_truncate.0.off0.i, %tobool82.not.i
  br i1 %266, label %if.then85.i, label %if.end81.i129.if.end87.i_crit_edge

if.end81.i129.if.end87.i_crit_edge:               ; preds = %if.end81.i129
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end87.i

if.then85.i:                                      ; preds = %if.end81.i129
  %267 = ptrtoint ptr %dentry2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load ptr, ptr %dentry2.i.i.i, align 4
  %d_inode.i170.i = getelementptr inbounds %struct.dentry, ptr %268, i32 0, i32 5
  %269 = ptrtoint ptr %d_inode.i170.i to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load ptr, ptr %d_inode.i170.i, align 8
  %i_writecount.i.i.i = getelementptr inbounds %struct.inode, ptr %270, i32 0, i32 42
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %i_writecount.i.i.i, i32 noundef 4) #13
  %271 = ptrtoint ptr %i_writecount.i.i.i to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load volatile i32, ptr %i_writecount.i.i.i, align 4
  br label %do.body1.i.i.i.i.i

do.body1.i.i.i.i.i:                               ; preds = %arch_atomic_cmpxchg.exit.i.i.i.i.i.i.do.body1.i.i.i.i.i_crit_edge, %if.then85.i
  %c.0.i.i.i.i.i = phi i32 [ %272, %if.then85.i ], [ %asmresult3.i.i.i.i.i.i.i.i, %arch_atomic_cmpxchg.exit.i.i.i.i.i.i.do.body1.i.i.i.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %c.0.i.i.i.i.i)
  %cmp.i.i.i.i.i130 = icmp slt i32 %c.0.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i.i130, label %do.body1.i.i.i.i.i.if.end116.i_crit_edge, label %do.cond3.i.i.i.i.i, !prof !360

do.body1.i.i.i.i.i.if.end116.i_crit_edge:         ; preds = %do.body1.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end116.i

do.cond3.i.i.i.i.i:                               ; preds = %do.body1.i.i.i.i.i
  %add.i.i.i.i.i = add nuw i32 %c.0.i.i.i.i.i, 1
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !373
  call void @llvm.prefetch.p0(ptr %i_writecount.i.i.i, i32 1, i32 3, i32 1) #13
  br label %do.body.i.i.i.i.i.i.i.i

do.body.i.i.i.i.i.i.i.i:                          ; preds = %do.body.i.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i.i_crit_edge, %do.cond3.i.i.i.i.i
  %273 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %i_writecount.i.i.i, ptr %i_writecount.i.i.i, i32 %c.0.i.i.i.i.i, i32 %add.i.i.i.i.i, ptr elementtype(i32) %i_writecount.i.i.i) #13, !srcloc !374
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %273, 0
  %tobool.not.i.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i.i.i, label %arch_atomic_cmpxchg.exit.i.i.i.i.i.i, label %do.body.i.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i.i_crit_edge

do.body.i.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i.i_crit_edge: ; preds = %do.body.i.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body.i.i.i.i.i.i.i.i

arch_atomic_cmpxchg.exit.i.i.i.i.i.i:             ; preds = %do.body.i.i.i.i.i.i.i.i
  %asmresult3.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %273, 1
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !375
  %cmp.not.i.i.i.i.i.i = icmp eq i32 %asmresult3.i.i.i.i.i.i.i.i, %c.0.i.i.i.i.i
  br i1 %cmp.not.i.i.i.i.i.i, label %if.end.i171.i, label %arch_atomic_cmpxchg.exit.i.i.i.i.i.i.do.body1.i.i.i.i.i_crit_edge, !prof !362

arch_atomic_cmpxchg.exit.i.i.i.i.i.i.do.body1.i.i.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg.exit.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body1.i.i.i.i.i

if.end.i171.i:                                    ; preds = %arch_atomic_cmpxchg.exit.i.i.i.i.i.i
  %call1.i.i = call i32 @security_path_truncate(ptr noundef %f_path.i.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool2.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool2.not.i.i, label %if.then3.i.i, label %if.end.i171.i.if.end6.i.i_crit_edge

if.end.i171.i.if.end6.i.i_crit_edge:              ; preds = %if.end.i171.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end6.i.i

if.then3.i.i:                                     ; preds = %if.end.i171.i
  call void @__sanitizer_cov_trace_pc() #15
  %274 = ptrtoint ptr %dentry2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load ptr, ptr %dentry2.i.i.i, align 4
  %call5.i.i = call i32 @do_truncate(ptr noundef %206, ptr noundef %275, i64 noundef 0, i32 noundef 32864, ptr noundef %call1) #13
  br label %if.end6.i.i

if.end6.i.i:                                      ; preds = %if.then3.i.i, %if.end.i171.i.if.end6.i.i_crit_edge
  %error.0.i.i = phi i32 [ %call1.i.i, %if.end.i171.i.if.end6.i.i_crit_edge ], [ %call5.i.i, %if.then3.i.i ]
  %call.i.i.i17.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %i_writecount.i.i.i, i32 noundef 4) #13
  call void @llvm.prefetch.p0(ptr %i_writecount.i.i.i, i32 1, i32 3, i32 1) #13
  %276 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %i_writecount.i.i.i, ptr %i_writecount.i.i.i, i32 1, ptr elementtype(i32) %i_writecount.i.i.i) #13, !srcloc !376
  br label %if.end87.i

if.end87.i:                                       ; preds = %if.end6.i.i, %if.end81.i129.if.end87.i_crit_edge, %if.end76.i.if.end87.i_crit_edge, %if.end65.i.if.end87.i_crit_edge
  %error.2.i = phi i32 [ %call80.i, %if.end81.i129.if.end87.i_crit_edge ], [ %error.0.i.i, %if.end6.i.i ], [ %call75.i, %if.end76.i.if.end87.i_crit_edge ], [ %call67.i, %if.end65.i.if.end87.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %error.2.i)
  %cmp.i131 = icmp sgt i32 %error.2.i, 0
  br i1 %cmp.i131, label %do.end.i, label %if.end87.i.if.end116.i_crit_edge, !prof !360

if.end87.i.if.end116.i_crit_edge:                 ; preds = %if.end87.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end116.i

do.end.i:                                         ; preds = %if.end87.i
  call void @__sanitizer_cov_trace_pc() #15
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 3482, i32 noundef 9, ptr noundef null) #13
  br label %if.end116.i

if.end116.i:                                      ; preds = %do.end.i, %if.end87.i.if.end116.i_crit_edge, %do.body1.i.i.i.i.i.if.end116.i_crit_edge
  %error.3.i = phi i32 [ -22, %do.end.i ], [ %error.2.i, %if.end87.i.if.end116.i_crit_edge ], [ -26, %do.body1.i.i.i.i.i.if.end116.i_crit_edge ]
  br i1 %do_truncate.0.off0.i, label %if.then118.i, label %if.end116.i.if.end26_crit_edge

if.end116.i.if.end26_crit_edge:                   ; preds = %if.end116.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end26

if.then118.i:                                     ; preds = %if.end116.i
  call void @__sanitizer_cov_trace_pc() #15
  %277 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %277)
  %278 = load ptr, ptr %nd, align 8
  call void @mnt_drop_write(ptr noundef %278) #13
  br label %if.end26

if.end26:                                         ; preds = %if.then118.i, %if.end116.i.if.end26_crit_edge, %if.then57.i.if.end26_crit_edge, %land.lhs.true39.i.if.end26_crit_edge, %may_create_in_sticky.exit.i, %if.end21.i.if.end26_crit_edge, %land.lhs.true.i117.if.end26_crit_edge, %if.then.i115.if.end26_crit_edge, %while.cond.if.end26_crit_edge
  %error.0 = phi i32 [ %call.i114, %if.then.i115.if.end26_crit_edge ], [ -17, %land.lhs.true.i117.if.end26_crit_edge ], [ -21, %if.end21.i.if.end26_crit_edge ], [ -13, %may_create_in_sticky.exit.i ], [ -20, %land.lhs.true39.i.if.end26_crit_edge ], [ %call60.i, %if.then57.i.if.end26_crit_edge ], [ %error.3.i, %if.then118.i ], [ %error.3.i, %if.end116.i.if.end26_crit_edge ], [ %call20, %while.cond.if.end26_crit_edge ]
  call fastcc void @terminate_walk(ptr noundef %nd)
  br label %if.end28

if.end28:                                         ; preds = %if.end26, %if.then16, %if.then5
  %error.1 = phi i32 [ %call6, %if.then5 ], [ %call17, %if.then16 ], [ %error.0, %if.end26 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %error.1)
  %tobool29.not = icmp eq i32 %error.1, 0
  br i1 %tobool29.not, label %if.then38, label %if.end28.if.end74_crit_edge, !prof !362

if.end28.if.end74_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end74

if.then38:                                        ; preds = %if.end28
  %f_mode = getelementptr inbounds %struct.file, ptr %call1, i32 0, i32 8
  %279 = ptrtoint ptr %f_mode to i32
  call void @__asan_load4_noabort(i32 %279)
  %280 = load i32, ptr %f_mode, align 8
  %and39 = and i32 %280, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and39)
  %tobool40.not = icmp eq i32 %and39, 0
  br i1 %tobool40.not, label %do.end60, label %if.then38.cleanup_crit_edge, !prof !360

if.then38.cleanup_crit_edge:                      ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

do.end60:                                         ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #15
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 3615, i32 noundef 9, ptr noundef null) #13
  br label %if.end74

if.end74:                                         ; preds = %do.end60, %if.end28.if.end74_crit_edge
  %error.2 = phi i32 [ -22, %do.end60 ], [ %error.1, %if.end28.if.end74_crit_edge ]
  call void @fput(ptr noundef %call1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -518, i32 %error.2)
  %cmp75 = icmp eq i32 %error.2, -518
  %and77 = and i32 %flags, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and77)
  %tobool78.not = icmp eq i32 %and77, 0
  %. = select i1 %tobool78.not, i32 -116, i32 -10
  %spec.select = select i1 %cmp75, i32 %., i32 %error.2
  %281 = inttoptr i32 %spec.select to ptr
  br label %cleanup

cleanup:                                          ; preds = %if.end74, %if.then38.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %281, %if.end74 ], [ %call1, %entry.cleanup_crit_edge ], [ %call1, %if.then38.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @do_file_open_root(ptr noundef readonly %root, ptr nocapture noundef readonly %name, ptr nocapture noundef readonly %op) local_unnamed_addr #0 align 64 {
entry:
  %nd = alloca %struct.nameidata, align 8
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %nd) #13
  %0 = getelementptr inbounds i8, ptr %nd, i32 8
  %1 = call ptr @memset(ptr %0, i32 255, i32 136)
  %lookup_flags = getelementptr inbounds %struct.open_flags, ptr %op, i32 0, i32 4
  %2 = ptrtoint ptr %lookup_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %lookup_flags, align 4
  %dentry = getelementptr inbounds %struct.path, ptr %root, i32 0, i32 1
  %4 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dentry, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 8
  %and.i.i = and i32 %7, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 6291456, i32 %and.i.i)
  %cmp.i = icmp eq i32 %and.i.i, 6291456
  br i1 %cmp.i, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %intent = getelementptr inbounds %struct.open_flags, ptr %op, i32 0, i32 3
  %8 = ptrtoint ptr %intent to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %intent, align 4
  %and = and i32 %9, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %call2 = tail call ptr @getname_kernel(ptr noundef %name)
  %cmp.i41 = icmp ugt ptr %call2, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i41, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %10 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task.i.i, align 8
  %nameidata.i.i = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 102
  %14 = ptrtoint ptr %nameidata.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %nameidata.i.i, align 8
  %internal.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 13
  %stack.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 12
  %16 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %internal.i.i, ptr %stack.i.i, align 4
  %depth.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 10
  %17 = ptrtoint ptr %depth.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %depth.i.i, align 4
  %dfd1.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 17
  %18 = ptrtoint ptr %dfd1.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 -1, ptr %dfd1.i.i, align 4
  %name2.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 14
  %19 = ptrtoint ptr %name2.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call2, ptr %name2.i.i, align 8
  %20 = ptrtoint ptr %nd to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %nd, align 8
  %dentry.i.i = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %21 = ptrtoint ptr %dentry.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %dentry.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %15, null
  br i1 %tobool.not.i.i, label %if.end6.__set_nameidata.exit.i_crit_edge, label %cond.true.i.i

if.end6.__set_nameidata.exit.i_crit_edge:         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  br label %__set_nameidata.exit.i

cond.true.i.i:                                    ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  %total_link_count.i.i = getelementptr inbounds %struct.nameidata, ptr %15, i32 0, i32 11
  %22 = ptrtoint ptr %total_link_count.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %total_link_count.i.i, align 8
  br label %__set_nameidata.exit.i

__set_nameidata.exit.i:                           ; preds = %cond.true.i.i, %if.end6.__set_nameidata.exit.i_crit_edge
  %cond.i.i = phi i32 [ %23, %cond.true.i.i ], [ 0, %if.end6.__set_nameidata.exit.i_crit_edge ]
  %total_link_count4.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 11
  %24 = ptrtoint ptr %total_link_count4.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %cond.i.i, ptr %total_link_count4.i.i, align 8
  %saved.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 15
  %25 = ptrtoint ptr %saved.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %15, ptr %saved.i.i, align 4
  %26 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %task.i.i, align 8
  %nameidata7.i.i = getelementptr inbounds %struct.task_struct, ptr %27, i32 0, i32 102
  %28 = ptrtoint ptr %nameidata7.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %nd, ptr %nameidata7.i.i, align 8
  %state.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 5
  %29 = ptrtoint ptr %state.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %state.i, align 8
  %tobool.not.i = icmp eq ptr %root, null
  br i1 %tobool.not.i, label %__set_nameidata.exit.i.set_nameidata.exit_crit_edge, label %if.then.i, !prof !362

__set_nameidata.exit.i.set_nameidata.exit_crit_edge: ; preds = %__set_nameidata.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_nameidata.exit

if.then.i:                                        ; preds = %__set_nameidata.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %30 = ptrtoint ptr %state.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 1, ptr %state.i, align 8
  %root4.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2
  %31 = ptrtoint ptr %root to i32
  call void @__asan_loadN_noabort(i32 %31, i32 8)
  %32 = load i64, ptr %root, align 4
  %33 = ptrtoint ptr %root4.i to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %root4.i, align 8
  br label %set_nameidata.exit

set_nameidata.exit:                               ; preds = %if.then.i, %__set_nameidata.exit.i.set_nameidata.exit_crit_edge
  %or = or i32 %3, 64
  %call7 = call fastcc ptr @path_openat(ptr noundef nonnull %nd, ptr noundef %op, i32 noundef %or)
  %cmp = icmp eq ptr %call7, inttoptr (i32 -10 to ptr)
  br i1 %cmp, label %if.then11, label %set_nameidata.exit.if.end13_crit_edge, !prof !360

set_nameidata.exit.if.end13_crit_edge:            ; preds = %set_nameidata.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end13

if.then11:                                        ; preds = %set_nameidata.exit
  call void @__sanitizer_cov_trace_pc() #15
  %call12 = call fastcc ptr @path_openat(ptr noundef nonnull %nd, ptr noundef %op, i32 noundef %3)
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %set_nameidata.exit.if.end13_crit_edge
  %file.0 = phi ptr [ %call12, %if.then11 ], [ %call7, %set_nameidata.exit.if.end13_crit_edge ]
  %cmp15 = icmp eq ptr %file.0, inttoptr (i32 -116 to ptr)
  br i1 %cmp15, label %if.then22, label %if.end13.if.end25_crit_edge, !prof !360

if.end13.if.end25_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end25

if.then22:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  %or23 = or i32 %3, 32
  %call24 = call fastcc ptr @path_openat(ptr noundef nonnull %nd, ptr noundef %op, i32 noundef %or23)
  br label %if.end25

if.end25:                                         ; preds = %if.then22, %if.end13.if.end25_crit_edge
  %file.1 = phi ptr [ %call24, %if.then22 ], [ %file.0, %if.end13.if.end25_crit_edge ]
  %34 = call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i42 = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i42 to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 2
  %36 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %task.i, align 8
  %nameidata.i = getelementptr inbounds %struct.task_struct, ptr %37, i32 0, i32 102
  %38 = ptrtoint ptr %nameidata.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %nameidata.i, align 8
  %saved.i = getelementptr inbounds %struct.nameidata, ptr %39, i32 0, i32 15
  %40 = ptrtoint ptr %saved.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %saved.i, align 4
  store ptr %41, ptr %nameidata.i, align 8
  %tobool.not.i43 = icmp eq ptr %41, null
  br i1 %tobool.not.i43, label %if.end25.if.end.i_crit_edge, label %if.then.i44

if.end25.if.end.i_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.then.i44:                                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #15
  %total_link_count.i = getelementptr inbounds %struct.nameidata, ptr %39, i32 0, i32 11
  %42 = ptrtoint ptr %total_link_count.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %total_link_count.i, align 8
  %total_link_count4.i = getelementptr inbounds %struct.nameidata, ptr %41, i32 0, i32 11
  %44 = ptrtoint ptr %total_link_count4.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %total_link_count4.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i44, %if.end25.if.end.i_crit_edge
  %stack.i = getelementptr inbounds %struct.nameidata, ptr %39, i32 0, i32 12
  %45 = ptrtoint ptr %stack.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %stack.i, align 4
  %internal.i = getelementptr inbounds %struct.nameidata, ptr %39, i32 0, i32 13
  %cmp.not.i = icmp eq ptr %46, %internal.i
  br i1 %cmp.not.i, label %if.end.i.do.body.i_crit_edge, label %if.then5.i

if.end.i.do.body.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body.i

if.then5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kfree(ptr noundef %46) #13
  br label %do.body.i

do.body.i:                                        ; preds = %if.then5.i, %if.end.i.do.body.i_crit_edge
  %refcnt.i = getelementptr inbounds %struct.filename, ptr %call2, i32 0, i32 2
  %47 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %48)
  %cmp.i45 = icmp slt i32 %48, 1
  br i1 %cmp.i45, label %do.body3.i, label %do.end7.i, !prof !360

do.body3.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 261, 0\0A.popsection", ""() #13, !srcloc !361
  unreachable

do.end7.i:                                        ; preds = %do.body.i
  %dec.i = add nsw i32 %48, -1
  %49 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %dec.i, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp9.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp9.not.i, label %if.end11.i, label %do.end7.i.cleanup_crit_edge

do.end7.i.cleanup_crit_edge:                      ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end11.i:                                       ; preds = %do.end7.i
  %50 = ptrtoint ptr %call2 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %call2, align 4
  %iname.i = getelementptr inbounds %struct.filename, ptr %call2, i32 0, i32 4
  %cmp13.not.i = icmp eq ptr %51, %iname.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %52 = load ptr, ptr @names_cachep, align 4
  br i1 %cmp13.not.i, label %if.else.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %52, ptr noundef %51) #13
  call void @kfree(ptr noundef %call2) #13
  br label %cleanup

if.else.i:                                        ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %52, ptr noundef %call2) #13
  br label %cleanup

cleanup:                                          ; preds = %if.else.i, %if.then14.i, %do.end7.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi ptr [ inttoptr (i32 -40 to ptr), %land.lhs.true.cleanup_crit_edge ], [ %call2, %if.end.cleanup_crit_edge ], [ %file.1, %do.end7.i.cleanup_crit_edge ], [ %file.1, %if.then14.i ], [ %file.1, %if.else.i ]
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %nd) #13
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @kern_path_create(i32 noundef %dfd, ptr nocapture noundef readonly %pathname, ptr nocapture noundef %path, i32 noundef %lookup_flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @getname_kernel(ptr noundef %pathname)
  %call1 = tail call fastcc ptr @filename_create(i32 noundef %dfd, ptr noundef %call, ptr noundef %path, i32 noundef %lookup_flags)
  %cmp.i.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %entry.putname.exit_crit_edge, label %do.body.i

entry.putname.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

do.body.i:                                        ; preds = %entry
  %refcnt.i = getelementptr inbounds %struct.filename, ptr %call, i32 0, i32 2
  %0 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %do.body3.i, label %do.end7.i, !prof !360

do.body3.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 261, 0\0A.popsection", ""() #13, !srcloc !361
  unreachable

do.end7.i:                                        ; preds = %do.body.i
  %dec.i = add nsw i32 %1, -1
  %2 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %dec.i, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp9.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp9.not.i, label %if.end11.i, label %do.end7.i.putname.exit_crit_edge

do.end7.i.putname.exit_crit_edge:                 ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

if.end11.i:                                       ; preds = %do.end7.i
  %3 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %call, align 4
  %iname.i = getelementptr inbounds %struct.filename, ptr %call, i32 0, i32 4
  %cmp13.not.i = icmp eq ptr %4, %iname.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %5 = load ptr, ptr @names_cachep, align 4
  br i1 %cmp13.not.i, label %if.else.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @kmem_cache_free(ptr noundef %5, ptr noundef %4) #13
  tail call void @kfree(ptr noundef %call) #13
  br label %putname.exit

if.else.i:                                        ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @kmem_cache_free(ptr noundef %5, ptr noundef %call) #13
  br label %putname.exit

putname.exit:                                     ; preds = %if.else.i, %if.then14.i, %do.end7.i.putname.exit_crit_edge, %entry.putname.exit_crit_edge
  ret ptr %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @filename_create(i32 noundef %dfd, ptr noundef %name, ptr nocapture noundef %path, i32 noundef %lookup_flags) unnamed_addr #0 align 64 {
entry:
  %last = alloca %struct.qstr, align 8
  %type = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %last) #13
  %0 = call ptr @memset(ptr %last, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %type) #13
  %1 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %type, align 4, !annotation !367
  %and = and i32 %lookup_flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %and1 = and i32 %lookup_flags, 32
  %call2 = call fastcc i32 @filename_parentat(i32 noundef %dfd, ptr noundef %name, i32 noundef %and1, ptr noundef %path, ptr noundef nonnull %last, ptr noundef nonnull %type)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %2 = inttoptr i32 %call2 to ptr
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp.not = icmp eq i32 %4, 0
  br i1 %cmp.not, label %if.end8, label %if.end.out_crit_edge, !prof !362

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end8:                                          ; preds = %if.end
  %5 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %path, align 4
  %call9 = tail call i32 @mnt_want_write(ptr noundef %6) #13
  %or = or i32 %and1, 1536
  %dentry10 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %7 = ptrtoint ptr %dentry10 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dentry10, align 4
  %d_inode = getelementptr inbounds %struct.dentry, ptr %8, i32 0, i32 5
  %9 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %d_inode, align 8
  %i_rwsem.i = getelementptr inbounds %struct.inode, ptr %10, i32 0, i32 25
  tail call void @down_write_nested(ptr noundef %i_rwsem.i, i32 noundef 1) #13
  %11 = ptrtoint ptr %dentry10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dentry10, align 4
  %call12 = call fastcc ptr @__lookup_hash(ptr noundef nonnull %last, ptr noundef %12, i32 noundef %or)
  %cmp.i = icmp ugt ptr %call12, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end8.unlock_crit_edge, label %if.end15

if.end8.unlock_crit_edge:                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %unlock

if.end15:                                         ; preds = %if.end8
  %13 = ptrtoint ptr %call12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %call12, align 8
  %and.i.i.i.i = and i32 %14, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %cmp.i.i.i.not = icmp eq i32 %and.i.i.i.i, 0
  br i1 %cmp.i.i.i.not, label %if.end18, label %if.end15.fail_crit_edge

if.end15.fail_crit_edge:                          ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #15
  br label %fail

if.end18:                                         ; preds = %if.end15
  br i1 %tobool.not, label %land.rhs, label %if.end18.if.end29_crit_edge

if.end18.if.end29_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end29

land.rhs:                                         ; preds = %if.end18
  %name20 = getelementptr inbounds %struct.qstr, ptr %last, i32 0, i32 1
  %15 = ptrtoint ptr %name20 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %name20, align 8
  %17 = ptrtoint ptr %last to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %last, align 8
  %arrayidx = getelementptr i8, ptr %16, i32 %18
  %19 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool21.not = icmp eq i8 %20, 0
  br i1 %tobool21.not, label %land.rhs.if.end29_crit_edge, label %land.rhs.fail_crit_edge, !prof !362

land.rhs.fail_crit_edge:                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #15
  br label %fail

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end29

if.end29:                                         ; preds = %land.rhs.if.end29_crit_edge, %if.end18.if.end29_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool30.not = icmp eq i32 %call9, 0
  br i1 %tobool30.not, label %if.end29.cleanup_crit_edge, label %if.end29.fail_crit_edge, !prof !362

if.end29.fail_crit_edge:                          ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  br label %fail

if.end29.cleanup_crit_edge:                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

fail:                                             ; preds = %if.end29.fail_crit_edge, %land.rhs.fail_crit_edge, %if.end15.fail_crit_edge
  %error.0 = phi i32 [ -17, %if.end15.fail_crit_edge ], [ -2, %land.rhs.fail_crit_edge ], [ %call9, %if.end29.fail_crit_edge ]
  call void @dput(ptr noundef %call12) #13
  %21 = inttoptr i32 %error.0 to ptr
  br label %unlock

unlock:                                           ; preds = %fail, %if.end8.unlock_crit_edge
  %dentry.0 = phi ptr [ %call12, %if.end8.unlock_crit_edge ], [ %21, %fail ]
  %22 = ptrtoint ptr %dentry10 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %dentry10, align 4
  %d_inode41 = getelementptr inbounds %struct.dentry, ptr %23, i32 0, i32 5
  %24 = ptrtoint ptr %d_inode41 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %d_inode41, align 8
  %i_rwsem.i69 = getelementptr inbounds %struct.inode, ptr %25, i32 0, i32 25
  call void @up_write(ptr noundef %i_rwsem.i69) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool42.not = icmp eq i32 %call9, 0
  br i1 %tobool42.not, label %if.then43, label %unlock.out_crit_edge

unlock.out_crit_edge:                             ; preds = %unlock
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.then43:                                        ; preds = %unlock
  call void @__sanitizer_cov_trace_pc() #15
  %26 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %path, align 4
  call void @mnt_drop_write(ptr noundef %27) #13
  br label %out

out:                                              ; preds = %if.then43, %unlock.out_crit_edge, %if.end.out_crit_edge
  %dentry.1 = phi ptr [ inttoptr (i32 -17 to ptr), %if.end.out_crit_edge ], [ %dentry.0, %unlock.out_crit_edge ], [ %dentry.0, %if.then43 ]
  %dentry.i = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %28 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %dentry.i, align 4
  call void @dput(ptr noundef %29) #13
  %30 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %path, align 4
  call void @mntput(ptr noundef %31) #13
  br label %cleanup

cleanup:                                          ; preds = %out, %if.end29.cleanup_crit_edge, %if.then
  %retval.0 = phi ptr [ %2, %if.then ], [ %dentry.1, %out ], [ %call12, %if.end29.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %type) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %last) #13
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @done_path_create(ptr nocapture noundef readonly %path, ptr noundef %dentry) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @dput(ptr noundef %dentry) #13
  %dentry1 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %0 = ptrtoint ptr %dentry1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dentry1, align 4
  %d_inode = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %d_inode, align 8
  %i_rwsem.i = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 25
  tail call void @up_write(ptr noundef %i_rwsem.i) #13
  %4 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %path, align 4
  tail call void @mnt_drop_write(ptr noundef %5) #13
  %6 = ptrtoint ptr %dentry1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dentry1, align 4
  tail call void @dput(ptr noundef %7) #13
  %8 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %path, align 4
  tail call void @mntput(ptr noundef %9) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mnt_drop_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @user_path_create(i32 noundef %dfd, ptr noundef %pathname, ptr nocapture noundef %path, i32 noundef %lookup_flags) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %call.i = tail call ptr @getname_flags(ptr noundef %pathname, i32 noundef 0, ptr noundef null) #13
  %call1 = tail call fastcc ptr @filename_create(i32 noundef %dfd, ptr noundef %call.i, ptr noundef %path, i32 noundef %lookup_flags)
  %cmp.i.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %entry.putname.exit_crit_edge, label %do.body.i

entry.putname.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

do.body.i:                                        ; preds = %entry
  %refcnt.i = getelementptr inbounds %struct.filename, ptr %call.i, i32 0, i32 2
  %0 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %do.body3.i, label %do.end7.i, !prof !360

do.body3.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 261, 0\0A.popsection", ""() #13, !srcloc !361
  unreachable

do.end7.i:                                        ; preds = %do.body.i
  %dec.i = add nsw i32 %1, -1
  %2 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %dec.i, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp9.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp9.not.i, label %if.end11.i, label %do.end7.i.putname.exit_crit_edge

do.end7.i.putname.exit_crit_edge:                 ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

if.end11.i:                                       ; preds = %do.end7.i
  %3 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %call.i, align 4
  %iname.i = getelementptr inbounds %struct.filename, ptr %call.i, i32 0, i32 4
  %cmp13.not.i = icmp eq ptr %4, %iname.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %5 = load ptr, ptr @names_cachep, align 4
  br i1 %cmp13.not.i, label %if.else.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @kmem_cache_free(ptr noundef %5, ptr noundef %4) #13
  tail call void @kfree(ptr noundef %call.i) #13
  br label %putname.exit

if.else.i:                                        ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @kmem_cache_free(ptr noundef %5, ptr noundef %call.i) #13
  br label %putname.exit

putname.exit:                                     ; preds = %if.else.i, %if.then14.i, %do.end7.i.putname.exit_crit_edge, %entry.putname.exit_crit_edge
  ret ptr %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vfs_mknod(ptr noundef %mnt_userns, ptr noundef %dir, ptr noundef %dentry, i16 noundef zeroext %mode, i32 noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = and i16 %mode, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 8192, i16 %0)
  %cmp = icmp eq i16 %0, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dev)
  %cmp2 = icmp eq i32 %dev, 0
  %spec.select = and i1 %cmp, %cmp2
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %1 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %d_inode.i, align 8
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %if.end.i, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %i_flags.i = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 4
  %3 = ptrtoint ptr %i_flags.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %i_flags.i, align 4
  %and.i = and i32 %4, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %if.end3.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end3.i:                                        ; preds = %if.end.i
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 8
  %5 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %i_sb.i, align 4
  %call.i = tail call fastcc zeroext i1 @fsuidgid_has_mapping(ptr noundef %6, ptr noundef %mnt_userns) #13
  br i1 %call.i, label %may_create.exit, label %if.end3.i.cleanup_crit_edge

if.end3.i.cleanup_crit_edge:                      ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

may_create.exit:                                  ; preds = %if.end3.i
  %call6.i = tail call i32 @inode_permission(ptr noundef %mnt_userns, ptr noundef %dir, i32 noundef 3) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool.not = icmp eq i32 %call6.i, 0
  br i1 %tobool.not, label %if.end, label %may_create.exit.cleanup_crit_edge

may_create.exit.cleanup_crit_edge:                ; preds = %may_create.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %may_create.exit
  call void @__sanitizer_cov_trace_const_cmp2(i16 24576, i16 %0)
  %cmp10 = icmp eq i16 %0, 24576
  %or.cond = or i1 %cmp, %cmp10
  %or.cond.not = xor i1 %or.cond, true
  %brmerge = or i1 %spec.select, %or.cond.not
  br i1 %brmerge, label %if.end.if.end16_crit_edge, label %land.lhs.true13

if.end.if.end16_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16

land.lhs.true13:                                  ; preds = %if.end
  %call14 = tail call zeroext i1 @capable(i32 noundef 27) #13
  br i1 %call14, label %land.lhs.true13.if.end16_crit_edge, label %land.lhs.true13.cleanup_crit_edge

land.lhs.true13.cleanup_crit_edge:                ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

land.lhs.true13.if.end16_crit_edge:               ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16

if.end16:                                         ; preds = %land.lhs.true13.if.end16_crit_edge, %if.end.if.end16_crit_edge
  %i_op = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 7
  %7 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %i_op, align 8
  %mknod = getelementptr inbounds %struct.inode_operations, ptr %8, i32 0, i32 11
  %9 = ptrtoint ptr %mknod to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mknod, align 4
  %tobool17.not = icmp eq ptr %10, null
  br i1 %tobool17.not, label %if.end16.cleanup_crit_edge, label %if.end19

if.end16.cleanup_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end19:                                         ; preds = %if.end16
  %11 = zext i16 %0 to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.85)
  switch i16 %0, label %if.end19.if.end24_crit_edge [
    i16 24576, label %if.end19.if.end.i61_crit_edge
    i16 8192, label %if.end19.if.end.i61_crit_edge68
  ]

if.end19.if.end.i61_crit_edge68:                  ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i61

if.end19.if.end.i61_crit_edge:                    ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i61

if.end19.if.end24_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end24

if.end.i61:                                       ; preds = %if.end19.if.end.i61_crit_edge, %if.end19.if.end.i61_crit_edge68
  br i1 %spec.select, label %if.end.i61.if.end24_crit_edge, label %devcgroup_inode_mknod.exit

if.end.i61.if.end24_crit_edge:                    ; preds = %if.end.i61
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end24

devcgroup_inode_mknod.exit:                       ; preds = %if.end.i61
  %..i = select i1 %cmp10, i16 1, i16 2
  %shr.i = lshr i32 %dev, 20
  %and13.i = and i32 %dev, 1048575
  %call.i62 = tail call i32 @devcgroup_check_permission(i16 noundef signext %..i, i32 noundef %shr.i, i32 noundef %and13.i, i16 noundef signext 1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i62)
  %tobool22.not = icmp eq i32 %call.i62, 0
  br i1 %tobool22.not, label %devcgroup_inode_mknod.exit.if.end24_crit_edge, label %devcgroup_inode_mknod.exit.cleanup_crit_edge

devcgroup_inode_mknod.exit.cleanup_crit_edge:     ; preds = %devcgroup_inode_mknod.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

devcgroup_inode_mknod.exit.if.end24_crit_edge:    ; preds = %devcgroup_inode_mknod.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end24

if.end24:                                         ; preds = %devcgroup_inode_mknod.exit.if.end24_crit_edge, %if.end.i61.if.end24_crit_edge, %if.end19.if.end24_crit_edge
  %call25 = tail call i32 @security_inode_mknod(ptr noundef %dir, ptr noundef %dentry, i16 noundef zeroext %mode, i32 noundef %dev) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.end28, label %if.end24.cleanup_crit_edge

if.end24.cleanup_crit_edge:                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end28:                                         ; preds = %if.end24
  %12 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %i_op, align 8
  %mknod30 = getelementptr inbounds %struct.inode_operations, ptr %13, i32 0, i32 11
  %14 = ptrtoint ptr %mknod30 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mknod30, align 4
  %call31 = tail call i32 %15(ptr noundef %mnt_userns, ptr noundef %dir, ptr noundef %dentry, i16 noundef zeroext %mode, i32 noundef %dev) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.then33, label %if.end28.cleanup_crit_edge

if.end28.cleanup_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then33:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @fsnotify_create(ptr noundef %dir, ptr noundef %dentry)
  br label %cleanup

cleanup:                                          ; preds = %if.then33, %if.end28.cleanup_crit_edge, %if.end24.cleanup_crit_edge, %devcgroup_inode_mknod.exit.cleanup_crit_edge, %if.end16.cleanup_crit_edge, %land.lhs.true13.cleanup_crit_edge, %may_create.exit.cleanup_crit_edge, %if.end3.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6.i, %may_create.exit.cleanup_crit_edge ], [ -1, %land.lhs.true13.cleanup_crit_edge ], [ -1, %if.end16.cleanup_crit_edge ], [ %call.i62, %devcgroup_inode_mknod.exit.cleanup_crit_edge ], [ %call25, %if.end24.cleanup_crit_edge ], [ 0, %if.then33 ], [ %call31, %if.end28.cleanup_crit_edge ], [ -75, %if.end3.i.cleanup_crit_edge ], [ -2, %if.end.i.cleanup_crit_edge ], [ -17, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @capable(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_inode_mknod(ptr noundef, ptr noundef, i16 noundef zeroext, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_mknodat(i32 noundef %dfd, i32 noundef %filename, i32 noundef %mode, i32 noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %filename to ptr
  %conv = trunc i32 %mode to i16
  %call.i.i = tail call ptr @getname_flags(ptr noundef %0, i32 noundef 0, ptr noundef null) #13
  %call1.i = tail call fastcc i32 @do_mknodat(i32 noundef %dfd, ptr noundef %call.i.i, i16 noundef zeroext %conv, i32 noundef %dev) #13
  ret i32 %call1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_mknod(i32 noundef %filename, i32 noundef %mode, i32 noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %filename to ptr
  %conv = trunc i32 %mode to i16
  %call.i.i = tail call ptr @getname_flags(ptr noundef %0, i32 noundef 0, ptr noundef null) #13
  %call1.i = tail call fastcc i32 @do_mknodat(i32 noundef -100, ptr noundef %call.i.i, i16 noundef zeroext %conv, i32 noundef %dev) #13
  ret i32 %call1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vfs_mkdir(ptr noundef %mnt_userns, ptr noundef %dir, ptr noundef %dentry, i16 noundef zeroext %mode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.end.i, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %i_flags.i = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 4
  %2 = ptrtoint ptr %i_flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %i_flags.i, align 4
  %and.i = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %if.end3.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end3.i:                                        ; preds = %if.end.i
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 8
  %4 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %i_sb.i, align 4
  %call.i = tail call fastcc zeroext i1 @fsuidgid_has_mapping(ptr noundef %5, ptr noundef %mnt_userns) #13
  br i1 %call.i, label %may_create.exit, label %if.end3.i.cleanup_crit_edge

if.end3.i.cleanup_crit_edge:                      ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

may_create.exit:                                  ; preds = %if.end3.i
  %call6.i = tail call i32 @inode_permission(ptr noundef %mnt_userns, ptr noundef %dir, i32 noundef 3) #13
  %6 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %i_sb.i, align 4
  %s_max_links = getelementptr inbounds %struct.super_block, ptr %7, i32 0, i32 41
  %8 = ptrtoint ptr %s_max_links to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %s_max_links, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool.not = icmp eq i32 %call6.i, 0
  br i1 %tobool.not, label %if.end, label %may_create.exit.cleanup_crit_edge

may_create.exit.cleanup_crit_edge:                ; preds = %may_create.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %may_create.exit
  %i_op = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 7
  %10 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %i_op, align 8
  %mkdir = getelementptr inbounds %struct.inode_operations, ptr %11, i32 0, i32 9
  %12 = ptrtoint ptr %mkdir to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %mkdir, align 4
  %tobool1.not = icmp eq ptr %13, null
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %14 = and i16 %mode, 1023
  %call5 = tail call i32 @security_inode_mkdir(ptr noundef %dir, ptr noundef %dentry, i16 noundef zeroext %14) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end8, label %if.end3.cleanup_crit_edge

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end8:                                          ; preds = %if.end3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool9.not = icmp eq i32 %9, 0
  br i1 %tobool9.not, label %if.end8.if.end12_crit_edge, label %land.lhs.true

if.end8.if.end12_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end12

land.lhs.true:                                    ; preds = %if.end8
  %15 = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 12
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %9)
  %cmp.not = icmp ult i32 %17, %9
  br i1 %cmp.not, label %land.lhs.true.if.end12_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

land.lhs.true.if.end12_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end12

if.end12:                                         ; preds = %land.lhs.true.if.end12_crit_edge, %if.end8.if.end12_crit_edge
  %18 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %i_op, align 8
  %mkdir14 = getelementptr inbounds %struct.inode_operations, ptr %19, i32 0, i32 9
  %20 = ptrtoint ptr %mkdir14 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %mkdir14, align 4
  %call15 = tail call i32 %21(ptr noundef %mnt_userns, ptr noundef %dir, ptr noundef %dentry, i16 noundef zeroext %14) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %if.then17, label %if.end12.cleanup_crit_edge

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then17:                                        ; preds = %if.end12
  %22 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %i_sb.i, align 4
  %s_fsnotify_connectors.i.i.i = getelementptr inbounds %struct.super_block, ptr %23, i32 0, i32 48
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i.i.i, i32 noundef 4) #13
  %24 = ptrtoint ptr %s_fsnotify_connectors.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %s_fsnotify_connectors.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp.i.i.i = icmp eq i32 %25, 0
  br i1 %cmp.i.i.i, label %if.then17.cleanup_crit_edge, label %if.end.i.i.i

if.then17.cleanup_crit_edge:                      ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i.i.i:                                     ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #15
  %d_name.i.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 4
  %call1.i.i.i = tail call i32 @fsnotify(i32 noundef 1073742080, ptr noundef %dentry, i32 noundef 3, ptr noundef %dir, ptr noundef %d_name.i.i, ptr noundef null, i32 noundef 0) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i.i, %if.then17.cleanup_crit_edge, %if.end12.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %may_create.exit.cleanup_crit_edge, %if.end3.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6.i, %may_create.exit.cleanup_crit_edge ], [ -1, %if.end.cleanup_crit_edge ], [ %call5, %if.end3.cleanup_crit_edge ], [ -31, %land.lhs.true.cleanup_crit_edge ], [ %call15, %if.end12.cleanup_crit_edge ], [ 0, %if.then17.cleanup_crit_edge ], [ 0, %if.end.i.i.i ], [ -75, %if.end3.i.cleanup_crit_edge ], [ -2, %if.end.i.cleanup_crit_edge ], [ -17, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_inode_mkdir(ptr noundef, ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @do_mkdirat(i32 noundef %dfd, ptr noundef %name, i16 noundef zeroext %mode) local_unnamed_addr #0 align 64 {
entry:
  %path = alloca %struct.path, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path) #13
  %0 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %path, align 4, !annotation !367
  %1 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !367
  %call = call fastcc ptr @filename_create(i32 noundef %dfd, ptr noundef %name, ptr noundef nonnull %path, i32 noundef 2)
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %entry.out_putname.split.loop.exit33_crit_edge, label %if.end

entry.out_putname.split.loop.exit33_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_putname.split.loop.exit33

if.end:                                           ; preds = %entry
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %1, align 4
  %d_inode = getelementptr inbounds %struct.dentry, ptr %4, i32 0, i32 5
  %5 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %d_inode, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %6, i32 0, i32 8
  %7 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %i_sb, align 4
  %s_flags = getelementptr inbounds %struct.super_block, ptr %8, i32 0, i32 10
  %9 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %s_flags, align 4
  %and = and i32 %10, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then4, label %if.end.if.end8_crit_edge

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call5 = call i32 @current_umask() #13
  %11 = trunc i32 %call5 to i16
  %12 = xor i16 %11, -1
  %conv7 = and i16 %12, %mode
  br label %if.end8

if.end8:                                          ; preds = %if.then4, %if.end.if.end8_crit_edge
  %mode.addr.1 = phi i16 [ %mode, %if.end.if.end8_crit_edge ], [ %conv7, %if.then4 ]
  %call9 = call i32 @security_path_mkdir(ptr noundef nonnull %path, ptr noundef %call, i16 noundef zeroext %mode.addr.1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.then11, label %if.end8.if.end16_crit_edge

if.end8.if.end16_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16

if.then11:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  %13 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %path, align 4
  %mnt_userns.i = getelementptr inbounds %struct.vfsmount, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %mnt_userns.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %mnt_userns.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !371
  %17 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %1, align 4
  %d_inode14 = getelementptr inbounds %struct.dentry, ptr %18, i32 0, i32 5
  %19 = ptrtoint ptr %d_inode14 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %d_inode14, align 8
  %call15 = call i32 @vfs_mkdir(ptr noundef %16, ptr noundef %20, ptr noundef %call, i16 noundef zeroext %mode.addr.1)
  br label %if.end16

if.end16:                                         ; preds = %if.then11, %if.end8.if.end16_crit_edge
  %error.0 = phi i32 [ %call9, %if.end8.if.end16_crit_edge ], [ %call15, %if.then11 ]
  call void @dput(ptr noundef %call) #13
  %21 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %1, align 4
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %22, i32 0, i32 5
  %23 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %d_inode.i, align 8
  %i_rwsem.i.i = getelementptr inbounds %struct.inode, ptr %24, i32 0, i32 25
  call void @up_write(ptr noundef %i_rwsem.i.i) #13
  %25 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %path, align 4
  call void @mnt_drop_write(ptr noundef %26) #13
  %27 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %1, align 4
  call void @dput(ptr noundef %28) #13
  %29 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %path, align 4
  call void @mntput(ptr noundef %30) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -116, i32 %error.0)
  %cmp.i31 = icmp eq i32 %error.0, -116
  br i1 %cmp.i31, label %retry.1, label %if.end16.out_putname_crit_edge

if.end16.out_putname_crit_edge:                   ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_putname

retry.1:                                          ; preds = %if.end16
  %call.1 = call fastcc ptr @filename_create(i32 noundef %dfd, ptr noundef %name, ptr noundef nonnull %path, i32 noundef 34)
  %cmp.i.1 = icmp ugt ptr %call.1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.1, label %retry.1.out_putname.split.loop.exit33_crit_edge, label %if.end.1

retry.1.out_putname.split.loop.exit33_crit_edge:  ; preds = %retry.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_putname.split.loop.exit33

if.end.1:                                         ; preds = %retry.1
  %31 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %1, align 4
  %d_inode.1 = getelementptr inbounds %struct.dentry, ptr %32, i32 0, i32 5
  %33 = ptrtoint ptr %d_inode.1 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %d_inode.1, align 8
  %i_sb.1 = getelementptr inbounds %struct.inode, ptr %34, i32 0, i32 8
  %35 = ptrtoint ptr %i_sb.1 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %i_sb.1, align 4
  %s_flags.1 = getelementptr inbounds %struct.super_block, ptr %36, i32 0, i32 10
  %37 = ptrtoint ptr %s_flags.1 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %s_flags.1, align 4
  %and.1 = and i32 %38, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1)
  %tobool.not.1 = icmp eq i32 %and.1, 0
  br i1 %tobool.not.1, label %if.then4.1, label %if.end.1.if.end8.1_crit_edge

if.end.1.if.end8.1_crit_edge:                     ; preds = %if.end.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8.1

if.then4.1:                                       ; preds = %if.end.1
  call void @__sanitizer_cov_trace_pc() #15
  %call5.1 = call i32 @current_umask() #13
  %39 = trunc i32 %call5.1 to i16
  %40 = xor i16 %39, -1
  %conv7.1 = and i16 %mode.addr.1, %40
  br label %if.end8.1

if.end8.1:                                        ; preds = %if.then4.1, %if.end.1.if.end8.1_crit_edge
  %mode.addr.1.1 = phi i16 [ %mode.addr.1, %if.end.1.if.end8.1_crit_edge ], [ %conv7.1, %if.then4.1 ]
  %call9.1 = call i32 @security_path_mkdir(ptr noundef nonnull %path, ptr noundef %call.1, i16 noundef zeroext %mode.addr.1.1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.1)
  %tobool10.not.1 = icmp eq i32 %call9.1, 0
  br i1 %tobool10.not.1, label %if.then11.1, label %if.end8.1.if.end16.1_crit_edge

if.end8.1.if.end16.1_crit_edge:                   ; preds = %if.end8.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16.1

if.then11.1:                                      ; preds = %if.end8.1
  call void @__sanitizer_cov_trace_pc() #15
  %41 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %path, align 4
  %mnt_userns.i.1 = getelementptr inbounds %struct.vfsmount, ptr %42, i32 0, i32 3
  %43 = ptrtoint ptr %mnt_userns.i.1 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile ptr, ptr %mnt_userns.i.1, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !371
  %45 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %1, align 4
  %d_inode14.1 = getelementptr inbounds %struct.dentry, ptr %46, i32 0, i32 5
  %47 = ptrtoint ptr %d_inode14.1 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %d_inode14.1, align 8
  %call15.1 = call i32 @vfs_mkdir(ptr noundef %44, ptr noundef %48, ptr noundef %call.1, i16 noundef zeroext %mode.addr.1.1)
  br label %if.end16.1

if.end16.1:                                       ; preds = %if.then11.1, %if.end8.1.if.end16.1_crit_edge
  %error.0.1 = phi i32 [ %call9.1, %if.end8.1.if.end16.1_crit_edge ], [ %call15.1, %if.then11.1 ]
  call void @dput(ptr noundef %call.1) #13
  %49 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %1, align 4
  %d_inode.i.1 = getelementptr inbounds %struct.dentry, ptr %50, i32 0, i32 5
  %51 = ptrtoint ptr %d_inode.i.1 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %d_inode.i.1, align 8
  %i_rwsem.i.i.1 = getelementptr inbounds %struct.inode, ptr %52, i32 0, i32 25
  call void @up_write(ptr noundef %i_rwsem.i.i.1) #13
  %53 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %path, align 4
  call void @mnt_drop_write(ptr noundef %54) #13
  %55 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %1, align 4
  call void @dput(ptr noundef %56) #13
  %57 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %path, align 4
  call void @mntput(ptr noundef %58) #13
  br label %out_putname

out_putname.split.loop.exit33:                    ; preds = %retry.1.out_putname.split.loop.exit33_crit_edge, %entry.out_putname.split.loop.exit33_crit_edge
  %call.lcssa = phi ptr [ %call, %entry.out_putname.split.loop.exit33_crit_edge ], [ %call.1, %retry.1.out_putname.split.loop.exit33_crit_edge ]
  %59 = ptrtoint ptr %call.lcssa to i32
  br label %out_putname

out_putname:                                      ; preds = %out_putname.split.loop.exit33, %if.end16.1, %if.end16.out_putname_crit_edge
  %error.1 = phi i32 [ %59, %out_putname.split.loop.exit33 ], [ %error.0, %if.end16.out_putname_crit_edge ], [ %error.0.1, %if.end16.1 ]
  %cmp.i.i = icmp ugt ptr %name, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %out_putname.putname.exit_crit_edge, label %do.body.i

out_putname.putname.exit_crit_edge:               ; preds = %out_putname
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

do.body.i:                                        ; preds = %out_putname
  %refcnt.i = getelementptr inbounds %struct.filename, ptr %name, i32 0, i32 2
  %60 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %61)
  %cmp.i32 = icmp slt i32 %61, 1
  br i1 %cmp.i32, label %do.body3.i, label %do.end7.i, !prof !360

do.body3.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 261, 0\0A.popsection", ""() #13, !srcloc !361
  unreachable

do.end7.i:                                        ; preds = %do.body.i
  %dec.i = add nsw i32 %61, -1
  %62 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %dec.i, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp9.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp9.not.i, label %if.end11.i, label %do.end7.i.putname.exit_crit_edge

do.end7.i.putname.exit_crit_edge:                 ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

if.end11.i:                                       ; preds = %do.end7.i
  %63 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %name, align 4
  %iname.i = getelementptr inbounds %struct.filename, ptr %name, i32 0, i32 4
  %cmp13.not.i = icmp eq ptr %64, %iname.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %65 = load ptr, ptr @names_cachep, align 4
  br i1 %cmp13.not.i, label %if.else.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %65, ptr noundef %64) #13
  call void @kfree(ptr noundef %name) #13
  br label %putname.exit

if.else.i:                                        ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %65, ptr noundef %name) #13
  br label %putname.exit

putname.exit:                                     ; preds = %if.else.i, %if.then14.i, %do.end7.i.putname.exit_crit_edge, %out_putname.putname.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path) #13
  ret i32 %error.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @current_umask() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_path_mkdir(ptr noundef, ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_mkdirat(i32 noundef %dfd, i32 noundef %pathname, i32 noundef %mode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %pathname to ptr
  %conv = trunc i32 %mode to i16
  %call.i.i = tail call ptr @getname_flags(ptr noundef %0, i32 noundef 0, ptr noundef null) #13
  %call1.i = tail call i32 @do_mkdirat(i32 noundef %dfd, ptr noundef %call.i.i, i16 noundef zeroext %conv) #13
  ret i32 %call1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_mkdir(i32 noundef %pathname, i32 noundef %mode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %pathname to ptr
  %conv = trunc i32 %mode to i16
  %call.i.i = tail call ptr @getname_flags(ptr noundef %0, i32 noundef 0, ptr noundef null) #13
  %call1.i = tail call i32 @do_mkdirat(i32 noundef -100, ptr noundef %call.i.i, i16 noundef zeroext %conv) #13
  ret i32 %call1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vfs_rmdir(ptr noundef %mnt_userns, ptr noundef %dir, ptr noundef %dentry) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @may_delete(ptr noundef %mnt_userns, ptr noundef %dir, ptr noundef %dentry, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %i_op = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 7
  %0 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_op, align 8
  %rmdir = getelementptr inbounds %struct.inode_operations, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %rmdir to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rmdir, align 8
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %tobool.not.i = icmp eq ptr %dentry, null
  br i1 %tobool.not.i, label %if.end3.dget.exit_crit_edge, label %if.then.i

if.end3.dget.exit_crit_edge:                      ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  br label %dget.exit

if.then.i:                                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  %d_lockref.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i) #13
  br label %dget.exit

dget.exit:                                        ; preds = %if.then.i, %if.end3.dget.exit_crit_edge
  %d_inode = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %4 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %d_inode, align 8
  %i_rwsem.i = getelementptr inbounds %struct.inode, ptr %5, i32 0, i32 25
  tail call void @down_write(ptr noundef %i_rwsem.i) #13
  %6 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %dentry, align 8
  %and.i.i = and i32 %7, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %dget.exit.lor.lhs.false_crit_edge, label %is_local_mountpoint.exit

dget.exit.lor.lhs.false_crit_edge:                ; preds = %dget.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false

is_local_mountpoint.exit:                         ; preds = %dget.exit
  %call1.i = tail call zeroext i1 @__is_local_mountpoint(ptr noundef %dentry) #13
  br i1 %call1.i, label %is_local_mountpoint.exit.out_crit_edge, label %is_local_mountpoint.exit.lor.lhs.false_crit_edge

is_local_mountpoint.exit.lor.lhs.false_crit_edge: ; preds = %is_local_mountpoint.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false

is_local_mountpoint.exit.out_crit_edge:           ; preds = %is_local_mountpoint.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

lor.lhs.false:                                    ; preds = %is_local_mountpoint.exit.lor.lhs.false_crit_edge, %dget.exit.lor.lhs.false_crit_edge
  %8 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %d_inode, align 8
  %i_flags = getelementptr inbounds %struct.inode, ptr %9, i32 0, i32 4
  %10 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %i_flags, align 4
  %and = and i32 %11, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool7.not = icmp eq i32 %and, 0
  br i1 %tobool7.not, label %if.end9, label %lor.lhs.false.out_crit_edge

lor.lhs.false.out_crit_edge:                      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end9:                                          ; preds = %lor.lhs.false
  %call10 = tail call i32 @security_inode_rmdir(ptr noundef %dir, ptr noundef %dentry) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.end13, label %if.end9.out_crit_edge

if.end9.out_crit_edge:                            ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end13:                                         ; preds = %if.end9
  %12 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %i_op, align 8
  %rmdir15 = getelementptr inbounds %struct.inode_operations, ptr %13, i32 0, i32 10
  %14 = ptrtoint ptr %rmdir15 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %rmdir15, align 8
  %call16 = tail call i32 %15(ptr noundef %dir, ptr noundef %dentry) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %if.end19, label %if.end13.out_crit_edge

if.end13.out_crit_edge:                           ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end19:                                         ; preds = %if.end13
  tail call void @shrink_dcache_parent(ptr noundef %dentry) #13
  %16 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %d_inode, align 8
  %i_flags21 = getelementptr inbounds %struct.inode, ptr %17, i32 0, i32 4
  %18 = ptrtoint ptr %i_flags21 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %i_flags21, align 4
  %or = or i32 %19, 16
  store i32 %or, ptr %i_flags21, align 4
  tail call fastcc void @dont_mount(ptr noundef %dentry)
  %20 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %dentry, align 8
  %and.i.i49 = and i32 %21, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i49)
  %tobool.i.not.i50 = icmp eq i32 %and.i.i49, 0
  br i1 %tobool.i.not.i50, label %if.end19.out_crit_edge, label %if.end.i51

if.end19.out_crit_edge:                           ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end.i51:                                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @__detach_mounts(ptr noundef %dentry) #13
  br label %out

out:                                              ; preds = %if.end.i51, %if.end19.out_crit_edge, %if.end13.out_crit_edge, %if.end9.out_crit_edge, %lor.lhs.false.out_crit_edge, %is_local_mountpoint.exit.out_crit_edge
  %error.0 = phi i32 [ -16, %is_local_mountpoint.exit.out_crit_edge ], [ -16, %lor.lhs.false.out_crit_edge ], [ %call10, %if.end9.out_crit_edge ], [ %call16, %if.end13.out_crit_edge ], [ 0, %if.end19.out_crit_edge ], [ 0, %if.end.i51 ]
  %22 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %d_inode, align 8
  %i_rwsem.i52 = getelementptr inbounds %struct.inode, ptr %23, i32 0, i32 25
  tail call void @up_write(ptr noundef %i_rwsem.i52) #13
  tail call void @dput(ptr noundef %dentry) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %error.0)
  %tobool23.not = icmp eq i32 %error.0, 0
  br i1 %tobool23.not, label %if.then24, label %out.cleanup_crit_edge

out.cleanup_crit_edge:                            ; preds = %out
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then24:                                        ; preds = %out
  %24 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %d_inode, align 8
  tail call void @ihold(ptr noundef %25) #13
  tail call void @d_delete(ptr noundef %dentry) #13
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %25, align 8
  %i_sb.i.i.i = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 8
  %28 = ptrtoint ptr %i_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %i_sb.i.i.i, align 4
  %s_fsnotify_connectors.i.i.i = getelementptr inbounds %struct.super_block, ptr %29, i32 0, i32 48
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i.i.i, i32 noundef 4) #13
  %30 = ptrtoint ptr %s_fsnotify_connectors.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %s_fsnotify_connectors.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %cmp.i.i.i = icmp eq i32 %31, 0
  br i1 %cmp.i.i.i, label %if.then24.d_delete_notify.exit_crit_edge, label %if.end.i.i.i

if.then24.d_delete_notify.exit_crit_edge:         ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #15
  br label %d_delete_notify.exit

if.end.i.i.i:                                     ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #15
  %d_name.i.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 4
  %32 = and i16 %27, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %32)
  %cmp.i.i = icmp eq i16 %32, 16384
  %spec.select.i.i = select i1 %cmp.i.i, i32 1073742336, i32 512
  %call1.i.i.i = tail call i32 @fsnotify(i32 noundef %spec.select.i.i, ptr noundef %25, i32 noundef 2, ptr noundef %dir, ptr noundef %d_name.i.i, ptr noundef null, i32 noundef 0) #13
  br label %d_delete_notify.exit

d_delete_notify.exit:                             ; preds = %if.end.i.i.i, %if.then24.d_delete_notify.exit_crit_edge
  tail call void @iput(ptr noundef %25) #13
  br label %cleanup

cleanup:                                          ; preds = %d_delete_notify.exit, %out.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ -1, %if.end.cleanup_crit_edge ], [ 0, %d_delete_notify.exit ], [ %error.0, %out.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @may_delete(ptr noundef %mnt_userns, ptr noundef %dir, ptr noundef readonly %victim, i1 noundef zeroext %isdir) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %victim, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode.i, align 8
  %2 = ptrtoint ptr %victim to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %victim, align 8
  %and.i.i.i = and i32 %3, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %cmp.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %cmp.i.i, label %entry.cleanup_crit_edge, label %do.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

do.body:                                          ; preds = %entry
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %do.body6, label %do.body13, !prof !360

do.body6:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2899, 0\0A.popsection", ""() #13, !srcloc !377
  unreachable

do.body13:                                        ; preds = %do.body
  %d_parent = getelementptr inbounds %struct.dentry, ptr %victim, i32 0, i32 3
  %4 = ptrtoint ptr %d_parent to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %d_parent, align 8
  %d_inode = getelementptr inbounds %struct.dentry, ptr %5, i32 0, i32 5
  %6 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %d_inode, align 8
  %cmp.not = icmp eq ptr %7, %dir
  br i1 %cmp.not, label %do.end29, label %do.body21, !prof !362

do.body21:                                        ; preds = %do.body13
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2901, 0\0A.popsection", ""() #13, !srcloc !378
  unreachable

do.end29:                                         ; preds = %do.body13
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %8 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %i_sb.i.i, align 4
  %s_user_ns.i.i = getelementptr inbounds %struct.super_block, ptr %9, i32 0, i32 53
  %10 = ptrtoint ptr %s_user_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %s_user_ns.i.i, align 8
  %i_uid.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 2
  %12 = ptrtoint ptr %i_uid.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %.unpack.i = load i32, ptr %i_uid.i, align 4
  %13 = insertvalue [1 x i32] undef, i32 %.unpack.i, 0
  %cmp.i.i.i.i = icmp eq ptr %mnt_userns, @init_user_ns
  %cmp.i.i.i = icmp eq ptr %11, %mnt_userns
  %spec.select.i.i.i = or i1 %cmp.i.i.i.i, %cmp.i.i.i
  br i1 %spec.select.i.i.i, label %do.end29.i_uid_into_mnt.exit_crit_edge, label %if.end.i.i

do.end29.i_uid_into_mnt.exit_crit_edge:           ; preds = %do.end29
  call void @__sanitizer_cov_trace_pc() #15
  br label %i_uid_into_mnt.exit

if.end.i.i:                                       ; preds = %do.end29
  %cmp.i21.i.i = icmp eq ptr %11, @init_user_ns
  br i1 %cmp.i21.i.i, label %if.end.i.i.if.end7.i.i_crit_edge, label %if.else.i.i

if.end.i.i.if.end7.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7.i.i

if.else.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call6.i.i = tail call i32 @from_kuid(ptr noundef %11, [1 x i32] %13) #13
  br label %if.end7.i.i

if.end7.i.i:                                      ; preds = %if.else.i.i, %if.end.i.i.if.end7.i.i_crit_edge
  %uid.0.i.i = phi i32 [ %call6.i.i, %if.else.i.i ], [ %.unpack.i, %if.end.i.i.if.end7.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %uid.0.i.i)
  %cmp.i.i115 = icmp eq i32 %uid.0.i.i, -1
  br i1 %cmp.i.i115, label %if.end7.i.i.cleanup_crit_edge, label %if.end9.i.i

if.end7.i.i.cleanup_crit_edge:                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end9.i.i:                                      ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call10.i.i = tail call i32 @make_kuid(ptr noundef %mnt_userns, i32 noundef %uid.0.i.i) #13
  br label %i_uid_into_mnt.exit

i_uid_into_mnt.exit:                              ; preds = %if.end9.i.i, %do.end29.i_uid_into_mnt.exit_crit_edge
  %retval.sroa.0.0.i.i = phi i32 [ %call10.i.i, %if.end9.i.i ], [ %.unpack.i, %do.end29.i_uid_into_mnt.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.sroa.0.0.i.i)
  %cmp.i.not = icmp eq i32 %retval.sroa.0.0.i.i, -1
  br i1 %cmp.i.not, label %i_uid_into_mnt.exit.cleanup_crit_edge, label %lor.lhs.false

i_uid_into_mnt.exit.cleanup_crit_edge:            ; preds = %i_uid_into_mnt.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

lor.lhs.false:                                    ; preds = %i_uid_into_mnt.exit
  %14 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %i_sb.i.i, align 4
  %s_user_ns.i.i117 = getelementptr inbounds %struct.super_block, ptr %15, i32 0, i32 53
  %16 = ptrtoint ptr %s_user_ns.i.i117 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %s_user_ns.i.i117, align 8
  %i_gid.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 3
  %18 = ptrtoint ptr %i_gid.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %.unpack.i118 = load i32, ptr %i_gid.i, align 8
  %19 = insertvalue [1 x i32] undef, i32 %.unpack.i118, 0
  %cmp.i.i.i120 = icmp eq ptr %17, %mnt_userns
  %spec.select.i.i.i121 = or i1 %cmp.i.i.i.i, %cmp.i.i.i120
  br i1 %spec.select.i.i.i121, label %lor.lhs.false.i_gid_into_mnt.exit_crit_edge, label %if.end.i.i123

lor.lhs.false.i_gid_into_mnt.exit_crit_edge:      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %i_gid_into_mnt.exit

if.end.i.i123:                                    ; preds = %lor.lhs.false
  %cmp.i21.i.i122 = icmp eq ptr %17, @init_user_ns
  br i1 %cmp.i21.i.i122, label %if.end.i.i123.if.end7.i.i127_crit_edge, label %if.else.i.i125

if.end.i.i123.if.end7.i.i127_crit_edge:           ; preds = %if.end.i.i123
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7.i.i127

if.else.i.i125:                                   ; preds = %if.end.i.i123
  call void @__sanitizer_cov_trace_pc() #15
  %call6.i.i124 = tail call i32 @from_kgid(ptr noundef %17, [1 x i32] %19) #13
  br label %if.end7.i.i127

if.end7.i.i127:                                   ; preds = %if.else.i.i125, %if.end.i.i123.if.end7.i.i127_crit_edge
  %gid.0.i.i = phi i32 [ %call6.i.i124, %if.else.i.i125 ], [ %.unpack.i118, %if.end.i.i123.if.end7.i.i127_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %gid.0.i.i)
  %cmp.i.i126 = icmp eq i32 %gid.0.i.i, -1
  br i1 %cmp.i.i126, label %if.end7.i.i127.cleanup_crit_edge, label %if.end9.i.i129

if.end7.i.i127.cleanup_crit_edge:                 ; preds = %if.end7.i.i127
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end9.i.i129:                                   ; preds = %if.end7.i.i127
  call void @__sanitizer_cov_trace_pc() #15
  %call10.i.i128 = tail call i32 @make_kgid(ptr noundef %mnt_userns, i32 noundef %gid.0.i.i) #13
  br label %i_gid_into_mnt.exit

i_gid_into_mnt.exit:                              ; preds = %if.end9.i.i129, %lor.lhs.false.i_gid_into_mnt.exit_crit_edge
  %retval.sroa.0.0.i.i130 = phi i32 [ %call10.i.i128, %if.end9.i.i129 ], [ %.unpack.i118, %lor.lhs.false.i_gid_into_mnt.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.sroa.0.0.i.i130)
  %cmp.i131.not = icmp eq i32 %retval.sroa.0.0.i.i130, -1
  br i1 %cmp.i131.not, label %i_gid_into_mnt.exit.cleanup_crit_edge, label %if.end39

i_gid_into_mnt.exit.cleanup_crit_edge:            ; preds = %i_gid_into_mnt.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end39:                                         ; preds = %i_gid_into_mnt.exit
  %call40 = tail call i32 @inode_permission(ptr noundef %mnt_userns, ptr noundef %dir, i32 noundef 3)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40)
  %tobool41.not = icmp eq i32 %call40, 0
  br i1 %tobool41.not, label %if.end43, label %if.end39.cleanup_crit_edge

if.end39.cleanup_crit_edge:                       ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end43:                                         ; preds = %if.end39
  %i_flags = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 4
  %20 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %i_flags, align 4
  %and = and i32 %21, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool44.not = icmp eq i32 %and, 0
  br i1 %tobool44.not, label %if.end46, label %if.end43.cleanup_crit_edge

if.end43.cleanup_crit_edge:                       ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end46:                                         ; preds = %if.end43
  %22 = ptrtoint ptr %dir to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %dir, align 8
  %24 = and i16 %23, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %24)
  %tobool.not.i = icmp eq i16 %24, 0
  br i1 %tobool.not.i, label %if.end46.lor.lhs.false49_crit_edge, label %check_sticky.exit

if.end46.lor.lhs.false49_crit_edge:               ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false49

check_sticky.exit:                                ; preds = %if.end46
  %call.i = tail call i32 @__check_sticky(ptr noundef %mnt_userns, ptr noundef %dir, ptr noundef nonnull %1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool48.not = icmp eq i32 %call.i, 0
  br i1 %tobool48.not, label %check_sticky.exit.lor.lhs.false49_crit_edge, label %check_sticky.exit.cleanup_crit_edge

check_sticky.exit.cleanup_crit_edge:              ; preds = %check_sticky.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

check_sticky.exit.lor.lhs.false49_crit_edge:      ; preds = %check_sticky.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false49

lor.lhs.false49:                                  ; preds = %check_sticky.exit.lor.lhs.false49_crit_edge, %if.end46.lor.lhs.false49_crit_edge
  %i_flags50 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 4
  %25 = ptrtoint ptr %i_flags50 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %i_flags50, align 4
  %27 = and i32 %26, 268
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %lor.lhs.false61, label %lor.lhs.false49.cleanup_crit_edge

lor.lhs.false49.cleanup_crit_edge:                ; preds = %lor.lhs.false49
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

lor.lhs.false61:                                  ; preds = %lor.lhs.false49
  %call62 = tail call fastcc zeroext i1 @HAS_UNMAPPED_ID(ptr noundef %mnt_userns, ptr noundef nonnull %1)
  br i1 %call62, label %lor.lhs.false61.cleanup_crit_edge, label %if.end64

lor.lhs.false61.cleanup_crit_edge:                ; preds = %lor.lhs.false61
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end64:                                         ; preds = %lor.lhs.false61
  %29 = ptrtoint ptr %victim to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %victim, align 8
  %31 = and i32 %30, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %31)
  %32 = icmp eq i32 %31, 2097152
  br i1 %isdir, label %if.then66, label %if.else

if.then66:                                        ; preds = %if.end64
  br i1 %32, label %if.end69, label %if.then66.cleanup_crit_edge

if.then66.cleanup_crit_edge:                      ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end69:                                         ; preds = %if.then66
  %33 = ptrtoint ptr %d_parent to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %d_parent, align 8
  %cmp71 = icmp eq ptr %34, %victim
  br i1 %cmp71, label %if.end69.cleanup_crit_edge, label %if.end69.if.end77_crit_edge

if.end69.if.end77_crit_edge:                      ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end77

if.end69.cleanup_crit_edge:                       ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.else:                                          ; preds = %if.end64
  br i1 %32, label %if.else.cleanup_crit_edge, label %if.else.if.end77_crit_edge

if.else.if.end77_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end77

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end77:                                         ; preds = %if.else.if.end77_crit_edge, %if.end69.if.end77_crit_edge
  %35 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %i_flags, align 4
  %and79 = and i32 %36, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and79)
  %tobool80.not = icmp eq i32 %and79, 0
  br i1 %tobool80.not, label %if.end82, label %if.end77.cleanup_crit_edge

if.end77.cleanup_crit_edge:                       ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end82:                                         ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #15
  %37 = ptrtoint ptr %victim to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %victim, align 8
  %and83 = and i32 %38, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and83)
  %tobool84.not = icmp eq i32 %and83, 0
  %. = select i1 %tobool84.not, i32 0, i32 -16
  br label %cleanup

cleanup:                                          ; preds = %if.end82, %if.end77.cleanup_crit_edge, %if.else.cleanup_crit_edge, %if.end69.cleanup_crit_edge, %if.then66.cleanup_crit_edge, %lor.lhs.false61.cleanup_crit_edge, %lor.lhs.false49.cleanup_crit_edge, %check_sticky.exit.cleanup_crit_edge, %if.end43.cleanup_crit_edge, %if.end39.cleanup_crit_edge, %i_gid_into_mnt.exit.cleanup_crit_edge, %if.end7.i.i127.cleanup_crit_edge, %i_uid_into_mnt.exit.cleanup_crit_edge, %if.end7.i.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -2, %entry.cleanup_crit_edge ], [ -75, %i_gid_into_mnt.exit.cleanup_crit_edge ], [ -75, %i_uid_into_mnt.exit.cleanup_crit_edge ], [ %call40, %if.end39.cleanup_crit_edge ], [ -1, %if.end43.cleanup_crit_edge ], [ -1, %lor.lhs.false61.cleanup_crit_edge ], [ -1, %lor.lhs.false49.cleanup_crit_edge ], [ -1, %check_sticky.exit.cleanup_crit_edge ], [ -20, %if.then66.cleanup_crit_edge ], [ -16, %if.end69.cleanup_crit_edge ], [ -21, %if.else.cleanup_crit_edge ], [ -2, %if.end77.cleanup_crit_edge ], [ %., %if.end82 ], [ -75, %if.end7.i.i.cleanup_crit_edge ], [ -75, %if.end7.i.i127.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_inode_rmdir(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @shrink_dcache_parent(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @dont_mount(ptr noundef %dentry) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %d_lockref = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 7
  tail call void @_raw_spin_lock(ptr noundef %d_lockref) #13
  %0 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %dentry, align 8
  %or = or i32 %1, 256
  store i32 %or, ptr %dentry, align 8
  tail call void @_raw_spin_unlock(ptr noundef %d_lockref) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @do_rmdir(i32 noundef %dfd, ptr noundef %name) local_unnamed_addr #0 align 64 {
entry:
  %path = alloca %struct.path, align 4
  %last = alloca %struct.qstr, align 8
  %type = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path) #13
  %0 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %path, align 4, !annotation !367
  %1 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !367
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %last) #13
  %3 = call ptr @memset(ptr %last, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %type) #13
  %4 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %type, align 4, !annotation !367
  %call = call fastcc i32 @filename_parentat(i32 noundef %dfd, ptr noundef %name, i32 noundef 0, ptr noundef nonnull %path, ptr noundef nonnull %last, ptr noundef nonnull %type)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.exit1_crit_edge

entry.exit1_crit_edge:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit1

if.end:                                           ; preds = %entry
  %5 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %type, align 4
  %switch.tableidx = add i32 %6, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %switch.tableidx)
  %7 = icmp ult i32 %switch.tableidx, 3
  br i1 %7, label %switch.lookup, label %sw.epilog

sw.epilog:                                        ; preds = %if.end
  %8 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %path, align 4
  %call3 = call i32 @mnt_want_write(ptr noundef %9) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.end6, label %sw.epilog.exit2_crit_edge

sw.epilog.exit2_crit_edge:                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit2

if.end6:                                          ; preds = %sw.epilog
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %1, align 4
  %d_inode = getelementptr inbounds %struct.dentry, ptr %11, i32 0, i32 5
  %12 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %d_inode, align 8
  %i_rwsem.i = getelementptr inbounds %struct.inode, ptr %13, i32 0, i32 25
  call void @down_write_nested(ptr noundef %i_rwsem.i, i32 noundef 1) #13
  %14 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %1, align 4
  %call9 = call fastcc ptr @__lookup_hash(ptr noundef nonnull %last, ptr noundef %15, i32 noundef 0)
  %16 = ptrtoint ptr %call9 to i32
  %cmp.i = icmp ugt ptr %call9, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end6.exit3_crit_edge, label %if.end13

if.end6.exit3_crit_edge:                          ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit3

if.end13:                                         ; preds = %if.end6
  %d_inode14 = getelementptr inbounds %struct.dentry, ptr %call9, i32 0, i32 5
  %17 = ptrtoint ptr %d_inode14 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %d_inode14, align 8
  %tobool15.not = icmp eq ptr %18, null
  br i1 %tobool15.not, label %if.end13.exit4_crit_edge, label %if.end17

if.end13.exit4_crit_edge:                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit4

if.end17:                                         ; preds = %if.end13
  %call18 = call i32 @security_path_rmdir(ptr noundef nonnull %path, ptr noundef %call9) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %if.end21, label %if.end17.exit4_crit_edge

if.end17.exit4_crit_edge:                         ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit4

if.end21:                                         ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #15
  %19 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %path, align 4
  %mnt_userns.i = getelementptr inbounds %struct.vfsmount, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %mnt_userns.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile ptr, ptr %mnt_userns.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !371
  %23 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %1, align 4
  %d_inode25 = getelementptr inbounds %struct.dentry, ptr %24, i32 0, i32 5
  %25 = ptrtoint ptr %d_inode25 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %d_inode25, align 8
  %call26 = call i32 @vfs_rmdir(ptr noundef %22, ptr noundef %26, ptr noundef %call9)
  br label %exit4

exit4:                                            ; preds = %if.end21, %if.end17.exit4_crit_edge, %if.end13.exit4_crit_edge
  %error.0 = phi i32 [ %call18, %if.end17.exit4_crit_edge ], [ %call26, %if.end21 ], [ -2, %if.end13.exit4_crit_edge ]
  call void @dput(ptr noundef %call9) #13
  br label %exit3

exit3:                                            ; preds = %exit4, %if.end6.exit3_crit_edge
  %error.1 = phi i32 [ %16, %if.end6.exit3_crit_edge ], [ %error.0, %exit4 ]
  %27 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %1, align 4
  %d_inode28 = getelementptr inbounds %struct.dentry, ptr %28, i32 0, i32 5
  %29 = ptrtoint ptr %d_inode28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %d_inode28, align 8
  %i_rwsem.i46 = getelementptr inbounds %struct.inode, ptr %30, i32 0, i32 25
  call void @up_write(ptr noundef %i_rwsem.i46) #13
  %31 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %path, align 4
  call void @mnt_drop_write(ptr noundef %32) #13
  br label %exit2

switch.lookup:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %switch.gep = getelementptr inbounds [3 x i32], ptr @switch.table.do_rmdir, i32 0, i32 %switch.tableidx
  %33 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %33)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %exit2

exit2:                                            ; preds = %switch.lookup, %exit3, %sw.epilog.exit2_crit_edge
  %error.2 = phi i32 [ %call3, %sw.epilog.exit2_crit_edge ], [ %error.1, %exit3 ], [ %switch.load, %switch.lookup ]
  %34 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %1, align 4
  call void @dput(ptr noundef %35) #13
  %36 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %path, align 4
  call void @mntput(ptr noundef %37) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -116, i32 %error.2)
  %cmp.i47 = icmp eq i32 %error.2, -116
  br i1 %cmp.i47, label %retry.1, label %exit2.exit1_crit_edge

exit2.exit1_crit_edge:                            ; preds = %exit2
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit1

retry.1:                                          ; preds = %exit2
  %call.1 = call fastcc i32 @filename_parentat(i32 noundef %dfd, ptr noundef %name, i32 noundef 32, ptr noundef nonnull %path, ptr noundef nonnull %last, ptr noundef nonnull %type)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.1)
  %tobool.not.1 = icmp eq i32 %call.1, 0
  br i1 %tobool.not.1, label %if.end.1, label %retry.1.exit1_crit_edge

retry.1.exit1_crit_edge:                          ; preds = %retry.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit1

if.end.1:                                         ; preds = %retry.1
  %38 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %type, align 4
  %switch.tableidx.1 = add i32 %39, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %switch.tableidx.1)
  %40 = icmp ult i32 %switch.tableidx.1, 3
  br i1 %40, label %switch.lookup.1, label %sw.epilog.1

sw.epilog.1:                                      ; preds = %if.end.1
  %41 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %path, align 4
  %call3.1 = call i32 @mnt_want_write(ptr noundef %42) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.1)
  %tobool4.not.1 = icmp eq i32 %call3.1, 0
  br i1 %tobool4.not.1, label %if.end6.1, label %sw.epilog.1.exit2.1_crit_edge

sw.epilog.1.exit2.1_crit_edge:                    ; preds = %sw.epilog.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit2.1

if.end6.1:                                        ; preds = %sw.epilog.1
  %43 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %1, align 4
  %d_inode.1 = getelementptr inbounds %struct.dentry, ptr %44, i32 0, i32 5
  %45 = ptrtoint ptr %d_inode.1 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %d_inode.1, align 8
  %i_rwsem.i.1 = getelementptr inbounds %struct.inode, ptr %46, i32 0, i32 25
  call void @down_write_nested(ptr noundef %i_rwsem.i.1, i32 noundef 1) #13
  %47 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %1, align 4
  %call9.1 = call fastcc ptr @__lookup_hash(ptr noundef nonnull %last, ptr noundef %48, i32 noundef 32)
  %49 = ptrtoint ptr %call9.1 to i32
  %cmp.i.1 = icmp ugt ptr %call9.1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.1, label %if.end6.1.exit3.1_crit_edge, label %if.end13.1

if.end6.1.exit3.1_crit_edge:                      ; preds = %if.end6.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit3.1

if.end13.1:                                       ; preds = %if.end6.1
  %d_inode14.1 = getelementptr inbounds %struct.dentry, ptr %call9.1, i32 0, i32 5
  %50 = ptrtoint ptr %d_inode14.1 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %d_inode14.1, align 8
  %tobool15.not.1 = icmp eq ptr %51, null
  br i1 %tobool15.not.1, label %if.end13.1.exit4.1_crit_edge, label %if.end17.1

if.end13.1.exit4.1_crit_edge:                     ; preds = %if.end13.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit4.1

if.end17.1:                                       ; preds = %if.end13.1
  %call18.1 = call i32 @security_path_rmdir(ptr noundef nonnull %path, ptr noundef %call9.1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18.1)
  %tobool19.not.1 = icmp eq i32 %call18.1, 0
  br i1 %tobool19.not.1, label %if.end21.1, label %if.end17.1.exit4.1_crit_edge

if.end17.1.exit4.1_crit_edge:                     ; preds = %if.end17.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit4.1

if.end21.1:                                       ; preds = %if.end17.1
  call void @__sanitizer_cov_trace_pc() #15
  %52 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %path, align 4
  %mnt_userns.i.1 = getelementptr inbounds %struct.vfsmount, ptr %53, i32 0, i32 3
  %54 = ptrtoint ptr %mnt_userns.i.1 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile ptr, ptr %mnt_userns.i.1, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !371
  %56 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %1, align 4
  %d_inode25.1 = getelementptr inbounds %struct.dentry, ptr %57, i32 0, i32 5
  %58 = ptrtoint ptr %d_inode25.1 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %d_inode25.1, align 8
  %call26.1 = call i32 @vfs_rmdir(ptr noundef %55, ptr noundef %59, ptr noundef %call9.1)
  br label %exit4.1

exit4.1:                                          ; preds = %if.end21.1, %if.end17.1.exit4.1_crit_edge, %if.end13.1.exit4.1_crit_edge
  %error.0.1 = phi i32 [ %call18.1, %if.end17.1.exit4.1_crit_edge ], [ %call26.1, %if.end21.1 ], [ -2, %if.end13.1.exit4.1_crit_edge ]
  call void @dput(ptr noundef %call9.1) #13
  br label %exit3.1

exit3.1:                                          ; preds = %exit4.1, %if.end6.1.exit3.1_crit_edge
  %error.1.1 = phi i32 [ %49, %if.end6.1.exit3.1_crit_edge ], [ %error.0.1, %exit4.1 ]
  %60 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %1, align 4
  %d_inode28.1 = getelementptr inbounds %struct.dentry, ptr %61, i32 0, i32 5
  %62 = ptrtoint ptr %d_inode28.1 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %d_inode28.1, align 8
  %i_rwsem.i46.1 = getelementptr inbounds %struct.inode, ptr %63, i32 0, i32 25
  call void @up_write(ptr noundef %i_rwsem.i46.1) #13
  %64 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %path, align 4
  call void @mnt_drop_write(ptr noundef %65) #13
  br label %exit2.1

switch.lookup.1:                                  ; preds = %if.end.1
  call void @__sanitizer_cov_trace_pc() #15
  %switch.gep.1 = getelementptr inbounds [3 x i32], ptr @switch.table.do_rmdir, i32 0, i32 %switch.tableidx.1
  %66 = ptrtoint ptr %switch.gep.1 to i32
  call void @__asan_load4_noabort(i32 %66)
  %switch.load.1 = load i32, ptr %switch.gep.1, align 4
  br label %exit2.1

exit2.1:                                          ; preds = %switch.lookup.1, %exit3.1, %sw.epilog.1.exit2.1_crit_edge
  %error.2.1 = phi i32 [ %call3.1, %sw.epilog.1.exit2.1_crit_edge ], [ %error.1.1, %exit3.1 ], [ %switch.load.1, %switch.lookup.1 ]
  %67 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %1, align 4
  call void @dput(ptr noundef %68) #13
  %69 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %path, align 4
  call void @mntput(ptr noundef %70) #13
  br label %exit1

exit1:                                            ; preds = %exit2.1, %retry.1.exit1_crit_edge, %exit2.exit1_crit_edge, %entry.exit1_crit_edge
  %error.3 = phi i32 [ %call, %entry.exit1_crit_edge ], [ %error.2, %exit2.exit1_crit_edge ], [ %call.1, %retry.1.exit1_crit_edge ], [ %error.2.1, %exit2.1 ]
  %cmp.i.i = icmp ugt ptr %name, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %exit1.putname.exit_crit_edge, label %do.body.i

exit1.putname.exit_crit_edge:                     ; preds = %exit1
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

do.body.i:                                        ; preds = %exit1
  %refcnt.i = getelementptr inbounds %struct.filename, ptr %name, i32 0, i32 2
  %71 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %72)
  %cmp.i48 = icmp slt i32 %72, 1
  br i1 %cmp.i48, label %do.body3.i, label %do.end7.i, !prof !360

do.body3.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 261, 0\0A.popsection", ""() #13, !srcloc !361
  unreachable

do.end7.i:                                        ; preds = %do.body.i
  %dec.i = add nsw i32 %72, -1
  %73 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %dec.i, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp9.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp9.not.i, label %if.end11.i, label %do.end7.i.putname.exit_crit_edge

do.end7.i.putname.exit_crit_edge:                 ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

if.end11.i:                                       ; preds = %do.end7.i
  %74 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %name, align 4
  %iname.i = getelementptr inbounds %struct.filename, ptr %name, i32 0, i32 4
  %cmp13.not.i = icmp eq ptr %75, %iname.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %76 = load ptr, ptr @names_cachep, align 4
  br i1 %cmp13.not.i, label %if.else.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %76, ptr noundef %75) #13
  call void @kfree(ptr noundef %name) #13
  br label %putname.exit

if.else.i:                                        ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %76, ptr noundef %name) #13
  br label %putname.exit

putname.exit:                                     ; preds = %if.else.i, %if.then14.i, %do.end7.i.putname.exit_crit_edge, %exit1.putname.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %type) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %last) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path) #13
  ret i32 %error.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @filename_parentat(i32 noundef %dfd, ptr noundef %name, i32 noundef %flags, ptr nocapture noundef writeonly %parent, ptr nocapture noundef writeonly %last, ptr nocapture noundef writeonly %type) unnamed_addr #0 align 64 {
entry:
  %nd = alloca %struct.nameidata, align 8
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %nd) #13
  %0 = call ptr @memset(ptr %nd, i32 255, i32 144)
  %cmp.i = icmp ugt ptr %name, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %1 = ptrtoint ptr %name to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i.i, align 8
  %nameidata.i.i = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 102
  %6 = ptrtoint ptr %nameidata.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %nameidata.i.i, align 8
  %internal.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 13
  %stack.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 12
  %8 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %internal.i.i, ptr %stack.i.i, align 4
  %depth.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 10
  %9 = ptrtoint ptr %depth.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %depth.i.i, align 4
  %dfd1.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 17
  %10 = ptrtoint ptr %dfd1.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %dfd, ptr %dfd1.i.i, align 4
  %name2.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 14
  %11 = ptrtoint ptr %name2.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %name, ptr %name2.i.i, align 8
  %12 = ptrtoint ptr %nd to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %nd, align 8
  %dentry.i.i = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %13 = ptrtoint ptr %dentry.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %dentry.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %7, null
  br i1 %tobool.not.i.i, label %if.end.set_nameidata.exit_crit_edge, label %cond.true.i.i

if.end.set_nameidata.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_nameidata.exit

cond.true.i.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %total_link_count.i.i = getelementptr inbounds %struct.nameidata, ptr %7, i32 0, i32 11
  %14 = ptrtoint ptr %total_link_count.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %total_link_count.i.i, align 8
  br label %set_nameidata.exit

set_nameidata.exit:                               ; preds = %cond.true.i.i, %if.end.set_nameidata.exit_crit_edge
  %cond.i.i = phi i32 [ %15, %cond.true.i.i ], [ 0, %if.end.set_nameidata.exit_crit_edge ]
  %total_link_count4.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 11
  %16 = ptrtoint ptr %total_link_count4.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %cond.i.i, ptr %total_link_count4.i.i, align 8
  %saved.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 15
  %17 = ptrtoint ptr %saved.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %7, ptr %saved.i.i, align 4
  %18 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task.i.i, align 8
  %nameidata7.i.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 102
  %20 = ptrtoint ptr %nameidata7.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %nd, ptr %nameidata7.i.i, align 8
  %state.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 5
  %21 = ptrtoint ptr %state.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %state.i, align 8
  %or = or i32 %flags, 64
  %call.i = call fastcc ptr @path_init(ptr noundef nonnull %nd, i32 noundef %or) #13
  %call1.i = call fastcc i32 @link_path_walk(ptr noundef %call.i, ptr noundef nonnull %nd) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %set_nameidata.exit.path_parentat.exit_crit_edge

set_nameidata.exit.path_parentat.exit_crit_edge:  ; preds = %set_nameidata.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %path_parentat.exit

if.end.i:                                         ; preds = %set_nameidata.exit
  %call2.i = call fastcc i32 @complete_walk(ptr noundef nonnull %nd) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %if.end18.thread, label %if.end.i.path_parentat.exit_crit_edge

if.end.i.path_parentat.exit_crit_edge:            ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %path_parentat.exit

if.end18.thread:                                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %22 = ptrtoint ptr %nd to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %nd, align 8
  %24 = ptrtoint ptr %parent to i32
  call void @__asan_storeN_noabort(i32 %24, i32 8)
  store i64 %23, ptr %parent, align 4
  store ptr null, ptr %nd, align 8
  %25 = ptrtoint ptr %dentry.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %dentry.i.i, align 4
  call fastcc void @terminate_walk(ptr noundef nonnull %nd) #13
  br label %if.then28

path_parentat.exit:                               ; preds = %if.end.i.path_parentat.exit_crit_edge, %set_nameidata.exit.path_parentat.exit_crit_edge
  %err.018.i = phi i32 [ %call2.i, %if.end.i.path_parentat.exit_crit_edge ], [ %call1.i, %set_nameidata.exit.path_parentat.exit_crit_edge ]
  call fastcc void @terminate_walk(ptr noundef nonnull %nd) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -10, i32 %err.018.i)
  %cmp = icmp eq i32 %err.018.i, -10
  br i1 %cmp, label %if.then5, label %path_parentat.exit.if.end7_crit_edge, !prof !360

path_parentat.exit.if.end7_crit_edge:             ; preds = %path_parentat.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7

if.then5:                                         ; preds = %path_parentat.exit
  call void @__sanitizer_cov_trace_pc() #15
  %call6 = call fastcc i32 @path_parentat(ptr noundef nonnull %nd, i32 noundef %flags, ptr noundef %parent)
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %path_parentat.exit.if.end7_crit_edge
  %retval1.0 = phi i32 [ %call6, %if.then5 ], [ %err.018.i, %path_parentat.exit.if.end7_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -116, i32 %retval1.0)
  %cmp8 = icmp eq i32 %retval1.0, -116
  br i1 %cmp8, label %if.then15, label %if.end7.if.end18_crit_edge, !prof !360

if.end7.if.end18_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18

if.then15:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  %or16 = or i32 %flags, 32
  %call17 = call fastcc i32 @path_parentat(ptr noundef nonnull %nd, i32 noundef %or16, ptr noundef %parent)
  br label %if.end18

if.end18:                                         ; preds = %if.then15, %if.end7.if.end18_crit_edge
  %retval1.1 = phi i32 [ %call17, %if.then15 ], [ %retval1.0, %if.end7.if.end18_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval1.1)
  %tobool19.not = icmp eq i32 %retval1.1, 0
  br i1 %tobool19.not, label %if.end18.if.then28_crit_edge, label %if.end18.if.end30_crit_edge, !prof !362

if.end18.if.end30_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end30

if.end18.if.then28_crit_edge:                     ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then28

if.then28:                                        ; preds = %if.end18.if.then28_crit_edge, %if.end18.thread
  %last29 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 1
  %26 = call ptr @memcpy(ptr %last, ptr %last29, i32 16)
  %last_type = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 9
  %27 = ptrtoint ptr %last_type to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %last_type, align 8
  %29 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %type, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then28, %if.end18.if.end30_crit_edge
  %retval1.151 = phi i32 [ 0, %if.then28 ], [ %retval1.1, %if.end18.if.end30_crit_edge ]
  %30 = call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 2
  %32 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %task.i, align 8
  %nameidata.i = getelementptr inbounds %struct.task_struct, ptr %33, i32 0, i32 102
  %34 = ptrtoint ptr %nameidata.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %nameidata.i, align 8
  %saved.i = getelementptr inbounds %struct.nameidata, ptr %35, i32 0, i32 15
  %36 = ptrtoint ptr %saved.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %saved.i, align 4
  store ptr %37, ptr %nameidata.i, align 8
  %tobool.not.i43 = icmp eq ptr %37, null
  br i1 %tobool.not.i43, label %if.end30.if.end.i44_crit_edge, label %if.then.i

if.end30.if.end.i44_crit_edge:                    ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i44

if.then.i:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #15
  %total_link_count.i = getelementptr inbounds %struct.nameidata, ptr %35, i32 0, i32 11
  %38 = ptrtoint ptr %total_link_count.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %total_link_count.i, align 8
  %total_link_count4.i = getelementptr inbounds %struct.nameidata, ptr %37, i32 0, i32 11
  %40 = ptrtoint ptr %total_link_count4.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %total_link_count4.i, align 8
  br label %if.end.i44

if.end.i44:                                       ; preds = %if.then.i, %if.end30.if.end.i44_crit_edge
  %stack.i = getelementptr inbounds %struct.nameidata, ptr %35, i32 0, i32 12
  %41 = ptrtoint ptr %stack.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %stack.i, align 4
  %internal.i = getelementptr inbounds %struct.nameidata, ptr %35, i32 0, i32 13
  %cmp.not.i = icmp eq ptr %42, %internal.i
  br i1 %cmp.not.i, label %if.end.i44.cleanup_crit_edge, label %if.then5.i

if.end.i44.cleanup_crit_edge:                     ; preds = %if.end.i44
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then5.i:                                       ; preds = %if.end.i44
  call void @__sanitizer_cov_trace_pc() #15
  call void @kfree(ptr noundef %42) #13
  br label %cleanup

cleanup:                                          ; preds = %if.then5.i, %if.end.i44.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ %1, %if.then ], [ %retval1.151, %if.end.i44.cleanup_crit_edge ], [ %retval1.151, %if.then5.i ]
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %nd) #13
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mnt_want_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__lookup_hash(ptr noundef %name, ptr noundef %base, i32 noundef %flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call ptr @d_lookup(ptr noundef %base, ptr noundef %name) #13
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.then.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then.i:                                        ; preds = %entry
  %0 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %call.i, align 8
  %and.i.i = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.cleanup_crit_edge, label %d_revalidate.exit.i, !prof !362

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

d_revalidate.exit.i:                              ; preds = %if.then.i
  %d_op.i.i = getelementptr inbounds %struct.dentry, ptr %call.i, i32 0, i32 8
  %2 = ptrtoint ptr %d_op.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %d_op.i.i, align 8
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 128
  %call.i.i = tail call i32 %5(ptr noundef nonnull %call.i, i32 noundef %flags) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i.i)
  %cmp.i = icmp slt i32 %call.i.i, 1
  br i1 %cmp.i, label %if.then4.i, label %d_revalidate.exit.i.cleanup_crit_edge, !prof !360

d_revalidate.exit.i.cleanup_crit_edge:            ; preds = %d_revalidate.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then4.i:                                       ; preds = %d_revalidate.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool5.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool5.not.i, label %lookup_dcache.exit.thread51, label %lookup_dcache.exit

lookup_dcache.exit.thread51:                      ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @d_invalidate(ptr noundef nonnull %call.i) #13
  tail call void @dput(ptr noundef nonnull %call.i) #13
  br label %if.end

lookup_dcache.exit:                               ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dput(ptr noundef nonnull %call.i) #13
  %6 = inttoptr i32 %call.i.i to ptr
  br label %cleanup

if.end:                                           ; preds = %lookup_dcache.exit.thread51, %entry.if.end_crit_edge
  %.in = getelementptr inbounds %struct.dentry, ptr %base, i32 0, i32 5
  %7 = ptrtoint ptr %.in to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %.in, align 8
  %i_flags = getelementptr inbounds %struct.inode, ptr %8, i32 0, i32 4
  %9 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %i_flags, align 4
  %and = and i32 %10, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %if.end6, label %if.end.cleanup_crit_edge, !prof !362

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %call7 = tail call ptr @d_alloc(ptr noundef %base, ptr noundef %name) #13
  %tobool8.not = icmp eq ptr %call7, null
  br i1 %tobool8.not, label %if.end6.cleanup_crit_edge, label %if.end19, !prof !360

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end19:                                         ; preds = %if.end6
  %i_op = getelementptr inbounds %struct.inode, ptr %8, i32 0, i32 7
  %11 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %i_op, align 8
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %12, align 128
  %call20 = tail call ptr %14(ptr noundef %8, ptr noundef nonnull %call7, i32 noundef %flags) #13
  %tobool21.not = icmp eq ptr %call20, null
  br i1 %tobool21.not, label %if.end19.cleanup_crit_edge, label %if.then28, !prof !362

if.end19.cleanup_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then28:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dput(ptr noundef nonnull %call7) #13
  br label %cleanup

cleanup:                                          ; preds = %if.then28, %if.end19.cleanup_crit_edge, %if.end6.cleanup_crit_edge, %if.end.cleanup_crit_edge, %lookup_dcache.exit, %d_revalidate.exit.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge
  %retval.0 = phi ptr [ %6, %lookup_dcache.exit ], [ %call20, %if.then28 ], [ %call7, %if.end19.cleanup_crit_edge ], [ inttoptr (i32 -2 to ptr), %if.end.cleanup_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end6.cleanup_crit_edge ], [ %call.i, %d_revalidate.exit.i.cleanup_crit_edge ], [ %call.i, %if.then.i.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_path_rmdir(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_rmdir(i32 noundef %pathname) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %pathname to ptr
  %call.i.i = tail call ptr @getname_flags(ptr noundef %0, i32 noundef 0, ptr noundef null) #13
  %call1.i = tail call i32 @do_rmdir(i32 noundef -100, ptr noundef %call.i.i) #13
  ret i32 %call1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vfs_unlink(ptr noundef %mnt_userns, ptr noundef %dir, ptr noundef %dentry, ptr noundef writeonly %delegated_inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %d_inode = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode, align 8
  %call = tail call fastcc i32 @may_delete(ptr noundef %mnt_userns, ptr noundef %dir, ptr noundef %dentry, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %i_op = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 7
  %2 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_op, align 8
  %unlink = getelementptr inbounds %struct.inode_operations, ptr %3, i32 0, i32 7
  %4 = ptrtoint ptr %unlink to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %unlink, align 4
  %tobool1.not = icmp eq ptr %5, null
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %i_rwsem.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 25
  tail call void @down_write(ptr noundef %i_rwsem.i) #13
  %i_flags = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %i_flags, align 4
  %and = and i32 %7, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %if.else, label %if.end3.out.thread_crit_edge

if.end3.out.thread_crit_edge:                     ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  br label %out.thread

if.else:                                          ; preds = %if.end3
  %8 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %dentry, align 8
  %and.i.i = and i32 %9, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.else.if.else8_crit_edge, label %is_local_mountpoint.exit

if.else.if.else8_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else8

is_local_mountpoint.exit:                         ; preds = %if.else
  %call1.i = tail call zeroext i1 @__is_local_mountpoint(ptr noundef %dentry) #13
  br i1 %call1.i, label %is_local_mountpoint.exit.out.thread_crit_edge, label %is_local_mountpoint.exit.if.else8_crit_edge

is_local_mountpoint.exit.if.else8_crit_edge:      ; preds = %is_local_mountpoint.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else8

is_local_mountpoint.exit.out.thread_crit_edge:    ; preds = %is_local_mountpoint.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %out.thread

if.else8:                                         ; preds = %is_local_mountpoint.exit.if.else8_crit_edge, %if.else.if.else8_crit_edge
  %call9 = tail call i32 @security_inode_unlink(ptr noundef %dir, ptr noundef %dentry) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.then11, label %if.else8.out.thread_crit_edge

if.else8.out.thread_crit_edge:                    ; preds = %if.else8
  call void @__sanitizer_cov_trace_pc() #15
  br label %out.thread

if.then11:                                        ; preds = %if.else8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !379
  %i_flctx.i.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 45
  %10 = ptrtoint ptr %i_flctx.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %i_flctx.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %if.then11.if.end15_crit_edge, label %land.lhs.true.i.i

if.then11.if.end15_crit_edge:                     ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end15

land.lhs.true.i.i:                                ; preds = %if.then11
  %flc_lease.i.i = getelementptr inbounds %struct.file_lock_context, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %flc_lease.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %flc_lease.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !380
  %cmp.i.not.i.i.i = icmp eq ptr %13, %flc_lease.i.i
  br i1 %cmp.i.not.i.i.i, label %list_empty_careful.exit.i.i, label %land.lhs.true.i.i.break_deleg.exit.i_crit_edge

land.lhs.true.i.i.break_deleg.exit.i_crit_edge:   ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %break_deleg.exit.i

list_empty_careful.exit.i.i:                      ; preds = %land.lhs.true.i.i
  %prev.i.i.i = getelementptr inbounds %struct.file_lock_context, ptr %11, i32 0, i32 3, i32 1
  %14 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %prev.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %15, %flc_lease.i.i
  br i1 %cmp.i.not.i.i, label %list_empty_careful.exit.i.i.if.end15_crit_edge, label %list_empty_careful.exit.i.i.break_deleg.exit.i_crit_edge

list_empty_careful.exit.i.i.break_deleg.exit.i_crit_edge: ; preds = %list_empty_careful.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %break_deleg.exit.i

list_empty_careful.exit.i.i.if.end15_crit_edge:   ; preds = %list_empty_careful.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end15

break_deleg.exit.i:                               ; preds = %list_empty_careful.exit.i.i.break_deleg.exit.i_crit_edge, %land.lhs.true.i.i.break_deleg.exit.i_crit_edge
  %call5.i.i = tail call i32 @__break_lease(ptr noundef %1, i32 noundef 2049, i32 noundef 4) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -11, i32 %call5.i.i)
  %cmp.i = icmp ne i32 %call5.i.i, -11
  %tobool.not.i = icmp eq ptr %delegated_inode, null
  %or.cond.i = or i1 %tobool.not.i, %cmp.i
  br i1 %or.cond.i, label %try_break_deleg.exit, label %try_break_deleg.exit.thread83

try_break_deleg.exit.thread83:                    ; preds = %break_deleg.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %16 = ptrtoint ptr %delegated_inode to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %1, ptr %delegated_inode, align 4
  tail call void @ihold(ptr noundef %1) #13
  br label %out.thread

try_break_deleg.exit:                             ; preds = %break_deleg.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i)
  %tobool13.not = icmp eq i32 %call5.i.i, 0
  br i1 %tobool13.not, label %try_break_deleg.exit.if.end15_crit_edge, label %try_break_deleg.exit.out.thread_crit_edge

try_break_deleg.exit.out.thread_crit_edge:        ; preds = %try_break_deleg.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %out.thread

try_break_deleg.exit.if.end15_crit_edge:          ; preds = %try_break_deleg.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end15

if.end15:                                         ; preds = %try_break_deleg.exit.if.end15_crit_edge, %list_empty_careful.exit.i.i.if.end15_crit_edge, %if.then11.if.end15_crit_edge
  %17 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %i_op, align 8
  %unlink17 = getelementptr inbounds %struct.inode_operations, ptr %18, i32 0, i32 7
  %19 = ptrtoint ptr %unlink17 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %unlink17, align 4
  %call18 = tail call i32 %20(ptr noundef %dir, ptr noundef %dentry) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %if.then20, label %if.end15.out.thread_crit_edge

if.end15.out.thread_crit_edge:                    ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #15
  br label %out.thread

if.then20:                                        ; preds = %if.end15
  tail call fastcc void @dont_mount(ptr noundef %dentry)
  %21 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %dentry, align 8
  %and.i.i62 = and i32 %22, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i62)
  %tobool.i.not.i63 = icmp eq i32 %and.i.i62, 0
  br i1 %tobool.i.not.i63, label %if.then20.land.lhs.true_crit_edge, label %if.end.i64

if.then20.land.lhs.true_crit_edge:                ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true

if.end.i64:                                       ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @__detach_mounts(ptr noundef %dentry) #13
  br label %land.lhs.true

out.thread:                                       ; preds = %if.end15.out.thread_crit_edge, %try_break_deleg.exit.out.thread_crit_edge, %try_break_deleg.exit.thread83, %if.else8.out.thread_crit_edge, %is_local_mountpoint.exit.out.thread_crit_edge, %if.end3.out.thread_crit_edge
  %error.0.ph = phi i32 [ -11, %try_break_deleg.exit.thread83 ], [ -16, %is_local_mountpoint.exit.out.thread_crit_edge ], [ -1, %if.end3.out.thread_crit_edge ], [ %call18, %if.end15.out.thread_crit_edge ], [ %call5.i.i, %try_break_deleg.exit.out.thread_crit_edge ], [ %call9, %if.else8.out.thread_crit_edge ]
  tail call void @up_write(ptr noundef %i_rwsem.i) #13
  br label %cleanup

land.lhs.true:                                    ; preds = %if.end.i64, %if.then20.land.lhs.true_crit_edge
  tail call void @up_write(ptr noundef %i_rwsem.i) #13
  %23 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %dentry, align 8
  %and26 = and i32 %24, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26)
  %tobool27.not = icmp eq i32 %and26, 0
  br i1 %tobool27.not, label %if.then31.critedge, label %if.then28

if.then28:                                        ; preds = %land.lhs.true
  %and.i.i.i.i = and i32 %24, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %land.rhs.i, label %if.end37.critedge.i

land.rhs.i:                                       ; preds = %if.then28
  %.b43.i = load i1, ptr @fsnotify_unlink.__already_done, align 1
  br i1 %.b43.i, label %land.rhs.i.cleanup_crit_edge, label %if.then.i66, !prof !362

land.rhs.i.cleanup_crit_edge:                     ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then.i66:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @fsnotify_unlink.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.68, i32 noundef 271, i32 noundef 9, ptr noundef null) #13
  br label %cleanup

if.end37.critedge.i:                              ; preds = %if.then28
  %25 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %d_inode, align 8
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %26, align 8
  %i_sb.i.i.i = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 8
  %29 = ptrtoint ptr %i_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %i_sb.i.i.i, align 4
  %s_fsnotify_connectors.i.i.i = getelementptr inbounds %struct.super_block, ptr %30, i32 0, i32 48
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i.i.i, i32 noundef 4) #13
  %31 = ptrtoint ptr %s_fsnotify_connectors.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %s_fsnotify_connectors.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %cmp.i.i45.i = icmp eq i32 %32, 0
  br i1 %cmp.i.i45.i, label %if.end37.critedge.i.cleanup_crit_edge, label %if.end.i.i.i

if.end37.critedge.i.cleanup_crit_edge:            ; preds = %if.end37.critedge.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i.i.i:                                     ; preds = %if.end37.critedge.i
  call void @__sanitizer_cov_trace_pc() #15
  %d_name.i.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 4
  %33 = and i16 %28, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %33)
  %cmp.i.i = icmp eq i16 %33, 16384
  %spec.select.i.i = select i1 %cmp.i.i, i32 1073742336, i32 512
  %call1.i.i.i = tail call i32 @fsnotify(i32 noundef %spec.select.i.i, ptr noundef %26, i32 noundef 2, ptr noundef %dir, ptr noundef %d_name.i.i, ptr noundef null, i32 noundef 0) #13
  br label %cleanup

if.then31.critedge:                               ; preds = %land.lhs.true
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %34 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %i_sb.i.i, align 4
  %s_fsnotify_connectors.i.i = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 48
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i.i, i32 noundef 4) #13
  %36 = ptrtoint ptr %s_fsnotify_connectors.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %s_fsnotify_connectors.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %cmp.i.i67 = icmp eq i32 %37, 0
  br i1 %cmp.i.i67, label %if.then31.critedge.fsnotify_link_count.exit_crit_edge, label %if.end.i.i

if.then31.critedge.fsnotify_link_count.exit_crit_edge: ; preds = %if.then31.critedge
  call void @__sanitizer_cov_trace_pc() #15
  br label %fsnotify_link_count.exit

if.end.i.i:                                       ; preds = %if.then31.critedge
  call void @__sanitizer_cov_trace_pc() #15
  %38 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %1, align 8
  %40 = and i16 %39, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %40)
  %cmp1.i.i = icmp eq i16 %40, 16384
  %spec.select.i.i68 = select i1 %cmp1.i.i, i32 1073741828, i32 4
  %call5.i.i69 = tail call i32 @fsnotify(i32 noundef %spec.select.i.i68, ptr noundef %1, i32 noundef 2, ptr noundef null, ptr noundef null, ptr noundef %1, i32 noundef 0) #13
  br label %fsnotify_link_count.exit

fsnotify_link_count.exit:                         ; preds = %if.end.i.i, %if.then31.critedge.fsnotify_link_count.exit_crit_edge
  %41 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %d_inode, align 8
  tail call void @ihold(ptr noundef %42) #13
  tail call void @d_delete(ptr noundef %dentry) #13
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %42, align 8
  %i_sb.i.i.i71 = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 8
  %45 = ptrtoint ptr %i_sb.i.i.i71 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %i_sb.i.i.i71, align 4
  %s_fsnotify_connectors.i.i.i72 = getelementptr inbounds %struct.super_block, ptr %46, i32 0, i32 48
  %call.i.i.i.i.i73 = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i.i.i72, i32 noundef 4) #13
  %47 = ptrtoint ptr %s_fsnotify_connectors.i.i.i72 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %s_fsnotify_connectors.i.i.i72, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %cmp.i.i.i74 = icmp eq i32 %48, 0
  br i1 %cmp.i.i.i74, label %fsnotify_link_count.exit.d_delete_notify.exit_crit_edge, label %if.end.i.i.i79

fsnotify_link_count.exit.d_delete_notify.exit_crit_edge: ; preds = %fsnotify_link_count.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %d_delete_notify.exit

if.end.i.i.i79:                                   ; preds = %fsnotify_link_count.exit
  call void @__sanitizer_cov_trace_pc() #15
  %d_name.i.i75 = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 4
  %49 = and i16 %44, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %49)
  %cmp.i.i76 = icmp eq i16 %49, 16384
  %spec.select.i.i77 = select i1 %cmp.i.i76, i32 1073742336, i32 512
  %call1.i.i.i78 = tail call i32 @fsnotify(i32 noundef %spec.select.i.i77, ptr noundef %42, i32 noundef 2, ptr noundef %dir, ptr noundef %d_name.i.i75, ptr noundef null, i32 noundef 0) #13
  br label %d_delete_notify.exit

d_delete_notify.exit:                             ; preds = %if.end.i.i.i79, %fsnotify_link_count.exit.d_delete_notify.exit_crit_edge
  tail call void @iput(ptr noundef %42) #13
  br label %cleanup

cleanup:                                          ; preds = %d_delete_notify.exit, %if.end.i.i.i, %if.end37.critedge.i.cleanup_crit_edge, %if.then.i66, %land.rhs.i.cleanup_crit_edge, %out.thread, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ -1, %if.end.cleanup_crit_edge ], [ 0, %d_delete_notify.exit ], [ %error.0.ph, %out.thread ], [ 0, %land.rhs.i.cleanup_crit_edge ], [ 0, %if.then.i66 ], [ 0, %if.end37.critedge.i.cleanup_crit_edge ], [ 0, %if.end.i.i.i ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_inode_unlink(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @try_break_deleg(ptr noundef %inode, ptr noundef writeonly %delegated_inode) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !379
  %i_flctx.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 45
  %0 = ptrtoint ptr %i_flctx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_flctx.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %land.lhs.true.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true.i:                                  ; preds = %entry
  %flc_lease.i = getelementptr inbounds %struct.file_lock_context, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %flc_lease.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %flc_lease.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !380
  %cmp.i.not.i.i = icmp eq ptr %3, %flc_lease.i
  br i1 %cmp.i.not.i.i, label %list_empty_careful.exit.i, label %land.lhs.true.i.break_deleg.exit_crit_edge

land.lhs.true.i.break_deleg.exit_crit_edge:       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %break_deleg.exit

list_empty_careful.exit.i:                        ; preds = %land.lhs.true.i
  %prev.i.i = getelementptr inbounds %struct.file_lock_context, ptr %1, i32 0, i32 3, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i, align 4
  %cmp.i.not.i = icmp eq ptr %5, %flc_lease.i
  br i1 %cmp.i.not.i, label %list_empty_careful.exit.i.if.end_crit_edge, label %list_empty_careful.exit.i.break_deleg.exit_crit_edge

list_empty_careful.exit.i.break_deleg.exit_crit_edge: ; preds = %list_empty_careful.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %break_deleg.exit

list_empty_careful.exit.i.if.end_crit_edge:       ; preds = %list_empty_careful.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

break_deleg.exit:                                 ; preds = %list_empty_careful.exit.i.break_deleg.exit_crit_edge, %land.lhs.true.i.break_deleg.exit_crit_edge
  %call5.i = tail call i32 @__break_lease(ptr noundef %inode, i32 noundef 2049, i32 noundef 4) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -11, i32 %call5.i)
  %cmp = icmp ne i32 %call5.i, -11
  %tobool.not = icmp eq ptr %delegated_inode, null
  %or.cond = or i1 %tobool.not, %cmp
  br i1 %or.cond, label %break_deleg.exit.if.end_crit_edge, label %if.then

break_deleg.exit.if.end_crit_edge:                ; preds = %break_deleg.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %break_deleg.exit
  call void @__sanitizer_cov_trace_pc() #15
  %6 = ptrtoint ptr %delegated_inode to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %inode, ptr %delegated_inode, align 4
  tail call void @ihold(ptr noundef %inode) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %break_deleg.exit.if.end_crit_edge, %list_empty_careful.exit.i.if.end_crit_edge, %entry.if.end_crit_edge
  %retval.0.i9 = phi i32 [ -11, %if.then ], [ %call5.i, %break_deleg.exit.if.end_crit_edge ], [ 0, %list_empty_careful.exit.i.if.end_crit_edge ], [ 0, %entry.if.end_crit_edge ]
  ret i32 %retval.0.i9
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @do_unlinkat(i32 noundef %dfd, ptr noundef %name) local_unnamed_addr #0 align 64 {
entry:
  %path = alloca %struct.path, align 4
  %last = alloca %struct.qstr, align 8
  %type = alloca i32, align 4
  %delegated_inode = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path) #13
  %0 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %path, align 4, !annotation !367
  %1 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !367
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %last) #13
  %3 = call ptr @memset(ptr %last, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %type) #13
  %4 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %type, align 4, !annotation !367
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %delegated_inode) #13
  %5 = ptrtoint ptr %delegated_inode to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %delegated_inode, align 4
  %name13 = getelementptr inbounds %struct.qstr, ptr %last, i32 0, i32 1
  br label %retry

retry:                                            ; preds = %exit2.retry_crit_edge, %entry
  %tobool.not.i = phi i1 [ false, %exit2.retry_crit_edge ], [ true, %entry ]
  %lookup_flags.0 = phi i32 [ 32, %exit2.retry_crit_edge ], [ 0, %entry ]
  %call = call fastcc i32 @filename_parentat(i32 noundef %dfd, ptr noundef %name, i32 noundef %lookup_flags.0, ptr noundef nonnull %path, ptr noundef nonnull %last, ptr noundef nonnull %type)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %retry.exit1_crit_edge

retry.exit1_crit_edge:                            ; preds = %retry
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit1

if.end:                                           ; preds = %retry
  %6 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp.not = icmp eq i32 %7, 0
  br i1 %cmp.not, label %if.end2, label %if.end.exit2_crit_edge

if.end.exit2_crit_edge:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit2

if.end2:                                          ; preds = %if.end
  %8 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %path, align 4
  %call3 = call i32 @mnt_want_write(ptr noundef %9) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.end2.retry_deleg_crit_edge, label %if.end2.exit2_crit_edge

if.end2.exit2_crit_edge:                          ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit2

if.end2.retry_deleg_crit_edge:                    ; preds = %if.end2
  br label %retry_deleg

retry_deleg:                                      ; preds = %break_deleg_wait.exit.retry_deleg_crit_edge, %if.end2.retry_deleg_crit_edge
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %1, align 4
  %d_inode = getelementptr inbounds %struct.dentry, ptr %11, i32 0, i32 5
  %12 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %d_inode, align 8
  %i_rwsem.i = getelementptr inbounds %struct.inode, ptr %13, i32 0, i32 25
  call void @down_write_nested(ptr noundef %i_rwsem.i, i32 noundef 1) #13
  %14 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %1, align 4
  %call9 = call fastcc ptr @__lookup_hash(ptr noundef nonnull %last, ptr noundef %15, i32 noundef %lookup_flags.0)
  %16 = ptrtoint ptr %call9 to i32
  %cmp.i = icmp ugt ptr %call9, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %retry_deleg.if.end30_crit_edge, label %if.then12

retry_deleg.if.end30_crit_edge:                   ; preds = %retry_deleg
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end30

if.then12:                                        ; preds = %retry_deleg
  %17 = ptrtoint ptr %name13 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %name13, align 8
  %19 = ptrtoint ptr %last to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %last, align 8
  %arrayidx = getelementptr i8, ptr %18, i32 %20
  %21 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool14.not = icmp eq i8 %22, 0
  br i1 %tobool14.not, label %if.end16, label %if.then12.slashes_crit_edge

if.then12.slashes_crit_edge:                      ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #15
  br label %slashes

if.end16:                                         ; preds = %if.then12
  %d_inode17 = getelementptr inbounds %struct.dentry, ptr %call9, i32 0, i32 5
  %23 = ptrtoint ptr %d_inode17 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %d_inode17, align 8
  %25 = ptrtoint ptr %call9 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %call9, align 8
  %and.i.i.i = and i32 %26, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %cmp.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %cmp.i.i, label %if.end16.slashes_crit_edge, label %if.end20

if.end16.slashes_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #15
  br label %slashes

if.end20:                                         ; preds = %if.end16
  call void @ihold(ptr noundef %24) #13
  %call21 = call i32 @security_path_unlink(ptr noundef nonnull %path, ptr noundef %call9) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end24, label %if.end20.exit3_crit_edge

if.end20.exit3_crit_edge:                         ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit3

if.end24:                                         ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #15
  %27 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %path, align 4
  %mnt_userns.i = getelementptr inbounds %struct.vfsmount, ptr %28, i32 0, i32 3
  %29 = ptrtoint ptr %mnt_userns.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile ptr, ptr %mnt_userns.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !371
  %31 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %1, align 4
  %d_inode28 = getelementptr inbounds %struct.dentry, ptr %32, i32 0, i32 5
  %33 = ptrtoint ptr %d_inode28 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %d_inode28, align 8
  %call29 = call i32 @vfs_unlink(ptr noundef %30, ptr noundef %34, ptr noundef %call9, ptr noundef nonnull %delegated_inode)
  br label %exit3

exit3:                                            ; preds = %if.else, %slashes.exit3_crit_edge, %if.end24, %if.end20.exit3_crit_edge
  %error.0 = phi i32 [ %call21, %if.end20.exit3_crit_edge ], [ %call29, %if.end24 ], [ -2, %slashes.exit3_crit_edge ], [ %., %if.else ]
  %inode.2 = phi ptr [ %24, %if.end20.exit3_crit_edge ], [ %24, %if.end24 ], [ %inode.4, %slashes.exit3_crit_edge ], [ %inode.4, %if.else ]
  call void @dput(ptr noundef %call9) #13
  br label %if.end30

if.end30:                                         ; preds = %exit3, %retry_deleg.if.end30_crit_edge
  %error.1 = phi i32 [ %16, %retry_deleg.if.end30_crit_edge ], [ %error.0, %exit3 ]
  %inode.3 = phi ptr [ null, %retry_deleg.if.end30_crit_edge ], [ %inode.2, %exit3 ]
  %35 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %1, align 4
  %d_inode32 = getelementptr inbounds %struct.dentry, ptr %36, i32 0, i32 5
  %37 = ptrtoint ptr %d_inode32 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %d_inode32, align 8
  %i_rwsem.i73 = getelementptr inbounds %struct.inode, ptr %38, i32 0, i32 25
  call void @up_write(ptr noundef %i_rwsem.i73) #13
  %tobool33.not = icmp eq ptr %inode.3, null
  br i1 %tobool33.not, label %if.end30.if.end35_crit_edge, label %if.then34

if.end30.if.end35_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end35

if.then34:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #15
  call void @iput(ptr noundef nonnull %inode.3) #13
  br label %if.end35

if.end35:                                         ; preds = %if.then34, %if.end30.if.end35_crit_edge
  %39 = ptrtoint ptr %delegated_inode to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %delegated_inode, align 4
  %tobool36.not = icmp eq ptr %40, null
  br i1 %tobool36.not, label %if.end35.if.end42_crit_edge, label %if.then37

if.end35.if.end42_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end42

if.then37:                                        ; preds = %if.end35
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !379
  %i_flctx.i.i = getelementptr inbounds %struct.inode, ptr %40, i32 0, i32 45
  %41 = ptrtoint ptr %i_flctx.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %i_flctx.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %42, null
  br i1 %tobool.not.i.i, label %if.then37.break_deleg_wait.exit_crit_edge, label %land.lhs.true.i.i

if.then37.break_deleg_wait.exit_crit_edge:        ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #15
  br label %break_deleg_wait.exit

land.lhs.true.i.i:                                ; preds = %if.then37
  %flc_lease.i.i = getelementptr inbounds %struct.file_lock_context, ptr %42, i32 0, i32 3
  %43 = ptrtoint ptr %flc_lease.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile ptr, ptr %flc_lease.i.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !380
  %cmp.i.not.i.i.i = icmp eq ptr %44, %flc_lease.i.i
  br i1 %cmp.i.not.i.i.i, label %list_empty_careful.exit.i.i, label %land.lhs.true.i.i.if.then.i.i_crit_edge

land.lhs.true.i.i.if.then.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i.i

list_empty_careful.exit.i.i:                      ; preds = %land.lhs.true.i.i
  %prev.i.i.i = getelementptr inbounds %struct.file_lock_context, ptr %42, i32 0, i32 3, i32 1
  %45 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %prev.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %46, %flc_lease.i.i
  br i1 %cmp.i.not.i.i, label %list_empty_careful.exit.i.i.break_deleg_wait.exit_crit_edge, label %list_empty_careful.exit.i.i.if.then.i.i_crit_edge

list_empty_careful.exit.i.i.if.then.i.i_crit_edge: ; preds = %list_empty_careful.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i.i

list_empty_careful.exit.i.i.break_deleg_wait.exit_crit_edge: ; preds = %list_empty_careful.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %break_deleg_wait.exit

if.then.i.i:                                      ; preds = %list_empty_careful.exit.i.i.if.then.i.i_crit_edge, %land.lhs.true.i.i.if.then.i.i_crit_edge
  %call5.i.i = call i32 @__break_lease(ptr noundef nonnull %40, i32 noundef 1, i32 noundef 4) #13
  br label %break_deleg_wait.exit

break_deleg_wait.exit:                            ; preds = %if.then.i.i, %list_empty_careful.exit.i.i.break_deleg_wait.exit_crit_edge, %if.then37.break_deleg_wait.exit_crit_edge
  %retval.0.i.i = phi i32 [ %call5.i.i, %if.then.i.i ], [ 0, %list_empty_careful.exit.i.i.break_deleg_wait.exit_crit_edge ], [ 0, %if.then37.break_deleg_wait.exit_crit_edge ]
  %47 = ptrtoint ptr %delegated_inode to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %delegated_inode, align 4
  call void @iput(ptr noundef %48) #13
  %49 = ptrtoint ptr %delegated_inode to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr null, ptr %delegated_inode, align 4
  %tobool39.not = icmp eq i32 %retval.0.i.i, 0
  br i1 %tobool39.not, label %break_deleg_wait.exit.retry_deleg_crit_edge, label %break_deleg_wait.exit.if.end42_crit_edge

break_deleg_wait.exit.if.end42_crit_edge:         ; preds = %break_deleg_wait.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end42

break_deleg_wait.exit.retry_deleg_crit_edge:      ; preds = %break_deleg_wait.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %retry_deleg

if.end42:                                         ; preds = %break_deleg_wait.exit.if.end42_crit_edge, %if.end35.if.end42_crit_edge
  %error.2 = phi i32 [ %retval.0.i.i, %break_deleg_wait.exit.if.end42_crit_edge ], [ %error.1, %if.end35.if.end42_crit_edge ]
  %50 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %path, align 4
  call void @mnt_drop_write(ptr noundef %51) #13
  br label %exit2

exit2:                                            ; preds = %if.end42, %if.end2.exit2_crit_edge, %if.end.exit2_crit_edge
  %error.3 = phi i32 [ -21, %if.end.exit2_crit_edge ], [ %call3, %if.end2.exit2_crit_edge ], [ %error.2, %if.end42 ]
  %52 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %1, align 4
  call void @dput(ptr noundef %53) #13
  %54 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %path, align 4
  call void @mntput(ptr noundef %55) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -116, i32 %error.3)
  %cmp.i74 = icmp eq i32 %error.3, -116
  %56 = and i1 %tobool.not.i, %cmp.i74
  br i1 %56, label %exit2.retry_crit_edge, label %exit2.exit1_crit_edge

exit2.exit1_crit_edge:                            ; preds = %exit2
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit1

exit2.retry_crit_edge:                            ; preds = %exit2
  call void @__sanitizer_cov_trace_pc() #15
  br label %retry

exit1:                                            ; preds = %exit2.exit1_crit_edge, %retry.exit1_crit_edge
  %error.4 = phi i32 [ %call, %retry.exit1_crit_edge ], [ %error.3, %exit2.exit1_crit_edge ]
  %cmp.i.i75 = icmp ugt ptr %name, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i75, label %exit1.putname.exit_crit_edge, label %do.body.i

exit1.putname.exit_crit_edge:                     ; preds = %exit1
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

do.body.i:                                        ; preds = %exit1
  %refcnt.i = getelementptr inbounds %struct.filename, ptr %name, i32 0, i32 2
  %57 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %58)
  %cmp.i76 = icmp slt i32 %58, 1
  br i1 %cmp.i76, label %do.body3.i, label %do.end7.i, !prof !360

do.body3.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 261, 0\0A.popsection", ""() #13, !srcloc !361
  unreachable

do.end7.i:                                        ; preds = %do.body.i
  %dec.i = add nsw i32 %58, -1
  %59 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %dec.i, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp9.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp9.not.i, label %if.end11.i, label %do.end7.i.putname.exit_crit_edge

do.end7.i.putname.exit_crit_edge:                 ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

if.end11.i:                                       ; preds = %do.end7.i
  %60 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %name, align 4
  %iname.i = getelementptr inbounds %struct.filename, ptr %name, i32 0, i32 4
  %cmp13.not.i = icmp eq ptr %61, %iname.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %62 = load ptr, ptr @names_cachep, align 4
  br i1 %cmp13.not.i, label %if.else.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %62, ptr noundef %61) #13
  call void @kfree(ptr noundef %name) #13
  br label %putname.exit

if.else.i:                                        ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %62, ptr noundef %name) #13
  br label %putname.exit

putname.exit:                                     ; preds = %if.else.i, %if.then14.i, %do.end7.i.putname.exit_crit_edge, %exit1.putname.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %delegated_inode) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %type) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %last) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path) #13
  ret i32 %error.4

slashes:                                          ; preds = %if.end16.slashes_crit_edge, %if.then12.slashes_crit_edge
  %inode.4 = phi ptr [ null, %if.then12.slashes_crit_edge ], [ %24, %if.end16.slashes_crit_edge ]
  %63 = ptrtoint ptr %call9 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %call9, align 8
  %and.i.i.i77 = and i32 %64, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i77)
  %cmp.i.i78 = icmp eq i32 %and.i.i.i77, 0
  br i1 %cmp.i.i78, label %slashes.exit3_crit_edge, label %if.else

slashes.exit3_crit_edge:                          ; preds = %slashes
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit3

if.else:                                          ; preds = %slashes
  call void @__sanitizer_cov_trace_pc() #15
  %65 = and i32 %64, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %65)
  %66 = icmp eq i32 %65, 2097152
  %. = select i1 %66, i32 -21, i32 -20
  br label %exit3
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @ihold(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_path_unlink(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @iput(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_unlinkat(i32 noundef %dfd, i32 noundef %pathname, i32 noundef %flag) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %and.i = and i32 %flag, -513
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %cmp.not.i = icmp eq i32 %and.i, 0
  br i1 %cmp.not.i, label %if.end.i, label %entry.__do_sys_unlinkat.exit_crit_edge

entry.__do_sys_unlinkat.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %__do_sys_unlinkat.exit

if.end.i:                                         ; preds = %entry
  %0 = inttoptr i32 %pathname to ptr
  %and1.i = and i32 %flag, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not.i = icmp eq i32 %and1.i, 0
  %call.i10.i = tail call ptr @getname_flags(ptr noundef %0, i32 noundef 0, ptr noundef null) #13
  br i1 %tobool.not.i, label %if.end4.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %call3.i = tail call i32 @do_rmdir(i32 noundef %dfd, ptr noundef %call.i10.i) #13
  br label %__do_sys_unlinkat.exit

if.end4.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %call6.i = tail call i32 @do_unlinkat(i32 noundef %dfd, ptr noundef %call.i10.i) #13
  br label %__do_sys_unlinkat.exit

__do_sys_unlinkat.exit:                           ; preds = %if.end4.i, %if.then2.i, %entry.__do_sys_unlinkat.exit_crit_edge
  %retval.0.i = phi i32 [ %call3.i, %if.then2.i ], [ %call6.i, %if.end4.i ], [ -22, %entry.__do_sys_unlinkat.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_unlink(i32 noundef %pathname) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %pathname to ptr
  %call.i.i = tail call ptr @getname_flags(ptr noundef %0, i32 noundef 0, ptr noundef null) #13
  %call1.i = tail call i32 @do_unlinkat(i32 noundef -100, ptr noundef %call.i.i) #13
  ret i32 %call1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vfs_symlink(ptr noundef %mnt_userns, ptr noundef %dir, ptr noundef %dentry, ptr noundef %oldname) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.end.i, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %i_flags.i = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 4
  %2 = ptrtoint ptr %i_flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %i_flags.i, align 4
  %and.i = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %if.end3.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end3.i:                                        ; preds = %if.end.i
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 8
  %4 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %i_sb.i, align 4
  %call.i = tail call fastcc zeroext i1 @fsuidgid_has_mapping(ptr noundef %5, ptr noundef %mnt_userns) #13
  br i1 %call.i, label %may_create.exit, label %if.end3.i.cleanup_crit_edge

if.end3.i.cleanup_crit_edge:                      ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

may_create.exit:                                  ; preds = %if.end3.i
  %call6.i = tail call i32 @inode_permission(ptr noundef %mnt_userns, ptr noundef %dir, i32 noundef 3) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool.not = icmp eq i32 %call6.i, 0
  br i1 %tobool.not, label %if.end, label %may_create.exit.cleanup_crit_edge

may_create.exit.cleanup_crit_edge:                ; preds = %may_create.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %may_create.exit
  %i_op = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 7
  %6 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %i_op, align 8
  %symlink = getelementptr inbounds %struct.inode_operations, ptr %7, i32 0, i32 8
  %8 = ptrtoint ptr %symlink to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %symlink, align 32
  %tobool1.not = icmp eq ptr %9, null
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %call4 = tail call i32 @security_inode_symlink(ptr noundef %dir, ptr noundef %dentry, ptr noundef %oldname) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.end7, label %if.end3.cleanup_crit_edge

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end7:                                          ; preds = %if.end3
  %10 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %i_op, align 8
  %symlink9 = getelementptr inbounds %struct.inode_operations, ptr %11, i32 0, i32 8
  %12 = ptrtoint ptr %symlink9 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %symlink9, align 32
  %call10 = tail call i32 %13(ptr noundef %mnt_userns, ptr noundef %dir, ptr noundef %dentry, ptr noundef %oldname) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.then12, label %if.end7.cleanup_crit_edge

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then12:                                        ; preds = %if.end7
  %14 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %i_sb.i, align 4
  %s_fsnotify_connectors.i.i.i = getelementptr inbounds %struct.super_block, ptr %15, i32 0, i32 48
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i.i.i, i32 noundef 4) #13
  %16 = ptrtoint ptr %s_fsnotify_connectors.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %s_fsnotify_connectors.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp.i.i.i = icmp eq i32 %17, 0
  br i1 %cmp.i.i.i, label %if.then12.cleanup_crit_edge, label %if.end.i.i.i

if.then12.cleanup_crit_edge:                      ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i.i.i:                                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #15
  %d_name.i.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 4
  %call1.i.i.i = tail call i32 @fsnotify(i32 noundef 256, ptr noundef %dentry, i32 noundef 3, ptr noundef %dir, ptr noundef %d_name.i.i, ptr noundef null, i32 noundef 0) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i.i, %if.then12.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %may_create.exit.cleanup_crit_edge, %if.end3.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6.i, %may_create.exit.cleanup_crit_edge ], [ -1, %if.end.cleanup_crit_edge ], [ %call4, %if.end3.cleanup_crit_edge ], [ %call10, %if.end7.cleanup_crit_edge ], [ 0, %if.then12.cleanup_crit_edge ], [ 0, %if.end.i.i.i ], [ -75, %if.end3.i.cleanup_crit_edge ], [ -2, %if.end.i.cleanup_crit_edge ], [ -17, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_inode_symlink(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @do_symlinkat(ptr noundef %from, i32 noundef %newdfd, ptr noundef %to) local_unnamed_addr #0 align 64 {
entry:
  %path = alloca %struct.path, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path) #13
  %0 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %path, align 4, !annotation !367
  %1 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !367
  %cmp.i = icmp ugt ptr %from, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %retry

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %3 = ptrtoint ptr %from to i32
  br label %out_putnames

retry:                                            ; preds = %entry
  %call2 = call fastcc ptr @filename_create(i32 noundef %newdfd, ptr noundef %to, ptr noundef nonnull %path, i32 noundef 0)
  %cmp.i30 = icmp ugt ptr %call2, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i30, label %retry.out_putnames.loopexit.split.loop.exit_crit_edge, label %if.end6

retry.out_putnames.loopexit.split.loop.exit_crit_edge: ; preds = %retry
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_putnames.loopexit.split.loop.exit

if.end6:                                          ; preds = %retry
  %4 = ptrtoint ptr %from to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %from, align 4
  %call7 = call i32 @security_path_symlink(ptr noundef nonnull %path, ptr noundef %call2, ptr noundef %5) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool.not = icmp eq i32 %call7, 0
  br i1 %tobool.not, label %if.then8, label %if.end6.if.end13_crit_edge

if.end6.if.end13_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end13

if.then8:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  %6 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %path, align 4
  %mnt_userns.i = getelementptr inbounds %struct.vfsmount, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %mnt_userns.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %mnt_userns.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !371
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %1, align 4
  %d_inode = getelementptr inbounds %struct.dentry, ptr %11, i32 0, i32 5
  %12 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %d_inode, align 8
  %14 = ptrtoint ptr %from to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %from, align 4
  %call12 = call i32 @vfs_symlink(ptr noundef %9, ptr noundef %13, ptr noundef %call2, ptr noundef %15)
  br label %if.end13

if.end13:                                         ; preds = %if.then8, %if.end6.if.end13_crit_edge
  %error.0 = phi i32 [ %call7, %if.end6.if.end13_crit_edge ], [ %call12, %if.then8 ]
  call void @dput(ptr noundef %call2) #13
  %16 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %1, align 4
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %17, i32 0, i32 5
  %18 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %d_inode.i, align 8
  %i_rwsem.i.i = getelementptr inbounds %struct.inode, ptr %19, i32 0, i32 25
  call void @up_write(ptr noundef %i_rwsem.i.i) #13
  %20 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %path, align 4
  call void @mnt_drop_write(ptr noundef %21) #13
  %22 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %1, align 4
  call void @dput(ptr noundef %23) #13
  %24 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %path, align 4
  call void @mntput(ptr noundef %25) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -116, i32 %error.0)
  %cmp.i31 = icmp eq i32 %error.0, -116
  br i1 %cmp.i31, label %retry.1, label %if.end13.out_putnames_crit_edge

if.end13.out_putnames_crit_edge:                  ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_putnames

retry.1:                                          ; preds = %if.end13
  %call2.1 = call fastcc ptr @filename_create(i32 noundef %newdfd, ptr noundef %to, ptr noundef nonnull %path, i32 noundef 32)
  %cmp.i30.1 = icmp ugt ptr %call2.1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i30.1, label %retry.1.out_putnames.loopexit.split.loop.exit_crit_edge, label %if.end6.1

retry.1.out_putnames.loopexit.split.loop.exit_crit_edge: ; preds = %retry.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_putnames.loopexit.split.loop.exit

if.end6.1:                                        ; preds = %retry.1
  %26 = ptrtoint ptr %from to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %from, align 4
  %call7.1 = call i32 @security_path_symlink(ptr noundef nonnull %path, ptr noundef %call2.1, ptr noundef %27) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.1)
  %tobool.not.1 = icmp eq i32 %call7.1, 0
  br i1 %tobool.not.1, label %if.then8.1, label %if.end6.1.if.end13.1_crit_edge

if.end6.1.if.end13.1_crit_edge:                   ; preds = %if.end6.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end13.1

if.then8.1:                                       ; preds = %if.end6.1
  call void @__sanitizer_cov_trace_pc() #15
  %28 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %path, align 4
  %mnt_userns.i.1 = getelementptr inbounds %struct.vfsmount, ptr %29, i32 0, i32 3
  %30 = ptrtoint ptr %mnt_userns.i.1 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile ptr, ptr %mnt_userns.i.1, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !371
  %32 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %1, align 4
  %d_inode.1 = getelementptr inbounds %struct.dentry, ptr %33, i32 0, i32 5
  %34 = ptrtoint ptr %d_inode.1 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %d_inode.1, align 8
  %36 = ptrtoint ptr %from to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %from, align 4
  %call12.1 = call i32 @vfs_symlink(ptr noundef %31, ptr noundef %35, ptr noundef %call2.1, ptr noundef %37)
  br label %if.end13.1

if.end13.1:                                       ; preds = %if.then8.1, %if.end6.1.if.end13.1_crit_edge
  %error.0.1 = phi i32 [ %call7.1, %if.end6.1.if.end13.1_crit_edge ], [ %call12.1, %if.then8.1 ]
  call void @dput(ptr noundef %call2.1) #13
  %38 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %1, align 4
  %d_inode.i.1 = getelementptr inbounds %struct.dentry, ptr %39, i32 0, i32 5
  %40 = ptrtoint ptr %d_inode.i.1 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %d_inode.i.1, align 8
  %i_rwsem.i.i.1 = getelementptr inbounds %struct.inode, ptr %41, i32 0, i32 25
  call void @up_write(ptr noundef %i_rwsem.i.i.1) #13
  %42 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %path, align 4
  call void @mnt_drop_write(ptr noundef %43) #13
  %44 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %1, align 4
  call void @dput(ptr noundef %45) #13
  %46 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %path, align 4
  call void @mntput(ptr noundef %47) #13
  br label %out_putnames

out_putnames.loopexit.split.loop.exit:            ; preds = %retry.1.out_putnames.loopexit.split.loop.exit_crit_edge, %retry.out_putnames.loopexit.split.loop.exit_crit_edge
  %call2.lcssa = phi ptr [ %call2, %retry.out_putnames.loopexit.split.loop.exit_crit_edge ], [ %call2.1, %retry.1.out_putnames.loopexit.split.loop.exit_crit_edge ]
  %48 = ptrtoint ptr %call2.lcssa to i32
  br label %out_putnames

out_putnames:                                     ; preds = %out_putnames.loopexit.split.loop.exit, %if.end13.1, %if.end13.out_putnames_crit_edge, %if.then
  %error.1 = phi i32 [ %3, %if.then ], [ %48, %out_putnames.loopexit.split.loop.exit ], [ %error.0, %if.end13.out_putnames_crit_edge ], [ %error.0.1, %if.end13.1 ]
  %cmp.i.i = icmp ugt ptr %to, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %out_putnames.putname.exit_crit_edge, label %do.body.i

out_putnames.putname.exit_crit_edge:              ; preds = %out_putnames
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

do.body.i:                                        ; preds = %out_putnames
  %refcnt.i = getelementptr inbounds %struct.filename, ptr %to, i32 0, i32 2
  %49 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %50)
  %cmp.i32 = icmp slt i32 %50, 1
  br i1 %cmp.i32, label %do.body3.i, label %do.end7.i, !prof !360

do.body3.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 261, 0\0A.popsection", ""() #13, !srcloc !361
  unreachable

do.end7.i:                                        ; preds = %do.body.i
  %dec.i = add nsw i32 %50, -1
  %51 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %dec.i, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp9.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp9.not.i, label %if.end11.i, label %do.end7.i.putname.exit_crit_edge

do.end7.i.putname.exit_crit_edge:                 ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

if.end11.i:                                       ; preds = %do.end7.i
  %52 = ptrtoint ptr %to to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %to, align 4
  %iname.i = getelementptr inbounds %struct.filename, ptr %to, i32 0, i32 4
  %cmp13.not.i = icmp eq ptr %53, %iname.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %54 = load ptr, ptr @names_cachep, align 4
  br i1 %cmp13.not.i, label %if.else.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %54, ptr noundef %53) #13
  call void @kfree(ptr noundef %to) #13
  br label %putname.exit

if.else.i:                                        ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %54, ptr noundef %to) #13
  br label %putname.exit

putname.exit:                                     ; preds = %if.else.i, %if.then14.i, %do.end7.i.putname.exit_crit_edge, %out_putnames.putname.exit_crit_edge
  br i1 %cmp.i, label %putname.exit.putname.exit46_crit_edge, label %do.body.i36

putname.exit.putname.exit46_crit_edge:            ; preds = %putname.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit46

do.body.i36:                                      ; preds = %putname.exit
  %refcnt.i34 = getelementptr inbounds %struct.filename, ptr %from, i32 0, i32 2
  %55 = ptrtoint ptr %refcnt.i34 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %refcnt.i34, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %56)
  %cmp.i35 = icmp slt i32 %56, 1
  br i1 %cmp.i35, label %do.body3.i37, label %do.end7.i40, !prof !360

do.body3.i37:                                     ; preds = %do.body.i36
  call void @__sanitizer_cov_trace_pc() #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 261, 0\0A.popsection", ""() #13, !srcloc !361
  unreachable

do.end7.i40:                                      ; preds = %do.body.i36
  %dec.i38 = add nsw i32 %56, -1
  %57 = ptrtoint ptr %refcnt.i34 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %dec.i38, ptr %refcnt.i34, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i38)
  %cmp9.not.i39 = icmp eq i32 %dec.i38, 0
  br i1 %cmp9.not.i39, label %if.end11.i43, label %do.end7.i40.putname.exit46_crit_edge

do.end7.i40.putname.exit46_crit_edge:             ; preds = %do.end7.i40
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit46

if.end11.i43:                                     ; preds = %do.end7.i40
  %58 = ptrtoint ptr %from to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %from, align 4
  %iname.i41 = getelementptr inbounds %struct.filename, ptr %from, i32 0, i32 4
  %cmp13.not.i42 = icmp eq ptr %59, %iname.i41
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %60 = load ptr, ptr @names_cachep, align 4
  br i1 %cmp13.not.i42, label %if.else.i45, label %if.then14.i44

if.then14.i44:                                    ; preds = %if.end11.i43
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %60, ptr noundef %59) #13
  call void @kfree(ptr noundef %from) #13
  br label %putname.exit46

if.else.i45:                                      ; preds = %if.end11.i43
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %60, ptr noundef %from) #13
  br label %putname.exit46

putname.exit46:                                   ; preds = %if.else.i45, %if.then14.i44, %do.end7.i40.putname.exit46_crit_edge, %putname.exit.putname.exit46_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path) #13
  ret i32 %error.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_path_symlink(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_symlinkat(i32 noundef %oldname, i32 noundef %newdfd, i32 noundef %newname) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %oldname to ptr
  %1 = inttoptr i32 %newname to ptr
  %call.i.i = tail call ptr @getname_flags(ptr noundef %0, i32 noundef 0, ptr noundef null) #13
  %call.i3.i = tail call ptr @getname_flags(ptr noundef %1, i32 noundef 0, ptr noundef null) #13
  %call2.i = tail call i32 @do_symlinkat(ptr noundef %call.i.i, i32 noundef %newdfd, ptr noundef %call.i3.i) #13
  ret i32 %call2.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_symlink(i32 noundef %oldname, i32 noundef %newname) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %oldname to ptr
  %1 = inttoptr i32 %newname to ptr
  %call.i.i = tail call ptr @getname_flags(ptr noundef %0, i32 noundef 0, ptr noundef null) #13
  %call.i3.i = tail call ptr @getname_flags(ptr noundef %1, i32 noundef 0, ptr noundef null) #13
  %call2.i = tail call i32 @do_symlinkat(ptr noundef %call.i.i, i32 noundef -100, ptr noundef %call.i3.i) #13
  ret i32 %call2.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vfs_link(ptr noundef %old_dentry, ptr noundef %mnt_userns, ptr noundef %dir, ptr noundef %new_dentry, ptr noundef %delegated_inode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %d_inode = getelementptr inbounds %struct.dentry, ptr %old_dentry, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb, align 4
  %s_max_links = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 41
  %4 = ptrtoint ptr %s_max_links to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %s_max_links, align 128
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %new_dentry, i32 0, i32 5
  %6 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %d_inode.i, align 8
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %if.end.i, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i:                                         ; preds = %if.end
  %i_flags.i = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 4
  %8 = ptrtoint ptr %i_flags.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %i_flags.i, align 4
  %and.i = and i32 %9, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %if.end3.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end3.i:                                        ; preds = %if.end.i
  %call.i = tail call fastcc zeroext i1 @fsuidgid_has_mapping(ptr noundef %3, ptr noundef %mnt_userns) #13
  br i1 %call.i, label %may_create.exit, label %if.end3.i.cleanup_crit_edge

if.end3.i.cleanup_crit_edge:                      ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

may_create.exit:                                  ; preds = %if.end3.i
  %call6.i = tail call i32 @inode_permission(ptr noundef %mnt_userns, ptr noundef %dir, i32 noundef 3) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool1.not = icmp eq i32 %call6.i, 0
  br i1 %tobool1.not, label %if.end3, label %may_create.exit.cleanup_crit_edge

may_create.exit.cleanup_crit_edge:                ; preds = %may_create.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end3:                                          ; preds = %may_create.exit
  %10 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %i_sb, align 4
  %i_sb5 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %12 = ptrtoint ptr %i_sb5 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %i_sb5, align 4
  %cmp.not = icmp eq ptr %11, %13
  br i1 %cmp.not, label %if.end7, label %if.end3.cleanup_crit_edge

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end7:                                          ; preds = %if.end3
  %i_flags = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 4
  %14 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %i_flags, align 4
  %16 = and i32 %15, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %if.end13, label %if.end7.cleanup_crit_edge

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end13:                                         ; preds = %if.end7
  %s_user_ns.i.i.i = getelementptr inbounds %struct.super_block, ptr %11, i32 0, i32 53
  %18 = ptrtoint ptr %s_user_ns.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %s_user_ns.i.i.i, align 8
  %i_uid.i.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 2
  %20 = ptrtoint ptr %i_uid.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %.unpack.i.i = load i32, ptr %i_uid.i.i, align 4
  %21 = insertvalue [1 x i32] undef, i32 %.unpack.i.i, 0
  %cmp.i.i.i.i.i = icmp eq ptr %mnt_userns, @init_user_ns
  %cmp.i.i.i.i = icmp eq ptr %19, %mnt_userns
  %spec.select.i.i.i.i = or i1 %cmp.i.i.i.i.i, %cmp.i.i.i.i
  br i1 %spec.select.i.i.i.i, label %if.end13.i_uid_into_mnt.exit.i_crit_edge, label %if.end.i.i.i

if.end13.i_uid_into_mnt.exit.i_crit_edge:         ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  br label %i_uid_into_mnt.exit.i

if.end.i.i.i:                                     ; preds = %if.end13
  %cmp.i21.i.i.i = icmp eq ptr %19, @init_user_ns
  br i1 %cmp.i21.i.i.i, label %if.end.i.i.i.if.end7.i.i.i_crit_edge, label %if.else.i.i.i

if.end.i.i.i.if.end7.i.i.i_crit_edge:             ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7.i.i.i

if.else.i.i.i:                                    ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call6.i.i.i = tail call i32 @from_kuid(ptr noundef %19, [1 x i32] %21) #13
  br label %if.end7.i.i.i

if.end7.i.i.i:                                    ; preds = %if.else.i.i.i, %if.end.i.i.i.if.end7.i.i.i_crit_edge
  %uid.0.i.i.i = phi i32 [ %call6.i.i.i, %if.else.i.i.i ], [ %.unpack.i.i, %if.end.i.i.i.if.end7.i.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %uid.0.i.i.i)
  %cmp.i.i.i = icmp eq i32 %uid.0.i.i.i, -1
  br i1 %cmp.i.i.i, label %if.end7.i.i.i.cleanup_crit_edge, label %if.end9.i.i.i

if.end7.i.i.i.cleanup_crit_edge:                  ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end9.i.i.i:                                    ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call10.i.i.i = tail call i32 @make_kuid(ptr noundef %mnt_userns, i32 noundef %uid.0.i.i.i) #13
  br label %i_uid_into_mnt.exit.i

i_uid_into_mnt.exit.i:                            ; preds = %if.end9.i.i.i, %if.end13.i_uid_into_mnt.exit.i_crit_edge
  %retval.sroa.0.0.i.i.i = phi i32 [ %call10.i.i.i, %if.end9.i.i.i ], [ %.unpack.i.i, %if.end13.i_uid_into_mnt.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.sroa.0.0.i.i.i)
  %cmp.i.not.i = icmp eq i32 %retval.sroa.0.0.i.i.i, -1
  br i1 %cmp.i.not.i, label %i_uid_into_mnt.exit.i.cleanup_crit_edge, label %lor.rhs.i

i_uid_into_mnt.exit.i.cleanup_crit_edge:          ; preds = %i_uid_into_mnt.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

lor.rhs.i:                                        ; preds = %i_uid_into_mnt.exit.i
  %22 = ptrtoint ptr %i_sb5 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %i_sb5, align 4
  %s_user_ns.i.i12.i = getelementptr inbounds %struct.super_block, ptr %23, i32 0, i32 53
  %24 = ptrtoint ptr %s_user_ns.i.i12.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %s_user_ns.i.i12.i, align 8
  %i_gid.i.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 3
  %26 = ptrtoint ptr %i_gid.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %.unpack.i13.i = load i32, ptr %i_gid.i.i, align 8
  %27 = insertvalue [1 x i32] undef, i32 %.unpack.i13.i, 0
  %cmp.i.i.i15.i = icmp eq ptr %25, %mnt_userns
  %spec.select.i.i.i16.i = or i1 %cmp.i.i.i.i.i, %cmp.i.i.i15.i
  br i1 %spec.select.i.i.i16.i, label %lor.rhs.i.HAS_UNMAPPED_ID.exit_crit_edge, label %if.end.i.i18.i

lor.rhs.i.HAS_UNMAPPED_ID.exit_crit_edge:         ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %HAS_UNMAPPED_ID.exit

if.end.i.i18.i:                                   ; preds = %lor.rhs.i
  %cmp.i21.i.i17.i = icmp eq ptr %25, @init_user_ns
  br i1 %cmp.i21.i.i17.i, label %if.end.i.i18.i.if.end7.i.i22.i_crit_edge, label %if.else.i.i20.i

if.end.i.i18.i.if.end7.i.i22.i_crit_edge:         ; preds = %if.end.i.i18.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7.i.i22.i

if.else.i.i20.i:                                  ; preds = %if.end.i.i18.i
  call void @__sanitizer_cov_trace_pc() #15
  %call6.i.i19.i = tail call i32 @from_kgid(ptr noundef %25, [1 x i32] %27) #13
  br label %if.end7.i.i22.i

if.end7.i.i22.i:                                  ; preds = %if.else.i.i20.i, %if.end.i.i18.i.if.end7.i.i22.i_crit_edge
  %gid.0.i.i.i = phi i32 [ %call6.i.i19.i, %if.else.i.i20.i ], [ %.unpack.i13.i, %if.end.i.i18.i.if.end7.i.i22.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %gid.0.i.i.i)
  %cmp.i.i21.i = icmp eq i32 %gid.0.i.i.i, -1
  br i1 %cmp.i.i21.i, label %if.end7.i.i22.i.cleanup_crit_edge, label %if.end9.i.i24.i

if.end7.i.i22.i.cleanup_crit_edge:                ; preds = %if.end7.i.i22.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end9.i.i24.i:                                  ; preds = %if.end7.i.i22.i
  call void @__sanitizer_cov_trace_pc() #15
  %call10.i.i23.i = tail call i32 @make_kgid(ptr noundef %mnt_userns, i32 noundef %gid.0.i.i.i) #13
  br label %HAS_UNMAPPED_ID.exit

HAS_UNMAPPED_ID.exit:                             ; preds = %if.end9.i.i24.i, %lor.rhs.i.HAS_UNMAPPED_ID.exit_crit_edge
  %retval.sroa.0.0.i.i25.i = phi i32 [ %call10.i.i23.i, %if.end9.i.i24.i ], [ %.unpack.i13.i, %lor.rhs.i.HAS_UNMAPPED_ID.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.sroa.0.0.i.i25.i)
  %cmp.i26.not.i = icmp eq i32 %retval.sroa.0.0.i.i25.i, -1
  br i1 %cmp.i26.not.i, label %HAS_UNMAPPED_ID.exit.cleanup_crit_edge, label %if.end16

HAS_UNMAPPED_ID.exit.cleanup_crit_edge:           ; preds = %HAS_UNMAPPED_ID.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end16:                                         ; preds = %HAS_UNMAPPED_ID.exit
  %i_op = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 7
  %28 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %i_op, align 8
  %link = getelementptr inbounds %struct.inode_operations, ptr %29, i32 0, i32 6
  %30 = ptrtoint ptr %link to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %link, align 8
  %tobool17.not = icmp eq ptr %31, null
  br i1 %tobool17.not, label %if.end16.cleanup_crit_edge, label %if.end19

if.end16.cleanup_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end19:                                         ; preds = %if.end16
  %32 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %1, align 8
  %34 = and i16 %33, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %34)
  %cmp21 = icmp eq i16 %34, 16384
  br i1 %cmp21, label %if.end19.cleanup_crit_edge, label %if.end24

if.end19.cleanup_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end24:                                         ; preds = %if.end19
  %call25 = tail call i32 @security_inode_link(ptr noundef %old_dentry, ptr noundef %dir, ptr noundef %new_dentry) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.end28, label %if.end24.cleanup_crit_edge

if.end24.cleanup_crit_edge:                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end28:                                         ; preds = %if.end24
  %i_rwsem.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 25
  tail call void @down_write(ptr noundef %i_rwsem.i) #13
  %35 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 12
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %35, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %cmp29 = icmp eq i32 %37, 0
  br i1 %cmp29, label %land.lhs.true, label %if.end28.if.else_crit_edge

if.end28.if.else_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else

land.lhs.true:                                    ; preds = %if.end28
  %i_state = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 24
  %38 = ptrtoint ptr %i_state to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %i_state, align 8
  %and31 = and i32 %39, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31)
  %tobool32.not = icmp eq i32 %and31, 0
  br i1 %tobool32.not, label %land.lhs.true.if.end61.critedge_crit_edge, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else

land.lhs.true.if.end61.critedge_crit_edge:        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end61.critedge

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %if.end28.if.else_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool34.not = icmp eq i32 %5, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %37, i32 %5)
  %cmp36.not = icmp ult i32 %37, %5
  %or.cond114 = select i1 %tobool34.not, i1 true, i1 %cmp36.not
  br i1 %or.cond114, label %if.else39, label %if.else.if.end61.critedge_crit_edge

if.else.if.end61.critedge_crit_edge:              ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end61.critedge

if.else39:                                        ; preds = %if.else
  %call40 = tail call fastcc i32 @try_break_deleg(ptr noundef nonnull %1, ptr noundef %delegated_inode)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40)
  %tobool41.not = icmp eq i32 %call40, 0
  br i1 %tobool41.not, label %if.end48, label %if.else39.if.end61.critedge_crit_edge

if.else39.if.end61.critedge_crit_edge:            ; preds = %if.else39
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end61.critedge

if.end48:                                         ; preds = %if.else39
  %40 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %i_op, align 8
  %link44 = getelementptr inbounds %struct.inode_operations, ptr %41, i32 0, i32 6
  %42 = ptrtoint ptr %link44 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %link44, align 8
  %call45 = tail call i32 %43(ptr noundef %old_dentry, ptr noundef %dir, ptr noundef %new_dentry) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45)
  %tobool49.not = icmp eq i32 %call45, 0
  br i1 %tobool49.not, label %land.lhs.true50, label %if.end48.if.end61.critedge_crit_edge

if.end48.if.end61.critedge_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end61.critedge

land.lhs.true50:                                  ; preds = %if.end48
  %i_state51 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 24
  %44 = ptrtoint ptr %i_state51 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %i_state51, align 8
  %and52 = and i32 %45, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and52)
  %tobool53.not = icmp eq i32 %and52, 0
  br i1 %tobool53.not, label %land.lhs.true50.if.then60_crit_edge, label %if.then54

land.lhs.true50.if.then60_crit_edge:              ; preds = %land.lhs.true50
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then60

if.then54:                                        ; preds = %land.lhs.true50
  call void @__sanitizer_cov_trace_pc() #15
  %i_lock = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #13
  %46 = ptrtoint ptr %i_state51 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %i_state51, align 8
  %and56 = and i32 %47, -1025
  store i32 %and56, ptr %i_state51, align 8
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #13
  br label %if.then60

if.then60:                                        ; preds = %if.then54, %land.lhs.true50.if.then60_crit_edge
  tail call void @up_write(ptr noundef %i_rwsem.i) #13
  tail call fastcc void @fsnotify_link(ptr noundef %dir, ptr noundef nonnull %1, ptr noundef %new_dentry)
  br label %cleanup

if.end61.critedge:                                ; preds = %if.end48.if.end61.critedge_crit_edge, %if.else39.if.end61.critedge_crit_edge, %if.else.if.end61.critedge_crit_edge, %land.lhs.true.if.end61.critedge_crit_edge
  %error.0113 = phi i32 [ %call45, %if.end48.if.end61.critedge_crit_edge ], [ -2, %land.lhs.true.if.end61.critedge_crit_edge ], [ %call40, %if.else39.if.end61.critedge_crit_edge ], [ -31, %if.else.if.end61.critedge_crit_edge ]
  tail call void @up_write(ptr noundef %i_rwsem.i) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end61.critedge, %if.then60, %if.end24.cleanup_crit_edge, %if.end19.cleanup_crit_edge, %if.end16.cleanup_crit_edge, %HAS_UNMAPPED_ID.exit.cleanup_crit_edge, %if.end7.i.i22.i.cleanup_crit_edge, %i_uid_into_mnt.exit.i.cleanup_crit_edge, %if.end7.i.i.i.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %may_create.exit.cleanup_crit_edge, %if.end3.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -2, %entry.cleanup_crit_edge ], [ %call6.i, %may_create.exit.cleanup_crit_edge ], [ -18, %if.end3.cleanup_crit_edge ], [ -1, %if.end7.cleanup_crit_edge ], [ -1, %HAS_UNMAPPED_ID.exit.cleanup_crit_edge ], [ -1, %if.end16.cleanup_crit_edge ], [ -1, %if.end19.cleanup_crit_edge ], [ %call25, %if.end24.cleanup_crit_edge ], [ %error.0113, %if.end61.critedge ], [ 0, %if.then60 ], [ -75, %if.end3.i.cleanup_crit_edge ], [ -2, %if.end.i.cleanup_crit_edge ], [ -17, %if.end.cleanup_crit_edge ], [ -1, %if.end7.i.i22.i.cleanup_crit_edge ], [ -1, %i_uid_into_mnt.exit.i.cleanup_crit_edge ], [ -1, %if.end7.i.i.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_inode_link(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @fsnotify_link(ptr noundef %dir, ptr noundef %inode, ptr noundef %new_dentry) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb.i.i, align 4
  %s_fsnotify_connectors.i.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 48
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i.i, i32 noundef 4) #13
  %2 = ptrtoint ptr %s_fsnotify_connectors.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %s_fsnotify_connectors.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.i.i = icmp eq i32 %3, 0
  br i1 %cmp.i.i, label %entry.fsnotify_link_count.exit_crit_edge, label %if.end.i.i

entry.fsnotify_link_count.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %fsnotify_link_count.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %4 = ptrtoint ptr %inode to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %inode, align 8
  %6 = and i16 %5, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %6)
  %cmp1.i.i = icmp eq i16 %6, 16384
  %spec.select.i.i = select i1 %cmp1.i.i, i32 1073741828, i32 4
  %call5.i.i = tail call i32 @fsnotify(i32 noundef %spec.select.i.i, ptr noundef %inode, i32 noundef 2, ptr noundef null, ptr noundef null, ptr noundef %inode, i32 noundef 0) #13
  br label %fsnotify_link_count.exit

fsnotify_link_count.exit:                         ; preds = %if.end.i.i, %entry.fsnotify_link_count.exit_crit_edge
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 8
  %7 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %i_sb.i, align 4
  %s_fsnotify_connectors.i = getelementptr inbounds %struct.super_block, ptr %8, i32 0, i32 48
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i, i32 noundef 4) #13
  %9 = ptrtoint ptr %s_fsnotify_connectors.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %s_fsnotify_connectors.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp.i = icmp eq i32 %10, 0
  br i1 %cmp.i, label %fsnotify_link_count.exit.fsnotify_name.exit_crit_edge, label %if.end.i

fsnotify_link_count.exit.fsnotify_name.exit_crit_edge: ; preds = %fsnotify_link_count.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %fsnotify_name.exit

if.end.i:                                         ; preds = %fsnotify_link_count.exit
  call void @__sanitizer_cov_trace_pc() #15
  %d_name = getelementptr inbounds %struct.dentry, ptr %new_dentry, i32 0, i32 4
  %call1.i = tail call i32 @fsnotify(i32 noundef 256, ptr noundef %inode, i32 noundef 2, ptr noundef %dir, ptr noundef %d_name, ptr noundef null, i32 noundef 0) #13
  br label %fsnotify_name.exit

fsnotify_name.exit:                               ; preds = %if.end.i, %fsnotify_link_count.exit.fsnotify_name.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @do_linkat(i32 noundef %olddfd, ptr noundef %old, i32 noundef %newdfd, ptr noundef %new, i32 noundef %flags) local_unnamed_addr #0 align 64 {
entry:
  %old_path = alloca %struct.path, align 4
  %new_path = alloca %struct.path, align 4
  %delegated_inode = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %old_path) #13
  %0 = ptrtoint ptr %old_path to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %old_path, align 4, !annotation !367
  %1 = getelementptr inbounds %struct.path, ptr %old_path, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !367
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %new_path) #13
  %3 = ptrtoint ptr %new_path to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr inttoptr (i32 -1 to ptr), ptr %new_path, align 4, !annotation !367
  %4 = getelementptr inbounds %struct.path, ptr %new_path, i32 0, i32 1
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr inttoptr (i32 -1 to ptr), ptr %4, align 4, !annotation !367
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %delegated_inode) #13
  %6 = ptrtoint ptr %delegated_inode to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %delegated_inode, align 4
  %and = and i32 %flags, -5121
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp.not = icmp eq i32 %and, 0
  br i1 %cmp.not, label %if.end, label %entry.out_putnames_crit_edge

entry.out_putnames_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_putnames

if.end:                                           ; preds = %entry
  %and1 = and i32 %flags, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool.not = icmp eq i32 %and1, 0
  br i1 %tobool.not, label %if.end.if.end3_crit_edge, label %land.lhs.true

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3

land.lhs.true:                                    ; preds = %if.end
  %call = tail call zeroext i1 @capable(i32 noundef 2) #13
  br i1 %call, label %land.lhs.true.if.end3_crit_edge, label %land.lhs.true.out_putnames_crit_edge

land.lhs.true.out_putnames_crit_edge:             ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_putnames

land.lhs.true.if.end3_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3

if.end3:                                          ; preds = %land.lhs.true.if.end3_crit_edge, %if.end.if.end3_crit_edge
  %and4 = lshr i32 %flags, 10
  %and4.lobit = and i32 %and4, 1
  %call89093 = call i32 @filename_lookup(i32 noundef %olddfd, ptr noundef %old, i32 noundef %and4.lobit, ptr noundef nonnull %old_path, ptr noundef null)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call89093)
  %tobool9.not9194 = icmp eq i32 %call89093, 0
  br i1 %tobool9.not9194, label %if.end11.lr.ph.preheader, label %if.end3.out_putnames_crit_edge

if.end3.out_putnames_crit_edge:                   ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_putnames

if.end11.lr.ph.preheader:                         ; preds = %if.end3
  %7 = or i32 %and4.lobit, 32
  br label %if.end11.lr.ph

if.end11.lr.ph:                                   ; preds = %if.then45.if.end11.lr.ph_crit_edge, %if.end11.lr.ph.preheader
  %how.1.ph95 = phi i32 [ %7, %if.then45.if.end11.lr.ph_crit_edge ], [ %and4.lobit, %if.end11.lr.ph.preheader ]
  %and12 = and i32 %how.1.ph95, 32
  br label %if.end11

if.end11:                                         ; preds = %if.then41.if.end11_crit_edge, %if.end11.lr.ph
  %call13 = call fastcc ptr @filename_create(i32 noundef %newdfd, ptr noundef %new, ptr noundef nonnull %new_path, i32 noundef %and12)
  %cmp.i = icmp ugt ptr %call13, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %out_putpath.loopexit, label %if.end17

if.end17:                                         ; preds = %if.end11
  %8 = ptrtoint ptr %old_path to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %old_path, align 4
  %10 = ptrtoint ptr %new_path to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %new_path, align 4
  %cmp19.not = icmp eq ptr %9, %11
  br i1 %cmp19.not, label %if.end21, label %if.end17.out_dput_crit_edge

if.end17.out_dput_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_dput

if.end21:                                         ; preds = %if.end17
  %mnt_userns.i = getelementptr inbounds %struct.vfsmount, ptr %9, i32 0, i32 3
  %12 = ptrtoint ptr %mnt_userns.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %mnt_userns.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !371
  %call24 = call i32 @may_linkat(ptr noundef %13, ptr noundef nonnull %old_path)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.end29, label %if.end21.out_dput_crit_edge, !prof !362

if.end21.out_dput_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_dput

if.end29:                                         ; preds = %if.end21
  %14 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %1, align 4
  %call30 = call i32 @security_path_link(ptr noundef %15, ptr noundef nonnull %new_path, ptr noundef %call13) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30)
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %if.end33, label %if.end29.out_dput_crit_edge

if.end29.out_dput_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_dput

if.end33:                                         ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  %16 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %4, align 4
  %d_inode = getelementptr inbounds %struct.dentry, ptr %17, i32 0, i32 5
  %18 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %d_inode, align 8
  %call36 = call i32 @vfs_link(ptr noundef %15, ptr noundef %13, ptr noundef %19, ptr noundef %call13, ptr noundef nonnull %delegated_inode)
  br label %out_dput

out_dput:                                         ; preds = %if.end33, %if.end29.out_dput_crit_edge, %if.end21.out_dput_crit_edge, %if.end17.out_dput_crit_edge
  %error.0 = phi i32 [ -18, %if.end17.out_dput_crit_edge ], [ %call24, %if.end21.out_dput_crit_edge ], [ %call30, %if.end29.out_dput_crit_edge ], [ %call36, %if.end33 ]
  call void @dput(ptr noundef %call13) #13
  %20 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %4, align 4
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %21, i32 0, i32 5
  %22 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %d_inode.i, align 8
  %i_rwsem.i.i = getelementptr inbounds %struct.inode, ptr %23, i32 0, i32 25
  call void @up_write(ptr noundef %i_rwsem.i.i) #13
  %24 = ptrtoint ptr %new_path to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %new_path, align 4
  call void @mnt_drop_write(ptr noundef %25) #13
  %26 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %4, align 4
  call void @dput(ptr noundef %27) #13
  %28 = ptrtoint ptr %new_path to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %new_path, align 4
  call void @mntput(ptr noundef %29) #13
  %30 = ptrtoint ptr %delegated_inode to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %delegated_inode, align 4
  %tobool37.not = icmp eq ptr %31, null
  br i1 %tobool37.not, label %out_dput.if.end43_crit_edge, label %if.then38

out_dput.if.end43_crit_edge:                      ; preds = %out_dput
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end43

if.then38:                                        ; preds = %out_dput
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !379
  %i_flctx.i.i = getelementptr inbounds %struct.inode, ptr %31, i32 0, i32 45
  %32 = ptrtoint ptr %i_flctx.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %i_flctx.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %33, null
  br i1 %tobool.not.i.i, label %if.then38.break_deleg_wait.exit_crit_edge, label %land.lhs.true.i.i

if.then38.break_deleg_wait.exit_crit_edge:        ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #15
  br label %break_deleg_wait.exit

land.lhs.true.i.i:                                ; preds = %if.then38
  %flc_lease.i.i = getelementptr inbounds %struct.file_lock_context, ptr %33, i32 0, i32 3
  %34 = ptrtoint ptr %flc_lease.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile ptr, ptr %flc_lease.i.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !380
  %cmp.i.not.i.i.i = icmp eq ptr %35, %flc_lease.i.i
  br i1 %cmp.i.not.i.i.i, label %list_empty_careful.exit.i.i, label %land.lhs.true.i.i.if.then.i.i_crit_edge

land.lhs.true.i.i.if.then.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i.i

list_empty_careful.exit.i.i:                      ; preds = %land.lhs.true.i.i
  %prev.i.i.i = getelementptr inbounds %struct.file_lock_context, ptr %33, i32 0, i32 3, i32 1
  %36 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %prev.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %37, %flc_lease.i.i
  br i1 %cmp.i.not.i.i, label %list_empty_careful.exit.i.i.break_deleg_wait.exit_crit_edge, label %list_empty_careful.exit.i.i.if.then.i.i_crit_edge

list_empty_careful.exit.i.i.if.then.i.i_crit_edge: ; preds = %list_empty_careful.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i.i

list_empty_careful.exit.i.i.break_deleg_wait.exit_crit_edge: ; preds = %list_empty_careful.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %break_deleg_wait.exit

if.then.i.i:                                      ; preds = %list_empty_careful.exit.i.i.if.then.i.i_crit_edge, %land.lhs.true.i.i.if.then.i.i_crit_edge
  %call5.i.i = call i32 @__break_lease(ptr noundef nonnull %31, i32 noundef 1, i32 noundef 4) #13
  br label %break_deleg_wait.exit

break_deleg_wait.exit:                            ; preds = %if.then.i.i, %list_empty_careful.exit.i.i.break_deleg_wait.exit_crit_edge, %if.then38.break_deleg_wait.exit_crit_edge
  %retval.0.i.i = phi i32 [ %call5.i.i, %if.then.i.i ], [ 0, %list_empty_careful.exit.i.i.break_deleg_wait.exit_crit_edge ], [ 0, %if.then38.break_deleg_wait.exit_crit_edge ]
  %38 = ptrtoint ptr %delegated_inode to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %delegated_inode, align 4
  call void @iput(ptr noundef %39) #13
  %40 = ptrtoint ptr %delegated_inode to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr null, ptr %delegated_inode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i.i)
  %tobool40.not = icmp eq i32 %retval.0.i.i, 0
  br i1 %tobool40.not, label %if.then41, label %break_deleg_wait.exit.if.end43_crit_edge

break_deleg_wait.exit.if.end43_crit_edge:         ; preds = %break_deleg_wait.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end43

if.then41:                                        ; preds = %break_deleg_wait.exit
  %41 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %1, align 4
  call void @dput(ptr noundef %42) #13
  call void @mntput(ptr noundef %9) #13
  %call8 = call i32 @filename_lookup(i32 noundef %olddfd, ptr noundef %old, i32 noundef %how.1.ph95, ptr noundef nonnull %old_path, ptr noundef null)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.then41.if.end11_crit_edge, label %if.then41.out_putnames_crit_edge

if.then41.out_putnames_crit_edge:                 ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_putnames

if.then41.if.end11_crit_edge:                     ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end11

if.end43:                                         ; preds = %break_deleg_wait.exit.if.end43_crit_edge, %out_dput.if.end43_crit_edge
  %error.1 = phi i32 [ %retval.0.i.i, %break_deleg_wait.exit.if.end43_crit_edge ], [ %error.0, %out_dput.if.end43_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -116, i32 %error.1)
  %cmp.i66 = icmp eq i32 %error.1, -116
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12)
  %tobool.not.i = icmp eq i32 %and12, 0
  %43 = and i1 %tobool.not.i, %cmp.i66
  br i1 %43, label %if.then45, label %if.end43.out_putpath_crit_edge

if.end43.out_putpath_crit_edge:                   ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_putpath

if.then45:                                        ; preds = %if.end43
  %44 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %1, align 4
  call void @dput(ptr noundef %45) #13
  call void @mntput(ptr noundef %9) #13
  %call890 = call i32 @filename_lookup(i32 noundef %olddfd, ptr noundef %old, i32 noundef %7, ptr noundef nonnull %old_path, ptr noundef null)
  %tobool9.not91 = icmp eq i32 %call890, 0
  br i1 %tobool9.not91, label %if.then45.if.end11.lr.ph_crit_edge, label %if.then45.out_putnames_crit_edge

if.then45.out_putnames_crit_edge:                 ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_putnames

if.then45.if.end11.lr.ph_crit_edge:               ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end11.lr.ph

out_putpath.loopexit:                             ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #15
  %46 = ptrtoint ptr %call13 to i32
  br label %out_putpath

out_putpath:                                      ; preds = %out_putpath.loopexit, %if.end43.out_putpath_crit_edge
  %error.2 = phi i32 [ %46, %out_putpath.loopexit ], [ %error.1, %if.end43.out_putpath_crit_edge ]
  %47 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %1, align 4
  call void @dput(ptr noundef %48) #13
  %49 = ptrtoint ptr %old_path to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %old_path, align 4
  call void @mntput(ptr noundef %50) #13
  br label %out_putnames

out_putnames:                                     ; preds = %out_putpath, %if.then45.out_putnames_crit_edge, %if.then41.out_putnames_crit_edge, %if.end3.out_putnames_crit_edge, %land.lhs.true.out_putnames_crit_edge, %entry.out_putnames_crit_edge
  %error.3 = phi i32 [ %error.2, %out_putpath ], [ -22, %entry.out_putnames_crit_edge ], [ -2, %land.lhs.true.out_putnames_crit_edge ], [ %call89093, %if.end3.out_putnames_crit_edge ], [ %call8, %if.then41.out_putnames_crit_edge ], [ %call890, %if.then45.out_putnames_crit_edge ]
  %cmp.i.i = icmp ugt ptr %old, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %out_putnames.putname.exit_crit_edge, label %do.body.i

out_putnames.putname.exit_crit_edge:              ; preds = %out_putnames
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

do.body.i:                                        ; preds = %out_putnames
  %refcnt.i = getelementptr inbounds %struct.filename, ptr %old, i32 0, i32 2
  %51 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %52)
  %cmp.i69 = icmp slt i32 %52, 1
  br i1 %cmp.i69, label %do.body3.i, label %do.end7.i, !prof !360

do.body3.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 261, 0\0A.popsection", ""() #13, !srcloc !361
  unreachable

do.end7.i:                                        ; preds = %do.body.i
  %dec.i = add nsw i32 %52, -1
  %53 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %dec.i, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp9.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp9.not.i, label %if.end11.i, label %do.end7.i.putname.exit_crit_edge

do.end7.i.putname.exit_crit_edge:                 ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

if.end11.i:                                       ; preds = %do.end7.i
  %54 = ptrtoint ptr %old to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %old, align 4
  %iname.i = getelementptr inbounds %struct.filename, ptr %old, i32 0, i32 4
  %cmp13.not.i = icmp eq ptr %55, %iname.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %56 = load ptr, ptr @names_cachep, align 4
  br i1 %cmp13.not.i, label %if.else.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %56, ptr noundef %55) #13
  call void @kfree(ptr noundef %old) #13
  br label %putname.exit

if.else.i:                                        ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %56, ptr noundef %old) #13
  br label %putname.exit

putname.exit:                                     ; preds = %if.else.i, %if.then14.i, %do.end7.i.putname.exit_crit_edge, %out_putnames.putname.exit_crit_edge
  %cmp.i.i70 = icmp ugt ptr %new, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i70, label %putname.exit.putname.exit83_crit_edge, label %do.body.i73

putname.exit.putname.exit83_crit_edge:            ; preds = %putname.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit83

do.body.i73:                                      ; preds = %putname.exit
  %refcnt.i71 = getelementptr inbounds %struct.filename, ptr %new, i32 0, i32 2
  %57 = ptrtoint ptr %refcnt.i71 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %refcnt.i71, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %58)
  %cmp.i72 = icmp slt i32 %58, 1
  br i1 %cmp.i72, label %do.body3.i74, label %do.end7.i77, !prof !360

do.body3.i74:                                     ; preds = %do.body.i73
  call void @__sanitizer_cov_trace_pc() #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 261, 0\0A.popsection", ""() #13, !srcloc !361
  unreachable

do.end7.i77:                                      ; preds = %do.body.i73
  %dec.i75 = add nsw i32 %58, -1
  %59 = ptrtoint ptr %refcnt.i71 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %dec.i75, ptr %refcnt.i71, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i75)
  %cmp9.not.i76 = icmp eq i32 %dec.i75, 0
  br i1 %cmp9.not.i76, label %if.end11.i80, label %do.end7.i77.putname.exit83_crit_edge

do.end7.i77.putname.exit83_crit_edge:             ; preds = %do.end7.i77
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit83

if.end11.i80:                                     ; preds = %do.end7.i77
  %60 = ptrtoint ptr %new to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %new, align 4
  %iname.i78 = getelementptr inbounds %struct.filename, ptr %new, i32 0, i32 4
  %cmp13.not.i79 = icmp eq ptr %61, %iname.i78
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %62 = load ptr, ptr @names_cachep, align 4
  br i1 %cmp13.not.i79, label %if.else.i82, label %if.then14.i81

if.then14.i81:                                    ; preds = %if.end11.i80
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %62, ptr noundef %61) #13
  call void @kfree(ptr noundef %new) #13
  br label %putname.exit83

if.else.i82:                                      ; preds = %if.end11.i80
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %62, ptr noundef %new) #13
  br label %putname.exit83

putname.exit83:                                   ; preds = %if.else.i82, %if.then14.i81, %do.end7.i77.putname.exit83_crit_edge, %putname.exit.putname.exit83_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %delegated_inode) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %new_path) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %old_path) #13
  ret i32 %error.3
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_path_link(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_linkat(i32 noundef %olddfd, i32 noundef %oldname, i32 noundef %newdfd, i32 noundef %newname, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %oldname to ptr
  %1 = inttoptr i32 %newname to ptr
  %and.i.i = shl i32 %flags, 2
  %2 = and i32 %and.i.i, 16384
  %call.i.i = tail call ptr @getname_flags(ptr noundef %0, i32 noundef %2, ptr noundef null) #13
  %call.i4.i = tail call ptr @getname_flags(ptr noundef %1, i32 noundef 0, ptr noundef null) #13
  %call2.i = tail call i32 @do_linkat(i32 noundef %olddfd, ptr noundef %call.i.i, i32 noundef %newdfd, ptr noundef %call.i4.i, i32 noundef %flags) #13
  ret i32 %call2.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_link(i32 noundef %oldname, i32 noundef %newname) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %oldname to ptr
  %1 = inttoptr i32 %newname to ptr
  %call.i.i = tail call ptr @getname_flags(ptr noundef %0, i32 noundef 0, ptr noundef null) #13
  %call.i3.i = tail call ptr @getname_flags(ptr noundef %1, i32 noundef 0, ptr noundef null) #13
  %call2.i = tail call i32 @do_linkat(i32 noundef -100, ptr noundef %call.i.i, i32 noundef -100, ptr noundef %call.i3.i, i32 noundef 0) #13
  ret i32 %call2.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vfs_rename(ptr nocapture noundef readonly %rd) #0 align 64 {
entry:
  %old_name = alloca %struct.name_snapshot, align 8
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %old_dir1 = getelementptr inbounds %struct.renamedata, ptr %rd, i32 0, i32 1
  %0 = ptrtoint ptr %old_dir1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %old_dir1, align 4
  %new_dir2 = getelementptr inbounds %struct.renamedata, ptr %rd, i32 0, i32 4
  %2 = ptrtoint ptr %new_dir2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %new_dir2, align 4
  %old_dentry3 = getelementptr inbounds %struct.renamedata, ptr %rd, i32 0, i32 2
  %4 = ptrtoint ptr %old_dentry3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %old_dentry3, align 4
  %new_dentry4 = getelementptr inbounds %struct.renamedata, ptr %rd, i32 0, i32 5
  %6 = ptrtoint ptr %new_dentry4 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %new_dentry4, align 4
  %delegated_inode5 = getelementptr inbounds %struct.renamedata, ptr %rd, i32 0, i32 6
  %8 = ptrtoint ptr %delegated_inode5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %delegated_inode5, align 4
  %flags6 = getelementptr inbounds %struct.renamedata, ptr %rd, i32 0, i32 7
  %10 = ptrtoint ptr %flags6 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags6, align 4
  %12 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %5, align 8
  %14 = and i32 %13, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %14)
  %15 = icmp eq i32 %14, 2097152
  %d_inode = getelementptr inbounds %struct.dentry, ptr %5, i32 0, i32 5
  %16 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %d_inode, align 8
  %d_inode7 = getelementptr inbounds %struct.dentry, ptr %7, i32 0, i32 5
  %18 = ptrtoint ptr %d_inode7 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %d_inode7, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 8
  %20 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %i_sb, align 4
  %s_max_links = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 41
  %22 = ptrtoint ptr %s_max_links to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %s_max_links, align 128
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %old_name) #13
  %24 = call ptr @memset(ptr %old_name, i32 255, i32 56)
  %cmp = icmp eq ptr %17, %19
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %25 = ptrtoint ptr %rd to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %rd, align 4
  %call8 = tail call fastcc i32 @may_delete(ptr noundef %26, ptr noundef %1, ptr noundef %5, i1 noundef zeroext %15)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.end11, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end11:                                         ; preds = %if.end
  %tobool12.not = icmp eq ptr %19, null
  br i1 %tobool12.not, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.end11
  %new_mnt_userns = getelementptr inbounds %struct.renamedata, ptr %rd, i32 0, i32 3
  %27 = ptrtoint ptr %new_mnt_userns to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %new_mnt_userns, align 4
  %29 = ptrtoint ptr %d_inode7 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %d_inode7, align 8
  %tobool.not.i = icmp eq ptr %30, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then13.cleanup_crit_edge

if.then13.cleanup_crit_edge:                      ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i:                                         ; preds = %if.then13
  %i_flags.i = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 4
  %31 = ptrtoint ptr %i_flags.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %i_flags.i, align 4
  %and.i = and i32 %32, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %if.end3.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end3.i:                                        ; preds = %if.end.i
  %33 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %i_sb, align 4
  %call.i = tail call fastcc zeroext i1 @fsuidgid_has_mapping(ptr noundef %34, ptr noundef %28) #13
  br i1 %call.i, label %if.end5.i, label %if.end3.i.cleanup_crit_edge

if.end3.i.cleanup_crit_edge:                      ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5.i:                                        ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #15
  %call6.i = tail call i32 @inode_permission(ptr noundef %28, ptr noundef %3, i32 noundef 3) #13
  br label %if.end27

if.else:                                          ; preds = %if.end11
  %35 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %7, align 8
  %37 = and i32 %36, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %37)
  %38 = icmp eq i32 %37, 2097152
  %and = and i32 %11, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool17.not = icmp eq i32 %and, 0
  %new_mnt_userns19 = getelementptr inbounds %struct.renamedata, ptr %rd, i32 0, i32 3
  %39 = ptrtoint ptr %new_mnt_userns19 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %new_mnt_userns19, align 4
  br i1 %tobool17.not, label %if.then18, label %if.else22

if.then18:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  %call21 = tail call fastcc i32 @may_delete(ptr noundef %40, ptr noundef %3, ptr noundef %7, i1 noundef zeroext %15)
  br label %if.end27

if.else22:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  %call25 = tail call fastcc i32 @may_delete(ptr noundef %40, ptr noundef %3, ptr noundef %7, i1 noundef zeroext %38)
  br label %if.end27

if.end27:                                         ; preds = %if.else22, %if.then18, %if.end5.i
  %brmerge310 = phi i1 [ true, %if.end5.i ], [ %38, %if.then18 ], [ %38, %if.else22 ]
  %error.0 = phi i32 [ %call6.i, %if.end5.i ], [ %call21, %if.then18 ], [ %call25, %if.else22 ]
  %new_is_dir.0.shrunk = phi i1 [ false, %if.end5.i ], [ %38, %if.then18 ], [ %38, %if.else22 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %error.0)
  %tobool28.not = icmp eq i32 %error.0, 0
  br i1 %tobool28.not, label %if.end30, label %if.end27.cleanup_crit_edge

if.end27.cleanup_crit_edge:                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end30:                                         ; preds = %if.end27
  %i_op = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 7
  %41 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %i_op, align 8
  %rename = getelementptr inbounds %struct.inode_operations, ptr %42, i32 0, i32 12
  %43 = ptrtoint ptr %rename to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %rename, align 16
  %tobool31.not = icmp eq ptr %44, null
  br i1 %tobool31.not, label %if.end30.cleanup_crit_edge, label %if.end33

if.end30.cleanup_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end33:                                         ; preds = %if.end30
  %cmp34.not = icmp eq ptr %3, %1
  br i1 %cmp34.not, label %if.end33.if.end54_crit_edge, label %if.then35

if.end33.if.end54_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end54

if.then35:                                        ; preds = %if.end33
  br i1 %15, label %if.then37, label %if.then35.if.end43_crit_edge

if.then35.if.end43_crit_edge:                     ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end43

if.then37:                                        ; preds = %if.then35
  %45 = ptrtoint ptr %rd to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %rd, align 4
  %call39 = tail call i32 @inode_permission(ptr noundef %46, ptr noundef %17, i32 noundef 2)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call39)
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %if.then37.if.end43_crit_edge, label %if.then37.cleanup_crit_edge

if.then37.cleanup_crit_edge:                      ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then37.if.end43_crit_edge:                     ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end43

if.end43:                                         ; preds = %if.then37.if.end43_crit_edge, %if.then35.if.end43_crit_edge
  %and44 = and i32 %11, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and44)
  %tobool45.not = icmp eq i32 %and44, 0
  %new_is_dir.0.shrunk.not = xor i1 %new_is_dir.0.shrunk, true
  %brmerge = select i1 %tobool45.not, i1 true, i1 %new_is_dir.0.shrunk.not
  br i1 %brmerge, label %if.end43.if.end54_crit_edge, label %if.then47

if.end43.if.end54_crit_edge:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end54

if.then47:                                        ; preds = %if.end43
  %new_mnt_userns48 = getelementptr inbounds %struct.renamedata, ptr %rd, i32 0, i32 3
  %47 = ptrtoint ptr %new_mnt_userns48 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %new_mnt_userns48, align 4
  %call49 = tail call i32 @inode_permission(ptr noundef %48, ptr noundef %19, i32 noundef 2)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call49)
  %tobool50.not = icmp eq i32 %call49, 0
  br i1 %tobool50.not, label %if.then47.if.end54_crit_edge, label %if.then47.cleanup_crit_edge

if.then47.cleanup_crit_edge:                      ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then47.if.end54_crit_edge:                     ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end54

if.end54:                                         ; preds = %if.then47.if.end54_crit_edge, %if.end43.if.end54_crit_edge, %if.end33.if.end54_crit_edge
  %call55 = tail call i32 @security_inode_rename(ptr noundef %1, ptr noundef %5, ptr noundef %3, ptr noundef %7, i32 noundef %11) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call55)
  %tobool56.not = icmp eq i32 %call55, 0
  br i1 %tobool56.not, label %if.end58, label %if.end54.cleanup_crit_edge

if.end54.cleanup_crit_edge:                       ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end58:                                         ; preds = %if.end54
  call void @take_dentry_name_snapshot(ptr noundef nonnull %old_name, ptr noundef %5) #13
  %tobool.not.i313 = icmp eq ptr %7, null
  br i1 %tobool.not.i313, label %if.end58.dget.exit_crit_edge, label %if.then.i

if.end58.dget.exit_crit_edge:                     ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #15
  br label %dget.exit

if.then.i:                                        ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #15
  %d_lockref.i = getelementptr inbounds %struct.dentry, ptr %7, i32 0, i32 7
  call void @lockref_get(ptr noundef %d_lockref.i) #13
  br label %dget.exit

dget.exit:                                        ; preds = %if.then.i, %if.end58.dget.exit_crit_edge
  %and61 = and i32 %11, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and61)
  %tobool62.not = icmp eq i32 %and61, 0
  %or.cond = select i1 %15, i1 %tobool62.not, i1 false
  br i1 %or.cond, label %if.else64, label %if.end68

if.else64:                                        ; preds = %dget.exit
  br i1 %tobool12.not, label %if.end68.thread333, label %if.end68.thread

if.end68:                                         ; preds = %dget.exit
  call void @lock_two_nondirectories(ptr noundef %17, ptr noundef %19) #13
  %i_flags = getelementptr inbounds %struct.inode, ptr %17, i32 0, i32 4
  %49 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %i_flags, align 4
  %and69 = and i32 %50, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69)
  %tobool70.not = icmp eq i32 %and69, 0
  br i1 %tobool70.not, label %lor.lhs.false71, label %if.end68.if.then153_crit_edge

if.end68.if.then153_crit_edge:                    ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then153

if.end68.thread333:                               ; preds = %if.else64
  %i_flags334 = getelementptr inbounds %struct.inode, ptr %17, i32 0, i32 4
  %51 = ptrtoint ptr %i_flags334 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %i_flags334, align 4
  %and69335 = and i32 %52, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69335)
  %tobool70.not336 = icmp eq i32 %and69335, 0
  br i1 %tobool70.not336, label %if.end68.thread333.if.end78_crit_edge, label %if.end158.thread

if.end68.thread333.if.end78_crit_edge:            ; preds = %if.end68.thread333
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end78

if.end158.thread:                                 ; preds = %if.end68.thread333
  call void @__sanitizer_cov_trace_pc() #15
  call void @dput(ptr noundef %7) #13
  br label %if.end170

if.end68.thread:                                  ; preds = %if.else64
  %i_rwsem.i = getelementptr inbounds %struct.inode, ptr %19, i32 0, i32 25
  call void @down_write(ptr noundef %i_rwsem.i) #13
  %i_flags330 = getelementptr inbounds %struct.inode, ptr %17, i32 0, i32 4
  %53 = ptrtoint ptr %i_flags330 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %i_flags330, align 4
  %and69331 = and i32 %54, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69331)
  %tobool70.not332 = icmp eq i32 %and69331, 0
  br i1 %tobool70.not332, label %land.lhs.true73, label %if.end68.thread.if.then156_crit_edge

if.end68.thread.if.then156_crit_edge:             ; preds = %if.end68.thread
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then156

lor.lhs.false71:                                  ; preds = %if.end68
  br i1 %tobool12.not, label %lor.lhs.false71.if.end78_crit_edge, label %land.lhs.true73.thread

lor.lhs.false71.if.end78_crit_edge:               ; preds = %lor.lhs.false71
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end78

land.lhs.true73:                                  ; preds = %if.end68.thread
  %i_flags74 = getelementptr inbounds %struct.inode, ptr %19, i32 0, i32 4
  %55 = ptrtoint ptr %i_flags74 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %i_flags74, align 4
  %and75 = and i32 %56, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and75)
  %tobool76.not = icmp eq i32 %and75, 0
  br i1 %tobool76.not, label %land.lhs.true73.if.end78_crit_edge, label %land.lhs.true73.if.then156_crit_edge

land.lhs.true73.if.then156_crit_edge:             ; preds = %land.lhs.true73
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then156

land.lhs.true73.if.end78_crit_edge:               ; preds = %land.lhs.true73
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end78

land.lhs.true73.thread:                           ; preds = %lor.lhs.false71
  %i_flags74357 = getelementptr inbounds %struct.inode, ptr %19, i32 0, i32 4
  %57 = ptrtoint ptr %i_flags74357 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %i_flags74357, align 4
  %and75358 = and i32 %58, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and75358)
  %tobool76.not359 = icmp eq i32 %and75358, 0
  br i1 %tobool76.not359, label %land.lhs.true73.thread.if.end78_crit_edge, label %land.lhs.true73.thread.if.then153_crit_edge

land.lhs.true73.thread.if.then153_crit_edge:      ; preds = %land.lhs.true73.thread
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then153

land.lhs.true73.thread.if.end78_crit_edge:        ; preds = %land.lhs.true73.thread
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end78

if.end78:                                         ; preds = %land.lhs.true73.thread.if.end78_crit_edge, %land.lhs.true73.if.end78_crit_edge, %lor.lhs.false71.if.end78_crit_edge, %if.end68.thread333.if.end78_crit_edge
  %59 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %5, align 8
  %and.i.i = and i32 %60, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.end78.lor.lhs.false80_crit_edge, label %is_local_mountpoint.exit

if.end78.lor.lhs.false80_crit_edge:               ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false80

is_local_mountpoint.exit:                         ; preds = %if.end78
  %call1.i = call zeroext i1 @__is_local_mountpoint(ptr noundef %5) #13
  br i1 %call1.i, label %is_local_mountpoint.exit.out_crit_edge, label %is_local_mountpoint.exit.lor.lhs.false80_crit_edge

is_local_mountpoint.exit.lor.lhs.false80_crit_edge: ; preds = %is_local_mountpoint.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false80

is_local_mountpoint.exit.out_crit_edge:           ; preds = %is_local_mountpoint.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

lor.lhs.false80:                                  ; preds = %is_local_mountpoint.exit.lor.lhs.false80_crit_edge, %if.end78.lor.lhs.false80_crit_edge
  %61 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %7, align 8
  %and.i.i317 = and i32 %62, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i317)
  %tobool.i.not.i318 = icmp eq i32 %and.i.i317, 0
  br i1 %tobool.i.not.i318, label %lor.lhs.false80.if.end83_crit_edge, label %is_local_mountpoint.exit322

lor.lhs.false80.if.end83_crit_edge:               ; preds = %lor.lhs.false80
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end83

is_local_mountpoint.exit322:                      ; preds = %lor.lhs.false80
  %call1.i319 = call zeroext i1 @__is_local_mountpoint(ptr noundef %7) #13
  br i1 %call1.i319, label %is_local_mountpoint.exit322.out_crit_edge, label %is_local_mountpoint.exit322.if.end83_crit_edge

is_local_mountpoint.exit322.if.end83_crit_edge:   ; preds = %is_local_mountpoint.exit322
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end83

is_local_mountpoint.exit322.out_crit_edge:        ; preds = %is_local_mountpoint.exit322
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end83:                                         ; preds = %is_local_mountpoint.exit322.if.end83_crit_edge, %lor.lhs.false80.if.end83_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool84.not = icmp eq i32 %23, 0
  %brmerge305 = select i1 %tobool84.not, i1 true, i1 %cmp34.not
  br i1 %brmerge305, label %if.end83.if.end105_crit_edge, label %if.then87

if.end83.if.end105_crit_edge:                     ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end105

if.then87:                                        ; preds = %if.end83
  %call.not = xor i1 %15, true
  %brmerge306 = select i1 %call.not, i1 true, i1 %new_is_dir.0.shrunk
  br i1 %brmerge306, label %if.then87.if.end94_crit_edge, label %land.lhs.true91

if.then87.if.end94_crit_edge:                     ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end94

land.lhs.true91:                                  ; preds = %if.then87
  %63 = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 12
  %64 = ptrtoint ptr %63 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %63, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %65, i32 %23)
  %cmp92.not = icmp ult i32 %65, %23
  br i1 %cmp92.not, label %land.lhs.true91.if.end94_crit_edge, label %land.lhs.true91.out_crit_edge

land.lhs.true91.out_crit_edge:                    ; preds = %land.lhs.true91
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

land.lhs.true91.if.end94_crit_edge:               ; preds = %land.lhs.true91
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end94

if.end94:                                         ; preds = %land.lhs.true91.if.end94_crit_edge, %if.then87.if.end94_crit_edge
  %brmerge307 = select i1 %tobool62.not, i1 true, i1 %15
  %new_is_dir.0.shrunk.not308 = xor i1 %new_is_dir.0.shrunk, true
  %brmerge309 = select i1 %brmerge307, i1 true, i1 %new_is_dir.0.shrunk.not308
  br i1 %brmerge309, label %if.end94.if.end105_crit_edge, label %land.lhs.true101

if.end94.if.end105_crit_edge:                     ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end105

land.lhs.true101:                                 ; preds = %if.end94
  %66 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 12
  %67 = ptrtoint ptr %66 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %66, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %68, i32 %23)
  %cmp102.not = icmp ult i32 %68, %23
  br i1 %cmp102.not, label %land.lhs.true101.if.end105_crit_edge, label %land.lhs.true101.out_crit_edge

land.lhs.true101.out_crit_edge:                   ; preds = %land.lhs.true101
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

land.lhs.true101.if.end105_crit_edge:             ; preds = %land.lhs.true101
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end105

if.end105:                                        ; preds = %land.lhs.true101.if.end105_crit_edge, %if.end94.if.end105_crit_edge, %if.end83.if.end105_crit_edge
  br i1 %15, label %if.end105.if.end112_crit_edge, label %if.then107

if.end105.if.end112_crit_edge:                    ; preds = %if.end105
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end112

if.then107:                                       ; preds = %if.end105
  %call108 = call fastcc i32 @try_break_deleg(ptr noundef %17, ptr noundef %9)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call108)
  %tobool109.not = icmp eq i32 %call108, 0
  br i1 %tobool109.not, label %if.then107.if.end112_crit_edge, label %if.then107.out_crit_edge

if.then107.out_crit_edge:                         ; preds = %if.then107
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.then107.if.end112_crit_edge:                   ; preds = %if.then107
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end112

if.end112:                                        ; preds = %if.then107.if.end112_crit_edge, %if.end105.if.end112_crit_edge
  br i1 %brmerge310, label %if.end112.if.end121_crit_edge, label %if.then116

if.end112.if.end121_crit_edge:                    ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end121

if.then116:                                       ; preds = %if.end112
  %call117 = call fastcc i32 @try_break_deleg(ptr noundef nonnull %19, ptr noundef %9)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call117)
  %tobool118.not = icmp eq i32 %call117, 0
  br i1 %tobool118.not, label %if.then116.if.end121_crit_edge, label %if.then116.out_crit_edge

if.then116.out_crit_edge:                         ; preds = %if.then116
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.then116.if.end121_crit_edge:                   ; preds = %if.then116
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end121

if.end121:                                        ; preds = %if.then116.if.end121_crit_edge, %if.end112.if.end121_crit_edge
  %69 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %i_op, align 8
  %rename123 = getelementptr inbounds %struct.inode_operations, ptr %70, i32 0, i32 12
  %71 = ptrtoint ptr %rename123 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %rename123, align 16
  %new_mnt_userns124 = getelementptr inbounds %struct.renamedata, ptr %rd, i32 0, i32 3
  %73 = ptrtoint ptr %new_mnt_userns124 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %new_mnt_userns124, align 4
  %call125 = call i32 %72(ptr noundef %74, ptr noundef %1, ptr noundef %5, ptr noundef %3, ptr noundef %7, i32 noundef %11) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call125)
  %tobool126.not = icmp eq i32 %call125, 0
  br i1 %tobool126.not, label %if.end128, label %if.end121.out_crit_edge

if.end121.out_crit_edge:                          ; preds = %if.end121
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end128:                                        ; preds = %if.end121
  %tobool130.not.not = xor i1 %tobool62.not, true
  %brmerge311 = select i1 %tobool130.not.not, i1 true, i1 %tobool12.not
  br i1 %brmerge311, label %if.end128.if.end138_crit_edge, label %if.then133

if.end128.if.end138_crit_edge:                    ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end138

if.then133:                                       ; preds = %if.end128
  br i1 %15, label %if.then135, label %if.then133.if.end137_crit_edge

if.then133.if.end137_crit_edge:                   ; preds = %if.then133
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end137

if.then135:                                       ; preds = %if.then133
  call void @__sanitizer_cov_trace_pc() #15
  call void @shrink_dcache_parent(ptr noundef %7) #13
  %i_flags136 = getelementptr inbounds %struct.inode, ptr %19, i32 0, i32 4
  %75 = ptrtoint ptr %i_flags136 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %i_flags136, align 4
  %or = or i32 %76, 16
  store i32 %or, ptr %i_flags136, align 4
  br label %if.end137

if.end137:                                        ; preds = %if.then135, %if.then133.if.end137_crit_edge
  call fastcc void @dont_mount(ptr noundef %7)
  %77 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %7, align 8
  %and.i.i323 = and i32 %78, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i323)
  %tobool.i.not.i324 = icmp eq i32 %and.i.i323, 0
  br i1 %tobool.i.not.i324, label %if.end137.if.end138_crit_edge, label %if.end.i325

if.end137.if.end138_crit_edge:                    ; preds = %if.end137
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end138

if.end.i325:                                      ; preds = %if.end137
  call void @__sanitizer_cov_trace_pc() #15
  call void @__detach_mounts(ptr noundef %7) #13
  br label %if.end138

if.end138:                                        ; preds = %if.end.i325, %if.end137.if.end138_crit_edge, %if.end128.if.end138_crit_edge
  %i_sb139 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %79 = ptrtoint ptr %i_sb139 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %i_sb139, align 4
  %s_type = getelementptr inbounds %struct.super_block, ptr %80, i32 0, i32 5
  %81 = ptrtoint ptr %s_type to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %s_type, align 32
  %fs_flags = getelementptr inbounds %struct.file_system_type, ptr %82, i32 0, i32 1
  %83 = ptrtoint ptr %fs_flags to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %fs_flags, align 4
  %and140 = and i32 %84, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and140)
  %tobool141.not = icmp eq i32 %and140, 0
  br i1 %tobool141.not, label %if.then142, label %if.end138.out_crit_edge

if.end138.out_crit_edge:                          ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.then142:                                       ; preds = %if.end138
  br i1 %tobool62.not, label %if.then145, label %if.else146

if.then145:                                       ; preds = %if.then142
  call void @__sanitizer_cov_trace_pc() #15
  call void @d_move(ptr noundef %5, ptr noundef %7) #13
  br label %out

if.else146:                                       ; preds = %if.then142
  call void @__sanitizer_cov_trace_pc() #15
  call void @d_exchange(ptr noundef %5, ptr noundef %7) #13
  br label %out

out:                                              ; preds = %if.else146, %if.then145, %if.end138.out_crit_edge, %if.end121.out_crit_edge, %if.then116.out_crit_edge, %if.then107.out_crit_edge, %land.lhs.true101.out_crit_edge, %land.lhs.true91.out_crit_edge, %is_local_mountpoint.exit322.out_crit_edge, %is_local_mountpoint.exit.out_crit_edge
  %error.1 = phi i32 [ -16, %is_local_mountpoint.exit.out_crit_edge ], [ -16, %is_local_mountpoint.exit322.out_crit_edge ], [ %call125, %if.end121.out_crit_edge ], [ 0, %if.end138.out_crit_edge ], [ 0, %if.else146 ], [ 0, %if.then145 ], [ %call117, %if.then116.out_crit_edge ], [ %call108, %if.then107.out_crit_edge ], [ -31, %land.lhs.true101.out_crit_edge ], [ -31, %land.lhs.true91.out_crit_edge ]
  br i1 %or.cond, label %if.else154, label %out.if.then153_crit_edge

out.if.then153_crit_edge:                         ; preds = %out
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then153

if.then153:                                       ; preds = %out.if.then153_crit_edge, %land.lhs.true73.thread.if.then153_crit_edge, %if.end68.if.then153_crit_edge
  %error.1345 = phi i32 [ %error.1, %out.if.then153_crit_edge ], [ -1, %if.end68.if.then153_crit_edge ], [ -1, %land.lhs.true73.thread.if.then153_crit_edge ]
  call void @unlock_two_nondirectories(ptr noundef %17, ptr noundef %19) #13
  br label %if.end158

if.else154:                                       ; preds = %out
  br i1 %tobool12.not, label %if.else154.if.end158_crit_edge, label %if.else154.if.then156_crit_edge

if.else154.if.then156_crit_edge:                  ; preds = %if.else154
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then156

if.else154.if.end158_crit_edge:                   ; preds = %if.else154
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end158

if.then156:                                       ; preds = %if.else154.if.then156_crit_edge, %land.lhs.true73.if.then156_crit_edge, %if.end68.thread.if.then156_crit_edge
  %error.1342349 = phi i32 [ %error.1, %if.else154.if.then156_crit_edge ], [ -1, %if.end68.thread.if.then156_crit_edge ], [ -1, %land.lhs.true73.if.then156_crit_edge ]
  %i_rwsem.i326 = getelementptr inbounds %struct.inode, ptr %19, i32 0, i32 25
  call void @up_write(ptr noundef %i_rwsem.i326) #13
  br label %if.end158

if.end158:                                        ; preds = %if.then156, %if.else154.if.end158_crit_edge, %if.then153
  %error.1341 = phi i32 [ %error.1, %if.else154.if.end158_crit_edge ], [ %error.1342349, %if.then156 ], [ %error.1345, %if.then153 ]
  call void @dput(ptr noundef %7) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %error.1341)
  %tobool159.not = icmp eq i32 %error.1341, 0
  br i1 %tobool159.not, label %if.then160, label %if.end158.if.end170_crit_edge

if.end158.if.end170_crit_edge:                    ; preds = %if.end158
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end170

if.then160:                                       ; preds = %if.end158
  %conv = zext i1 %15 to i32
  %spec.select = select i1 %tobool62.not, ptr %19, ptr null
  call fastcc void @fsnotify_move(ptr noundef %1, ptr noundef %3, ptr noundef nonnull %old_name, i32 noundef %conv, ptr noundef %spec.select, ptr noundef %5)
  br i1 %tobool62.not, label %if.then160.if.end170_crit_edge, label %if.then166

if.then160.if.end170_crit_edge:                   ; preds = %if.then160
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end170

if.then166:                                       ; preds = %if.then160
  call void @__sanitizer_cov_trace_pc() #15
  %d_name = getelementptr inbounds %struct.dentry, ptr %5, i32 0, i32 4
  %conv168 = zext i1 %new_is_dir.0.shrunk to i32
  call fastcc void @fsnotify_move(ptr noundef %3, ptr noundef %1, ptr noundef %d_name, i32 noundef %conv168, ptr noundef null, ptr noundef %7)
  br label %if.end170

if.end170:                                        ; preds = %if.then166, %if.then160.if.end170_crit_edge, %if.end158.if.end170_crit_edge, %if.end158.thread
  %error.1341356 = phi i32 [ -1, %if.end158.thread ], [ 0, %if.then160.if.end170_crit_edge ], [ 0, %if.then166 ], [ %error.1341, %if.end158.if.end170_crit_edge ]
  call void @release_dentry_name_snapshot(ptr noundef nonnull %old_name) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end170, %if.end54.cleanup_crit_edge, %if.then47.cleanup_crit_edge, %if.then37.cleanup_crit_edge, %if.end30.cleanup_crit_edge, %if.end27.cleanup_crit_edge, %if.end3.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %if.then13.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %error.1341356, %if.end170 ], [ 0, %entry.cleanup_crit_edge ], [ %call8, %if.end.cleanup_crit_edge ], [ %error.0, %if.end27.cleanup_crit_edge ], [ -1, %if.end30.cleanup_crit_edge ], [ %call39, %if.then37.cleanup_crit_edge ], [ %call49, %if.then47.cleanup_crit_edge ], [ %call55, %if.end54.cleanup_crit_edge ], [ -75, %if.end3.i.cleanup_crit_edge ], [ -2, %if.end.i.cleanup_crit_edge ], [ -17, %if.then13.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %old_name) #13
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_inode_rename(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @take_dentry_name_snapshot(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_two_nondirectories(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @d_move(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @d_exchange(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @unlock_two_nondirectories(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @fsnotify_move(ptr noundef %old_dir, ptr noundef %new_dir, ptr noundef %old_name, i32 noundef %isdir, ptr noundef %target, ptr noundef %moved) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %d_inode = getelementptr inbounds %struct.dentry, ptr %moved, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode, align 8
  %call = tail call i32 @fsnotify_get_cookie() #13
  %d_name = getelementptr inbounds %struct.dentry, ptr %moved, i32 0, i32 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %isdir)
  %tobool.not = icmp eq i32 %isdir, 0
  %old_dir_mask.0 = select i1 %tobool.not, i32 64, i32 1073741888
  %new_dir_mask.0 = select i1 %tobool.not, i32 128, i32 1073741952
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %old_dir, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb.i, align 4
  %s_fsnotify_connectors.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 48
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i, i32 noundef 4) #13
  %4 = ptrtoint ptr %s_fsnotify_connectors.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %s_fsnotify_connectors.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp.i = icmp eq i32 %5, 0
  br i1 %cmp.i, label %entry.fsnotify_name.exit_crit_edge, label %if.end.i

entry.fsnotify_name.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %fsnotify_name.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %rename_mask.0 = select i1 %tobool.not, i32 268435456, i32 1342177280
  %call1.i = tail call i32 @fsnotify(i32 noundef %rename_mask.0, ptr noundef %moved, i32 noundef 3, ptr noundef %old_dir, ptr noundef %old_name, ptr noundef null, i32 noundef 0) #13
  br label %fsnotify_name.exit

fsnotify_name.exit:                               ; preds = %if.end.i, %entry.fsnotify_name.exit_crit_edge
  %6 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %i_sb.i, align 4
  %s_fsnotify_connectors.i23 = getelementptr inbounds %struct.super_block, ptr %7, i32 0, i32 48
  %call.i.i.i24 = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i23, i32 noundef 4) #13
  %8 = ptrtoint ptr %s_fsnotify_connectors.i23 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %s_fsnotify_connectors.i23, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp.i25 = icmp eq i32 %9, 0
  br i1 %cmp.i25, label %fsnotify_name.exit.fsnotify_name.exit28_crit_edge, label %if.end.i27

fsnotify_name.exit.fsnotify_name.exit28_crit_edge: ; preds = %fsnotify_name.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %fsnotify_name.exit28

if.end.i27:                                       ; preds = %fsnotify_name.exit
  call void @__sanitizer_cov_trace_pc() #15
  %call1.i26 = tail call i32 @fsnotify(i32 noundef %old_dir_mask.0, ptr noundef %1, i32 noundef 2, ptr noundef %old_dir, ptr noundef %old_name, ptr noundef null, i32 noundef %call) #13
  br label %fsnotify_name.exit28

fsnotify_name.exit28:                             ; preds = %if.end.i27, %fsnotify_name.exit.fsnotify_name.exit28_crit_edge
  %i_sb.i29 = getelementptr inbounds %struct.inode, ptr %new_dir, i32 0, i32 8
  %10 = ptrtoint ptr %i_sb.i29 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %i_sb.i29, align 4
  %s_fsnotify_connectors.i30 = getelementptr inbounds %struct.super_block, ptr %11, i32 0, i32 48
  %call.i.i.i31 = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i30, i32 noundef 4) #13
  %12 = ptrtoint ptr %s_fsnotify_connectors.i30 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %s_fsnotify_connectors.i30, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp.i32 = icmp eq i32 %13, 0
  br i1 %cmp.i32, label %fsnotify_name.exit28.fsnotify_name.exit35_crit_edge, label %if.end.i34

fsnotify_name.exit28.fsnotify_name.exit35_crit_edge: ; preds = %fsnotify_name.exit28
  call void @__sanitizer_cov_trace_pc() #15
  br label %fsnotify_name.exit35

if.end.i34:                                       ; preds = %fsnotify_name.exit28
  call void @__sanitizer_cov_trace_pc() #15
  %call1.i33 = tail call i32 @fsnotify(i32 noundef %new_dir_mask.0, ptr noundef %1, i32 noundef 2, ptr noundef %new_dir, ptr noundef %d_name, ptr noundef null, i32 noundef %call) #13
  br label %fsnotify_name.exit35

fsnotify_name.exit35:                             ; preds = %if.end.i34, %fsnotify_name.exit28.fsnotify_name.exit35_crit_edge
  %tobool6.not = icmp eq ptr %target, null
  br i1 %tobool6.not, label %fsnotify_name.exit35.if.end8_crit_edge, label %if.then7

fsnotify_name.exit35.if.end8_crit_edge:           ; preds = %fsnotify_name.exit35
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8

if.then7:                                         ; preds = %fsnotify_name.exit35
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %target, i32 0, i32 8
  %14 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %i_sb.i.i, align 4
  %s_fsnotify_connectors.i.i = getelementptr inbounds %struct.super_block, ptr %15, i32 0, i32 48
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i.i, i32 noundef 4) #13
  %16 = ptrtoint ptr %s_fsnotify_connectors.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %s_fsnotify_connectors.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp.i.i = icmp eq i32 %17, 0
  br i1 %cmp.i.i, label %if.then7.if.end8_crit_edge, label %if.end.i.i

if.then7.if.end8_crit_edge:                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8

if.end.i.i:                                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #15
  %18 = ptrtoint ptr %target to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %target, align 8
  %20 = and i16 %19, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %20)
  %cmp1.i.i = icmp eq i16 %20, 16384
  %spec.select.i.i = select i1 %cmp1.i.i, i32 1073741828, i32 4
  %call5.i.i = tail call i32 @fsnotify(i32 noundef %spec.select.i.i, ptr noundef nonnull %target, i32 noundef 2, ptr noundef null, ptr noundef null, ptr noundef nonnull %target, i32 noundef 0) #13
  br label %if.end8

if.end8:                                          ; preds = %if.end.i.i, %if.then7.if.end8_crit_edge, %fsnotify_name.exit35.if.end8_crit_edge
  %i_sb.i36 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %21 = ptrtoint ptr %i_sb.i36 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %i_sb.i36, align 4
  %s_fsnotify_connectors.i37 = getelementptr inbounds %struct.super_block, ptr %22, i32 0, i32 48
  %call.i.i.i38 = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i37, i32 noundef 4) #13
  %23 = ptrtoint ptr %s_fsnotify_connectors.i37 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %s_fsnotify_connectors.i37, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %cmp.i39 = icmp eq i32 %24, 0
  br i1 %cmp.i39, label %if.end8.fsnotify_inode.exit_crit_edge, label %if.end.i40

if.end8.fsnotify_inode.exit_crit_edge:            ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %fsnotify_inode.exit

if.end.i40:                                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  %25 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %1, align 8
  %27 = and i16 %26, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %27)
  %cmp1.i = icmp eq i16 %27, 16384
  %spec.select.i = select i1 %cmp1.i, i32 1073743872, i32 2048
  %call5.i = tail call i32 @fsnotify(i32 noundef %spec.select.i, ptr noundef %1, i32 noundef 2, ptr noundef null, ptr noundef null, ptr noundef %1, i32 noundef 0) #13
  br label %fsnotify_inode.exit

fsnotify_inode.exit:                              ; preds = %if.end.i40, %if.end8.fsnotify_inode.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @release_dentry_name_snapshot(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @do_renameat2(i32 noundef %olddfd, ptr noundef %from, i32 noundef %newdfd, ptr noundef %to, i32 noundef %flags) local_unnamed_addr #0 align 64 {
entry:
  %rd = alloca %struct.renamedata, align 4
  %old_path = alloca %struct.path, align 4
  %new_path = alloca %struct.path, align 4
  %old_last = alloca %struct.qstr, align 8
  %new_last = alloca %struct.qstr, align 8
  %old_type = alloca i32, align 4
  %new_type = alloca i32, align 4
  %delegated_inode = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %rd) #13
  %0 = getelementptr inbounds %struct.renamedata, ptr %rd, i32 0, i32 1
  %1 = getelementptr inbounds %struct.renamedata, ptr %rd, i32 0, i32 2
  %2 = getelementptr inbounds %struct.renamedata, ptr %rd, i32 0, i32 3
  %3 = getelementptr inbounds %struct.renamedata, ptr %rd, i32 0, i32 4
  %4 = getelementptr inbounds %struct.renamedata, ptr %rd, i32 0, i32 5
  %5 = getelementptr inbounds %struct.renamedata, ptr %rd, i32 0, i32 6
  %6 = getelementptr inbounds %struct.renamedata, ptr %rd, i32 0, i32 7
  %7 = call ptr @memset(ptr %rd, i32 255, i32 32)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %old_path) #13
  %8 = ptrtoint ptr %old_path to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr inttoptr (i32 -1 to ptr), ptr %old_path, align 4, !annotation !367
  %9 = getelementptr inbounds %struct.path, ptr %old_path, i32 0, i32 1
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 -1 to ptr), ptr %9, align 4, !annotation !367
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %new_path) #13
  %11 = ptrtoint ptr %new_path to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr inttoptr (i32 -1 to ptr), ptr %new_path, align 4, !annotation !367
  %12 = getelementptr inbounds %struct.path, ptr %new_path, i32 0, i32 1
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 -1 to ptr), ptr %12, align 4, !annotation !367
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %old_last) #13
  %14 = call ptr @memset(ptr %old_last, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %new_last) #13
  %15 = call ptr @memset(ptr %new_last, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %old_type) #13
  %16 = ptrtoint ptr %old_type to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 -1, ptr %old_type, align 4, !annotation !367
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %new_type) #13
  %17 = ptrtoint ptr %new_type to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 -1, ptr %new_type, align 4, !annotation !367
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %delegated_inode) #13
  %18 = ptrtoint ptr %delegated_inode to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %delegated_inode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %flags)
  %tobool.not = icmp ult i32 %flags, 8
  br i1 %tobool.not, label %if.end, label %entry.put_names_crit_edge

entry.put_names_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %put_names

if.end:                                           ; preds = %entry
  %and1 = and i32 %flags, 5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool2.not = icmp eq i32 %and1, 0
  %and3 = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  %or.cond = or i1 %tobool2.not, %tobool4.not
  br i1 %or.cond, label %if.end6, label %if.end.put_names_crit_edge

if.end.put_names_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %put_names

if.end6:                                          ; preds = %if.end
  %19 = shl nuw nsw i32 %and3, 10
  %and24 = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and24)
  %tobool25.not = icmp eq i32 %and24, 0
  %spec.select174 = select i1 %tobool25.not, i32 -16, i32 -17
  %name = getelementptr inbounds %struct.qstr, ptr %new_last, i32 0, i32 1
  %name74 = getelementptr inbounds %struct.qstr, ptr %old_last, i32 0, i32 1
  %spec.select175 = select i1 %tobool4.not, i32 -39, i32 -22
  br label %retry

retry:                                            ; preds = %exit1.retry_crit_edge, %if.end6
  %tobool.not.i = phi i1 [ false, %exit1.retry_crit_edge ], [ true, %if.end6 ]
  %lookup_flags.0 = phi i32 [ 32, %exit1.retry_crit_edge ], [ 0, %if.end6 ]
  %call = call fastcc i32 @filename_parentat(i32 noundef %olddfd, ptr noundef %from, i32 noundef %lookup_flags.0, ptr noundef nonnull %old_path, ptr noundef nonnull %old_last, ptr noundef nonnull %old_type)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool11.not = icmp eq i32 %call, 0
  br i1 %tobool11.not, label %if.end13, label %retry.put_names_crit_edge

retry.put_names_crit_edge:                        ; preds = %retry
  call void @__sanitizer_cov_trace_pc() #15
  br label %put_names

if.end13:                                         ; preds = %retry
  %call14 = call fastcc i32 @filename_parentat(i32 noundef %newdfd, ptr noundef %to, i32 noundef %lookup_flags.0, ptr noundef nonnull %new_path, ptr noundef nonnull %new_last, ptr noundef nonnull %new_type)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.end17, label %if.end13.exit1_crit_edge

if.end13.exit1_crit_edge:                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit1

if.end17:                                         ; preds = %if.end13
  %20 = ptrtoint ptr %old_path to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %old_path, align 4
  %22 = ptrtoint ptr %new_path to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %new_path, align 4
  %cmp.not = icmp eq ptr %21, %23
  br i1 %cmp.not, label %if.end20, label %if.end17.exit2_crit_edge

if.end17.exit2_crit_edge:                         ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit2

if.end20:                                         ; preds = %if.end17
  %24 = ptrtoint ptr %old_type to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %old_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp21.not = icmp eq i32 %25, 0
  br i1 %cmp21.not, label %if.end23, label %if.end20.exit2_crit_edge

if.end20.exit2_crit_edge:                         ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit2

if.end23:                                         ; preds = %if.end20
  %26 = ptrtoint ptr %new_type to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %new_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %cmp28.not = icmp eq i32 %27, 0
  br i1 %cmp28.not, label %if.end30, label %if.end23.exit2_crit_edge

if.end23.exit2_crit_edge:                         ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit2

if.end30:                                         ; preds = %if.end23
  %call32 = call i32 @mnt_want_write(ptr noundef %21) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32)
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %retry_deleg.preheader, label %if.end30.exit2_crit_edge

if.end30.exit2_crit_edge:                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit2

retry_deleg.preheader:                            ; preds = %if.end30
  %28 = or i32 %lookup_flags.0, %19
  %or = xor i32 %28, 2048
  br label %retry_deleg

retry_deleg:                                      ; preds = %break_deleg_wait.exit.retry_deleg_crit_edge, %retry_deleg.preheader
  %29 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %12, align 4
  %31 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %9, align 4
  %call37 = call ptr @lock_rename(ptr noundef %30, ptr noundef %32)
  %33 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %9, align 4
  %call39 = call fastcc ptr @__lookup_hash(ptr noundef nonnull %old_last, ptr noundef %34, i32 noundef %lookup_flags.0)
  %35 = ptrtoint ptr %call39 to i32
  %cmp.i = icmp ugt ptr %call39, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %retry_deleg.exit3_crit_edge, label %if.end43

retry_deleg.exit3_crit_edge:                      ; preds = %retry_deleg
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit3

if.end43:                                         ; preds = %retry_deleg
  %36 = ptrtoint ptr %call39 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %call39, align 8
  %and.i.i.i = and i32 %37, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %cmp.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %cmp.i.i, label %if.end43.exit4_crit_edge, label %if.end46

if.end43.exit4_crit_edge:                         ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit4

if.end46:                                         ; preds = %if.end43
  %38 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %12, align 4
  %call48 = call fastcc ptr @__lookup_hash(ptr noundef nonnull %new_last, ptr noundef %39, i32 noundef %or)
  %40 = ptrtoint ptr %call48 to i32
  %cmp.i176 = icmp ugt ptr %call48, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i176, label %if.end46.exit4_crit_edge, label %if.end52

if.end46.exit4_crit_edge:                         ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit4

if.end52:                                         ; preds = %if.end46
  br i1 %tobool25.not, label %if.end52.if.end58_crit_edge, label %land.lhs.true55

if.end52.if.end58_crit_edge:                      ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end58

land.lhs.true55:                                  ; preds = %if.end52
  %41 = ptrtoint ptr %call48 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %call48, align 8
  %and.i.i.i.i = and i32 %42, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %cmp.i.i.i.not = icmp eq i32 %and.i.i.i.i, 0
  br i1 %cmp.i.i.i.not, label %land.lhs.true55.if.end58_crit_edge, label %land.lhs.true55.exit5_crit_edge

land.lhs.true55.exit5_crit_edge:                  ; preds = %land.lhs.true55
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit5

land.lhs.true55.if.end58_crit_edge:               ; preds = %land.lhs.true55
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end58

if.end58:                                         ; preds = %land.lhs.true55.if.end58_crit_edge, %if.end52.if.end58_crit_edge
  br i1 %tobool4.not, label %if.end58.if.end71_crit_edge, label %if.then61

if.end58.if.end71_crit_edge:                      ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end71

if.then61:                                        ; preds = %if.end58
  %43 = ptrtoint ptr %call48 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %call48, align 8
  %and.i.i.i177 = and i32 %44, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i177)
  %cmp.i.i178 = icmp eq i32 %and.i.i.i177, 0
  br i1 %cmp.i.i178, label %if.then61.exit5_crit_edge, label %if.end64

if.then61.exit5_crit_edge:                        ; preds = %if.then61
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit5

if.end64:                                         ; preds = %if.then61
  %45 = and i32 %44, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %45)
  %46 = icmp eq i32 %45, 2097152
  br i1 %46, label %if.end64.if.end71_crit_edge, label %if.then66

if.end64.if.end71_crit_edge:                      ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end71

if.then66:                                        ; preds = %if.end64
  %47 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %name, align 8
  %49 = ptrtoint ptr %new_last to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %new_last, align 8
  %arrayidx = getelementptr i8, ptr %48, i32 %50
  %51 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %52)
  %tobool67.not = icmp eq i8 %52, 0
  br i1 %tobool67.not, label %if.then66.if.end71_crit_edge, label %if.then66.exit5_crit_edge

if.then66.exit5_crit_edge:                        ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit5

if.then66.if.end71_crit_edge:                     ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end71

if.end71:                                         ; preds = %if.then66.if.end71_crit_edge, %if.end64.if.end71_crit_edge, %if.end58.if.end71_crit_edge
  %53 = ptrtoint ptr %call39 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %call39, align 8
  %55 = and i32 %54, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %55)
  %56 = icmp eq i32 %55, 2097152
  br i1 %56, label %if.end71.if.end89_crit_edge, label %if.then73

if.end71.if.end89_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end89

if.then73:                                        ; preds = %if.end71
  %57 = ptrtoint ptr %name74 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %name74, align 8
  %59 = ptrtoint ptr %old_last to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %old_last, align 8
  %arrayidx76 = getelementptr i8, ptr %58, i32 %60
  %61 = ptrtoint ptr %arrayidx76 to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %arrayidx76, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %62)
  %tobool77.not = icmp eq i8 %62, 0
  br i1 %tobool77.not, label %if.end79, label %if.then73.exit5_crit_edge

if.then73.exit5_crit_edge:                        ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit5

if.end79:                                         ; preds = %if.then73
  br i1 %tobool4.not, label %land.lhs.true82, label %if.end79.if.end89_crit_edge

if.end79.if.end89_crit_edge:                      ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end89

land.lhs.true82:                                  ; preds = %if.end79
  %63 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %name, align 8
  %65 = ptrtoint ptr %new_last to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %new_last, align 8
  %arrayidx85 = getelementptr i8, ptr %64, i32 %66
  %67 = ptrtoint ptr %arrayidx85 to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %arrayidx85, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %68)
  %tobool86.not = icmp eq i8 %68, 0
  br i1 %tobool86.not, label %land.lhs.true82.if.end89_crit_edge, label %land.lhs.true82.exit5_crit_edge

land.lhs.true82.exit5_crit_edge:                  ; preds = %land.lhs.true82
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit5

land.lhs.true82.if.end89_crit_edge:               ; preds = %land.lhs.true82
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end89

if.end89:                                         ; preds = %land.lhs.true82.if.end89_crit_edge, %if.end79.if.end89_crit_edge, %if.end71.if.end89_crit_edge
  %cmp90 = icmp eq ptr %call39, %call37
  br i1 %cmp90, label %if.end89.exit5_crit_edge, label %if.end93

if.end89.exit5_crit_edge:                         ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit5

if.end93:                                         ; preds = %if.end89
  %cmp98 = icmp eq ptr %call48, %call37
  br i1 %cmp98, label %if.end93.exit5_crit_edge, label %if.end101

if.end93.exit5_crit_edge:                         ; preds = %if.end93
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit5

if.end101:                                        ; preds = %if.end93
  %call102 = call i32 @security_path_rename(ptr noundef nonnull %old_path, ptr noundef %call39, ptr noundef nonnull %new_path, ptr noundef %call48, i32 noundef %flags) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call102)
  %tobool103.not = icmp eq i32 %call102, 0
  br i1 %tobool103.not, label %if.end105, label %if.end101.exit5_crit_edge

if.end101.exit5_crit_edge:                        ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #15
  br label %exit5

if.end105:                                        ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #15
  %69 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %9, align 4
  %d_inode = getelementptr inbounds %struct.dentry, ptr %70, i32 0, i32 5
  %71 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %d_inode, align 8
  %73 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr %72, ptr %0, align 4
  %74 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %call39, ptr %1, align 4
  %75 = ptrtoint ptr %old_path to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %old_path, align 4
  %mnt_userns.i = getelementptr inbounds %struct.vfsmount, ptr %76, i32 0, i32 3
  %77 = ptrtoint ptr %mnt_userns.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile ptr, ptr %mnt_userns.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !371
  %79 = ptrtoint ptr %rd to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr %78, ptr %rd, align 4
  %80 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %12, align 4
  %d_inode111 = getelementptr inbounds %struct.dentry, ptr %81, i32 0, i32 5
  %82 = ptrtoint ptr %d_inode111 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %d_inode111, align 8
  %84 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %84)
  store ptr %83, ptr %3, align 4
  %85 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %85)
  store ptr %call48, ptr %4, align 4
  %86 = ptrtoint ptr %new_path to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %new_path, align 4
  %mnt_userns.i179 = getelementptr inbounds %struct.vfsmount, ptr %87, i32 0, i32 3
  %88 = ptrtoint ptr %mnt_userns.i179 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile ptr, ptr %mnt_userns.i179, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !371
  %90 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr %89, ptr %2, align 4
  %91 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %delegated_inode, ptr %5, align 4
  %92 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 %flags, ptr %6, align 4
  %call117 = call i32 @vfs_rename(ptr noundef nonnull %rd)
  br label %exit5

exit5:                                            ; preds = %if.end105, %if.end101.exit5_crit_edge, %if.end93.exit5_crit_edge, %if.end89.exit5_crit_edge, %land.lhs.true82.exit5_crit_edge, %if.then73.exit5_crit_edge, %if.then66.exit5_crit_edge, %if.then61.exit5_crit_edge, %land.lhs.true55.exit5_crit_edge
  %error.2 = phi i32 [ -17, %land.lhs.true55.exit5_crit_edge ], [ -2, %if.then61.exit5_crit_edge ], [ -22, %if.end89.exit5_crit_edge ], [ %spec.select175, %if.end93.exit5_crit_edge ], [ %call102, %if.end101.exit5_crit_edge ], [ %call117, %if.end105 ], [ -20, %if.then73.exit5_crit_edge ], [ -20, %land.lhs.true82.exit5_crit_edge ], [ -20, %if.then66.exit5_crit_edge ]
  call void @dput(ptr noundef %call48) #13
  br label %exit4

exit4:                                            ; preds = %exit5, %if.end46.exit4_crit_edge, %if.end43.exit4_crit_edge
  %error.3 = phi i32 [ -2, %if.end43.exit4_crit_edge ], [ %40, %if.end46.exit4_crit_edge ], [ %error.2, %exit5 ]
  call void @dput(ptr noundef %call39) #13
  br label %exit3

exit3:                                            ; preds = %exit4, %retry_deleg.exit3_crit_edge
  %error.4 = phi i32 [ %35, %retry_deleg.exit3_crit_edge ], [ %error.3, %exit4 ]
  %93 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %12, align 4
  %95 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %9, align 4
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %94, i32 0, i32 5
  %97 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %d_inode.i, align 8
  %i_rwsem.i.i = getelementptr inbounds %struct.inode, ptr %98, i32 0, i32 25
  call void @up_write(ptr noundef %i_rwsem.i.i) #13
  %cmp.not.i = icmp eq ptr %94, %96
  br i1 %cmp.not.i, label %exit3.unlock_rename.exit_crit_edge, label %if.then.i

exit3.unlock_rename.exit_crit_edge:               ; preds = %exit3
  call void @__sanitizer_cov_trace_pc() #15
  br label %unlock_rename.exit

if.then.i:                                        ; preds = %exit3
  call void @__sanitizer_cov_trace_pc() #15
  %d_inode1.i = getelementptr inbounds %struct.dentry, ptr %96, i32 0, i32 5
  %99 = ptrtoint ptr %d_inode1.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %d_inode1.i, align 8
  %i_rwsem.i5.i = getelementptr inbounds %struct.inode, ptr %100, i32 0, i32 25
  call void @up_write(ptr noundef %i_rwsem.i5.i) #13
  %d_sb.i = getelementptr inbounds %struct.dentry, ptr %94, i32 0, i32 9
  %101 = ptrtoint ptr %d_sb.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %d_sb.i, align 4
  %s_vfs_rename_mutex.i = getelementptr inbounds %struct.super_block, ptr %102, i32 0, i32 43
  call void @mutex_unlock(ptr noundef %s_vfs_rename_mutex.i) #13
  br label %unlock_rename.exit

unlock_rename.exit:                               ; preds = %if.then.i, %exit3.unlock_rename.exit_crit_edge
  %103 = ptrtoint ptr %delegated_inode to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %delegated_inode, align 4
  %tobool120.not = icmp eq ptr %104, null
  br i1 %tobool120.not, label %unlock_rename.exit.if.end126_crit_edge, label %if.then121

unlock_rename.exit.if.end126_crit_edge:           ; preds = %unlock_rename.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end126

if.then121:                                       ; preds = %unlock_rename.exit
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !379
  %i_flctx.i.i = getelementptr inbounds %struct.inode, ptr %104, i32 0, i32 45
  %105 = ptrtoint ptr %i_flctx.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %i_flctx.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %106, null
  br i1 %tobool.not.i.i, label %if.then121.break_deleg_wait.exit_crit_edge, label %land.lhs.true.i.i

if.then121.break_deleg_wait.exit_crit_edge:       ; preds = %if.then121
  call void @__sanitizer_cov_trace_pc() #15
  br label %break_deleg_wait.exit

land.lhs.true.i.i:                                ; preds = %if.then121
  %flc_lease.i.i = getelementptr inbounds %struct.file_lock_context, ptr %106, i32 0, i32 3
  %107 = ptrtoint ptr %flc_lease.i.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile ptr, ptr %flc_lease.i.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !380
  %cmp.i.not.i.i.i = icmp eq ptr %108, %flc_lease.i.i
  br i1 %cmp.i.not.i.i.i, label %list_empty_careful.exit.i.i, label %land.lhs.true.i.i.if.then.i.i_crit_edge

land.lhs.true.i.i.if.then.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i.i

list_empty_careful.exit.i.i:                      ; preds = %land.lhs.true.i.i
  %prev.i.i.i = getelementptr inbounds %struct.file_lock_context, ptr %106, i32 0, i32 3, i32 1
  %109 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %prev.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %110, %flc_lease.i.i
  br i1 %cmp.i.not.i.i, label %list_empty_careful.exit.i.i.break_deleg_wait.exit_crit_edge, label %list_empty_careful.exit.i.i.if.then.i.i_crit_edge

list_empty_careful.exit.i.i.if.then.i.i_crit_edge: ; preds = %list_empty_careful.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i.i

list_empty_careful.exit.i.i.break_deleg_wait.exit_crit_edge: ; preds = %list_empty_careful.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %break_deleg_wait.exit

if.then.i.i:                                      ; preds = %list_empty_careful.exit.i.i.if.then.i.i_crit_edge, %land.lhs.true.i.i.if.then.i.i_crit_edge
  %call5.i.i = call i32 @__break_lease(ptr noundef nonnull %104, i32 noundef 1, i32 noundef 4) #13
  br label %break_deleg_wait.exit

break_deleg_wait.exit:                            ; preds = %if.then.i.i, %list_empty_careful.exit.i.i.break_deleg_wait.exit_crit_edge, %if.then121.break_deleg_wait.exit_crit_edge
  %retval.0.i.i = phi i32 [ %call5.i.i, %if.then.i.i ], [ 0, %list_empty_careful.exit.i.i.break_deleg_wait.exit_crit_edge ], [ 0, %if.then121.break_deleg_wait.exit_crit_edge ]
  %111 = ptrtoint ptr %delegated_inode to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %delegated_inode, align 4
  call void @iput(ptr noundef %112) #13
  %113 = ptrtoint ptr %delegated_inode to i32
  call void @__asan_store4_noabort(i32 %113)
  store ptr null, ptr %delegated_inode, align 4
  %tobool123.not = icmp eq i32 %retval.0.i.i, 0
  br i1 %tobool123.not, label %break_deleg_wait.exit.retry_deleg_crit_edge, label %break_deleg_wait.exit.if.end126_crit_edge

break_deleg_wait.exit.if.end126_crit_edge:        ; preds = %break_deleg_wait.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end126

break_deleg_wait.exit.retry_deleg_crit_edge:      ; preds = %break_deleg_wait.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %retry_deleg

if.end126:                                        ; preds = %break_deleg_wait.exit.if.end126_crit_edge, %unlock_rename.exit.if.end126_crit_edge
  %error.5 = phi i32 [ %retval.0.i.i, %break_deleg_wait.exit.if.end126_crit_edge ], [ %error.4, %unlock_rename.exit.if.end126_crit_edge ]
  %114 = ptrtoint ptr %old_path to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %old_path, align 4
  call void @mnt_drop_write(ptr noundef %115) #13
  br label %exit2

exit2:                                            ; preds = %if.end126, %if.end30.exit2_crit_edge, %if.end23.exit2_crit_edge, %if.end20.exit2_crit_edge, %if.end17.exit2_crit_edge
  %error.6 = phi i32 [ -18, %if.end17.exit2_crit_edge ], [ -16, %if.end20.exit2_crit_edge ], [ %spec.select174, %if.end23.exit2_crit_edge ], [ %call32, %if.end30.exit2_crit_edge ], [ %error.5, %if.end126 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -116, i32 %error.6)
  %cmp.i180 = icmp eq i32 %error.6, -116
  %116 = and i1 %tobool.not.i, %cmp.i180
  %117 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %12, align 4
  call void @dput(ptr noundef %118) #13
  %119 = ptrtoint ptr %new_path to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %new_path, align 4
  call void @mntput(ptr noundef %120) #13
  br label %exit1

exit1:                                            ; preds = %exit2, %if.end13.exit1_crit_edge
  %should_retry.2.off0 = phi i1 [ false, %if.end13.exit1_crit_edge ], [ %116, %exit2 ]
  %error.7 = phi i32 [ %call14, %if.end13.exit1_crit_edge ], [ %error.6, %exit2 ]
  %121 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %9, align 4
  call void @dput(ptr noundef %122) #13
  %123 = ptrtoint ptr %old_path to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %old_path, align 4
  call void @mntput(ptr noundef %124) #13
  br i1 %should_retry.2.off0, label %exit1.retry_crit_edge, label %exit1.put_names_crit_edge

exit1.put_names_crit_edge:                        ; preds = %exit1
  call void @__sanitizer_cov_trace_pc() #15
  br label %put_names

exit1.retry_crit_edge:                            ; preds = %exit1
  call void @__sanitizer_cov_trace_pc() #15
  br label %retry

put_names:                                        ; preds = %exit1.put_names_crit_edge, %retry.put_names_crit_edge, %if.end.put_names_crit_edge, %entry.put_names_crit_edge
  %error.8 = phi i32 [ -22, %entry.put_names_crit_edge ], [ -22, %if.end.put_names_crit_edge ], [ %error.7, %exit1.put_names_crit_edge ], [ %call, %retry.put_names_crit_edge ]
  %cmp.i.i182 = icmp ugt ptr %from, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i182, label %put_names.putname.exit_crit_edge, label %do.body.i

put_names.putname.exit_crit_edge:                 ; preds = %put_names
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

do.body.i:                                        ; preds = %put_names
  %refcnt.i = getelementptr inbounds %struct.filename, ptr %from, i32 0, i32 2
  %125 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %126)
  %cmp.i183 = icmp slt i32 %126, 1
  br i1 %cmp.i183, label %do.body3.i, label %do.end7.i, !prof !360

do.body3.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 261, 0\0A.popsection", ""() #13, !srcloc !361
  unreachable

do.end7.i:                                        ; preds = %do.body.i
  %dec.i = add nsw i32 %126, -1
  %127 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_store4_noabort(i32 %127)
  store i32 %dec.i, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp9.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp9.not.i, label %if.end11.i, label %do.end7.i.putname.exit_crit_edge

do.end7.i.putname.exit_crit_edge:                 ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

if.end11.i:                                       ; preds = %do.end7.i
  %128 = ptrtoint ptr %from to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %from, align 4
  %iname.i = getelementptr inbounds %struct.filename, ptr %from, i32 0, i32 4
  %cmp13.not.i = icmp eq ptr %129, %iname.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %130 = load ptr, ptr @names_cachep, align 4
  br i1 %cmp13.not.i, label %if.else.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %130, ptr noundef %129) #13
  call void @kfree(ptr noundef %from) #13
  br label %putname.exit

if.else.i:                                        ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %130, ptr noundef %from) #13
  br label %putname.exit

putname.exit:                                     ; preds = %if.else.i, %if.then14.i, %do.end7.i.putname.exit_crit_edge, %put_names.putname.exit_crit_edge
  %cmp.i.i184 = icmp ugt ptr %to, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i184, label %putname.exit.putname.exit197_crit_edge, label %do.body.i187

putname.exit.putname.exit197_crit_edge:           ; preds = %putname.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit197

do.body.i187:                                     ; preds = %putname.exit
  %refcnt.i185 = getelementptr inbounds %struct.filename, ptr %to, i32 0, i32 2
  %131 = ptrtoint ptr %refcnt.i185 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %refcnt.i185, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %132)
  %cmp.i186 = icmp slt i32 %132, 1
  br i1 %cmp.i186, label %do.body3.i188, label %do.end7.i191, !prof !360

do.body3.i188:                                    ; preds = %do.body.i187
  call void @__sanitizer_cov_trace_pc() #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 261, 0\0A.popsection", ""() #13, !srcloc !361
  unreachable

do.end7.i191:                                     ; preds = %do.body.i187
  %dec.i189 = add nsw i32 %132, -1
  %133 = ptrtoint ptr %refcnt.i185 to i32
  call void @__asan_store4_noabort(i32 %133)
  store i32 %dec.i189, ptr %refcnt.i185, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i189)
  %cmp9.not.i190 = icmp eq i32 %dec.i189, 0
  br i1 %cmp9.not.i190, label %if.end11.i194, label %do.end7.i191.putname.exit197_crit_edge

do.end7.i191.putname.exit197_crit_edge:           ; preds = %do.end7.i191
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit197

if.end11.i194:                                    ; preds = %do.end7.i191
  %134 = ptrtoint ptr %to to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %to, align 4
  %iname.i192 = getelementptr inbounds %struct.filename, ptr %to, i32 0, i32 4
  %cmp13.not.i193 = icmp eq ptr %135, %iname.i192
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %136 = load ptr, ptr @names_cachep, align 4
  br i1 %cmp13.not.i193, label %if.else.i196, label %if.then14.i195

if.then14.i195:                                   ; preds = %if.end11.i194
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %136, ptr noundef %135) #13
  call void @kfree(ptr noundef %to) #13
  br label %putname.exit197

if.else.i196:                                     ; preds = %if.end11.i194
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %136, ptr noundef %to) #13
  br label %putname.exit197

putname.exit197:                                  ; preds = %if.else.i196, %if.then14.i195, %do.end7.i191.putname.exit197_crit_edge, %putname.exit.putname.exit197_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %delegated_inode) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %new_type) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %old_type) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %new_last) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %old_last) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %new_path) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %old_path) #13
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %rd) #13
  ret i32 %error.8
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_path_rename(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_renameat2(i32 noundef %olddfd, i32 noundef %oldname, i32 noundef %newdfd, i32 noundef %newname, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %oldname to ptr
  %1 = inttoptr i32 %newname to ptr
  %call.i.i = tail call ptr @getname_flags(ptr noundef %0, i32 noundef 0, ptr noundef null) #13
  %call.i3.i = tail call ptr @getname_flags(ptr noundef %1, i32 noundef 0, ptr noundef null) #13
  %call2.i = tail call i32 @do_renameat2(i32 noundef %olddfd, ptr noundef %call.i.i, i32 noundef %newdfd, ptr noundef %call.i3.i, i32 noundef %flags) #13
  ret i32 %call2.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_renameat(i32 noundef %olddfd, i32 noundef %oldname, i32 noundef %newdfd, i32 noundef %newname) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %oldname to ptr
  %1 = inttoptr i32 %newname to ptr
  %call.i.i = tail call ptr @getname_flags(ptr noundef %0, i32 noundef 0, ptr noundef null) #13
  %call.i3.i = tail call ptr @getname_flags(ptr noundef %1, i32 noundef 0, ptr noundef null) #13
  %call2.i = tail call i32 @do_renameat2(i32 noundef %olddfd, ptr noundef %call.i.i, i32 noundef %newdfd, ptr noundef %call.i3.i, i32 noundef 0) #13
  ret i32 %call2.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_rename(i32 noundef %oldname, i32 noundef %newname) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %oldname to ptr
  %1 = inttoptr i32 %newname to ptr
  %call.i.i = tail call ptr @getname_flags(ptr noundef %0, i32 noundef 0, ptr noundef null) #13
  %call.i3.i = tail call ptr @getname_flags(ptr noundef %1, i32 noundef 0, ptr noundef null) #13
  %call2.i = tail call i32 @do_renameat2(i32 noundef -100, ptr noundef %call.i.i, i32 noundef -100, ptr noundef %call.i3.i, i32 noundef 0) #13
  ret i32 %call2.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @readlink_copy(ptr noundef %buffer, i32 noundef %buflen, ptr noundef %link) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %link to i32
  %cmp.i = icmp ugt ptr %link, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %entry.out_crit_edge, label %if.end

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end:                                           ; preds = %entry
  %call2 = tail call i32 @strlen(ptr noundef %link) #17
  %1 = tail call i32 @llvm.umin.i32(i32 %call2, i32 %buflen)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp9.i.i = icmp slt i32 %1, 0
  br i1 %cmp9.i.i, label %land.rhs16.i.i, label %if.then.i.i.i

land.rhs16.i.i:                                   ; preds = %if.end
  %.b1.i.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b1.i.i, label %land.rhs16.i.i.out_crit_edge, label %if.then27.i.i, !prof !362

land.rhs16.i.i.out_crit_edge:                     ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.then27.i.i:                                    ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.75, i32 noundef 230, i32 noundef 9, ptr noundef null) #13
  br label %out

if.then.i.i.i:                                    ; preds = %if.end
  tail call void @__check_object_size(ptr noundef %link, i32 noundef %1, i1 noundef zeroext true) #13
  tail call void @__might_fault(ptr noundef nonnull @.str.77, i32 noundef 174) #13
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #13
  br i1 %call.i.i, label %if.then.i.i.i.copy_to_user.exit_crit_edge, label %if.end.i.i

if.then.i.i.i.copy_to_user.exit_crit_edge:        ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %copy_to_user.exit

if.end.i.i:                                       ; preds = %if.then.i.i.i
  %2 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %buffer, i32 %1, i32 -1226833920) #18, !srcloc !381
  %asmresult.i.i = extractvalue { i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.then2.i.i, label %if.end.i.i.copy_to_user.exit_crit_edge

if.end.i.i.copy_to_user.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %copy_to_user.exit

if.then2.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %link, i32 noundef %1) #13
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %buffer, ptr noundef %link, i32 noundef %1) #13
  br label %copy_to_user.exit

copy_to_user.exit:                                ; preds = %if.then2.i.i, %if.end.i.i.copy_to_user.exit_crit_edge, %if.then.i.i.i.copy_to_user.exit_crit_edge
  %n.addr.0.i = phi i32 [ %1, %if.then.i.i.i.copy_to_user.exit_crit_edge ], [ %call.i12.i.i, %if.then2.i.i ], [ %1, %if.end.i.i.copy_to_user.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i)
  %tobool.not = icmp eq i32 %n.addr.0.i, 0
  %spec.select = select i1 %tobool.not, i32 %1, i32 -14
  br label %out

out:                                              ; preds = %copy_to_user.exit, %if.then27.i.i, %land.rhs16.i.i.out_crit_edge, %entry.out_crit_edge
  %len.1 = phi i32 [ %0, %entry.out_crit_edge ], [ -14, %if.then27.i.i ], [ -14, %land.rhs16.i.i.out_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  ret i32 %len.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vfs_readlink(ptr noundef %dentry, ptr noundef %buffer, i32 noundef %buflen) #0 align 64 {
entry:
  %done = alloca %struct.delayed_call, align 8
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %done) #13
  %2 = ptrtoint ptr %done to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 0, ptr %done, align 8
  %i_opflags = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 1
  %3 = ptrtoint ptr %i_opflags to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %i_opflags, align 2
  %5 = and i16 %4, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool.not = icmp eq i16 %5, 0
  br i1 %tobool.not, label %if.then, label %entry.do.end_crit_edge, !prof !360

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

if.then:                                          ; preds = %entry
  %i_op = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 7
  %6 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %i_op, align 8
  %readlink = getelementptr inbounds %struct.inode_operations, ptr %7, i32 0, i32 4
  %8 = ptrtoint ptr %readlink to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %readlink, align 16
  %tobool4.not = icmp eq ptr %9, null
  br i1 %tobool4.not, label %if.end, label %if.then11, !prof !362

if.then11:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %call14 = tail call i32 %9(ptr noundef %dentry, ptr noundef %buffer, i32 noundef %buflen) #13
  br label %cleanup

if.end:                                           ; preds = %if.then
  %10 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %dentry, align 8
  %and.i.i = and i32 %11, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 6291456, i32 %and.i.i)
  %cmp.i = icmp eq i32 %and.i.i, 6291456
  br i1 %cmp.i, label %if.end17, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %i_lock = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #13
  %12 = ptrtoint ptr %i_opflags to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %i_opflags, align 2
  %14 = or i16 %13, 16
  store i16 %14, ptr %i_opflags, align 2
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #13
  br label %do.end

do.end:                                           ; preds = %if.end17, %entry.do.end_crit_edge
  %15 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 48
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %15, align 4
  %tobool23.not = icmp eq ptr %17, null
  br i1 %tobool23.not, label %if.then24, label %do.end.if.end31_crit_edge

do.end.if.end31_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end31

if.then24:                                        ; preds = %do.end
  %i_op25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 7
  %18 = ptrtoint ptr %i_op25 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %i_op25, align 8
  %get_link = getelementptr inbounds %struct.inode_operations, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %get_link to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %get_link, align 4
  %call26 = call ptr %21(ptr noundef %dentry, ptr noundef %1, ptr noundef nonnull %done) #13
  %cmp.i53 = icmp ugt ptr %call26, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i53, label %if.then28, label %if.then24.if.end31_crit_edge

if.then24.if.end31_crit_edge:                     ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end31

if.then28:                                        ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #15
  %22 = ptrtoint ptr %call26 to i32
  br label %cleanup

if.end31:                                         ; preds = %if.then24.if.end31_crit_edge, %do.end.if.end31_crit_edge
  %link.0 = phi ptr [ %17, %do.end.if.end31_crit_edge ], [ %call26, %if.then24.if.end31_crit_edge ]
  %call32 = call i32 @readlink_copy(ptr noundef %buffer, i32 noundef %buflen, ptr noundef %link.0)
  %23 = ptrtoint ptr %done to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %done, align 8
  %tobool.not.i = icmp eq ptr %24, null
  br i1 %tobool.not.i, label %if.end31.cleanup_crit_edge, label %if.then.i

if.end31.cleanup_crit_edge:                       ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then.i:                                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  %arg.i = getelementptr inbounds %struct.delayed_call, ptr %done, i32 0, i32 1
  %25 = ptrtoint ptr %arg.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arg.i, align 4
  call void %24(ptr noundef %26) #13
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.end31.cleanup_crit_edge, %if.then28, %if.end.cleanup_crit_edge, %if.then11
  %retval.0 = phi i32 [ %call14, %if.then11 ], [ %22, %if.then28 ], [ -22, %if.end.cleanup_crit_edge ], [ %call32, %if.end31.cleanup_crit_edge ], [ %call32, %if.then.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %done) #13
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @vfs_get_link(ptr noundef %dentry, ptr noundef %done) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode.i, align 8
  %2 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dentry, align 8
  %and.i.i = and i32 %3, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 6291456, i32 %and.i.i)
  %cmp.i = icmp eq i32 %and.i.i, 6291456
  br i1 %cmp.i, label %if.then, label %entry.if.end7_crit_edge

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7

if.then:                                          ; preds = %entry
  %call3 = tail call i32 @security_inode_readlink(ptr noundef %dentry) #13
  %4 = inttoptr i32 %call3 to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.then5, label %if.then.if.end7_crit_edge

if.then.if.end7_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7

if.then5:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %i_op = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 7
  %5 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %i_op, align 8
  %get_link = getelementptr inbounds %struct.inode_operations, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %get_link to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %get_link, align 4
  %call6 = tail call ptr %8(ptr noundef %dentry, ptr noundef %1, ptr noundef %done) #13
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %if.then.if.end7_crit_edge, %entry.if.end7_crit_edge
  %res.0 = phi ptr [ %4, %if.then.if.end7_crit_edge ], [ %call6, %if.then5 ], [ inttoptr (i32 -22 to ptr), %entry.if.end7_crit_edge ]
  ret ptr %res.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_inode_readlink(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @page_get_link(ptr noundef readnone %dentry, ptr nocapture noundef readonly %inode, ptr nocapture noundef writeonly %callback) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %i_mapping = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %0 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_mapping, align 8
  %tobool.not = icmp eq ptr %dentry, null
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call.i = tail call ptr @pagecache_get_page(ptr noundef %1, i32 noundef 0, i32 noundef 0, i32 noundef 0) #13
  %tobool1.not = icmp eq ptr %call.i, null
  br i1 %tobool1.not, label %if.then.cleanup_crit_edge, label %if.end

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %if.then
  %2 = getelementptr inbounds %struct.page, ptr %call.i, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %2, align 4
  %and.i.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !362

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i = add i32 %4, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %5 = ptrtoint ptr %call.i to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %5, %if.end.i.i ]
  %6 = inttoptr i32 %retval.0.i.i to ptr
  %7 = getelementptr inbounds %struct.page, ptr %6, i32 0, i32 1
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %7, align 4
  %and.i.i.i.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %folio_flags.exit.i.i, label %if.then.i.i.i, !prof !362

if.then.i.i.i:                                    ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %6, ptr noundef nonnull @.str.78) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !382
  unreachable

folio_flags.exit.i.i:                             ; preds = %_compound_head.exit.i
  %10 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %6, align 4
  %12 = and i32 %11, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.i.not.i = icmp eq i32 %12, 0
  br i1 %tobool.i.not.i, label %if.then6, label %PageUptodate.exit

PageUptodate.exit:                                ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !383
  br label %if.end13

if.then6:                                         ; preds = %folio_flags.exit.i.i
  %13 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %2, align 4
  %and.i.i39 = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i39)
  %tobool.not.i.i40 = icmp eq i32 %and.i.i39, 0
  br i1 %tobool.not.i.i40, label %if.end.i.i43, label %if.then.i.i42, !prof !362

if.then.i.i42:                                    ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i41 = add i32 %14, -1
  br label %_compound_head.exit.i45

if.end.i.i43:                                     ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #15
  %15 = ptrtoint ptr %call.i to i32
  br label %_compound_head.exit.i45

_compound_head.exit.i45:                          ; preds = %if.end.i.i43, %if.then.i.i42
  %retval.0.i.i44 = phi i32 [ %sub.i.i41, %if.then.i.i42 ], [ %15, %if.end.i.i43 ]
  %16 = inttoptr i32 %retval.0.i.i44 to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %16, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #13
  %17 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp.i.i.i.i = icmp eq i32 %18, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !360

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i45
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %16, ptr noundef nonnull @.str.80) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #13, !srcloc !384
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i45
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !385
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #13
  %19 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #13, !srcloc !386
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %19, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !387
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@page_get_link, %if.then.i.i.i.i.i)) #13
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !388

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %16, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #13
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.cleanup_crit_edge

folio_put_testzero.exit.i.i.cleanup_crit_edge:    ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @__put_page(ptr noundef %16) #13
  br label %cleanup

if.else:                                          ; preds = %entry
  %call.i46 = tail call ptr @read_cache_page(ptr noundef %1, i32 noundef 0, ptr noundef null, ptr noundef null) #13
  %cmp.i = icmp ugt ptr %call.i46, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.else.cleanup_crit_edge, label %if.else.if.end13_crit_edge

if.else.if.end13_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end13

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end13:                                         ; preds = %if.else.if.end13_crit_edge, %PageUptodate.exit
  %page.0 = phi ptr [ %call.i46, %if.else.if.end13_crit_edge ], [ %call.i, %PageUptodate.exit ]
  %20 = ptrtoint ptr %callback to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr @page_put_link, ptr %callback, align 4
  %arg2.i = getelementptr inbounds %struct.delayed_call, ptr %callback, i32 0, i32 1
  %21 = ptrtoint ptr %arg2.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %page.0, ptr %arg2.i, align 4
  %gfp_mask.i = getelementptr inbounds %struct.address_space, ptr %1, i32 0, i32 3
  %22 = ptrtoint ptr %gfp_mask.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %gfp_mask.i, align 4
  %and = and i32 %23, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool15.not = icmp eq i32 %and, 0
  br i1 %tobool15.not, label %do.end25, label %do.body19, !prof !362

do.body19:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4981, 0\0A.popsection", ""() #13, !srcloc !389
  unreachable

do.end25:                                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  %call26 = tail call ptr @page_address(ptr noundef %page.0) #13
  %i_size = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 14
  %24 = ptrtoint ptr %i_size to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %i_size, align 8
  %conv = trunc i64 %25 to i32
  %26 = tail call i32 @llvm.umin.i32(i32 %conv, i32 4095) #13
  %arrayidx.i = getelementptr i8, ptr %call26, i32 %26
  %27 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 0, ptr %arrayidx.i, align 1
  br label %cleanup

cleanup:                                          ; preds = %do.end25, %if.else.cleanup_crit_edge, %if.then.i4.i, %folio_put_testzero.exit.i.i.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi ptr [ %call26, %do.end25 ], [ %call.i46, %if.else.cleanup_crit_edge ], [ inttoptr (i32 -10 to ptr), %if.then.cleanup_crit_edge ], [ inttoptr (i32 -10 to ptr), %folio_put_testzero.exit.i.i.cleanup_crit_edge ], [ inttoptr (i32 -10 to ptr), %if.then.i4.i ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @page_put_link(ptr noundef %arg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %arg, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !362

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i = add i32 %2, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %3 = ptrtoint ptr %arg to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %3, %if.end.i.i ]
  %4 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %4, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #13
  %5 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp.i.i.i.i = icmp eq i32 %6, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !360

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %4, ptr noundef nonnull @.str.80) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #13, !srcloc !384
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !385
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #13
  %7 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #13, !srcloc !386
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %7, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !387
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@page_put_link, %if.then.i.i.i.i.i)) #13
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !388

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %4, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #13
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.put_page.exit_crit_edge

folio_put_testzero.exit.i.i.put_page.exit_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %put_page.exit

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @__put_page(ptr noundef %4) #13
  br label %put_page.exit

put_page.exit:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.put_page.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @page_readlink(ptr noundef %dentry, ptr noundef %buffer, i32 noundef %buflen) #0 align 64 {
entry:
  %done = alloca %struct.delayed_call, align 8
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %done) #13
  %0 = ptrtoint ptr %done to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 0, ptr %done, align 8
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %1 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %d_inode.i, align 8
  %call1 = call ptr @page_get_link(ptr noundef %dentry, ptr noundef %2, ptr noundef nonnull %done)
  %call2 = tail call i32 @readlink_copy(ptr noundef %buffer, i32 noundef %buflen, ptr noundef %call1)
  %3 = ptrtoint ptr %done to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %done, align 8
  %tobool.not.i = icmp eq ptr %4, null
  br i1 %tobool.not.i, label %entry.do_delayed_call.exit_crit_edge, label %if.then.i

entry.do_delayed_call.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %do_delayed_call.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %arg.i = getelementptr inbounds %struct.delayed_call, ptr %done, i32 0, i32 1
  %5 = ptrtoint ptr %arg.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arg.i, align 4
  tail call void %4(ptr noundef %6) #13
  br label %do_delayed_call.exit

do_delayed_call.exit:                             ; preds = %if.then.i, %entry.do_delayed_call.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %done) #13
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__page_symlink(ptr noundef %inode, ptr nocapture noundef readonly %symname, i32 noundef %len, i32 noundef %nofs) #0 align 64 {
entry:
  %page = alloca ptr, align 4
  %fsdata = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %i_mapping = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %0 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_mapping, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %page) #13
  %2 = ptrtoint ptr %page to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %page, align 4, !annotation !367
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %fsdata) #13
  %3 = ptrtoint ptr %fsdata to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr inttoptr (i32 -1 to ptr), ptr %fsdata, align 4, !annotation !367
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nofs)
  %tobool.not = icmp eq i32 %nofs, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 2
  %sub = add i32 %len, -1
  br label %retry

retry:                                            ; preds = %if.end10.retry_crit_edge, %entry
  %call = call i32 @pagecache_write_begin(ptr noundef null, ptr noundef %1, i64 noundef 0, i32 noundef %sub, i32 noundef %spec.select, ptr noundef nonnull %page, ptr noundef nonnull %fsdata) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not = icmp eq i32 %call, 0
  br i1 %tobool1.not, label %if.end3, label %retry.cleanup_crit_edge

retry.cleanup_crit_edge:                          ; preds = %retry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end3:                                          ; preds = %retry
  %4 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %page, align 4
  %call4 = call ptr @page_address(ptr noundef %5) #13
  %6 = call ptr @memcpy(ptr %call4, ptr %symname, i32 %sub)
  %7 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %page, align 4
  %9 = ptrtoint ptr %fsdata to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %fsdata, align 4
  %call8 = call i32 @pagecache_write_end(ptr noundef null, ptr noundef %1, i64 noundef 0, i32 noundef %sub, i32 noundef %sub, ptr noundef %8, ptr noundef %10) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %cmp = icmp slt i32 %call8, 0
  br i1 %cmp, label %if.end3.cleanup_crit_edge, label %if.end10

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end10:                                         ; preds = %if.end3
  %cmp12 = icmp slt i32 %call8, %sub
  br i1 %cmp12, label %if.end10.retry_crit_edge, label %if.end14

if.end10.retry_crit_edge:                         ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  br label %retry

if.end14:                                         ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  call void @__mark_inode_dirty(ptr noundef %inode, i32 noundef 7) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.end3.cleanup_crit_edge, %retry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end14 ], [ %call8, %if.end3.cleanup_crit_edge ], [ %call, %retry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %fsdata) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %page) #13
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pagecache_write_begin(ptr noundef, ptr noundef, i64 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pagecache_write_end(ptr noundef, ptr noundef, i64 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @page_symlink(ptr noundef %inode, ptr nocapture noundef readonly %symname, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %i_mapping = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %0 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_mapping, align 8
  %gfp_mask.i.i = getelementptr inbounds %struct.address_space, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gfp_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gfp_mask.i.i, align 4
  %and.i = lshr i32 %3, 7
  %and.i.lobit = and i32 %and.i, 1
  %4 = xor i32 %and.i.lobit, 1
  %call1 = tail call i32 @__page_symlink(ptr noundef %inode, ptr noundef %symname, i32 noundef %len, i32 noundef %4)
  ret i32 %call1
}

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #8

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @check_acl(ptr noundef %mnt_userns, ptr noundef %inode, i32 noundef %mask) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %mask, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end7, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call ptr @get_cached_acl_rcu(ptr noundef %inode, i32 noundef 32768) #13
  %tobool1.not = icmp eq ptr %call, null
  br i1 %tobool1.not, label %if.then.cleanup_crit_edge, label %if.end

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %if.then
  %0 = ptrtoint ptr %call to i32
  %and.i = and i32 %0, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.end5, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call6 = tail call i32 @posix_acl_permission(ptr noundef %mnt_userns, ptr noundef %inode, ptr noundef nonnull %call, i32 noundef %mask) #13
  br label %cleanup

if.end7:                                          ; preds = %entry
  %call8 = tail call ptr @get_acl(ptr noundef %inode, i32 noundef 32768) #13
  %cmp.i = icmp ugt ptr %call8, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  %1 = ptrtoint ptr %call8 to i32
  br label %cleanup

if.end12:                                         ; preds = %if.end7
  %tobool13.not = icmp eq ptr %call8, null
  br i1 %tobool13.not, label %if.end12.cleanup_crit_edge, label %land.lhs.true.i

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

land.lhs.true.i:                                  ; preds = %if.end12
  %call15 = tail call i32 @posix_acl_permission(ptr noundef %mnt_userns, ptr noundef %inode, ptr noundef nonnull %call8, i32 noundef %mask) #13
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call8, i32 noundef 4) #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !390
  tail call void @llvm.prefetch.p0(ptr nonnull %call8, i32 1, i32 3, i32 1) #13
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %call8, ptr nonnull %call8, i32 1, ptr nonnull elementtype(i32) %call8) #13, !srcloc !391
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %do.end.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.cleanup_crit_edge, label %if.then10.i.i.i.i, !prof !362

if.end5.i.i.i.i.cleanup_crit_edge:                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @refcount_warn_saturate(ptr noundef nonnull %call8, i32 noundef 3) #13
  br label %cleanup

do.end.i:                                         ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !392
  %a_rcu.i = getelementptr inbounds %struct.posix_acl, ptr %call8, i32 0, i32 1
  tail call void @kvfree_call_rcu(ptr noundef %a_rcu.i, ptr noundef nonnull inttoptr (i32 4 to ptr)) #13
  br label %cleanup

cleanup:                                          ; preds = %do.end.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.cleanup_crit_edge, %if.end12.cleanup_crit_edge, %if.then10, %if.end5, %if.end.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6, %if.end5 ], [ %1, %if.then10 ], [ -11, %if.then.cleanup_crit_edge ], [ -10, %if.end.cleanup_crit_edge ], [ -11, %if.end12.cleanup_crit_edge ], [ %call15, %if.end5.i.i.i.i.cleanup_crit_edge ], [ %call15, %if.then10.i.i.i.i ], [ %call15, %do.end.i ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @in_group_p([1 x i32]) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_cached_acl_rcu(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @posix_acl_permission(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_acl(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree_call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #10

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devcgroup_check_permission(i16 noundef signext, i32 noundef, i32 noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockref_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #11

; Function Attrs: null_pointer_is_valid
declare dso_local void @__register_sysctl_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @proc_dointvec_minmax(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @from_kuid(ptr noundef, [1 x i32]) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @make_kuid(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @from_kgid(ptr noundef, [1 x i32]) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @make_kgid(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__traverse_mounts(ptr noundef %path, i32 noundef %flags, ptr nocapture noundef writeonly %jumped, ptr noundef %count, i32 noundef %lookup_flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %path, align 4
  %dentry = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %and.i = and i32 %lookup_flags, 790
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i101 = icmp eq i32 %and.i, 0
  %tobool3.not.i = icmp eq ptr %count, null
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %cleanup, %entry
  %ret.0.ph = phi i32 [ %ret.1, %cleanup ], [ 0, %entry ]
  %need_mntput.0.off0.ph = phi i1 [ true, %cleanup ], [ false, %entry ]
  %flags.addr.0.ph = phi i32 [ %21, %cleanup ], [ %flags, %entry ]
  br label %while.cond

while.cond:                                       ; preds = %follow_automount.exit.while.cond_crit_edge, %while.cond.outer
  %ret.0 = phi i32 [ %retval.0.i, %follow_automount.exit.while.cond_crit_edge ], [ %ret.0.ph, %while.cond.outer ]
  %flags.addr.0 = phi i32 [ %35, %follow_automount.exit.while.cond_crit_edge ], [ %flags.addr.0.ph, %while.cond.outer ]
  %and = and i32 %flags.addr.0, 458752
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %while.cond.while.end_crit_edge, label %while.body

while.cond.while.end_crit_edge:                   ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.body:                                       ; preds = %while.cond
  %and2 = and i32 %flags.addr.0, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %while.body.if.end10_crit_edge, label %if.then

while.body.if.end10_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

if.then:                                          ; preds = %while.body
  %2 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dentry, align 4
  %d_op = getelementptr inbounds %struct.dentry, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %d_op to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %d_op, align 8
  %d_manage = getelementptr inbounds %struct.dentry_operations, ptr %5, i32 0, i32 11
  %6 = ptrtoint ptr %d_manage to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %d_manage, align 4
  %call = tail call i32 %7(ptr noundef %path, i1 noundef zeroext false) #13
  %8 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dentry, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %9, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !393
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then.while.end_crit_edge, label %if.then.if.end10_crit_edge

if.then.if.end10_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

if.then.while.end_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

if.end10:                                         ; preds = %if.then.if.end10_crit_edge, %while.body.if.end10_crit_edge
  %ret.1 = phi i32 [ %call, %if.then.if.end10_crit_edge ], [ %ret.0, %while.body.if.end10_crit_edge ]
  %flags.addr.1 = phi i32 [ %11, %if.then.if.end10_crit_edge ], [ %flags.addr.0, %while.body.if.end10_crit_edge ]
  %and11 = and i32 %flags.addr.1, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11)
  %tobool12.not = icmp eq i32 %and11, 0
  br i1 %tobool12.not, label %if.end10.if.end28_crit_edge, label %if.then13

if.end10.if.end28_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end28

if.then13:                                        ; preds = %if.end10
  %call14 = tail call ptr @lookup_mnt(ptr noundef %path) #13
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.then13.if.end28_crit_edge, label %if.then16

if.then13.if.end28_crit_edge:                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end28

if.then16:                                        ; preds = %if.then13
  %12 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dentry, align 4
  tail call void @dput(ptr noundef %13) #13
  br i1 %need_mntput.0.off0.ph, label %if.then19, label %if.then16.if.end21_crit_edge

if.then16.if.end21_crit_edge:                     ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end21

if.then19:                                        ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #15
  %14 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %path, align 4
  tail call void @mntput(ptr noundef %15) #13
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.then16.if.end21_crit_edge
  %16 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %call14, ptr %path, align 4
  %17 = ptrtoint ptr %call14 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %call14, align 4
  %tobool.not.i = icmp eq ptr %18, null
  br i1 %tobool.not.i, label %if.end21.cleanup_crit_edge, label %if.then.i

if.end21.cleanup_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then.i:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  %d_lockref.i = getelementptr inbounds %struct.dentry, ptr %18, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i) #13
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.end21.cleanup_crit_edge
  %19 = ptrtoint ptr %dentry to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %18, ptr %dentry, align 4
  %20 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %18, align 8
  br label %while.cond.outer

if.end28:                                         ; preds = %if.then13.if.end28_crit_edge, %if.end10.if.end28_crit_edge
  %and29 = and i32 %flags.addr.1, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29)
  %tobool30.not = icmp eq i32 %and29, 0
  br i1 %tobool30.not, label %if.end28.while.end_crit_edge, label %if.end32

if.end28.while.end_crit_edge:                     ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

if.end32:                                         ; preds = %if.end28
  %22 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %dentry, align 4
  br i1 %tobool.not.i101, label %land.lhs.true.i, label %if.end32.if.end.i_crit_edge

if.end32.if.end.i_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %if.end32
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %23, i32 0, i32 5
  %24 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %d_inode.i, align 8
  %tobool2.not.i = icmp eq ptr %25, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.end.i_crit_edge, label %land.lhs.true.i.follow_automount.exit_crit_edge

land.lhs.true.i.follow_automount.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %follow_automount.exit

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %if.end32.if.end.i_crit_edge
  br i1 %tobool3.not.i, label %if.end.i.if.end6.i_crit_edge, label %land.lhs.true4.i

if.end.i.if.end6.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end6.i

land.lhs.true4.i:                                 ; preds = %if.end.i
  %26 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %count, align 4
  %inc.i = add i32 %27, 1
  store i32 %inc.i, ptr %count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 39, i32 %27)
  %cmp.i = icmp sgt i32 %27, 39
  br i1 %cmp.i, label %land.lhs.true4.i.follow_automount.exit_crit_edge, label %land.lhs.true4.i.if.end6.i_crit_edge

land.lhs.true4.i.if.end6.i_crit_edge:             ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end6.i

land.lhs.true4.i.follow_automount.exit_crit_edge: ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %follow_automount.exit

if.end6.i:                                        ; preds = %land.lhs.true4.i.if.end6.i_crit_edge, %if.end.i.if.end6.i_crit_edge
  %d_op.i = getelementptr inbounds %struct.dentry, ptr %23, i32 0, i32 8
  %28 = ptrtoint ptr %d_op.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %d_op.i, align 8
  %d_automount.i = getelementptr inbounds %struct.dentry_operations, ptr %29, i32 0, i32 10
  %30 = ptrtoint ptr %d_automount.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %d_automount.i, align 8
  %call.i = tail call ptr %31(ptr noundef %path) #13
  %call7.i = tail call i32 @finish_automount(ptr noundef %call.i, ptr noundef %path) #13
  br label %follow_automount.exit

follow_automount.exit:                            ; preds = %if.end6.i, %land.lhs.true4.i.follow_automount.exit_crit_edge, %land.lhs.true.i.follow_automount.exit_crit_edge
  %retval.0.i = phi i32 [ %call7.i, %if.end6.i ], [ -21, %land.lhs.true.i.follow_automount.exit_crit_edge ], [ -40, %land.lhs.true4.i.follow_automount.exit_crit_edge ]
  %32 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %dentry, align 4
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %33, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !394
  %cmp45 = icmp slt i32 %retval.0.i, 0
  br i1 %cmp45, label %follow_automount.exit.while.end_crit_edge, label %follow_automount.exit.while.cond_crit_edge

follow_automount.exit.while.cond_crit_edge:       ; preds = %follow_automount.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond

follow_automount.exit.while.end_crit_edge:        ; preds = %follow_automount.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.end:                                        ; preds = %follow_automount.exit.while.end_crit_edge, %if.end28.while.end_crit_edge, %if.then.while.end_crit_edge, %while.cond.while.end_crit_edge
  %ret.2 = phi i32 [ %call, %if.then.while.end_crit_edge ], [ %retval.0.i, %follow_automount.exit.while.end_crit_edge ], [ %ret.1, %if.end28.while.end_crit_edge ], [ %ret.0, %while.cond.while.end_crit_edge ]
  %flags.addr.4 = phi i32 [ %11, %if.then.while.end_crit_edge ], [ %35, %follow_automount.exit.while.end_crit_edge ], [ %flags.addr.1, %if.end28.while.end_crit_edge ], [ %flags.addr.0, %while.cond.while.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -21, i32 %ret.2)
  %cmp48 = icmp eq i32 %ret.2, -21
  %spec.store.select = select i1 %cmp48, i32 0, i32 %ret.2
  br i1 %need_mntput.0.off0.ph, label %land.lhs.true, label %while.end.if.end56_crit_edge

while.end.if.end56_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end56

land.lhs.true:                                    ; preds = %while.end
  %36 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %path, align 4
  %cmp53 = icmp eq ptr %37, %1
  br i1 %cmp53, label %if.then54, label %land.lhs.true.if.end56_crit_edge

land.lhs.true.if.end56_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end56

if.then54:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @mntput(ptr noundef %1) #13
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %land.lhs.true.if.end56_crit_edge, %while.end.if.end56_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.store.select)
  %tobool57.not = icmp eq i32 %spec.store.select, 0
  br i1 %tobool57.not, label %land.lhs.true58, label %if.end56.if.end63_crit_edge

if.end56.if.end63_crit_edge:                      ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end63

land.lhs.true58:                                  ; preds = %if.end56
  %and.i102 = and i32 %flags.addr.4, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i102)
  %cmp.i103 = icmp eq i32 %and.i102, 0
  br i1 %cmp.i103, label %if.then62, label %land.lhs.true58.if.end63_crit_edge, !prof !360

land.lhs.true58.if.end63_crit_edge:               ; preds = %land.lhs.true58
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end63

if.then62:                                        ; preds = %land.lhs.true58
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end63

if.end63:                                         ; preds = %if.then62, %land.lhs.true58.if.end63_crit_edge, %if.end56.if.end63_crit_edge
  %ret.3 = phi i32 [ %spec.store.select, %if.end56.if.end63_crit_edge ], [ -2, %if.then62 ], [ 0, %land.lhs.true58.if.end63_crit_edge ]
  %frombool = zext i1 %need_mntput.0.off0.ph to i8
  %38 = ptrtoint ptr %jumped to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 %frombool, ptr %jumped, align 1
  ret i32 %ret.3
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @finish_automount(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @path_init(ptr noundef %nd, i32 noundef %flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %name = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 14
  %0 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %name, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %and = and i32 %flags, 2097216
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %and)
  %cmp = icmp eq i32 %and, 2097152
  br i1 %cmp, label %entry.cleanup291_crit_edge, label %if.end

entry.cleanup291_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup291

if.end:                                           ; preds = %entry
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not = icmp eq i8 %5, 0
  %and3 = and i32 %flags, -65
  %spec.select = select i1 %tobool.not, i32 %and3, i32 %flags
  %and5 = and i32 %spec.select, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  br i1 %tobool6.not, label %if.end.if.end8_crit_edge, label %if.then7

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8

if.then7:                                         ; preds = %if.end
  %6 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i.i.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %9, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !395
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #13
  %call.i = tail call zeroext i1 @rcu_is_watching() #13
  br i1 %call.i, label %if.then7.if.end8_crit_edge, label %land.lhs.true.i

if.then7.if.end8_crit_edge:                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8

land.lhs.true.i:                                  ; preds = %if.then7
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.if.end8_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.if.end8_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.if.end8_crit_edge, label %if.then.i

land.lhs.true2.i.if.end8_crit_edge:               ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.51, i32 noundef 696, ptr noundef nonnull @.str.52) #13
  br label %if.end8

if.end8:                                          ; preds = %if.then.i, %land.lhs.true2.i.if.end8_crit_edge, %land.lhs.true.i.if.end8_crit_edge, %if.then7.if.end8_crit_edge, %if.end.if.end8_crit_edge
  %flags9 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %10 = ptrtoint ptr %flags9 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %spec.select, ptr %flags9, align 4
  %state = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 5
  %11 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %state, align 8
  %or = or i32 %12, 4
  store i32 %or, ptr %state, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mount_lock to i32))
  %13 = load volatile i32, ptr @mount_lock, align 4
  %and11391 = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11391)
  %tobool12.not392 = icmp eq i32 %and11391, 0
  br i1 %tobool12.not392, label %if.end8.while.end_crit_edge, label %if.end8.do.end_crit_edge

if.end8.do.end_crit_edge:                         ; preds = %if.end8
  br label %do.end

if.end8.while.end_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

do.end:                                           ; preds = %do.end.do.end_crit_edge, %if.end8.do.end_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !396
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #13, !srcloc !397
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mount_lock to i32))
  %14 = load volatile i32, ptr @mount_lock, align 4
  %and11 = and i32 %14, 1
  %tobool12.not = icmp eq i32 %and11, 0
  br i1 %tobool12.not, label %do.end.while.end_crit_edge, label %do.end.do.end_crit_edge

do.end.do.end_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

do.end.while.end_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.end:                                        ; preds = %do.end.while.end_crit_edge, %if.end8.while.end_crit_edge
  %.lcssa390 = phi i32 [ %13, %if.end8.while.end_crit_edge ], [ %14, %do.end.while.end_crit_edge ]
  %m_seq = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 7
  %15 = ptrtoint ptr %m_seq to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %.lcssa390, ptr %m_seq, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rename_lock to i32))
  %16 = load volatile i32, ptr @rename_lock, align 4
  %and22393 = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22393)
  %tobool23.not394 = icmp eq i32 %and22393, 0
  br i1 %tobool23.not394, label %while.end.while.end34_crit_edge, label %while.end.do.end29_crit_edge

while.end.do.end29_crit_edge:                     ; preds = %while.end
  br label %do.end29

while.end.while.end34_crit_edge:                  ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end34

do.end29:                                         ; preds = %do.end29.do.end29_crit_edge, %while.end.do.end29_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !398
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #13, !srcloc !399
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rename_lock to i32))
  %17 = load volatile i32, ptr @rename_lock, align 4
  %and22 = and i32 %17, 1
  %tobool23.not = icmp eq i32 %and22, 0
  br i1 %tobool23.not, label %do.end29.while.end34_crit_edge, label %do.end29.do.end29_crit_edge

do.end29.do.end29_crit_edge:                      ; preds = %do.end29
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end29

do.end29.while.end34_crit_edge:                   ; preds = %do.end29
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end34

while.end34:                                      ; preds = %do.end29.while.end34_crit_edge, %while.end.while.end34_crit_edge
  %.lcssa389 = phi i32 [ %16, %while.end.while.end34_crit_edge ], [ %17, %do.end29.while.end34_crit_edge ]
  %r_seq = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 8
  %18 = ptrtoint ptr %r_seq to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %.lcssa389, ptr %r_seq, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !400
  %19 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %state, align 8
  %and43 = and i32 %20, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and43)
  %tobool44.not = icmp eq i32 %and43, 0
  %root96 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2
  br i1 %tobool44.not, label %if.end95, label %if.then45

if.then45:                                        ; preds = %while.end34
  %dentry = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2, i32 1
  %21 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %dentry, align 4
  %d_inode = getelementptr inbounds %struct.dentry, ptr %22, i32 0, i32 5
  %23 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %d_inode, align 8
  %25 = ptrtoint ptr %3 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool47.not = icmp eq i8 %26, 0
  br i1 %tobool47.not, label %if.then45.if.end54_crit_edge, label %land.lhs.true

if.then45.if.end54_crit_edge:                     ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end54

land.lhs.true:                                    ; preds = %if.then45
  %27 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %22, align 8
  %and.i.i = and i32 %28, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %and.i.i)
  %cmp.i = icmp eq i32 %and.i.i, 2097152
  br i1 %cmp.i, label %land.lhs.true.if.end54_crit_edge, label %land.lhs.true.cleanup291_crit_edge, !prof !362

land.lhs.true.cleanup291_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup291

land.lhs.true.if.end54_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end54

if.end54:                                         ; preds = %land.lhs.true.if.end54_crit_edge, %if.then45.if.end54_crit_edge
  %29 = ptrtoint ptr %root96 to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %root96, align 8
  %31 = ptrtoint ptr %nd to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %30, ptr %nd, align 8
  %inode56 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 3
  %32 = ptrtoint ptr %inode56 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %24, ptr %inode56, align 8
  br i1 %tobool6.not, label %if.else, label %if.then59

if.then59:                                        ; preds = %if.end54
  %dentry61 = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %33 = ptrtoint ptr %dentry61 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %dentry61, align 4
  %d_seq = getelementptr inbounds %struct.dentry, ptr %34, i32 0, i32 1
  tail call fastcc void @seqcount_lockdep_reader_access(ptr noundef %d_seq)
  %35 = ptrtoint ptr %dentry61 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %dentry61, align 4
  %d_seq68396 = getelementptr inbounds %struct.dentry, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %d_seq68396 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %d_seq68396, align 4
  %and70397 = and i32 %38, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and70397)
  %tobool71.not398 = icmp eq i32 %and70397, 0
  br i1 %tobool71.not398, label %if.then59.while.end82_crit_edge, label %if.then59.do.end77_crit_edge

if.then59.do.end77_crit_edge:                     ; preds = %if.then59
  br label %do.end77

if.then59.while.end82_crit_edge:                  ; preds = %if.then59
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end82

do.end77:                                         ; preds = %do.end77.do.end77_crit_edge, %if.then59.do.end77_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !401
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #13, !srcloc !402
  %39 = ptrtoint ptr %dentry61 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %dentry61, align 4
  %d_seq68 = getelementptr inbounds %struct.dentry, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %d_seq68 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %d_seq68, align 4
  %and70 = and i32 %42, 1
  %tobool71.not = icmp eq i32 %and70, 0
  br i1 %tobool71.not, label %do.end77.while.end82_crit_edge, label %do.end77.do.end77_crit_edge

do.end77.do.end77_crit_edge:                      ; preds = %do.end77
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end77

do.end77.while.end82_crit_edge:                   ; preds = %do.end77
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end82

while.end82:                                      ; preds = %do.end77.while.end82_crit_edge, %if.then59.while.end82_crit_edge
  %.lcssa388 = phi i32 [ %38, %if.then59.while.end82_crit_edge ], [ %42, %do.end77.while.end82_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !403
  %seq = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 6
  %43 = ptrtoint ptr %seq to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %.lcssa388, ptr %seq, align 4
  %root_seq = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 16
  %44 = ptrtoint ptr %root_seq to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %.lcssa388, ptr %root_seq, align 8
  br label %cleanup291

if.else:                                          ; preds = %if.end54
  %45 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %nd, align 4
  %call.i361 = tail call ptr @mntget(ptr noundef %46) #13
  %dentry.i = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %47 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %dentry.i, align 4
  %tobool.not.i.i = icmp eq ptr %48, null
  br i1 %tobool.not.i.i, label %if.else.cleanup291_crit_edge, label %if.then.i.i

if.else.cleanup291_crit_edge:                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup291

if.then.i.i:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  %d_lockref.i.i = getelementptr inbounds %struct.dentry, ptr %48, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i.i) #13
  br label %cleanup291

if.end95:                                         ; preds = %while.end34
  %49 = ptrtoint ptr %root96 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr null, ptr %root96, align 8
  %50 = ptrtoint ptr %3 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 47, i8 %51)
  %cmp98 = icmp eq i8 %51, 47
  %and101 = and i32 %spec.select, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and101)
  %tobool102.not = icmp eq i32 %and101, 0
  %or.cond = select i1 %cmp98, i1 %tobool102.not, i1 false
  br i1 %or.cond, label %if.then103, label %if.end115

if.then103:                                       ; preds = %if.end95
  %call104 = tail call fastcc i32 @nd_jump_root(ptr noundef %nd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call104)
  %tobool105.not = icmp eq i32 %call104, 0
  br i1 %tobool105.not, label %if.then103.cleanup291_crit_edge, label %if.then112, !prof !362

if.then103.cleanup291_crit_edge:                  ; preds = %if.then103
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup291

if.then112:                                       ; preds = %if.then103
  call void @__sanitizer_cov_trace_pc() #15
  %52 = inttoptr i32 %call104 to ptr
  br label %cleanup291

if.end115:                                        ; preds = %if.end95
  %dfd = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 17
  %53 = ptrtoint ptr %dfd to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %dfd, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -100, i32 %54)
  %cmp116 = icmp eq i32 %54, -100
  br i1 %cmp116, label %if.then118, label %if.else197

if.then118:                                       ; preds = %if.end115
  %55 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i362 = and i32 %55, -16384
  %56 = inttoptr i32 %and.i362 to ptr
  %task189 = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 2
  %57 = ptrtoint ptr %task189 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %task189, align 8
  %fs190 = getelementptr inbounds %struct.task_struct, ptr %58, i32 0, i32 107
  %59 = ptrtoint ptr %fs190 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %fs190, align 128
  br i1 %tobool6.not, label %if.else187, label %if.then121

if.then121:                                       ; preds = %if.then118
  %seq180 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 6
  %seq126 = getelementptr inbounds %struct.fs_struct, ptr %60, i32 0, i32 2
  %pwd = getelementptr inbounds %struct.fs_struct, ptr %60, i32 0, i32 6
  %dentry157 = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %inode159 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 3
  br label %do.body125

do.body125:                                       ; preds = %while.end178.do.body125_crit_edge, %if.then121
  tail call fastcc void @seqcount_lockdep_reader_access(ptr noundef %seq126)
  %61 = ptrtoint ptr %seq126 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %seq126, align 4
  %and134404 = and i32 %62, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and134404)
  %tobool135.not405 = icmp eq i32 %and134404, 0
  br i1 %tobool135.not405, label %do.body125.while.end146_crit_edge, label %do.body125.do.end141_crit_edge

do.body125.do.end141_crit_edge:                   ; preds = %do.body125
  br label %do.end141

do.body125.while.end146_crit_edge:                ; preds = %do.body125
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end146

do.end141:                                        ; preds = %do.end141.do.end141_crit_edge, %do.body125.do.end141_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !404
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #13, !srcloc !405
  %63 = ptrtoint ptr %seq126 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %seq126, align 4
  %and134 = and i32 %64, 1
  %tobool135.not = icmp eq i32 %and134, 0
  br i1 %tobool135.not, label %do.end141.while.end146_crit_edge, label %do.end141.do.end141_crit_edge

do.end141.do.end141_crit_edge:                    ; preds = %do.end141
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end141

do.end141.while.end146_crit_edge:                 ; preds = %do.end141
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end146

while.end146:                                     ; preds = %do.end141.while.end146_crit_edge, %do.body125.while.end146_crit_edge
  %.lcssa = phi i32 [ %62, %do.body125.while.end146_crit_edge ], [ %64, %do.end141.while.end146_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !406
  %65 = ptrtoint ptr %pwd to i32
  call void @__asan_loadN_noabort(i32 %65, i32 8)
  %66 = load i64, ptr %pwd, align 4
  %67 = ptrtoint ptr %nd to i32
  call void @__asan_store8_noabort(i32 %67)
  store i64 %66, ptr %nd, align 8
  %68 = trunc i64 %66 to i32
  %69 = inttoptr i32 %68 to ptr
  %d_inode158 = getelementptr inbounds %struct.dentry, ptr %69, i32 0, i32 5
  %70 = ptrtoint ptr %d_inode158 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %d_inode158, align 8
  %72 = ptrtoint ptr %inode159 to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %71, ptr %inode159, align 8
  %d_seq164407 = getelementptr inbounds %struct.dentry, ptr %69, i32 0, i32 1
  %73 = ptrtoint ptr %d_seq164407 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load volatile i32, ptr %d_seq164407, align 4
  %and166408 = and i32 %74, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and166408)
  %tobool167.not409 = icmp eq i32 %and166408, 0
  br i1 %tobool167.not409, label %while.end146.while.end178_crit_edge, label %while.end146.do.end173_crit_edge

while.end146.do.end173_crit_edge:                 ; preds = %while.end146
  br label %do.end173

while.end146.while.end178_crit_edge:              ; preds = %while.end146
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end178

do.end173:                                        ; preds = %do.end173.do.end173_crit_edge, %while.end146.do.end173_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !407
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #13, !srcloc !408
  %75 = ptrtoint ptr %dentry157 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %dentry157, align 4
  %d_seq164 = getelementptr inbounds %struct.dentry, ptr %76, i32 0, i32 1
  %77 = ptrtoint ptr %d_seq164 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %d_seq164, align 4
  %and166 = and i32 %78, 1
  %tobool167.not = icmp eq i32 %and166, 0
  br i1 %tobool167.not, label %do.end173.while.end178_crit_edge, label %do.end173.do.end173_crit_edge

do.end173.do.end173_crit_edge:                    ; preds = %do.end173
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end173

do.end173.while.end178_crit_edge:                 ; preds = %do.end173
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end178

while.end178:                                     ; preds = %do.end173.while.end178_crit_edge, %while.end146.while.end178_crit_edge
  %.lcssa386 = phi i32 [ %74, %while.end146.while.end178_crit_edge ], [ %78, %do.end173.while.end178_crit_edge ]
  %79 = ptrtoint ptr %seq180 to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %.lcssa386, ptr %seq180, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !409
  %80 = ptrtoint ptr %seq126 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile i32, ptr %seq126, align 4
  %cmp.i.i.not = icmp eq i32 %81, %.lcssa
  br i1 %cmp.i.i.not, label %while.end178.if.end274_crit_edge, label %while.end178.do.body125_crit_edge

while.end178.do.body125_crit_edge:                ; preds = %while.end178
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body125

while.end178.if.end274_crit_edge:                 ; preds = %while.end178
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end274

if.else187:                                       ; preds = %if.then118
  %lock.i = getelementptr inbounds %struct.fs_struct, ptr %60, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %lock.i) #13
  %pwd1.i = getelementptr inbounds %struct.fs_struct, ptr %60, i32 0, i32 6
  %82 = ptrtoint ptr %pwd1.i to i32
  call void @__asan_loadN_noabort(i32 %82, i32 8)
  %83 = load i64, ptr %pwd1.i, align 4
  %84 = ptrtoint ptr %nd to i32
  call void @__asan_storeN_noabort(i32 %84, i32 8)
  store i64 %83, ptr %nd, align 4
  %85 = lshr i64 %83, 32
  %86 = trunc i64 %85 to i32
  %87 = inttoptr i32 %86 to ptr
  %call.i.i = tail call ptr @mntget(ptr noundef %87) #13
  %dentry.i.i = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %88 = ptrtoint ptr %dentry.i.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %dentry.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %89, null
  br i1 %tobool.not.i.i.i, label %if.else187.if.end274.thread_crit_edge, label %if.then.i.i.i

if.else187.if.end274.thread_crit_edge:            ; preds = %if.else187
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end274.thread

if.then.i.i.i:                                    ; preds = %if.else187
  call void @__sanitizer_cov_trace_pc() #15
  %d_lockref.i.i.i = getelementptr inbounds %struct.dentry, ptr %89, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i.i.i) #13
  br label %if.end274.thread

if.else197:                                       ; preds = %if.end115
  %call.i363 = tail call i32 @__fdget_raw(i32 noundef %54) #13, !noalias !410
  %and.i.i364 = and i32 %call.i363, -4
  %90 = inttoptr i32 %and.i.i364 to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i364)
  %tobool200.not = icmp eq i32 %and.i.i364, 0
  br i1 %tobool200.not, label %if.else197.cleanup291_crit_edge, label %if.end203

if.else197.cleanup291_crit_edge:                  ; preds = %if.else197
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup291

if.end203:                                        ; preds = %if.else197
  %91 = ptrtoint ptr %3 to i32
  call void @__asan_load1_noabort(i32 %91)
  %92 = load i8, ptr %3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %92)
  %tobool207.not = icmp eq i8 %92, 0
  br i1 %tobool207.not, label %if.end203.if.end220_crit_edge, label %land.lhs.true208

if.end203.if.end220_crit_edge:                    ; preds = %if.end203
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end220

land.lhs.true208:                                 ; preds = %if.end203
  %dentry205 = getelementptr inbounds %struct.file, ptr %90, i32 0, i32 1, i32 1
  %93 = ptrtoint ptr %dentry205 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %dentry205, align 4
  %95 = ptrtoint ptr %94 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %94, align 8
  %and.i.i365 = and i32 %96, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %and.i.i365)
  %cmp.i366 = icmp eq i32 %and.i.i365, 2097152
  br i1 %cmp.i366, label %land.lhs.true208.if.end220_crit_edge, label %if.then218, !prof !362

land.lhs.true208.if.end220_crit_edge:             ; preds = %land.lhs.true208
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end220

if.then218:                                       ; preds = %land.lhs.true208
  %and.i367 = and i32 %call.i363, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i367)
  %tobool.not.i368 = icmp eq i32 %and.i367, 0
  br i1 %tobool.not.i368, label %if.then218.cleanup291_crit_edge, label %if.then.i369

if.then218.cleanup291_crit_edge:                  ; preds = %if.then218
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup291

if.then.i369:                                     ; preds = %if.then218
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @fput(ptr noundef nonnull %90) #13
  br label %cleanup291

if.end220:                                        ; preds = %land.lhs.true208.if.end220_crit_edge, %if.end203.if.end220_crit_edge
  %f_path223 = getelementptr inbounds %struct.file, ptr %90, i32 0, i32 1
  %97 = ptrtoint ptr %f_path223 to i32
  call void @__asan_load8_noabort(i32 %97)
  %98 = load i64, ptr %f_path223, align 8
  %99 = ptrtoint ptr %nd to i32
  call void @__asan_store8_noabort(i32 %99)
  store i64 %98, ptr %nd, align 8
  br i1 %tobool6.not, label %if.else265, label %if.then226

if.then226:                                       ; preds = %if.end220
  %dentry228 = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %100 = ptrtoint ptr %dentry228 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %dentry228, align 4
  %d_inode229 = getelementptr inbounds %struct.dentry, ptr %101, i32 0, i32 5
  %102 = ptrtoint ptr %d_inode229 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %d_inode229, align 8
  %inode230 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 3
  %104 = ptrtoint ptr %inode230 to i32
  call void @__asan_store4_noabort(i32 %104)
  store ptr %103, ptr %inode230, align 8
  %d_seq233 = getelementptr inbounds %struct.dentry, ptr %101, i32 0, i32 1
  tail call fastcc void @seqcount_lockdep_reader_access(ptr noundef %d_seq233)
  %105 = ptrtoint ptr %dentry228 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %dentry228, align 4
  %d_seq241400 = getelementptr inbounds %struct.dentry, ptr %106, i32 0, i32 1
  %107 = ptrtoint ptr %d_seq241400 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile i32, ptr %d_seq241400, align 4
  %and243401 = and i32 %108, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and243401)
  %tobool244.not402 = icmp eq i32 %and243401, 0
  br i1 %tobool244.not402, label %if.then226.while.end255_crit_edge, label %if.then226.do.end250_crit_edge

if.then226.do.end250_crit_edge:                   ; preds = %if.then226
  br label %do.end250

if.then226.while.end255_crit_edge:                ; preds = %if.then226
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end255

do.end250:                                        ; preds = %do.end250.do.end250_crit_edge, %if.then226.do.end250_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !413
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #13, !srcloc !414
  %109 = ptrtoint ptr %dentry228 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %dentry228, align 4
  %d_seq241 = getelementptr inbounds %struct.dentry, ptr %110, i32 0, i32 1
  %111 = ptrtoint ptr %d_seq241 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load volatile i32, ptr %d_seq241, align 4
  %and243 = and i32 %112, 1
  %tobool244.not = icmp eq i32 %and243, 0
  br i1 %tobool244.not, label %do.end250.while.end255_crit_edge, label %do.end250.do.end250_crit_edge

do.end250.do.end250_crit_edge:                    ; preds = %do.end250
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end250

do.end250.while.end255_crit_edge:                 ; preds = %do.end250
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end255

while.end255:                                     ; preds = %do.end250.while.end255_crit_edge, %if.then226.while.end255_crit_edge
  %.lcssa387 = phi i32 [ %108, %if.then226.while.end255_crit_edge ], [ %112, %do.end250.while.end255_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !415
  %seq264 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 6
  %113 = ptrtoint ptr %seq264 to i32
  call void @__asan_store4_noabort(i32 %113)
  store i32 %.lcssa387, ptr %seq264, align 4
  br label %if.end271

if.else265:                                       ; preds = %if.end220
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @path_get(ptr noundef %nd)
  %dentry268 = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %114 = ptrtoint ptr %dentry268 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %dentry268, align 4
  %d_inode269 = getelementptr inbounds %struct.dentry, ptr %115, i32 0, i32 5
  %116 = ptrtoint ptr %d_inode269 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %d_inode269, align 8
  %inode270 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 3
  %118 = ptrtoint ptr %inode270 to i32
  call void @__asan_store4_noabort(i32 %118)
  store ptr %117, ptr %inode270, align 8
  br label %if.end271

if.end271:                                        ; preds = %if.else265, %while.end255
  %and.i370 = and i32 %call.i363, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i370)
  %tobool.not.i371 = icmp eq i32 %and.i370, 0
  br i1 %tobool.not.i371, label %if.end271.if.end274_crit_edge, label %if.then.i372

if.end271.if.end274_crit_edge:                    ; preds = %if.end271
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end274

if.then.i372:                                     ; preds = %if.end271
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @fput(ptr noundef nonnull %90) #13
  br label %if.end274

if.end274:                                        ; preds = %if.then.i372, %if.end271.if.end274_crit_edge, %while.end178.if.end274_crit_edge
  %and275 = and i32 %spec.select, 1572864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and275)
  %tobool276.not = icmp eq i32 %and275, 0
  br i1 %tobool276.not, label %if.end274.cleanup291_crit_edge, label %if.then277

if.end274.cleanup291_crit_edge:                   ; preds = %if.end274
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup291

if.end274.thread:                                 ; preds = %if.then.i.i.i, %if.else187.if.end274.thread_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %lock.i) #13
  %119 = ptrtoint ptr %dentry.i.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %dentry.i.i, align 4
  %d_inode194 = getelementptr inbounds %struct.dentry, ptr %120, i32 0, i32 5
  %121 = ptrtoint ptr %d_inode194 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %d_inode194, align 8
  %inode195 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 3
  %123 = ptrtoint ptr %inode195 to i32
  call void @__asan_store4_noabort(i32 %123)
  store ptr %122, ptr %inode195, align 8
  %and275384 = and i32 %spec.select, 1572864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and275384)
  %tobool276.not385 = icmp eq i32 %and275384, 0
  br i1 %tobool276.not385, label %if.end274.thread.cleanup291_crit_edge, label %if.then277.thread

if.end274.thread.cleanup291_crit_edge:            ; preds = %if.end274.thread
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup291

if.then277.thread:                                ; preds = %if.end274.thread
  call void @__sanitizer_cov_trace_pc() #15
  %124 = ptrtoint ptr %nd to i32
  call void @__asan_load8_noabort(i32 %124)
  %125 = load i64, ptr %nd, align 8
  %126 = ptrtoint ptr %root96 to i32
  call void @__asan_store8_noabort(i32 %126)
  store i64 %125, ptr %root96, align 8
  br label %if.else285

if.then277:                                       ; preds = %if.end274
  %127 = ptrtoint ptr %nd to i32
  call void @__asan_load8_noabort(i32 %127)
  %128 = load i64, ptr %nd, align 8
  %129 = ptrtoint ptr %root96 to i32
  call void @__asan_store8_noabort(i32 %129)
  store i64 %128, ptr %root96, align 8
  br i1 %tobool6.not, label %if.then277.if.else285_crit_edge, label %if.then282

if.then277.if.else285_crit_edge:                  ; preds = %if.then277
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else285

if.then282:                                       ; preds = %if.then277
  call void @__sanitizer_cov_trace_pc() #15
  %seq283 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 6
  %130 = ptrtoint ptr %seq283 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %seq283, align 4
  %root_seq284 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 16
  %132 = ptrtoint ptr %root_seq284 to i32
  call void @__asan_store4_noabort(i32 %132)
  store i32 %131, ptr %root_seq284, align 8
  br label %cleanup291

if.else285:                                       ; preds = %if.then277.if.else285_crit_edge, %if.then277.thread
  %133 = ptrtoint ptr %root96 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %root96, align 4
  %call.i374 = tail call ptr @mntget(ptr noundef %134) #13
  %dentry.i375 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2, i32 1
  %135 = ptrtoint ptr %dentry.i375 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %dentry.i375, align 4
  %tobool.not.i.i376 = icmp eq ptr %136, null
  br i1 %tobool.not.i.i376, label %if.else285.path_get.exit379_crit_edge, label %if.then.i.i378

if.else285.path_get.exit379_crit_edge:            ; preds = %if.else285
  call void @__sanitizer_cov_trace_pc() #15
  br label %path_get.exit379

if.then.i.i378:                                   ; preds = %if.else285
  call void @__sanitizer_cov_trace_pc() #15
  %d_lockref.i.i377 = getelementptr inbounds %struct.dentry, ptr %136, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i.i377) #13
  br label %path_get.exit379

path_get.exit379:                                 ; preds = %if.then.i.i378, %if.else285.path_get.exit379_crit_edge
  %137 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %state, align 8
  %or288 = or i32 %138, 2
  store i32 %or288, ptr %state, align 8
  br label %cleanup291

cleanup291:                                       ; preds = %path_get.exit379, %if.then282, %if.end274.thread.cleanup291_crit_edge, %if.end274.cleanup291_crit_edge, %if.then.i369, %if.then218.cleanup291_crit_edge, %if.else197.cleanup291_crit_edge, %if.then112, %if.then103.cleanup291_crit_edge, %if.then.i.i, %if.else.cleanup291_crit_edge, %while.end82, %land.lhs.true.cleanup291_crit_edge, %entry.cleanup291_crit_edge
  %retval.2 = phi ptr [ %52, %if.then112 ], [ %3, %while.end82 ], [ %3, %if.then103.cleanup291_crit_edge ], [ %3, %if.then282 ], [ %3, %path_get.exit379 ], [ %3, %if.end274.cleanup291_crit_edge ], [ inttoptr (i32 -11 to ptr), %entry.cleanup291_crit_edge ], [ inttoptr (i32 -20 to ptr), %land.lhs.true.cleanup291_crit_edge ], [ %3, %if.else.cleanup291_crit_edge ], [ %3, %if.then.i.i ], [ %3, %if.end274.thread.cleanup291_crit_edge ], [ inttoptr (i32 -20 to ptr), %if.then.i369 ], [ inttoptr (i32 -20 to ptr), %if.then218.cleanup291_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.else197.cleanup291_crit_edge ]
  ret ptr %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @handle_lookup_down(ptr noundef %nd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = and i32 %1, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  %dentry = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %2 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dentry, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %if.then.if.end_crit_edge, label %if.then.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %d_lockref.i = getelementptr inbounds %struct.dentry, ptr %3, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i) #13
  br label %if.end

if.end:                                           ; preds = %if.then.i, %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  %dentry2 = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %4 = ptrtoint ptr %dentry2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dentry2, align 4
  %inode = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 3
  %6 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %inode, align 8
  %seq = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 6
  %8 = ptrtoint ptr %seq to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %seq, align 4
  %call3 = tail call fastcc ptr @step_into(ptr noundef %nd, i32 noundef 4, ptr noundef %5, ptr noundef %7, i32 noundef %9)
  %10 = ptrtoint ptr %call3 to i32
  ret i32 %10
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @link_path_walk(ptr noundef %name, ptr noundef %nd) unnamed_addr #0 align 64 {
entry:
  %this = alloca %struct.qstr, align 8
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %last_type = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 9
  %0 = ptrtoint ptr %last_type to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 1, ptr %last_type, align 8
  %flags = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %1 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags, align 4
  %or = or i32 %2, 16
  store i32 %or, ptr %flags, align 4
  %cmp.i = icmp ugt ptr %name, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %entry.while.cond_crit_edge

entry.while.cond_crit_edge:                       ; preds = %entry
  br label %while.cond

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %3 = ptrtoint ptr %name to i32
  br label %cleanup139

while.cond:                                       ; preds = %while.body, %entry.while.cond_crit_edge
  %name.addr.0 = phi ptr [ %incdec.ptr, %while.body ], [ %name, %entry.while.cond_crit_edge ]
  %4 = ptrtoint ptr %name.addr.0 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %name.addr.0, align 1
  %6 = zext i8 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.86)
  switch i8 %5, label %for.cond.preheader [
    i8 47, label %while.body
    i8 0, label %if.then3
  ]

for.cond.preheader:                               ; preds = %while.cond
  %inode.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 3
  %dentry = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %state = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 5
  %name43 = getelementptr inbounds %struct.qstr, ptr %this, i32 0, i32 1
  %last = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 1
  %name56 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 1, i32 1
  %stack = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 12
  %7 = getelementptr inbounds i8, ptr %this, i32 8
  br label %for.cond

while.body:                                       ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #15
  %incdec.ptr = getelementptr i8, ptr %name.addr.0, i32 1
  br label %while.cond

if.then3:                                         ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #15
  %dir_mode = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 19
  %8 = ptrtoint ptr %dir_mode to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 0, ptr %dir_mode, align 4
  br label %cleanup139

for.cond:                                         ; preds = %for.cond.backedge, %for.cond.preheader
  %name.addr.1 = phi ptr [ %name.addr.0, %for.cond.preheader ], [ %name.addr.1.be, %for.cond.backedge ]
  %depth.0 = phi i32 [ 0, %for.cond.preheader ], [ %depth.0.be, %for.cond.backedge ]
  %9 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %nd, align 8
  %mnt_userns.i = getelementptr inbounds %struct.vfsmount, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %mnt_userns.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %mnt_userns.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !371
  %13 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %flags, align 4
  %and.i = and i32 %14, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %for.cond.if.end3.i_crit_edge, label %if.then.i

for.cond.if.end3.i_crit_edge:                     ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i

if.then.i:                                        ; preds = %for.cond
  %15 = ptrtoint ptr %inode.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %inode.i, align 8
  %call.i = call i32 @inode_permission(ptr noundef %12, ptr noundef %16, i32 noundef 129) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -10, i32 %call.i)
  %cmp.not.i = icmp eq i32 %call.i, -10
  br i1 %cmp.not.i, label %lor.lhs.false.i, label %if.then.i.may_lookup.exit_crit_edge

if.then.i.may_lookup.exit_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %may_lookup.exit

lor.lhs.false.i:                                  ; preds = %if.then.i
  %call1.i = call fastcc zeroext i1 @try_to_unlazy(ptr noundef %nd) #13
  br i1 %call1.i, label %lor.lhs.false.i.if.end3.i_crit_edge, label %lor.lhs.false.i.cleanup139_crit_edge

lor.lhs.false.i.cleanup139_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup139

lor.lhs.false.i.if.end3.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3.i

if.end3.i:                                        ; preds = %lor.lhs.false.i.if.end3.i_crit_edge, %for.cond.if.end3.i_crit_edge
  %17 = ptrtoint ptr %inode.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %inode.i, align 8
  %call5.i = call i32 @inode_permission(ptr noundef %12, ptr noundef %18, i32 noundef 1) #13
  br label %may_lookup.exit

may_lookup.exit:                                  ; preds = %if.end3.i, %if.then.i.may_lookup.exit_crit_edge
  %retval.1.i = phi i32 [ %call5.i, %if.end3.i ], [ %call.i, %if.then.i.may_lookup.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.1.i)
  %tobool7.not = icmp eq i32 %retval.1.i, 0
  br i1 %tobool7.not, label %if.end9, label %may_lookup.exit.cleanup139_crit_edge

may_lookup.exit.cleanup139_crit_edge:             ; preds = %may_lookup.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup139

if.end9:                                          ; preds = %may_lookup.exit
  %19 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %dentry, align 4
  %21 = ptrtoint ptr %20 to i32
  %22 = call { i32, i32 } asm "1:\09ldr\09$0, [$2]\0A2:\0A\09.pushsection .text.fixup,\22ax\22\0A\09.align 2\0A3:\09and\09$1, $2, #0x3\0A\09bic\09$2, $2, #0x3\0A\09ldr\09$0, [$2]\0A\09lsl\09$1, $1, #0x3\0A\09lsl\09$0, $0, $1\0A\09b\092b\0A\09.popsection\0A\09.pushsection __ex_table,\22a\22\0A\09.align\093\0A\09.long\091b, 3b\0A\09.popsection", "=&r,=&r,r,*Qo"(ptr %name.addr.1, ptr elementtype(i32) %name.addr.1) #11, !srcloc !365
  %asmresult.i62.i = extractvalue { i32, i32 } %22, 0
  %xor563.i = xor i32 %asmresult.i62.i, 791621423
  %or.i4064.i = or i32 %asmresult.i62.i, 2139062143
  %add.i65.i = add i32 %asmresult.i62.i, -16843009
  %neg.i66.i = xor i32 %or.i4064.i, -1
  %add.i4369.i = add i32 %xor563.i, -16843009
  %and.i457187.i = or i32 %add.i4369.i, %add.i65.i
  %23 = and i32 %and.i457187.i, %neg.i66.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %.not72.i = icmp eq i32 %23, 0
  br i1 %.not72.i, label %if.end9.do.body.i_crit_edge, label %if.end9.hash_name.exit_crit_edge

if.end9.hash_name.exit_crit_edge:                 ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  br label %hash_name.exit

if.end9.do.body.i_crit_edge:                      ; preds = %if.end9
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %if.end9.do.body.i_crit_edge
  %asmresult.i76.i = phi i32 [ %asmresult.i.i, %do.body.i.do.body.i_crit_edge ], [ %asmresult.i62.i, %if.end9.do.body.i_crit_edge ]
  %len.075.i = phi i32 [ %add3.i, %do.body.i.do.body.i_crit_edge ], [ 0, %if.end9.do.body.i_crit_edge ]
  %y.074.i = phi i32 [ %mul.i, %do.body.i.do.body.i_crit_edge ], [ %21, %if.end9.do.body.i_crit_edge ]
  %x.073.i = phi i32 [ %add.i, %do.body.i.do.body.i_crit_edge ], [ 0, %if.end9.do.body.i_crit_edge ]
  %xor.i = xor i32 %x.073.i, %asmresult.i76.i
  %xor1.i = xor i32 %xor.i, %y.074.i
  %or.i.i = call i32 @llvm.fshl.i32(i32 %xor.i, i32 %xor.i, i32 7) #13
  %add.i = add i32 %or.i.i, %xor1.i
  %or.i39.i = call i32 @llvm.fshl.i32(i32 %xor1.i, i32 %xor1.i, i32 20) #13
  %mul.i = mul i32 %or.i39.i, 9
  %add3.i = add i32 %len.075.i, 4
  %add.ptr.i = getelementptr i8, ptr %name.addr.1, i32 %add3.i
  %24 = call { i32, i32 } asm "1:\09ldr\09$0, [$2]\0A2:\0A\09.pushsection .text.fixup,\22ax\22\0A\09.align 2\0A3:\09and\09$1, $2, #0x3\0A\09bic\09$2, $2, #0x3\0A\09ldr\09$0, [$2]\0A\09lsl\09$1, $1, #0x3\0A\09lsl\09$0, $0, $1\0A\09b\092b\0A\09.popsection\0A\09.pushsection __ex_table,\22a\22\0A\09.align\093\0A\09.long\091b, 3b\0A\09.popsection", "=&r,=&r,r,*Qo"(ptr %add.ptr.i, ptr elementtype(i32) %add.ptr.i) #11, !srcloc !365
  %asmresult.i.i = extractvalue { i32, i32 } %24, 0
  %xor5.i = xor i32 %asmresult.i.i, 791621423
  %or.i40.i = or i32 %asmresult.i.i, 2139062143
  %add.i.i = add i32 %asmresult.i.i, -16843009
  %neg.i.i = xor i32 %or.i40.i, -1
  %add.i43.i = add i32 %xor5.i, -16843009
  %and.i4589.i = or i32 %add.i43.i, %add.i.i
  %25 = and i32 %and.i4589.i, %neg.i.i
  %.not.i = icmp eq i32 %25, 0
  br i1 %.not.i, label %do.body.i.do.body.i_crit_edge, label %hash_name.exit.loopexit

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body.i

hash_name.exit.loopexit:                          ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  %asmresult.i.i.le = extractvalue { i32, i32 } %24, 0
  br label %hash_name.exit

hash_name.exit:                                   ; preds = %hash_name.exit.loopexit, %if.end9.hash_name.exit_crit_edge
  %asmresult.i.le.pre-phi.i = phi i32 [ %asmresult.i62.i, %if.end9.hash_name.exit_crit_edge ], [ %asmresult.i.i.le, %hash_name.exit.loopexit ]
  %x.0.lcssa.i = phi i32 [ 0, %if.end9.hash_name.exit_crit_edge ], [ %add.i, %hash_name.exit.loopexit ]
  %y.0.lcssa.i = phi i32 [ %21, %if.end9.hash_name.exit_crit_edge ], [ %mul.i, %hash_name.exit.loopexit ]
  %len.0.lcssa.i = phi i32 [ 0, %if.end9.hash_name.exit_crit_edge ], [ %add3.i, %hash_name.exit.loopexit ]
  %xor5.lcssa.i = phi i32 [ %xor563.i, %if.end9.hash_name.exit_crit_edge ], [ %xor5.i, %hash_name.exit.loopexit ]
  %or.i40.lcssa.i = phi i32 [ %or.i4064.i, %if.end9.hash_name.exit_crit_edge ], [ %or.i40.i, %hash_name.exit.loopexit ]
  %and.i48.i = and i32 %asmresult.i.le.pre-phi.i, 2139062143
  %add.i49.i = add nuw i32 %and.i48.i, 2139062143
  %and.i53.i = and i32 %xor5.lcssa.i, 2139062143
  %add.i54.i = add nuw i32 %and.i53.i, 2139062143
  %or.i5588.i = and i32 %add.i54.i, %add.i49.i
  %or11.demorgan.i = or i32 %or.i5588.i, %or.i40.lcssa.i
  %or11.i = xor i32 %or11.demorgan.i, -1
  %26 = call i32 @llvm.ctlz.i32(i32 %or11.i, i1 false) #13, !range !366
  %sub.i.i = sub nsw i32 31, %26
  %shl.i = shl i32 -2, %sub.i.i
  %and.i197 = and i32 %shl.i, %asmresult.i.le.pre-phi.i
  %xor13.i = xor i32 %and.i197, %x.0.lcssa.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -65537, i32 %or11.demorgan.i)
  %tobool.not.i.i = icmp ugt i32 %or11.demorgan.i, -65537
  %shr.i.i = lshr i32 %or11.i, 16
  %mask.addr.0.i.i = select i1 %tobool.not.i.i, i32 %or11.i, i32 %shr.i.i
  %byte.0.i.i = select i1 %tobool.not.i.i, i32 2, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %mask.addr.0.i.i)
  %tobool3.not.i.i = icmp ult i32 %mask.addr.0.i.i, 256
  %add4.i.i = zext i1 %tobool3.not.i.i to i32
  %cond.i.i = or i32 %byte.0.i.i, %len.0.lcssa.i
  %add15.i = or i32 %cond.i.i, %add4.i.i
  %conv16.i = zext i32 %add15.i to i64
  %shl17.i = shl nuw i64 %conv16.i, 32
  %mul.i.i.i = mul i32 %xor13.i, 1640531527
  %xor.i.i = xor i32 %mul.i.i.i, %y.0.lcssa.i
  %mul.i2.i.i = mul i32 %xor.i.i, 1640531527
  %conv19.i = zext i32 %mul.i2.i.i to i64
  %or20.i = or i64 %shl17.i, %conv19.i
  %27 = ptrtoint ptr %name.addr.1 to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %name.addr.1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 46, i8 %28)
  %cmp13 = icmp eq i8 %28, 46
  br i1 %cmp13, label %if.then15, label %hash_name.exit.if.then30_crit_edge, !prof !416

hash_name.exit.if.then30_crit_edge:               ; preds = %hash_name.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then30

if.then15:                                        ; preds = %hash_name.exit
  %29 = zext i32 %add15.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %29, ptr @__sancov_gen_cov_switch_values.87)
  switch i32 %add15.i, label %if.then15.if.then30_crit_edge [
    i32 2, label %sw.bb
    i32 1, label %if.then15.if.end54_crit_edge
  ]

if.then15.if.end54_crit_edge:                     ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end54

if.then15.if.then30_crit_edge:                    ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then30

sw.bb:                                            ; preds = %if.then15
  %arrayidx17 = getelementptr i8, ptr %name.addr.1, i32 1
  %30 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %arrayidx17, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 46, i8 %31)
  %cmp19 = icmp eq i8 %31, 46
  br i1 %cmp19, label %if.then21, label %sw.bb.if.then30_crit_edge, !prof !416

sw.bb.if.then30_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then30

if.then21:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  %32 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %state, align 8
  %or22 = or i32 %33, 4
  store i32 %or22, ptr %state, align 8
  br label %if.end54

if.then30:                                        ; preds = %sw.bb.if.then30_crit_edge, %if.then15.if.then30_crit_edge, %hash_name.exit.if.then30_crit_edge
  %34 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %state, align 8
  %and = and i32 %35, -5
  store i32 %and, ptr %state, align 8
  %36 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %20, align 8
  %and34 = and i32 %37, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34)
  %tobool35.not = icmp eq i32 %and34, 0
  br i1 %tobool35.not, label %if.then30.if.end54_crit_edge, label %if.then42, !prof !362

if.then30.if.end54_crit_edge:                     ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end54

if.then42:                                        ; preds = %if.then30
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %this) #13
  %38 = ptrtoint ptr %7 to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 -1, ptr %7, align 8
  %39 = ptrtoint ptr %this to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %or20.i, ptr %this, align 8
  %40 = ptrtoint ptr %name43 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %name.addr.1, ptr %name43, align 8
  %d_op = getelementptr inbounds %struct.dentry, ptr %20, i32 0, i32 8
  %41 = ptrtoint ptr %d_op to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %d_op, align 8
  %d_hash = getelementptr inbounds %struct.dentry_operations, ptr %42, i32 0, i32 2
  %43 = ptrtoint ptr %d_hash to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %d_hash, align 8
  %call44 = call i32 %44(ptr noundef %20, ptr noundef nonnull %this) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44)
  %cmp45 = icmp slt i32 %call44, 0
  br i1 %cmp45, label %cleanup51, label %cleanup

cleanup:                                          ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #15
  %45 = ptrtoint ptr %this to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %this, align 8
  %47 = ptrtoint ptr %name43 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %name43, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %this) #13
  br label %if.end54

cleanup51:                                        ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %this) #13
  br label %cleanup139

if.end54:                                         ; preds = %cleanup, %if.then30.if.end54_crit_edge, %if.then21, %if.then15.if.end54_crit_edge
  %type.0204 = phi i32 [ 3, %if.then21 ], [ 2, %if.then15.if.end54_crit_edge ], [ 0, %cleanup ], [ 0, %if.then30.if.end54_crit_edge ]
  %name.addr.5 = phi ptr [ %name.addr.1, %if.then21 ], [ %name.addr.1, %if.then15.if.end54_crit_edge ], [ %48, %cleanup ], [ %name.addr.1, %if.then30.if.end54_crit_edge ]
  %hash_len.3 = phi i64 [ %or20.i, %if.then21 ], [ %or20.i, %if.then15.if.end54_crit_edge ], [ %46, %cleanup ], [ %or20.i, %if.then30.if.end54_crit_edge ]
  %49 = ptrtoint ptr %last to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 %hash_len.3, ptr %last, align 8
  %50 = ptrtoint ptr %name56 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %name.addr.5, ptr %name56, align 8
  %51 = ptrtoint ptr %last_type to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %type.0204, ptr %last_type, align 8
  %shr58 = lshr i64 %hash_len.3, 32
  %conv59 = trunc i64 %shr58 to i32
  %add.ptr = getelementptr i8, ptr %name.addr.5, i32 %conv59
  %52 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %add.ptr, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %53)
  %tobool60.not = icmp eq i8 %53, 0
  br i1 %tobool60.not, label %if.end54.OK_crit_edge, label %if.end54.do.body_crit_edge

if.end54.do.body_crit_edge:                       ; preds = %if.end54
  br label %do.body

if.end54.OK_crit_edge:                            ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #15
  br label %OK

do.body:                                          ; preds = %do.body.do.body_crit_edge, %if.end54.do.body_crit_edge
  %name.addr.6 = phi ptr [ %incdec.ptr63, %do.body.do.body_crit_edge ], [ %add.ptr, %if.end54.do.body_crit_edge ]
  %incdec.ptr63 = getelementptr i8, ptr %name.addr.6, i32 1
  %54 = ptrtoint ptr %incdec.ptr63 to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %incdec.ptr63, align 1
  %56 = zext i8 %55 to i64
  call void @__sanitizer_cov_trace_switch(i64 %56, ptr @__sancov_gen_cov_switch_values.88)
  switch i8 %55, label %do.body.if.end95_crit_edge [
    i8 47, label %do.body.do.body_crit_edge
    i8 0, label %do.body.OK_crit_edge
  ], !prof !417

do.body.OK_crit_edge:                             ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %OK

do.body.do.body_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body

do.body.if.end95_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end95

OK:                                               ; preds = %do.body.OK_crit_edge, %if.end54.OK_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %depth.0)
  %tobool83.not = icmp eq i32 %depth.0, 0
  br i1 %tobool83.not, label %if.then84, label %if.end90

if.then84:                                        ; preds = %OK
  %dir_uid = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 18
  %57 = ptrtoint ptr %inode.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %inode.i, align 8
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %58, i32 0, i32 8
  %59 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %i_sb.i.i, align 4
  %s_user_ns.i.i = getelementptr inbounds %struct.super_block, ptr %60, i32 0, i32 53
  %61 = ptrtoint ptr %s_user_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %s_user_ns.i.i, align 8
  %i_uid.i = getelementptr inbounds %struct.inode, ptr %58, i32 0, i32 2
  %63 = ptrtoint ptr %i_uid.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %.unpack.i = load i32, ptr %i_uid.i, align 4
  %64 = insertvalue [1 x i32] undef, i32 %.unpack.i, 0
  %cmp.i.i.i.i = icmp eq ptr %12, @init_user_ns
  %cmp.i.i.i = icmp eq ptr %62, %12
  %spec.select.i.i.i = or i1 %cmp.i.i.i.i, %cmp.i.i.i
  br i1 %spec.select.i.i.i, label %if.then84.i_uid_into_mnt.exit_crit_edge, label %if.end.i.i

if.then84.i_uid_into_mnt.exit_crit_edge:          ; preds = %if.then84
  call void @__sanitizer_cov_trace_pc() #15
  br label %i_uid_into_mnt.exit

if.end.i.i:                                       ; preds = %if.then84
  %cmp.i21.i.i = icmp eq ptr %62, @init_user_ns
  br i1 %cmp.i21.i.i, label %if.end.i.i.if.end7.i.i_crit_edge, label %if.else.i.i

if.end.i.i.if.end7.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7.i.i

if.else.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call6.i.i = call i32 @from_kuid(ptr noundef %62, [1 x i32] %64) #13
  br label %if.end7.i.i

if.end7.i.i:                                      ; preds = %if.else.i.i, %if.end.i.i.if.end7.i.i_crit_edge
  %uid.0.i.i = phi i32 [ %call6.i.i, %if.else.i.i ], [ %.unpack.i, %if.end.i.i.if.end7.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %uid.0.i.i)
  %cmp.i.i = icmp eq i32 %uid.0.i.i, -1
  br i1 %cmp.i.i, label %if.end7.i.i.i_uid_into_mnt.exit_crit_edge, label %if.end9.i.i

if.end7.i.i.i_uid_into_mnt.exit_crit_edge:        ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %i_uid_into_mnt.exit

if.end9.i.i:                                      ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call10.i.i = call i32 @make_kuid(ptr noundef %12, i32 noundef %uid.0.i.i) #13
  br label %i_uid_into_mnt.exit

i_uid_into_mnt.exit:                              ; preds = %if.end9.i.i, %if.end7.i.i.i_uid_into_mnt.exit_crit_edge, %if.then84.i_uid_into_mnt.exit_crit_edge
  %retval.sroa.0.0.i.i = phi i32 [ %call10.i.i, %if.end9.i.i ], [ -1, %if.end7.i.i.i_uid_into_mnt.exit_crit_edge ], [ %.unpack.i, %if.then84.i_uid_into_mnt.exit_crit_edge ]
  %65 = ptrtoint ptr %dir_uid to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %retval.sroa.0.0.i.i, ptr %dir_uid, align 8
  %66 = ptrtoint ptr %inode.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %inode.i, align 8
  %68 = ptrtoint ptr %67 to i32
  call void @__asan_load2_noabort(i32 %68)
  %69 = load i16, ptr %67, align 8
  %dir_mode87 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 19
  %70 = ptrtoint ptr %dir_mode87 to i32
  call void @__asan_store2_noabort(i32 %70)
  store i16 %69, ptr %dir_mode87, align 4
  %71 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %flags, align 4
  %and89 = and i32 %72, -17
  store i32 %and89, ptr %flags, align 4
  br label %cleanup139

if.end90:                                         ; preds = %OK
  call void @__sanitizer_cov_trace_pc() #15
  %73 = ptrtoint ptr %stack to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %stack, align 4
  %dec = add i32 %depth.0, -1
  %name92 = getelementptr %struct.saved, ptr %74, i32 %dec, i32 2
  %75 = ptrtoint ptr %name92 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %name92, align 4
  br label %if.end95

if.end95:                                         ; preds = %if.end90, %do.body.if.end95_crit_edge
  %.sink = phi i32 [ 0, %if.end90 ], [ 2, %do.body.if.end95_crit_edge ]
  %name.addr.8 = phi ptr [ %76, %if.end90 ], [ %incdec.ptr63, %do.body.if.end95_crit_edge ]
  %depth.1 = phi i32 [ %dec, %if.end90 ], [ %depth.0, %do.body.if.end95_crit_edge ]
  %call94 = call fastcc ptr @walk_component(ptr noundef %nd, i32 noundef %.sink)
  %tobool96.not = icmp eq ptr %call94, null
  br i1 %tobool96.not, label %if.end111, label %if.then103, !prof !362

if.then103:                                       ; preds = %if.end95
  %cmp.i198 = icmp ugt ptr %call94, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i198, label %if.then105, label %if.end107

if.then105:                                       ; preds = %if.then103
  call void @__sanitizer_cov_trace_pc() #15
  %77 = ptrtoint ptr %call94 to i32
  br label %cleanup139

if.end107:                                        ; preds = %if.then103
  call void @__sanitizer_cov_trace_pc() #15
  %78 = ptrtoint ptr %stack to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %stack, align 4
  %inc = add i32 %depth.1, 1
  %name110 = getelementptr %struct.saved, ptr %79, i32 %depth.1, i32 2
  %80 = ptrtoint ptr %name110 to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr %name.addr.8, ptr %name110, align 4
  br label %for.cond.backedge

if.end111:                                        ; preds = %if.end95
  %81 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %dentry, align 4
  %83 = ptrtoint ptr %82 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %82, align 8
  %and.i.i = and i32 %84, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %and.i.i)
  %cmp.i199 = icmp eq i32 %and.i.i, 2097152
  br i1 %cmp.i199, label %if.end111.for.cond.backedge_crit_edge, label %if.then123, !prof !362

if.end111.for.cond.backedge_crit_edge:            ; preds = %if.end111
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %if.end111.for.cond.backedge_crit_edge, %if.end107
  %name.addr.1.be = phi ptr [ %call94, %if.end107 ], [ %name.addr.8, %if.end111.for.cond.backedge_crit_edge ]
  %depth.0.be = phi i32 [ %inc, %if.end107 ], [ %depth.1, %if.end111.for.cond.backedge_crit_edge ]
  br label %for.cond

if.then123:                                       ; preds = %if.end111
  %85 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %flags, align 4
  %and125 = and i32 %86, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and125)
  %tobool126.not = icmp eq i32 %and125, 0
  br i1 %tobool126.not, label %if.then123.if.end131_crit_edge, label %if.then127

if.then123.if.end131_crit_edge:                   ; preds = %if.then123
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end131

if.then127:                                       ; preds = %if.then123
  %call128 = call fastcc zeroext i1 @try_to_unlazy(ptr noundef %nd)
  br i1 %call128, label %if.then127.if.end131_crit_edge, label %if.then127.cleanup139_crit_edge

if.then127.cleanup139_crit_edge:                  ; preds = %if.then127
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup139

if.then127.if.end131_crit_edge:                   ; preds = %if.then127
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end131

if.end131:                                        ; preds = %if.then127.if.end131_crit_edge, %if.then123.if.end131_crit_edge
  br label %cleanup139

cleanup139:                                       ; preds = %if.end131, %if.then127.cleanup139_crit_edge, %if.then105, %i_uid_into_mnt.exit, %cleanup51, %may_lookup.exit.cleanup139_crit_edge, %lor.lhs.false.i.cleanup139_crit_edge, %if.then3, %if.then
  %retval.6 = phi i32 [ %3, %if.then ], [ 0, %if.then3 ], [ -10, %if.then127.cleanup139_crit_edge ], [ %call44, %cleanup51 ], [ 0, %i_uid_into_mnt.exit ], [ -20, %if.end131 ], [ %77, %if.then105 ], [ -10, %lor.lhs.false.i.cleanup139_crit_edge ], [ %retval.1.i, %may_lookup.exit.cleanup139_crit_edge ]
  ret i32 %retval.6
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @complete_walk(ptr noundef %nd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %dentry1 = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %0 = ptrtoint ptr %dentry1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dentry1, align 4
  %flags = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 4
  %and = and i32 %3, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end14_crit_edge, label %if.then

entry.if.end14_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end14

if.then:                                          ; preds = %entry
  %state = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 5
  %4 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %state, align 8
  %and2 = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  %and6 = and i32 %3, 1572864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  %or.cond = select i1 %tobool3.not, i1 %tobool7.not, i1 false
  br i1 %or.cond, label %if.then8, label %if.then.if.end9_crit_edge

if.then.if.end9_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end9

if.then8:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %root = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2
  %6 = ptrtoint ptr %root to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %root, align 8
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.then.if.end9_crit_edge
  %and11 = and i32 %3, -2097153
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %and11, ptr %flags, align 4
  %call = tail call fastcc zeroext i1 @try_to_unlazy(ptr noundef %nd)
  br i1 %call, label %if.end9.if.end14_crit_edge, label %if.end9.cleanup_crit_edge

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end9.if.end14_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end14

if.end14:                                         ; preds = %if.end9.if.end14_crit_edge, %entry.if.end14_crit_edge
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags, align 4
  %and16 = and i32 %9, 1572864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and16)
  %tobool17.not = icmp eq i32 %and16, 0
  br i1 %tobool17.not, label %if.end14.if.end26_crit_edge, label %if.then20, !prof !362

if.end14.if.end26_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end26

if.then20:                                        ; preds = %if.end14
  %root22 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2
  %call23 = tail call zeroext i1 @path_is_under(ptr noundef %nd, ptr noundef %root22) #13
  br i1 %call23, label %if.then20.if.end26_crit_edge, label %if.then20.cleanup_crit_edge

if.then20.cleanup_crit_edge:                      ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then20.if.end26_crit_edge:                     ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end26

if.end26:                                         ; preds = %if.then20.if.end26_crit_edge, %if.end14.if.end26_crit_edge
  %state27 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 5
  %10 = ptrtoint ptr %state27 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %state27, align 8
  %and28 = and i32 %11, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28)
  %tobool29.not = icmp eq i32 %and28, 0
  br i1 %tobool29.not, label %if.end26.cleanup_crit_edge, label %if.end39, !prof !362

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end39:                                         ; preds = %if.end26
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %1, align 8
  %and40 = and i32 %13, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and40)
  %tobool41.not = icmp eq i32 %and40, 0
  br i1 %tobool41.not, label %if.end39.cleanup_crit_edge, label %if.end51, !prof !362

if.end39.cleanup_crit_edge:                       ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end51:                                         ; preds = %if.end39
  %d_op = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 8
  %14 = ptrtoint ptr %d_op to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %d_op, align 8
  %d_weak_revalidate = getelementptr inbounds %struct.dentry_operations, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %d_weak_revalidate to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %d_weak_revalidate, align 4
  %18 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags, align 4
  %call53 = tail call i32 %17(ptr noundef %1, i32 noundef %19) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53)
  %cmp = icmp sgt i32 %call53, 0
  br i1 %cmp, label %if.end51.cleanup_crit_edge, label %if.end55

if.end51.cleanup_crit_edge:                       ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end55:                                         ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53)
  %tobool56.not = icmp eq i32 %call53, 0
  %spec.store.select = select i1 %tobool56.not, i32 -116, i32 %call53
  br label %cleanup

cleanup:                                          ; preds = %if.end55, %if.end51.cleanup_crit_edge, %if.end39.cleanup_crit_edge, %if.end26.cleanup_crit_edge, %if.then20.cleanup_crit_edge, %if.end9.cleanup_crit_edge
  %retval.0 = phi i32 [ %spec.store.select, %if.end55 ], [ -10, %if.end9.cleanup_crit_edge ], [ -18, %if.then20.cleanup_crit_edge ], [ 0, %if.end26.cleanup_crit_edge ], [ 0, %if.end39.cleanup_crit_edge ], [ 0, %if.end51.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @terminate_walk(ptr nocapture noundef %nd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %depth.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 10
  %0 = ptrtoint ptr %depth.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %depth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not5.i = icmp eq i32 %1, 0
  br i1 %tobool.not5.i, label %entry.drop_links.exit_crit_edge, label %while.body.lr.ph.i

entry.drop_links.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %drop_links.exit

while.body.lr.ph.i:                               ; preds = %entry
  %stack.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 12
  br label %while.body.i

while.body.i:                                     ; preds = %do_delayed_call.exit.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %i.06.i = phi i32 [ %1, %while.body.lr.ph.i ], [ %dec.i, %do_delayed_call.exit.i.while.body.i_crit_edge ]
  %dec.i = add i32 %i.06.i, -1
  %2 = ptrtoint ptr %stack.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %stack.i, align 4
  %done.i = getelementptr %struct.saved, ptr %3, i32 %dec.i, i32 1
  %4 = ptrtoint ptr %done.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %done.i, align 4
  %tobool.not.i.i = icmp eq ptr %5, null
  br i1 %tobool.not.i.i, label %while.body.i.do_delayed_call.exit.i_crit_edge, label %if.then.i.i

while.body.i.do_delayed_call.exit.i_crit_edge:    ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do_delayed_call.exit.i

if.then.i.i:                                      ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #15
  %arg.i.i = getelementptr %struct.saved, ptr %3, i32 %dec.i, i32 1, i32 1
  %6 = ptrtoint ptr %arg.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arg.i.i, align 4
  tail call void %5(ptr noundef %7) #13
  br label %do_delayed_call.exit.i

do_delayed_call.exit.i:                           ; preds = %if.then.i.i, %while.body.i.do_delayed_call.exit.i_crit_edge
  %8 = ptrtoint ptr %done.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %done.i, align 4
  %tobool.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool.not.i, label %do_delayed_call.exit.i.drop_links.exit_crit_edge, label %do_delayed_call.exit.i.while.body.i_crit_edge

do_delayed_call.exit.i.while.body.i_crit_edge:    ; preds = %do_delayed_call.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body.i

do_delayed_call.exit.i.drop_links.exit_crit_edge: ; preds = %do_delayed_call.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %drop_links.exit

drop_links.exit:                                  ; preds = %do_delayed_call.exit.i.drop_links.exit_crit_edge, %entry.drop_links.exit_crit_edge
  %flags = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags, align 4
  %and = and i32 %10, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %drop_links.exit
  %dentry.i = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %11 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dentry.i, align 4
  tail call void @dput(ptr noundef %12) #13
  %13 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %nd, align 4
  tail call void @mntput(ptr noundef %14) #13
  %15 = ptrtoint ptr %depth.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %depth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp28.not = icmp eq i32 %16, 0
  br i1 %cmp28.not, label %if.then.for.end_crit_edge, label %for.body.lr.ph

if.then.for.end_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.then
  %stack = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 12
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.029 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %17 = ptrtoint ptr %stack to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %stack, align 4
  %arrayidx = getelementptr %struct.saved, ptr %18, i32 %i.029
  %dentry.i25 = getelementptr inbounds %struct.path, ptr %arrayidx, i32 0, i32 1
  %19 = ptrtoint ptr %dentry.i25 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %dentry.i25, align 4
  tail call void @dput(ptr noundef %20) #13
  %21 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx, align 4
  tail call void @mntput(ptr noundef %22) #13
  %inc = add nuw i32 %i.029, 1
  %23 = ptrtoint ptr %depth.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %depth.i, align 4
  %cmp = icmp ult i32 %inc, %24
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.then.for.end_crit_edge
  %state = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 5
  %25 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %state, align 8
  %and1 = and i32 %26, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool2.not = icmp eq i32 %and1, 0
  br i1 %tobool2.not, label %for.end.if.end8_crit_edge, label %if.then3

for.end.if.end8_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8

if.then3:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #15
  %root = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2
  %dentry.i26 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2, i32 1
  %27 = ptrtoint ptr %dentry.i26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %dentry.i26, align 4
  tail call void @dput(ptr noundef %28) #13
  %29 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %root, align 4
  tail call void @mntput(ptr noundef %30) #13
  %31 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %state, align 8
  %and5 = and i32 %32, -3
  store i32 %and5, ptr %state, align 8
  br label %if.end8

if.else:                                          ; preds = %drop_links.exit
  %and7 = and i32 %10, -65
  %33 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %and7, ptr %flags, align 4
  %call.i = tail call zeroext i1 @rcu_is_watching() #13
  br i1 %call.i, label %if.else.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i

if.else.rcu_read_unlock.exit_crit_edge:           ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_unlock.exit

land.lhs.true.i:                                  ; preds = %if.else
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i27 = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i27, label %land.lhs.true.i.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_unlock.exit_crit_edge:   ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_unlock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_unlock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_unlock.exit_crit_edge:  ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_unlock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.51, i32 noundef 724, ptr noundef nonnull @.str.53) #13
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i.rcu_read_unlock.exit_crit_edge, %if.else.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !418
  %34 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i.i.i.i = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %sub.i.i.i = add i32 %37, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void @rcu_read_unlock_strict() #13
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #13
  br label %if.end8

if.end8:                                          ; preds = %rcu_read_unlock.exit, %if.then3, %for.end.if.end8_crit_edge
  %38 = ptrtoint ptr %depth.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 0, ptr %depth.i, align 4
  %39 = ptrtoint ptr %nd to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %nd, align 8
  %dentry = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %40 = ptrtoint ptr %dentry to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr null, ptr %dentry, align 4
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @seqcount_lockdep_reader_access(ptr noundef %s) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #13, !srcloc !419
  %and.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.then, label %do.body24.critedge

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @trace_hardirqs_off() #13
  %dep_map.c = getelementptr inbounds %struct.seqcount, ptr %s, i32 0, i32 1
  %1 = tail call ptr @llvm.returnaddress(i32 0)
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %2) #13
  tail call void @lock_release(ptr noundef %dep_map.c, i32 noundef %2) #13
  tail call void @trace_hardirqs_on() #13
  br label %do.body24

do.body24.critedge:                               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %dep_map.c48 = getelementptr inbounds %struct.seqcount, ptr %s, i32 0, i32 1
  %3 = tail call ptr @llvm.returnaddress(i32 0)
  %4 = ptrtoint ptr %3 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %4) #13
  tail call void @lock_release(ptr noundef %dep_map.c48, i32 noundef %4) #13
  br label %do.body24

do.body24:                                        ; preds = %do.body24.critedge, %if.then
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #13, !srcloc !420
  %and.i.i = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool32.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool32.not, label %if.then36, label %do.body24.do.end39_crit_edge, !prof !360

do.body24.do.end39_crit_edge:                     ; preds = %do.body24
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end39

if.then36:                                        ; preds = %do.body24
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @warn_bogus_irq_restore() #13
  br label %do.end39

do.end39:                                         ; preds = %if.then36, %do.body24.do.end39_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #13, !srcloc !421
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nd_jump_root(ptr nocapture noundef %nd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = and i32 %1, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.return_crit_edge, !prof !362

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.end:                                           ; preds = %entry
  %and4 = and i32 %1, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  br i1 %tobool5.not, label %if.end.if.end19_crit_edge, label %if.then12, !prof !362

if.end.if.end19_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end19

if.then12:                                        ; preds = %if.end
  %2 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %nd, align 8
  %cmp.not = icmp eq ptr %3, null
  br i1 %cmp.not, label %if.then12.if.end19_crit_edge, label %land.lhs.true

if.then12.if.end19_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end19

land.lhs.true:                                    ; preds = %if.then12
  %root = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2
  %4 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %root, align 8
  %cmp16.not = icmp eq ptr %3, %5
  br i1 %cmp16.not, label %land.lhs.true.if.end19_crit_edge, label %land.lhs.true.return_crit_edge

land.lhs.true.return_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

land.lhs.true.if.end19_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end19

if.end19:                                         ; preds = %land.lhs.true.if.end19_crit_edge, %if.then12.if.end19_crit_edge, %if.end.if.end19_crit_edge
  %root20 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2
  %6 = ptrtoint ptr %root20 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %root20, align 8
  %tobool22.not = icmp eq ptr %7, null
  br i1 %tobool22.not, label %if.then23, label %if.end19.if.end27_crit_edge

if.end19.if.end27_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end27

if.then23:                                        ; preds = %if.end19
  %call = tail call fastcc i32 @set_root(ptr noundef %nd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool24.not = icmp eq i32 %call, 0
  br i1 %tobool24.not, label %if.then23.if.end27_crit_edge, label %if.then23.return_crit_edge

if.then23.return_crit_edge:                       ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.then23.if.end27_crit_edge:                     ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end27

if.end27:                                         ; preds = %if.then23.if.end27_crit_edge, %if.end19.if.end27_crit_edge
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags, align 4
  %and29 = and i32 %9, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29)
  %tobool30.not = icmp eq i32 %and29, 0
  br i1 %tobool30.not, label %if.else, label %if.then31

if.then31:                                        ; preds = %if.end27
  %10 = ptrtoint ptr %root20 to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %root20, align 8
  %12 = ptrtoint ptr %nd to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %nd, align 8
  %13 = trunc i64 %11 to i32
  %14 = inttoptr i32 %13 to ptr
  %d_inode = getelementptr inbounds %struct.dentry, ptr %14, i32 0, i32 5
  %15 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %d_inode, align 8
  %inode = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 3
  %17 = ptrtoint ptr %inode to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %16, ptr %inode, align 8
  %root_seq = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 16
  %18 = ptrtoint ptr %root_seq to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %root_seq, align 8
  %seq = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 6
  %20 = ptrtoint ptr %seq to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %seq, align 4
  %d_seq = getelementptr inbounds %struct.dentry, ptr %14, i32 0, i32 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !409
  %21 = ptrtoint ptr %d_seq to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %d_seq, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %22, i32 %19)
  %cmp.i.i.not = icmp eq i32 %22, %19
  br i1 %cmp.i.i.not, label %if.then31.if.end58_crit_edge, label %if.then31.return_crit_edge

if.then31.return_crit_edge:                       ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.then31.if.end58_crit_edge:                     ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end58

if.else:                                          ; preds = %if.end27
  %dentry.i = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %23 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %dentry.i, align 4
  tail call void @dput(ptr noundef %24) #13
  %25 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %nd, align 4
  tail call void @mntput(ptr noundef %26) #13
  %27 = ptrtoint ptr %root20 to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %root20, align 8
  %29 = ptrtoint ptr %nd to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %nd, align 8
  %30 = lshr i64 %28, 32
  %31 = trunc i64 %30 to i32
  %32 = inttoptr i32 %31 to ptr
  %call.i = tail call ptr @mntget(ptr noundef %32) #13
  %33 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %dentry.i, align 4
  %tobool.not.i.i = icmp eq ptr %34, null
  br i1 %tobool.not.i.i, label %if.else.path_get.exit_crit_edge, label %if.then.i.i

if.else.path_get.exit_crit_edge:                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %path_get.exit

if.then.i.i:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  %d_lockref.i.i = getelementptr inbounds %struct.dentry, ptr %34, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i.i) #13
  br label %path_get.exit

path_get.exit:                                    ; preds = %if.then.i.i, %if.else.path_get.exit_crit_edge
  %35 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %dentry.i, align 4
  %d_inode56 = getelementptr inbounds %struct.dentry, ptr %36, i32 0, i32 5
  %37 = ptrtoint ptr %d_inode56 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %d_inode56, align 8
  %inode57 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 3
  %39 = ptrtoint ptr %inode57 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %38, ptr %inode57, align 8
  br label %if.end58

if.end58:                                         ; preds = %path_get.exit, %if.then31.if.end58_crit_edge
  %state = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 5
  %40 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %state, align 8
  %or = or i32 %41, 4
  store i32 %or, ptr %state, align 8
  br label %return

return:                                           ; preds = %if.end58, %if.then31.return_crit_edge, %if.then23.return_crit_edge, %land.lhs.true.return_crit_edge, %entry.return_crit_edge
  %retval.3 = phi i32 [ -10, %if.then31.return_crit_edge ], [ 0, %if.end58 ], [ %call, %if.then23.return_crit_edge ], [ -18, %entry.return_crit_edge ], [ -18, %land.lhs.true.return_crit_edge ]
  ret i32 %retval.3
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @set_root(ptr nocapture noundef %nd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %fs1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 107
  %4 = ptrtoint ptr %fs1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %fs1, align 128
  %flags = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags, align 4
  %and = and i32 %7, 1572864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end23, label %do.end, !prof !362

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 933, i32 noundef 9, ptr noundef null) #13
  br label %cleanup

if.end23:                                         ; preds = %entry
  %and25 = and i32 %7, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and25)
  %tobool26.not = icmp eq i32 %and25, 0
  br i1 %tobool26.not, label %if.else, label %do.body28.preheader

do.body28.preheader:                              ; preds = %if.end23
  %root_seq = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 16
  %seq29 = getelementptr inbounds %struct.fs_struct, ptr %5, i32 0, i32 2
  %root = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2
  %root53 = getelementptr inbounds %struct.fs_struct, ptr %5, i32 0, i32 5
  %dentry = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2, i32 1
  br label %do.body28

do.body28:                                        ; preds = %while.end70.do.body28_crit_edge, %do.body28.preheader
  tail call fastcc void @seqcount_lockdep_reader_access(ptr noundef %seq29)
  %8 = ptrtoint ptr %seq29 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %seq29, align 4
  %and3492 = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3492)
  %tobool35.not93 = icmp eq i32 %and3492, 0
  br i1 %tobool35.not93, label %do.body28.while.end_crit_edge, label %do.body28.do.end40_crit_edge

do.body28.do.end40_crit_edge:                     ; preds = %do.body28
  br label %do.end40

do.body28.while.end_crit_edge:                    ; preds = %do.body28
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

do.end40:                                         ; preds = %do.end40.do.end40_crit_edge, %do.body28.do.end40_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !422
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #13, !srcloc !423
  %10 = ptrtoint ptr %seq29 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %seq29, align 4
  %and34 = and i32 %11, 1
  %tobool35.not = icmp eq i32 %and34, 0
  br i1 %tobool35.not, label %do.end40.while.end_crit_edge, label %do.end40.do.end40_crit_edge

do.end40.do.end40_crit_edge:                      ; preds = %do.end40
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end40

do.end40.while.end_crit_edge:                     ; preds = %do.end40
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.end:                                        ; preds = %do.end40.while.end_crit_edge, %do.body28.while.end_crit_edge
  %.lcssa = phi i32 [ %9, %do.body28.while.end_crit_edge ], [ %11, %do.end40.while.end_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !424
  %12 = ptrtoint ptr %root53 to i32
  call void @__asan_loadN_noabort(i32 %12, i32 8)
  %13 = load i64, ptr %root53, align 4
  %14 = ptrtoint ptr %root to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %13, ptr %root, align 8
  %15 = trunc i64 %13 to i32
  %16 = inttoptr i32 %15 to ptr
  %d_seq94 = getelementptr inbounds %struct.dentry, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %d_seq94 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %d_seq94, align 4
  %and5895 = and i32 %18, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5895)
  %tobool59.not96 = icmp eq i32 %and5895, 0
  br i1 %tobool59.not96, label %while.end.while.end70_crit_edge, label %while.end.do.end65_crit_edge

while.end.do.end65_crit_edge:                     ; preds = %while.end
  br label %do.end65

while.end.while.end70_crit_edge:                  ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end70

do.end65:                                         ; preds = %do.end65.do.end65_crit_edge, %while.end.do.end65_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !425
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #13, !srcloc !426
  %19 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %dentry, align 4
  %d_seq = getelementptr inbounds %struct.dentry, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %d_seq to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %d_seq, align 4
  %and58 = and i32 %22, 1
  %tobool59.not = icmp eq i32 %and58, 0
  br i1 %tobool59.not, label %do.end65.while.end70_crit_edge, label %do.end65.do.end65_crit_edge

do.end65.do.end65_crit_edge:                      ; preds = %do.end65
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end65

do.end65.while.end70_crit_edge:                   ; preds = %do.end65
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end70

while.end70:                                      ; preds = %do.end65.while.end70_crit_edge, %while.end.while.end70_crit_edge
  %.lcssa91 = phi i32 [ %18, %while.end.while.end70_crit_edge ], [ %22, %do.end65.while.end70_crit_edge ]
  %23 = ptrtoint ptr %root_seq to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %.lcssa91, ptr %root_seq, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !409
  %24 = ptrtoint ptr %seq29 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %seq29, align 4
  %cmp.i.i.not = icmp eq i32 %25, %.lcssa
  br i1 %cmp.i.i.not, label %while.end70.cleanup_crit_edge, label %while.end70.do.body28_crit_edge

while.end70.do.body28_crit_edge:                  ; preds = %while.end70
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body28

while.end70.cleanup_crit_edge:                    ; preds = %while.end70
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.else:                                          ; preds = %if.end23
  %root78 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2
  %lock.i = getelementptr inbounds %struct.fs_struct, ptr %5, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %lock.i) #13
  %root1.i = getelementptr inbounds %struct.fs_struct, ptr %5, i32 0, i32 5
  %26 = ptrtoint ptr %root1.i to i32
  call void @__asan_loadN_noabort(i32 %26, i32 8)
  %27 = load i64, ptr %root1.i, align 4
  %28 = ptrtoint ptr %root78 to i32
  call void @__asan_storeN_noabort(i32 %28, i32 8)
  store i64 %27, ptr %root78, align 4
  %29 = lshr i64 %27, 32
  %30 = trunc i64 %29 to i32
  %31 = inttoptr i32 %30 to ptr
  %call.i.i = tail call ptr @mntget(ptr noundef %31) #13
  %dentry.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2, i32 1
  %32 = ptrtoint ptr %dentry.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %dentry.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %33, null
  br i1 %tobool.not.i.i.i, label %if.else.get_fs_root.exit_crit_edge, label %if.then.i.i.i

if.else.get_fs_root.exit_crit_edge:               ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %get_fs_root.exit

if.then.i.i.i:                                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  %d_lockref.i.i.i = getelementptr inbounds %struct.dentry, ptr %33, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i.i.i) #13
  br label %get_fs_root.exit

get_fs_root.exit:                                 ; preds = %if.then.i.i.i, %if.else.get_fs_root.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %lock.i) #13
  %state = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 5
  %34 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %state, align 8
  %or = or i32 %35, 2
  store i32 %or, ptr %state, align 8
  br label %cleanup

cleanup:                                          ; preds = %get_fs_root.exit, %while.end70.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -131, %do.end ], [ 0, %get_fs_root.exit ], [ 0, %while.end70.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__fdget_raw(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @fput(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @step_into(ptr noundef %nd, i32 noundef %flags, ptr noundef %dentry, ptr noundef %inode, i32 noundef %seq) unnamed_addr #0 align 64 {
entry:
  %jumped.i = alloca i8, align 1
  %path = alloca %struct.path, align 8
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path) #13
  %0 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %jumped.i) #13
  %1 = ptrtoint ptr %jumped.i to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 -1, ptr %jumped.i, align 1, !annotation !367
  %2 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %nd, align 8
  %4 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %3, ptr %path, align 8
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %dentry, ptr %0, align 4
  %flags.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %6 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %7, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end24.i_crit_edge, label %if.then.i

entry.if.end24.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end24.i

if.then.i:                                        ; preds = %entry
  %tobool4.not.i = icmp eq ptr %inode, null
  br i1 %tobool4.not.i, label %if.then.i.handle_mounts.exit.thread86_crit_edge, label %if.end.i, !prof !360

if.then.i.handle_mounts.exit.thread86_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %handle_mounts.exit.thread86

if.end.i:                                         ; preds = %if.then.i
  %8 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %dentry, align 8
  %and.i.i = and i32 %9, 458752
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.handle_mounts.exit.thread_crit_edge, label %if.end.i.i, !prof !362

if.end.i.handle_mounts.exit.thread_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %handle_mounts.exit.thread

if.end.i.i:                                       ; preds = %if.end.i
  %and6.i.i = and i32 %7, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i.i)
  %tobool7.not.i.i = icmp eq i32 %and6.i.i, 0
  br i1 %tobool7.not.i.i, label %for.cond.preheader.i.i, label %if.end.i.i.if.end16.i_crit_edge, !prof !362

if.end.i.i.if.end16.i_crit_edge:                  ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16.i

for.cond.preheader.i.i:                           ; preds = %if.end.i.i
  %state.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 5
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %cleanup65.i.i, %for.cond.preheader.i.i
  %inode.addr.0 = phi ptr [ %inode, %for.cond.preheader.i.i ], [ %33, %cleanup65.i.i ]
  %seq.addr.0 = phi i32 [ %seq, %for.cond.preheader.i.i ], [ %.lcssa.i.i, %cleanup65.i.i ]
  %flags.0.i.i = phi i32 [ %9, %for.cond.preheader.i.i ], [ %35, %cleanup65.i.i ]
  %dentry.0.i.i = phi ptr [ %dentry, %for.cond.preheader.i.i ], [ %21, %cleanup65.i.i ]
  %and16.i.i = and i32 %flags.0.i.i, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and16.i.i)
  %tobool17.not.i.i = icmp eq i32 %and16.i.i, 0
  br i1 %tobool17.not.i.i, label %for.cond.i.i.if.end29.i.i_crit_edge, label %if.then24.i.i, !prof !362

for.cond.i.i.if.end29.i.i_crit_edge:              ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end29.i.i

if.then24.i.i:                                    ; preds = %for.cond.i.i
  %d_op.i.i = getelementptr inbounds %struct.dentry, ptr %dentry.0.i.i, i32 0, i32 8
  %10 = ptrtoint ptr %d_op.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %d_op.i.i, align 8
  %d_manage.i.i = getelementptr inbounds %struct.dentry_operations, ptr %11, i32 0, i32 11
  %12 = ptrtoint ptr %d_manage.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %d_manage.i.i, align 4
  %call.i.i = call i32 %13(ptr noundef nonnull %path, i1 noundef zeroext true) #13
  %14 = zext i32 %call.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.89)
  switch i32 %call.i.i, label %if.then24.i.i.if.end16.i_crit_edge [
    i32 0, label %cleanup.thread.i.i
    i32 -21, label %if.then24.i.i.handle_mounts.exit.thread_crit_edge
  ], !prof !427

if.then24.i.i.handle_mounts.exit.thread_crit_edge: ; preds = %if.then24.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %handle_mounts.exit.thread

if.then24.i.i.if.end16.i_crit_edge:               ; preds = %if.then24.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16.i

cleanup.thread.i.i:                               ; preds = %if.then24.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %15 = ptrtoint ptr %dentry.0.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %dentry.0.i.i, align 8
  br label %if.end29.i.i

if.end29.i.i:                                     ; preds = %cleanup.thread.i.i, %for.cond.i.i.if.end29.i.i_crit_edge
  %flags.2.i.i = phi i32 [ %flags.0.i.i, %for.cond.i.i.if.end29.i.i_crit_edge ], [ %16, %cleanup.thread.i.i ]
  %and30.i.i = and i32 %flags.2.i.i, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30.i.i)
  %tobool31.not.i.i = icmp eq i32 %and30.i.i, 0
  br i1 %tobool31.not.i.i, label %if.end68.i.i, label %if.then32.i.i

if.then32.i.i:                                    ; preds = %if.end29.i.i
  %17 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %path, align 8
  %call33.i.i = call ptr @__lookup_mnt(ptr noundef %18, ptr noundef %dentry.0.i.i) #13
  %tobool34.not.i.i = icmp eq ptr %call33.i.i, null
  br i1 %tobool34.not.i.i, label %if.end60.i.i, label %if.then35.i.i

if.then35.i.i:                                    ; preds = %if.then32.i.i
  %mnt36.i.i = getelementptr inbounds %struct.mount, ptr %call33.i.i, i32 0, i32 3
  %19 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %mnt36.i.i, ptr %path, align 8
  %20 = ptrtoint ptr %mnt36.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %mnt36.i.i, align 4
  %22 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %21, ptr %0, align 4
  %23 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %state.i.i, align 8
  %or.i.i = or i32 %24, 4
  store i32 %or.i.i, ptr %state.i.i, align 8
  %d_seq.i.i = getelementptr inbounds %struct.dentry, ptr %21, i32 0, i32 1
  call fastcc void @seqcount_lockdep_reader_access(ptr noundef %d_seq.i.i) #13
  %25 = ptrtoint ptr %d_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %d_seq.i.i, align 4
  %and43108.i.i = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and43108.i.i)
  %tobool44.not109.i.i = icmp eq i32 %and43108.i.i, 0
  br i1 %tobool44.not109.i.i, label %if.then35.i.i.cleanup65.i.i_crit_edge, label %if.then35.i.i.do.end.i.i_crit_edge

if.then35.i.i.do.end.i.i_crit_edge:               ; preds = %if.then35.i.i
  br label %do.end.i.i

if.then35.i.i.cleanup65.i.i_crit_edge:            ; preds = %if.then35.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup65.i.i

do.end.i.i:                                       ; preds = %do.end.i.i.do.end.i.i_crit_edge, %if.then35.i.i.do.end.i.i_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !428
  call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #13, !srcloc !429
  %27 = ptrtoint ptr %d_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %d_seq.i.i, align 4
  %and43.i.i = and i32 %28, 1
  %tobool44.not.i.i = icmp eq i32 %and43.i.i, 0
  br i1 %tobool44.not.i.i, label %do.end.i.i.cleanup65.i.i_crit_edge, label %do.end.i.i.do.end.i.i_crit_edge

do.end.i.i.do.end.i.i_crit_edge:                  ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end.i.i

do.end.i.i.cleanup65.i.i_crit_edge:               ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup65.i.i

if.end60.i.i:                                     ; preds = %if.then32.i.i
  %m_seq.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 7
  %29 = ptrtoint ptr %m_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %m_seq.i.i, align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !409
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mount_lock to i32))
  %31 = load volatile i32, ptr @mount_lock, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %31, i32 %30)
  %cmp.i.i.i.not.i.i = icmp eq i32 %31, %30
  %and69.i.i = and i32 %flags.2.i.i, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69.i.i)
  %tobool70.not.i.i = icmp eq i32 %and69.i.i, 0
  %or.cond.i = select i1 %cmp.i.i.i.not.i.i, i1 %tobool70.not.i.i, i1 false
  br i1 %or.cond.i, label %if.end60.i.i.handle_mounts.exit.thread_crit_edge, label %if.end60.i.i.if.end16.i_crit_edge, !prof !430

if.end60.i.i.if.end16.i_crit_edge:                ; preds = %if.end60.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16.i

if.end60.i.i.handle_mounts.exit.thread_crit_edge: ; preds = %if.end60.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %handle_mounts.exit.thread

cleanup65.i.i:                                    ; preds = %do.end.i.i.cleanup65.i.i_crit_edge, %if.then35.i.i.cleanup65.i.i_crit_edge
  %.lcssa.i.i = phi i32 [ %26, %if.then35.i.i.cleanup65.i.i_crit_edge ], [ %28, %do.end.i.i.cleanup65.i.i_crit_edge ]
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !431
  %d_inode.i.i = getelementptr inbounds %struct.dentry, ptr %21, i32 0, i32 5
  %32 = ptrtoint ptr %d_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %d_inode.i.i, align 8
  %34 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %21, align 8
  br label %for.cond.i.i

if.end68.i.i:                                     ; preds = %if.end29.i.i
  %and69.i.old.i = and i32 %flags.2.i.i, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69.i.old.i)
  %tobool70.not.i.old.i = icmp eq i32 %and69.i.old.i, 0
  br i1 %tobool70.not.i.old.i, label %if.end68.i.i.handle_mounts.exit.thread_crit_edge, label %if.end68.i.i.if.end16.i_crit_edge, !prof !362

if.end68.i.i.if.end16.i_crit_edge:                ; preds = %if.end68.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16.i

if.end68.i.i.handle_mounts.exit.thread_crit_edge: ; preds = %if.end68.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %handle_mounts.exit.thread

if.end16.i:                                       ; preds = %if.end68.i.i.if.end16.i_crit_edge, %if.end60.i.i.if.end16.i_crit_edge, %if.then24.i.i.if.end16.i_crit_edge, %if.end.i.i.if.end16.i_crit_edge
  %inode.addr.1 = phi ptr [ %inode.addr.0, %if.end68.i.i.if.end16.i_crit_edge ], [ %inode.addr.0, %if.end60.i.i.if.end16.i_crit_edge ], [ %inode, %if.end.i.i.if.end16.i_crit_edge ], [ %inode.addr.0, %if.then24.i.i.if.end16.i_crit_edge ]
  %seq.addr.1 = phi i32 [ %seq.addr.0, %if.end68.i.i.if.end16.i_crit_edge ], [ %seq.addr.0, %if.end60.i.i.if.end16.i_crit_edge ], [ %seq, %if.end.i.i.if.end16.i_crit_edge ], [ %seq.addr.0, %if.then24.i.i.if.end16.i_crit_edge ]
  %call17.i = call fastcc zeroext i1 @try_to_unlazy_next(ptr noundef %nd, ptr noundef %dentry, i32 noundef %seq) #13
  br i1 %call17.i, label %cleanup.i, label %if.end16.i.handle_mounts.exit.thread86_crit_edge

if.end16.i.handle_mounts.exit.thread86_crit_edge: ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %handle_mounts.exit.thread86

cleanup.i:                                        ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #15
  %36 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %nd, align 8
  %38 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %37, ptr %path, align 8
  %39 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %dentry, ptr %0, align 4
  br label %if.end24.i

if.end24.i:                                       ; preds = %cleanup.i, %entry.if.end24.i_crit_edge
  %inode.addr.2 = phi ptr [ %inode, %entry.if.end24.i_crit_edge ], [ %inode.addr.1, %cleanup.i ]
  %seq.addr.2 = phi i32 [ %seq, %entry.if.end24.i_crit_edge ], [ %seq.addr.1, %cleanup.i ]
  %40 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %flags.i, align 4
  %42 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %0, align 4
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %43, align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !364
  %and.i87.i = and i32 %45, 458752
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i87.i)
  %tobool.not.i88.i = icmp eq i32 %and.i87.i, 0
  br i1 %tobool.not.i88.i, label %traverse_mounts.exit.thread.i, label %traverse_mounts.exit.i, !prof !362

traverse_mounts.exit.thread.i:                    ; preds = %if.end24.i
  %and.i.i.i = and i32 %45, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %cmp.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %cmp.i.i.i, label %traverse_mounts.exit.thread.i.if.then48.i_crit_edge, label %traverse_mounts.exit.thread.i.if.else56.i_crit_edge

traverse_mounts.exit.thread.i.if.else56.i_crit_edge: ; preds = %traverse_mounts.exit.thread.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else56.i

traverse_mounts.exit.thread.i.if.then48.i_crit_edge: ; preds = %traverse_mounts.exit.thread.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then48.i

traverse_mounts.exit.i:                           ; preds = %if.end24.i
  %total_link_count.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 11
  %call16.i.i = call fastcc i32 @__traverse_mounts(ptr noundef nonnull %path, i32 noundef %45, ptr noundef nonnull %jumped.i, ptr noundef %total_link_count.i, i32 noundef %41) #13
  %46 = ptrtoint ptr %jumped.i to i32
  call void @__asan_load1_noabort(i32 %46)
  %.pr.i = load i8, ptr %jumped.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.pr.i)
  %tobool27.not.i = icmp eq i8 %.pr.i, 0
  br i1 %tobool27.not.i, label %traverse_mounts.exit.i.if.end40.i_crit_edge, label %if.then28.i

traverse_mounts.exit.i.if.end40.i_crit_edge:      ; preds = %traverse_mounts.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end40.i

if.then28.i:                                      ; preds = %traverse_mounts.exit.i
  %47 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %flags.i, align 4
  %and30.i = and i32 %48, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30.i)
  %tobool31.not.i = icmp eq i32 %and30.i, 0
  br i1 %tobool31.not.i, label %if.else.i, label %if.then28.i.if.then48.i_crit_edge, !prof !362

if.then28.i.if.then48.i_crit_edge:                ; preds = %if.then28.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then48.i

if.else.i:                                        ; preds = %if.then28.i
  call void @__sanitizer_cov_trace_pc() #15
  %state.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 5
  %49 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %state.i, align 8
  %or.i = or i32 %50, 4
  store i32 %or.i, ptr %state.i, align 8
  br label %if.end40.i

if.end40.i:                                       ; preds = %if.else.i, %traverse_mounts.exit.i.if.end40.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.i.i)
  %tobool41.not.i = icmp eq i32 %call16.i.i, 0
  br i1 %tobool41.not.i, label %if.end40.i.if.else56.i_crit_edge, label %if.end40.i.if.then48.i_crit_edge, !prof !362

if.end40.i.if.then48.i_crit_edge:                 ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then48.i

if.end40.i.if.else56.i_crit_edge:                 ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else56.i

if.then48.i:                                      ; preds = %if.end40.i.if.then48.i_crit_edge, %if.then28.i.if.then48.i_crit_edge, %traverse_mounts.exit.thread.i.if.then48.i_crit_edge
  %ret.0100.i = phi i32 [ %call16.i.i, %if.end40.i.if.then48.i_crit_edge ], [ -18, %if.then28.i.if.then48.i_crit_edge ], [ -2, %traverse_mounts.exit.thread.i.if.then48.i_crit_edge ]
  %51 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %0, align 4
  call void @dput(ptr noundef %52) #13
  %53 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %path, align 8
  %55 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %nd, align 8
  %cmp.not.i = icmp eq ptr %54, %56
  br i1 %cmp.not.i, label %if.then48.i.handle_mounts.exit_crit_edge, label %if.then53.i

if.then48.i.handle_mounts.exit_crit_edge:         ; preds = %if.then48.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %handle_mounts.exit

if.then53.i:                                      ; preds = %if.then48.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @mntput(ptr noundef %54) #13
  br label %handle_mounts.exit

if.else56.i:                                      ; preds = %if.end40.i.if.else56.i_crit_edge, %traverse_mounts.exit.thread.i.if.else56.i_crit_edge
  %57 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %0, align 4
  %d_inode.i90.i = getelementptr inbounds %struct.dentry, ptr %58, i32 0, i32 5
  %59 = ptrtoint ptr %d_inode.i90.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %d_inode.i90.i, align 8
  br label %handle_mounts.exit.thread

handle_mounts.exit.thread:                        ; preds = %if.else56.i, %if.end68.i.i.handle_mounts.exit.thread_crit_edge, %if.end60.i.i.handle_mounts.exit.thread_crit_edge, %if.then24.i.i.handle_mounts.exit.thread_crit_edge, %if.end.i.handle_mounts.exit.thread_crit_edge
  %inode.addr.3.ph = phi ptr [ %inode.addr.0, %if.end60.i.i.handle_mounts.exit.thread_crit_edge ], [ %inode.addr.0, %if.end68.i.i.handle_mounts.exit.thread_crit_edge ], [ %inode, %if.end.i.handle_mounts.exit.thread_crit_edge ], [ %60, %if.else56.i ], [ %inode.addr.0, %if.then24.i.i.handle_mounts.exit.thread_crit_edge ]
  %seq.addr.3.ph = phi i32 [ %seq.addr.0, %if.end60.i.i.handle_mounts.exit.thread_crit_edge ], [ %seq.addr.0, %if.end68.i.i.handle_mounts.exit.thread_crit_edge ], [ %seq, %if.end.i.handle_mounts.exit.thread_crit_edge ], [ 0, %if.else56.i ], [ %seq.addr.0, %if.then24.i.i.handle_mounts.exit.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %jumped.i) #13
  br label %if.end

handle_mounts.exit.thread86:                      ; preds = %if.end16.i.handle_mounts.exit.thread86_crit_edge, %if.then.i.handle_mounts.exit.thread86_crit_edge
  %retval.1.i.ph = phi i32 [ -2, %if.then.i.handle_mounts.exit.thread86_crit_edge ], [ -10, %if.end16.i.handle_mounts.exit.thread86_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %jumped.i) #13
  br label %if.then

handle_mounts.exit:                               ; preds = %if.then53.i, %if.then48.i.handle_mounts.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %jumped.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0100.i)
  %cmp = icmp slt i32 %ret.0100.i, 0
  br i1 %cmp, label %handle_mounts.exit.if.then_crit_edge, label %handle_mounts.exit.if.end_crit_edge

handle_mounts.exit.if.end_crit_edge:              ; preds = %handle_mounts.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

handle_mounts.exit.if.then_crit_edge:             ; preds = %handle_mounts.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

if.then:                                          ; preds = %handle_mounts.exit.if.then_crit_edge, %handle_mounts.exit.thread86
  %retval.1.i91 = phi i32 [ %retval.1.i.ph, %handle_mounts.exit.thread86 ], [ %ret.0100.i, %handle_mounts.exit.if.then_crit_edge ]
  %61 = inttoptr i32 %retval.1.i91 to ptr
  br label %cleanup

if.end:                                           ; preds = %handle_mounts.exit.if.end_crit_edge, %handle_mounts.exit.thread
  %seq.addr.381 = phi i32 [ %seq.addr.3.ph, %handle_mounts.exit.thread ], [ %seq.addr.2, %handle_mounts.exit.if.end_crit_edge ]
  %inode.addr.379 = phi ptr [ %inode.addr.3.ph, %handle_mounts.exit.thread ], [ %inode.addr.2, %handle_mounts.exit.if.end_crit_edge ]
  %62 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %0, align 4
  %64 = ptrtoint ptr %63 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %63, align 8
  %and.i.i69 = and i32 %65, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 6291456, i32 %and.i.i69)
  %cmp.i = icmp eq i32 %and.i.i69, 6291456
  br i1 %cmp.i, label %lor.lhs.false, label %if.end.if.then13_crit_edge, !prof !360

if.end.if.then13_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then13

lor.lhs.false:                                    ; preds = %if.end
  %and = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool6.not = icmp eq i32 %and, 0
  br i1 %tobool6.not, label %lor.lhs.false10, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false
  %66 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %flags.i, align 4
  %and8 = and i32 %67, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp ne i32 %and8, 0
  %and11 = and i32 %flags, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11)
  %tobool12.not = icmp eq i32 %and11, 0
  %or.cond = and i1 %tobool12.not, %tobool9.not
  br i1 %or.cond, label %land.lhs.true.if.end31_crit_edge, label %land.lhs.true.if.then13_crit_edge

land.lhs.true.if.then13_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then13

land.lhs.true.if.end31_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end31

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %and11.old = and i32 %flags, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11.old)
  %tobool12.not.old = icmp eq i32 %and11.old, 0
  br i1 %tobool12.not.old, label %lor.lhs.false10.if.end31_crit_edge, label %lor.lhs.false10.if.then13_crit_edge

lor.lhs.false10.if.then13_crit_edge:              ; preds = %lor.lhs.false10
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then13

lor.lhs.false10.if.end31_crit_edge:               ; preds = %lor.lhs.false10
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end31

if.then13:                                        ; preds = %lor.lhs.false10.if.then13_crit_edge, %land.lhs.true.if.then13_crit_edge, %if.end.if.then13_crit_edge
  %68 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %flags.i, align 4
  %and15 = and i32 %69, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15)
  %tobool16.not = icmp eq i32 %and15, 0
  br i1 %tobool16.not, label %if.then17, label %if.then13.if.end27_crit_edge

if.then13.if.end27_crit_edge:                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end27

if.then17:                                        ; preds = %if.then13
  %dentry19 = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %70 = ptrtoint ptr %dentry19 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %dentry19, align 4
  call void @dput(ptr noundef %71) #13
  %72 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %nd, align 8
  %74 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %path, align 8
  %cmp22.not = icmp eq ptr %73, %75
  br i1 %cmp22.not, label %if.then17.if.end27_crit_edge, label %if.then23

if.then17.if.end27_crit_edge:                     ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end27

if.then23:                                        ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #15
  call void @mntput(ptr noundef %73) #13
  br label %if.end27

if.end27:                                         ; preds = %if.then23, %if.then17.if.end27_crit_edge, %if.then13.if.end27_crit_edge
  %76 = ptrtoint ptr %path to i32
  call void @__asan_load8_noabort(i32 %76)
  %77 = load i64, ptr %path, align 8
  %78 = ptrtoint ptr %nd to i32
  call void @__asan_store8_noabort(i32 %78)
  store i64 %77, ptr %nd, align 8
  %inode29 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 3
  %79 = ptrtoint ptr %inode29 to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr %inode.addr.379, ptr %inode29, align 8
  %seq30 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 6
  %80 = ptrtoint ptr %seq30 to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 %seq.addr.381, ptr %seq30, align 4
  br label %cleanup

if.end31:                                         ; preds = %lor.lhs.false10.if.end31_crit_edge, %land.lhs.true.if.end31_crit_edge
  %81 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %flags.i, align 4
  %and33 = and i32 %82, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and33)
  %tobool34.not = icmp eq i32 %and33, 0
  br i1 %tobool34.not, label %if.else, label %if.then35

if.then35:                                        ; preds = %if.end31
  %d_seq = getelementptr inbounds %struct.dentry, ptr %63, i32 0, i32 1
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !409
  %83 = ptrtoint ptr %d_seq to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load volatile i32, ptr %d_seq, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %84, i32 %seq.addr.381)
  %cmp.i.i.not = icmp eq i32 %84, %seq.addr.381
  br i1 %cmp.i.i.not, label %if.then35.if.end51_crit_edge, label %if.then35.cleanup_crit_edge

if.then35.cleanup_crit_edge:                      ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then35.if.end51_crit_edge:                     ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end51

if.else:                                          ; preds = %if.end31
  %85 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %path, align 8
  %87 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %nd, align 8
  %cmp46 = icmp eq ptr %86, %88
  br i1 %cmp46, label %if.then47, label %if.else.if.end51_crit_edge

if.else.if.end51_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end51

if.then47:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  %call49 = call ptr @mntget(ptr noundef %86) #13
  br label %if.end51

if.end51:                                         ; preds = %if.then47, %if.else.if.end51_crit_edge, %if.then35.if.end51_crit_edge
  %call52 = call fastcc ptr @pick_link(ptr noundef %nd, ptr noundef nonnull %path, ptr noundef %inode.addr.379, i32 noundef %seq.addr.381, i32 noundef %flags)
  br label %cleanup

cleanup:                                          ; preds = %if.end51, %if.then35.cleanup_crit_edge, %if.end27, %if.then
  %retval.0 = phi ptr [ %61, %if.then ], [ null, %if.end27 ], [ %call52, %if.end51 ], [ inttoptr (i32 -10 to ptr), %if.then35.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path) #13
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @pick_link(ptr noundef %nd, ptr nocapture noundef %link, ptr noundef %inode, i32 noundef %seq, i32 noundef %flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %total_link_count.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 11
  %0 = ptrtoint ptr %total_link_count.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %total_link_count.i, align 8
  %inc.i = add i32 %1, 1
  store i32 %inc.i, ptr %total_link_count.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 39, i32 %1)
  %cmp.i = icmp sgt i32 %1, 39
  br i1 %cmp.i, label %entry.if.then_crit_edge, label %if.end.i, !prof !360

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

if.end.i:                                         ; preds = %entry
  %depth.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 10
  %2 = ptrtoint ptr %depth.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %depth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %3)
  %cmp2.not.i = icmp eq i32 %3, 2
  br i1 %cmp2.not.i, label %if.end10.i, label %if.end.i.if.end7_crit_edge, !prof !360

if.end.i.if.end7_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7

if.end10.i:                                       ; preds = %if.end.i
  %stack.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 12
  %4 = ptrtoint ptr %stack.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %stack.i, align 4
  %internal.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 13
  %cmp11.not.i = icmp eq ptr %5, %internal.i
  br i1 %cmp11.not.i, label %if.end19.i, label %if.end10.i.if.end7_crit_edge, !prof !360

if.end10.i.if.end7_crit_edge:                     ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7

if.end19.i:                                       ; preds = %if.end10.i
  %call.i = tail call fastcc zeroext i1 @nd_alloc_stack(ptr noundef %nd) #13
  br i1 %call.i, label %if.end19.i.if.end7_crit_edge, label %if.end27.i, !prof !362

if.end19.i.if.end7_crit_edge:                     ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7

if.end27.i:                                       ; preds = %if.end19.i
  %flags.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %6 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %7, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool28.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool28.not.i, label %if.end27.i.if.then_crit_edge, label %if.then29.i

if.end27.i.if.then_crit_edge:                     ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

if.then29.i:                                      ; preds = %if.end27.i
  %call30.i = tail call fastcc zeroext i1 @legitimize_path(ptr noundef %nd, ptr noundef %link, i32 noundef %seq) #13
  %call31.i = tail call fastcc zeroext i1 @try_to_unlazy(ptr noundef %nd) #13
  %8 = select i1 %call31.i, i1 %call30.i, i1 false
  br i1 %8, label %cleanup.i, label %if.then29.i.if.then_crit_edge

if.then29.i.if.then_crit_edge:                    ; preds = %if.then29.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

cleanup.i:                                        ; preds = %if.then29.i
  %call38.i = tail call fastcc zeroext i1 @nd_alloc_stack(ptr noundef %nd) #13
  br i1 %call38.i, label %cleanup.i.if.end7_crit_edge, label %cleanup.i.if.then_crit_edge

cleanup.i.if.then_crit_edge:                      ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

cleanup.i.if.end7_crit_edge:                      ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7

if.then:                                          ; preds = %cleanup.i.if.then_crit_edge, %if.then29.i.if.then_crit_edge, %if.end27.i.if.then_crit_edge, %entry.if.then_crit_edge
  %retval.1.i = phi ptr [ inttoptr (i32 -40 to ptr), %entry.if.then_crit_edge ], [ inttoptr (i32 -10 to ptr), %if.then29.i.if.then_crit_edge ], [ inttoptr (i32 -12 to ptr), %cleanup.i.if.then_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end27.i.if.then_crit_edge ]
  %flags3 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %9 = ptrtoint ptr %flags3 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags3, align 4
  %and = and i32 %10, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %if.then5, label %if.then.cleanup130_crit_edge

if.then.cleanup130_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup130

if.then5:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @path_put(ptr noundef %link)
  br label %cleanup130

if.end7:                                          ; preds = %cleanup.i.if.end7_crit_edge, %if.end19.i.if.end7_crit_edge, %if.end10.i.if.end7_crit_edge, %if.end.i.if.end7_crit_edge
  %stack = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 12
  %11 = ptrtoint ptr %stack to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %stack, align 4
  %13 = ptrtoint ptr %depth.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %depth.i, align 4
  %inc = add i32 %14, 1
  store i32 %inc, ptr %depth.i, align 4
  %add.ptr = getelementptr %struct.saved, ptr %12, i32 %14
  %15 = ptrtoint ptr %link to i32
  call void @__asan_loadN_noabort(i32 %15, i32 8)
  %16 = load i64, ptr %link, align 4
  %17 = ptrtoint ptr %add.ptr to i32
  call void @__asan_storeN_noabort(i32 %17, i32 8)
  store i64 %16, ptr %add.ptr, align 4
  %done = getelementptr %struct.saved, ptr %12, i32 %14, i32 1
  %18 = ptrtoint ptr %done to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %done, align 4
  %seq9 = getelementptr %struct.saved, ptr %12, i32 %14, i32 3
  %19 = ptrtoint ptr %seq9 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %seq, ptr %seq9, align 4
  %and10 = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10)
  %tobool11.not = icmp eq i32 %and10, 0
  br i1 %tobool11.not, label %if.end7.if.end24_crit_edge, label %if.then12

if.end7.if.end24_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end24

if.then12:                                        ; preds = %if.end7
  %20 = load i32, ptr @sysctl_protected_symlinks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.not.i = icmp eq i32 %20, 0
  br i1 %tobool.not.i, label %if.then12.if.end24_crit_edge, label %if.end.i184

if.then12.if.end24_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end24

if.end.i184:                                      ; preds = %if.then12
  %21 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %nd, align 8
  %mnt_userns.i.i = getelementptr inbounds %struct.vfsmount, ptr %22, i32 0, i32 3
  %23 = ptrtoint ptr %mnt_userns.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile ptr, ptr %mnt_userns.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !371
  %i_sb.i.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %25 = ptrtoint ptr %i_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %i_sb.i.i.i, align 4
  %s_user_ns.i.i.i = getelementptr inbounds %struct.super_block, ptr %26, i32 0, i32 53
  %27 = ptrtoint ptr %s_user_ns.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %s_user_ns.i.i.i, align 8
  %i_uid.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 2
  %29 = ptrtoint ptr %i_uid.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %.unpack.i.i = load i32, ptr %i_uid.i.i, align 4
  %30 = insertvalue [1 x i32] undef, i32 %.unpack.i.i, 0
  %cmp.i.i.i.i.i = icmp eq ptr %24, @init_user_ns
  %cmp.i.i.i.i = icmp eq ptr %28, %24
  %spec.select.i.i.i.i = or i1 %cmp.i.i.i.i.i, %cmp.i.i.i.i
  br i1 %spec.select.i.i.i.i, label %if.end.i184.i_uid_into_mnt.exit.i_crit_edge, label %if.end.i.i.i

if.end.i184.i_uid_into_mnt.exit.i_crit_edge:      ; preds = %if.end.i184
  call void @__sanitizer_cov_trace_pc() #15
  br label %i_uid_into_mnt.exit.i

if.end.i.i.i:                                     ; preds = %if.end.i184
  %cmp.i21.i.i.i = icmp eq ptr %28, @init_user_ns
  br i1 %cmp.i21.i.i.i, label %if.end.i.i.i.if.end7.i.i.i_crit_edge, label %if.else.i.i.i

if.end.i.i.i.if.end7.i.i.i_crit_edge:             ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7.i.i.i

if.else.i.i.i:                                    ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call6.i.i.i = tail call i32 @from_kuid(ptr noundef %28, [1 x i32] %30) #13
  br label %if.end7.i.i.i

if.end7.i.i.i:                                    ; preds = %if.else.i.i.i, %if.end.i.i.i.if.end7.i.i.i_crit_edge
  %uid.0.i.i.i = phi i32 [ %call6.i.i.i, %if.else.i.i.i ], [ %.unpack.i.i, %if.end.i.i.i.if.end7.i.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %uid.0.i.i.i)
  %cmp.i.i.i = icmp eq i32 %uid.0.i.i.i, -1
  br i1 %cmp.i.i.i, label %if.end7.i.i.i.i_uid_into_mnt.exit.i_crit_edge, label %if.end9.i.i.i

if.end7.i.i.i.i_uid_into_mnt.exit.i_crit_edge:    ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %i_uid_into_mnt.exit.i

if.end9.i.i.i:                                    ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call10.i.i.i = tail call i32 @make_kuid(ptr noundef %24, i32 noundef %uid.0.i.i.i) #13
  br label %i_uid_into_mnt.exit.i

i_uid_into_mnt.exit.i:                            ; preds = %if.end9.i.i.i, %if.end7.i.i.i.i_uid_into_mnt.exit.i_crit_edge, %if.end.i184.i_uid_into_mnt.exit.i_crit_edge
  %retval.sroa.0.0.i.i.i = phi i32 [ %call10.i.i.i, %if.end9.i.i.i ], [ -1, %if.end7.i.i.i.i_uid_into_mnt.exit.i_crit_edge ], [ %.unpack.i.i, %if.end.i184.i_uid_into_mnt.exit.i_crit_edge ]
  %31 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 2
  %33 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %34, i32 0, i32 99
  %35 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %cred.i, align 16
  %fsuid.i = getelementptr inbounds %struct.cred, ptr %36, i32 0, i32 10
  %37 = ptrtoint ptr %fsuid.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %.unpack.i = load i32, ptr %fsuid.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %.unpack.i, i32 %retval.sroa.0.0.i.i.i)
  %cmp.i.i = icmp eq i32 %.unpack.i, %retval.sroa.0.0.i.i.i
  br i1 %cmp.i.i, label %i_uid_into_mnt.exit.i.if.end24_crit_edge, label %if.end8.i

i_uid_into_mnt.exit.i.if.end24_crit_edge:         ; preds = %i_uid_into_mnt.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end24

if.end8.i:                                        ; preds = %i_uid_into_mnt.exit.i
  %dir_mode.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 19
  %38 = ptrtoint ptr %dir_mode.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %dir_mode.i, align 4
  %40 = and i16 %39, 514
  call void @__sanitizer_cov_trace_const_cmp2(i16 514, i16 %40)
  %cmp.not.i = icmp eq i16 %40, 514
  br i1 %cmp.not.i, label %if.end11.i, label %if.end8.i.if.end24_crit_edge

if.end8.i.if.end24_crit_edge:                     ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end24

if.end11.i:                                       ; preds = %if.end8.i
  %dir_uid.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 18
  %41 = ptrtoint ptr %dir_uid.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %.unpack37.i = load i32, ptr %dir_uid.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %.unpack37.i)
  %cmp.i39.i = icmp ne i32 %.unpack37.i, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %.unpack37.i, i32 %retval.sroa.0.0.i.i.i)
  %cmp.i40.i = icmp eq i32 %.unpack37.i, %retval.sroa.0.0.i.i.i
  %or.cond.i = select i1 %cmp.i39.i, i1 %cmp.i40.i, i1 false
  br i1 %or.cond.i, label %if.end11.i.if.end24_crit_edge, label %if.end21.i

if.end11.i.if.end24_crit_edge:                    ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end24

if.end21.i:                                       ; preds = %if.end11.i
  %flags.i185 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %42 = ptrtoint ptr %flags.i185 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %flags.i185, align 4
  %and22.i = and i32 %43, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22.i)
  %tobool23.not.i = icmp eq i32 %and22.i, 0
  br i1 %tobool23.not.i, label %if.end25.i, label %if.end21.i.cleanup130_crit_edge

if.end21.i.cleanup130_crit_edge:                  ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup130

if.end25.i:                                       ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @audit_log_path_denied(i32 noundef 1702, ptr noundef nonnull @.str.54) #13
  br label %cleanup130

if.end24:                                         ; preds = %if.end11.i.if.end24_crit_edge, %if.end8.i.if.end24_crit_edge, %i_uid_into_mnt.exit.i.if.end24_crit_edge, %if.then12.if.end24_crit_edge, %if.end7.if.end24_crit_edge
  %flags25 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %44 = ptrtoint ptr %flags25 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %flags25, align 4
  %and26 = and i32 %45, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26)
  %tobool27.not = icmp eq i32 %and26, 0
  br i1 %tobool27.not, label %lor.lhs.false, label %if.end24.cleanup130_crit_edge, !prof !362

if.end24.cleanup130_crit_edge:                    ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup130

lor.lhs.false:                                    ; preds = %if.end24
  %46 = ptrtoint ptr %link to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %link, align 4
  %mnt_flags = getelementptr inbounds %struct.vfsmount, ptr %47, i32 0, i32 2
  %48 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %mnt_flags, align 4
  %and34 = and i32 %49, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34)
  %tobool35.not = icmp eq i32 %and34, 0
  br i1 %tobool35.not, label %if.end44, label %lor.lhs.false.cleanup130_crit_edge, !prof !362

lor.lhs.false.cleanup130_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup130

if.end44:                                         ; preds = %lor.lhs.false
  %and46 = and i32 %45, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and46)
  %tobool47.not = icmp eq i32 %and46, 0
  br i1 %tobool47.not, label %if.then48, label %if.else

if.then48:                                        ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @touch_atime(ptr noundef %add.ptr) #13
  tail call void @__might_resched(ptr noundef nonnull @.str.1, i32 noundef 1797, i32 noundef 0) #13
  %call.i187 = tail call i32 @__cond_resched() #13
  br label %if.end60

if.else:                                          ; preds = %if.end44
  %call52 = tail call zeroext i1 @atime_needs_update(ptr noundef %add.ptr, ptr noundef %inode) #13
  br i1 %call52, label %if.then53, label %if.else.if.end60_crit_edge

if.else.if.end60_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end60

if.then53:                                        ; preds = %if.else
  %call54 = tail call fastcc zeroext i1 @try_to_unlazy(ptr noundef %nd)
  br i1 %call54, label %if.end57, label %if.then53.cleanup130_crit_edge

if.then53.cleanup130_crit_edge:                   ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup130

if.end57:                                         ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @touch_atime(ptr noundef %add.ptr) #13
  br label %if.end60

if.end60:                                         ; preds = %if.end57, %if.else.if.end60_crit_edge, %if.then48
  %dentry = getelementptr inbounds %struct.path, ptr %link, i32 0, i32 1
  %50 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %dentry, align 4
  %52 = ptrtoint ptr %flags25 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %flags25, align 4
  %and62 = and i32 %53, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and62)
  %tobool63 = icmp ne i32 %and62, 0
  %call64 = tail call i32 @security_inode_follow_link(ptr noundef %51, ptr noundef %inode, i1 noundef zeroext %tobool63) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call64)
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %do.end, label %if.then72, !prof !362

if.then72:                                        ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #15
  %54 = inttoptr i32 %call64 to ptr
  br label %cleanup130

do.end:                                           ; preds = %if.end60
  %55 = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 48
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile ptr, ptr %55, align 4
  %tobool76.not = icmp eq ptr %57, null
  br i1 %tobool76.not, label %if.then77, label %do.end.if.end102_crit_edge

do.end.if.end102_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end102

if.then77:                                        ; preds = %do.end
  %i_op = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 7
  %58 = ptrtoint ptr %i_op to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %i_op, align 8
  %get_link = getelementptr inbounds %struct.inode_operations, ptr %59, i32 0, i32 1
  %60 = ptrtoint ptr %get_link to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %get_link, align 4
  %62 = ptrtoint ptr %flags25 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %flags25, align 4
  %and79 = and i32 %63, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and79)
  %tobool80.not = icmp eq i32 %and79, 0
  br i1 %tobool80.not, label %if.then77.if.end95.sink.split_crit_edge, label %if.then81

if.then77.if.end95.sink.split_crit_edge:          ; preds = %if.then77
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end95.sink.split

if.then81:                                        ; preds = %if.then77
  %call83 = tail call ptr %61(ptr noundef null, ptr noundef %inode, ptr noundef %done) #13
  %cmp = icmp eq ptr %call83, inttoptr (i32 -10 to ptr)
  br i1 %cmp, label %land.lhs.true, label %if.then81.if.end95_crit_edge

if.then81.if.end95_crit_edge:                     ; preds = %if.then81
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end95

land.lhs.true:                                    ; preds = %if.then81
  %call85 = tail call fastcc zeroext i1 @try_to_unlazy(ptr noundef %nd)
  br i1 %call85, label %land.lhs.true.if.end95.sink.split_crit_edge, label %land.lhs.true.cleanup130_crit_edge

land.lhs.true.cleanup130_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup130

land.lhs.true.if.end95.sink.split_crit_edge:      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end95.sink.split

if.end95.sink.split:                              ; preds = %land.lhs.true.if.end95.sink.split_crit_edge, %if.then77.if.end95.sink.split_crit_edge
  %64 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %dentry, align 4
  %call89 = tail call ptr %61(ptr noundef %65, ptr noundef %inode, ptr noundef %done) #13
  br label %if.end95

if.end95:                                         ; preds = %if.end95.sink.split, %if.then81.if.end95_crit_edge
  %res.0 = phi ptr [ %call83, %if.then81.if.end95_crit_edge ], [ %call89, %if.end95.sink.split ]
  %tobool96.not = icmp eq ptr %res.0, null
  br i1 %tobool96.not, label %if.end95.all_done_crit_edge, label %if.end98

if.end95.all_done_crit_edge:                      ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #15
  br label %all_done

if.end98:                                         ; preds = %if.end95
  %cmp.i188 = icmp ugt ptr %res.0, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i188, label %if.end98.cleanup130_crit_edge, label %if.end98.if.end102_crit_edge

if.end98.if.end102_crit_edge:                     ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end102

if.end98.cleanup130_crit_edge:                    ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup130

if.end102:                                        ; preds = %if.end98.if.end102_crit_edge, %do.end.if.end102_crit_edge
  %res.1 = phi ptr [ %57, %do.end.if.end102_crit_edge ], [ %res.0, %if.end98.if.end102_crit_edge ]
  %66 = ptrtoint ptr %res.1 to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %res.1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 47, i8 %67)
  %cmp103 = icmp eq i8 %67, 47
  br i1 %cmp103, label %if.then105, label %if.end102.if.end126_crit_edge

if.end102.if.end126_crit_edge:                    ; preds = %if.end102
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end126

if.then105:                                       ; preds = %if.end102
  %call106 = tail call fastcc i32 @nd_jump_root(ptr noundef %nd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call106)
  %tobool107.not = icmp eq i32 %call106, 0
  br i1 %tobool107.not, label %if.then105.while.cond_crit_edge, label %if.then114, !prof !362

if.then105.while.cond_crit_edge:                  ; preds = %if.then105
  br label %while.cond

if.then114:                                       ; preds = %if.then105
  call void @__sanitizer_cov_trace_pc() #15
  %68 = inttoptr i32 %call106 to ptr
  br label %cleanup130

while.cond:                                       ; preds = %while.cond.while.cond_crit_edge, %if.then105.while.cond_crit_edge
  %res.2 = phi ptr [ %incdec.ptr, %while.cond.while.cond_crit_edge ], [ %res.1, %if.then105.while.cond_crit_edge ]
  %incdec.ptr = getelementptr i8, ptr %res.2, i32 1
  %69 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load1_noabort(i32 %69)
  %70 = load i8, ptr %incdec.ptr, align 1
  %cmp118 = icmp eq i8 %70, 47
  br i1 %cmp118, label %while.cond.while.cond_crit_edge, label %while.cond.if.end126_crit_edge, !prof !360

while.cond.if.end126_crit_edge:                   ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end126

while.cond.while.cond_crit_edge:                  ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond

if.end126:                                        ; preds = %while.cond.if.end126_crit_edge, %if.end102.if.end126_crit_edge
  %71 = phi i8 [ %67, %if.end102.if.end126_crit_edge ], [ %70, %while.cond.if.end126_crit_edge ]
  %res.3 = phi ptr [ %res.1, %if.end102.if.end126_crit_edge ], [ %incdec.ptr, %while.cond.if.end126_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %71)
  %tobool127.not = icmp eq i8 %71, 0
  br i1 %tobool127.not, label %if.end126.all_done_crit_edge, label %if.end126.cleanup130_crit_edge

if.end126.cleanup130_crit_edge:                   ; preds = %if.end126
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup130

if.end126.all_done_crit_edge:                     ; preds = %if.end126
  call void @__sanitizer_cov_trace_pc() #15
  br label %all_done

all_done:                                         ; preds = %if.end126.all_done_crit_edge, %if.end95.all_done_crit_edge
  %72 = ptrtoint ptr %stack to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %stack, align 4
  %74 = ptrtoint ptr %depth.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %depth.i, align 4
  %dec.i = add i32 %75, -1
  store i32 %dec.i, ptr %depth.i, align 4
  %done.i = getelementptr %struct.saved, ptr %73, i32 %dec.i, i32 1
  %76 = ptrtoint ptr %done.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %done.i, align 4
  %tobool.not.i.i = icmp eq ptr %77, null
  br i1 %tobool.not.i.i, label %all_done.do_delayed_call.exit.i_crit_edge, label %if.then.i.i

all_done.do_delayed_call.exit.i_crit_edge:        ; preds = %all_done
  call void @__sanitizer_cov_trace_pc() #15
  br label %do_delayed_call.exit.i

if.then.i.i:                                      ; preds = %all_done
  call void @__sanitizer_cov_trace_pc() #15
  %arg.i.i = getelementptr %struct.saved, ptr %73, i32 %dec.i, i32 1, i32 1
  %78 = ptrtoint ptr %arg.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %arg.i.i, align 4
  tail call void %77(ptr noundef %79) #13
  br label %do_delayed_call.exit.i

do_delayed_call.exit.i:                           ; preds = %if.then.i.i, %all_done.do_delayed_call.exit.i_crit_edge
  %80 = ptrtoint ptr %flags25 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %flags25, align 4
  %and.i192 = and i32 %81, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i192)
  %tobool.not.i193 = icmp eq i32 %and.i192, 0
  br i1 %tobool.not.i193, label %if.then.i, label %do_delayed_call.exit.i.cleanup130_crit_edge

do_delayed_call.exit.i.cleanup130_crit_edge:      ; preds = %do_delayed_call.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup130

if.then.i:                                        ; preds = %do_delayed_call.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr.i = getelementptr %struct.saved, ptr %73, i32 %dec.i
  %dentry.i.i = getelementptr inbounds %struct.path, ptr %add.ptr.i, i32 0, i32 1
  %82 = ptrtoint ptr %dentry.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %dentry.i.i, align 4
  tail call void @dput(ptr noundef %83) #13
  %84 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %add.ptr.i, align 4
  tail call void @mntput(ptr noundef %85) #13
  br label %cleanup130

cleanup130:                                       ; preds = %if.then.i, %do_delayed_call.exit.i.cleanup130_crit_edge, %if.end126.cleanup130_crit_edge, %if.then114, %if.end98.cleanup130_crit_edge, %land.lhs.true.cleanup130_crit_edge, %if.then72, %if.then53.cleanup130_crit_edge, %lor.lhs.false.cleanup130_crit_edge, %if.end24.cleanup130_crit_edge, %if.end25.i, %if.end21.i.cleanup130_crit_edge, %if.then5, %if.then.cleanup130_crit_edge
  %retval.1 = phi ptr [ %54, %if.then72 ], [ %68, %if.then114 ], [ %res.3, %if.end126.cleanup130_crit_edge ], [ inttoptr (i32 -40 to ptr), %lor.lhs.false.cleanup130_crit_edge ], [ inttoptr (i32 -40 to ptr), %if.end24.cleanup130_crit_edge ], [ inttoptr (i32 -10 to ptr), %if.then53.cleanup130_crit_edge ], [ null, %do_delayed_call.exit.i.cleanup130_crit_edge ], [ null, %if.then.i ], [ %res.0, %if.end98.cleanup130_crit_edge ], [ inttoptr (i32 -10 to ptr), %land.lhs.true.cleanup130_crit_edge ], [ %retval.1.i, %if.then5 ], [ %retval.1.i, %if.then.cleanup130_crit_edge ], [ inttoptr (i32 -13 to ptr), %if.end25.i ], [ inttoptr (i32 -10 to ptr), %if.end21.i.cleanup130_crit_edge ]
  ret ptr %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @try_to_unlazy_next(ptr nocapture noundef %nd, ptr noundef %dentry, i32 noundef %seq) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = and i32 %1, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.body4, label %do.end7, !prof !360

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 808, 0\0A.popsection", ""() #13, !srcloc !432
  unreachable

do.end7:                                          ; preds = %entry
  %and9 = and i32 %1, -65
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %and9, ptr %flags, align 4
  %call = tail call fastcc zeroext i1 @legitimize_links(ptr noundef %nd)
  br i1 %call, label %if.end19, label %do.end7.out2_crit_edge, !prof !362

do.end7.out2_crit_edge:                           ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #15
  br label %out2

if.end19:                                         ; preds = %do.end7
  %3 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %nd, align 8
  %m_seq = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 7
  %5 = ptrtoint ptr %m_seq to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %m_seq, align 8
  %call20 = tail call zeroext i1 @legitimize_mnt(ptr noundef %4, i32 noundef %6) #13
  br i1 %call20, label %if.end30, label %if.end19.out2_crit_edge, !prof !362

if.end19.out2_crit_edge:                          ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %out2

if.end30:                                         ; preds = %if.end19
  %dentry32 = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %7 = ptrtoint ptr %dentry32 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dentry32, align 4
  %d_lockref = getelementptr inbounds %struct.dentry, ptr %8, i32 0, i32 7
  %call33 = tail call i32 @lockref_get_not_dead(ptr noundef %d_lockref) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %if.end30.out1_crit_edge, label %if.end44, !prof !360

if.end30.out1_crit_edge:                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #15
  br label %out1

if.end44:                                         ; preds = %if.end30
  %d_lockref45 = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 7
  %call46 = tail call i32 @lockref_get_not_dead(ptr noundef %d_lockref45) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call46)
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %if.end44.out_crit_edge, label %if.end57, !prof !360

if.end44.out_crit_edge:                           ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end57:                                         ; preds = %if.end44
  %d_seq = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !409
  %9 = ptrtoint ptr %d_seq to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %d_seq, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %seq)
  %cmp.i.i.not = icmp eq i32 %10, %seq
  br i1 %cmp.i.i.not, label %if.end68, label %if.end57.out_dput_crit_edge, !prof !362

if.end57.out_dput_crit_edge:                      ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_dput

if.end68:                                         ; preds = %if.end57
  %root.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2
  %11 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %root.i, align 8
  %tobool.not.i = icmp eq ptr %12, null
  br i1 %tobool.not.i, label %legitimize_root.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end68
  %state.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 5
  %13 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %state.i, align 8
  %and5.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %lor.lhs.false.i.if.end79_crit_edge

lor.lhs.false.i.if.end79_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end79

if.end8.i:                                        ; preds = %lor.lhs.false.i
  %or.i = or i32 %14, 2
  %15 = ptrtoint ptr %state.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %or.i, ptr %state.i, align 8
  %root_seq.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 16
  %16 = ptrtoint ptr %root_seq.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %root_seq.i, align 8
  %18 = ptrtoint ptr %m_seq to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %m_seq, align 8
  %call.i.i.i = tail call i32 @__legitimize_mnt(ptr noundef nonnull %12, i32 noundef %19) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end5.i.i.i, label %if.then.i.i.i, !prof !362

if.then.i.i.i:                                    ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.i.i.i = icmp sgt i32 %call.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then3.i.i.i, label %if.then.i.i.i.if.end.i.i.i_crit_edge

if.then.i.i.i.if.end.i.i.i_crit_edge:             ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i.i.i

if.then3.i.i.i:                                   ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %20 = ptrtoint ptr %root.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %root.i, align 4
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then3.i.i.i, %if.then.i.i.i.if.end.i.i.i_crit_edge
  %dentry.i.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2, i32 1
  br label %out_dput.sink.split

if.end5.i.i.i:                                    ; preds = %if.end8.i
  %dentry6.i.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2, i32 1
  %21 = ptrtoint ptr %dentry6.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %dentry6.i.i.i, align 4
  %d_lockref.i.i.i = getelementptr inbounds %struct.dentry, ptr %22, i32 0, i32 7
  %call7.i.i.i = tail call i32 @lockref_get_not_dead(ptr noundef %d_lockref.i.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i.i.i)
  %tobool8.not.i.i.i = icmp eq i32 %call7.i.i.i, 0
  br i1 %tobool8.not.i.i.i, label %if.end5.i.i.i.out_dput.sink.split_crit_edge, label %if.end19.i.i.i, !prof !360

if.end5.i.i.i.out_dput.sink.split_crit_edge:      ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_dput.sink.split

if.end19.i.i.i:                                   ; preds = %if.end5.i.i.i
  %23 = ptrtoint ptr %dentry6.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %dentry6.i.i.i, align 4
  %d_seq.i.i.i = getelementptr inbounds %struct.dentry, ptr %24, i32 0, i32 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !409
  %25 = ptrtoint ptr %d_seq.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %d_seq.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %26, i32 %17)
  %cmp.i.i.not.i.i.i = icmp eq i32 %26, %17
  br i1 %cmp.i.i.not.i.i.i, label %if.end19.i.i.i.if.end79_crit_edge, label %if.end19.i.i.i.out_dput_crit_edge, !prof !362

if.end19.i.i.i.out_dput_crit_edge:                ; preds = %if.end19.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_dput

if.end19.i.i.i.if.end79_crit_edge:                ; preds = %if.end19.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end79

legitimize_root.exit:                             ; preds = %if.end68
  %27 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %flags, align 4
  %and.i = and i32 %28, 1572864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %legitimize_root.exit.if.end79_crit_edge, label %legitimize_root.exit.out_dput_crit_edge, !prof !362

legitimize_root.exit.out_dput_crit_edge:          ; preds = %legitimize_root.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %out_dput

legitimize_root.exit.if.end79_crit_edge:          ; preds = %legitimize_root.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end79

if.end79:                                         ; preds = %legitimize_root.exit.if.end79_crit_edge, %if.end19.i.i.i.if.end79_crit_edge, %lor.lhs.false.i.if.end79_crit_edge
  %call.i = tail call zeroext i1 @rcu_is_watching() #13
  br i1 %call.i, label %if.end79.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i95

if.end79.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_unlock.exit

land.lhs.true.i95:                                ; preds = %if.end79
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i94 = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i94, label %land.lhs.true.i95.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i95.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i95
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_unlock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i95
  %.b4.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_unlock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_unlock.exit_crit_edge:  ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_unlock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.51, i32 noundef 724, ptr noundef nonnull @.str.53) #13
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i95.rcu_read_unlock.exit_crit_edge, %if.end79.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !418
  %29 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i.i.i.i = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %sub.i.i.i = add i32 %32, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void @rcu_read_unlock_strict() #13
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #13
  br label %return

out2:                                             ; preds = %if.end19.out2_crit_edge, %do.end7.out2_crit_edge
  %33 = ptrtoint ptr %nd to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr null, ptr %nd, align 8
  br label %out1

out1:                                             ; preds = %out2, %if.end30.out1_crit_edge
  %dentry83 = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %34 = ptrtoint ptr %dentry83 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr null, ptr %dentry83, align 4
  br label %out

out:                                              ; preds = %out1, %if.end44.out_crit_edge
  tail call fastcc void @rcu_read_unlock()
  br label %return

out_dput.sink.split:                              ; preds = %if.end5.i.i.i.out_dput.sink.split_crit_edge, %if.end.i.i.i
  %dentry6.i.i.i.sink = phi ptr [ %dentry.i.i.i, %if.end.i.i.i ], [ %dentry6.i.i.i, %if.end5.i.i.i.out_dput.sink.split_crit_edge ]
  %35 = ptrtoint ptr %dentry6.i.i.i.sink to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr null, ptr %dentry6.i.i.i.sink, align 4
  br label %out_dput

out_dput:                                         ; preds = %out_dput.sink.split, %legitimize_root.exit.out_dput_crit_edge, %if.end19.i.i.i.out_dput_crit_edge, %if.end57.out_dput_crit_edge
  tail call fastcc void @rcu_read_unlock()
  tail call void @dput(ptr noundef %dentry) #13
  br label %return

return:                                           ; preds = %out_dput, %out, %rcu_read_unlock.exit
  %retval.0 = phi i1 [ false, %out ], [ false, %out_dput ], [ true, %rcu_read_unlock.exit ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__lookup_mnt(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @legitimize_links(ptr nocapture noundef %nd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = and i32 %1, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.cond.preheader, label %if.then, !prof !362

for.cond.preheader:                               ; preds = %entry
  %depth3 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 10
  %2 = ptrtoint ptr %depth3 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %depth3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp44.not = icmp eq i32 %3, 0
  br i1 %cmp44.not, label %for.cond.preheader.cleanup15_crit_edge, label %for.body.lr.ph

for.cond.preheader.cleanup15_crit_edge:           ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup15

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %stack = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 12
  %m_seq.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 7
  br label %for.body

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @drop_links(ptr noundef %nd)
  %depth = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 10
  %4 = ptrtoint ptr %depth to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %depth, align 4
  br label %cleanup15

for.body:                                         ; preds = %for.inc.critedge.for.body_crit_edge, %for.body.lr.ph
  %i.045 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.critedge.for.body_crit_edge ]
  %5 = ptrtoint ptr %stack to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %stack, align 4
  %add.ptr = getelementptr %struct.saved, ptr %6, i32 %i.045
  %seq = getelementptr %struct.saved, ptr %6, i32 %i.045, i32 3
  %7 = ptrtoint ptr %seq to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %seq, align 4
  %9 = ptrtoint ptr %m_seq.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %m_seq.i, align 8
  %11 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %add.ptr, align 4
  %call.i.i = tail call i32 @__legitimize_mnt(ptr noundef %12, i32 noundef %10) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.end5.i.i, label %if.then.i.i, !prof !362

if.then.i.i:                                      ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i = icmp sgt i32 %call.i.i, 0
  br i1 %cmp.i.i, label %if.then3.i.i, label %if.then.i.i.if.end.i.i_crit_edge

if.then.i.i.if.end.i.i_crit_edge:                 ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i.i

if.then3.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %13 = ptrtoint ptr %add.ptr to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %add.ptr, align 4
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then3.i.i, %if.then.i.i.if.end.i.i_crit_edge
  %dentry.i.i = getelementptr inbounds %struct.path, ptr %add.ptr, i32 0, i32 1
  br label %if.then12.sink.split

if.end5.i.i:                                      ; preds = %for.body
  %dentry6.i.i = getelementptr inbounds %struct.path, ptr %add.ptr, i32 0, i32 1
  %14 = ptrtoint ptr %dentry6.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %dentry6.i.i, align 4
  %d_lockref.i.i = getelementptr inbounds %struct.dentry, ptr %15, i32 0, i32 7
  %call7.i.i = tail call i32 @lockref_get_not_dead(ptr noundef %d_lockref.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i.i)
  %tobool8.not.i.i = icmp eq i32 %call7.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end5.i.i.if.then12.sink.split_crit_edge, label %legitimize_path.exit, !prof !360

if.end5.i.i.if.then12.sink.split_crit_edge:       ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then12.sink.split

legitimize_path.exit:                             ; preds = %if.end5.i.i
  %16 = ptrtoint ptr %dentry6.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %dentry6.i.i, align 4
  %d_seq.i.i = getelementptr inbounds %struct.dentry, ptr %17, i32 0, i32 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !409
  %18 = ptrtoint ptr %d_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %d_seq.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %19, i32 %8)
  %cmp.i.i.not.i.i = icmp eq i32 %19, %8
  br i1 %cmp.i.i.not.i.i, label %for.inc.critedge, label %legitimize_path.exit.if.then12_crit_edge, !prof !362

legitimize_path.exit.if.then12_crit_edge:         ; preds = %legitimize_path.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then12

if.then12.sink.split:                             ; preds = %if.end5.i.i.if.then12.sink.split_crit_edge, %if.end.i.i
  %dentry6.i.i.lcssa.sink = phi ptr [ %dentry.i.i, %if.end.i.i ], [ %dentry6.i.i, %if.end5.i.i.if.then12.sink.split_crit_edge ]
  %20 = ptrtoint ptr %dentry6.i.i.lcssa.sink to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %dentry6.i.i.lcssa.sink, align 4
  br label %if.then12

if.then12:                                        ; preds = %if.then12.sink.split, %legitimize_path.exit.if.then12_crit_edge
  tail call fastcc void @drop_links(ptr noundef %nd)
  %add = add nuw i32 %i.045, 1
  %21 = ptrtoint ptr %depth3 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %add, ptr %depth3, align 4
  br label %cleanup15

for.inc.critedge:                                 ; preds = %legitimize_path.exit
  %inc = add nuw i32 %i.045, 1
  %22 = ptrtoint ptr %depth3 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %depth3, align 4
  %cmp = icmp ult i32 %inc, %23
  br i1 %cmp, label %for.inc.critedge.for.body_crit_edge, label %for.inc.critedge.cleanup15_crit_edge

for.inc.critedge.cleanup15_crit_edge:             ; preds = %for.inc.critedge
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup15

for.inc.critedge.for.body_crit_edge:              ; preds = %for.inc.critedge
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

cleanup15:                                        ; preds = %for.inc.critedge.cleanup15_crit_edge, %if.then12, %if.then, %for.cond.preheader.cleanup15_crit_edge
  %retval.2 = phi i1 [ false, %if.then ], [ false, %if.then12 ], [ true, %for.cond.preheader.cleanup15_crit_edge ], [ true, %for.inc.critedge.cleanup15_crit_edge ]
  ret i1 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @legitimize_mnt(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lockref_get_not_dead(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_read_unlock() unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call zeroext i1 @rcu_is_watching() #13
  br i1 %call, label %entry.do.end_crit_edge, label %land.lhs.true

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true2

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %.b4 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4, label %land.lhs.true2.do.end_crit_edge, label %if.then

land.lhs.true2.do.end_crit_edge:                  ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

if.then:                                          ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.51, i32 noundef 724, ptr noundef nonnull @.str.53) #13
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true2.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !418
  %0 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %3, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void @rcu_read_unlock_strict() #13
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @drop_links(ptr nocapture noundef readonly %nd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %depth = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 10
  %0 = ptrtoint ptr %depth to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %depth, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not5 = icmp eq i32 %1, 0
  br i1 %tobool.not5, label %entry.while.end_crit_edge, label %while.body.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %stack = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 12
  br label %while.body

while.body:                                       ; preds = %do_delayed_call.exit.while.body_crit_edge, %while.body.lr.ph
  %i.06 = phi i32 [ %1, %while.body.lr.ph ], [ %dec, %do_delayed_call.exit.while.body_crit_edge ]
  %dec = add i32 %i.06, -1
  %2 = ptrtoint ptr %stack to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %stack, align 4
  %done = getelementptr %struct.saved, ptr %3, i32 %dec, i32 1
  %4 = ptrtoint ptr %done to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %done, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %while.body.do_delayed_call.exit_crit_edge, label %if.then.i

while.body.do_delayed_call.exit_crit_edge:        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %do_delayed_call.exit

if.then.i:                                        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  %arg.i = getelementptr %struct.saved, ptr %3, i32 %dec, i32 1, i32 1
  %6 = ptrtoint ptr %arg.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arg.i, align 4
  tail call void %5(ptr noundef %7) #13
  br label %do_delayed_call.exit

do_delayed_call.exit:                             ; preds = %if.then.i, %while.body.do_delayed_call.exit_crit_edge
  %8 = ptrtoint ptr %done to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %done, align 4
  %tobool.not = icmp eq i32 %dec, 0
  br i1 %tobool.not, label %do_delayed_call.exit.while.end_crit_edge, label %do_delayed_call.exit.while.body_crit_edge

do_delayed_call.exit.while.body_crit_edge:        ; preds = %do_delayed_call.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body

do_delayed_call.exit.while.end_crit_edge:         ; preds = %do_delayed_call.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.end:                                        ; preds = %do_delayed_call.exit.while.end_crit_edge, %entry.while.end_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @legitimize_path(ptr nocapture noundef readonly %nd, ptr nocapture noundef %path, i32 noundef %seq) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %m_seq = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 7
  %0 = ptrtoint ptr %m_seq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %m_seq, align 8
  %2 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %path, align 4
  %call.i = tail call i32 @__legitimize_mnt(ptr noundef %3, i32 noundef %1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end5.i, label %if.then.i, !prof !362

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp sgt i32 %call.i, 0
  br i1 %cmp.i, label %if.then3.i, label %if.then.i.if.end.i_crit_edge

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.then3.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %4 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %path, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i, %if.then.i.if.end.i_crit_edge
  %dentry.i = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %5 = ptrtoint ptr %dentry.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %dentry.i, align 4
  br label %__legitimize_path.exit

if.end5.i:                                        ; preds = %entry
  %dentry6.i = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %6 = ptrtoint ptr %dentry6.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dentry6.i, align 4
  %d_lockref.i = getelementptr inbounds %struct.dentry, ptr %7, i32 0, i32 7
  %call7.i = tail call i32 @lockref_get_not_dead(ptr noundef %d_lockref.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %if.then17.i, label %if.end19.i, !prof !360

if.then17.i:                                      ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #15
  %8 = ptrtoint ptr %dentry6.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %dentry6.i, align 4
  br label %__legitimize_path.exit

if.end19.i:                                       ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #15
  %9 = ptrtoint ptr %dentry6.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dentry6.i, align 4
  %d_seq.i = getelementptr inbounds %struct.dentry, ptr %10, i32 0, i32 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !409
  %11 = ptrtoint ptr %d_seq.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %d_seq.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %seq)
  %cmp.i.i.not.i = icmp eq i32 %12, %seq
  br label %__legitimize_path.exit

__legitimize_path.exit:                           ; preds = %if.end19.i, %if.then17.i, %if.end.i
  %retval.0.i = phi i1 [ false, %if.end.i ], [ false, %if.then17.i ], [ %cmp.i.i.not.i, %if.end19.i ]
  ret i1 %retval.0.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__legitimize_mnt(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @touch_atime(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @atime_needs_update(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @try_to_unlazy(ptr nocapture noundef %nd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %dentry = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %0 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dentry, align 4
  %flags = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 4
  %and = and i32 %3, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.body4, label %do.end9, !prof !360

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 772, 0\0A.popsection", ""() #13, !srcloc !433
  unreachable

do.end9:                                          ; preds = %entry
  %and11 = and i32 %3, -65
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %and11, ptr %flags, align 4
  %call = tail call fastcc zeroext i1 @legitimize_links(ptr noundef %nd)
  br i1 %call, label %if.end21, label %out1, !prof !362

if.end21:                                         ; preds = %do.end9
  %seq = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 6
  %5 = ptrtoint ptr %seq to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %seq, align 4
  %m_seq.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 7
  %7 = ptrtoint ptr %m_seq.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %m_seq.i, align 8
  %9 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %nd, align 4
  %call.i.i = tail call i32 @__legitimize_mnt(ptr noundef %10, i32 noundef %8) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.end5.i.i, label %if.then.i.i, !prof !362

if.then.i.i:                                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i.i = icmp sgt i32 %call.i.i, 0
  br i1 %cmp.i.i, label %if.then3.i.i, label %if.then.i.i.out.sink.split_crit_edge

if.then.i.i.out.sink.split_crit_edge:             ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %out.sink.split

if.then3.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %11 = ptrtoint ptr %nd to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %nd, align 4
  br label %out.sink.split

if.end5.i.i:                                      ; preds = %if.end21
  %12 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dentry, align 4
  %d_lockref.i.i = getelementptr inbounds %struct.dentry, ptr %13, i32 0, i32 7
  %call7.i.i = tail call i32 @lockref_get_not_dead(ptr noundef %d_lockref.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i.i)
  %tobool8.not.i.i = icmp eq i32 %call7.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end5.i.i.out.sink.split_crit_edge, label %legitimize_path.exit, !prof !360

if.end5.i.i.out.sink.split_crit_edge:             ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %out.sink.split

legitimize_path.exit:                             ; preds = %if.end5.i.i
  %14 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %dentry, align 4
  %d_seq.i.i = getelementptr inbounds %struct.dentry, ptr %15, i32 0, i32 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !409
  %16 = ptrtoint ptr %d_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %d_seq.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %6)
  %cmp.i.i.not.i.i = icmp eq i32 %17, %6
  br i1 %cmp.i.i.not.i.i, label %if.end33, label %legitimize_path.exit.out_crit_edge, !prof !362

legitimize_path.exit.out_crit_edge:               ; preds = %legitimize_path.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end33:                                         ; preds = %legitimize_path.exit
  %root.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2
  %18 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %root.i, align 8
  %tobool.not.i = icmp eq ptr %19, null
  br i1 %tobool.not.i, label %legitimize_root.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end33
  %state.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 5
  %20 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %state.i, align 8
  %and5.i = and i32 %21, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %lor.lhs.false.i.if.end44_crit_edge

lor.lhs.false.i.if.end44_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end44

if.end8.i:                                        ; preds = %lor.lhs.false.i
  %or.i = or i32 %21, 2
  %22 = ptrtoint ptr %state.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %or.i, ptr %state.i, align 8
  %root_seq.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 16
  %23 = ptrtoint ptr %root_seq.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %root_seq.i, align 8
  %25 = ptrtoint ptr %m_seq.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %m_seq.i, align 8
  %call.i.i.i = tail call i32 @__legitimize_mnt(ptr noundef nonnull %19, i32 noundef %26) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end5.i.i.i, label %if.then.i.i.i, !prof !362

if.then.i.i.i:                                    ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.i.i.i = icmp sgt i32 %call.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then3.i.i.i, label %if.then.i.i.i.if.end.i.i.i_crit_edge

if.then.i.i.i.if.end.i.i.i_crit_edge:             ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i.i.i

if.then3.i.i.i:                                   ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %27 = ptrtoint ptr %root.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr null, ptr %root.i, align 4
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then3.i.i.i, %if.then.i.i.i.if.end.i.i.i_crit_edge
  %dentry.i.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2, i32 1
  br label %out.sink.split

if.end5.i.i.i:                                    ; preds = %if.end8.i
  %dentry6.i.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2, i32 1
  %28 = ptrtoint ptr %dentry6.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %dentry6.i.i.i, align 4
  %d_lockref.i.i.i = getelementptr inbounds %struct.dentry, ptr %29, i32 0, i32 7
  %call7.i.i.i = tail call i32 @lockref_get_not_dead(ptr noundef %d_lockref.i.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i.i.i)
  %tobool8.not.i.i.i = icmp eq i32 %call7.i.i.i, 0
  br i1 %tobool8.not.i.i.i, label %if.end5.i.i.i.out.sink.split_crit_edge, label %if.end19.i.i.i, !prof !360

if.end5.i.i.i.out.sink.split_crit_edge:           ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %out.sink.split

if.end19.i.i.i:                                   ; preds = %if.end5.i.i.i
  %30 = ptrtoint ptr %dentry6.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %dentry6.i.i.i, align 4
  %d_seq.i.i.i = getelementptr inbounds %struct.dentry, ptr %31, i32 0, i32 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !409
  %32 = ptrtoint ptr %d_seq.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %d_seq.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %33, i32 %24)
  %cmp.i.i.not.i.i.i = icmp eq i32 %33, %24
  br i1 %cmp.i.i.not.i.i.i, label %if.end19.i.i.i.if.end44_crit_edge, label %if.end19.i.i.i.out_crit_edge, !prof !362

if.end19.i.i.i.out_crit_edge:                     ; preds = %if.end19.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end19.i.i.i.if.end44_crit_edge:                ; preds = %if.end19.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end44

legitimize_root.exit:                             ; preds = %if.end33
  %34 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %flags, align 4
  %and.i = and i32 %35, 1572864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %legitimize_root.exit.if.end44_crit_edge, label %legitimize_root.exit.out_crit_edge, !prof !362

legitimize_root.exit.out_crit_edge:               ; preds = %legitimize_root.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

legitimize_root.exit.if.end44_crit_edge:          ; preds = %legitimize_root.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end44

if.end44:                                         ; preds = %legitimize_root.exit.if.end44_crit_edge, %if.end19.i.i.i.if.end44_crit_edge, %lor.lhs.false.i.if.end44_crit_edge
  %call.i = tail call zeroext i1 @rcu_is_watching() #13
  br i1 %call.i, label %if.end44.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i76

if.end44.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_unlock.exit

land.lhs.true.i76:                                ; preds = %if.end44
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i75 = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i75, label %land.lhs.true.i76.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i76.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i76
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_unlock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i76
  %.b4.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_unlock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_unlock.exit_crit_edge:  ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_unlock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.51, i32 noundef 724, ptr noundef nonnull @.str.53) #13
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i76.rcu_read_unlock.exit_crit_edge, %if.end44.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !418
  %36 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i.i.i.i = and i32 %36, -16384
  %37 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %sub.i.i.i = add i32 %39, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void @rcu_read_unlock_strict() #13
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #13
  %inode = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 3
  %40 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %inode, align 8
  %d_inode = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 5
  %42 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %d_inode, align 8
  %cmp.not = icmp eq ptr %41, %43
  br i1 %cmp.not, label %rcu_read_unlock.exit.cleanup_crit_edge, label %do.body53, !prof !362

rcu_read_unlock.exit.cleanup_crit_edge:           ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

do.body53:                                        ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 782, 0\0A.popsection", ""() #13, !srcloc !434
  unreachable

out1:                                             ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #15
  %44 = ptrtoint ptr %nd to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %nd, align 8
  br label %out.sink.split

out.sink.split:                                   ; preds = %out1, %if.end5.i.i.i.out.sink.split_crit_edge, %if.end.i.i.i, %if.end5.i.i.out.sink.split_crit_edge, %if.then3.i.i, %if.then.i.i.out.sink.split_crit_edge
  %dentry6.i.i.i.sink = phi ptr [ %dentry.i.i.i, %if.end.i.i.i ], [ %dentry, %out1 ], [ %dentry, %if.then3.i.i ], [ %dentry, %if.then.i.i.out.sink.split_crit_edge ], [ %dentry, %if.end5.i.i.out.sink.split_crit_edge ], [ %dentry6.i.i.i, %if.end5.i.i.i.out.sink.split_crit_edge ]
  %45 = ptrtoint ptr %dentry6.i.i.i.sink to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr null, ptr %dentry6.i.i.i.sink, align 4
  br label %out

out:                                              ; preds = %out.sink.split, %legitimize_root.exit.out_crit_edge, %if.end19.i.i.i.out_crit_edge, %legitimize_path.exit.out_crit_edge
  tail call fastcc void @rcu_read_unlock()
  br label %cleanup

cleanup:                                          ; preds = %out, %rcu_read_unlock.exit.cleanup_crit_edge
  %retval.0 = phi i1 [ false, %out ], [ true, %rcu_read_unlock.exit.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_inode_follow_link(ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @put_link(ptr nocapture noundef %nd) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %stack = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 12
  %0 = ptrtoint ptr %stack to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %stack, align 4
  %depth = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 10
  %2 = ptrtoint ptr %depth to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %depth, align 4
  %dec = add i32 %3, -1
  store i32 %dec, ptr %depth, align 4
  %done = getelementptr %struct.saved, ptr %1, i32 %dec, i32 1
  %4 = ptrtoint ptr %done to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %done, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %entry.do_delayed_call.exit_crit_edge, label %if.then.i

entry.do_delayed_call.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %do_delayed_call.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %arg.i = getelementptr %struct.saved, ptr %1, i32 %dec, i32 1, i32 1
  %6 = ptrtoint ptr %arg.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arg.i, align 4
  tail call void %5(ptr noundef %7) #13
  br label %do_delayed_call.exit

do_delayed_call.exit:                             ; preds = %if.then.i, %entry.do_delayed_call.exit_crit_edge
  %flags = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags, align 4
  %and = and i32 %9, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then, label %do_delayed_call.exit.if.end_crit_edge

do_delayed_call.exit.if.end_crit_edge:            ; preds = %do_delayed_call.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %do_delayed_call.exit
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr = getelementptr %struct.saved, ptr %1, i32 %dec
  %dentry.i = getelementptr inbounds %struct.path, ptr %add.ptr, i32 0, i32 1
  %10 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dentry.i, align 4
  tail call void @dput(ptr noundef %11) #13
  %12 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %add.ptr, align 4
  tail call void @mntput(ptr noundef %13) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %do_delayed_call.exit.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @nd_alloc_stack(ptr nocapture noundef %nd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = and i32 %1, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %cond = select i1 %tobool.not, i32 3264, i32 2592
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef %cond, i32 noundef 960) #16
  %tobool1.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool1.not, label %entry.cleanup_crit_edge, label %if.end, !prof !360

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %internal = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 13
  %3 = call ptr @memcpy(ptr %call7.i.i, ptr %internal, i32 48)
  %stack = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 12
  %4 = ptrtoint ptr %stack to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call7.i.i, ptr %stack, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %5 = xor i1 %tobool1.not, true
  ret i1 %5
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @walk_component(ptr noundef %nd, i32 noundef %flags) unnamed_addr #0 align 64 {
entry:
  %inode = alloca ptr, align 4
  %seq = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %inode) #13
  %0 = ptrtoint ptr %inode to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %inode, align 4, !annotation !367
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %seq) #13
  %1 = ptrtoint ptr %seq to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %seq, align 4, !annotation !367
  %last_type = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 9
  %2 = ptrtoint ptr %last_type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %last_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not = icmp eq i32 %3, 0
  br i1 %cmp.not, label %if.end6, label %if.then, !prof !362

if.then:                                          ; preds = %entry
  %and = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %land.lhs.true, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true:                                    ; preds = %if.then
  %depth = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 10
  %4 = ptrtoint ptr %depth to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %depth, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool3.not = icmp eq i32 %5, 0
  br i1 %tobool3.not, label %land.lhs.true.if.end_crit_edge, label %if.then4

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then4:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @put_link(ptr noundef %nd)
  br label %if.end

if.end:                                           ; preds = %if.then4, %land.lhs.true.if.end_crit_edge, %if.then.if.end_crit_edge
  %6 = ptrtoint ptr %last_type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %last_type, align 8
  %call = tail call fastcc ptr @handle_dots(ptr noundef %nd, i32 noundef %7)
  br label %cleanup

if.end6:                                          ; preds = %entry
  %call7 = call fastcc ptr @lookup_fast(ptr noundef %nd, ptr noundef nonnull %inode, ptr noundef nonnull %seq)
  %cmp.i = icmp ugt ptr %call7, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end6.cleanup_crit_edge, label %if.end11

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end11:                                         ; preds = %if.end6
  %tobool12.not = icmp eq ptr %call7, null
  br i1 %tobool12.not, label %if.then21, label %if.end11.if.end29_crit_edge, !prof !360

if.end11.if.end29_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end29

if.then21:                                        ; preds = %if.end11
  %last = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 1
  %dentry22 = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %8 = ptrtoint ptr %dentry22 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dentry22, align 4
  %flags23 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %10 = ptrtoint ptr %flags23 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags23, align 4
  %call24 = tail call fastcc ptr @lookup_slow(ptr noundef %last, ptr noundef %9, i32 noundef %11)
  %cmp.i58 = icmp ugt ptr %call24, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i58, label %if.then21.cleanup_crit_edge, label %if.then21.if.end29_crit_edge

if.then21.if.end29_crit_edge:                     ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end29

if.then21.cleanup_crit_edge:                      ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end29:                                         ; preds = %if.then21.if.end29_crit_edge, %if.end11.if.end29_crit_edge
  %dentry.0 = phi ptr [ %call24, %if.then21.if.end29_crit_edge ], [ %call7, %if.end11.if.end29_crit_edge ]
  %and30 = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30)
  %tobool31.not = icmp eq i32 %and30, 0
  br i1 %tobool31.not, label %land.lhs.true32, label %if.end29.if.end36_crit_edge

if.end29.if.end36_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36

land.lhs.true32:                                  ; preds = %if.end29
  %depth33 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 10
  %12 = ptrtoint ptr %depth33 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %depth33, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool34.not = icmp eq i32 %13, 0
  br i1 %tobool34.not, label %land.lhs.true32.if.end36_crit_edge, label %if.then35

land.lhs.true32.if.end36_crit_edge:               ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36

if.then35:                                        ; preds = %land.lhs.true32
  %stack.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 12
  %14 = ptrtoint ptr %stack.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %stack.i, align 4
  %dec.i = add i32 %13, -1
  %16 = ptrtoint ptr %depth33 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %dec.i, ptr %depth33, align 4
  %done.i = getelementptr %struct.saved, ptr %15, i32 %dec.i, i32 1
  %17 = ptrtoint ptr %done.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %done.i, align 4
  %tobool.not.i.i = icmp eq ptr %18, null
  br i1 %tobool.not.i.i, label %if.then35.do_delayed_call.exit.i_crit_edge, label %if.then.i.i

if.then35.do_delayed_call.exit.i_crit_edge:       ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #15
  br label %do_delayed_call.exit.i

if.then.i.i:                                      ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #15
  %arg.i.i = getelementptr %struct.saved, ptr %15, i32 %dec.i, i32 1, i32 1
  %19 = ptrtoint ptr %arg.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arg.i.i, align 4
  tail call void %18(ptr noundef %20) #13
  br label %do_delayed_call.exit.i

do_delayed_call.exit.i:                           ; preds = %if.then.i.i, %if.then35.do_delayed_call.exit.i_crit_edge
  %flags.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %21 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %22, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %do_delayed_call.exit.i.if.end36_crit_edge

do_delayed_call.exit.i.if.end36_crit_edge:        ; preds = %do_delayed_call.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end36

if.then.i:                                        ; preds = %do_delayed_call.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr.i = getelementptr %struct.saved, ptr %15, i32 %dec.i
  %dentry.i.i = getelementptr inbounds %struct.path, ptr %add.ptr.i, i32 0, i32 1
  %23 = ptrtoint ptr %dentry.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %dentry.i.i, align 4
  tail call void @dput(ptr noundef %24) #13
  %25 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %add.ptr.i, align 4
  tail call void @mntput(ptr noundef %26) #13
  br label %if.end36

if.end36:                                         ; preds = %if.then.i, %do_delayed_call.exit.i.if.end36_crit_edge, %land.lhs.true32.if.end36_crit_edge, %if.end29.if.end36_crit_edge
  %27 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %inode, align 4
  %29 = ptrtoint ptr %seq to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %seq, align 4
  %call37 = tail call fastcc ptr @step_into(ptr noundef %nd, i32 noundef %flags, ptr noundef %dentry.0, ptr noundef %28, i32 noundef %30)
  br label %cleanup

cleanup:                                          ; preds = %if.end36, %if.then21.cleanup_crit_edge, %if.end6.cleanup_crit_edge, %if.end
  %retval.0 = phi ptr [ %call, %if.end ], [ %call37, %if.end36 ], [ %call7, %if.end6.cleanup_crit_edge ], [ %call24, %if.then21.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %seq) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %inode) #13
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @handle_dots(ptr noundef %nd, i32 noundef %type) unnamed_addr #0 align 64 {
entry:
  %path6.i95 = alloca %struct.path, align 8
  %path6.i = alloca %struct.path, align 8
  %seq.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %type)
  %cmp = icmp eq i32 %type, 3
  br i1 %cmp, label %if.then, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.then:                                          ; preds = %entry
  %root = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2
  %0 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.then1, label %if.then.if.end5_crit_edge

if.then.if.end5_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end5

if.then1:                                         ; preds = %if.then
  %call = tail call fastcc i32 @set_root(ptr noundef %nd), !range !435
  %2 = inttoptr i32 %call to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool3.not = icmp eq i32 %call, 0
  br i1 %tobool3.not, label %if.then1.if.end5_crit_edge, label %if.then1.cleanup.thread_crit_edge

if.then1.cleanup.thread_crit_edge:                ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread

if.then1.if.end5_crit_edge:                       ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end5

if.end5:                                          ; preds = %if.then1.if.end5_crit_edge, %if.then.if.end5_crit_edge
  %flags = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags, align 4
  %and = and i32 %4, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool6.not = icmp eq i32 %and, 0
  %5 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %nd, align 4
  %7 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %root, align 4
  %cmp.i.i97 = icmp eq ptr %6, %8
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end5
  br i1 %cmp.i.i97, label %path_equal.exit.i, label %if.then7.if.end.i_crit_edge

if.then7.if.end.i_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

path_equal.exit.i:                                ; preds = %if.then7
  %dentry.i.i = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %9 = ptrtoint ptr %dentry.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dentry.i.i, align 4
  %dentry2.i.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2, i32 1
  %11 = ptrtoint ptr %dentry2.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dentry2.i.i, align 4
  %cmp3.i.not.i = icmp eq ptr %10, %12
  br i1 %cmp3.i.not.i, label %path_equal.exit.i.in_root.i_crit_edge, label %path_equal.exit.i.if.end.i_crit_edge

path_equal.exit.i.if.end.i_crit_edge:             ; preds = %path_equal.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

path_equal.exit.i.in_root.i_crit_edge:            ; preds = %path_equal.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %in_root.i

if.end.i:                                         ; preds = %path_equal.exit.i.if.end.i_crit_edge, %if.then7.if.end.i_crit_edge
  %dentry.i = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %13 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dentry.i, align 4
  %15 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %6, align 4
  %cmp.i = icmp eq ptr %14, %16
  br i1 %cmp.i, label %if.then5.i, label %if.end.i.if.end39.i_crit_edge, !prof !360

if.end.i.if.end39.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end39.i

if.then5.i:                                       ; preds = %if.end.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path6.i) #13
  %17 = ptrtoint ptr %path6.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr inttoptr (i32 -1 to ptr), ptr %path6.i, align 8, !annotation !367
  %18 = getelementptr inbounds %struct.path, ptr %path6.i, i32 0, i32 1
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr inttoptr (i32 -1 to ptr), ptr %18, align 4, !annotation !367
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %seq.i) #13
  %20 = ptrtoint ptr %seq.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 -1, ptr %seq.i, align 4, !annotation !367
  %add.ptr.i.i = getelementptr i8, ptr %6, i32 -16
  %call11.i = call fastcc zeroext i1 @choose_mountpoint_rcu(ptr noundef %add.ptr.i.i, ptr noundef %root, ptr noundef nonnull %path6.i, ptr noundef nonnull %seq.i) #13
  br i1 %call11.i, label %if.end13.i, label %cleanup.i

if.end13.i:                                       ; preds = %if.then5.i
  %21 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %flags, align 4
  %and.i = and i32 %22, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool14.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool14.not.i, label %if.end23.i, label %if.end13.i.cleanup.thread.i_crit_edge, !prof !362

if.end13.i.cleanup.thread.i_crit_edge:            ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread.i

if.end23.i:                                       ; preds = %if.end13.i
  %23 = ptrtoint ptr %path6.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %path6.i, align 8
  %25 = ptrtoint ptr %nd to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %nd, align 8
  %26 = trunc i64 %24 to i32
  %27 = inttoptr i32 %26 to ptr
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %27, i32 0, i32 5
  %28 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %d_inode.i, align 8
  %inode.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 3
  %30 = ptrtoint ptr %inode.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %29, ptr %inode.i, align 8
  %31 = ptrtoint ptr %seq.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %seq.i, align 4
  %seq26.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 6
  %33 = ptrtoint ptr %seq26.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %seq26.i, align 4
  %m_seq.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 7
  %34 = ptrtoint ptr %m_seq.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %m_seq.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !409
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mount_lock to i32))
  %36 = load volatile i32, ptr @mount_lock, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %36, i32 %35)
  %cmp.i.i.i.not.i = icmp eq i32 %36, %35
  br i1 %cmp.i.i.i.not.i, label %cleanup.thread141.i, label %if.end23.i.cleanup.thread.i_crit_edge, !prof !362

if.end23.i.cleanup.thread.i_crit_edge:            ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread.i

cleanup.thread141.i:                              ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %seq.i) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path6.i) #13
  br label %if.end39.i

cleanup.thread.i:                                 ; preds = %if.end23.i.cleanup.thread.i_crit_edge, %if.end13.i.cleanup.thread.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %seq.i) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path6.i) #13
  br label %cleanup.thread

cleanup.i:                                        ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %seq.i) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path6.i) #13
  br label %in_root.i

if.end39.i:                                       ; preds = %cleanup.thread141.i, %if.end.i.if.end39.i_crit_edge
  %37 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %dentry.i, align 4
  %d_parent.i = getelementptr inbounds %struct.dentry, ptr %38, i32 0, i32 3
  %39 = ptrtoint ptr %d_parent.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %d_parent.i, align 8
  %d_inode42.i = getelementptr inbounds %struct.dentry, ptr %40, i32 0, i32 5
  %41 = ptrtoint ptr %d_inode42.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %d_inode42.i, align 8
  %d_seq.i = getelementptr inbounds %struct.dentry, ptr %40, i32 0, i32 1
  tail call fastcc void @seqcount_lockdep_reader_access(ptr noundef %d_seq.i) #13
  %43 = ptrtoint ptr %d_seq.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %d_seq.i, align 4
  %and46144.i = and i32 %44, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and46144.i)
  %tobool47.not145.i = icmp eq i32 %and46144.i, 0
  br i1 %tobool47.not145.i, label %if.end39.i.while.end.i_crit_edge, label %if.end39.i.do.end.i_crit_edge

if.end39.i.do.end.i_crit_edge:                    ; preds = %if.end39.i
  br label %do.end.i

if.end39.i.while.end.i_crit_edge:                 ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end.i

do.end.i:                                         ; preds = %do.end.i.do.end.i_crit_edge, %if.end39.i.do.end.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !436
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #13, !srcloc !437
  %45 = ptrtoint ptr %d_seq.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %d_seq.i, align 4
  %and46.i = and i32 %46, 1
  %tobool47.not.i = icmp eq i32 %and46.i, 0
  br i1 %tobool47.not.i, label %do.end.i.while.end.i_crit_edge, label %do.end.i.do.end.i_crit_edge

do.end.i.do.end.i_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end.i

do.end.i.while.end.i_crit_edge:                   ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end.i

while.end.i:                                      ; preds = %do.end.i.while.end.i_crit_edge, %if.end39.i.while.end.i_crit_edge
  %.lcssa.i = phi i32 [ %44, %if.end39.i.while.end.i_crit_edge ], [ %46, %do.end.i.while.end.i_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !438
  %d_seq62.i = getelementptr inbounds %struct.dentry, ptr %38, i32 0, i32 1
  %seq64.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 6
  %47 = ptrtoint ptr %seq64.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %seq64.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !409
  %49 = ptrtoint ptr %d_seq62.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %d_seq62.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %50, i32 %48)
  %cmp.i.i.not.i = icmp eq i32 %50, %48
  br i1 %cmp.i.i.not.i, label %if.end75.i, label %while.end.i.cleanup.thread_crit_edge, !prof !362

while.end.i.cleanup.thread_crit_edge:             ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread

if.end75.i:                                       ; preds = %while.end.i
  %51 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %nd, align 8
  %mnt_sb.i.i = getelementptr inbounds %struct.vfsmount, ptr %52, i32 0, i32 1
  %53 = ptrtoint ptr %mnt_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %mnt_sb.i.i, align 4
  %55 = ptrtoint ptr %52 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %52, align 4
  %s_root.i.i = getelementptr inbounds %struct.super_block, ptr %54, i32 0, i32 13
  %57 = ptrtoint ptr %s_root.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %s_root.i.i, align 64
  %cmp.i136.i = icmp eq ptr %56, %58
  br i1 %cmp.i136.i, label %if.end75.i.if.end10_crit_edge, label %path_connected.exit.i

if.end75.i.if.end10_crit_edge:                    ; preds = %if.end75.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

path_connected.exit.i:                            ; preds = %if.end75.i
  %call.i.i = tail call zeroext i1 @is_subdir(ptr noundef %40, ptr noundef %56) #13
  br i1 %call.i.i, label %path_connected.exit.i.if.end10_crit_edge, label %path_connected.exit.i.cleanup.thread_crit_edge, !prof !362

path_connected.exit.i.cleanup.thread_crit_edge:   ; preds = %path_connected.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread

path_connected.exit.i.if.end10_crit_edge:         ; preds = %path_connected.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

in_root.i:                                        ; preds = %cleanup.i, %path_equal.exit.i.in_root.i_crit_edge
  %m_seq90.i = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 7
  %59 = ptrtoint ptr %m_seq90.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %m_seq90.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !409
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mount_lock to i32))
  %61 = load volatile i32, ptr @mount_lock, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %61, i32 %60)
  %cmp.i.i.i137.not.i = icmp eq i32 %61, %60
  br i1 %cmp.i.i.i137.not.i, label %if.end101.i, label %in_root.i.cleanup.thread_crit_edge, !prof !362

in_root.i.cleanup.thread_crit_edge:               ; preds = %in_root.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread

if.end101.i:                                      ; preds = %in_root.i
  %62 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %flags, align 4
  %and103.i = and i32 %63, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and103.i)
  %tobool104.not.i = icmp eq i32 %and103.i, 0
  br i1 %tobool104.not.i, label %if.end101.i.if.then19_crit_edge, label %if.end101.i.cleanup.thread_crit_edge, !prof !362

if.end101.i.cleanup.thread_crit_edge:             ; preds = %if.end101.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread

if.end101.i.if.then19_crit_edge:                  ; preds = %if.end101.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then19

if.else:                                          ; preds = %if.end5
  br i1 %cmp.i.i97, label %path_equal.exit.i101, label %if.else.if.end.i104_crit_edge

if.else.if.end.i104_crit_edge:                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i104

path_equal.exit.i101:                             ; preds = %if.else
  %dentry.i.i98 = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %64 = ptrtoint ptr %dentry.i.i98 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %dentry.i.i98, align 4
  %dentry2.i.i99 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 2, i32 1
  %66 = ptrtoint ptr %dentry2.i.i99 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %dentry2.i.i99, align 4
  %cmp3.i.not.i100 = icmp eq ptr %65, %67
  br i1 %cmp3.i.not.i100, label %path_equal.exit.i101.in_root.i118_crit_edge, label %path_equal.exit.i101.if.end.i104_crit_edge

path_equal.exit.i101.if.end.i104_crit_edge:       ; preds = %path_equal.exit.i101
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i104

path_equal.exit.i101.in_root.i118_crit_edge:      ; preds = %path_equal.exit.i101
  call void @__sanitizer_cov_trace_pc() #15
  br label %in_root.i118

if.end.i104:                                      ; preds = %path_equal.exit.i101.if.end.i104_crit_edge, %if.else.if.end.i104_crit_edge
  %dentry.i102 = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %68 = ptrtoint ptr %dentry.i102 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %dentry.i102, align 4
  %70 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %6, align 4
  %cmp.i103 = icmp eq ptr %69, %71
  br i1 %cmp.i103, label %if.then5.i107, label %if.end.i104.if.end27.i_crit_edge, !prof !360

if.end.i104.if.end27.i_crit_edge:                 ; preds = %if.end.i104
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end27.i

if.then5.i107:                                    ; preds = %if.end.i104
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path6.i95) #13
  %72 = ptrtoint ptr %path6.i95 to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr inttoptr (i32 -1 to ptr), ptr %path6.i95, align 8, !annotation !367
  %73 = getelementptr inbounds %struct.path, ptr %path6.i95, i32 0, i32 1
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr inttoptr (i32 -1 to ptr), ptr %73, align 4, !annotation !367
  %add.ptr.i.i105 = getelementptr i8, ptr %6, i32 -16
  %call11.i106 = call fastcc zeroext i1 @choose_mountpoint(ptr noundef %add.ptr.i.i105, ptr noundef %root, ptr noundef nonnull %path6.i95) #13
  br i1 %call11.i106, label %if.end13.i112, label %cleanup.i113

if.end13.i112:                                    ; preds = %if.then5.i107
  tail call void @path_put(ptr noundef %nd) #13
  %75 = ptrtoint ptr %path6.i95 to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %path6.i95, align 8
  %77 = ptrtoint ptr %nd to i32
  call void @__asan_store8_noabort(i32 %77)
  store i64 %76, ptr %nd, align 8
  %78 = trunc i64 %76 to i32
  %79 = inttoptr i32 %78 to ptr
  %d_inode.i108 = getelementptr inbounds %struct.dentry, ptr %79, i32 0, i32 5
  %80 = ptrtoint ptr %d_inode.i108 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %d_inode.i108, align 8
  %inode.i109 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 3
  %82 = ptrtoint ptr %inode.i109 to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %81, ptr %inode.i109, align 8
  %83 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %flags, align 4
  %and.i111 = and i32 %84, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i111)
  %tobool17.not.i = icmp eq i32 %and.i111, 0
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path6.i95) #13
  br i1 %tobool17.not.i, label %if.end13.i112.if.end27.i_crit_edge, label %if.end13.i112.cleanup.thread_crit_edge, !prof !362

if.end13.i112.cleanup.thread_crit_edge:           ; preds = %if.end13.i112
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread

if.end13.i112.if.end27.i_crit_edge:               ; preds = %if.end13.i112
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end27.i

cleanup.i113:                                     ; preds = %if.then5.i107
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path6.i95) #13
  br label %in_root.i118

if.end27.i:                                       ; preds = %if.end13.i112.if.end27.i_crit_edge, %if.end.i104.if.end27.i_crit_edge
  %85 = ptrtoint ptr %dentry.i102 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %dentry.i102, align 4
  %call30.i = tail call ptr @dget_parent(ptr noundef %86) #13
  %87 = ptrtoint ptr %nd to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %nd, align 8
  %mnt_sb.i.i114 = getelementptr inbounds %struct.vfsmount, ptr %88, i32 0, i32 1
  %89 = ptrtoint ptr %mnt_sb.i.i114 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %mnt_sb.i.i114, align 4
  %91 = ptrtoint ptr %88 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %88, align 4
  %s_root.i.i115 = getelementptr inbounds %struct.super_block, ptr %90, i32 0, i32 13
  %93 = ptrtoint ptr %s_root.i.i115 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %s_root.i.i115, align 64
  %cmp.i78.i = icmp eq ptr %92, %94
  br i1 %cmp.i78.i, label %if.end27.i.if.end44.i_crit_edge, label %path_connected.exit.i117

if.end27.i.if.end44.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end44.i

path_connected.exit.i117:                         ; preds = %if.end27.i
  %call.i.i116 = tail call zeroext i1 @is_subdir(ptr noundef %call30.i, ptr noundef %92) #13
  br i1 %call.i.i116, label %path_connected.exit.i117.if.end44.i_crit_edge, label %if.then42.i, !prof !362

path_connected.exit.i117.if.end44.i_crit_edge:    ; preds = %path_connected.exit.i117
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end44.i

if.then42.i:                                      ; preds = %path_connected.exit.i117
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dput(ptr noundef %call30.i) #13
  br label %cleanup.thread

if.end44.i:                                       ; preds = %path_connected.exit.i117.if.end44.i_crit_edge, %if.end27.i.if.end44.i_crit_edge
  %d_inode45.i = getelementptr inbounds %struct.dentry, ptr %call30.i, i32 0, i32 5
  %95 = ptrtoint ptr %d_inode45.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %d_inode45.i, align 8
  br label %if.end10

in_root.i118:                                     ; preds = %cleanup.i113, %path_equal.exit.i101.in_root.i118_crit_edge
  %97 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %flags, align 4
  %and47.i = and i32 %98, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47.i)
  %tobool48.not.i = icmp eq i32 %and47.i, 0
  br i1 %tobool48.not.i, label %if.end57.i, label %in_root.i118.cleanup.thread_crit_edge, !prof !362

in_root.i118.cleanup.thread_crit_edge:            ; preds = %in_root.i118
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread

if.end57.i:                                       ; preds = %in_root.i118
  %dentry59.i = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %99 = ptrtoint ptr %dentry59.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %dentry59.i, align 4
  %tobool.not.i.i = icmp eq ptr %100, null
  br i1 %tobool.not.i.i, label %if.end57.i.if.then19_crit_edge, label %if.then.i.i

if.end57.i.if.then19_crit_edge:                   ; preds = %if.end57.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then19

if.then.i.i:                                      ; preds = %if.end57.i
  call void @__sanitizer_cov_trace_pc() #15
  %d_lockref.i.i = getelementptr inbounds %struct.dentry, ptr %100, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i.i) #13
  br label %if.then19

if.end10:                                         ; preds = %if.end44.i, %path_connected.exit.i.if.end10_crit_edge, %if.end75.i.if.end10_crit_edge
  %inode.2 = phi ptr [ %42, %if.end75.i.if.end10_crit_edge ], [ %42, %path_connected.exit.i.if.end10_crit_edge ], [ %96, %if.end44.i ]
  %seq.2 = phi i32 [ %.lcssa.i, %if.end75.i.if.end10_crit_edge ], [ %.lcssa.i, %path_connected.exit.i.if.end10_crit_edge ], [ 0, %if.end44.i ]
  %parent.0 = phi ptr [ %40, %if.end75.i.if.end10_crit_edge ], [ %40, %path_connected.exit.i.if.end10_crit_edge ], [ %call30.i, %if.end44.i ]
  %cmp.i120 = icmp ugt ptr %parent.0, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i120, label %if.end10.cleanup.thread_crit_edge, label %if.end14

if.end10.cleanup.thread_crit_edge:                ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread

if.end14:                                         ; preds = %if.end10
  %tobool15.not = icmp eq ptr %parent.0, null
  br i1 %tobool15.not, label %if.end14.if.then19_crit_edge, label %if.else23, !prof !360

if.end14.if.then19_crit_edge:                     ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then19

if.then19:                                        ; preds = %if.end14.if.then19_crit_edge, %if.then.i.i, %if.end57.i.if.then19_crit_edge, %if.end101.i.if.then19_crit_edge
  %dentry = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %101 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %dentry, align 4
  %inode20 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 3
  %103 = ptrtoint ptr %inode20 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %inode20, align 8
  %seq21 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 6
  %105 = ptrtoint ptr %seq21 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %seq21, align 4
  %call22 = tail call fastcc ptr @step_into(ptr noundef %nd, i32 noundef 4, ptr noundef %102, ptr noundef %104, i32 noundef %106)
  br label %if.end25

if.else23:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  %call24 = tail call fastcc ptr @step_into(ptr noundef %nd, i32 noundef 4, ptr noundef nonnull %parent.0, ptr noundef %inode.2, i32 noundef %seq.2)
  br label %if.end25

if.end25:                                         ; preds = %if.else23, %if.then19
  %error.0 = phi ptr [ %call22, %if.then19 ], [ %call24, %if.else23 ]
  %tobool26.not = icmp eq ptr %error.0, null
  br i1 %tobool26.not, label %if.end34, label %if.end25.cleanup.thread_crit_edge, !prof !362

if.end25.cleanup.thread_crit_edge:                ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread

if.end34:                                         ; preds = %if.end25
  %107 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %flags, align 4
  %and36 = and i32 %108, 1572864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and36)
  %tobool37.not = icmp eq i32 %and36, 0
  br i1 %tobool37.not, label %if.end34.return_crit_edge, label %do.end, !prof !362

if.end34.return_crit_edge:                        ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

do.end:                                           ; preds = %if.end34
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !439
  %m_seq = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 7
  %109 = ptrtoint ptr %m_seq to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %m_seq, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mount_lock to i32))
  %111 = load volatile i32, ptr @mount_lock, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %111, i32 %110)
  %cmp.i121.not = icmp eq i32 %111, %110
  br i1 %cmp.i121.not, label %if.end59, label %do.end.cleanup.thread_crit_edge, !prof !362

do.end.cleanup.thread_crit_edge:                  ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread

if.end59:                                         ; preds = %do.end
  %r_seq = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 8
  %112 = ptrtoint ptr %r_seq to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %r_seq, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rename_lock to i32))
  %114 = load volatile i32, ptr @rename_lock, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %114, i32 %113)
  %cmp.i122.not = icmp eq i32 %114, %113
  br i1 %cmp.i122.not, label %if.end59.return_crit_edge, label %if.end59.cleanup.thread_crit_edge, !prof !362

if.end59.cleanup.thread_crit_edge:                ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread

if.end59.return_crit_edge:                        ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

cleanup.thread:                                   ; preds = %if.end59.cleanup.thread_crit_edge, %do.end.cleanup.thread_crit_edge, %if.end25.cleanup.thread_crit_edge, %if.end10.cleanup.thread_crit_edge, %in_root.i118.cleanup.thread_crit_edge, %if.then42.i, %if.end13.i112.cleanup.thread_crit_edge, %if.end101.i.cleanup.thread_crit_edge, %in_root.i.cleanup.thread_crit_edge, %path_connected.exit.i.cleanup.thread_crit_edge, %while.end.i.cleanup.thread_crit_edge, %cleanup.thread.i, %if.then1.cleanup.thread_crit_edge
  %retval.0.ph = phi ptr [ inttoptr (i32 -11 to ptr), %do.end.cleanup.thread_crit_edge ], [ %parent.0, %if.end10.cleanup.thread_crit_edge ], [ %error.0, %if.end25.cleanup.thread_crit_edge ], [ %2, %if.then1.cleanup.thread_crit_edge ], [ inttoptr (i32 -18 to ptr), %if.end13.i112.cleanup.thread_crit_edge ], [ inttoptr (i32 -18 to ptr), %in_root.i118.cleanup.thread_crit_edge ], [ inttoptr (i32 -2 to ptr), %if.then42.i ], [ inttoptr (i32 -10 to ptr), %in_root.i.cleanup.thread_crit_edge ], [ inttoptr (i32 -10 to ptr), %while.end.i.cleanup.thread_crit_edge ], [ inttoptr (i32 -10 to ptr), %cleanup.thread.i ], [ inttoptr (i32 -10 to ptr), %path_connected.exit.i.cleanup.thread_crit_edge ], [ inttoptr (i32 -10 to ptr), %if.end101.i.cleanup.thread_crit_edge ], [ inttoptr (i32 -11 to ptr), %if.end59.cleanup.thread_crit_edge ]
  br label %return

return:                                           ; preds = %cleanup.thread, %if.end59.return_crit_edge, %if.end34.return_crit_edge, %entry.return_crit_edge
  %retval.1 = phi ptr [ %retval.0.ph, %cleanup.thread ], [ null, %if.end59.return_crit_edge ], [ null, %if.end34.return_crit_edge ], [ null, %entry.return_crit_edge ]
  ret ptr %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @lookup_fast(ptr noundef %nd, ptr nocapture noundef writeonly %inode, ptr nocapture noundef writeonly %seqp) unnamed_addr #0 align 64 {
entry:
  %seq = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %dentry1 = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %0 = ptrtoint ptr %dentry1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dentry1, align 4
  %flags = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 4
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 4
  %and = and i32 %3, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %seq) #13
  %4 = ptrtoint ptr %seq to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %seq, align 4, !annotation !367
  %last = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 1
  %call = call ptr @__d_lookup_rcu(ptr noundef %1, ptr noundef %last, ptr noundef nonnull %seq) #13
  %tobool2.not = icmp eq ptr %call, null
  br i1 %tobool2.not, label %if.then6, label %if.end10, !prof !360

if.then6:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %call7 = call fastcc zeroext i1 @try_to_unlazy(ptr noundef %nd)
  %spec.select = select i1 %call7, ptr null, ptr inttoptr (i32 -10 to ptr)
  br label %cleanup.thread

if.end10:                                         ; preds = %if.then
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %call, i32 0, i32 5
  %5 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %d_inode.i, align 8
  %7 = ptrtoint ptr %inode to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %6, ptr %inode, align 4
  %d_seq = getelementptr inbounds %struct.dentry, ptr %call, i32 0, i32 1
  %8 = ptrtoint ptr %seq to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %seq, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !409
  %10 = ptrtoint ptr %d_seq to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %d_seq, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %9)
  %cmp.i.i.not = icmp eq i32 %11, %9
  br i1 %cmp.i.i.not, label %if.end23, label %if.end10.cleanup.thread_crit_edge, !prof !362

if.end10.cleanup.thread_crit_edge:                ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread

if.end23:                                         ; preds = %if.end10
  %d_seq24 = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 1
  %seq26 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 6
  %12 = ptrtoint ptr %seq26 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %seq26, align 4
  %14 = ptrtoint ptr %d_seq24 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %d_seq24, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %13)
  %cmp.i.not = icmp eq i32 %15, %13
  br i1 %cmp.i.not, label %if.end37, label %if.end23.cleanup.thread_crit_edge, !prof !362

if.end23.cleanup.thread_crit_edge:                ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread

if.end37:                                         ; preds = %if.end23
  %16 = ptrtoint ptr %seq to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %seq, align 4
  %18 = ptrtoint ptr %seqp to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %seqp, align 4
  %19 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %call, align 8
  %and.i = and i32 %20, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end37.cleanup.thread_crit_edge, label %d_revalidate.exit, !prof !362

if.end37.cleanup.thread_crit_edge:                ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread

d_revalidate.exit:                                ; preds = %if.end37
  %21 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %flags, align 4
  %d_op.i = getelementptr inbounds %struct.dentry, ptr %call, i32 0, i32 8
  %23 = ptrtoint ptr %d_op.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %d_op.i, align 8
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %24, align 128
  %call.i = call i32 %26(ptr noundef nonnull %call, i32 noundef %22) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp sgt i32 %call.i, 0
  br i1 %cmp, label %d_revalidate.exit.cleanup.thread_crit_edge, label %if.end47, !prof !362

d_revalidate.exit.cleanup.thread_crit_edge:       ; preds = %d_revalidate.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread

if.end47:                                         ; preds = %d_revalidate.exit
  %27 = ptrtoint ptr %seq to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %seq, align 4
  %call48 = call fastcc zeroext i1 @try_to_unlazy_next(ptr noundef %nd, ptr noundef nonnull %call, i32 noundef %28)
  br i1 %call48, label %if.end51, label %if.end47.cleanup.thread_crit_edge

if.end47.cleanup.thread_crit_edge:                ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread

if.end51:                                         ; preds = %if.end47
  call void @__sanitizer_cov_trace_const_cmp4(i32 -10, i32 %call.i)
  %cmp52 = icmp eq i32 %call.i, -10
  br i1 %cmp52, label %if.then53, label %if.end51.cleanup_crit_edge

if.end51.cleanup_crit_edge:                       ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then53:                                        ; preds = %if.end51
  %29 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %call, align 8
  %and.i115 = and i32 %30, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i115)
  %tobool.not.i116 = icmp eq i32 %and.i115, 0
  br i1 %tobool.not.i116, label %if.then53.cleanup_crit_edge, label %if.then.i119, !prof !362

if.then53.cleanup_crit_edge:                      ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then.i119:                                     ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #15
  %31 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %flags, align 4
  %33 = ptrtoint ptr %d_op.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %d_op.i, align 8
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %34, align 128
  %call.i118 = call i32 %36(ptr noundef nonnull %call, i32 noundef %32) #13
  br label %cleanup

cleanup.thread:                                   ; preds = %if.end47.cleanup.thread_crit_edge, %d_revalidate.exit.cleanup.thread_crit_edge, %if.end37.cleanup.thread_crit_edge, %if.end23.cleanup.thread_crit_edge, %if.end10.cleanup.thread_crit_edge, %if.then6
  %retval.0.ph = phi ptr [ inttoptr (i32 -10 to ptr), %if.end47.cleanup.thread_crit_edge ], [ inttoptr (i32 -10 to ptr), %if.end23.cleanup.thread_crit_edge ], [ inttoptr (i32 -10 to ptr), %if.end10.cleanup.thread_crit_edge ], [ %call, %d_revalidate.exit.cleanup.thread_crit_edge ], [ %call, %if.end37.cleanup.thread_crit_edge ], [ %spec.select, %if.then6 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %seq) #13
  br label %cleanup86

cleanup:                                          ; preds = %if.then.i119, %if.then53.cleanup_crit_edge, %if.end51.cleanup_crit_edge
  %status.1 = phi i32 [ %call.i, %if.end51.cleanup_crit_edge ], [ %call.i118, %if.then.i119 ], [ 1, %if.then53.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %seq) #13
  br label %if.end72

if.else:                                          ; preds = %entry
  %last57 = getelementptr inbounds %struct.nameidata, ptr %nd, i32 0, i32 1
  %call58 = tail call ptr @__d_lookup(ptr noundef %1, ptr noundef %last57) #13
  %tobool59.not = icmp eq ptr %call58, null
  br i1 %tobool59.not, label %if.else.cleanup86_crit_edge, label %if.end69, !prof !360

if.else.cleanup86_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup86

if.end69:                                         ; preds = %if.else
  %37 = ptrtoint ptr %call58 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %call58, align 8
  %and.i122 = and i32 %38, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i122)
  %tobool.not.i123 = icmp eq i32 %and.i122, 0
  br i1 %tobool.not.i123, label %if.end69.cleanup86_crit_edge, label %if.then.i126, !prof !362

if.end69.cleanup86_crit_edge:                     ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup86

if.then.i126:                                     ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #15
  %39 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %flags, align 4
  %d_op.i124 = getelementptr inbounds %struct.dentry, ptr %call58, i32 0, i32 8
  %41 = ptrtoint ptr %d_op.i124 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %d_op.i124, align 8
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %42, align 128
  %call.i125 = tail call i32 %44(ptr noundef nonnull %call58, i32 noundef %40) #13
  br label %if.end72

if.end72:                                         ; preds = %if.then.i126, %cleanup
  %dentry.0 = phi ptr [ %call, %cleanup ], [ %call58, %if.then.i126 ]
  %status.2 = phi i32 [ %status.1, %cleanup ], [ %call.i125, %if.then.i126 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %status.2)
  %cmp73 = icmp slt i32 %status.2, 1
  br i1 %cmp73, label %if.then80, label %if.end72.cleanup86_crit_edge, !prof !360

if.end72.cleanup86_crit_edge:                     ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup86

if.then80:                                        ; preds = %if.end72
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %status.2)
  %tobool81.not = icmp eq i32 %status.2, 0
  br i1 %tobool81.not, label %if.then82, label %if.then80.if.end83_crit_edge

if.then80.if.end83_crit_edge:                     ; preds = %if.then80
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end83

if.then82:                                        ; preds = %if.then80
  call void @__sanitizer_cov_trace_pc() #15
  call void @d_invalidate(ptr noundef nonnull %dentry.0) #13
  br label %if.end83

if.end83:                                         ; preds = %if.then82, %if.then80.if.end83_crit_edge
  call void @dput(ptr noundef nonnull %dentry.0) #13
  %45 = inttoptr i32 %status.2 to ptr
  br label %cleanup86

cleanup86:                                        ; preds = %if.end83, %if.end72.cleanup86_crit_edge, %if.end69.cleanup86_crit_edge, %if.else.cleanup86_crit_edge, %cleanup.thread
  %retval.1 = phi ptr [ %45, %if.end83 ], [ null, %if.else.cleanup86_crit_edge ], [ %dentry.0, %if.end72.cleanup86_crit_edge ], [ %retval.0.ph, %cleanup.thread ], [ %call58, %if.end69.cleanup86_crit_edge ]
  ret ptr %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @choose_mountpoint_rcu(ptr noundef readonly %m, ptr nocapture noundef readonly %root, ptr nocapture noundef writeonly %path, ptr nocapture noundef writeonly %seqp) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %dentry = getelementptr inbounds %struct.path, ptr %root, i32 0, i32 1
  br label %while.cond

while.cond:                                       ; preds = %if.end.while.cond_crit_edge, %entry
  %m.addr.0 = phi ptr [ %m, %entry ], [ %1, %if.end.while.cond_crit_edge ]
  %mnt_parent.i = getelementptr inbounds %struct.mount, ptr %m.addr.0, i32 0, i32 1
  %0 = ptrtoint ptr %mnt_parent.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mnt_parent.i, align 4
  %cmp.i.not = icmp eq ptr %1, %m.addr.0
  br i1 %cmp.i.not, label %while.cond.return_crit_edge, label %while.body

while.cond.return_crit_edge:                      ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

while.body:                                       ; preds = %while.cond
  %mnt_mountpoint = getelementptr inbounds %struct.mount, ptr %m.addr.0, i32 0, i32 2
  %2 = ptrtoint ptr %mnt_mountpoint to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mnt_mountpoint, align 4
  %4 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dentry, align 4
  %cmp = icmp eq ptr %5, %3
  br i1 %cmp, label %land.rhs, label %while.body.if.end_crit_edge

while.body.if.end_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.rhs:                                         ; preds = %while.body
  %6 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %root, align 4
  %mnt1 = getelementptr inbounds %struct.mount, ptr %1, i32 0, i32 3
  %cmp2 = icmp eq ptr %7, %mnt1
  br i1 %cmp2, label %land.rhs.return_crit_edge, label %land.rhs.if.end_crit_edge, !prof !360

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.rhs.return_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.end:                                           ; preds = %land.rhs.if.end_crit_edge, %while.body.if.end_crit_edge
  %mnt5 = getelementptr inbounds %struct.mount, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %mnt5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mnt5, align 4
  %cmp6.not = icmp eq ptr %3, %9
  br i1 %cmp6.not, label %if.end.while.cond_crit_edge, label %if.then7

if.end.while.cond_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond

if.then7:                                         ; preds = %if.end
  %10 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %mnt5, ptr %path, align 4
  %dentry10 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %11 = ptrtoint ptr %dentry10 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %3, ptr %dentry10, align 4
  %d_seq = getelementptr inbounds %struct.dentry, ptr %3, i32 0, i32 1
  tail call fastcc void @seqcount_lockdep_reader_access(ptr noundef %d_seq)
  %12 = ptrtoint ptr %d_seq to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %d_seq, align 4
  %and48 = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and48)
  %tobool15.not49 = icmp eq i32 %and48, 0
  br i1 %tobool15.not49, label %if.then7.cleanup.thread45_crit_edge, label %if.then7.do.end_crit_edge

if.then7.do.end_crit_edge:                        ; preds = %if.then7
  br label %do.end

if.then7.cleanup.thread45_crit_edge:              ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread45

do.end:                                           ; preds = %do.end.do.end_crit_edge, %if.then7.do.end_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !440
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #13, !srcloc !441
  %14 = ptrtoint ptr %d_seq to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %d_seq, align 4
  %and = and i32 %15, 1
  %tobool15.not = icmp eq i32 %and, 0
  br i1 %tobool15.not, label %do.end.cleanup.thread45_crit_edge, label %do.end.do.end_crit_edge

do.end.do.end_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

do.end.cleanup.thread45_crit_edge:                ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.thread45

cleanup.thread45:                                 ; preds = %do.end.cleanup.thread45_crit_edge, %if.then7.cleanup.thread45_crit_edge
  %.lcssa = phi i32 [ %13, %if.then7.cleanup.thread45_crit_edge ], [ %15, %do.end.cleanup.thread45_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !442
  %16 = ptrtoint ptr %seqp to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %.lcssa, ptr %seqp, align 4
  br label %return

return:                                           ; preds = %cleanup.thread45, %land.rhs.return_crit_edge, %while.cond.return_crit_edge
  %retval.2 = phi i1 [ true, %cleanup.thread45 ], [ false, %while.cond.return_crit_edge ], [ false, %land.rhs.return_crit_edge ]
  ret i1 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @choose_mountpoint(ptr noundef readonly %m, ptr nocapture noundef readonly %root, ptr nocapture noundef %path) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !395
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #13
  %call.i = tail call zeroext i1 @rcu_is_watching() #13
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.51, i32 noundef 696, ptr noundef nonnull @.str.52) #13
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %dentry.i = getelementptr inbounds %struct.path, ptr %root, i32 0, i32 1
  %dentry10.i = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %rcu_read_lock.exit
  tail call fastcc void @seqcount_lockdep_reader_access(ptr noundef nonnull @mount_lock) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mount_lock to i32))
  %4 = load volatile i32, ptr @mount_lock, align 4
  %and1.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not2.i = icmp eq i32 %and1.i, 0
  br i1 %tobool.not2.i, label %while.cond.read_seqbegin.exit_crit_edge, label %while.cond.do.end.i_crit_edge

while.cond.do.end.i_crit_edge:                    ; preds = %while.cond
  br label %do.end.i

while.cond.read_seqbegin.exit_crit_edge:          ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %read_seqbegin.exit

do.end.i:                                         ; preds = %do.end.i.do.end.i_crit_edge, %while.cond.do.end.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !443
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #13, !srcloc !444
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mount_lock to i32))
  %5 = load volatile i32, ptr @mount_lock, align 4
  %and.i = and i32 %5, 1
  %tobool.not.i36 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i36, label %do.end.i.read_seqbegin.exit_crit_edge, label %do.end.i.do.end.i_crit_edge

do.end.i.do.end.i_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end.i

do.end.i.read_seqbegin.exit_crit_edge:            ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %read_seqbegin.exit

read_seqbegin.exit:                               ; preds = %do.end.i.read_seqbegin.exit_crit_edge, %while.cond.read_seqbegin.exit_crit_edge
  %.lcssa.i = phi i32 [ %4, %while.cond.read_seqbegin.exit_crit_edge ], [ %5, %do.end.i.read_seqbegin.exit_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !445
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end.i.while.cond.i_crit_edge, %read_seqbegin.exit
  %m.addr.0.i = phi ptr [ %m, %read_seqbegin.exit ], [ %7, %if.end.i.while.cond.i_crit_edge ]
  %mnt_parent.i.i = getelementptr inbounds %struct.mount, ptr %m.addr.0.i, i32 0, i32 1
  %6 = ptrtoint ptr %mnt_parent.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mnt_parent.i.i, align 4
  %cmp.i.not.i = icmp eq ptr %7, %m.addr.0.i
  br i1 %cmp.i.not.i, label %while.cond.i.if.then_crit_edge, label %while.body.i

while.cond.i.if.then_crit_edge:                   ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

while.body.i:                                     ; preds = %while.cond.i
  %mnt_mountpoint.i = getelementptr inbounds %struct.mount, ptr %m.addr.0.i, i32 0, i32 2
  %8 = ptrtoint ptr %mnt_mountpoint.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mnt_mountpoint.i, align 4
  %10 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dentry.i, align 4
  %cmp.i = icmp eq ptr %11, %9
  br i1 %cmp.i, label %land.rhs.i, label %while.body.i.if.end.i_crit_edge

while.body.i.if.end.i_crit_edge:                  ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

land.rhs.i:                                       ; preds = %while.body.i
  %12 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %root, align 4
  %mnt1.i = getelementptr inbounds %struct.mount, ptr %7, i32 0, i32 3
  %cmp2.i = icmp eq ptr %13, %mnt1.i
  br i1 %cmp2.i, label %land.rhs.i.if.then_crit_edge, label %land.rhs.i.if.end.i_crit_edge, !prof !360

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

land.rhs.i.if.then_crit_edge:                     ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

if.end.i:                                         ; preds = %land.rhs.i.if.end.i_crit_edge, %while.body.i.if.end.i_crit_edge
  %mnt5.i = getelementptr inbounds %struct.mount, ptr %7, i32 0, i32 3
  %14 = ptrtoint ptr %mnt5.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mnt5.i, align 4
  %cmp6.not.i = icmp eq ptr %9, %15
  br i1 %cmp6.not.i, label %if.end.i.while.cond.i_crit_edge, label %if.then7.i

if.end.i.while.cond.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.i

if.then7.i:                                       ; preds = %if.end.i
  %16 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %mnt5.i, ptr %path, align 4
  %17 = ptrtoint ptr %dentry10.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %9, ptr %dentry10.i, align 4
  %d_seq.i = getelementptr inbounds %struct.dentry, ptr %9, i32 0, i32 1
  tail call fastcc void @seqcount_lockdep_reader_access(ptr noundef %d_seq.i) #13
  %18 = ptrtoint ptr %d_seq.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %d_seq.i, align 4
  %and48.i = and i32 %19, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and48.i)
  %tobool15.not49.i = icmp eq i32 %and48.i, 0
  br i1 %tobool15.not49.i, label %if.then7.i.if.else_crit_edge, label %if.then7.i.do.end.i38_crit_edge

if.then7.i.do.end.i38_crit_edge:                  ; preds = %if.then7.i
  br label %do.end.i38

if.then7.i.if.else_crit_edge:                     ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else

do.end.i38:                                       ; preds = %do.end.i38.do.end.i38_crit_edge, %if.then7.i.do.end.i38_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !440
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #13, !srcloc !441
  %20 = ptrtoint ptr %d_seq.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %d_seq.i, align 4
  %and.i37 = and i32 %21, 1
  %tobool15.not.i = icmp eq i32 %and.i37, 0
  br i1 %tobool15.not.i, label %do.end.i38.if.else_crit_edge, label %do.end.i38.do.end.i38_crit_edge

do.end.i38.do.end.i38_crit_edge:                  ; preds = %do.end.i38
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end.i38

do.end.i38.if.else_crit_edge:                     ; preds = %do.end.i38
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else

if.then:                                          ; preds = %land.rhs.i.if.then_crit_edge, %while.cond.i.if.then_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !409
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mount_lock to i32))
  %22 = load volatile i32, ptr @mount_lock, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %22, i32 %.lcssa.i)
  %cmp.i.i.i.not = icmp eq i32 %22, %.lcssa.i
  br i1 %cmp.i.i.i.not, label %if.then.while.end_crit_edge, label %if.then.while.cond.backedge_crit_edge

if.then.while.cond.backedge_crit_edge:            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.backedge

if.then.while.end_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.cond.backedge:                              ; preds = %if.then.i34, %land.lhs.true2.i33.while.cond.backedge_crit_edge, %land.lhs.true.i31.while.cond.backedge_crit_edge, %if.end16.while.cond.backedge_crit_edge, %if.then.while.cond.backedge_crit_edge
  br label %while.cond

if.else:                                          ; preds = %do.end.i38.if.else_crit_edge, %if.then7.i.if.else_crit_edge
  %.lcssa.i39 = phi i32 [ %19, %if.then7.i.if.else_crit_edge ], [ %21, %do.end.i38.if.else_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !442
  %23 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %path, align 4
  %call.i40 = tail call i32 @__legitimize_mnt(ptr noundef %24, i32 noundef %.lcssa.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i40)
  %tobool.not.i41 = icmp eq i32 %call.i40, 0
  br i1 %tobool.not.i41, label %if.end5.i, label %if.then.i43, !prof !362

if.then.i43:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i40)
  %cmp.i42 = icmp sgt i32 %call.i40, 0
  br i1 %cmp.i42, label %if.then3.i, label %if.then.i43.if.end16.sink.split_crit_edge

if.then.i43.if.end16.sink.split_crit_edge:        ; preds = %if.then.i43
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16.sink.split

if.then3.i:                                       ; preds = %if.then.i43
  call void @__sanitizer_cov_trace_pc() #15
  %25 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %path, align 4
  br label %if.end16.sink.split

if.end5.i:                                        ; preds = %if.else
  %26 = ptrtoint ptr %dentry10.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %dentry10.i, align 4
  %d_lockref.i = getelementptr inbounds %struct.dentry, ptr %27, i32 0, i32 7
  %call7.i = tail call i32 @lockref_get_not_dead(ptr noundef %d_lockref.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %if.end5.i.if.end16.sink.split_crit_edge, label %__legitimize_path.exit, !prof !360

if.end5.i.if.end16.sink.split_crit_edge:          ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16.sink.split

__legitimize_path.exit:                           ; preds = %if.end5.i
  %28 = ptrtoint ptr %dentry10.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %dentry10.i, align 4
  %d_seq.i46 = getelementptr inbounds %struct.dentry, ptr %29, i32 0, i32 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !409
  %30 = ptrtoint ptr %d_seq.i46 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %d_seq.i46, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %31, i32 %.lcssa.i39)
  %cmp.i.i.not.i = icmp eq i32 %31, %.lcssa.i39
  br i1 %cmp.i.i.not.i, label %__legitimize_path.exit.while.end_crit_edge, label %__legitimize_path.exit.if.end16_crit_edge, !prof !362

__legitimize_path.exit.if.end16_crit_edge:        ; preds = %__legitimize_path.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16

__legitimize_path.exit.while.end_crit_edge:       ; preds = %__legitimize_path.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

if.end16.sink.split:                              ; preds = %if.end5.i.if.end16.sink.split_crit_edge, %if.then3.i, %if.then.i43.if.end16.sink.split_crit_edge
  %32 = ptrtoint ptr %dentry10.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr null, ptr %dentry10.i, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.end16.sink.split, %__legitimize_path.exit.if.end16_crit_edge
  tail call fastcc void @rcu_read_unlock()
  tail call void @path_put(ptr noundef %path)
  %33 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i.i.i.i25 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i.i25 to ptr
  %preempt_count.i.i.i.i26 = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i.i26 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i.i26, align 4
  %add.i.i.i27 = add i32 %36, 1
  store volatile i32 %add.i.i.i27, ptr %preempt_count.i.i.i.i26, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !395
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #13
  %call.i28 = tail call zeroext i1 @rcu_is_watching() #13
  br i1 %call.i28, label %if.end16.while.cond.backedge_crit_edge, label %land.lhs.true.i31

if.end16.while.cond.backedge_crit_edge:           ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.backedge

land.lhs.true.i31:                                ; preds = %if.end16
  %call1.i29 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i29)
  %tobool.not.i30 = icmp eq i32 %call1.i29, 0
  br i1 %tobool.not.i30, label %land.lhs.true.i31.while.cond.backedge_crit_edge, label %land.lhs.true2.i33

land.lhs.true.i31.while.cond.backedge_crit_edge:  ; preds = %land.lhs.true.i31
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.backedge

land.lhs.true2.i33:                               ; preds = %land.lhs.true.i31
  %.b4.i32 = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i32, label %land.lhs.true2.i33.while.cond.backedge_crit_edge, label %if.then.i34

land.lhs.true2.i33.while.cond.backedge_crit_edge: ; preds = %land.lhs.true2.i33
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.backedge

if.then.i34:                                      ; preds = %land.lhs.true2.i33
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.51, i32 noundef 696, ptr noundef nonnull @.str.52) #13
  br label %while.cond.backedge

while.end:                                        ; preds = %__legitimize_path.exit.while.end_crit_edge, %if.then.while.end_crit_edge
  %retval.2.i60.ph = phi i1 [ true, %__legitimize_path.exit.while.end_crit_edge ], [ false, %if.then.while.end_crit_edge ]
  %call.i47 = tail call zeroext i1 @rcu_is_watching() #13
  br i1 %call.i47, label %while.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i50

while.end.rcu_read_unlock.exit_crit_edge:         ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_unlock.exit

land.lhs.true.i50:                                ; preds = %while.end
  %call1.i48 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i48)
  %tobool.not.i49 = icmp eq i32 %call1.i48, 0
  br i1 %tobool.not.i49, label %land.lhs.true.i50.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i52

land.lhs.true.i50.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i50
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_unlock.exit

land.lhs.true2.i52:                               ; preds = %land.lhs.true.i50
  %.b4.i51 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i51, label %land.lhs.true2.i52.rcu_read_unlock.exit_crit_edge, label %if.then.i53

land.lhs.true2.i52.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i52
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_unlock.exit

if.then.i53:                                      ; preds = %land.lhs.true2.i52
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.51, i32 noundef 724, ptr noundef nonnull @.str.53) #13
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i53, %land.lhs.true2.i52.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i50.rcu_read_unlock.exit_crit_edge, %while.end.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !418
  %37 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i.i.i.i54 = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i.i.i54 to ptr
  %preempt_count.i.i.i.i55 = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i.i.i55 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i.i.i55, align 4
  %sub.i.i.i = add i32 %40, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i55, align 4
  tail call void @rcu_read_unlock_strict() #13
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #13
  ret i1 %retval.2.i60.ph
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__d_lookup_rcu(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__d_lookup(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @d_invalidate(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @path_is_under(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @d_lookup(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_waitqueue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @d_alloc_parallel(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__d_lookup_done(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_subdir(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @fsuidgid_has_mapping(ptr nocapture noundef readonly %sb, ptr noundef %mnt_userns) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %s_user_ns = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 53
  %0 = ptrtoint ptr %s_user_ns to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s_user_ns, align 8
  %2 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 99
  %6 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cred.i, align 16
  %fsuid.i = getelementptr inbounds %struct.cred, ptr %7, i32 0, i32 10
  %8 = ptrtoint ptr %fsuid.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %agg.tmp.sroa.0.0.copyload.i = load i32, ptr %fsuid.i, align 4
  %cmp.i.i.i.i = icmp eq ptr %mnt_userns, @init_user_ns
  %cmp.i.i.i = icmp eq ptr %1, %mnt_userns
  %spec.select.i.i.i = or i1 %cmp.i.i.i.i, %cmp.i.i.i
  br i1 %spec.select.i.i.i, label %entry.mapped_fsuid.exit_crit_edge, label %if.end.i.i

entry.mapped_fsuid.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %mapped_fsuid.exit

if.end.i.i:                                       ; preds = %entry
  %.fca.0.insert.i = insertvalue [1 x i32] poison, i32 %agg.tmp.sroa.0.0.copyload.i, 0
  %call2.i.i = tail call i32 @from_kuid(ptr noundef %mnt_userns, [1 x i32] %.fca.0.insert.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.i.i)
  %cmp.i.i = icmp eq i32 %call2.i.i, -1
  br i1 %cmp.i.i, label %if.end.i.i.cleanup_crit_edge, label %if.end4.i.i

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end4.i.i:                                      ; preds = %if.end.i.i
  %cmp.i17.i.i = icmp eq ptr %1, @init_user_ns
  br i1 %cmp.i17.i.i, label %if.end4.i.i.if.end_crit_edge, label %if.end8.i.i

if.end4.i.i.if.end_crit_edge:                     ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end8.i.i:                                      ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call9.i.i = tail call i32 @make_kuid(ptr noundef %1, i32 noundef %call2.i.i) #13
  br label %mapped_fsuid.exit

mapped_fsuid.exit:                                ; preds = %if.end8.i.i, %entry.mapped_fsuid.exit_crit_edge
  %retval.sroa.0.0.i.i = phi i32 [ %call9.i.i, %if.end8.i.i ], [ %agg.tmp.sroa.0.0.copyload.i, %entry.mapped_fsuid.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.sroa.0.0.i.i)
  %cmp.i.not = icmp eq i32 %retval.sroa.0.0.i.i, -1
  br i1 %cmp.i.not, label %mapped_fsuid.exit.cleanup_crit_edge, label %mapped_fsuid.exit.if.end_crit_edge

mapped_fsuid.exit.if.end_crit_edge:               ; preds = %mapped_fsuid.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

mapped_fsuid.exit.cleanup_crit_edge:              ; preds = %mapped_fsuid.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %mapped_fsuid.exit.if.end_crit_edge, %if.end4.i.i.if.end_crit_edge
  %call2.i.i.pn = phi i32 [ %retval.sroa.0.0.i.i, %mapped_fsuid.exit.if.end_crit_edge ], [ %call2.i.i, %if.end4.i.i.if.end_crit_edge ]
  %.fca.0.insert2052 = insertvalue [1 x i32] undef, i32 %call2.i.i.pn, 0
  %9 = tail call i32 @llvm.read_register.i32(metadata !350) #13
  %and.i.i29 = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i29 to ptr
  %task.i30 = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task.i30 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task.i30, align 8
  %cred.i31 = getelementptr inbounds %struct.task_struct, ptr %12, i32 0, i32 99
  %13 = ptrtoint ptr %cred.i31 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %cred.i31, align 16
  %fsgid.i = getelementptr inbounds %struct.cred, ptr %14, i32 0, i32 11
  %15 = ptrtoint ptr %fsgid.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %agg.tmp.sroa.0.0.copyload.i32 = load i32, ptr %fsgid.i, align 4
  br i1 %spec.select.i.i.i, label %if.end.mapped_fsgid.exit_crit_edge, label %if.end.i.i39

if.end.mapped_fsgid.exit_crit_edge:               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %mapped_fsgid.exit

if.end.i.i39:                                     ; preds = %if.end
  %.fca.0.insert.i36 = insertvalue [1 x i32] poison, i32 %agg.tmp.sroa.0.0.copyload.i32, 0
  %call2.i.i37 = tail call i32 @from_kgid(ptr noundef %mnt_userns, [1 x i32] %.fca.0.insert.i36) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.i.i37)
  %cmp.i.i38 = icmp eq i32 %call2.i.i37, -1
  br i1 %cmp.i.i38, label %if.end.i.i39.cleanup_crit_edge, label %if.end4.i.i41

if.end.i.i39.cleanup_crit_edge:                   ; preds = %if.end.i.i39
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end4.i.i41:                                    ; preds = %if.end.i.i39
  %cmp.i17.i.i40 = icmp eq ptr %1, @init_user_ns
  br i1 %cmp.i17.i.i40, label %if.end4.i.i41.if.end9_crit_edge, label %if.end8.i.i43

if.end4.i.i41.if.end9_crit_edge:                  ; preds = %if.end4.i.i41
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end9

if.end8.i.i43:                                    ; preds = %if.end4.i.i41
  call void @__sanitizer_cov_trace_pc() #15
  %call9.i.i42 = tail call i32 @make_kgid(ptr noundef %1, i32 noundef %call2.i.i37) #13
  br label %mapped_fsgid.exit

mapped_fsgid.exit:                                ; preds = %if.end8.i.i43, %if.end.mapped_fsgid.exit_crit_edge
  %retval.sroa.0.0.i.i44 = phi i32 [ %call9.i.i42, %if.end8.i.i43 ], [ %agg.tmp.sroa.0.0.copyload.i32, %if.end.mapped_fsgid.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.sroa.0.0.i.i44)
  %cmp.i45.not = icmp eq i32 %retval.sroa.0.0.i.i44, -1
  br i1 %cmp.i45.not, label %mapped_fsgid.exit.cleanup_crit_edge, label %mapped_fsgid.exit.if.end9_crit_edge

mapped_fsgid.exit.if.end9_crit_edge:              ; preds = %mapped_fsgid.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end9

mapped_fsgid.exit.cleanup_crit_edge:              ; preds = %mapped_fsgid.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end9:                                          ; preds = %mapped_fsgid.exit.if.end9_crit_edge, %if.end4.i.i41.if.end9_crit_edge
  %call2.i.i37.pn = phi i32 [ %retval.sroa.0.0.i.i44, %mapped_fsgid.exit.if.end9_crit_edge ], [ %call2.i.i37, %if.end4.i.i41.if.end9_crit_edge ]
  %call.i = tail call i32 @from_kuid(ptr noundef %1, [1 x i32] %.fca.0.insert2052) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i)
  %cmp.i46.not = icmp eq i32 %call.i, -1
  br i1 %cmp.i46.not, label %if.end9.cleanup_crit_edge, label %land.rhs

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

land.rhs:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  %.fca.0.insert60 = insertvalue [1 x i32] undef, i32 %call2.i.i37.pn, 0
  %call.i47 = tail call i32 @from_kgid(ptr noundef %1, [1 x i32] %.fca.0.insert60) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i47)
  %cmp.i48 = icmp ne i32 %call.i47, -1
  br label %cleanup

cleanup:                                          ; preds = %land.rhs, %if.end9.cleanup_crit_edge, %mapped_fsgid.exit.cleanup_crit_edge, %if.end.i.i39.cleanup_crit_edge, %mapped_fsuid.exit.cleanup_crit_edge, %if.end.i.i.cleanup_crit_edge
  %retval.0 = phi i1 [ false, %mapped_fsuid.exit.cleanup_crit_edge ], [ false, %mapped_fsgid.exit.cleanup_crit_edge ], [ false, %if.end9.cleanup_crit_edge ], [ %cmp.i48, %land.rhs ], [ false, %if.end.i.i.cleanup_crit_edge ], [ false, %if.end.i.i39.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fsnotify(i32 noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_empty_file(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_tmpfile(ptr noundef %nd, i32 noundef %flags, ptr nocapture noundef readonly %op, ptr noundef %file) unnamed_addr #0 align 64 {
entry:
  %path = alloca %struct.path, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path) #13
  %0 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %path, align 4, !annotation !367
  %1 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !367
  %or = or i32 %flags, 2
  %call = call fastcc i32 @path_lookupat(ptr noundef %nd, i32 noundef %or, ptr noundef nonnull %path)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge, !prof !362

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %path, align 4
  %call3 = tail call i32 @mnt_want_write(ptr noundef %4) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.end12, label %if.end.out_crit_edge, !prof !362

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end12:                                         ; preds = %if.end
  %5 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %path, align 4
  %mnt_userns.i = getelementptr inbounds %struct.vfsmount, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %mnt_userns.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %mnt_userns.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !371
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %1, align 4
  %mode = getelementptr inbounds %struct.open_flags, ptr %op, i32 0, i32 1
  %11 = ptrtoint ptr %mode to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %mode, align 4
  %13 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %op, align 4
  %call15 = tail call ptr @vfs_tmpfile(ptr noundef %8, ptr noundef %10, i16 noundef zeroext %12, i32 noundef %14)
  %15 = ptrtoint ptr %call15 to i32
  %cmp.i = icmp ugt ptr %call15, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end12.out2_crit_edge, label %if.end19

if.end12.out2_crit_edge:                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #15
  br label %out2

if.end19:                                         ; preds = %if.end12
  %16 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %1, align 4
  tail call void @dput(ptr noundef %17) #13
  %18 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %call15, ptr %1, align 4
  %19 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %op, align 4
  %call23 = call fastcc i32 @may_open(ptr noundef %8, ptr noundef nonnull %path, i32 noundef 0, i32 noundef %20)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %if.then25, label %if.end19.out2_crit_edge

if.end19.out2_crit_edge:                          ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %out2

if.then25:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  %call26 = call i32 @vfs_open(ptr noundef nonnull %path, ptr noundef %file) #13
  br label %out2

out2:                                             ; preds = %if.then25, %if.end19.out2_crit_edge, %if.end12.out2_crit_edge
  %error.0 = phi i32 [ %15, %if.end12.out2_crit_edge ], [ %call23, %if.end19.out2_crit_edge ], [ %call26, %if.then25 ]
  %21 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %path, align 4
  call void @mnt_drop_write(ptr noundef %22) #13
  br label %out

out:                                              ; preds = %out2, %if.end.out_crit_edge
  %error.1 = phi i32 [ %call3, %if.end.out_crit_edge ], [ %error.0, %out2 ]
  %23 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %1, align 4
  call void @dput(ptr noundef %24) #13
  %25 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %path, align 4
  call void @mntput(ptr noundef %26) #13
  br label %cleanup

cleanup:                                          ; preds = %out, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %error.1, %out ], [ %call, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path) #13
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_o_path(ptr noundef %nd, i32 noundef %flags, ptr noundef %file) unnamed_addr #0 align 64 {
entry:
  %path = alloca %struct.path, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path) #13
  %0 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %path, align 4, !annotation !367
  %1 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !367
  %call = call fastcc i32 @path_lookupat(ptr noundef %nd, i32 noundef %flags, ptr noundef nonnull %path)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call1 = call i32 @vfs_open(ptr noundef nonnull %path, ptr noundef %file) #13
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %1, align 4
  call void @dput(ptr noundef %4) #13
  %5 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %path, align 4
  call void @mntput(ptr noundef %6) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %error.0 = phi i32 [ %call, %entry.if.end_crit_edge ], [ %call1, %if.then ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path) #13
  ret i32 %error.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @may_open(ptr noundef %mnt_userns, ptr noundef %path, i32 noundef %acc_mode, i32 noundef %flag) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %dentry1 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %0 = ptrtoint ptr %dentry1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dentry1, align 4
  %d_inode = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %d_inode, align 8
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %3, align 8
  %6 = and i16 %5, -4096
  %and = zext i16 %6 to i32
  %7 = add nsw i32 %and, -4096
  %8 = lshr exact i32 %7, 12
  %9 = zext i32 %8 to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.90)
  switch i32 %8, label %if.end.sw.epilog_crit_edge [
    i32 9, label %if.end.cleanup_crit_edge
    i32 3, label %sw.bb2
    i32 5, label %if.end.sw.bb11_crit_edge
    i32 1, label %if.end.sw.bb11_crit_edge75
    i32 0, label %if.end.sw.bb14_crit_edge
    i32 11, label %if.end.sw.bb14_crit_edge76
    i32 7, label %sw.bb20
  ]

if.end.sw.bb14_crit_edge76:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb14

if.end.sw.bb14_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb14

if.end.sw.bb11_crit_edge75:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb11

if.end.sw.bb11_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb11

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.sw.epilog_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb2:                                           ; preds = %if.end
  %and3 = and i32 %acc_mode, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %tobool4.not, label %if.end6, label %sw.bb2.cleanup_crit_edge

sw.bb2.cleanup_crit_edge:                         ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end6:                                          ; preds = %sw.bb2
  %and7 = and i32 %acc_mode, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8.not = icmp eq i32 %and7, 0
  br i1 %tobool8.not, label %if.end6.sw.epilog_crit_edge, label %if.end6.cleanup_crit_edge

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end6.sw.epilog_crit_edge:                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb11:                                          ; preds = %if.end.sw.bb11_crit_edge, %if.end.sw.bb11_crit_edge75
  %10 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %path, align 4
  %mnt_flags.i = getelementptr inbounds %struct.vfsmount, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %mnt_flags.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %mnt_flags.i, align 4
  %and.i = and i32 %13, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %may_open_dev.exit, label %sw.bb11.cleanup_crit_edge

sw.bb11.cleanup_crit_edge:                        ; preds = %sw.bb11
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

may_open_dev.exit:                                ; preds = %sw.bb11
  %mnt_sb.i = getelementptr inbounds %struct.vfsmount, ptr %11, i32 0, i32 1
  %14 = ptrtoint ptr %mnt_sb.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mnt_sb.i, align 4
  %s_iflags.i = getelementptr inbounds %struct.super_block, ptr %15, i32 0, i32 11
  %16 = ptrtoint ptr %s_iflags.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %s_iflags.i, align 8
  %and2.i = and i32 %17, 4
  %and15 = and i32 %acc_mode, 1
  %18 = or i32 %and2.i, %and15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %may_open_dev.exit.if.end18_crit_edge, label %may_open_dev.exit.cleanup_crit_edge

may_open_dev.exit.cleanup_crit_edge:              ; preds = %may_open_dev.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

may_open_dev.exit.if.end18_crit_edge:             ; preds = %may_open_dev.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18

sw.bb14:                                          ; preds = %if.end.sw.bb14_crit_edge, %if.end.sw.bb14_crit_edge76
  %and15.old = and i32 %acc_mode, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15.old)
  %tobool16.not.old = icmp eq i32 %and15.old, 0
  br i1 %tobool16.not.old, label %sw.bb14.if.end18_crit_edge, label %sw.bb14.cleanup_crit_edge

sw.bb14.cleanup_crit_edge:                        ; preds = %sw.bb14
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

sw.bb14.if.end18_crit_edge:                       ; preds = %sw.bb14
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18

if.end18:                                         ; preds = %sw.bb14.if.end18_crit_edge, %may_open_dev.exit.if.end18_crit_edge
  %and19 = and i32 %flag, -513
  br label %sw.epilog

sw.bb20:                                          ; preds = %if.end
  %and21 = and i32 %acc_mode, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21)
  %tobool22.not = icmp eq i32 %and21, 0
  br i1 %tobool22.not, label %sw.bb20.sw.epilog_crit_edge, label %land.lhs.true

sw.bb20.sw.epilog_crit_edge:                      ; preds = %sw.bb20
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

land.lhs.true:                                    ; preds = %sw.bb20
  %call23 = tail call zeroext i1 @path_noexec(ptr noundef %path) #13
  br i1 %call23, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.sw.epilog_crit_edge

land.lhs.true.sw.epilog_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

sw.epilog:                                        ; preds = %land.lhs.true.sw.epilog_crit_edge, %sw.bb20.sw.epilog_crit_edge, %if.end18, %if.end6.sw.epilog_crit_edge, %if.end.sw.epilog_crit_edge
  %flag.addr.0 = phi i32 [ %flag, %if.end.sw.epilog_crit_edge ], [ %flag, %land.lhs.true.sw.epilog_crit_edge ], [ %flag, %sw.bb20.sw.epilog_crit_edge ], [ %and19, %if.end18 ], [ %flag, %if.end6.sw.epilog_crit_edge ]
  %or = or i32 %acc_mode, 32
  %call27 = tail call i32 @inode_permission(ptr noundef %mnt_userns, ptr noundef nonnull %3, i32 noundef %or)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %if.end30, label %sw.epilog.cleanup_crit_edge

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end30:                                         ; preds = %sw.epilog
  %i_flags = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 4
  %20 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %i_flags, align 4
  %and31 = and i32 %21, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31)
  %tobool32.not = icmp eq i32 %and31, 0
  br i1 %tobool32.not, label %if.end30.if.end45_crit_edge, label %if.then33

if.end30.if.end45_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end45

if.then33:                                        ; preds = %if.end30
  %and34 = and i32 %flag.addr.0, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34)
  %cmp.not = icmp eq i32 %and34, 0
  %and37 = and i32 %flag.addr.0, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and37)
  %tobool38.not = icmp ne i32 %and37, 0
  %or.cond.not = or i1 %cmp.not, %tobool38.not
  %and41 = and i32 %flag.addr.0, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and41)
  %tobool42.not = icmp eq i32 %and41, 0
  %or.cond71 = and i1 %tobool42.not, %or.cond.not
  br i1 %or.cond71, label %if.then33.if.end45_crit_edge, label %if.then33.cleanup_crit_edge

if.then33.cleanup_crit_edge:                      ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then33.if.end45_crit_edge:                     ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end45

if.end45:                                         ; preds = %if.then33.if.end45_crit_edge, %if.end30.if.end45_crit_edge
  %and46 = and i32 %flag.addr.0, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and46)
  %tobool47.not = icmp eq i32 %and46, 0
  br i1 %tobool47.not, label %if.end45.if.end51_crit_edge, label %land.lhs.true48

if.end45.if.end51_crit_edge:                      ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end51

land.lhs.true48:                                  ; preds = %if.end45
  %call49 = tail call zeroext i1 @inode_owner_or_capable(ptr noundef %mnt_userns, ptr noundef nonnull %3) #13
  br i1 %call49, label %land.lhs.true48.if.end51_crit_edge, label %land.lhs.true48.cleanup_crit_edge

land.lhs.true48.cleanup_crit_edge:                ; preds = %land.lhs.true48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

land.lhs.true48.if.end51_crit_edge:               ; preds = %land.lhs.true48
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end51

if.end51:                                         ; preds = %land.lhs.true48.if.end51_crit_edge, %if.end45.if.end51_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end51, %land.lhs.true48.cleanup_crit_edge, %if.then33.cleanup_crit_edge, %sw.epilog.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %sw.bb14.cleanup_crit_edge, %may_open_dev.exit.cleanup_crit_edge, %sw.bb11.cleanup_crit_edge, %if.end6.cleanup_crit_edge, %sw.bb2.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end51 ], [ -2, %entry.cleanup_crit_edge ], [ -40, %if.end.cleanup_crit_edge ], [ -21, %sw.bb2.cleanup_crit_edge ], [ -13, %if.end6.cleanup_crit_edge ], [ -13, %may_open_dev.exit.cleanup_crit_edge ], [ -13, %sw.bb14.cleanup_crit_edge ], [ -13, %land.lhs.true.cleanup_crit_edge ], [ %call27, %sw.epilog.cleanup_crit_edge ], [ -1, %if.then33.cleanup_crit_edge ], [ -1, %land.lhs.true48.cleanup_crit_edge ], [ -13, %sw.bb11.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vfs_open(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @path_noexec(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_path_mknod(ptr noundef, ptr noundef, i16 noundef zeroext, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ima_file_check(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_path_truncate(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @do_truncate(ptr noundef, ptr noundef, i64 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_mknodat(i32 noundef %dfd, ptr noundef %name, i16 noundef zeroext %mode, i32 noundef %dev) unnamed_addr #0 align 64 {
entry:
  %path = alloca %struct.path, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path) #13
  %0 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %path, align 4, !annotation !367
  %1 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !367
  %3 = lshr i16 %mode, 12
  %4 = zext i16 %3 to i32
  %5 = zext i32 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.91)
  switch i32 %4, label %sw.default.i [
    i32 8, label %entry.may_mknod.exit_crit_edge
    i32 2, label %entry.may_mknod.exit_crit_edge73
    i32 6, label %entry.may_mknod.exit_crit_edge74
    i32 1, label %entry.may_mknod.exit_crit_edge75
    i32 12, label %entry.may_mknod.exit_crit_edge76
    i32 0, label %entry.may_mknod.exit_crit_edge77
    i32 4, label %entry.out1_crit_edge
  ]

entry.out1_crit_edge:                             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %out1

entry.may_mknod.exit_crit_edge77:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %may_mknod.exit

entry.may_mknod.exit_crit_edge76:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %may_mknod.exit

entry.may_mknod.exit_crit_edge75:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %may_mknod.exit

entry.may_mknod.exit_crit_edge74:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %may_mknod.exit

entry.may_mknod.exit_crit_edge73:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %may_mknod.exit

entry.may_mknod.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %may_mknod.exit

sw.default.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %out1

may_mknod.exit:                                   ; preds = %entry.may_mknod.exit_crit_edge, %entry.may_mknod.exit_crit_edge73, %entry.may_mknod.exit_crit_edge74, %entry.may_mknod.exit_crit_edge75, %entry.may_mknod.exit_crit_edge76, %entry.may_mknod.exit_crit_edge77
  %and1.i = and i32 %dev, 255
  %shr2.i = lshr i32 %dev, 12
  %and3.i = and i32 %shr2.i, 1048320
  %or.i = or i32 %and3.i, %and1.i
  %6 = shl i32 %dev, 12
  %shl.i = and i32 %6, -1048576
  %or4.i = or i32 %or.i, %shl.i
  br label %retry

retry:                                            ; preds = %out2.retry_crit_edge, %may_mknod.exit
  %mode.addr.0 = phi i16 [ %mode, %may_mknod.exit ], [ %mode.addr.1, %out2.retry_crit_edge ]
  %tobool.not.i = phi i1 [ true, %may_mknod.exit ], [ false, %out2.retry_crit_edge ]
  %lookup_flags.0 = phi i32 [ 0, %may_mknod.exit ], [ 32, %out2.retry_crit_edge ]
  %call1 = call fastcc ptr @filename_create(i32 noundef %dfd, ptr noundef %name, ptr noundef nonnull %path, i32 noundef %lookup_flags.0)
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %out1.loopexit.split.loop.exit, label %if.end5

if.end5:                                          ; preds = %retry
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %1, align 4
  %d_inode = getelementptr inbounds %struct.dentry, ptr %8, i32 0, i32 5
  %9 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %d_inode, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %10, i32 0, i32 8
  %11 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %i_sb, align 4
  %s_flags = getelementptr inbounds %struct.super_block, ptr %12, i32 0, i32 10
  %13 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %s_flags, align 4
  %and = and i32 %14, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool7.not = icmp eq i32 %and, 0
  br i1 %tobool7.not, label %if.then8, label %if.end5.if.end12_crit_edge

if.end5.if.end12_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end12

if.then8:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #15
  %call9 = call i32 @current_umask() #13
  %15 = trunc i32 %call9 to i16
  %16 = xor i16 %15, -1
  %conv11 = and i16 %mode.addr.0, %16
  br label %if.end12

if.end12:                                         ; preds = %if.then8, %if.end5.if.end12_crit_edge
  %mode.addr.1 = phi i16 [ %mode.addr.0, %if.end5.if.end12_crit_edge ], [ %conv11, %if.then8 ]
  %call13 = call i32 @security_path_mknod(ptr noundef nonnull %path, ptr noundef %call1, i16 noundef zeroext %mode.addr.1, i32 noundef %dev) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.end16, label %if.end12.out2_crit_edge

if.end12.out2_crit_edge:                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #15
  br label %out2

if.end16:                                         ; preds = %if.end12
  %17 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %path, align 4
  %mnt_userns.i = getelementptr inbounds %struct.vfsmount, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %mnt_userns.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile ptr, ptr %mnt_userns.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !371
  %21 = lshr i16 %mode.addr.1, 12
  %22 = zext i16 %21 to i32
  %23 = zext i32 %22 to i64
  call void @__sanitizer_cov_trace_switch(i64 %23, ptr @__sancov_gen_cov_switch_values.92)
  switch i32 %22, label %if.end16.out2_crit_edge [
    i32 0, label %if.end16.sw.bb_crit_edge
    i32 8, label %if.end16.sw.bb_crit_edge78
    i32 2, label %if.end16.sw.bb26_crit_edge
    i32 6, label %if.end16.sw.bb26_crit_edge79
    i32 1, label %if.end16.sw.bb31_crit_edge
    i32 12, label %if.end16.sw.bb31_crit_edge80
  ]

if.end16.sw.bb31_crit_edge80:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb31

if.end16.sw.bb31_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb31

if.end16.sw.bb26_crit_edge79:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb26

if.end16.sw.bb26_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb26

if.end16.sw.bb_crit_edge78:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end16.sw.bb_crit_edge:                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end16.out2_crit_edge:                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #15
  br label %out2

sw.bb:                                            ; preds = %if.end16.sw.bb_crit_edge, %if.end16.sw.bb_crit_edge78
  %24 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %1, align 4
  %d_inode21 = getelementptr inbounds %struct.dentry, ptr %25, i32 0, i32 5
  %26 = ptrtoint ptr %d_inode21 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %d_inode21, align 8
  %call22 = call i32 @vfs_create(ptr noundef %20, ptr noundef %27, ptr noundef %call1, i16 noundef zeroext %mode.addr.1, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %if.then24, label %sw.bb.out2_crit_edge

sw.bb.out2_crit_edge:                             ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %out2

if.then24:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  call void @ima_post_path_mknod(ptr noundef %20, ptr noundef %call1) #13
  br label %out2

sw.bb26:                                          ; preds = %if.end16.sw.bb26_crit_edge, %if.end16.sw.bb26_crit_edge79
  %28 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %1, align 4
  %d_inode28 = getelementptr inbounds %struct.dentry, ptr %29, i32 0, i32 5
  %30 = ptrtoint ptr %d_inode28 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %d_inode28, align 8
  %call30 = call i32 @vfs_mknod(ptr noundef %20, ptr noundef %31, ptr noundef %call1, i16 noundef zeroext %mode.addr.1, i32 noundef %or4.i)
  br label %out2

sw.bb31:                                          ; preds = %if.end16.sw.bb31_crit_edge, %if.end16.sw.bb31_crit_edge80
  %32 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %1, align 4
  %d_inode33 = getelementptr inbounds %struct.dentry, ptr %33, i32 0, i32 5
  %34 = ptrtoint ptr %d_inode33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %d_inode33, align 8
  %call34 = call i32 @vfs_mknod(ptr noundef %20, ptr noundef %35, ptr noundef %call1, i16 noundef zeroext %mode.addr.1, i32 noundef 0)
  br label %out2

out2:                                             ; preds = %sw.bb31, %sw.bb26, %if.then24, %sw.bb.out2_crit_edge, %if.end16.out2_crit_edge, %if.end12.out2_crit_edge
  %error.0 = phi i32 [ %call13, %if.end12.out2_crit_edge ], [ 0, %if.end16.out2_crit_edge ], [ %call34, %sw.bb31 ], [ %call30, %sw.bb26 ], [ %call22, %sw.bb.out2_crit_edge ], [ 0, %if.then24 ]
  call void @dput(ptr noundef %call1) #13
  %36 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %1, align 4
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %37, i32 0, i32 5
  %38 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %d_inode.i, align 8
  %i_rwsem.i.i = getelementptr inbounds %struct.inode, ptr %39, i32 0, i32 25
  call void @up_write(ptr noundef %i_rwsem.i.i) #13
  %40 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %path, align 4
  call void @mnt_drop_write(ptr noundef %41) #13
  %42 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %1, align 4
  call void @dput(ptr noundef %43) #13
  %44 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %path, align 4
  call void @mntput(ptr noundef %45) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -116, i32 %error.0)
  %cmp.i62 = icmp eq i32 %error.0, -116
  %46 = and i1 %tobool.not.i, %cmp.i62
  br i1 %46, label %out2.retry_crit_edge, label %out2.out1_crit_edge

out2.out1_crit_edge:                              ; preds = %out2
  call void @__sanitizer_cov_trace_pc() #15
  br label %out1

out2.retry_crit_edge:                             ; preds = %out2
  call void @__sanitizer_cov_trace_pc() #15
  br label %retry

out1.loopexit.split.loop.exit:                    ; preds = %retry
  call void @__sanitizer_cov_trace_pc() #15
  %47 = ptrtoint ptr %call1 to i32
  br label %out1

out1:                                             ; preds = %out1.loopexit.split.loop.exit, %out2.out1_crit_edge, %sw.default.i, %entry.out1_crit_edge
  %error.1 = phi i32 [ -22, %sw.default.i ], [ -1, %entry.out1_crit_edge ], [ %47, %out1.loopexit.split.loop.exit ], [ %error.0, %out2.out1_crit_edge ]
  %cmp.i.i = icmp ugt ptr %name, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %out1.putname.exit_crit_edge, label %do.body.i

out1.putname.exit_crit_edge:                      ; preds = %out1
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

do.body.i:                                        ; preds = %out1
  %refcnt.i = getelementptr inbounds %struct.filename, ptr %name, i32 0, i32 2
  %48 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %49)
  %cmp.i63 = icmp slt i32 %49, 1
  br i1 %cmp.i63, label %do.body3.i, label %do.end7.i, !prof !360

do.body3.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namei.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 261, 0\0A.popsection", ""() #13, !srcloc !361
  unreachable

do.end7.i:                                        ; preds = %do.body.i
  %dec.i = add nsw i32 %49, -1
  %50 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %dec.i, ptr %refcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %cmp9.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp9.not.i, label %if.end11.i, label %do.end7.i.putname.exit_crit_edge

do.end7.i.putname.exit_crit_edge:                 ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %putname.exit

if.end11.i:                                       ; preds = %do.end7.i
  %51 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %name, align 4
  %iname.i = getelementptr inbounds %struct.filename, ptr %name, i32 0, i32 4
  %cmp13.not.i = icmp eq ptr %52, %iname.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @names_cachep to i32))
  %53 = load ptr, ptr @names_cachep, align 4
  br i1 %cmp13.not.i, label %if.else.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %53, ptr noundef %52) #13
  call void @kfree(ptr noundef %name) #13
  br label %putname.exit

if.else.i:                                        ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @kmem_cache_free(ptr noundef %53, ptr noundef %name) #13
  br label %putname.exit

putname.exit:                                     ; preds = %if.else.i, %if.then14.i, %do.end7.i.putname.exit_crit_edge, %out1.putname.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path) #13
  ret i32 %error.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @ima_post_path_mknod(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__is_local_mountpoint(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__detach_mounts(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @d_delete(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @path_parentat(ptr noundef %nd, i32 noundef %flags, ptr nocapture noundef writeonly %parent) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @path_init(ptr noundef %nd, i32 noundef %flags)
  %call1 = tail call fastcc i32 @link_path_walk(ptr noundef %call, ptr noundef %nd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %entry.if.end7_crit_edge

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7

if.end:                                           ; preds = %entry
  %call2 = tail call fastcc i32 @complete_walk(ptr noundef %nd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.then4, label %if.end.if.end7_crit_edge

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %0 = ptrtoint ptr %nd to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %nd, align 8
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_storeN_noabort(i32 %2, i32 8)
  store i64 %1, ptr %parent, align 4
  store ptr null, ptr %nd, align 8
  %dentry = getelementptr inbounds %struct.path, ptr %nd, i32 0, i32 1
  %3 = ptrtoint ptr %dentry to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %dentry, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.end.if.end7_crit_edge, %entry.if.end7_crit_edge
  %err.018 = phi i32 [ 0, %if.then4 ], [ %call2, %if.end.if.end7_crit_edge ], [ %call1, %entry.if.end7_crit_edge ]
  tail call fastcc void @terminate_walk(ptr noundef %nd)
  ret i32 %err.018
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__break_lease(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fsnotify_get_cookie() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__check_object_size(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_fault(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @should_fail_usercopy() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_to_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pagecache_get_page(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_page(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod_and_test(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @read_cache_page(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mark_inode_dirty(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #9

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #9

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #13

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #14 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 139)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #14 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 139)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #10 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #11 = { nounwind readonly }
attributes #12 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #13 = { nounwind }
attributes #14 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #15 = { nomerge }
attributes #16 = { nounwind allocsize(2) }
attributes #17 = { nobuiltin }
attributes #18 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !10, !12, !14, !16, !18, !20, !22, !24, !26, !28, !29, !31, !33, !35, !37, !39, !41, !43, !45, !47, !49, !51, !53, !55, !57, !59, !61, !63, !65, !67, !69, !71, !72, !73, !74, !75, !76, !77, !78, !79, !81, !82, !83, !84, !85, !86, !87, !88, !89, !91, !93, !94, !95, !96, !97, !98, !99, !100, !101, !103, !104, !105, !106, !107, !108, !109, !110, !111, !113, !115, !116, !117, !118, !119, !120, !121, !122, !123, !125, !127, !128, !129, !130, !131, !132, !133, !134, !135, !137, !138, !139, !140, !141, !142, !143, !144, !145, !147, !149, !150, !151, !152, !153, !154, !155, !156, !157, !159, !160, !161, !162, !163, !164, !165, !166, !167, !169, !171, !172, !173, !174, !175, !176, !177, !178, !179, !181, !182, !183, !184, !185, !186, !187, !188, !189, !191, !193, !194, !195, !196, !197, !198, !199, !200, !201, !203, !204, !205, !206, !207, !208, !209, !210, !211, !213, !214, !215, !216, !217, !218, !219, !220, !221, !223, !225, !227, !229, !231, !233, !235, !237, !239, !241, !243, !245, !246, !248, !250, !252, !254, !256, !258, !260, !262, !264, !265, !266, !268, !269, !271, !273, !275, !276, !278, !280, !282, !284, !286, !288, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !339, !340, !342, !344, !346, !348}
!llvm.named.register.sp = !{!350}
!llvm.module.flags = !{!351, !352, !353, !354, !355, !356, !357, !358}
!llvm.ident = !{!359}

!0 = !{ptr @__ksymtab_generic_permission, !1, !"__ksymtab_generic_permission", i1 false, i1 false}
!1 = !{!"../fs/namei.c", i32 439, i32 1}
!2 = !{ptr @__ksymtab_inode_permission, !3, !"__ksymtab_inode_permission", i1 false, i1 false}
!3 = !{!"../fs/namei.c", i32 534, i32 1}
!4 = !{ptr @__ksymtab_path_get, !5, !"__ksymtab_path_get", i1 false, i1 false}
!5 = !{!"../fs/namei.c", i32 547, i32 1}
!6 = !{ptr @__ksymtab_path_put, !7, !"__ksymtab_path_put", i1 false, i1 false}
!7 = !{!"../fs/namei.c", i32 560, i32 1}
!8 = !{ptr @__initcall__kmod_namei__310_1074_init_fs_namei_sysctls5, !9, !"__initcall__kmod_namei__310_1074_init_fs_namei_sysctls5", i1 false, i1 false}
!9 = !{!"../fs/namei.c", i32 1074, i32 1}
!10 = !{ptr @.str, !11, !"<string literal>", i1 false, i1 false}
!11 = !{!"../fs/namei.c", i32 1198, i32 41}
!12 = !{ptr @__ksymtab_follow_up, !13, !"__ksymtab_follow_up", i1 false, i1 false}
!13 = !{!"../fs/namei.c", i32 1286, i32 1}
!14 = !{ptr @__ksymtab_follow_down_one, !15, !"__ksymtab_follow_down_one", i1 false, i1 false}
!15 = !{!"../fs/namei.c", i32 1452, i32 1}
!16 = !{ptr @__ksymtab_follow_down, !17, !"__ksymtab_follow_down", i1 false, i1 false}
!17 = !{!"../fs/namei.c", i32 1469, i32 1}
!18 = !{ptr @__ksymtab_full_name_hash, !19, !"__ksymtab_full_name_hash", i1 false, i1 false}
!19 = !{!"../fs/namei.c", i32 2153, i32 1}
!20 = !{ptr @__ksymtab_hashlen_string, !21, !"__ksymtab_hashlen_string", i1 false, i1 false}
!21 = !{!"../fs/namei.c", i32 2178, i32 1}
!22 = !{ptr @__ksymtab_kern_path, !23, !"__ksymtab_kern_path", i1 false, i1 false}
!23 = !{!"../fs/namei.c", i32 2624, i32 1}
!24 = !{ptr @__ksymtab_vfs_path_lookup, !25, !"__ksymtab_vfs_path_lookup", i1 false, i1 false}
!25 = !{!"../fs/namei.c", i32 2648, i32 1}
!26 = distinct !{null, !27, !"__already_done", i1 false, i1 false}
!27 = !{!"../fs/namei.c", i32 2702, i32 2}
!28 = !{ptr @.str.1, !27, !"<string literal>", i1 false, i1 false}
!29 = !{ptr @__ksymtab_try_lookup_one_len, !30, !"__ksymtab_try_lookup_one_len", i1 false, i1 false}
!30 = !{!"../fs/namei.c", i32 2710, i32 1}
!31 = distinct !{null, !32, !"__already_done", i1 false, i1 false}
!32 = !{!"../fs/namei.c", i32 2729, i32 2}
!33 = !{ptr @__ksymtab_lookup_one_len, !34, !"__ksymtab_lookup_one_len", i1 false, i1 false}
!34 = !{!"../fs/namei.c", i32 2738, i32 1}
!35 = distinct !{null, !36, !"__already_done", i1 false, i1 false}
!36 = !{!"../fs/namei.c", i32 2759, i32 2}
!37 = !{ptr @__ksymtab_lookup_one, !38, !"__ksymtab_lookup_one", i1 false, i1 false}
!38 = !{!"../fs/namei.c", i32 2768, i32 1}
!39 = !{ptr @__ksymtab_lookup_one_len_unlocked, !40, !"__ksymtab_lookup_one_len_unlocked", i1 false, i1 false}
!40 = !{!"../fs/namei.c", i32 2798, i32 1}
!41 = !{ptr @__ksymtab_lookup_positive_unlocked, !42, !"__ksymtab_lookup_positive_unlocked", i1 false, i1 false}
!42 = !{!"../fs/namei.c", i32 2818, i32 1}
!43 = !{ptr @.str.2, !44, !"<string literal>", i1 false, i1 false}
!44 = !{!"../fs/namei.c", i32 2828, i32 21}
!45 = !{ptr @__ksymtab_user_path_at_empty, !46, !"__ksymtab_user_path_at_empty", i1 false, i1 false}
!46 = !{!"../fs/namei.c", i32 2856, i32 1}
!47 = distinct !{null, !48, !"__warned", i1 false, i1 false}
!48 = !{!"../fs/namei.c", i32 2861, i32 17}
!49 = !{ptr @__ksymtab___check_sticky, !50, !"__ksymtab___check_sticky", i1 false, i1 false}
!50 = !{!"../fs/namei.c", i32 2869, i32 1}
!51 = !{ptr @__ksymtab_lock_rename, !52, !"__ksymtab_lock_rename", i1 false, i1 false}
!52 = !{!"../fs/namei.c", i32 2989, i32 1}
!53 = !{ptr @__ksymtab_unlock_rename, !54, !"__ksymtab_unlock_rename", i1 false, i1 false}
!54 = !{!"../fs/namei.c", i32 2999, i32 1}
!55 = !{ptr @__ksymtab_vfs_create, !56, !"__ksymtab_vfs_create", i1 false, i1 false}
!56 = !{!"../fs/namei.c", i32 3036, i32 1}
!57 = !{ptr @__ksymtab_vfs_mkobj, !58, !"__ksymtab_vfs_mkobj", i1 false, i1 false}
!58 = !{!"../fs/namei.c", i32 3057, i32 1}
!59 = !{ptr @__ksymtab_vfs_tmpfile, !60, !"__ksymtab_vfs_tmpfile", i1 false, i1 false}
!60 = !{!"../fs/namei.c", i32 3543, i32 1}
!61 = !{ptr @__ksymtab_kern_path_create, !62, !"__ksymtab_kern_path_create", i1 false, i1 false}
!62 = !{!"../fs/namei.c", i32 3749, i32 1}
!63 = !{ptr @__ksymtab_done_path_create, !64, !"__ksymtab_done_path_create", i1 false, i1 false}
!64 = !{!"../fs/namei.c", i32 3758, i32 1}
!65 = !{ptr @__ksymtab_user_path_create, !66, !"__ksymtab_user_path_create", i1 false, i1 false}
!66 = !{!"../fs/namei.c", i32 3769, i32 1}
!67 = !{ptr @__ksymtab_vfs_mknod, !68, !"__ksymtab_vfs_mknod", i1 false, i1 false}
!68 = !{!"../fs/namei.c", i32 3816, i32 1}
!69 = !{ptr @.str.3, !70, !"<string literal>", i1 false, i1 false}
!70 = !{!"../fs/namei.c", i32 3887, i32 1}
!71 = !{ptr @event_enter__mknodat, !70, !"event_enter__mknodat", i1 false, i1 false}
!72 = !{ptr @__event_enter__mknodat, !70, !"__event_enter__mknodat", i1 false, i1 false}
!73 = !{ptr @.str.4, !70, !"<string literal>", i1 false, i1 false}
!74 = !{ptr @event_exit__mknodat, !70, !"event_exit__mknodat", i1 false, i1 false}
!75 = !{ptr @__event_exit__mknodat, !70, !"__event_exit__mknodat", i1 false, i1 false}
!76 = !{ptr @.str.5, !70, !"<string literal>", i1 false, i1 false}
!77 = !{ptr @__syscall_meta__mknodat, !70, !"__syscall_meta__mknodat", i1 false, i1 false}
!78 = !{ptr @__p_syscall_meta__mknodat, !70, !"__p_syscall_meta__mknodat", i1 false, i1 false}
!79 = !{ptr @.str.6, !80, !"<string literal>", i1 false, i1 false}
!80 = !{!"../fs/namei.c", i32 3893, i32 1}
!81 = !{ptr @event_enter__mknod, !80, !"event_enter__mknod", i1 false, i1 false}
!82 = !{ptr @__event_enter__mknod, !80, !"__event_enter__mknod", i1 false, i1 false}
!83 = !{ptr @.str.7, !80, !"<string literal>", i1 false, i1 false}
!84 = !{ptr @event_exit__mknod, !80, !"event_exit__mknod", i1 false, i1 false}
!85 = !{ptr @__event_exit__mknod, !80, !"__event_exit__mknod", i1 false, i1 false}
!86 = !{ptr @.str.8, !80, !"<string literal>", i1 false, i1 false}
!87 = !{ptr @__syscall_meta__mknod, !80, !"__syscall_meta__mknod", i1 false, i1 false}
!88 = !{ptr @__p_syscall_meta__mknod, !80, !"__p_syscall_meta__mknod", i1 false, i1 false}
!89 = !{ptr @__ksymtab_vfs_mkdir, !90, !"__ksymtab_vfs_mkdir", i1 false, i1 false}
!90 = !{!"../fs/namei.c", i32 3938, i32 1}
!91 = !{ptr @.str.9, !92, !"<string literal>", i1 false, i1 false}
!92 = !{!"../fs/namei.c", i32 3972, i32 1}
!93 = !{ptr @event_enter__mkdirat, !92, !"event_enter__mkdirat", i1 false, i1 false}
!94 = !{ptr @__event_enter__mkdirat, !92, !"__event_enter__mkdirat", i1 false, i1 false}
!95 = !{ptr @.str.10, !92, !"<string literal>", i1 false, i1 false}
!96 = !{ptr @event_exit__mkdirat, !92, !"event_exit__mkdirat", i1 false, i1 false}
!97 = !{ptr @__event_exit__mkdirat, !92, !"__event_exit__mkdirat", i1 false, i1 false}
!98 = !{ptr @.str.11, !92, !"<string literal>", i1 false, i1 false}
!99 = !{ptr @__syscall_meta__mkdirat, !92, !"__syscall_meta__mkdirat", i1 false, i1 false}
!100 = !{ptr @__p_syscall_meta__mkdirat, !92, !"__p_syscall_meta__mkdirat", i1 false, i1 false}
!101 = !{ptr @.str.12, !102, !"<string literal>", i1 false, i1 false}
!102 = !{!"../fs/namei.c", i32 3977, i32 1}
!103 = !{ptr @event_enter__mkdir, !102, !"event_enter__mkdir", i1 false, i1 false}
!104 = !{ptr @__event_enter__mkdir, !102, !"__event_enter__mkdir", i1 false, i1 false}
!105 = !{ptr @.str.13, !102, !"<string literal>", i1 false, i1 false}
!106 = !{ptr @event_exit__mkdir, !102, !"event_exit__mkdir", i1 false, i1 false}
!107 = !{ptr @__event_exit__mkdir, !102, !"__event_exit__mkdir", i1 false, i1 false}
!108 = !{ptr @.str.14, !102, !"<string literal>", i1 false, i1 false}
!109 = !{ptr @__syscall_meta__mkdir, !102, !"__syscall_meta__mkdir", i1 false, i1 false}
!110 = !{ptr @__p_syscall_meta__mkdir, !102, !"__p_syscall_meta__mkdir", i1 false, i1 false}
!111 = !{ptr @__ksymtab_vfs_rmdir, !112, !"__ksymtab_vfs_rmdir", i1 false, i1 false}
!112 = !{!"../fs/namei.c", i32 4035, i32 1}
!113 = !{ptr @.str.15, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../fs/namei.c", i32 4097, i32 1}
!115 = !{ptr @event_enter__rmdir, !114, !"event_enter__rmdir", i1 false, i1 false}
!116 = !{ptr @__event_enter__rmdir, !114, !"__event_enter__rmdir", i1 false, i1 false}
!117 = !{ptr @.str.16, !114, !"<string literal>", i1 false, i1 false}
!118 = !{ptr @event_exit__rmdir, !114, !"event_exit__rmdir", i1 false, i1 false}
!119 = !{ptr @__event_exit__rmdir, !114, !"__event_exit__rmdir", i1 false, i1 false}
!120 = !{ptr @.str.17, !114, !"<string literal>", i1 false, i1 false}
!121 = !{ptr @__syscall_meta__rmdir, !114, !"__syscall_meta__rmdir", i1 false, i1 false}
!122 = !{ptr @__p_syscall_meta__rmdir, !114, !"__p_syscall_meta__rmdir", i1 false, i1 false}
!123 = !{ptr @__ksymtab_vfs_unlink, !124, !"__ksymtab_vfs_unlink", i1 false, i1 false}
!124 = !{!"../fs/namei.c", i32 4170, i32 1}
!125 = !{ptr @.str.18, !126, !"<string literal>", i1 false, i1 false}
!126 = !{!"../fs/namei.c", i32 4254, i32 1}
!127 = !{ptr @event_enter__unlinkat, !126, !"event_enter__unlinkat", i1 false, i1 false}
!128 = !{ptr @__event_enter__unlinkat, !126, !"__event_enter__unlinkat", i1 false, i1 false}
!129 = !{ptr @.str.19, !126, !"<string literal>", i1 false, i1 false}
!130 = !{ptr @event_exit__unlinkat, !126, !"event_exit__unlinkat", i1 false, i1 false}
!131 = !{ptr @__event_exit__unlinkat, !126, !"__event_exit__unlinkat", i1 false, i1 false}
!132 = !{ptr @.str.20, !126, !"<string literal>", i1 false, i1 false}
!133 = !{ptr @__syscall_meta__unlinkat, !126, !"__syscall_meta__unlinkat", i1 false, i1 false}
!134 = !{ptr @__p_syscall_meta__unlinkat, !126, !"__p_syscall_meta__unlinkat", i1 false, i1 false}
!135 = !{ptr @.str.21, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../fs/namei.c", i32 4264, i32 1}
!137 = !{ptr @event_enter__unlink, !136, !"event_enter__unlink", i1 false, i1 false}
!138 = !{ptr @__event_enter__unlink, !136, !"__event_enter__unlink", i1 false, i1 false}
!139 = !{ptr @.str.22, !136, !"<string literal>", i1 false, i1 false}
!140 = !{ptr @event_exit__unlink, !136, !"event_exit__unlink", i1 false, i1 false}
!141 = !{ptr @__event_exit__unlink, !136, !"__event_exit__unlink", i1 false, i1 false}
!142 = !{ptr @.str.23, !136, !"<string literal>", i1 false, i1 false}
!143 = !{ptr @__syscall_meta__unlink, !136, !"__syscall_meta__unlink", i1 false, i1 false}
!144 = !{ptr @__p_syscall_meta__unlink, !136, !"__p_syscall_meta__unlink", i1 false, i1 false}
!145 = !{ptr @__ksymtab_vfs_symlink, !146, !"__ksymtab_vfs_symlink", i1 false, i1 false}
!146 = !{!"../fs/namei.c", i32 4304, i32 1}
!147 = !{ptr @.str.24, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../fs/namei.c", i32 4342, i32 1}
!149 = !{ptr @event_enter__symlinkat, !148, !"event_enter__symlinkat", i1 false, i1 false}
!150 = !{ptr @__event_enter__symlinkat, !148, !"__event_enter__symlinkat", i1 false, i1 false}
!151 = !{ptr @.str.25, !148, !"<string literal>", i1 false, i1 false}
!152 = !{ptr @event_exit__symlinkat, !148, !"event_exit__symlinkat", i1 false, i1 false}
!153 = !{ptr @__event_exit__symlinkat, !148, !"__event_exit__symlinkat", i1 false, i1 false}
!154 = !{ptr @.str.26, !148, !"<string literal>", i1 false, i1 false}
!155 = !{ptr @__syscall_meta__symlinkat, !148, !"__syscall_meta__symlinkat", i1 false, i1 false}
!156 = !{ptr @__p_syscall_meta__symlinkat, !148, !"__p_syscall_meta__symlinkat", i1 false, i1 false}
!157 = !{ptr @.str.27, !158, !"<string literal>", i1 false, i1 false}
!158 = !{!"../fs/namei.c", i32 4348, i32 1}
!159 = !{ptr @event_enter__symlink, !158, !"event_enter__symlink", i1 false, i1 false}
!160 = !{ptr @__event_enter__symlink, !158, !"__event_enter__symlink", i1 false, i1 false}
!161 = !{ptr @.str.28, !158, !"<string literal>", i1 false, i1 false}
!162 = !{ptr @event_exit__symlink, !158, !"event_exit__symlink", i1 false, i1 false}
!163 = !{ptr @__event_exit__symlink, !158, !"__event_exit__symlink", i1 false, i1 false}
!164 = !{ptr @.str.29, !158, !"<string literal>", i1 false, i1 false}
!165 = !{ptr @__syscall_meta__symlink, !158, !"__syscall_meta__symlink", i1 false, i1 false}
!166 = !{ptr @__p_syscall_meta__symlink, !158, !"__p_syscall_meta__symlink", i1 false, i1 false}
!167 = !{ptr @__ksymtab_vfs_link, !168, !"__ksymtab_vfs_link", i1 false, i1 false}
!168 = !{!"../fs/namei.c", i32 4440, i32 1}
!169 = !{ptr @.str.30, !170, !"<string literal>", i1 false, i1 false}
!170 = !{!"../fs/namei.c", i32 4523, i32 1}
!171 = !{ptr @event_enter__linkat, !170, !"event_enter__linkat", i1 false, i1 false}
!172 = !{ptr @__event_enter__linkat, !170, !"__event_enter__linkat", i1 false, i1 false}
!173 = !{ptr @.str.31, !170, !"<string literal>", i1 false, i1 false}
!174 = !{ptr @event_exit__linkat, !170, !"event_exit__linkat", i1 false, i1 false}
!175 = !{ptr @__event_exit__linkat, !170, !"__event_exit__linkat", i1 false, i1 false}
!176 = !{ptr @.str.32, !170, !"<string literal>", i1 false, i1 false}
!177 = !{ptr @__syscall_meta__linkat, !170, !"__syscall_meta__linkat", i1 false, i1 false}
!178 = !{ptr @__p_syscall_meta__linkat, !170, !"__p_syscall_meta__linkat", i1 false, i1 false}
!179 = !{ptr @.str.33, !180, !"<string literal>", i1 false, i1 false}
!180 = !{!"../fs/namei.c", i32 4530, i32 1}
!181 = !{ptr @event_enter__link, !180, !"event_enter__link", i1 false, i1 false}
!182 = !{ptr @__event_enter__link, !180, !"__event_enter__link", i1 false, i1 false}
!183 = !{ptr @.str.34, !180, !"<string literal>", i1 false, i1 false}
!184 = !{ptr @event_exit__link, !180, !"event_exit__link", i1 false, i1 false}
!185 = !{ptr @__event_exit__link, !180, !"__event_exit__link", i1 false, i1 false}
!186 = !{ptr @.str.35, !180, !"<string literal>", i1 false, i1 false}
!187 = !{ptr @__syscall_meta__link, !180, !"__syscall_meta__link", i1 false, i1 false}
!188 = !{ptr @__p_syscall_meta__link, !180, !"__p_syscall_meta__link", i1 false, i1 false}
!189 = !{ptr @__ksymtab_vfs_rename, !190, !"__ksymtab_vfs_rename", i1 false, i1 false}
!190 = !{!"../fs/namei.c", i32 4714, i32 1}
!191 = !{ptr @.str.36, !192, !"<string literal>", i1 false, i1 false}
!192 = !{!"../fs/namei.c", i32 4858, i32 1}
!193 = !{ptr @event_enter__renameat2, !192, !"event_enter__renameat2", i1 false, i1 false}
!194 = !{ptr @__event_enter__renameat2, !192, !"__event_enter__renameat2", i1 false, i1 false}
!195 = !{ptr @.str.37, !192, !"<string literal>", i1 false, i1 false}
!196 = !{ptr @event_exit__renameat2, !192, !"event_exit__renameat2", i1 false, i1 false}
!197 = !{ptr @__event_exit__renameat2, !192, !"__event_exit__renameat2", i1 false, i1 false}
!198 = !{ptr @.str.38, !192, !"<string literal>", i1 false, i1 false}
!199 = !{ptr @__syscall_meta__renameat2, !192, !"__syscall_meta__renameat2", i1 false, i1 false}
!200 = !{ptr @__p_syscall_meta__renameat2, !192, !"__p_syscall_meta__renameat2", i1 false, i1 false}
!201 = !{ptr @.str.39, !202, !"<string literal>", i1 false, i1 false}
!202 = !{!"../fs/namei.c", i32 4865, i32 1}
!203 = !{ptr @event_enter__renameat, !202, !"event_enter__renameat", i1 false, i1 false}
!204 = !{ptr @__event_enter__renameat, !202, !"__event_enter__renameat", i1 false, i1 false}
!205 = !{ptr @.str.40, !202, !"<string literal>", i1 false, i1 false}
!206 = !{ptr @event_exit__renameat, !202, !"event_exit__renameat", i1 false, i1 false}
!207 = !{ptr @__event_exit__renameat, !202, !"__event_exit__renameat", i1 false, i1 false}
!208 = !{ptr @.str.41, !202, !"<string literal>", i1 false, i1 false}
!209 = !{ptr @__syscall_meta__renameat, !202, !"__syscall_meta__renameat", i1 false, i1 false}
!210 = !{ptr @__p_syscall_meta__renameat, !202, !"__p_syscall_meta__renameat", i1 false, i1 false}
!211 = !{ptr @.str.42, !212, !"<string literal>", i1 false, i1 false}
!212 = !{!"../fs/namei.c", i32 4872, i32 1}
!213 = !{ptr @event_enter__rename, !212, !"event_enter__rename", i1 false, i1 false}
!214 = !{ptr @__event_enter__rename, !212, !"__event_enter__rename", i1 false, i1 false}
!215 = !{ptr @.str.43, !212, !"<string literal>", i1 false, i1 false}
!216 = !{ptr @event_exit__rename, !212, !"event_exit__rename", i1 false, i1 false}
!217 = !{ptr @__event_exit__rename, !212, !"__event_exit__rename", i1 false, i1 false}
!218 = !{ptr @.str.44, !212, !"<string literal>", i1 false, i1 false}
!219 = !{ptr @__syscall_meta__rename, !212, !"__syscall_meta__rename", i1 false, i1 false}
!220 = !{ptr @__p_syscall_meta__rename, !212, !"__p_syscall_meta__rename", i1 false, i1 false}
!221 = !{ptr @__ksymtab_vfs_readlink, !222, !"__ksymtab_vfs_readlink", i1 false, i1 false}
!222 = !{!"../fs/namei.c", i32 4932, i32 1}
!223 = !{ptr @__ksymtab_vfs_get_link, !224, !"__ksymtab_vfs_get_link", i1 false, i1 false}
!224 = !{!"../fs/namei.c", i32 4957, i32 1}
!225 = !{ptr @__ksymtab_page_get_link, !226, !"__ksymtab_page_get_link", i1 false, i1 false}
!226 = !{!"../fs/namei.c", i32 4987, i32 1}
!227 = !{ptr @__ksymtab_page_put_link, !228, !"__ksymtab_page_put_link", i1 false, i1 false}
!228 = !{!"../fs/namei.c", i32 4993, i32 1}
!229 = !{ptr @__ksymtab_page_readlink, !230, !"__ksymtab_page_readlink", i1 false, i1 false}
!230 = !{!"../fs/namei.c", i32 5004, i32 1}
!231 = !{ptr @__ksymtab___page_symlink, !232, !"__ksymtab___page_symlink", i1 false, i1 false}
!232 = !{!"../fs/namei.c", i32 5039, i32 1}
!233 = !{ptr @__ksymtab_page_symlink, !234, !"__ksymtab_page_symlink", i1 false, i1 false}
!234 = !{!"../fs/namei.c", i32 5046, i32 1}
!235 = !{ptr @page_symlink_inode_operations, !236, !"page_symlink_inode_operations", i1 false, i1 false}
!236 = !{!"../fs/namei.c", i32 5048, i32 31}
!237 = !{ptr @__ksymtab_page_symlink_inode_operations, !238, !"__ksymtab_page_symlink_inode_operations", i1 false, i1 false}
!238 = !{!"../fs/namei.c", i32 5051, i32 1}
!239 = !{ptr @sysctl_protected_hardlinks, !240, !"sysctl_protected_hardlinks", i1 false, i1 false}
!240 = !{!"../fs/namei.c", i32 1024, i32 12}
!241 = distinct !{null, !242, !"__warned", i1 false, i1 false}
!242 = !{!"../fs/namei.c", i32 342, i32 6}
!243 = !{ptr @.str.45, !244, !"<string literal>", i1 false, i1 false}
!244 = !{!"../fs/namei.c", i32 1071, i32 2}
!245 = !{ptr @.str.46, !244, !"<string literal>", i1 false, i1 false}
!246 = !{ptr @.str.47, !247, !"<string literal>", i1 false, i1 false}
!247 = !{!"../fs/namei.c", i32 1031, i32 15}
!248 = !{ptr @.str.48, !249, !"<string literal>", i1 false, i1 false}
!249 = !{!"../fs/namei.c", i32 1040, i32 15}
!250 = !{ptr @.str.49, !251, !"<string literal>", i1 false, i1 false}
!251 = !{!"../fs/namei.c", i32 1049, i32 15}
!252 = !{ptr @.str.50, !253, !"<string literal>", i1 false, i1 false}
!253 = !{!"../fs/namei.c", i32 1058, i32 15}
!254 = !{ptr @namei_sysctls, !255, !"namei_sysctls", i1 false, i1 false}
!255 = !{!"../fs/namei.c", i32 1029, i32 25}
!256 = !{ptr @sysctl_protected_symlinks, !257, !"sysctl_protected_symlinks", i1 false, i1 false}
!257 = !{!"../fs/namei.c", i32 1023, i32 12}
!258 = !{ptr @sysctl_protected_fifos, !259, !"sysctl_protected_fifos", i1 false, i1 false}
!259 = !{!"../fs/namei.c", i32 1025, i32 12}
!260 = !{ptr @sysctl_protected_regular, !261, !"sysctl_protected_regular", i1 false, i1 false}
!261 = !{!"../fs/namei.c", i32 1026, i32 12}
!262 = distinct !{null, !263, !"__warned", i1 false, i1 false}
!263 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!264 = !{ptr @.str.51, !263, !"<string literal>", i1 false, i1 false}
!265 = !{ptr @.str.52, !263, !"<string literal>", i1 false, i1 false}
!266 = distinct !{null, !267, !"__warned", i1 false, i1 false}
!267 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!268 = !{ptr @.str.53, !267, !"<string literal>", i1 false, i1 false}
!269 = distinct !{null, !270, !"__warned", i1 false, i1 false}
!270 = !{!"../fs/namei.c", i32 1104, i32 13}
!271 = !{ptr @.str.54, !272, !"<string literal>", i1 false, i1 false}
!272 = !{!"../fs/namei.c", i32 1119, i32 41}
!273 = !{ptr @__lookup_slow.__key, !274, !"__key", i1 false, i1 false}
!274 = !{!"../fs/namei.c", i32 1686, i32 2}
!275 = !{ptr @.str.55, !274, !"<string literal>", i1 false, i1 false}
!276 = distinct !{null, !277, !"__warned", i1 false, i1 false}
!277 = !{!"../include/linux/mnt_idmapping.h", i32 212, i32 49}
!278 = distinct !{null, !279, !"__warned", i1 false, i1 false}
!279 = !{!"../include/linux/mnt_idmapping.h", i32 231, i32 49}
!280 = distinct !{null, !281, !"__warned", i1 false, i1 false}
!281 = !{!"../fs/namei.c", i32 3595, i32 41}
!282 = !{ptr @lookup_open.__key, !283, !"__key", i1 false, i1 false}
!283 = !{!"../fs/namei.c", i32 3245, i32 2}
!284 = distinct !{null, !285, !"__warned", i1 false, i1 false}
!285 = !{!"../fs/namei.c", i32 1239, i32 13}
!286 = !{ptr @.str.56, !287, !"<string literal>", i1 false, i1 false}
!287 = !{!"../fs/namei.c", i32 1247, i32 6}
!288 = !{ptr @.str.57, !289, !"<string literal>", i1 false, i1 false}
!289 = !{!"../fs/namei.c", i32 1248, i32 6}
!290 = !{ptr @.str.58, !70, !"<string literal>", i1 false, i1 false}
!291 = !{ptr @.str.59, !70, !"<string literal>", i1 false, i1 false}
!292 = !{ptr @.str.60, !70, !"<string literal>", i1 false, i1 false}
!293 = !{ptr @.str.61, !70, !"<string literal>", i1 false, i1 false}
!294 = !{ptr @types__mknodat, !70, !"types__mknodat", i1 false, i1 false}
!295 = !{ptr @.str.62, !70, !"<string literal>", i1 false, i1 false}
!296 = !{ptr @.str.63, !70, !"<string literal>", i1 false, i1 false}
!297 = !{ptr @.str.64, !70, !"<string literal>", i1 false, i1 false}
!298 = !{ptr @.str.65, !70, !"<string literal>", i1 false, i1 false}
!299 = !{ptr @args__mknodat, !70, !"args__mknodat", i1 false, i1 false}
!300 = !{ptr @.str.66, !80, !"<string literal>", i1 false, i1 false}
!301 = !{ptr @types__mknod, !80, !"types__mknod", i1 false, i1 false}
!302 = !{ptr @args__mknod, !80, !"args__mknod", i1 false, i1 false}
!303 = !{ptr @types__mkdirat, !92, !"types__mkdirat", i1 false, i1 false}
!304 = !{ptr @.str.67, !92, !"<string literal>", i1 false, i1 false}
!305 = !{ptr @args__mkdirat, !92, !"args__mkdirat", i1 false, i1 false}
!306 = !{ptr @types__mkdir, !102, !"types__mkdir", i1 false, i1 false}
!307 = !{ptr @args__mkdir, !102, !"args__mkdir", i1 false, i1 false}
!308 = !{ptr @types__rmdir, !114, !"types__rmdir", i1 false, i1 false}
!309 = !{ptr @args__rmdir, !114, !"args__rmdir", i1 false, i1 false}
!310 = distinct !{null, !311, !"__already_done", i1 false, i1 false}
!311 = !{!"../include/linux/fsnotify.h", i32 271, i32 6}
!312 = !{ptr @.str.68, !311, !"<string literal>", i1 false, i1 false}
!313 = !{ptr @types__unlinkat, !126, !"types__unlinkat", i1 false, i1 false}
!314 = !{ptr @.str.69, !126, !"<string literal>", i1 false, i1 false}
!315 = !{ptr @args__unlinkat, !126, !"args__unlinkat", i1 false, i1 false}
!316 = !{ptr @types__unlink, !136, !"types__unlink", i1 false, i1 false}
!317 = !{ptr @args__unlink, !136, !"args__unlink", i1 false, i1 false}
!318 = !{ptr @types__symlinkat, !148, !"types__symlinkat", i1 false, i1 false}
!319 = !{ptr @.str.70, !148, !"<string literal>", i1 false, i1 false}
!320 = !{ptr @.str.71, !148, !"<string literal>", i1 false, i1 false}
!321 = !{ptr @.str.72, !148, !"<string literal>", i1 false, i1 false}
!322 = !{ptr @args__symlinkat, !148, !"args__symlinkat", i1 false, i1 false}
!323 = !{ptr @types__symlink, !158, !"types__symlink", i1 false, i1 false}
!324 = !{ptr @args__symlink, !158, !"args__symlink", i1 false, i1 false}
!325 = !{ptr @types__linkat, !170, !"types__linkat", i1 false, i1 false}
!326 = !{ptr @.str.73, !170, !"<string literal>", i1 false, i1 false}
!327 = !{ptr @.str.74, !170, !"<string literal>", i1 false, i1 false}
!328 = !{ptr @args__linkat, !170, !"args__linkat", i1 false, i1 false}
!329 = !{ptr @types__link, !180, !"types__link", i1 false, i1 false}
!330 = !{ptr @args__link, !180, !"args__link", i1 false, i1 false}
!331 = !{ptr @types__renameat2, !192, !"types__renameat2", i1 false, i1 false}
!332 = !{ptr @args__renameat2, !192, !"args__renameat2", i1 false, i1 false}
!333 = !{ptr @types__renameat, !202, !"types__renameat", i1 false, i1 false}
!334 = !{ptr @args__renameat, !202, !"args__renameat", i1 false, i1 false}
!335 = !{ptr @types__rename, !212, !"types__rename", i1 false, i1 false}
!336 = !{ptr @args__rename, !212, !"args__rename", i1 false, i1 false}
!337 = distinct !{null, !338, !"__already_done", i1 false, i1 false}
!338 = !{!"../include/linux/thread_info.h", i32 230, i32 6}
!339 = !{ptr @.str.75, !338, !"<string literal>", i1 false, i1 false}
!340 = !{ptr @.str.76, !341, !"<string literal>", i1 false, i1 false}
!341 = !{!"../include/linux/thread_info.h", i32 214, i32 2}
!342 = !{ptr @.str.77, !343, !"<string literal>", i1 false, i1 false}
!343 = !{!"../include/linux/uaccess.h", i32 174, i32 2}
!344 = !{ptr @.str.78, !345, !"<string literal>", i1 false, i1 false}
!345 = !{!"../include/linux/page-flags.h", i32 260, i32 2}
!346 = distinct !{null, !347, !"<string literal>", i1 false, i1 false}
!347 = !{!"../include/linux/page-flags.h", i32 261, i32 2}
!348 = !{ptr @.str.80, !349, !"<string literal>", i1 false, i1 false}
!349 = !{!"../include/linux/mm.h", i32 717, i32 2}
!350 = !{!"sp"}
!351 = !{i32 1, !"wchar_size", i32 2}
!352 = !{i32 1, !"min_enum_size", i32 4}
!353 = !{i32 8, !"branch-target-enforcement", i32 0}
!354 = !{i32 8, !"sign-return-address", i32 0}
!355 = !{i32 8, !"sign-return-address-all", i32 0}
!356 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!357 = !{i32 7, !"uwtable", i32 1}
!358 = !{i32 7, !"frame-pointer", i32 2}
!359 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!360 = !{!"branch_weights", i32 1, i32 2000}
!361 = !{i64 2156291978, i64 2156292453, i64 2156292015, i64 2156292071, i64 2156292105, i64 2156292129, i64 2156292170, i64 2156292191, i64 2156292219, i64 2156292253}
!362 = !{!"branch_weights", i32 2000, i32 1}
!363 = !{!"branch_weights", i32 2000, i32 2002}
!364 = !{i64 2156358813}
!365 = !{i64 8907984, i64 8908006, i64 8908014, i64 8908052, i64 8908067, i64 8908092, i64 8908115, i64 8908134, i64 8908202, i64 8908230, i64 8908241, i64 8908259, i64 8908295, i64 8908310, i64 8908329}
!366 = !{i32 0, i32 33}
!367 = !{!"auto-init"}
!368 = !{i64 2156444251}
!369 = !{i64 2156465556, i64 2156466032, i64 2156465593, i64 2156465649, i64 2156465683, i64 2156465707, i64 2156465748, i64 2156465769, i64 2156465797, i64 2156465831}
!370 = !{!"branch_weights", i32 1, i32 4001}
!371 = !{i64 2152939517}
!372 = !{!"branch_weights", i32 2000, i32 2, i32 2000}
!373 = !{i64 2148459004}
!374 = !{i64 840917, i64 840941, i64 840962, i64 840979, i64 840996}
!375 = !{i64 2148459230}
!376 = !{i64 2148359646, i64 2148359672, i64 2148359701, i64 2148359735, i64 2148359766, i64 2148359789}
!377 = !{i64 2156454179, i64 2156454655, i64 2156454216, i64 2156454272, i64 2156454306, i64 2156454330, i64 2156454371, i64 2156454392, i64 2156454420, i64 2156454454}
!378 = !{i64 2156455775, i64 2156456251, i64 2156455812, i64 2156455868, i64 2156455902, i64 2156455926, i64 2156455967, i64 2156455988, i64 2156456016, i64 2156456050}
!379 = !{i64 2153058681}
!380 = !{i64 2149041674}
!381 = !{i64 2152701217, i64 2152701242}
!382 = !{i64 2150272025, i64 2150272516, i64 2150272062, i64 2150272118, i64 2150272152, i64 2150272176, i64 2150272217, i64 2150272238, i64 2150272266, i64 2150272300}
!383 = !{i64 2151021917}
!384 = !{i64 2153332287, i64 2153332770, i64 2153332324, i64 2153332380, i64 2153332414, i64 2153332438, i64 2153332479, i64 2153332500, i64 2153332528, i64 2153332562}
!385 = !{i64 2148445633}
!386 = !{i64 2148360366, i64 2148360398, i64 2148360427, i64 2148360461, i64 2148360492, i64 2148360515}
!387 = !{i64 2148445862}
!388 = !{i64 2148826512, i64 2148826517, i64 2148826530, i64 2148826574, i64 2148826608, i64 2148826629}
!389 = !{i64 2156695696, i64 2156696172, i64 2156695733, i64 2156695789, i64 2156695823, i64 2156695847, i64 2156695888, i64 2156695909, i64 2156695937, i64 2156695971}
!390 = !{i64 2148446712}
!391 = !{i64 2148361176, i64 2148361208, i64 2148361237, i64 2148361271, i64 2148361302, i64 2148361325}
!392 = !{i64 2150002817}
!393 = !{i64 2156346114}
!394 = !{i64 2156352362}
!395 = !{i64 2150052360}
!396 = !{i64 2156405881}
!397 = !{i64 2156405723}
!398 = !{i64 2156407772}
!399 = !{i64 2156407614}
!400 = !{i64 2156407942}
!401 = !{i64 2156411529}
!402 = !{i64 2156411371}
!403 = !{i64 2156411699}
!404 = !{i64 2156414887}
!405 = !{i64 2156414729}
!406 = !{i64 2156415057}
!407 = !{i64 2156421032}
!408 = !{i64 2156420874}
!409 = !{i64 2149894888}
!410 = !{!411}
!411 = distinct !{!411, !412, !"fdget_raw: %agg.result"}
!412 = distinct !{!412, !"fdget_raw"}
!413 = !{i64 2156425858}
!414 = !{i64 2156425700}
!415 = !{i64 2156426028}
!416 = !{!"branch_weights", i32 1073205, i32 2146410443}
!417 = !{!"branch_weights", i32 4000000, i32 2001, i32 2000}
!418 = !{i64 2150052626}
!419 = !{i64 749662, i64 749723}
!420 = !{i64 752394}
!421 = !{i64 752679}
!422 = !{i64 2156319256}
!423 = !{i64 2156319098}
!424 = !{i64 2156319426}
!425 = !{i64 2156321340}
!426 = !{i64 2156321182}
!427 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!428 = !{i64 2156365348}
!429 = !{i64 2156365190}
!430 = !{!"branch_weights", i32 -102759400, i32 4193255}
!431 = !{i64 2156365518}
!432 = !{i64 2156311602, i64 2156312077, i64 2156311639, i64 2156311695, i64 2156311729, i64 2156311753, i64 2156311794, i64 2156311815, i64 2156311843, i64 2156311877}
!433 = !{i64 2156304180, i64 2156304655, i64 2156304217, i64 2156304273, i64 2156304307, i64 2156304331, i64 2156304372, i64 2156304393, i64 2156304421, i64 2156304455}
!434 = !{i64 2156309998, i64 2156310473, i64 2156310035, i64 2156310091, i64 2156310125, i64 2156310149, i64 2156310190, i64 2156310211, i64 2156310239, i64 2156310273}
!435 = !{i32 -131, i32 1}
!436 = !{i64 2156383125}
!437 = !{i64 2156382967}
!438 = !{i64 2156383295}
!439 = !{i64 2156385907}
!440 = !{i64 2156339473}
!441 = !{i64 2156339315}
!442 = !{i64 2156339643}
!443 = !{i64 2149909641}
!444 = !{i64 2149909483}
!445 = !{i64 2149909811}
