; ModuleID = '/llk/IR_all_yes/fs/namespace.c_pt.bc'
source_filename = "../fs/namespace.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+fs_kobj\22, \22a\22\09"
module asm "\09.weak\09__crc_fs_kobj\09\09\09\09"
module asm "\09.long\09__crc_fs_kobj\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_fs_kobj:\09\09\09\09\09"
module asm "\09.asciz \09\22fs_kobj\22\09\09\09\09\09"
module asm "__kstrtabns_fs_kobj:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__mnt_is_readonly\22, \22a\22\09"
module asm "\09.weak\09__crc___mnt_is_readonly\09\09\09\09"
module asm "\09.long\09__crc___mnt_is_readonly\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___mnt_is_readonly:\09\09\09\09\09"
module asm "\09.asciz \09\22__mnt_is_readonly\22\09\09\09\09\09"
module asm "__kstrtabns___mnt_is_readonly:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+mnt_want_write\22, \22a\22\09"
module asm "\09.weak\09__crc_mnt_want_write\09\09\09\09"
module asm "\09.long\09__crc_mnt_want_write\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mnt_want_write:\09\09\09\09\09"
module asm "\09.asciz \09\22mnt_want_write\22\09\09\09\09\09"
module asm "__kstrtabns_mnt_want_write:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+mnt_want_write_file\22, \22a\22\09"
module asm "\09.weak\09__crc_mnt_want_write_file\09\09\09\09"
module asm "\09.long\09__crc_mnt_want_write_file\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mnt_want_write_file:\09\09\09\09\09"
module asm "\09.asciz \09\22mnt_want_write_file\22\09\09\09\09\09"
module asm "__kstrtabns_mnt_want_write_file:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+mnt_drop_write\22, \22a\22\09"
module asm "\09.weak\09__crc_mnt_drop_write\09\09\09\09"
module asm "\09.long\09__crc_mnt_drop_write\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mnt_drop_write:\09\09\09\09\09"
module asm "\09.asciz \09\22mnt_drop_write\22\09\09\09\09\09"
module asm "__kstrtabns_mnt_drop_write:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mnt_drop_write_file\22, \22a\22\09"
module asm "\09.weak\09__crc_mnt_drop_write_file\09\09\09\09"
module asm "\09.long\09__crc_mnt_drop_write_file\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mnt_drop_write_file:\09\09\09\09\09"
module asm "\09.asciz \09\22mnt_drop_write_file\22\09\09\09\09\09"
module asm "__kstrtabns_mnt_drop_write_file:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vfs_create_mount\22, \22a\22\09"
module asm "\09.weak\09__crc_vfs_create_mount\09\09\09\09"
module asm "\09.long\09__crc_vfs_create_mount\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vfs_create_mount:\09\09\09\09\09"
module asm "\09.asciz \09\22vfs_create_mount\22\09\09\09\09\09"
module asm "__kstrtabns_vfs_create_mount:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+fc_mount\22, \22a\22\09"
module asm "\09.weak\09__crc_fc_mount\09\09\09\09"
module asm "\09.long\09__crc_fc_mount\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_fc_mount:\09\09\09\09\09"
module asm "\09.asciz \09\22fc_mount\22\09\09\09\09\09"
module asm "__kstrtabns_fc_mount:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+vfs_kern_mount\22, \22a\22\09"
module asm "\09.weak\09__crc_vfs_kern_mount\09\09\09\09"
module asm "\09.long\09__crc_vfs_kern_mount\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vfs_kern_mount:\09\09\09\09\09"
module asm "\09.asciz \09\22vfs_kern_mount\22\09\09\09\09\09"
module asm "__kstrtabns_vfs_kern_mount:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+vfs_submount\22, \22a\22\09"
module asm "\09.weak\09__crc_vfs_submount\09\09\09\09"
module asm "\09.long\09__crc_vfs_submount\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vfs_submount:\09\09\09\09\09"
module asm "\09.asciz \09\22vfs_submount\22\09\09\09\09\09"
module asm "__kstrtabns_vfs_submount:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mntput\22, \22a\22\09"
module asm "\09.weak\09__crc_mntput\09\09\09\09"
module asm "\09.long\09__crc_mntput\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mntput:\09\09\09\09\09"
module asm "\09.asciz \09\22mntput\22\09\09\09\09\09"
module asm "__kstrtabns_mntput:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mntget\22, \22a\22\09"
module asm "\09.weak\09__crc_mntget\09\09\09\09"
module asm "\09.long\09__crc_mntget\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mntget:\09\09\09\09\09"
module asm "\09.asciz \09\22mntget\22\09\09\09\09\09"
module asm "__kstrtabns_mntget:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+path_is_mountpoint\22, \22a\22\09"
module asm "\09.weak\09__crc_path_is_mountpoint\09\09\09\09"
module asm "\09.long\09__crc_path_is_mountpoint\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_path_is_mountpoint:\09\09\09\09\09"
module asm "\09.asciz \09\22path_is_mountpoint\22\09\09\09\09\09"
module asm "__kstrtabns_path_is_mountpoint:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+may_umount_tree\22, \22a\22\09"
module asm "\09.weak\09__crc_may_umount_tree\09\09\09\09"
module asm "\09.long\09__crc_may_umount_tree\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_may_umount_tree:\09\09\09\09\09"
module asm "\09.asciz \09\22may_umount_tree\22\09\09\09\09\09"
module asm "__kstrtabns_may_umount_tree:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+may_umount\22, \22a\22\09"
module asm "\09.weak\09__crc_may_umount\09\09\09\09"
module asm "\09.long\09__crc_may_umount\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_may_umount:\09\09\09\09\09"
module asm "\09.asciz \09\22may_umount\22\09\09\09\09\09"
module asm "__kstrtabns_may_umount:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+clone_private_mount\22, \22a\22\09"
module asm "\09.weak\09__crc_clone_private_mount\09\09\09\09"
module asm "\09.long\09__crc_clone_private_mount\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_clone_private_mount:\09\09\09\09\09"
module asm "\09.asciz \09\22clone_private_mount\22\09\09\09\09\09"
module asm "__kstrtabns_clone_private_mount:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mnt_set_expiry\22, \22a\22\09"
module asm "\09.weak\09__crc_mnt_set_expiry\09\09\09\09"
module asm "\09.long\09__crc_mnt_set_expiry\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mnt_set_expiry:\09\09\09\09\09"
module asm "\09.asciz \09\22mnt_set_expiry\22\09\09\09\09\09"
module asm "__kstrtabns_mnt_set_expiry:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+mark_mounts_for_expiry\22, \22a\22\09"
module asm "\09.weak\09__crc_mark_mounts_for_expiry\09\09\09\09"
module asm "\09.long\09__crc_mark_mounts_for_expiry\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mark_mounts_for_expiry:\09\09\09\09\09"
module asm "\09.asciz \09\22mark_mounts_for_expiry\22\09\09\09\09\09"
module asm "__kstrtabns_mark_mounts_for_expiry:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mount_subtree\22, \22a\22\09"
module asm "\09.weak\09__crc_mount_subtree\09\09\09\09"
module asm "\09.long\09__crc_mount_subtree\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mount_subtree:\09\09\09\09\09"
module asm "\09.asciz \09\22mount_subtree\22\09\09\09\09\09"
module asm "__kstrtabns_mount_subtree:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+path_is_under\22, \22a\22\09"
module asm "\09.weak\09__crc_path_is_under\09\09\09\09"
module asm "\09.long\09__crc_path_is_under\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_path_is_under:\09\09\09\09\09"
module asm "\09.asciz \09\22path_is_under\22\09\09\09\09\09"
module asm "__kstrtabns_path_is_under:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+kern_mount\22, \22a\22\09"
module asm "\09.weak\09__crc_kern_mount\09\09\09\09"
module asm "\09.long\09__crc_kern_mount\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_kern_mount:\09\09\09\09\09"
module asm "\09.asciz \09\22kern_mount\22\09\09\09\09\09"
module asm "__kstrtabns_kern_mount:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+kern_unmount\22, \22a\22\09"
module asm "\09.weak\09__crc_kern_unmount\09\09\09\09"
module asm "\09.long\09__crc_kern_unmount\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_kern_unmount:\09\09\09\09\09"
module asm "\09.asciz \09\22kern_unmount\22\09\09\09\09\09"
module asm "__kstrtabns_kern_unmount:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+kern_unmount_array\22, \22a\22\09"
module asm "\09.weak\09__crc_kern_unmount_array\09\09\09\09"
module asm "\09.long\09__crc_kern_unmount_array\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_kern_unmount_array:\09\09\09\09\09"
module asm "\09.asciz \09\22kern_unmount_array\22\09\09\09\09\09"
module asm "__kstrtabns_kern_unmount_array:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.obs_kernel_param = type { ptr, ptr, i32 }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.ida = type { %struct.xarray }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.atomic_t = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i32, i8, %struct.list_head, ptr, %struct.rw_semaphore, ptr, %struct.work_struct, %struct.ctl_table_set, ptr, ptr, [16 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.21 }
%union.anon.21 = type { [5 x %struct.uid_gid_extent] }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.89, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.89 = type { %struct.anon.90 }
%struct.anon.90 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.seq_operations = type { ptr, ptr, ptr, ptr }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.syscall_metadata = type { ptr, i32, i32, ptr, ptr, %struct.list_head, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.77, %struct.trace_event, ptr, ptr, %union.anon.79, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.77 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.79 = type { ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.proc_ns_operations = type { ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr }
%struct.llist_head = type { ptr }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.dentry_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [76 x i8] }
%struct.atomic64_t = type { i64 }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.file_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.file_system_type = type { ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.83, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.23 }
%struct.llist_node = type { ptr }
%union.anon.23 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.25 }
%union.anon.25 = type { %struct.anon.26 }
%struct.anon.26 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.tlbflush_unmap_batch = type {}
%union.anon.83 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.ctl_table = type { ptr, ptr, i32, i16, ptr, ptr, ptr, ptr, ptr }
%struct.mount = type { %struct.hlist_node, ptr, ptr, %struct.vfsmount, %union.anon.111, ptr, %struct.list_head, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, ptr, ptr, ptr, %union.anon.112, %struct.list_head, ptr, i32, i32, i32, i32, %struct.hlist_head, %struct.hlist_head }
%struct.vfsmount = type { ptr, ptr, i32, ptr }
%union.anon.111 = type { %struct.callback_head }
%union.anon.112 = type { %struct.hlist_node }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, i16, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [24 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [24 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.list_lru = type { ptr, %struct.list_head, i32, i8 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.mnt_pcp = type { i32, i32 }
%struct.file = type { %union.anon.15, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, ptr, i32, i32 }
%union.anon.15 = type { %struct.callback_head }
%struct.path = type { ptr, ptr }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.104, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.105, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.106, ptr, %struct.address_space, %struct.list_head, %union.anon.107, i32, i32, ptr, ptr, ptr, ptr }
%union.anon.104 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%union.anon.105 = type { %struct.callback_head }
%union.anon.106 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%union.anon.107 = type { ptr }
%struct.nsproxy = type { %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mnt_namespace = type { %struct.ns_common, ptr, %struct.list_head, %struct.spinlock, ptr, ptr, i64, %struct.wait_queue_head, i64, i32, i32 }
%struct.mountpoint = type { %struct.hlist_node, ptr, %struct.hlist_head, i32 }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, ptr, %struct.qstr, ptr, [36 x i8], %struct.lockref, ptr, ptr, i32, ptr, %union.anon.94, %struct.list_head, %struct.list_head, %union.anon.95 }
%struct.hlist_bl_node = type { ptr, ptr }
%struct.qstr = type { %union.anon.16, ptr }
%union.anon.16 = type { i64 }
%struct.lockref = type { %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { %struct.spinlock, i32 }
%union.anon.94 = type { %struct.list_head }
%union.anon.95 = type { %struct.hlist_node }
%struct.fs_context = type { ptr, %struct.mutex, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.p_log, ptr, ptr, ptr, i32, i32, i32, i32, i24 }
%struct.p_log = type { ptr, ptr }
%struct.seq_file = type { ptr, i32, i32, i32, i32, i64, i64, %struct.mutex, ptr, i32, ptr, ptr }
%struct.proc_mounts = type { ptr, %struct.path, ptr, %struct.mount }
%struct.fs_struct = type { i32, %struct.spinlock, %struct.seqcount_spinlock, i32, i32, %struct.path, %struct.path }
%struct.super_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.cred = type { %struct.atomic_t, %struct.atomic_t, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %union.anon.38 }
%struct.kernel_cap_struct = type { [2 x i32] }
%union.anon.38 = type { %struct.callback_head }
%struct.mount_attr = type { i64, i64, i64, i64 }
%struct.nsset = type { i32, ptr, ptr, ptr }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32 }

@__setup_str_set_mhash_entries = internal constant [15 x i8] c"mhash_entries=\00", section ".init.rodata", align 1
@__setup_set_mhash_entries = internal global %struct.obs_kernel_param { ptr @__setup_str_set_mhash_entries, ptr @set_mhash_entries, i32 0 }, section ".init.setup", align 4
@__setup_str_set_mphash_entries = internal constant [16 x i8] c"mphash_entries=\00", section ".init.rodata", align 1
@__setup_set_mphash_entries = internal global %struct.obs_kernel_param { ptr @__setup_str_set_mphash_entries, ptr @set_mphash_entries, i32 0 }, section ".init.setup", align 4
@fs_kobj = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@__kstrtab_fs_kobj = external dso_local constant [0 x i8], align 1
@__kstrtabns_fs_kobj = external dso_local constant [0 x i8], align 1
@__ksymtab_fs_kobj = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @fs_kobj to i32), ptr @__kstrtab_fs_kobj, ptr @__kstrtabns_fs_kobj }, section "___ksymtab_gpl+fs_kobj", align 4
@.str = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"mount_lock.seqcount\00", [44 x i8] zeroinitializer }, align 32
@mount_lock = dso_local global %struct.seqlock_t { %struct.seqcount_spinlock { %struct.seqcount { i32 0, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str, i8 0, i8 0, i8 0, i32 0, i32 0 } }, ptr getelementptr (i8, ptr @mount_lock, i64 36) }, %struct.spinlock { %union.anon.0 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.1, i8 0, i8 3, i8 0, i32 0, i32 0 } } } } }, section ".data..cacheline_aligned", align 128
@.str.1 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"mount_lock\00", [21 x i8] zeroinitializer }, align 32
@mnt_group_ida = internal global { %struct.ida, [44 x i8] } { %struct.ida { %struct.xarray { %struct.spinlock { %union.anon.0 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.41, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, i32 67108869, ptr null } }, [44 x i8] zeroinitializer }, align 32
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@__kstrtab___mnt_is_readonly = external dso_local constant [0 x i8], align 1
@__kstrtabns___mnt_is_readonly = external dso_local constant [0 x i8], align 1
@__ksymtab___mnt_is_readonly = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__mnt_is_readonly to i32), ptr @__kstrtab___mnt_is_readonly, ptr @__kstrtabns___mnt_is_readonly }, section "___ksymtab_gpl+__mnt_is_readonly", align 4
@__kstrtab_mnt_want_write = external dso_local constant [0 x i8], align 1
@__kstrtabns_mnt_want_write = external dso_local constant [0 x i8], align 1
@__ksymtab_mnt_want_write = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mnt_want_write to i32), ptr @__kstrtab_mnt_want_write, ptr @__kstrtabns_mnt_want_write }, section "___ksymtab_gpl+mnt_want_write", align 4
@__kstrtab_mnt_want_write_file = external dso_local constant [0 x i8], align 1
@__kstrtabns_mnt_want_write_file = external dso_local constant [0 x i8], align 1
@__ksymtab_mnt_want_write_file = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mnt_want_write_file to i32), ptr @__kstrtab_mnt_want_write_file, ptr @__kstrtabns_mnt_want_write_file }, section "___ksymtab_gpl+mnt_want_write_file", align 4
@__kstrtab_mnt_drop_write = external dso_local constant [0 x i8], align 1
@__kstrtabns_mnt_drop_write = external dso_local constant [0 x i8], align 1
@__ksymtab_mnt_drop_write = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mnt_drop_write to i32), ptr @__kstrtab_mnt_drop_write, ptr @__kstrtabns_mnt_drop_write }, section "___ksymtab_gpl+mnt_drop_write", align 4
@__kstrtab_mnt_drop_write_file = external dso_local constant [0 x i8], align 1
@__kstrtabns_mnt_drop_write_file = external dso_local constant [0 x i8], align 1
@__ksymtab_mnt_drop_write_file = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mnt_drop_write_file to i32), ptr @__kstrtab_mnt_drop_write_file, ptr @__kstrtabns_mnt_drop_write_file }, section "___ksymtab+mnt_drop_write_file", align 4
@__lookup_mnt.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.2 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"fs/namespace.c\00", [17 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RCU-list traversed in non-reader section!\00", [54 x i8] zeroinitializer }, align 32
@namespace_sem = internal global { %struct.rw_semaphore, [32 x i8] } { %struct.rw_semaphore { %struct.atomic_t zeroinitializer, %struct.atomic_t zeroinitializer, %struct.optimistic_spin_queue zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.48, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.list_head { ptr getelementptr (i8, ptr @namespace_sem, i64 56), ptr getelementptr (i8, ptr @namespace_sem, i64 56) }, ptr @namespace_sem, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.49, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [32 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"none\00", [27 x i8] zeroinitializer }, align 32
@__kstrtab_vfs_create_mount = external dso_local constant [0 x i8], align 1
@__kstrtabns_vfs_create_mount = external dso_local constant [0 x i8], align 1
@__ksymtab_vfs_create_mount = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vfs_create_mount to i32), ptr @__kstrtab_vfs_create_mount, ptr @__kstrtabns_vfs_create_mount }, section "___ksymtab+vfs_create_mount", align 4
@__kstrtab_fc_mount = external dso_local constant [0 x i8], align 1
@__kstrtabns_fc_mount = external dso_local constant [0 x i8], align 1
@__ksymtab_fc_mount = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @fc_mount to i32), ptr @__kstrtab_fc_mount, ptr @__kstrtabns_fc_mount }, section "___ksymtab+fc_mount", align 4
@.str.5 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"source\00", [25 x i8] zeroinitializer }, align 32
@__kstrtab_vfs_kern_mount = external dso_local constant [0 x i8], align 1
@__kstrtabns_vfs_kern_mount = external dso_local constant [0 x i8], align 1
@__ksymtab_vfs_kern_mount = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vfs_kern_mount to i32), ptr @__kstrtab_vfs_kern_mount, ptr @__kstrtabns_vfs_kern_mount }, section "___ksymtab_gpl+vfs_kern_mount", align 4
@init_user_ns = external dso_local global %struct.user_namespace, align 4
@__kstrtab_vfs_submount = external dso_local constant [0 x i8], align 1
@__kstrtabns_vfs_submount = external dso_local constant [0 x i8], align 1
@__ksymtab_vfs_submount = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vfs_submount to i32), ptr @__kstrtab_vfs_submount, ptr @__kstrtabns_vfs_submount }, section "___ksymtab_gpl+vfs_submount", align 4
@__kstrtab_mntput = external dso_local constant [0 x i8], align 1
@__kstrtabns_mntput = external dso_local constant [0 x i8], align 1
@__ksymtab_mntput = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mntput to i32), ptr @__kstrtab_mntput, ptr @__kstrtabns_mntput }, section "___ksymtab+mntput", align 4
@__kstrtab_mntget = external dso_local constant [0 x i8], align 1
@__kstrtabns_mntget = external dso_local constant [0 x i8], align 1
@__ksymtab_mntget = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mntget to i32), ptr @__kstrtab_mntget, ptr @__kstrtabns_mntget }, section "___ksymtab+mntget", align 4
@__kstrtab_path_is_mountpoint = external dso_local constant [0 x i8], align 1
@__kstrtabns_path_is_mountpoint = external dso_local constant [0 x i8], align 1
@__ksymtab_path_is_mountpoint = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @path_is_mountpoint to i32), ptr @__kstrtab_path_is_mountpoint, ptr @__kstrtabns_path_is_mountpoint }, section "___ksymtab+path_is_mountpoint", align 4
@mounts_op = dso_local constant { %struct.seq_operations, [16 x i8] } { %struct.seq_operations { ptr @m_start, ptr @m_stop, ptr @m_next, ptr @m_show }, [16 x i8] zeroinitializer }, align 32
@__kstrtab_may_umount_tree = external dso_local constant [0 x i8], align 1
@__kstrtabns_may_umount_tree = external dso_local constant [0 x i8], align 1
@__ksymtab_may_umount_tree = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @may_umount_tree to i32), ptr @__kstrtab_may_umount_tree, ptr @__kstrtabns_may_umount_tree }, section "___ksymtab+may_umount_tree", align 4
@__kstrtab_may_umount = external dso_local constant [0 x i8], align 1
@__kstrtabns_may_umount = external dso_local constant [0 x i8], align 1
@__ksymtab_may_umount = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @may_umount to i32), ptr @__kstrtab_may_umount, ptr @__kstrtabns_may_umount }, section "___ksymtab+may_umount", align 4
@event = internal global { i64, [24 x i8] } zeroinitializer, align 32
@unmounted = internal global { %struct.hlist_head, [28 x i8] } zeroinitializer, align 32
@event_class_syscall_enter = external dso_local global %struct.trace_event_class, align 4
@.str.6 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"sys_enter_umount\00", [47 x i8] zeroinitializer }, align 32
@enter_syscall_print_funcs = external dso_local global %struct.trace_event_functions, align 4
@__syscall_meta__umount = internal global %struct.syscall_metadata { ptr @.str.8, i32 -1, i32 2, ptr @types__umount, ptr @args__umount, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__umount, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__umount, i64 20) }, ptr @event_enter__umount, ptr @event_exit__umount }, align 4
@event_enter__umount = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.77 { ptr @.str.6 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.79 zeroinitializer, ptr @__syscall_meta__umount, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__umount = internal global ptr @event_enter__umount, section "_ftrace_events", align 4
@event_class_syscall_exit = external dso_local global %struct.trace_event_class, align 4
@.str.7 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sys_exit_umount\00", [16 x i8] zeroinitializer }, align 32
@exit_syscall_print_funcs = external dso_local global %struct.trace_event_functions, align 4
@event_exit__umount = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.77 { ptr @.str.7 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.79 zeroinitializer, ptr @__syscall_meta__umount, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__umount = internal global ptr @event_exit__umount, section "_ftrace_events", align 4
@.str.8 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"sys_umount\00", [21 x i8] zeroinitializer }, align 32
@types__umount = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.53, ptr @.str.54], [24 x i8] zeroinitializer }, align 32
@args__umount = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.55, ptr @.str.56], [24 x i8] zeroinitializer }, align 32
@__p_syscall_meta__umount = internal global ptr @__syscall_meta__umount, section "__syscalls_metadata", align 4
@.str.9 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"sys_enter_oldumount\00", [44 x i8] zeroinitializer }, align 32
@__syscall_meta__oldumount = internal global %struct.syscall_metadata { ptr @.str.11, i32 -1, i32 1, ptr @types__oldumount, ptr @args__oldumount, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__oldumount, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__oldumount, i64 20) }, ptr @event_enter__oldumount, ptr @event_exit__oldumount }, align 4
@event_enter__oldumount = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.77 { ptr @.str.9 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.79 zeroinitializer, ptr @__syscall_meta__oldumount, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__oldumount = internal global ptr @event_enter__oldumount, section "_ftrace_events", align 4
@.str.10 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"sys_exit_oldumount\00", [45 x i8] zeroinitializer }, align 32
@event_exit__oldumount = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.77 { ptr @.str.10 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.79 zeroinitializer, ptr @__syscall_meta__oldumount, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__oldumount = internal global ptr @event_exit__oldumount, section "_ftrace_events", align 4
@.str.11 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"sys_oldumount\00", [18 x i8] zeroinitializer }, align 32
@types__oldumount = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.53], [28 x i8] zeroinitializer }, align 32
@args__oldumount = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.55], [28 x i8] zeroinitializer }, align 32
@__p_syscall_meta__oldumount = internal global ptr @__syscall_meta__oldumount, section "__syscalls_metadata", align 4
@__kstrtab_clone_private_mount = external dso_local constant [0 x i8], align 1
@__kstrtabns_clone_private_mount = external dso_local constant [0 x i8], align 1
@__ksymtab_clone_private_mount = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @clone_private_mount to i32), ptr @__kstrtab_clone_private_mount, ptr @__kstrtabns_clone_private_mount }, section "___ksymtab_gpl+clone_private_mount", align 4
@sysctl_mount_max = internal global i32 100000, section ".data..read_mostly", align 4
@.str.12 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"sys_enter_open_tree\00", [44 x i8] zeroinitializer }, align 32
@__syscall_meta__open_tree = internal global %struct.syscall_metadata { ptr @.str.14, i32 -1, i32 3, ptr @types__open_tree, ptr @args__open_tree, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__open_tree, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__open_tree, i64 20) }, ptr @event_enter__open_tree, ptr @event_exit__open_tree }, align 4
@event_enter__open_tree = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.77 { ptr @.str.12 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.79 zeroinitializer, ptr @__syscall_meta__open_tree, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__open_tree = internal global ptr @event_enter__open_tree, section "_ftrace_events", align 4
@.str.13 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"sys_exit_open_tree\00", [45 x i8] zeroinitializer }, align 32
@event_exit__open_tree = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.77 { ptr @.str.13 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.79 zeroinitializer, ptr @__syscall_meta__open_tree, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__open_tree = internal global ptr @event_exit__open_tree, section "_ftrace_events", align 4
@.str.14 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"sys_open_tree\00", [18 x i8] zeroinitializer }, align 32
@types__open_tree = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.54, ptr @.str.57, ptr @.str.58], [20 x i8] zeroinitializer }, align 32
@args__open_tree = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.59, ptr @.str.60, ptr @.str.56], [20 x i8] zeroinitializer }, align 32
@__p_syscall_meta__open_tree = internal global ptr @__syscall_meta__open_tree, section "__syscalls_metadata", align 4
@__kstrtab_mnt_set_expiry = external dso_local constant [0 x i8], align 1
@__kstrtabns_mnt_set_expiry = external dso_local constant [0 x i8], align 1
@__ksymtab_mnt_set_expiry = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mnt_set_expiry to i32), ptr @__kstrtab_mnt_set_expiry, ptr @__kstrtabns_mnt_set_expiry }, section "___ksymtab+mnt_set_expiry", align 4
@__kstrtab_mark_mounts_for_expiry = external dso_local constant [0 x i8], align 1
@__kstrtabns_mark_mounts_for_expiry = external dso_local constant [0 x i8], align 1
@__ksymtab_mark_mounts_for_expiry = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mark_mounts_for_expiry to i32), ptr @__kstrtab_mark_mounts_for_expiry, ptr @__kstrtabns_mark_mounts_for_expiry }, section "___ksymtab_gpl+mark_mounts_for_expiry", align 4
@__kstrtab_mount_subtree = external dso_local constant [0 x i8], align 1
@__kstrtabns_mount_subtree = external dso_local constant [0 x i8], align 1
@__ksymtab_mount_subtree = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mount_subtree to i32), ptr @__kstrtab_mount_subtree, ptr @__kstrtabns_mount_subtree }, section "___ksymtab+mount_subtree", align 4
@.str.15 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sys_enter_mount\00", [16 x i8] zeroinitializer }, align 32
@__syscall_meta__mount = internal global %struct.syscall_metadata { ptr @.str.17, i32 -1, i32 5, ptr @types__mount, ptr @args__mount, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__mount, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__mount, i64 20) }, ptr @event_enter__mount, ptr @event_exit__mount }, align 4
@event_enter__mount = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.77 { ptr @.str.15 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.79 zeroinitializer, ptr @__syscall_meta__mount, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__mount = internal global ptr @event_enter__mount, section "_ftrace_events", align 4
@.str.16 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sys_exit_mount\00", [17 x i8] zeroinitializer }, align 32
@event_exit__mount = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.77 { ptr @.str.16 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.79 zeroinitializer, ptr @__syscall_meta__mount, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__mount = internal global ptr @event_exit__mount, section "_ftrace_events", align 4
@.str.17 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"sys_mount\00", [22 x i8] zeroinitializer }, align 32
@types__mount = internal global { [5 x ptr], [44 x i8] } { [5 x ptr] [ptr @.str.53, ptr @.str.53, ptr @.str.53, ptr @.str.72, ptr @.str.73], [44 x i8] zeroinitializer }, align 32
@args__mount = internal global { [5 x ptr], [44 x i8] } { [5 x ptr] [ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.56, ptr @.str.77], [44 x i8] zeroinitializer }, align 32
@__p_syscall_meta__mount = internal global ptr @__syscall_meta__mount, section "__syscalls_metadata", align 4
@.str.18 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sys_enter_fsmount\00", [46 x i8] zeroinitializer }, align 32
@__syscall_meta__fsmount = internal global %struct.syscall_metadata { ptr @.str.20, i32 -1, i32 3, ptr @types__fsmount, ptr @args__fsmount, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__fsmount, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__fsmount, i64 20) }, ptr @event_enter__fsmount, ptr @event_exit__fsmount }, align 4
@event_enter__fsmount = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.77 { ptr @.str.18 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.79 zeroinitializer, ptr @__syscall_meta__fsmount, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__fsmount = internal global ptr @event_enter__fsmount, section "_ftrace_events", align 4
@.str.19 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"sys_exit_fsmount\00", [47 x i8] zeroinitializer }, align 32
@event_exit__fsmount = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.77 { ptr @.str.19 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.79 zeroinitializer, ptr @__syscall_meta__fsmount, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__fsmount = internal global ptr @event_exit__fsmount, section "_ftrace_events", align 4
@.str.20 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"sys_fsmount\00", [20 x i8] zeroinitializer }, align 32
@types__fsmount = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.54, ptr @.str.81, ptr @.str.81], [20 x i8] zeroinitializer }, align 32
@args__fsmount = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.82, ptr @.str.56, ptr @.str.83], [20 x i8] zeroinitializer }, align 32
@__p_syscall_meta__fsmount = internal global ptr @__syscall_meta__fsmount, section "__syscalls_metadata", align 4
@.str.21 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"sys_enter_move_mount\00", [43 x i8] zeroinitializer }, align 32
@__syscall_meta__move_mount = internal global %struct.syscall_metadata { ptr @.str.23, i32 -1, i32 5, ptr @types__move_mount, ptr @args__move_mount, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__move_mount, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__move_mount, i64 20) }, ptr @event_enter__move_mount, ptr @event_exit__move_mount }, align 4
@event_enter__move_mount = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.77 { ptr @.str.21 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.79 zeroinitializer, ptr @__syscall_meta__move_mount, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__move_mount = internal global ptr @event_enter__move_mount, section "_ftrace_events", align 4
@.str.22 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"sys_exit_move_mount\00", [44 x i8] zeroinitializer }, align 32
@event_exit__move_mount = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.77 { ptr @.str.22 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.79 zeroinitializer, ptr @__syscall_meta__move_mount, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__move_mount = internal global ptr @event_exit__move_mount, section "_ftrace_events", align 4
@.str.23 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sys_move_mount\00", [17 x i8] zeroinitializer }, align 32
@types__move_mount = internal global { [5 x ptr], [44 x i8] } { [5 x ptr] [ptr @.str.54, ptr @.str.57, ptr @.str.54, ptr @.str.57, ptr @.str.81], [44 x i8] zeroinitializer }, align 32
@args__move_mount = internal global { [5 x ptr], [44 x i8] } { [5 x ptr] [ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.56], [44 x i8] zeroinitializer }, align 32
@__p_syscall_meta__move_mount = internal global ptr @__syscall_meta__move_mount, section "__syscalls_metadata", align 4
@__kstrtab_path_is_under = external dso_local constant [0 x i8], align 1
@__kstrtabns_path_is_under = external dso_local constant [0 x i8], align 1
@__ksymtab_path_is_under = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @path_is_under to i32), ptr @__kstrtab_path_is_under, ptr @__kstrtabns_path_is_under }, section "___ksymtab+path_is_under", align 4
@.str.24 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"sys_enter_pivot_root\00", [43 x i8] zeroinitializer }, align 32
@__syscall_meta__pivot_root = internal global %struct.syscall_metadata { ptr @.str.26, i32 -1, i32 2, ptr @types__pivot_root, ptr @args__pivot_root, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__pivot_root, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__pivot_root, i64 20) }, ptr @event_enter__pivot_root, ptr @event_exit__pivot_root }, align 4
@event_enter__pivot_root = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.77 { ptr @.str.24 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.79 zeroinitializer, ptr @__syscall_meta__pivot_root, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__pivot_root = internal global ptr @event_enter__pivot_root, section "_ftrace_events", align 4
@.str.25 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"sys_exit_pivot_root\00", [44 x i8] zeroinitializer }, align 32
@event_exit__pivot_root = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.77 { ptr @.str.25 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.79 zeroinitializer, ptr @__syscall_meta__pivot_root, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__pivot_root = internal global ptr @event_exit__pivot_root, section "_ftrace_events", align 4
@.str.26 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sys_pivot_root\00", [17 x i8] zeroinitializer }, align 32
@types__pivot_root = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.57, ptr @.str.57], [24 x i8] zeroinitializer }, align 32
@args__pivot_root = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.90, ptr @.str.91], [24 x i8] zeroinitializer }, align 32
@__p_syscall_meta__pivot_root = internal global ptr @__syscall_meta__pivot_root, section "__syscalls_metadata", align 4
@.str.27 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"sys_enter_mount_setattr\00", [40 x i8] zeroinitializer }, align 32
@__syscall_meta__mount_setattr = internal global %struct.syscall_metadata { ptr @.str.29, i32 -1, i32 5, ptr @types__mount_setattr, ptr @args__mount_setattr, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__mount_setattr, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__mount_setattr, i64 20) }, ptr @event_enter__mount_setattr, ptr @event_exit__mount_setattr }, align 4
@event_enter__mount_setattr = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.77 { ptr @.str.27 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.79 zeroinitializer, ptr @__syscall_meta__mount_setattr, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__mount_setattr = internal global ptr @event_enter__mount_setattr, section "_ftrace_events", align 4
@.str.28 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"sys_exit_mount_setattr\00", [41 x i8] zeroinitializer }, align 32
@event_exit__mount_setattr = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.77 { ptr @.str.28 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.79 zeroinitializer, ptr @__syscall_meta__mount_setattr, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__mount_setattr = internal global ptr @event_exit__mount_setattr, section "_ftrace_events", align 4
@.str.29 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sys_mount_setattr\00", [46 x i8] zeroinitializer }, align 32
@types__mount_setattr = internal global { [5 x ptr], [44 x i8] } { [5 x ptr] [ptr @.str.54, ptr @.str.57, ptr @.str.81, ptr @.str.92, ptr @.str.93], [44 x i8] zeroinitializer }, align 32
@args__mount_setattr = internal global { [5 x ptr], [44 x i8] } { [5 x ptr] [ptr @.str.59, ptr @.str.94, ptr @.str.56, ptr @.str.95, ptr @.str.96], [44 x i8] zeroinitializer }, align 32
@__p_syscall_meta__mount_setattr = internal global ptr @__syscall_meta__mount_setattr, section "__syscalls_metadata", align 4
@.str.30 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"mnt_cache\00", [22 x i8] zeroinitializer }, align 32
@mnt_cache = internal unnamed_addr global ptr null, section ".data..read_mostly", align 4
@.str.31 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Mount-cache\00", [20 x i8] zeroinitializer }, align 32
@mhash_entries = internal unnamed_addr global i32 0, section ".init.data", align 4
@m_hash_shift = internal global i32 0, section ".data..read_mostly", align 4
@m_hash_mask = internal global i32 0, section ".data..read_mostly", align 4
@mount_hashtable = internal unnamed_addr global ptr null, section ".data..read_mostly", align 4
@.str.32 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Mountpoint-cache\00", [47 x i8] zeroinitializer }, align 32
@mphash_entries = internal unnamed_addr global i32 0, section ".init.data", align 4
@mp_hash_shift = internal global i32 0, section ".data..read_mostly", align 4
@mp_hash_mask = internal global i32 0, section ".data..read_mostly", align 4
@mountpoint_hashtable = internal unnamed_addr global ptr null, section ".data..read_mostly", align 4
@.str.33 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Failed to allocate mount hash table\0A\00", [59 x i8] zeroinitializer }, align 32
@mnt_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.34, ptr @.str.35, ptr @.str.2, i32 4385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\014%s: sysfs_init error: %d\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"mnt_init\00", [23 x i8] zeroinitializer }, align 32
@mnt_init._entry_ptr = internal global ptr @mnt_init._entry, section ".printk_index", align 4
@.str.36 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"fs\00", [29 x i8] zeroinitializer }, align 32
@mnt_init._entry.37 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.38, ptr @.str.35, ptr @.str.2, i32 4388, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"\014%s: kobj create error\0A\00", [39 x i8] zeroinitializer }, align 32
@mnt_init._entry_ptr.39 = internal global ptr @mnt_init._entry.37, section ".printk_index", align 4
@__kstrtab_kern_mount = external dso_local constant [0 x i8], align 1
@__kstrtabns_kern_mount = external dso_local constant [0 x i8], align 1
@__ksymtab_kern_mount = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @kern_mount to i32), ptr @__kstrtab_kern_mount, ptr @__kstrtabns_kern_mount }, section "___ksymtab_gpl+kern_mount", align 4
@__kstrtab_kern_unmount = external dso_local constant [0 x i8], align 1
@__kstrtabns_kern_unmount = external dso_local constant [0 x i8], align 1
@__ksymtab_kern_unmount = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @kern_unmount to i32), ptr @__kstrtab_kern_unmount, ptr @__kstrtabns_kern_unmount }, section "___ksymtab+kern_unmount", align 4
@__kstrtab_kern_unmount_array = external dso_local constant [0 x i8], align 1
@__kstrtabns_kern_unmount_array = external dso_local constant [0 x i8], align 1
@__ksymtab_kern_unmount_array = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @kern_unmount_array to i32), ptr @__kstrtab_kern_unmount_array, ptr @__kstrtabns_kern_unmount_array }, section "___ksymtab+kern_unmount_array", align 4
@.str.40 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"mnt\00", [28 x i8] zeroinitializer }, align 32
@mntns_operations = dso_local constant { %struct.proc_ns_operations, [32 x i8] } { %struct.proc_ns_operations { ptr @.str.40, ptr null, i32 131072, ptr @mntns_get, ptr @mntns_put, ptr @mntns_install, ptr @mntns_owner, ptr null }, [32 x i8] zeroinitializer }, align 32
@__initcall__kmod_namespace__315_4672_init_fs_namespace_sysctls5 = internal global ptr @init_fs_namespace_sysctls, section ".initcall5.init", align 4
@.str.41 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"mnt_group_ida.xa_lock\00", [42 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"include/linux/percpu-rwsem.h\00", [35 x i8] zeroinitializer }, align 32
@rcu_sync_is_idle.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.43 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcu_sync.h\00", [39 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"suspicious rcu_sync_is_idle() usage\00", [60 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.45 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.47 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"namespace_sem.wait_lock\00", [40 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"namespace_sem\00", [18 x i8] zeroinitializer }, align 32
@ex_mountpoints = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @ex_mountpoints, ptr @ex_mountpoints }, [24 x i8] zeroinitializer }, align 32
@mnt_id_ida = internal global { %struct.ida, [44 x i8] } { %struct.ida { %struct.xarray { %struct.spinlock { %union.anon.0 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.50, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, i32 67108869, ptr null } }, [44 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"mnt_id_ida.xa_lock\00", [45 x i8] zeroinitializer }, align 32
@delayed_mntput_list = internal global { %struct.llist_head, [28 x i8] } zeroinitializer, align 32
@delayed_mntput_work = internal global { %struct.delayed_work, [60 x i8] } { %struct.delayed_work { %struct.work_struct { %struct.atomic_t { i32 -48 }, %struct.list_head { ptr getelementptr (i8, ptr @delayed_mntput_work, i64 4), ptr getelementptr (i8, ptr @delayed_mntput_work, i64 4) }, ptr @delayed_mntput, %struct.lockdep_map { ptr @delayed_mntput_work, [2 x ptr] zeroinitializer, ptr @.str.51, i8 0, i8 0, i8 0, i32 0, i32 0 } }, %struct.timer_list { %struct.hlist_node { ptr inttoptr (i32 768 to ptr), ptr null }, i32 0, ptr @delayed_work_timer_fn, i32 2097152, %struct.lockdep_map { ptr @.str.52, [2 x ptr] zeroinitializer, ptr @.str.52, i8 0, i8 0, i8 0, i32 0, i32 0 } }, ptr null, i32 0 }, [60 x i8] zeroinitializer }, align 32
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@.str.51 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"(delayed_mntput_work).work\00", [37 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"fs/namespace.c:1192\00", [44 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"char *\00", [25 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"name\00", [27 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"flags\00", [26 x i8] zeroinitializer }, align 32
@ns_dentry_operations = external dso_local constant %struct.dentry_operations, align 128
@.str.57 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"const char *\00", [19 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"unsigned\00", [23 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"dfd\00", [28 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"filename\00", [23 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@warn_mandlock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@warn_mandlock._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.61, ptr @.str.62, ptr @.str.2, i32 1761, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [282 x i8], [70 x i8] } { [282 x i8] c"\014=======================================================\0AWARNING: The mand mount option has been deprecated and\0A         and is ignored by this kernel. Remove the mand\0A         option from the mount to silence this warning.\0A=======================================================\0A\00", [70 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"warn_mandlock\00", [18 x i8] zeroinitializer }, align 32
@warn_mandlock._entry_ptr = internal global ptr @warn_mandlock._entry, section ".printk_index", align 4
@mnt_warn_timestamp_expiry._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.63, ptr @.str.64, ptr @.str.2, i32 2611, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\014%s filesystem being %s at %s supports timestamps until %04ld (0x%llx)\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"mnt_warn_timestamp_expiry\00", [38 x i8] zeroinitializer }, align 32
@mnt_warn_timestamp_expiry._entry_ptr = internal global ptr @mnt_warn_timestamp_expiry._entry, section ".printk_index", align 4
@.str.65 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"remounted\00", [22 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"mounted\00", [24 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"subtype\00", [24 x i8] zeroinitializer }, align 32
@mount_too_revealing.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.68 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Expected s_iflags to contain 0x%lx\0A\00", [60 x i8] zeroinitializer }, align 32
@mnt_ns_seq = internal global { %struct.atomic64_t, [24 x i8] } { %struct.atomic64_t { i64 1 }, [24 x i8] zeroinitializer }, align 32
@alloc_mnt_ns.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.69 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"&new_ns->poll\00", [18 x i8] zeroinitializer }, align 32
@alloc_mnt_ns.__key.70 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.71 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"&new_ns->ns_lock\00", [47 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned long\00", [18 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"void *\00", [25 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"dev_name\00", [23 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"dir_name\00", [23 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"type\00", [27 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"data\00", [27 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/uaccess.h\00", [40 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"fs_fd\00", [26 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"attr_flags\00", [21 x i8] zeroinitializer }, align 32
@fscontext_fops = external dso_local constant %struct.file_operations, align 4
@__do_sys_fsmount._entry = internal constant %struct.pi_entry { ptr @.str.84, ptr @.str.85, ptr @.str.2, i32 3677, ptr null, ptr null }, align 1
@.str.84 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\014VFS: Mount too revealing\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"__do_sys_fsmount\00", [47 x i8] zeroinitializer }, align 32
@__do_sys_fsmount._entry_ptr = internal global ptr @__do_sys_fsmount._entry, section ".printk_index", align 4
@.str.86 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"from_dfd\00", [23 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"from_pathname\00", [18 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"to_dfd\00", [25 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"to_pathname\00", [20 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"new_root\00", [23 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"put_old\00", [24 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"struct mount_attr *\00", [44 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"size_t\00", [25 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"path\00", [27 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"uattr\00", [26 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"usize\00", [26 x i8] zeroinitializer }, align 32
@rootfs_fs_type = external dso_local global %struct.file_system_type, align 4
@.str.97 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"rootfs\00", [25 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Can't create rootfs\00", [44 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Can't allocate initial namespace\00", [63 x i8] zeroinitializer }, align 32
@init_task = external dso_local local_unnamed_addr global %struct.task_struct, align 128
@.str.100 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"/\00", [30 x i8] zeroinitializer }, align 32
@fs_namespace_sysctls = internal global { [2 x %struct.ctl_table], [56 x i8] } { [2 x %struct.ctl_table] [%struct.ctl_table { ptr @.str.102, ptr @sysctl_mount_max, i32 4, i16 420, ptr null, ptr @proc_dointvec_minmax, ptr null, ptr getelementptr (i8, ptr @sysctl_vals, i64 8), ptr null }, %struct.ctl_table zeroinitializer], [56 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"fs_namespace_sysctls\00", [43 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"mount-max\00", [22 x i8] zeroinitializer }, align 32
@sysctl_vals = external dso_local constant [0 x i32], align 4
@__sancov_gen_cov_switch_values = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 16, i64 32]
@__sancov_gen_cov_switch_values.103 = internal global [4 x i64] [i64 2, i64 7, i64 0, i64 112]
@__sancov_gen_cov_switch_values.104 = internal global [5 x i64] [i64 3, i64 7, i64 0, i64 16, i64 32]
@___asan_gen_.105 = private unnamed_addr constant [8 x i8] c"fs_kobj\00", align 1
@___asan_gen_.107 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 88, i32 17 }
@___asan_gen_.113 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 99, i32 28 }
@___asan_gen_.114 = private unnamed_addr constant [14 x i8] c"mnt_group_ida\00", align 1
@___asan_gen_.122 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 660, i32 2 }
@___asan_gen_.123 = private unnamed_addr constant [14 x i8] c"namespace_sem\00", align 1
@___asan_gen_.128 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 1004, i32 35 }
@___asan_gen_.131 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 1055, i32 33 }
@___asan_gen_.132 = private unnamed_addr constant [10 x i8] c"mounts_op\00", align 1
@___asan_gen_.134 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 1391, i32 29 }
@___asan_gen_.135 = private unnamed_addr constant [6 x i8] c"event\00", align 1
@___asan_gen_.137 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 67, i32 12 }
@___asan_gen_.138 = private unnamed_addr constant [10 x i8] c"unmounted\00", align 1
@___asan_gen_.140 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 75, i32 8 }
@___asan_gen_.144 = private unnamed_addr constant [20 x i8] c"event_enter__umount\00", align 1
@___asan_gen_.150 = private unnamed_addr constant [19 x i8] c"event_exit__umount\00", align 1
@___asan_gen_.156 = private unnamed_addr constant [14 x i8] c"types__umount\00", align 1
@___asan_gen_.159 = private unnamed_addr constant [13 x i8] c"args__umount\00", align 1
@___asan_gen_.165 = private unnamed_addr constant [23 x i8] c"event_enter__oldumount\00", align 1
@___asan_gen_.171 = private unnamed_addr constant [22 x i8] c"event_exit__oldumount\00", align 1
@___asan_gen_.177 = private unnamed_addr constant [17 x i8] c"types__oldumount\00", align 1
@___asan_gen_.180 = private unnamed_addr constant [16 x i8] c"args__oldumount\00", align 1
@___asan_gen_.182 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 1825, i32 1 }
@___asan_gen_.186 = private unnamed_addr constant [23 x i8] c"event_enter__open_tree\00", align 1
@___asan_gen_.192 = private unnamed_addr constant [22 x i8] c"event_exit__open_tree\00", align 1
@___asan_gen_.198 = private unnamed_addr constant [17 x i8] c"types__open_tree\00", align 1
@___asan_gen_.201 = private unnamed_addr constant [16 x i8] c"args__open_tree\00", align 1
@___asan_gen_.207 = private unnamed_addr constant [19 x i8] c"event_enter__mount\00", align 1
@___asan_gen_.213 = private unnamed_addr constant [18 x i8] c"event_exit__mount\00", align 1
@___asan_gen_.219 = private unnamed_addr constant [13 x i8] c"types__mount\00", align 1
@___asan_gen_.222 = private unnamed_addr constant [12 x i8] c"args__mount\00", align 1
@___asan_gen_.228 = private unnamed_addr constant [21 x i8] c"event_enter__fsmount\00", align 1
@___asan_gen_.234 = private unnamed_addr constant [20 x i8] c"event_exit__fsmount\00", align 1
@___asan_gen_.240 = private unnamed_addr constant [15 x i8] c"types__fsmount\00", align 1
@___asan_gen_.243 = private unnamed_addr constant [14 x i8] c"args__fsmount\00", align 1
@___asan_gen_.249 = private unnamed_addr constant [24 x i8] c"event_enter__move_mount\00", align 1
@___asan_gen_.255 = private unnamed_addr constant [23 x i8] c"event_exit__move_mount\00", align 1
@___asan_gen_.261 = private unnamed_addr constant [18 x i8] c"types__move_mount\00", align 1
@___asan_gen_.264 = private unnamed_addr constant [17 x i8] c"args__move_mount\00", align 1
@___asan_gen_.270 = private unnamed_addr constant [24 x i8] c"event_enter__pivot_root\00", align 1
@___asan_gen_.276 = private unnamed_addr constant [23 x i8] c"event_exit__pivot_root\00", align 1
@___asan_gen_.282 = private unnamed_addr constant [18 x i8] c"types__pivot_root\00", align 1
@___asan_gen_.285 = private unnamed_addr constant [17 x i8] c"args__pivot_root\00", align 1
@___asan_gen_.291 = private unnamed_addr constant [27 x i8] c"event_enter__mount_setattr\00", align 1
@___asan_gen_.297 = private unnamed_addr constant [26 x i8] c"event_exit__mount_setattr\00", align 1
@___asan_gen_.303 = private unnamed_addr constant [21 x i8] c"types__mount_setattr\00", align 1
@___asan_gen_.306 = private unnamed_addr constant [20 x i8] c"args__mount_setattr\00", align 1
@___asan_gen_.311 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 4363, i32 32 }
@___asan_gen_.314 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 4366, i32 44 }
@___asan_gen_.317 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 4371, i32 49 }
@___asan_gen_.320 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 4378, i32 9 }
@___asan_gen_.329 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 4384, i32 3 }
@___asan_gen_.332 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 4386, i32 35 }
@___asan_gen_.338 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 4388, i32 3 }
@___asan_gen_.341 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 4646, i32 11 }
@___asan_gen_.342 = private unnamed_addr constant [17 x i8] c"mntns_operations\00", align 1
@___asan_gen_.344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 4645, i32 33 }
@___asan_gen_.347 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 69, i32 8 }
@___asan_gen_.349 = private unnamed_addr constant [32 x i8] c"../include/linux/percpu-rwsem.h\00", align 1
@___asan_gen_.350 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.349, i32 49, i32 2 }
@___asan_gen_.355 = private unnamed_addr constant [28 x i8] c"../include/linux/rcu_sync.h\00", align 1
@___asan_gen_.356 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.355, i32 34, i32 2 }
@___asan_gen_.362 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.364, i32 723, i32 2 }
@___asan_gen_.364 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.365 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.364, i32 695, i32 2 }
@___asan_gen_.371 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 74, i32 8 }
@___asan_gen_.372 = private unnamed_addr constant [15 x i8] c"ex_mountpoints\00", align 1
@___asan_gen_.374 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 76, i32 8 }
@___asan_gen_.375 = private unnamed_addr constant [11 x i8] c"mnt_id_ida\00", align 1
@___asan_gen_.380 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 68, i32 8 }
@___asan_gen_.381 = private unnamed_addr constant [20 x i8] c"delayed_mntput_list\00", align 1
@___asan_gen_.383 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 1183, i32 8 }
@___asan_gen_.384 = private unnamed_addr constant [20 x i8] c"delayed_mntput_work\00", align 1
@___asan_gen_.392 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 1192, i32 8 }
@___asan_gen_.404 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 1815, i32 1 }
@___asan_gen_.416 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 2490, i32 1 }
@___asan_gen_.425 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 1757, i32 2 }
@___asan_gen_.426 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.440 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 2607, i32 3 }
@___asan_gen_.443 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 3015, i32 33 }
@___asan_gen_.446 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 4554, i32 3 }
@___asan_gen_.447 = private unnamed_addr constant [11 x i8] c"mnt_ns_seq\00", align 1
@___asan_gen_.449 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 3398, i32 19 }
@___asan_gen_.455 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 3428, i32 2 }
@___asan_gen_.456 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.461 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 3429, i32 2 }
@___asan_gen_.479 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 3552, i32 1 }
@___asan_gen_.481 = private unnamed_addr constant [27 x i8] c"../include/linux/uaccess.h\00", align 1
@___asan_gen_.482 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.481, i32 156, i32 2 }
@___asan_gen_.491 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 3620, i32 1 }
@___asan_gen_.497 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 3677, i32 3 }
@___asan_gen_.509 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 3749, i32 1 }
@___asan_gen_.515 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 3852, i32 1 }
@___asan_gen_.530 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 4281, i32 1 }
@___asan_gen_.533 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 4336, i32 43 }
@___asan_gen_.536 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 4338, i32 9 }
@___asan_gen_.539 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 4342, i32 9 }
@___asan_gen_.542 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 4622, i32 5 }
@___asan_gen_.543 = private unnamed_addr constant [21 x i8] c"fs_namespace_sysctls\00", align 1
@___asan_gen_.545 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 4655, i32 25 }
@___asan_gen_.548 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 4669, i32 2 }
@___asan_gen_.549 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.550 = private constant [18 x i8] c"../fs/namespace.c\00", align 1
@___asan_gen_.551 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.550, i32 4657, i32 15 }
@llvm.compiler.used = appending global [213 x ptr] [ptr @__do_sys_fsmount._entry, ptr @__do_sys_fsmount._entry_ptr, ptr @__event_enter__fsmount, ptr @__event_enter__mount, ptr @__event_enter__mount_setattr, ptr @__event_enter__move_mount, ptr @__event_enter__oldumount, ptr @__event_enter__open_tree, ptr @__event_enter__pivot_root, ptr @__event_enter__umount, ptr @__event_exit__fsmount, ptr @__event_exit__mount, ptr @__event_exit__mount_setattr, ptr @__event_exit__move_mount, ptr @__event_exit__oldumount, ptr @__event_exit__open_tree, ptr @__event_exit__pivot_root, ptr @__event_exit__umount, ptr @__initcall__kmod_namespace__315_4672_init_fs_namespace_sysctls5, ptr @__ksymtab___mnt_is_readonly, ptr @__ksymtab_clone_private_mount, ptr @__ksymtab_fc_mount, ptr @__ksymtab_fs_kobj, ptr @__ksymtab_kern_mount, ptr @__ksymtab_kern_unmount, ptr @__ksymtab_kern_unmount_array, ptr @__ksymtab_mark_mounts_for_expiry, ptr @__ksymtab_may_umount, ptr @__ksymtab_may_umount_tree, ptr @__ksymtab_mnt_drop_write, ptr @__ksymtab_mnt_drop_write_file, ptr @__ksymtab_mnt_set_expiry, ptr @__ksymtab_mnt_want_write, ptr @__ksymtab_mnt_want_write_file, ptr @__ksymtab_mntget, ptr @__ksymtab_mntput, ptr @__ksymtab_mount_subtree, ptr @__ksymtab_path_is_mountpoint, ptr @__ksymtab_path_is_under, ptr @__ksymtab_vfs_create_mount, ptr @__ksymtab_vfs_kern_mount, ptr @__ksymtab_vfs_submount, ptr @__p_syscall_meta__fsmount, ptr @__p_syscall_meta__mount, ptr @__p_syscall_meta__mount_setattr, ptr @__p_syscall_meta__move_mount, ptr @__p_syscall_meta__oldumount, ptr @__p_syscall_meta__open_tree, ptr @__p_syscall_meta__pivot_root, ptr @__p_syscall_meta__umount, ptr @__setup_set_mhash_entries, ptr @__setup_set_mphash_entries, ptr @__syscall_meta__fsmount, ptr @__syscall_meta__mount, ptr @__syscall_meta__mount_setattr, ptr @__syscall_meta__move_mount, ptr @__syscall_meta__oldumount, ptr @__syscall_meta__open_tree, ptr @__syscall_meta__pivot_root, ptr @__syscall_meta__umount, ptr @event_enter__fsmount, ptr @event_enter__mount, ptr @event_enter__mount_setattr, ptr @event_enter__move_mount, ptr @event_enter__oldumount, ptr @event_enter__open_tree, ptr @event_enter__pivot_root, ptr @event_enter__umount, ptr @event_exit__fsmount, ptr @event_exit__mount, ptr @event_exit__mount_setattr, ptr @event_exit__move_mount, ptr @event_exit__oldumount, ptr @event_exit__open_tree, ptr @event_exit__pivot_root, ptr @event_exit__umount, ptr @mnt_init._entry, ptr @mnt_init._entry.37, ptr @mnt_init._entry_ptr, ptr @mnt_init._entry_ptr.39, ptr @mnt_warn_timestamp_expiry._entry, ptr @mnt_warn_timestamp_expiry._entry_ptr, ptr @warn_mandlock._entry, ptr @warn_mandlock._entry_ptr, ptr @fs_kobj, ptr @.str, ptr @.str.1, ptr @mnt_group_ida, ptr @.str.2, ptr @.str.3, ptr @namespace_sem, ptr @.str.4, ptr @.str.5, ptr @mounts_op, ptr @event, ptr @unmounted, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @types__umount, ptr @args__umount, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @types__oldumount, ptr @args__oldumount, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @types__open_tree, ptr @args__open_tree, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @types__mount, ptr @args__mount, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @types__fsmount, ptr @args__fsmount, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @types__move_mount, ptr @args__move_mount, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @types__pivot_root, ptr @args__pivot_root, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @types__mount_setattr, ptr @args__mount_setattr, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.38, ptr @.str.40, ptr @mntns_operations, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @ex_mountpoints, ptr @mnt_id_ida, ptr @.str.50, ptr @delayed_mntput_list, ptr @delayed_mntput_work, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @mnt_ns_seq, ptr @alloc_mnt_ns.__key, ptr @.str.69, ptr @alloc_mnt_ns.__key.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @fs_namespace_sysctls, ptr @.str.101, ptr @.str.102], section "llvm.metadata"
@0 = internal global [149 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fs_kobj to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.105 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.107 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mnt_group_ida to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.114 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.347 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.122 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.122 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @namespace_sem to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.123 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.128 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mounts_op to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.132 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.134 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.135 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.137 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @unmounted to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.138 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__umount to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.144 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__umount to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.150 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__umount to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.156 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__umount to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.159 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__oldumount to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.165 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__oldumount to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.171 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__oldumount to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__oldumount to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.180 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__open_tree to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.186 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__open_tree to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.192 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__open_tree to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.198 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__open_tree to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.201 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__mount to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.207 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__mount to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.213 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__mount to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.219 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__mount to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.222 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__fsmount to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.228 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__fsmount to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.234 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__fsmount to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.240 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__fsmount to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.243 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__move_mount to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__move_mount to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.255 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__move_mount to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.261 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__move_mount to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__pivot_root to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.270 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__pivot_root to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.276 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__pivot_root to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.282 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__pivot_root to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.285 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__mount_setattr to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.291 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__mount_setattr to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__mount_setattr to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.303 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__mount_setattr to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.311 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.317 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mnt_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mnt_init._entry.37 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.341 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mntns_operations to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.342 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.347 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.350 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.356 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.356 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ex_mountpoints to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mnt_id_ida to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.375 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.380 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.380 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @delayed_mntput_list to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @delayed_mntput_work to i32), i32 100, i32 160, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.392 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.392 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.392 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @warn_mandlock._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.425 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 282, i32 352, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.425 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.425 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mnt_warn_timestamp_expiry._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mnt_ns_seq to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.447 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alloc_mnt_ns.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.456 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alloc_mnt_ns.__key.70 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.456 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.497 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.497 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.542 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fs_namespace_sysctls to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.543 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

@sys_umount = dso_local alias i32 (ptr, i32), ptr @__se_sys_umount
@sys_oldumount = dso_local alias i32 (ptr), ptr @__se_sys_oldumount
@sys_open_tree = dso_local alias i32 (i32, ptr, i32), ptr @__se_sys_open_tree
@sys_mount = dso_local alias i32 (ptr, ptr, ptr, i32, ptr), ptr @__se_sys_mount
@sys_fsmount = dso_local alias i32 (i32, i32, i32), ptr @__se_sys_fsmount
@sys_move_mount = dso_local alias i32 (i32, ptr, i32, ptr, i32), ptr @__se_sys_move_mount
@sys_pivot_root = dso_local alias i32 (ptr, ptr), ptr @__se_sys_pivot_root
@sys_mount_setattr = dso_local alias i32 (i32, ptr, i32, ptr, i32), ptr @__se_sys_mount_setattr

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @set_mhash_entries(ptr noundef %str) #0 section ".init.text" align 64 {
entry:
  %str.addr = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %str.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %str, ptr %str.addr, align 4
  %tobool.not = icmp eq ptr %str, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %call = call i32 @simple_strtoul(ptr noundef nonnull %str, ptr noundef nonnull %str.addr, i32 noundef 0) #22
  store i32 %call, ptr @mhash_entries, align 4
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @set_mphash_entries(ptr noundef %str) #0 section ".init.text" align 64 {
entry:
  %str.addr = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %str.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %str, ptr %str.addr, align 4
  %tobool.not = icmp eq ptr %str, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %call = call i32 @simple_strtoul(ptr noundef nonnull %str, ptr noundef nonnull %str.addr, i32 noundef 0) #22
  store i32 %call, ptr @mphash_entries, align 4
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mnt_release_group_id(ptr nocapture noundef %mnt) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %mnt_group_id = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 23
  %0 = ptrtoint ptr %mnt_group_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mnt_group_id, align 4
  tail call void @ida_free(ptr noundef nonnull @mnt_group_ida, i32 noundef %1) #22
  %2 = ptrtoint ptr %mnt_group_id to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %mnt_group_id, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @ida_free(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mnt_get_count(ptr nocapture noundef readonly %mnt) local_unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %call6 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__sanitizer_cov_trace_cmp4(i32 %call6, i32 %0)
  %cmp7 = icmp ult i32 %call6, %0
  br i1 %cmp7, label %do.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

do.body.lr.ph:                                    ; preds = %entry
  %mnt_pcp = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 5
  %1 = ptrtoint ptr %mnt_pcp to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %mnt_pcp, align 4
  %3 = ptrtoint ptr %2 to i32
  br label %do.body

do.body:                                          ; preds = %do.body.do.body_crit_edge, %do.body.lr.ph
  %call9 = phi i32 [ %call6, %do.body.lr.ph ], [ %call, %do.body.do.body_crit_edge ]
  %count.08 = phi i32 [ 0, %do.body.lr.ph ], [ %add2, %do.body.do.body_crit_edge ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call9
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, %3
  %6 = inttoptr i32 %add to ptr
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %6, align 4
  %add2 = add i32 %8, %count.08
  %call = tail call i32 @cpumask_next(i32 noundef %call9, ptr noundef nonnull @__cpu_possible_mask) #25
  %cmp = icmp ult i32 %call, %0
  br i1 %cmp, label %do.body.do.body_crit_edge, label %do.body.for.end_crit_edge

do.body.for.end_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

do.body.do.body_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body

for.end:                                          ; preds = %do.body.for.end_crit_edge, %entry.for.end_crit_edge
  %count.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %add2, %do.body.for.end_crit_edge ]
  ret i32 %count.0.lcssa
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @__mnt_is_readonly(ptr nocapture noundef readonly %mnt) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %mnt_flags = getelementptr inbounds %struct.vfsmount, ptr %mnt, i32 0, i32 2
  %0 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mnt_flags, align 4
  %and = and i32 %1, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %lor.rhs, label %entry.lor.end_crit_edge

entry.lor.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %lor.end

lor.rhs:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %mnt_sb = getelementptr inbounds %struct.vfsmount, ptr %mnt, i32 0, i32 1
  %2 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mnt_sb, align 4
  %s_flags.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 10
  %4 = ptrtoint ptr %s_flags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %s_flags.i, align 4
  %and.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i = icmp ne i32 %and.i, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry.lor.end_crit_edge
  %6 = phi i1 [ true, %entry.lor.end_crit_edge ], [ %tobool.i, %lor.rhs ]
  ret i1 %6
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__mnt_want_write(ptr noundef %m) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !340
  %4 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %mnt_pcp.i = getelementptr i8, ptr %m, i32 24
  %5 = ptrtoint ptr %mnt_pcp.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mnt_pcp.i, align 4
  %mnt_writers.i = getelementptr inbounds %struct.mnt_pcp, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %mnt_writers.i to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.i, align 4
  %add.i36 = add i32 %13, %7
  %14 = inttoptr i32 %add.i36 to ptr
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %add13.i = add i32 %16, 1
  store i32 %add13.i, ptr %14, align 4
  %17 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i37 = and i32 %17, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i37)
  %tobool.not.i = icmp eq i32 %and.i.i.i37, 0
  br i1 %tobool.not.i, label %if.then.i, label %entry.mnt_inc_writers.exit_crit_edge, !prof !343

entry.mnt_inc_writers.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_inc_writers.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @warn_bogus_irq_restore() #22
  br label %mnt_inc_writers.exit

mnt_inc_writers.exit:                             ; preds = %if.then.i, %entry.mnt_inc_writers.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %4) #22, !srcloc !344
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !345
  %mnt_flags = getelementptr i8, ptr %m, i32 8
  %18 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %mnt_flags, align 4
  %and53 = and i32 %19, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and53)
  %tobool.not54 = icmp eq i32 %and53, 0
  br i1 %tobool.not54, label %mnt_inc_writers.exit.do.end23_crit_edge, label %mnt_inc_writers.exit.do.end15_crit_edge

mnt_inc_writers.exit.do.end15_crit_edge:          ; preds = %mnt_inc_writers.exit
  br label %do.end15

mnt_inc_writers.exit.do.end23_crit_edge:          ; preds = %mnt_inc_writers.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end23

do.end15:                                         ; preds = %do.end15.do.end15_crit_edge, %mnt_inc_writers.exit.do.end15_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !346
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #22, !srcloc !347
  %20 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %mnt_flags, align 4
  %and = and i32 %21, 512
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.end15.do.end23_crit_edge, label %do.end15.do.end15_crit_edge

do.end15.do.end15_crit_edge:                      ; preds = %do.end15
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end15

do.end15.do.end23_crit_edge:                      ; preds = %do.end15
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end23

do.end23:                                         ; preds = %do.end15.do.end23_crit_edge, %mnt_inc_writers.exit.do.end23_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !348
  %mnt_sb.i = getelementptr inbounds %struct.vfsmount, ptr %m, i32 0, i32 1
  %22 = ptrtoint ptr %mnt_sb.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %mnt_sb.i, align 4
  %s_readonly_remount.i = getelementptr inbounds %struct.super_block, ptr %23, i32 0, i32 49
  %24 = ptrtoint ptr %s_readonly_remount.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %s_readonly_remount.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.not.i38 = icmp eq i32 %25, 0
  br i1 %tobool.not.i38, label %do.end.i, label %do.end23.if.then_crit_edge

do.end23.if.then_crit_edge:                       ; preds = %do.end23
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then

do.end.i:                                         ; preds = %do.end23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !349
  %26 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %mnt_flags, align 4
  %and.i.i39 = and i32 %27, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i39)
  %tobool.not.i.i = icmp eq i32 %and.i.i39, 0
  br i1 %tobool.not.i.i, label %mnt_is_readonly.exit, label %do.end.i.if.then_crit_edge

do.end.i.if.then_crit_edge:                       ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then

mnt_is_readonly.exit:                             ; preds = %do.end.i
  %28 = ptrtoint ptr %mnt_sb.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %mnt_sb.i, align 4
  %s_flags.i.i.i = getelementptr inbounds %struct.super_block, ptr %29, i32 0, i32 10
  %30 = ptrtoint ptr %s_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %s_flags.i.i.i, align 4
  %and.i.i.i40 = and i32 %31, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i40)
  %tobool27.not = icmp eq i32 %and.i.i.i40, 0
  br i1 %tobool27.not, label %mnt_is_readonly.exit.do.body28_crit_edge, label %mnt_is_readonly.exit.if.then_crit_edge

mnt_is_readonly.exit.if.then_crit_edge:           ; preds = %mnt_is_readonly.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then

mnt_is_readonly.exit.do.body28_crit_edge:         ; preds = %mnt_is_readonly.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body28

if.then:                                          ; preds = %mnt_is_readonly.exit.if.then_crit_edge, %do.end.i.if.then_crit_edge, %do.end23.if.then_crit_edge
  %32 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %33 = ptrtoint ptr %mnt_pcp.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %mnt_pcp.i, align 4
  %mnt_writers.i42 = getelementptr inbounds %struct.mnt_pcp, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %mnt_writers.i42 to i32
  %36 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i43 = and i32 %36, -16384
  %37 = inttoptr i32 %and.i.i43 to ptr
  %cpu.i44 = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 3
  %38 = ptrtoint ptr %cpu.i44 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %cpu.i44, align 4
  %arrayidx.i45 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %39
  %40 = ptrtoint ptr %arrayidx.i45 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx.i45, align 4
  %add.i46 = add i32 %41, %35
  %42 = inttoptr i32 %add.i46 to ptr
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %42, align 4
  %add13.i47 = add i32 %44, -1
  store i32 %add13.i47, ptr %42, align 4
  %45 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i48 = and i32 %45, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i48)
  %tobool.not.i49 = icmp eq i32 %and.i.i.i48, 0
  br i1 %tobool.not.i49, label %if.then.i50, label %if.then.mnt_dec_writers.exit_crit_edge, !prof !343

if.then.mnt_dec_writers.exit_crit_edge:           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_dec_writers.exit

if.then.i50:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @warn_bogus_irq_restore() #22
  br label %mnt_dec_writers.exit

mnt_dec_writers.exit:                             ; preds = %if.then.i50, %if.then.mnt_dec_writers.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %32) #22, !srcloc !344
  br label %do.body28

do.body28:                                        ; preds = %mnt_dec_writers.exit, %mnt_is_readonly.exit.do.body28_crit_edge
  %ret.0 = phi i32 [ -30, %mnt_dec_writers.exit ], [ 0, %mnt_is_readonly.exit.do.body28_crit_edge ]
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !350
  %46 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i34 = and i32 %46, -16384
  %47 = inttoptr i32 %and.i.i.i34 to ptr
  %preempt_count.i.i35 = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %preempt_count.i.i35 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %preempt_count.i.i35, align 4
  %sub.i = add i32 %49, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i35, align 4
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mnt_want_write(ptr noundef %m) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %mnt_sb = getelementptr inbounds %struct.vfsmount, ptr %m, i32 0, i32 1
  %0 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mnt_sb, align 4
  tail call fastcc void @sb_start_write(ptr noundef %1)
  %call = tail call i32 @__mnt_want_write(ptr noundef %m)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %2 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mnt_sb, align 4
  tail call fastcc void @sb_end_write(ptr noundef %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 %call
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @sb_start_write(ptr noundef %sb) unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  %add.ptr1.i = getelementptr %struct.super_block, ptr %sb, i32 0, i32 32, i32 2
  tail call void @__might_sleep(ptr noundef nonnull @.str.42, i32 noundef 49) #22
  %dep_map.i.i = getelementptr %struct.super_block, ptr %sb, i32 0, i32 32, i32 2, i32 0, i32 5
  %0 = tail call ptr @llvm.returnaddress(i32 0) #22
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1, i32 noundef 1, ptr noundef null, i32 noundef %1) #22
  %2 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %5, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !351
  %call.i.i.i = tail call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.lhs.true.i.i.i, label %entry.rcu_sync_is_idle.exit.i.i_crit_edge

entry.rcu_sync_is_idle.exit.i.i_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_sync_is_idle.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %entry
  %call1.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool2.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool2.not.i.i.i, label %land.lhs.true.i.i.i.rcu_sync_is_idle.exit.i.i_crit_edge, label %land.lhs.true3.i.i.i

land.lhs.true.i.i.i.rcu_sync_is_idle.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_sync_is_idle.exit.i.i

land.lhs.true3.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %.b8.i.i.i = load i1, ptr @rcu_sync_is_idle.__warned, align 1
  br i1 %.b8.i.i.i, label %land.lhs.true3.i.i.i.rcu_sync_is_idle.exit.i.i_crit_edge, label %if.then.i.i.i

land.lhs.true3.i.i.i.rcu_sync_is_idle.exit.i.i_crit_edge: ; preds = %land.lhs.true3.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_sync_is_idle.exit.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true3.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_sync_is_idle.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.43, i32 noundef 35, ptr noundef nonnull @.str.44) #22
  br label %rcu_sync_is_idle.exit.i.i

rcu_sync_is_idle.exit.i.i:                        ; preds = %if.then.i.i.i, %land.lhs.true3.i.i.i.rcu_sync_is_idle.exit.i.i_crit_edge, %land.lhs.true.i.i.i.rcu_sync_is_idle.exit.i.i_crit_edge, %entry.rcu_sync_is_idle.exit.i.i_crit_edge
  %6 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %add.ptr1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool7.not.i.i.i = icmp eq i32 %7, 0
  br i1 %tobool7.not.i.i.i, label %do.body7.i.i, label %if.else.i.i, !prof !352

do.body7.i.i:                                     ; preds = %rcu_sync_is_idle.exit.i.i
  %8 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %read_count.i.i = getelementptr %struct.super_block, ptr %sb, i32 0, i32 32, i32 2, i32 0, i32 1
  %9 = ptrtoint ptr %read_count.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %read_count.i.i, align 4
  %11 = ptrtoint ptr %10 to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %15
  %16 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %17, %11
  %18 = inttoptr i32 %add.i.i to ptr
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %18, align 4
  %add21.i.i = add i32 %20, 1
  store i32 %add21.i.i, ptr %18, align 4
  %21 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i.i = and i32 %21, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool32.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool32.not.i.i, label %if.then41.i.i, label %do.body7.i.i.do.end43.i.i_crit_edge, !prof !343

do.body7.i.i.do.end43.i.i_crit_edge:              ; preds = %do.body7.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end43.i.i

if.then41.i.i:                                    ; preds = %do.body7.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @warn_bogus_irq_restore() #22
  br label %do.end43.i.i

do.end43.i.i:                                     ; preds = %if.then41.i.i, %do.body7.i.i.do.end43.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %8) #22, !srcloc !344
  br label %__sb_start_write.exit

if.else.i.i:                                      ; preds = %rcu_sync_is_idle.exit.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %call50.i.i = tail call zeroext i1 @__percpu_down_read(ptr noundef %add.ptr1.i, i1 noundef zeroext false) #22
  br label %__sb_start_write.exit

__sb_start_write.exit:                            ; preds = %if.else.i.i, %do.end43.i.i
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !353
  %22 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i58.i.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i58.i.i to ptr
  %preempt_count.i.i59.i.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i59.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i59.i.i, align 4
  %sub.i.i.i = add i32 %25, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i59.i.i, align 4
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @sb_end_write(ptr noundef %sb) unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  %add.ptr1.i = getelementptr %struct.super_block, ptr %sb, i32 0, i32 32, i32 2
  %dep_map.i.i = getelementptr %struct.super_block, ptr %sb, i32 0, i32 32, i32 2, i32 0, i32 5
  %0 = tail call ptr @llvm.returnaddress(i32 0) #22
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_release(ptr noundef %dep_map.i.i, i32 noundef %1) #22
  %2 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %5, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !354
  %call.i.i.i = tail call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.lhs.true.i.i.i, label %entry.rcu_sync_is_idle.exit.i.i_crit_edge

entry.rcu_sync_is_idle.exit.i.i_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_sync_is_idle.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %entry
  %call1.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool2.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool2.not.i.i.i, label %land.lhs.true.i.i.i.rcu_sync_is_idle.exit.i.i_crit_edge, label %land.lhs.true3.i.i.i

land.lhs.true.i.i.i.rcu_sync_is_idle.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_sync_is_idle.exit.i.i

land.lhs.true3.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %.b8.i.i.i = load i1, ptr @rcu_sync_is_idle.__warned, align 1
  br i1 %.b8.i.i.i, label %land.lhs.true3.i.i.i.rcu_sync_is_idle.exit.i.i_crit_edge, label %if.then.i.i.i

land.lhs.true3.i.i.i.rcu_sync_is_idle.exit.i.i_crit_edge: ; preds = %land.lhs.true3.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_sync_is_idle.exit.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true3.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_sync_is_idle.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.43, i32 noundef 35, ptr noundef nonnull @.str.44) #22
  br label %rcu_sync_is_idle.exit.i.i

rcu_sync_is_idle.exit.i.i:                        ; preds = %if.then.i.i.i, %land.lhs.true3.i.i.i.rcu_sync_is_idle.exit.i.i_crit_edge, %land.lhs.true.i.i.i.rcu_sync_is_idle.exit.i.i_crit_edge, %entry.rcu_sync_is_idle.exit.i.i_crit_edge
  %6 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %add.ptr1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool7.not.i.i.i = icmp eq i32 %7, 0
  br i1 %tobool7.not.i.i.i, label %do.body3.i.i, label %do.end49.i.i, !prof !352

do.body3.i.i:                                     ; preds = %rcu_sync_is_idle.exit.i.i
  %8 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %read_count.i.i = getelementptr %struct.super_block, ptr %sb, i32 0, i32 32, i32 2, i32 0, i32 1
  %9 = ptrtoint ptr %read_count.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %read_count.i.i, align 4
  %11 = ptrtoint ptr %10 to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %15
  %16 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %17, %11
  %18 = inttoptr i32 %add.i.i to ptr
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %18, align 4
  %add17.i.i = add i32 %20, -1
  store i32 %add17.i.i, ptr %18, align 4
  %21 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i.i = and i32 %21, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool28.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool28.not.i.i, label %if.then37.i.i, label %do.body3.i.i.do.end39.i.i_crit_edge, !prof !343

do.body3.i.i.do.end39.i.i_crit_edge:              ; preds = %do.body3.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end39.i.i

if.then37.i.i:                                    ; preds = %do.body3.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @warn_bogus_irq_restore() #22
  br label %do.end39.i.i

do.end39.i.i:                                     ; preds = %if.then37.i.i, %do.body3.i.i.do.end39.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %8) #22, !srcloc !344
  br label %__sb_end_write.exit

do.end49.i.i:                                     ; preds = %rcu_sync_is_idle.exit.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !355
  %22 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %read_count75.i.i = getelementptr %struct.super_block, ptr %sb, i32 0, i32 32, i32 2, i32 0, i32 1
  %23 = ptrtoint ptr %read_count75.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %read_count75.i.i, align 4
  %25 = ptrtoint ptr %24 to i32
  %26 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i122.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i122.i.i to ptr
  %cpu78.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 3
  %28 = ptrtoint ptr %cpu78.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %cpu78.i.i, align 4
  %arrayidx79.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %29
  %30 = ptrtoint ptr %arrayidx79.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx79.i.i, align 4
  %add80.i.i = add i32 %31, %25
  %32 = inttoptr i32 %add80.i.i to ptr
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %32, align 4
  %add81.i.i = add i32 %34, -1
  store i32 %add81.i.i, ptr %32, align 4
  %35 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i123.i.i = and i32 %35, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i123.i.i)
  %tobool92.not.i.i = icmp eq i32 %and.i.i123.i.i, 0
  br i1 %tobool92.not.i.i, label %if.then101.i.i, label %do.end49.i.i.do.end104.i.i_crit_edge, !prof !343

do.end49.i.i.do.end104.i.i_crit_edge:             ; preds = %do.end49.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end104.i.i

if.then101.i.i:                                   ; preds = %do.end49.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @warn_bogus_irq_restore() #22
  br label %do.end104.i.i

do.end104.i.i:                                    ; preds = %if.then101.i.i, %do.end49.i.i.do.end104.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %22) #22, !srcloc !344
  %writer.i.i = getelementptr %struct.super_block, ptr %sb, i32 0, i32 32, i32 2, i32 0, i32 2
  %call111.i.i = tail call i32 @rcuwait_wake_up(ptr noundef %writer.i.i) #22
  br label %__sb_end_write.exit

__sb_end_write.exit:                              ; preds = %do.end104.i.i, %do.end39.i.i
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !356
  %36 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i120.i.i = and i32 %36, -16384
  %37 = inttoptr i32 %and.i.i.i120.i.i to ptr
  %preempt_count.i.i121.i.i = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %preempt_count.i.i121.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %preempt_count.i.i121.i.i, align 4
  %sub.i.i.i = add i32 %39, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i121.i.i, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__mnt_want_write_file(ptr nocapture noundef readonly %file) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %f_mode = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 8
  %0 = ptrtoint ptr %f_mode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %f_mode, align 8
  %and = and i32 %1, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %f_path3 = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1
  %2 = ptrtoint ptr %f_path3 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %f_path3, align 8
  br i1 %tobool.not, label %if.end2, label %if.then

if.then:                                          ; preds = %entry
  %mnt_flags.i = getelementptr inbounds %struct.vfsmount, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %mnt_flags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mnt_flags.i, align 4
  %and.i = and i32 %5, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %__mnt_is_readonly.exit, label %if.then.__mnt_is_readonly.exit.thread_crit_edge

if.then.__mnt_is_readonly.exit.thread_crit_edge:  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %__mnt_is_readonly.exit.thread

__mnt_is_readonly.exit:                           ; preds = %if.then
  %mnt_sb.i = getelementptr inbounds %struct.vfsmount, ptr %3, i32 0, i32 1
  %6 = ptrtoint ptr %mnt_sb.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mnt_sb.i, align 4
  %s_flags.i.i = getelementptr inbounds %struct.super_block, ptr %7, i32 0, i32 10
  %8 = ptrtoint ptr %s_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %s_flags.i.i, align 4
  %and.i.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.i.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.i.not, label %__mnt_is_readonly.exit.return_crit_edge, label %__mnt_is_readonly.exit.__mnt_is_readonly.exit.thread_crit_edge

__mnt_is_readonly.exit.__mnt_is_readonly.exit.thread_crit_edge: ; preds = %__mnt_is_readonly.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %__mnt_is_readonly.exit.thread

__mnt_is_readonly.exit.return_crit_edge:          ; preds = %__mnt_is_readonly.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

__mnt_is_readonly.exit.thread:                    ; preds = %__mnt_is_readonly.exit.__mnt_is_readonly.exit.thread_crit_edge, %if.then.__mnt_is_readonly.exit.thread_crit_edge
  br label %return

if.end2:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %call5 = tail call i32 @__mnt_want_write(ptr noundef %3)
  br label %return

return:                                           ; preds = %if.end2, %__mnt_is_readonly.exit.thread, %__mnt_is_readonly.exit.return_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end2 ], [ -30, %__mnt_is_readonly.exit.thread ], [ 0, %__mnt_is_readonly.exit.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mnt_want_write_file(ptr nocapture noundef readonly %file) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb, align 4
  tail call fastcc void @sb_start_write(ptr noundef %3)
  %f_mode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 8
  %4 = ptrtoint ptr %f_mode.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %f_mode.i, align 8
  %and.i = and i32 %5, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %f_path3.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1
  %6 = ptrtoint ptr %f_path3.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %f_path3.i, align 8
  br i1 %tobool.not.i, label %__mnt_want_write_file.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %mnt_flags.i.i = getelementptr inbounds %struct.vfsmount, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %mnt_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mnt_flags.i.i, align 4
  %and.i.i = and i32 %9, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %__mnt_is_readonly.exit.i, label %if.then.i.if.then_crit_edge

if.then.i.if.then_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then

__mnt_is_readonly.exit.i:                         ; preds = %if.then.i
  %mnt_sb.i.i = getelementptr inbounds %struct.vfsmount, ptr %7, i32 0, i32 1
  %10 = ptrtoint ptr %mnt_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mnt_sb.i.i, align 4
  %s_flags.i.i.i = getelementptr inbounds %struct.super_block, ptr %11, i32 0, i32 10
  %12 = ptrtoint ptr %s_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %s_flags.i.i.i, align 4
  %and.i.i.i = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.i.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.i.not.i, label %__mnt_is_readonly.exit.i.if.end_crit_edge, label %__mnt_is_readonly.exit.i.if.then_crit_edge

__mnt_is_readonly.exit.i.if.then_crit_edge:       ; preds = %__mnt_is_readonly.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then

__mnt_is_readonly.exit.i.if.end_crit_edge:        ; preds = %__mnt_is_readonly.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

__mnt_want_write_file.exit:                       ; preds = %entry
  %call5.i = tail call i32 @__mnt_want_write(ptr noundef %7) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool.not = icmp eq i32 %call5.i, 0
  br i1 %tobool.not, label %__mnt_want_write_file.exit.if.end_crit_edge, label %__mnt_want_write_file.exit.if.then_crit_edge

__mnt_want_write_file.exit.if.then_crit_edge:     ; preds = %__mnt_want_write_file.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then

__mnt_want_write_file.exit.if.end_crit_edge:      ; preds = %__mnt_want_write_file.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %__mnt_want_write_file.exit.if.then_crit_edge, %__mnt_is_readonly.exit.i.if.then_crit_edge, %if.then.i.if.then_crit_edge
  %retval.0.i14 = phi i32 [ %call5.i, %__mnt_want_write_file.exit.if.then_crit_edge ], [ -30, %if.then.i.if.then_crit_edge ], [ -30, %__mnt_is_readonly.exit.i.if.then_crit_edge ]
  %14 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %f_inode.i, align 8
  %i_sb3 = getelementptr inbounds %struct.inode, ptr %15, i32 0, i32 8
  %16 = ptrtoint ptr %i_sb3 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %i_sb3, align 4
  tail call fastcc void @sb_end_write(ptr noundef %17)
  br label %if.end

if.end:                                           ; preds = %if.then, %__mnt_want_write_file.exit.if.end_crit_edge, %__mnt_is_readonly.exit.i.if.end_crit_edge
  %retval.0.i10 = phi i32 [ %retval.0.i14, %if.then ], [ 0, %__mnt_want_write_file.exit.if.end_crit_edge ], [ 0, %__mnt_is_readonly.exit.i.if.end_crit_edge ]
  ret i32 %retval.0.i10
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__mnt_drop_write(ptr nocapture noundef readonly %mnt) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !357
  %4 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %mnt_pcp.i = getelementptr i8, ptr %mnt, i32 24
  %5 = ptrtoint ptr %mnt_pcp.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mnt_pcp.i, align 4
  %mnt_writers.i = getelementptr inbounds %struct.mnt_pcp, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %mnt_writers.i to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.i, align 4
  %add.i5 = add i32 %13, %7
  %14 = inttoptr i32 %add.i5 to ptr
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %add13.i = add i32 %16, -1
  store i32 %add13.i, ptr %14, align 4
  %17 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i6 = and i32 %17, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i6)
  %tobool.not.i = icmp eq i32 %and.i.i.i6, 0
  br i1 %tobool.not.i, label %if.then.i, label %entry.mnt_dec_writers.exit_crit_edge, !prof !343

entry.mnt_dec_writers.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_dec_writers.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @warn_bogus_irq_restore() #22
  br label %mnt_dec_writers.exit

mnt_dec_writers.exit:                             ; preds = %if.then.i, %entry.mnt_dec_writers.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %4) #22, !srcloc !344
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !358
  %18 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i3 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i3 to ptr
  %preempt_count.i.i4 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i4 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i4, align 4
  %sub.i = add i32 %21, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i4, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mnt_drop_write(ptr nocapture noundef readonly %mnt) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %3, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !357
  %4 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %mnt_pcp.i.i = getelementptr i8, ptr %mnt, i32 24
  %5 = ptrtoint ptr %mnt_pcp.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mnt_pcp.i.i, align 4
  %mnt_writers.i.i = getelementptr inbounds %struct.mnt_pcp, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %mnt_writers.i.i to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.i.i, align 4
  %add.i5.i = add i32 %13, %7
  %14 = inttoptr i32 %add.i5.i to ptr
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %add13.i.i = add i32 %16, -1
  store i32 %add13.i.i, ptr %14, align 4
  %17 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i6.i = and i32 %17, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i6.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i6.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %entry.__mnt_drop_write.exit_crit_edge, !prof !343

entry.__mnt_drop_write.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %__mnt_drop_write.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @warn_bogus_irq_restore() #22
  br label %__mnt_drop_write.exit

__mnt_drop_write.exit:                            ; preds = %if.then.i.i, %entry.__mnt_drop_write.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %4) #22, !srcloc !344
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !358
  %18 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i3.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i3.i to ptr
  %preempt_count.i.i4.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i4.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i4.i, align 4
  %sub.i.i = add i32 %21, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i4.i, align 4
  %mnt_sb = getelementptr inbounds %struct.vfsmount, ptr %mnt, i32 0, i32 1
  %22 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %mnt_sb, align 4
  tail call fastcc void @sb_end_write(ptr noundef %23)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__mnt_drop_write_file(ptr nocapture noundef readonly %file) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %f_mode = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 8
  %0 = ptrtoint ptr %f_mode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %f_mode, align 8
  %and = and i32 %1, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  %f_path = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1
  %2 = ptrtoint ptr %f_path to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %f_path, align 8
  %4 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %7, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !357
  %8 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %mnt_pcp.i.i = getelementptr i8, ptr %3, i32 24
  %9 = ptrtoint ptr %mnt_pcp.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mnt_pcp.i.i, align 4
  %mnt_writers.i.i = getelementptr inbounds %struct.mnt_pcp, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %mnt_writers.i.i to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %15
  %16 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx.i.i, align 4
  %add.i5.i = add i32 %17, %11
  %18 = inttoptr i32 %add.i5.i to ptr
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %18, align 4
  %add13.i.i = add i32 %20, -1
  store i32 %add13.i.i, ptr %18, align 4
  %21 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i6.i = and i32 %21, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i6.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i6.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.then.__mnt_drop_write.exit_crit_edge, !prof !343

if.then.__mnt_drop_write.exit_crit_edge:          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %__mnt_drop_write.exit

if.then.i.i:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @warn_bogus_irq_restore() #22
  br label %__mnt_drop_write.exit

__mnt_drop_write.exit:                            ; preds = %if.then.i.i, %if.then.__mnt_drop_write.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %8) #22, !srcloc !344
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !358
  %22 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i3.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i3.i to ptr
  %preempt_count.i.i4.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i4.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i4.i, align 4
  %sub.i.i = add i32 %25, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i4.i, align 4
  br label %if.end

if.end:                                           ; preds = %__mnt_drop_write.exit, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mnt_drop_write_file(ptr nocapture noundef readonly %file) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %f_mode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 8
  %0 = ptrtoint ptr %f_mode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %f_mode.i, align 8
  %and.i = and i32 %1, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %entry.__mnt_drop_write_file.exit_crit_edge

entry.__mnt_drop_write_file.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %__mnt_drop_write_file.exit

if.then.i:                                        ; preds = %entry
  %f_path.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1
  %2 = ptrtoint ptr %f_path.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %f_path.i, align 8
  %4 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %7, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !357
  %8 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %mnt_pcp.i.i.i = getelementptr i8, ptr %3, i32 24
  %9 = ptrtoint ptr %mnt_pcp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mnt_pcp.i.i.i, align 4
  %mnt_writers.i.i.i = getelementptr inbounds %struct.mnt_pcp, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %mnt_writers.i.i.i to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i.i to ptr
  %cpu.i.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cpu.i.i.i, align 4
  %arrayidx.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %15
  %16 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx.i.i.i, align 4
  %add.i5.i.i = add i32 %17, %11
  %18 = inttoptr i32 %add.i5.i.i to ptr
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %18, align 4
  %add13.i.i.i = add i32 %20, -1
  store i32 %add13.i.i.i, ptr %18, align 4
  %21 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i6.i.i = and i32 %21, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i6.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i6.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.then.i.__mnt_drop_write.exit.i_crit_edge, !prof !343

if.then.i.__mnt_drop_write.exit.i_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__mnt_drop_write.exit.i

if.then.i.i.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @warn_bogus_irq_restore() #22
  br label %__mnt_drop_write.exit.i

__mnt_drop_write.exit.i:                          ; preds = %if.then.i.i.i, %if.then.i.__mnt_drop_write.exit.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %8) #22, !srcloc !344
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !358
  %22 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i3.i.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i3.i.i to ptr
  %preempt_count.i.i4.i.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i4.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i4.i.i, align 4
  %sub.i.i.i = add i32 %25, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i4.i.i, align 4
  br label %__mnt_drop_write_file.exit

__mnt_drop_write_file.exit:                       ; preds = %__mnt_drop_write.exit.i, %entry.__mnt_drop_write_file.exit_crit_edge
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %26 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %f_inode.i, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %27, i32 0, i32 8
  %28 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %i_sb, align 4
  tail call fastcc void @sb_end_write(ptr noundef %29)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sb_prepare_remount_readonly(ptr noundef %sb) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %s_remove_count = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 47
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_remove_count, i32 noundef 4) #22
  %0 = ptrtoint ptr %s_remove_count to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %s_remove_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %2 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %2, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %3 = tail call ptr @llvm.returnaddress(i32 0) #22
  %4 = ptrtoint ptr %3 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %4) #22
  %s_mounts = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 25
  %5 = ptrtoint ptr %s_mounts to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn88 = load ptr, ptr %s_mounts, align 4
  %cmp.not89 = icmp eq ptr %.pn88, %s_mounts
  br i1 %cmp.not89, label %if.end.land.lhs.true_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.land.lhs.true_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.lhs.true

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end.for.body_crit_edge
  %.pn90 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn88, %if.end.for.body_crit_edge ]
  %mnt_flags = getelementptr i8, ptr %.pn90, i32 -36
  %6 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mnt_flags, align 4
  %and = and i32 %7, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %if.then4, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.then4:                                         ; preds = %for.body
  %or = or i32 %7, 512
  %8 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or, ptr %mnt_flags, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %9 = load i32, ptr @nr_cpu_ids, align 4
  %call6.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__sanitizer_cov_trace_cmp4(i32 %call6.i, i32 %9)
  %cmp7.i = icmp ult i32 %call6.i, %9
  br i1 %cmp7.i, label %do.body.lr.ph.i, label %if.then4.for.inc_crit_edge

if.then4.for.inc_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

do.body.lr.ph.i:                                  ; preds = %if.then4
  %mnt_pcp.i = getelementptr i8, ptr %.pn90, i32 -20
  %10 = ptrtoint ptr %mnt_pcp.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mnt_pcp.i, align 4
  %12 = ptrtoint ptr %11 to i32
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %do.body.lr.ph.i
  %call9.i = phi i32 [ %call6.i, %do.body.lr.ph.i ], [ %call.i, %do.body.i.do.body.i_crit_edge ]
  %count.08.i = phi i32 [ 0, %do.body.lr.ph.i ], [ %add2.i, %do.body.i.do.body.i_crit_edge ]
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call9.i
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %14, %12
  %15 = inttoptr i32 %add.i to ptr
  %mnt_writers.i = getelementptr inbounds %struct.mnt_pcp, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %mnt_writers.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %mnt_writers.i, align 4
  %add2.i = add i32 %17, %count.08.i
  %call.i = tail call i32 @cpumask_next(i32 noundef %call9.i, ptr noundef nonnull @__cpu_possible_mask) #25
  %cmp.i = icmp ult i32 %call.i, %9
  br i1 %cmp.i, label %do.body.i.do.body.i_crit_edge, label %mnt_get_writers.exit

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body.i

mnt_get_writers.exit:                             ; preds = %do.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add2.i)
  %cmp11.not = icmp eq i32 %add2.i, 0
  br i1 %cmp11.not, label %mnt_get_writers.exit.for.inc_crit_edge, label %mnt_get_writers.exit.if.end34_crit_edge

mnt_get_writers.exit.if.end34_crit_edge:          ; preds = %mnt_get_writers.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end34

mnt_get_writers.exit.for.inc_crit_edge:           ; preds = %mnt_get_writers.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

for.inc:                                          ; preds = %mnt_get_writers.exit.for.inc_crit_edge, %if.then4.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %18 = ptrtoint ptr %.pn90 to i32
  call void @__asan_load4_noabort(i32 %18)
  %.pn = load ptr, ptr %.pn90, align 4
  %cmp.not = icmp eq ptr %.pn, %s_mounts
  br i1 %cmp.not, label %for.inc.land.lhs.true_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.land.lhs.true_crit_edge:                  ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %for.inc.land.lhs.true_crit_edge, %if.end.land.lhs.true_crit_edge
  %call.i.i80 = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_remove_count, i32 noundef 4) #22
  %19 = ptrtoint ptr %s_remove_count to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %s_remove_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool23.not = icmp eq i32 %20, 0
  br i1 %tobool23.not, label %if.then27, label %land.lhs.true.if.end34_crit_edge

land.lhs.true.if.end34_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end34

if.then27:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  %s_readonly_remount = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 49
  %21 = ptrtoint ptr %s_readonly_remount to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 1, ptr %s_readonly_remount, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !361
  br label %if.end34

if.end34:                                         ; preds = %if.then27, %land.lhs.true.if.end34_crit_edge, %mnt_get_writers.exit.if.end34_crit_edge
  %err.186 = phi i32 [ 0, %if.then27 ], [ -16, %land.lhs.true.if.end34_crit_edge ], [ -16, %mnt_get_writers.exit.if.end34_crit_edge ]
  %22 = ptrtoint ptr %s_mounts to i32
  call void @__asan_load4_noabort(i32 %22)
  %.pn7992 = load ptr, ptr %s_mounts, align 4
  %cmp43.not93 = icmp eq ptr %.pn7992, %s_mounts
  br i1 %cmp43.not93, label %if.end34.for.end61_crit_edge, label %if.end34.for.body45_crit_edge

if.end34.for.body45_crit_edge:                    ; preds = %if.end34
  br label %for.body45

if.end34.for.end61_crit_edge:                     ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end61

for.body45:                                       ; preds = %for.inc55.for.body45_crit_edge, %if.end34.for.body45_crit_edge
  %.pn7994 = phi ptr [ %.pn79, %for.inc55.for.body45_crit_edge ], [ %.pn7992, %if.end34.for.body45_crit_edge ]
  %mnt_flags47 = getelementptr i8, ptr %.pn7994, i32 -36
  %23 = ptrtoint ptr %mnt_flags47 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %mnt_flags47, align 4
  %and48 = and i32 %24, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and48)
  %tobool49.not = icmp eq i32 %and48, 0
  br i1 %tobool49.not, label %for.body45.for.inc55_crit_edge, label %if.then50

for.body45.for.inc55_crit_edge:                   ; preds = %for.body45
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc55

if.then50:                                        ; preds = %for.body45
  call void @__sanitizer_cov_trace_pc() #24
  %and53 = and i32 %24, -513
  %25 = ptrtoint ptr %mnt_flags47 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %and53, ptr %mnt_flags47, align 4
  br label %for.inc55

for.inc55:                                        ; preds = %if.then50, %for.body45.for.inc55_crit_edge
  %26 = ptrtoint ptr %.pn7994 to i32
  call void @__asan_load4_noabort(i32 %26)
  %.pn79 = load ptr, ptr %.pn7994, align 4
  %cmp43.not = icmp eq ptr %.pn79, %s_mounts
  br i1 %cmp43.not, label %for.inc55.for.end61_crit_edge, label %for.inc55.for.body45_crit_edge

for.inc55.for.body45_crit_edge:                   ; preds = %for.inc55
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body45

for.inc55.for.end61_crit_edge:                    ; preds = %for.inc55
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end61

for.end61:                                        ; preds = %for.inc55.for.end61_crit_edge, %if.end34.for.end61_crit_edge
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %27 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i = add i32 %27, 1
  store i32 %inc.i.i.i.i, ptr @mount_lock, align 128
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  br label %cleanup

cleanup:                                          ; preds = %for.end61, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.186, %for.end61 ], [ -16, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @lock_mount_hash() unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %0 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i = add i32 %0, 1
  store i32 %inc.i.i.i.i, ptr @mount_lock, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %1 = tail call ptr @llvm.returnaddress(i32 0) #22
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %2) #22
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @unlock_mount_hash() unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  %0 = tail call ptr @llvm.returnaddress(i32 0) #22
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %1) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %2 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i = add i32 %2, 1
  store i32 %inc.i.i.i, ptr @mount_lock, align 128
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__legitimize_mnt(ptr noundef readonly %bastard, i32 noundef %seq) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !363
  %0 = load volatile i32, ptr @mount_lock, align 128
  call void @__sanitizer_cov_trace_cmp4(i32 %0, i32 %seq)
  %cmp.i.i.i.not = icmp eq i32 %0, %seq
  br i1 %cmp.i.i.i.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %cmp = icmp eq ptr %bastard, null
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %add.ptr.i = getelementptr i8, ptr %bastard, i32 -16
  %1 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %mnt_pcp.i = getelementptr i8, ptr %bastard, i32 24
  %2 = ptrtoint ptr %mnt_pcp.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mnt_pcp.i, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %10, %4
  %11 = inttoptr i32 %add.i to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %add13.i = add i32 %13, 1
  store i32 %add13.i, ptr %11, align 4
  %14 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i = and i32 %14, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end2.mnt_add_count.exit_crit_edge, !prof !343

if.end2.mnt_add_count.exit_crit_edge:             ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_add_count.exit

if.then.i:                                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @warn_bogus_irq_restore() #22
  br label %mnt_add_count.exit

mnt_add_count.exit:                               ; preds = %if.then.i, %if.end2.mnt_add_count.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %1) #22, !srcloc !344
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !364
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !363
  %15 = load volatile i32, ptr @mount_lock, align 128
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %seq)
  %cmp.i.i.i34.not = icmp eq i32 %15, %seq
  br i1 %cmp.i.i.i34.not, label %mnt_add_count.exit.cleanup_crit_edge, label %if.end13, !prof !352

mnt_add_count.exit.cleanup_crit_edge:             ; preds = %mnt_add_count.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end13:                                         ; preds = %mnt_add_count.exit
  %mnt_flags = getelementptr inbounds %struct.vfsmount, ptr %bastard, i32 0, i32 2
  %16 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %mnt_flags, align 4
  %and = and i32 %17, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool14.not = icmp eq i32 %and, 0
  br i1 %tobool14.not, label %if.end16, label %if.then15

if.then15:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @mnt_add_count(ptr noundef %add.ptr.i, i32 noundef -1)
  br label %cleanup

if.end16:                                         ; preds = %if.end13
  tail call fastcc void @lock_mount_hash()
  %18 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %mnt_flags, align 4
  %and18 = and i32 %19, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18)
  %tobool19.not = icmp eq i32 %and18, 0
  br i1 %tobool19.not, label %if.end27, label %if.then26, !prof !352

if.then26:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @mnt_add_count(ptr noundef %add.ptr.i, i32 noundef -1)
  tail call fastcc void @unlock_mount_hash()
  br label %cleanup

if.end27:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @unlock_mount_hash()
  br label %cleanup

cleanup:                                          ; preds = %if.end27, %if.then26, %if.then15, %mnt_add_count.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %if.then15 ], [ 1, %if.then26 ], [ -1, %if.end27 ], [ 1, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %mnt_add_count.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mnt_add_count(ptr nocapture noundef readonly %mnt, i32 noundef %n) unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %mnt_pcp = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 5
  %1 = ptrtoint ptr %mnt_pcp to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %mnt_pcp, align 4
  %3 = ptrtoint ptr %2 to i32
  %4 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %7
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx, align 4
  %add = add i32 %9, %3
  %10 = inttoptr i32 %add to ptr
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 4
  %add13 = add i32 %12, %n
  store i32 %add13, ptr %10, align 4
  %13 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i = and i32 %13, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not, label %if.then, label %entry.do.end28_crit_edge, !prof !343

entry.do.end28_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end28

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @warn_bogus_irq_restore() #22
  br label %do.end28

do.end28:                                         ; preds = %if.then, %entry.do.end28_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #22, !srcloc !344
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @legitimize_mnt(ptr noundef %bastard, i32 noundef %seq) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @__legitimize_mnt(ptr noundef %bastard, i32 noundef %seq)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end, !prof !352

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then10, label %if.end.cleanup_crit_edge, !prof !343

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then10:                                        ; preds = %if.end
  tail call fastcc void @rcu_read_unlock()
  %tobool.not.i14 = icmp eq ptr %bastard, null
  br i1 %tobool.not.i14, label %if.then10.mntput.exit_crit_edge, label %if.then.i15

if.then10.mntput.exit_crit_edge:                  ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #24
  br label %mntput.exit

if.then.i15:                                      ; preds = %if.then10
  %add.ptr.i.i = getelementptr i8, ptr %bastard, i32 -16
  %mnt_expiry_mark.i = getelementptr i8, ptr %bastard, i32 140
  %0 = ptrtoint ptr %mnt_expiry_mark.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mnt_expiry_mark.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool1.not.i = icmp eq i32 %1, 0
  br i1 %tobool1.not.i, label %if.then.i15.if.end.i_crit_edge, label %if.then4.i, !prof !352

if.then.i15.if.end.i_crit_edge:                   ; preds = %if.then.i15
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i

if.then4.i:                                       ; preds = %if.then.i15
  call void @__sanitizer_cov_trace_pc() #24
  %2 = ptrtoint ptr %mnt_expiry_mark.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %mnt_expiry_mark.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then4.i, %if.then.i15.if.end.i_crit_edge
  tail call fastcc void @mntput_no_expire(ptr noundef %add.ptr.i.i) #22
  br label %mntput.exit

mntput.exit:                                      ; preds = %if.end.i, %if.then10.mntput.exit_crit_edge
  %3 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %6, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !365
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #22
  %call.i = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i, label %mntput.exit.cleanup_crit_edge, label %land.lhs.true.i

mntput.exit.cleanup_crit_edge:                    ; preds = %mntput.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

land.lhs.true.i:                                  ; preds = %mntput.exit
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.cleanup_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.cleanup_crit_edge, label %if.then.i

land.lhs.true2.i.cleanup_crit_edge:               ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 696, ptr noundef nonnull @.str.47) #22
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %land.lhs.true2.i.cleanup_crit_edge, %land.lhs.true.i.cleanup_crit_edge, %mntput.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret i1 %tobool.not
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_read_unlock() unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  %call = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call, label %entry.do.end_crit_edge, label %land.lhs.true

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true2

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %.b4 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4, label %land.lhs.true2.do.end_crit_edge, label %if.then

land.lhs.true2.do.end_crit_edge:                  ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

if.then:                                          ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 724, ptr noundef nonnull @.str.46) #22
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true2.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !366
  %0 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %3, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void @rcu_read_unlock_strict() #22
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mntput(ptr noundef %mnt) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %mnt, null
  br i1 %tobool.not, label %entry.if.end6_crit_edge, label %if.then

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end6

if.then:                                          ; preds = %entry
  %add.ptr.i = getelementptr i8, ptr %mnt, i32 -16
  %mnt_expiry_mark = getelementptr i8, ptr %mnt, i32 140
  %0 = ptrtoint ptr %mnt_expiry_mark to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mnt_expiry_mark, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool1.not = icmp eq i32 %1, 0
  br i1 %tobool1.not, label %if.then.if.end_crit_edge, label %if.then4, !prof !352

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then4:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  %2 = ptrtoint ptr %mnt_expiry_mark to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %mnt_expiry_mark, align 4
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then.if.end_crit_edge
  tail call fastcc void @mntput_no_expire(ptr noundef %add.ptr.i)
  br label %if.end6

if.end6:                                          ; preds = %if.end, %entry.if.end6_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__lookup_mnt(ptr noundef %mnt, ptr noundef %dentry) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %mnt to i32
  %div6.i = lshr i32 %0, 7
  %1 = ptrtoint ptr %dentry to i32
  %div17.i = lshr i32 %1, 7
  %add.i = add nuw nsw i32 %div17.i, %div6.i
  %2 = load i32, ptr @m_hash_shift, align 4
  %shr.i = lshr i32 %add.i, %2
  %add2.i = add nuw nsw i32 %shr.i, %add.i
  %3 = load ptr, ptr @mount_hashtable, align 4
  %4 = load i32, ptr @m_hash_mask, align 4
  %and.i = and i32 %add2.i, %4
  %arrayidx.i = getelementptr %struct.hlist_head, ptr %3, i32 %and.i
  %call1 = tail call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.do.end_crit_edge

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true4

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b44 = load i1, ptr @__lookup_mnt.__warned, align 1
  br i1 %.b44, label %land.lhs.true4.do.end_crit_edge, label %if.then

land.lhs.true4.do.end_crit_edge:                  ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @__lookup_mnt.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 660, ptr noundef nonnull @.str.3) #22
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true4.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %p.046 = load volatile ptr, ptr %arrayidx.i, align 4
  %tobool13.not47 = icmp eq ptr %p.046, null
  br i1 %tobool13.not47, label %do.end.cleanup_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %do.end.for.body_crit_edge
  %p.048 = phi ptr [ %p.0, %for.inc.for.body_crit_edge ], [ %p.046, %do.end.for.body_crit_edge ]
  %mnt_parent = getelementptr inbounds %struct.mount, ptr %p.048, i32 0, i32 1
  %6 = ptrtoint ptr %mnt_parent to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mnt_parent, align 4
  %mnt14 = getelementptr inbounds %struct.mount, ptr %7, i32 0, i32 3
  %cmp = icmp eq ptr %mnt14, %mnt
  br i1 %cmp, label %land.lhs.true15, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

land.lhs.true15:                                  ; preds = %for.body
  %mnt_mountpoint = getelementptr inbounds %struct.mount, ptr %p.048, i32 0, i32 2
  %8 = ptrtoint ptr %mnt_mountpoint to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mnt_mountpoint, align 4
  %cmp16 = icmp eq ptr %9, %dentry
  br i1 %cmp16, label %land.lhs.true15.cleanup_crit_edge, label %land.lhs.true15.for.inc_crit_edge

land.lhs.true15.for.inc_crit_edge:                ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

land.lhs.true15.cleanup_crit_edge:                ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

for.inc:                                          ; preds = %land.lhs.true15.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %10 = ptrtoint ptr %p.048 to i32
  call void @__asan_load4_noabort(i32 %10)
  %p.0 = load volatile ptr, ptr %p.048, align 4
  %tobool13.not = icmp eq ptr %p.0, null
  br i1 %tobool13.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %land.lhs.true15.cleanup_crit_edge, %do.end.cleanup_crit_edge
  %p.0.lcssa = phi ptr [ null, %do.end.cleanup_crit_edge ], [ null, %for.inc.cleanup_crit_edge ], [ %p.048, %land.lhs.true15.cleanup_crit_edge ]
  ret ptr %p.0.lcssa
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_any_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @lookup_mnt(ptr nocapture noundef readonly %path) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !365
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #22
  %call.i = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 696, ptr noundef nonnull @.str.47) #22
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %dentry = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  br label %do.body

do.body:                                          ; preds = %__lookup_mnt.exit.do.body_crit_edge, %rcu_read_lock.exit
  %call = tail call fastcc i32 @read_seqbegin()
  %4 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %path, align 4
  %6 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dentry, align 4
  %8 = ptrtoint ptr %5 to i32
  %div6.i.i = lshr i32 %8, 7
  %9 = ptrtoint ptr %7 to i32
  %div17.i.i = lshr i32 %9, 7
  %add.i.i = add nuw nsw i32 %div17.i.i, %div6.i.i
  %10 = load i32, ptr @m_hash_shift, align 4
  %shr.i.i = lshr i32 %add.i.i, %10
  %add2.i.i = add nuw nsw i32 %shr.i.i, %add.i.i
  %11 = load ptr, ptr @mount_hashtable, align 4
  %12 = load i32, ptr @m_hash_mask, align 4
  %and.i.i = and i32 %add2.i.i, %12
  %arrayidx.i.i = getelementptr %struct.hlist_head, ptr %11, i32 %and.i.i
  %call1.i7 = tail call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i7)
  %tobool.not.i8 = icmp eq i32 %call1.i7, 0
  br i1 %tobool.not.i8, label %land.lhs.true.i9, label %do.body.do.end.i_crit_edge

do.body.do.end.i_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i

land.lhs.true.i9:                                 ; preds = %do.body
  %call2.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i9.do.end.i_crit_edge, label %land.lhs.true4.i

land.lhs.true.i9.do.end.i_crit_edge:              ; preds = %land.lhs.true.i9
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i9
  %.b44.i = load i1, ptr @__lookup_mnt.__warned, align 1
  br i1 %.b44.i, label %land.lhs.true4.i.do.end.i_crit_edge, label %if.then.i10

land.lhs.true4.i.do.end.i_crit_edge:              ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i

if.then.i10:                                      ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @__lookup_mnt.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 660, ptr noundef nonnull @.str.3) #22
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i10, %land.lhs.true4.i.do.end.i_crit_edge, %land.lhs.true.i9.do.end.i_crit_edge, %do.body.do.end.i_crit_edge
  %13 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %p.046.i = load volatile ptr, ptr %arrayidx.i.i, align 4
  %tobool13.not47.i = icmp eq ptr %p.046.i, null
  br i1 %tobool13.not47.i, label %do.end.i.__lookup_mnt.exit_crit_edge, label %do.end.i.for.body.i_crit_edge

do.end.i.for.body.i_crit_edge:                    ; preds = %do.end.i
  br label %for.body.i

do.end.i.__lookup_mnt.exit_crit_edge:             ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__lookup_mnt.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %do.end.i.for.body.i_crit_edge
  %p.048.i = phi ptr [ %p.0.i, %for.inc.i.for.body.i_crit_edge ], [ %p.046.i, %do.end.i.for.body.i_crit_edge ]
  %mnt_parent.i = getelementptr inbounds %struct.mount, ptr %p.048.i, i32 0, i32 1
  %14 = ptrtoint ptr %mnt_parent.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mnt_parent.i, align 4
  %mnt14.i = getelementptr inbounds %struct.mount, ptr %15, i32 0, i32 3
  %cmp.i = icmp eq ptr %mnt14.i, %5
  br i1 %cmp.i, label %land.lhs.true15.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

land.lhs.true15.i:                                ; preds = %for.body.i
  %mnt_mountpoint.i = getelementptr inbounds %struct.mount, ptr %p.048.i, i32 0, i32 2
  %16 = ptrtoint ptr %mnt_mountpoint.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %mnt_mountpoint.i, align 4
  %cmp16.i = icmp eq ptr %17, %7
  br i1 %cmp16.i, label %land.lhs.true15.i.__lookup_mnt.exit_crit_edge, label %land.lhs.true15.i.for.inc.i_crit_edge

land.lhs.true15.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true15.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

land.lhs.true15.i.__lookup_mnt.exit_crit_edge:    ; preds = %land.lhs.true15.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__lookup_mnt.exit

for.inc.i:                                        ; preds = %land.lhs.true15.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %18 = ptrtoint ptr %p.048.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %p.0.i = load volatile ptr, ptr %p.048.i, align 4
  %tobool13.not.i = icmp eq ptr %p.0.i, null
  br i1 %tobool13.not.i, label %for.inc.i.__lookup_mnt.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i

for.inc.i.__lookup_mnt.exit_crit_edge:            ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__lookup_mnt.exit

__lookup_mnt.exit:                                ; preds = %for.inc.i.__lookup_mnt.exit_crit_edge, %land.lhs.true15.i.__lookup_mnt.exit_crit_edge, %do.end.i.__lookup_mnt.exit_crit_edge
  %p.0.lcssa.i = phi ptr [ null, %do.end.i.__lookup_mnt.exit_crit_edge ], [ %p.048.i, %land.lhs.true15.i.__lookup_mnt.exit_crit_edge ], [ null, %for.inc.i.__lookup_mnt.exit_crit_edge ]
  %tobool.not = icmp eq ptr %p.0.lcssa.i, null
  %mnt2 = getelementptr inbounds %struct.mount, ptr %p.0.lcssa.i, i32 0, i32 3
  %spec.select = select i1 %tobool.not, ptr null, ptr %mnt2
  %call3 = tail call zeroext i1 @legitimize_mnt(ptr noundef %spec.select, i32 noundef %call)
  br i1 %call3, label %do.end, label %__lookup_mnt.exit.do.body_crit_edge

__lookup_mnt.exit.do.body_crit_edge:              ; preds = %__lookup_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body

do.end:                                           ; preds = %__lookup_mnt.exit
  %call.i11 = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i11, label %do.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i14

do.end.rcu_read_unlock.exit_crit_edge:            ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

land.lhs.true.i14:                                ; preds = %do.end
  %call1.i12 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i12)
  %tobool.not.i13 = icmp eq i32 %call1.i12, 0
  br i1 %tobool.not.i13, label %land.lhs.true.i14.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i16

land.lhs.true.i14.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i14
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

land.lhs.true2.i16:                               ; preds = %land.lhs.true.i14
  %.b4.i15 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i15, label %land.lhs.true2.i16.rcu_read_unlock.exit_crit_edge, label %if.then.i17

land.lhs.true2.i16.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i16
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

if.then.i17:                                      ; preds = %land.lhs.true2.i16
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 724, ptr noundef nonnull @.str.46) #22
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i17, %land.lhs.true2.i16.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i14.rcu_read_unlock.exit_crit_edge, %do.end.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !366
  %19 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i.i18 = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i.i.i18 to ptr
  %preempt_count.i.i.i.i19 = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %preempt_count.i.i.i.i19 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %preempt_count.i.i.i.i19, align 4
  %sub.i.i.i = add i32 %22, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i19, align 4
  tail call void @rcu_read_unlock_strict() #22
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #22
  ret ptr %spec.select
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @read_seqbegin() unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %and.i.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %do.body24.critedge.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @trace_hardirqs_off() #22
  %1 = tail call ptr @llvm.returnaddress(i32 0) #22
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %2) #22
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %2) #22
  tail call void @trace_hardirqs_on() #22
  br label %do.body24.i

do.body24.critedge.i:                             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %3 = tail call ptr @llvm.returnaddress(i32 0) #22
  %4 = ptrtoint ptr %3 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %4) #22
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %4) #22
  br label %do.body24.i

do.body24.i:                                      ; preds = %do.body24.critedge.i, %if.then.i
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool32.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool32.not.i, label %if.then36.i, label %do.body24.i.seqcount_lockdep_reader_access.exit_crit_edge, !prof !343

do.body24.i.seqcount_lockdep_reader_access.exit_crit_edge: ; preds = %do.body24.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %seqcount_lockdep_reader_access.exit

if.then36.i:                                      ; preds = %do.body24.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @warn_bogus_irq_restore() #22
  br label %seqcount_lockdep_reader_access.exit

seqcount_lockdep_reader_access.exit:              ; preds = %if.then36.i, %do.body24.i.seqcount_lockdep_reader_access.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #22, !srcloc !344
  %6 = load volatile i32, ptr @mount_lock, align 128
  %and1 = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool.not2 = icmp eq i32 %and1, 0
  br i1 %tobool.not2, label %seqcount_lockdep_reader_access.exit.while.end_crit_edge, label %seqcount_lockdep_reader_access.exit.do.end_crit_edge

seqcount_lockdep_reader_access.exit.do.end_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit
  br label %do.end

seqcount_lockdep_reader_access.exit.while.end_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

do.end:                                           ; preds = %do.end.do.end_crit_edge, %seqcount_lockdep_reader_access.exit.do.end_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !367
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #22, !srcloc !368
  %7 = load volatile i32, ptr @mount_lock, align 128
  %and = and i32 %7, 1
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.end.while.end_crit_edge, label %do.end.do.end_crit_edge

do.end.do.end_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end

do.end.while.end_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.end:                                        ; preds = %do.end.while.end_crit_edge, %seqcount_lockdep_reader_access.exit.while.end_crit_edge
  %.lcssa = phi i32 [ %6, %seqcount_lockdep_reader_access.exit.while.end_crit_edge ], [ %7, %do.end.while.end_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !369
  ret i32 %.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @__is_local_mountpoint(ptr noundef readnone %dentry) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %nsproxy = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 110
  %4 = ptrtoint ptr %nsproxy to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nsproxy, align 4
  %mnt_ns = getelementptr inbounds %struct.nsproxy, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mnt_ns, align 4
  tail call void @down_read(ptr noundef nonnull @namespace_sem) #22
  %ns_lock.i = getelementptr inbounds %struct.mnt_namespace, ptr %7, i32 0, i32 3
  tail call void @_raw_spin_lock(ptr noundef %ns_lock.i) #22
  %list = getelementptr inbounds %struct.mnt_namespace, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %8)
  %.pn25 = load ptr, ptr %list, align 4
  %cmp.not26 = icmp eq ptr %.pn25, %list
  br i1 %cmp.not26, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn27 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn25, %entry.for.body_crit_edge ]
  %mnt_flags.i = getelementptr i8, ptr %.pn27, i32 -48
  %9 = ptrtoint ptr %mnt_flags.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %mnt_flags.i, align 4
  %and.i23 = and i32 %10, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i23)
  %tobool.i.not = icmp eq i32 %and.i23, 0
  br i1 %tobool.i.not, label %if.end, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end:                                           ; preds = %for.body
  %mnt_mountpoint = getelementptr i8, ptr %.pn27, i32 -60
  %11 = ptrtoint ptr %mnt_mountpoint to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %mnt_mountpoint, align 4
  %cmp3 = icmp eq ptr %12, %dentry
  br i1 %cmp3, label %if.end.for.end_crit_edge, label %if.end.for.inc_crit_edge

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.inc:                                          ; preds = %if.end.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %13 = ptrtoint ptr %.pn27 to i32
  call void @__asan_load4_noabort(i32 %13)
  %.pn = load ptr, ptr %.pn27, align 4
  %cmp.not = icmp eq ptr %.pn, %list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end.for.end_crit_edge, %entry.for.end_crit_edge
  %cmp.not.lcssa = phi i1 [ false, %entry.for.end_crit_edge ], [ true, %if.end.for.end_crit_edge ], [ false, %for.inc.for.end_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %ns_lock.i) #22
  tail call void @up_read(ptr noundef nonnull @namespace_sem) #22
  ret i1 %cmp.not.lcssa
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mnt_set_mountpoint(ptr noundef %mnt, ptr noundef %mp, ptr noundef %child_mnt) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %m_count = getelementptr inbounds %struct.mountpoint, ptr %mp, i32 0, i32 3
  %0 = ptrtoint ptr %m_count to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %m_count, align 4
  %inc = add i32 %1, 1
  store i32 %inc, ptr %m_count, align 4
  %2 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %mnt_pcp.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 5
  %3 = ptrtoint ptr %mnt_pcp.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mnt_pcp.i, align 4
  %5 = ptrtoint ptr %4 to i32
  %6 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %9
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %11, %5
  %12 = inttoptr i32 %add.i to ptr
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %12, align 4
  %add13.i = add i32 %14, 1
  store i32 %add13.i, ptr %12, align 4
  %15 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i = and i32 %15, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %entry.mnt_add_count.exit_crit_edge, !prof !343

entry.mnt_add_count.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_add_count.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @warn_bogus_irq_restore() #22
  br label %mnt_add_count.exit

mnt_add_count.exit:                               ; preds = %if.then.i, %entry.mnt_add_count.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %2) #22, !srcloc !344
  %m_dentry = getelementptr inbounds %struct.mountpoint, ptr %mp, i32 0, i32 1
  %16 = ptrtoint ptr %m_dentry to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %m_dentry, align 4
  %mnt_mountpoint = getelementptr inbounds %struct.mount, ptr %child_mnt, i32 0, i32 2
  %18 = ptrtoint ptr %mnt_mountpoint to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %17, ptr %mnt_mountpoint, align 4
  %mnt_parent = getelementptr inbounds %struct.mount, ptr %child_mnt, i32 0, i32 1
  %19 = ptrtoint ptr %mnt_parent to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %mnt, ptr %mnt_parent, align 4
  %mnt_mp = getelementptr inbounds %struct.mount, ptr %child_mnt, i32 0, i32 17
  %20 = ptrtoint ptr %mnt_mp to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %mp, ptr %mnt_mp, align 4
  %21 = getelementptr inbounds %struct.mount, ptr %child_mnt, i32 0, i32 18
  %m_list = getelementptr inbounds %struct.mountpoint, ptr %mp, i32 0, i32 2
  %22 = ptrtoint ptr %m_list to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %m_list, align 4
  %24 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %23, ptr %21, align 4
  %tobool.not.i8 = icmp eq ptr %23, null
  br i1 %tobool.not.i8, label %mnt_add_count.exit.hlist_add_head.exit_crit_edge, label %do.body12.i

mnt_add_count.exit.hlist_add_head.exit_crit_edge: ; preds = %mnt_add_count.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_add_head.exit

do.body12.i:                                      ; preds = %mnt_add_count.exit
  call void @__sanitizer_cov_trace_pc() #24
  %pprev.i = getelementptr inbounds %struct.hlist_node, ptr %23, i32 0, i32 1
  %25 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %21, ptr %pprev.i, align 4
  br label %hlist_add_head.exit

hlist_add_head.exit:                              ; preds = %do.body12.i, %mnt_add_count.exit.hlist_add_head.exit_crit_edge
  %26 = ptrtoint ptr %m_list to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %21, ptr %m_list, align 4
  %pprev34.i = getelementptr inbounds %struct.mount, ptr %child_mnt, i32 0, i32 18, i32 0, i32 1
  %27 = ptrtoint ptr %pprev34.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %m_list, ptr %pprev34.i, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mnt_change_mountpoint(ptr noundef %parent, ptr noundef %mp, ptr noundef %mnt) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %mnt_mp = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 17
  %0 = ptrtoint ptr %mnt_mp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mnt_mp, align 4
  %mnt_parent = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 1
  %2 = ptrtoint ptr %mnt_parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mnt_parent, align 4
  %mnt_child = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 7
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %mnt_child) #22
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_del_init.exit_crit_edge

entry.list_del_init.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 7, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i, align 4
  %6 = ptrtoint ptr %mnt_child to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mnt_child, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev1.i.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %7, ptr %5, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %entry.list_del_init.exit_crit_edge
  %10 = ptrtoint ptr %mnt_child to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %mnt_child, ptr %mnt_child, align 4
  %prev.i3.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 7, i32 1
  %11 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %mnt_child, ptr %prev.i3.i, align 4
  %12 = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 18
  %pprev.i.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 18, i32 0, i32 1
  %13 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pprev.i.i, align 4
  %tobool.not.i.not.i = icmp eq ptr %14, null
  br i1 %tobool.not.i.not.i, label %list_del_init.exit.hlist_del_init.exit_crit_edge, label %if.then.i

list_del_init.exit.hlist_del_init.exit_crit_edge: ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del_init.exit

if.then.i:                                        ; preds = %list_del_init.exit
  %15 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %12, align 4
  %17 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %16, ptr %14, align 4
  %tobool.not.i3.i = icmp eq ptr %16, null
  br i1 %tobool.not.i3.i, label %if.then.i.__hlist_del.exit.i_crit_edge, label %do.body13.i.i

if.then.i.__hlist_del.exit.i_crit_edge:           ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__hlist_del.exit.i

do.body13.i.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i = getelementptr inbounds %struct.hlist_node, ptr %16, i32 0, i32 1
  %18 = ptrtoint ptr %pprev14.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %14, ptr %pprev14.i.i, align 4
  br label %__hlist_del.exit.i

__hlist_del.exit.i:                               ; preds = %do.body13.i.i, %if.then.i.__hlist_del.exit.i_crit_edge
  %19 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %12, align 4
  %20 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %pprev.i.i, align 4
  br label %hlist_del_init.exit

hlist_del_init.exit:                              ; preds = %__hlist_del.exit.i, %list_del_init.exit.hlist_del_init.exit_crit_edge
  %pprev.i.i6 = getelementptr inbounds %struct.hlist_node, ptr %mnt, i32 0, i32 1
  %21 = ptrtoint ptr %pprev.i.i6 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %pprev.i.i6, align 4
  %tobool.not.i.not.i7 = icmp eq ptr %22, null
  br i1 %tobool.not.i.not.i7, label %hlist_del_init.exit.hlist_del_init_rcu.exit_crit_edge, label %if.then.i8

hlist_del_init.exit.hlist_del_init_rcu.exit_crit_edge: ; preds = %hlist_del_init.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del_init_rcu.exit

if.then.i8:                                       ; preds = %hlist_del_init.exit
  %23 = ptrtoint ptr %mnt to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %mnt, align 4
  %25 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %24, ptr %22, align 4
  %tobool.not.i7.i = icmp eq ptr %24, null
  br i1 %tobool.not.i7.i, label %if.then.i8.__hlist_del.exit.i11_crit_edge, label %do.body13.i.i10

if.then.i8.__hlist_del.exit.i11_crit_edge:        ; preds = %if.then.i8
  call void @__sanitizer_cov_trace_pc() #24
  br label %__hlist_del.exit.i11

do.body13.i.i10:                                  ; preds = %if.then.i8
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i9 = getelementptr inbounds %struct.hlist_node, ptr %24, i32 0, i32 1
  %26 = ptrtoint ptr %pprev14.i.i9 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %22, ptr %pprev14.i.i9, align 4
  br label %__hlist_del.exit.i11

__hlist_del.exit.i11:                             ; preds = %do.body13.i.i10, %if.then.i8.__hlist_del.exit.i11_crit_edge
  %27 = ptrtoint ptr %pprev.i.i6 to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr null, ptr %pprev.i.i6, align 4
  br label %hlist_del_init_rcu.exit

hlist_del_init_rcu.exit:                          ; preds = %__hlist_del.exit.i11, %hlist_del_init.exit.hlist_del_init_rcu.exit_crit_edge
  tail call fastcc void @attach_mnt(ptr noundef %mnt, ptr noundef %parent, ptr noundef %mp)
  %m_count.i.i = getelementptr inbounds %struct.mountpoint, ptr %1, i32 0, i32 3
  %28 = ptrtoint ptr %m_count.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %m_count.i.i, align 4
  %dec.i.i = add i32 %29, -1
  store i32 %dec.i.i, ptr %m_count.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i.i)
  %tobool.not.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %hlist_del_init_rcu.exit.put_mountpoint.exit_crit_edge

hlist_del_init_rcu.exit.put_mountpoint.exit_crit_edge: ; preds = %hlist_del_init_rcu.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_mountpoint.exit

if.then.i.i:                                      ; preds = %hlist_del_init_rcu.exit
  %m_dentry.i.i = getelementptr inbounds %struct.mountpoint, ptr %1, i32 0, i32 1
  %30 = ptrtoint ptr %m_dentry.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %m_dentry.i.i, align 4
  %m_list.i.i = getelementptr inbounds %struct.mountpoint, ptr %1, i32 0, i32 2
  %32 = ptrtoint ptr %m_list.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile ptr, ptr %m_list.i.i, align 4
  %tobool.not.i.not.i.i = icmp eq ptr %33, null
  br i1 %tobool.not.i.not.i.i, label %do.end11.i.i, label %do.body6.i.i, !prof !352

do.body6.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namespace.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 821, 0\0A.popsection", ""() #22, !srcloc !370
  unreachable

do.end11.i.i:                                     ; preds = %if.then.i.i
  %d_lockref.i.i = getelementptr inbounds %struct.dentry, ptr %31, i32 0, i32 7
  tail call void @_raw_spin_lock(ptr noundef %d_lockref.i.i) #22
  %34 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %31, align 8
  %and.i.i = and i32 %35, -65537
  store i32 %and.i.i, ptr %31, align 8
  tail call void @_raw_spin_unlock(ptr noundef %d_lockref.i.i) #22
  tail call void @dput_to_list(ptr noundef %31, ptr noundef nonnull @ex_mountpoints) #22
  %36 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %1, align 4
  %pprev2.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %1, i32 0, i32 1
  %38 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %pprev2.i.i.i.i, align 4
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile ptr %37, ptr %39, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %37, null
  br i1 %tobool.not.i.i.i.i, label %do.end11.i.i.hlist_del.exit.i.i_crit_edge, label %do.body13.i.i.i.i

do.end11.i.i.hlist_del.exit.i.i_crit_edge:        ; preds = %do.end11.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del.exit.i.i

do.body13.i.i.i.i:                                ; preds = %do.end11.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %37, i32 0, i32 1
  %41 = ptrtoint ptr %pprev14.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile ptr %39, ptr %pprev14.i.i.i.i, align 4
  br label %hlist_del.exit.i.i

hlist_del.exit.i.i:                               ; preds = %do.body13.i.i.i.i, %do.end11.i.i.hlist_del.exit.i.i_crit_edge
  %42 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr inttoptr (i32 256 to ptr), ptr %1, align 4
  %43 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i.i, align 4
  tail call void @kfree(ptr noundef %1) #22
  br label %put_mountpoint.exit

put_mountpoint.exit:                              ; preds = %hlist_del.exit.i.i, %hlist_del_init_rcu.exit.put_mountpoint.exit_crit_edge
  %44 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %mnt_pcp.i = getelementptr inbounds %struct.mount, ptr %3, i32 0, i32 5
  %45 = ptrtoint ptr %mnt_pcp.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %mnt_pcp.i, align 4
  %47 = ptrtoint ptr %46 to i32
  %48 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i12 = and i32 %48, -16384
  %49 = inttoptr i32 %and.i.i12 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %49, i32 0, i32 3
  %50 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %51
  %52 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %53, %47
  %54 = inttoptr i32 %add.i to ptr
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %54, align 4
  %add13.i = add i32 %56, -1
  store i32 %add13.i, ptr %54, align 4
  %57 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i = and i32 %57, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %if.then.i13, label %put_mountpoint.exit.mnt_add_count.exit_crit_edge, !prof !343

put_mountpoint.exit.mnt_add_count.exit_crit_edge: ; preds = %put_mountpoint.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_add_count.exit

if.then.i13:                                      ; preds = %put_mountpoint.exit
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @warn_bogus_irq_restore() #22
  br label %mnt_add_count.exit

mnt_add_count.exit:                               ; preds = %if.then.i13, %put_mountpoint.exit.mnt_add_count.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %44) #22, !srcloc !344
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @attach_mnt(ptr noundef %mnt, ptr noundef %parent, ptr noundef %mp) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %m_count.i = getelementptr inbounds %struct.mountpoint, ptr %mp, i32 0, i32 3
  %0 = ptrtoint ptr %m_count.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %m_count.i, align 4
  %inc.i = add i32 %1, 1
  store i32 %inc.i, ptr %m_count.i, align 4
  %2 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %mnt_pcp.i.i = getelementptr inbounds %struct.mount, ptr %parent, i32 0, i32 5
  %3 = ptrtoint ptr %mnt_pcp.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mnt_pcp.i.i, align 4
  %5 = ptrtoint ptr %4 to i32
  %6 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %9
  %10 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %11, %5
  %12 = inttoptr i32 %add.i.i to ptr
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %12, align 4
  %add13.i.i = add i32 %14, 1
  store i32 %add13.i.i, ptr %12, align 4
  %15 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i.i = and i32 %15, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %entry.mnt_add_count.exit.i_crit_edge, !prof !343

entry.mnt_add_count.exit.i_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_add_count.exit.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @warn_bogus_irq_restore() #22
  br label %mnt_add_count.exit.i

mnt_add_count.exit.i:                             ; preds = %if.then.i.i, %entry.mnt_add_count.exit.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %2) #22, !srcloc !344
  %m_dentry.i = getelementptr inbounds %struct.mountpoint, ptr %mp, i32 0, i32 1
  %16 = ptrtoint ptr %m_dentry.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %m_dentry.i, align 4
  %mnt_mountpoint.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 2
  %18 = ptrtoint ptr %mnt_mountpoint.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %17, ptr %mnt_mountpoint.i, align 4
  %mnt_parent.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 1
  %19 = ptrtoint ptr %mnt_parent.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %parent, ptr %mnt_parent.i, align 4
  %mnt_mp.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 17
  %20 = ptrtoint ptr %mnt_mp.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %mp, ptr %mnt_mp.i, align 4
  %21 = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 18
  %m_list.i = getelementptr inbounds %struct.mountpoint, ptr %mp, i32 0, i32 2
  %22 = ptrtoint ptr %m_list.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %m_list.i, align 4
  %24 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %23, ptr %21, align 4
  %tobool.not.i8.i = icmp eq ptr %23, null
  br i1 %tobool.not.i8.i, label %mnt_add_count.exit.i.mnt_set_mountpoint.exit_crit_edge, label %do.body12.i.i

mnt_add_count.exit.i.mnt_set_mountpoint.exit_crit_edge: ; preds = %mnt_add_count.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_set_mountpoint.exit

do.body12.i.i:                                    ; preds = %mnt_add_count.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %pprev.i.i = getelementptr inbounds %struct.hlist_node, ptr %23, i32 0, i32 1
  %25 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %21, ptr %pprev.i.i, align 4
  br label %mnt_set_mountpoint.exit

mnt_set_mountpoint.exit:                          ; preds = %do.body12.i.i, %mnt_add_count.exit.i.mnt_set_mountpoint.exit_crit_edge
  %26 = ptrtoint ptr %m_list.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %21, ptr %m_list.i, align 4
  %pprev34.i.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 18, i32 0, i32 1
  %27 = ptrtoint ptr %pprev34.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %m_list.i, ptr %pprev34.i.i, align 4
  %mnt1.i = getelementptr inbounds %struct.mount, ptr %parent, i32 0, i32 3
  %28 = ptrtoint ptr %mnt_mountpoint.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %mnt_mountpoint.i, align 4
  %30 = ptrtoint ptr %mnt1.i to i32
  %div6.i.i = lshr i32 %30, 7
  %31 = ptrtoint ptr %29 to i32
  %div17.i.i = lshr i32 %31, 7
  %add.i.i4 = add nuw nsw i32 %div17.i.i, %div6.i.i
  %32 = load i32, ptr @m_hash_shift, align 4
  %shr.i.i = lshr i32 %add.i.i4, %32
  %add2.i.i = add nuw nsw i32 %shr.i.i, %add.i.i4
  %33 = load ptr, ptr @mount_hashtable, align 4
  %34 = load i32, ptr @m_hash_mask, align 4
  %and.i.i = and i32 %add2.i.i, %34
  %arrayidx.i.i5 = getelementptr %struct.hlist_head, ptr %33, i32 %and.i.i
  %35 = ptrtoint ptr %arrayidx.i.i5 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx.i.i5, align 4
  %37 = ptrtoint ptr %mnt to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %36, ptr %mnt, align 4
  %pprev.i.i6 = getelementptr inbounds %struct.hlist_node, ptr %mnt, i32 0, i32 1
  %38 = ptrtoint ptr %pprev.i.i6 to i32
  call void @__asan_store4_noabort(i32 %38)
  store volatile ptr %arrayidx.i.i5, ptr %pprev.i.i6, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !371
  %39 = ptrtoint ptr %arrayidx.i.i5 to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %mnt, ptr %arrayidx.i.i5, align 4
  %tobool.not.i.i7 = icmp eq ptr %36, null
  br i1 %tobool.not.i.i7, label %mnt_set_mountpoint.exit.hlist_add_head_rcu.exit.i_crit_edge, label %do.body49.i.i

mnt_set_mountpoint.exit.hlist_add_head_rcu.exit.i_crit_edge: ; preds = %mnt_set_mountpoint.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_add_head_rcu.exit.i

do.body49.i.i:                                    ; preds = %mnt_set_mountpoint.exit
  call void @__sanitizer_cov_trace_pc() #24
  %pprev51.i.i = getelementptr inbounds %struct.hlist_node, ptr %36, i32 0, i32 1
  %40 = ptrtoint ptr %pprev51.i.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile ptr %mnt, ptr %pprev51.i.i, align 4
  br label %hlist_add_head_rcu.exit.i

hlist_add_head_rcu.exit.i:                        ; preds = %do.body49.i.i, %mnt_set_mountpoint.exit.hlist_add_head_rcu.exit.i_crit_edge
  %mnt_child.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 7
  %mnt_mounts.i = getelementptr inbounds %struct.mount, ptr %parent, i32 0, i32 6
  %prev.i.i = getelementptr inbounds %struct.mount, ptr %parent, i32 0, i32 6, i32 1
  %41 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %mnt_child.i, ptr noundef %42, ptr noundef %mnt_mounts.i) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %hlist_add_head_rcu.exit.i.__attach_mnt.exit_crit_edge

hlist_add_head_rcu.exit.i.__attach_mnt.exit_crit_edge: ; preds = %hlist_add_head_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__attach_mnt.exit

if.end.i.i.i:                                     ; preds = %hlist_add_head_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %43 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %mnt_child.i, ptr %prev.i.i, align 4
  %44 = ptrtoint ptr %mnt_child.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %mnt_mounts.i, ptr %mnt_child.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 7, i32 1
  %45 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %42, ptr %prev3.i.i.i, align 4
  %46 = ptrtoint ptr %42 to i32
  call void @__asan_store4_noabort(i32 %46)
  store volatile ptr %mnt_child.i, ptr %42, align 4
  br label %__attach_mnt.exit

__attach_mnt.exit:                                ; preds = %if.end.i.i.i, %hlist_add_head_rcu.exit.i.__attach_mnt.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @put_mountpoint(ptr noundef %mp) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %m_count.i = getelementptr inbounds %struct.mountpoint, ptr %mp, i32 0, i32 3
  %0 = ptrtoint ptr %m_count.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %m_count.i, align 4
  %dec.i = add i32 %1, -1
  store i32 %dec.i, ptr %m_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %entry.__put_mountpoint.exit_crit_edge

entry.__put_mountpoint.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %__put_mountpoint.exit

if.then.i:                                        ; preds = %entry
  %m_dentry.i = getelementptr inbounds %struct.mountpoint, ptr %mp, i32 0, i32 1
  %2 = ptrtoint ptr %m_dentry.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %m_dentry.i, align 4
  %m_list.i = getelementptr inbounds %struct.mountpoint, ptr %mp, i32 0, i32 2
  %4 = ptrtoint ptr %m_list.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %m_list.i, align 4
  %tobool.not.i.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i.not.i, label %do.end11.i, label %do.body6.i, !prof !352

do.body6.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namespace.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 821, 0\0A.popsection", ""() #22, !srcloc !370
  unreachable

do.end11.i:                                       ; preds = %if.then.i
  %d_lockref.i = getelementptr inbounds %struct.dentry, ptr %3, i32 0, i32 7
  tail call void @_raw_spin_lock(ptr noundef %d_lockref.i) #22
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %3, align 8
  %and.i = and i32 %7, -65537
  store i32 %and.i, ptr %3, align 8
  tail call void @_raw_spin_unlock(ptr noundef %d_lockref.i) #22
  tail call void @dput_to_list(ptr noundef %3, ptr noundef nonnull @ex_mountpoints) #22
  %8 = ptrtoint ptr %mp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mp, align 4
  %pprev2.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %mp, i32 0, i32 1
  %10 = ptrtoint ptr %pprev2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pprev2.i.i.i, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %9, ptr %11, align 4
  %tobool.not.i.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i.i, label %do.end11.i.hlist_del.exit.i_crit_edge, label %do.body13.i.i.i

do.end11.i.hlist_del.exit.i_crit_edge:            ; preds = %do.end11.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del.exit.i

do.body13.i.i.i:                                  ; preds = %do.end11.i
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %9, i32 0, i32 1
  %13 = ptrtoint ptr %pprev14.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %11, ptr %pprev14.i.i.i, align 4
  br label %hlist_del.exit.i

hlist_del.exit.i:                                 ; preds = %do.body13.i.i.i, %do.end11.i.hlist_del.exit.i_crit_edge
  %14 = ptrtoint ptr %mp to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 256 to ptr), ptr %mp, align 4
  %15 = ptrtoint ptr %pprev2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i, align 4
  tail call void @kfree(ptr noundef %mp) #22
  br label %__put_mountpoint.exit

__put_mountpoint.exit:                            ; preds = %hlist_del.exit.i, %entry.__put_mountpoint.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @vfs_create_mount(ptr nocapture noundef readonly %fc) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %root = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 5
  %0 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %source = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 10
  %2 = ptrtoint ptr %source to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %source, align 4
  %tobool1.not = icmp eq ptr %3, null
  %..str.4 = select i1 %tobool1.not, ptr @.str.4, ptr %3
  %call2 = tail call fastcc ptr @alloc_vfsmnt(ptr noundef %..str.4)
  %tobool3.not = icmp eq ptr %call2, null
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %sb_flags = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 13
  %4 = ptrtoint ptr %sb_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sb_flags, align 4
  %and = and i32 %5, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool7.not = icmp eq i32 %and, 0
  br i1 %tobool7.not, label %if.end6.if.end10_crit_edge, label %if.then8

if.end6.if.end10_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end10

if.then8:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #24
  %mnt_flags = getelementptr inbounds %struct.mount, ptr %call2, i32 0, i32 3, i32 2
  %6 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 16384, ptr %mnt_flags, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.end6.if.end10_crit_edge
  %7 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %root, align 4
  %d_sb = getelementptr inbounds %struct.dentry, ptr %8, i32 0, i32 9
  %9 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %d_sb, align 4
  %s_active = getelementptr inbounds %struct.super_block, ptr %10, i32 0, i32 16
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %s_active, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %s_active, i32 1, i32 3, i32 1) #22
  %11 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %s_active, ptr %s_active, i32 1, ptr elementtype(i32) %s_active) #22, !srcloc !372
  %12 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %root, align 4
  %d_sb13 = getelementptr inbounds %struct.dentry, ptr %13, i32 0, i32 9
  %14 = ptrtoint ptr %d_sb13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %d_sb13, align 4
  %mnt14 = getelementptr inbounds %struct.mount, ptr %call2, i32 0, i32 3
  %mnt_sb = getelementptr inbounds %struct.mount, ptr %call2, i32 0, i32 3, i32 1
  %16 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %15, ptr %mnt_sb, align 4
  %17 = load ptr, ptr %root, align 4
  %tobool.not.i = icmp eq ptr %17, null
  br i1 %tobool.not.i, label %if.end10.dget.exit_crit_edge, label %if.then.i

if.end10.dget.exit_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #24
  br label %dget.exit

if.then.i:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #24
  %d_lockref.i = getelementptr inbounds %struct.dentry, ptr %17, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i) #22
  br label %dget.exit

dget.exit:                                        ; preds = %if.then.i, %if.end10.dget.exit_crit_edge
  %18 = ptrtoint ptr %mnt14 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %17, ptr %mnt14, align 4
  %mnt_mountpoint = getelementptr inbounds %struct.mount, ptr %call2, i32 0, i32 2
  %19 = ptrtoint ptr %mnt_mountpoint to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %17, ptr %mnt_mountpoint, align 4
  %mnt_parent = getelementptr inbounds %struct.mount, ptr %call2, i32 0, i32 1
  %20 = ptrtoint ptr %mnt_parent to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %call2, ptr %mnt_parent, align 4
  %21 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %mnt_sb, align 4
  %s_user_ns = getelementptr inbounds %struct.super_block, ptr %22, i32 0, i32 53
  %23 = ptrtoint ptr %s_user_ns to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %s_user_ns, align 8
  %cmp.i = icmp eq ptr %24, @init_user_ns
  br i1 %cmp.i, label %dget.exit.if.end26_crit_edge, label %if.then23

dget.exit.if.end26_crit_edge:                     ; preds = %dget.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end26

if.then23:                                        ; preds = %dget.exit
  %tobool.not.i49 = icmp eq ptr %24, null
  br i1 %tobool.not.i49, label %if.then23.get_user_ns.exit_crit_edge, label %if.then.i50

if.then23.get_user_ns.exit_crit_edge:             ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #24
  br label %get_user_ns.exit

if.then.i50:                                      ; preds = %if.then23
  %count.i = getelementptr inbounds %struct.user_namespace, ptr %24, i32 0, i32 7, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #22
  %25 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #22, !srcloc !373
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %25, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i50.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !343

if.then.i50.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.then.i50
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i50
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %26 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %26)
  %.not.i.i.i.i = icmp sgt i32 %26, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.get_user_ns.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !352

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.get_user_ns.exit_crit_edge:       ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %get_user_ns.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i50.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i50.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %count.i, i32 noundef %.sink.i.i.i.i) #22
  br label %get_user_ns.exit

get_user_ns.exit:                                 ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.get_user_ns.exit_crit_edge, %if.then23.get_user_ns.exit_crit_edge
  %mnt_userns = getelementptr inbounds %struct.mount, ptr %call2, i32 0, i32 3, i32 3
  %27 = ptrtoint ptr %mnt_userns to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %24, ptr %mnt_userns, align 4
  br label %if.end26

if.end26:                                         ; preds = %get_user_ns.exit, %dget.exit.if.end26_crit_edge
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %28 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %28, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %29 = tail call ptr @llvm.returnaddress(i32 0) #22
  %30 = ptrtoint ptr %29 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %30) #22
  %mnt_instance = getelementptr inbounds %struct.mount, ptr %call2, i32 0, i32 8
  %31 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %mnt_sb, align 4
  %s_mounts = getelementptr inbounds %struct.super_block, ptr %32, i32 0, i32 25
  %prev.i = getelementptr inbounds %struct.super_block, ptr %32, i32 0, i32 25, i32 1
  %33 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %prev.i, align 4
  %call.i.i51 = tail call zeroext i1 @__list_add_valid(ptr noundef %mnt_instance, ptr noundef %34, ptr noundef %s_mounts) #22
  br i1 %call.i.i51, label %if.end.i.i, label %if.end26.list_add_tail.exit_crit_edge

if.end26.list_add_tail.exit_crit_edge:            ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #24
  %35 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %mnt_instance, ptr %prev.i, align 4
  %36 = ptrtoint ptr %mnt_instance to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %s_mounts, ptr %mnt_instance, align 4
  %prev3.i.i = getelementptr inbounds %struct.mount, ptr %call2, i32 0, i32 8, i32 1
  %37 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %34, ptr %prev3.i.i, align 4
  %38 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %38)
  store volatile ptr %mnt_instance, ptr %34, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.end26.list_add_tail.exit_crit_edge
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %30) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %39 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i = add i32 %39, 1
  store i32 %inc.i.i.i.i, ptr @mount_lock, align 128
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  br label %cleanup

cleanup:                                          ; preds = %list_add_tail.exit, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %mnt14, %list_add_tail.exit ], [ inttoptr (i32 -22 to ptr), %entry.cleanup_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @alloc_vfsmnt(ptr noundef %name) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @mnt_cache, align 4
  %call.i = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %0, i32 noundef 3520) #22
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %entry.cleanup60_crit_edge, label %if.then

entry.cleanup60_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup60

if.then:                                          ; preds = %entry
  %call.i.i = tail call i32 @ida_alloc_range(ptr noundef nonnull @mnt_id_ida, i32 noundef 0, i32 noundef -1, i32 noundef 3264) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i, label %if.then.out_free_cache_crit_edge, label %if.end

if.then.out_free_cache_crit_edge:                 ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_free_cache

if.end:                                           ; preds = %if.then
  %mnt_id.i = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 22
  %1 = ptrtoint ptr %mnt_id.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %call.i.i, ptr %mnt_id.i, align 4
  %tobool4.not = icmp eq ptr %name, null
  br i1 %tobool4.not, label %if.end.if.end11_crit_edge, label %if.then5

if.end.if.end11_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end11

if.then5:                                         ; preds = %if.end
  %call6 = tail call ptr @kstrdup_const(ptr noundef nonnull %name, i32 noundef 4197568) #22
  %mnt_devname = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 9
  %2 = ptrtoint ptr %mnt_devname to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %call6, ptr %mnt_devname, align 4
  %tobool8.not = icmp eq ptr %call6, null
  br i1 %tobool8.not, label %if.then5.out_free_id_crit_edge, label %if.then5.if.end11_crit_edge

if.then5.if.end11_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end11

if.then5.out_free_id_crit_edge:                   ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_free_id

if.end11:                                         ; preds = %if.then5.if.end11_crit_edge, %if.end.if.end11_crit_edge
  %call12 = tail call noalias ptr @__alloc_percpu(i32 noundef 8, i32 noundef 4) #26
  %mnt_pcp = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 5
  %3 = ptrtoint ptr %mnt_pcp to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %call12, ptr %mnt_pcp, align 8
  %tobool14.not = icmp eq ptr %call12, null
  br i1 %tobool14.not, label %out_free_devname, label %do.body17

do.body17:                                        ; preds = %if.end11
  %4 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %5 = ptrtoint ptr %mnt_pcp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mnt_pcp, align 8
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx, align 4
  %add = add i32 %13, %7
  %14 = inttoptr i32 %add to ptr
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %add32 = add i32 %16, 1
  store i32 %add32, ptr %14, align 4
  %17 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i = and i32 %17, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool43.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool43.not, label %if.then47, label %do.body17.cleanup.thread_crit_edge, !prof !343

do.body17.cleanup.thread_crit_edge:               ; preds = %do.body17
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup.thread

if.then47:                                        ; preds = %do.body17
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @warn_bogus_irq_restore() #22
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %if.then47, %do.body17.cleanup.thread_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %4) #22, !srcloc !344
  %18 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %call.i, align 8
  %pprev.i = getelementptr inbounds %struct.hlist_node, ptr %call.i, i32 0, i32 1
  %19 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %pprev.i, align 4
  %mnt_child = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 7
  %20 = ptrtoint ptr %mnt_child to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %mnt_child, ptr %mnt_child, align 4
  %prev.i = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 7, i32 1
  %21 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %mnt_child, ptr %prev.i, align 8
  %mnt_mounts = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 6
  %22 = ptrtoint ptr %mnt_mounts to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %mnt_mounts, ptr %mnt_mounts, align 4
  %prev.i84 = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 6, i32 1
  %23 = ptrtoint ptr %prev.i84 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %mnt_mounts, ptr %prev.i84, align 8
  %mnt_list = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 10
  %24 = ptrtoint ptr %mnt_list to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %mnt_list, ptr %mnt_list, align 8
  %prev.i85 = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 10, i32 1
  %25 = ptrtoint ptr %prev.i85 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %mnt_list, ptr %prev.i85, align 4
  %mnt_expire = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 11
  %26 = ptrtoint ptr %mnt_expire to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %mnt_expire, ptr %mnt_expire, align 8
  %prev.i86 = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 11, i32 1
  %27 = ptrtoint ptr %prev.i86 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %mnt_expire, ptr %prev.i86, align 4
  %mnt_share = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 12
  %28 = ptrtoint ptr %mnt_share to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %mnt_share, ptr %mnt_share, align 8
  %prev.i87 = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 12, i32 1
  %29 = ptrtoint ptr %prev.i87 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %mnt_share, ptr %prev.i87, align 4
  %mnt_slave_list = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 13
  %30 = ptrtoint ptr %mnt_slave_list to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %mnt_slave_list, ptr %mnt_slave_list, align 8
  %prev.i88 = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 13, i32 1
  %31 = ptrtoint ptr %prev.i88 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %mnt_slave_list, ptr %prev.i88, align 4
  %mnt_slave = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 14
  %32 = ptrtoint ptr %mnt_slave to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile ptr %mnt_slave, ptr %mnt_slave, align 8
  %prev.i89 = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 14, i32 1
  %33 = ptrtoint ptr %prev.i89 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %mnt_slave, ptr %prev.i89, align 4
  %34 = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 18
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr null, ptr %34, align 4
  %pprev.i90 = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 18, i32 0, i32 1
  %36 = ptrtoint ptr %pprev.i90 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr null, ptr %pprev.i90, align 8
  %mnt_umounting = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 19
  %37 = ptrtoint ptr %mnt_umounting to i32
  call void @__asan_store4_noabort(i32 %37)
  store volatile ptr %mnt_umounting, ptr %mnt_umounting, align 4
  %prev.i91 = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 19, i32 1
  %38 = ptrtoint ptr %prev.i91 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %mnt_umounting, ptr %prev.i91, align 8
  %mnt_stuck_children = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 26
  %39 = ptrtoint ptr %mnt_stuck_children to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %mnt_stuck_children, align 4
  %mnt_userns = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 3, i32 3
  %40 = ptrtoint ptr %mnt_userns to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr @init_user_ns, ptr %mnt_userns, align 4
  br label %cleanup60

out_free_devname:                                 ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #24
  %mnt_devname59 = getelementptr inbounds %struct.mount, ptr %call.i, i32 0, i32 9
  %41 = ptrtoint ptr %mnt_devname59 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %mnt_devname59, align 4
  tail call void @kfree_const(ptr noundef %42) #22
  br label %out_free_id

out_free_id:                                      ; preds = %out_free_devname, %if.then5.out_free_id_crit_edge
  %43 = ptrtoint ptr %mnt_id.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %mnt_id.i, align 4
  tail call void @ida_free(ptr noundef nonnull @mnt_id_ida, i32 noundef %44) #22
  br label %out_free_cache

out_free_cache:                                   ; preds = %out_free_id, %if.then.out_free_cache_crit_edge
  %45 = load ptr, ptr @mnt_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %45, ptr noundef nonnull %call.i) #22
  br label %cleanup60

cleanup60:                                        ; preds = %out_free_cache, %cleanup.thread, %entry.cleanup60_crit_edge
  %retval.0 = phi ptr [ null, %out_free_cache ], [ null, %entry.cleanup60_crit_edge ], [ %call.i, %cleanup.thread ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @fc_mount(ptr noundef %fc) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @vfs_get_tree(ptr noundef %fc) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %root = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 5
  %0 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root, align 4
  %d_sb = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %d_sb, align 4
  %s_umount = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 14
  tail call void @up_write(ptr noundef %s_umount) #22
  %call1 = tail call ptr @vfs_create_mount(ptr noundef %fc)
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %4 = inttoptr i32 %call to ptr
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi ptr [ %4, %if.end ], [ %call1, %if.then ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vfs_get_tree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @vfs_kern_mount(ptr noundef %type, i32 noundef %flags, ptr noundef %name, ptr noundef %data) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %type, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call ptr @fs_context_for_mount(ptr noundef nonnull %type, i32 noundef %flags) #22
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %tobool6.not = icmp eq ptr %name, null
  br i1 %tobool6.not, label %if.end5.if.end14_crit_edge, label %if.end10

if.end5.if.end14_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end14

if.end10:                                         ; preds = %if.end5
  %call8 = tail call i32 @strlen(ptr noundef nonnull %name) #27
  %call9 = tail call i32 @vfs_parse_fs_string(ptr noundef %call1, ptr noundef nonnull @.str.5, ptr noundef nonnull %name, i32 noundef %call8) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool11.not = icmp eq i32 %call9, 0
  br i1 %tobool11.not, label %if.end10.if.end14_crit_edge, label %if.end10.if.else_crit_edge

if.end10.if.else_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else

if.end10.if.end14_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end14

if.end14:                                         ; preds = %if.end10.if.end14_crit_edge, %if.end5.if.end14_crit_edge
  %call13 = tail call i32 @parse_monolithic_mount_data(ptr noundef %call1, ptr noundef %data) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool15.not = icmp eq i32 %call13, 0
  br i1 %tobool15.not, label %if.then16, label %if.end14.if.else_crit_edge

if.end14.if.else_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else

if.then16:                                        ; preds = %if.end14
  %call.i = tail call i32 @vfs_get_tree(ptr noundef %call1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #24
  %root.i = getelementptr inbounds %struct.fs_context, ptr %call1, i32 0, i32 5
  %0 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root.i, align 4
  %d_sb.i = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %d_sb.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %d_sb.i, align 4
  %s_umount.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 14
  tail call void @up_write(ptr noundef %s_umount.i) #22
  %call1.i = tail call ptr @vfs_create_mount(ptr noundef %call1) #22
  br label %if.end19

if.end.i:                                         ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #24
  %4 = inttoptr i32 %call.i to ptr
  br label %if.end19

if.else:                                          ; preds = %if.end14.if.else_crit_edge, %if.end10.if.else_crit_edge
  %ret.136 = phi i32 [ %call13, %if.end14.if.else_crit_edge ], [ %call9, %if.end10.if.else_crit_edge ]
  %5 = inttoptr i32 %ret.136 to ptr
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.end.i, %if.then.i
  %mnt.0 = phi ptr [ %5, %if.else ], [ %4, %if.end.i ], [ %call1.i, %if.then.i ]
  tail call void @put_fs_context(ptr noundef %call1) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %mnt.0, %if.end19 ], [ inttoptr (i32 -22 to ptr), %entry.cleanup_crit_edge ], [ %call1, %if.end.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @fs_context_for_mount(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vfs_parse_fs_string(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @parse_monolithic_mount_data(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_fs_context(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @vfs_submount(ptr nocapture noundef readonly %mountpoint, ptr noundef %type, ptr noundef %name, ptr noundef %data) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %d_sb = getelementptr inbounds %struct.dentry, ptr %mountpoint, i32 0, i32 9
  %0 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_sb, align 4
  %s_user_ns = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 53
  %2 = ptrtoint ptr %s_user_ns to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_user_ns, align 8
  %cmp.not = icmp eq ptr %3, @init_user_ns
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %call1 = tail call ptr @vfs_kern_mount(ptr noundef %type, i32 noundef 67108864, ptr noundef %name, ptr noundef %data)
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi ptr [ %call1, %if.end ], [ inttoptr (i32 -1 to ptr), %entry.return_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mntput_no_expire(ptr noundef %mnt) unnamed_addr #1 align 64 {
entry:
  %list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %list) #22
  %0 = getelementptr inbounds %struct.list_head, ptr %list, i32 0, i32 1
  %1 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %list, ptr %list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %list, ptr %0, align 4
  %3 = call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %6, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #22, !srcloc !365
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #22
  %call.i = call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 696, ptr noundef nonnull @.str.47) #22
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %mnt_ns = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 16
  %7 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %mnt_ns, align 4
  %tobool.not = icmp eq ptr %8, null
  br i1 %tobool.not, label %if.end, label %if.then, !prof !343

if.then:                                          ; preds = %rcu_read_lock.exit
  %9 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %mnt_pcp.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 5
  %10 = ptrtoint ptr %mnt_pcp.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mnt_pcp.i, align 4
  %12 = ptrtoint ptr %11 to i32
  %13 = call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %16
  %17 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %18, %12
  %19 = inttoptr i32 %add.i to ptr
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %19, align 4
  %add13.i = add i32 %21, -1
  store i32 %add13.i, ptr %19, align 4
  %22 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i = and i32 %22, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i145 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i145, label %if.then.i146, label %if.then.mnt_add_count.exit_crit_edge, !prof !343

if.then.mnt_add_count.exit_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_add_count.exit

if.then.i146:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  call void @warn_bogus_irq_restore() #22
  br label %mnt_add_count.exit

mnt_add_count.exit:                               ; preds = %if.then.i146, %if.then.mnt_add_count.exit_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %9) #22, !srcloc !344
  %call.i147 = call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i147, label %mnt_add_count.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i150

mnt_add_count.exit.rcu_read_unlock.exit_crit_edge: ; preds = %mnt_add_count.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

land.lhs.true.i150:                               ; preds = %mnt_add_count.exit
  %call1.i148 = call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i148)
  %tobool.not.i149 = icmp eq i32 %call1.i148, 0
  br i1 %tobool.not.i149, label %land.lhs.true.i150.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i152

land.lhs.true.i150.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i150
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

land.lhs.true2.i152:                              ; preds = %land.lhs.true.i150
  %.b4.i151 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i151, label %land.lhs.true2.i152.rcu_read_unlock.exit_crit_edge, label %if.then.i153

land.lhs.true2.i152.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i152
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

if.then.i153:                                     ; preds = %land.lhs.true2.i152
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 724, ptr noundef nonnull @.str.46) #22
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i153, %land.lhs.true2.i152.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i150.rcu_read_unlock.exit_crit_edge, %mnt_add_count.exit.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #22, !srcloc !366
  %23 = call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i.i154 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i.i.i154 to ptr
  %preempt_count.i.i.i.i155 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %preempt_count.i.i.i.i155 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %preempt_count.i.i.i.i155, align 4
  %sub.i.i.i = add i32 %26, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i155, align 4
  call void @rcu_read_unlock_strict() #22
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #22
  br label %cleanup120

if.end:                                           ; preds = %rcu_read_lock.exit
  call fastcc void @lock_mount_hash()
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !374
  call fastcc void @mnt_add_count(ptr noundef %mnt, i32 noundef -1)
  %call = call i32 @mnt_get_count(ptr noundef %mnt)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp.not = icmp eq i32 %call, 0
  br i1 %cmp.not, label %if.end40, label %if.then9

if.then9:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp10 = icmp slt i32 %call, 0
  br i1 %cmp10, label %do.end26, label %if.then9.if.end32_crit_edge, !prof !343

if.then9.if.end32_crit_edge:                      ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end32

do.end26:                                         ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #24
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1223, i32 noundef 9, ptr noundef null) #22
  br label %if.end32

if.end32:                                         ; preds = %do.end26, %if.then9.if.end32_crit_edge
  call fastcc void @rcu_read_unlock()
  call fastcc void @unlock_mount_hash()
  br label %cleanup120

if.end40:                                         ; preds = %if.end
  %mnt_flags = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 3, i32 2
  %27 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %mnt_flags, align 4
  %and = and i32 %28, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool42.not = icmp eq i32 %and, 0
  br i1 %tobool42.not, label %if.end50, label %if.then49, !prof !352

if.then49:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #24
  call fastcc void @rcu_read_unlock()
  call fastcc void @unlock_mount_hash()
  br label %cleanup120

if.end50:                                         ; preds = %if.end40
  %or = or i32 %28, 16777216
  %29 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or, ptr %mnt_flags, align 4
  call fastcc void @rcu_read_unlock()
  %mnt_instance = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 8
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %mnt_instance) #22
  br i1 %call.i.i, label %if.end.i.i, label %if.end50.list_del.exit_crit_edge

if.end50.list_del.exit_crit_edge:                 ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 8, i32 1
  %30 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %prev.i.i, align 4
  %32 = ptrtoint ptr %mnt_instance to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %mnt_instance, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %31, ptr %prev1.i.i.i, align 4
  %35 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile ptr %33, ptr %31, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.end50.list_del.exit_crit_edge
  %36 = ptrtoint ptr %mnt_instance to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr inttoptr (i32 256 to ptr), ptr %mnt_instance, align 4
  %prev.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 8, i32 1
  %37 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %mnt_mounts = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 6
  %38 = ptrtoint ptr %mnt_mounts to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile ptr, ptr %mnt_mounts, align 4
  %cmp.i.not = icmp eq ptr %39, %mnt_mounts
  br i1 %cmp.i.not, label %list_del.exit.if.end83_crit_edge, label %for.body.lr.ph, !prof !352

list_del.exit.if.end83_crit_edge:                 ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end83

for.body.lr.ph:                                   ; preds = %list_del.exit
  %mnt_stuck_children = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 26
  br label %for.body

for.body:                                         ; preds = %hlist_add_head.exit.for.body_crit_edge, %for.body.lr.ph
  %.pn.in160 = phi ptr [ %39, %for.body.lr.ph ], [ %.pn, %hlist_add_head.exit.for.body_crit_edge ]
  %p.0 = getelementptr i8, ptr %.pn.in160, i32 -52
  %40 = ptrtoint ptr %.pn.in160 to i32
  call void @__asan_load4_noabort(i32 %40)
  %.pn = load ptr, ptr %.pn.in160, align 4
  %call77 = call fastcc ptr @unhash_mnt(ptr noundef %p.0)
  call fastcc void @__put_mountpoint(ptr noundef %call77, ptr noundef nonnull %list)
  %41 = getelementptr i8, ptr %.pn.in160, i32 72
  %42 = ptrtoint ptr %mnt_stuck_children to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %mnt_stuck_children, align 4
  %44 = ptrtoint ptr %41 to i32
  call void @__asan_store4_noabort(i32 %44)
  store volatile ptr %43, ptr %41, align 4
  %tobool.not.i156 = icmp eq ptr %43, null
  br i1 %tobool.not.i156, label %for.body.hlist_add_head.exit_crit_edge, label %do.body12.i

for.body.hlist_add_head.exit_crit_edge:           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_add_head.exit

do.body12.i:                                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  %pprev.i = getelementptr inbounds %struct.hlist_node, ptr %43, i32 0, i32 1
  %45 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %41, ptr %pprev.i, align 4
  br label %hlist_add_head.exit

hlist_add_head.exit:                              ; preds = %do.body12.i, %for.body.hlist_add_head.exit_crit_edge
  %46 = ptrtoint ptr %mnt_stuck_children to i32
  call void @__asan_store4_noabort(i32 %46)
  store volatile ptr %41, ptr %mnt_stuck_children, align 4
  %pprev34.i = getelementptr i8, ptr %.pn.in160, i32 76
  %47 = ptrtoint ptr %pprev34.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store volatile ptr %mnt_stuck_children, ptr %pprev34.i, align 4
  %cmp74.not = icmp eq ptr %.pn, %mnt_mounts
  br i1 %cmp74.not, label %hlist_add_head.exit.if.end83_crit_edge, label %hlist_add_head.exit.for.body_crit_edge

hlist_add_head.exit.for.body_crit_edge:           ; preds = %hlist_add_head.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

hlist_add_head.exit.if.end83_crit_edge:           ; preds = %hlist_add_head.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end83

if.end83:                                         ; preds = %hlist_add_head.exit.if.end83_crit_edge, %list_del.exit.if.end83_crit_edge
  call fastcc void @unlock_mount_hash()
  call void @shrink_dentry_list(ptr noundef nonnull %list) #22
  %48 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %mnt_flags, align 4
  %and86 = and i32 %49, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and86)
  %tobool87.not = icmp eq i32 %and86, 0
  br i1 %tobool87.not, label %if.then96, label %if.end119, !prof !352

if.then96:                                        ; preds = %if.end83
  %50 = call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i = and i32 %50, -16384
  %51 = inttoptr i32 %and.i to ptr
  %task98 = getelementptr inbounds %struct.thread_info, ptr %51, i32 0, i32 2
  %52 = ptrtoint ptr %task98 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %task98, align 8
  %flags = getelementptr inbounds %struct.task_struct, ptr %53, i32 0, i32 3
  %54 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %flags, align 4
  %and99 = and i32 %55, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and99)
  %tobool100.not = icmp eq i32 %and99, 0
  br i1 %tobool100.not, label %if.then109, label %if.then96.if.end114_crit_edge, !prof !352

if.then96.if.end114_crit_edge:                    ; preds = %if.then96
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end114

if.then109:                                       ; preds = %if.then96
  %56 = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 4
  %func1.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 4, i32 0, i32 1
  %57 = ptrtoint ptr %func1.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr @__cleanup_mnt, ptr %func1.i, align 4
  %call110 = call i32 @task_work_add(ptr noundef %53, ptr noundef %56, i32 noundef 1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call110)
  %tobool111.not = icmp eq i32 %call110, 0
  br i1 %tobool111.not, label %if.then109.cleanup120_crit_edge, label %if.then109.if.end114_crit_edge

if.then109.if.end114_crit_edge:                   ; preds = %if.then109
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end114

if.then109.cleanup120_crit_edge:                  ; preds = %if.then109
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup120

if.end114:                                        ; preds = %if.then109.if.end114_crit_edge, %if.then96.if.end114_crit_edge
  %58 = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 4
  %call.i157 = call zeroext i1 @llist_add_batch(ptr noundef %58, ptr noundef %58, ptr noundef nonnull @delayed_mntput_list) #22
  br i1 %call.i157, label %if.then116, label %if.end114.cleanup120_crit_edge

if.end114.cleanup120_crit_edge:                   ; preds = %if.end114
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup120

if.then116:                                       ; preds = %if.end114
  call void @__sanitizer_cov_trace_pc() #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %59 = load ptr, ptr @system_wq, align 4
  %call.i.i158 = call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %59, ptr noundef nonnull @delayed_mntput_work, i32 noundef 1) #22
  br label %cleanup120

if.end119:                                        ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #24
  call fastcc void @cleanup_mnt(ptr noundef %mnt)
  br label %cleanup120

cleanup120:                                       ; preds = %if.end119, %if.then116, %if.end114.cleanup120_crit_edge, %if.then109.cleanup120_crit_edge, %if.then49, %if.end32, %rcu_read_unlock.exit
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %list) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @mntget(ptr noundef readonly returned %mnt) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %mnt, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %mnt_pcp.i = getelementptr i8, ptr %mnt, i32 24
  %1 = ptrtoint ptr %mnt_pcp.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %mnt_pcp.i, align 4
  %3 = ptrtoint ptr %2 to i32
  %4 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %7
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %9, %3
  %10 = inttoptr i32 %add.i to ptr
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 4
  %add13.i = add i32 %12, 1
  store i32 %add13.i, ptr %10, align 4
  %13 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i = and i32 %13, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.then.mnt_add_count.exit_crit_edge, !prof !343

if.then.mnt_add_count.exit_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_add_count.exit

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @warn_bogus_irq_restore() #22
  br label %mnt_add_count.exit

mnt_add_count.exit:                               ; preds = %if.then.i, %if.then.mnt_add_count.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #22, !srcloc !344
  br label %if.end

if.end:                                           ; preds = %mnt_add_count.exit, %entry.if.end_crit_edge
  ret ptr %mnt
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @path_is_mountpoint(ptr nocapture noundef readonly %path) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %dentry = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %0 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dentry, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 8
  %and.i = and i32 %3, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %7, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !365
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #22
  %call.i = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i, label %if.end.do.body.preheader_crit_edge, label %land.lhs.true.i

if.end.do.body.preheader_crit_edge:               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body.preheader

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.do.body.preheader_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.do.body.preheader_crit_edge:      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body.preheader

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.do.body.preheader_crit_edge, label %if.then.i

land.lhs.true2.i.do.body.preheader_crit_edge:     ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body.preheader

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 696, ptr noundef nonnull @.str.47) #22
  br label %do.body.preheader

do.body.preheader:                                ; preds = %if.then.i, %land.lhs.true2.i.do.body.preheader_crit_edge, %land.lhs.true.i.do.body.preheader_crit_edge, %if.end.do.body.preheader_crit_edge
  br label %do.body

do.body:                                          ; preds = %__path_is_mountpoint.exit.do.body_crit_edge, %do.body.preheader
  %call1 = tail call fastcc i32 @read_seqbegin()
  %8 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %path, align 4
  %10 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dentry, align 4
  %12 = ptrtoint ptr %9 to i32
  %div6.i.i.i = lshr i32 %12, 7
  %13 = ptrtoint ptr %11 to i32
  %div17.i.i.i = lshr i32 %13, 7
  %add.i.i.i7 = add nuw nsw i32 %div17.i.i.i, %div6.i.i.i
  %14 = load i32, ptr @m_hash_shift, align 4
  %shr.i.i.i = lshr i32 %add.i.i.i7, %14
  %add2.i.i.i = add nuw nsw i32 %shr.i.i.i, %add.i.i.i7
  %15 = load ptr, ptr @mount_hashtable, align 4
  %16 = load i32, ptr @m_hash_mask, align 4
  %and.i.i.i = and i32 %add2.i.i.i, %16
  %arrayidx.i.i.i = getelementptr %struct.hlist_head, ptr %15, i32 %and.i.i.i
  %call1.i.i = tail call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %do.body.do.end.i.i_crit_edge

do.body.do.end.i.i_crit_edge:                     ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i.i

land.lhs.true.i.i:                                ; preds = %do.body
  %call2.i.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool3.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool3.not.i.i, label %land.lhs.true.i.i.do.end.i.i_crit_edge, label %land.lhs.true4.i.i

land.lhs.true.i.i.do.end.i.i_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i.i

land.lhs.true4.i.i:                               ; preds = %land.lhs.true.i.i
  %.b44.i.i = load i1, ptr @__lookup_mnt.__warned, align 1
  br i1 %.b44.i.i, label %land.lhs.true4.i.i.do.end.i.i_crit_edge, label %if.then.i.i

land.lhs.true4.i.i.do.end.i.i_crit_edge:          ; preds = %land.lhs.true4.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i.i

if.then.i.i:                                      ; preds = %land.lhs.true4.i.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @__lookup_mnt.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 660, ptr noundef nonnull @.str.3) #22
  br label %do.end.i.i

do.end.i.i:                                       ; preds = %if.then.i.i, %land.lhs.true4.i.i.do.end.i.i_crit_edge, %land.lhs.true.i.i.do.end.i.i_crit_edge, %do.body.do.end.i.i_crit_edge
  %17 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %p.046.i.i = load volatile ptr, ptr %arrayidx.i.i.i, align 4
  %tobool13.not47.i.i = icmp eq ptr %p.046.i.i, null
  br i1 %tobool13.not47.i.i, label %do.end.i.i.__path_is_mountpoint.exit_crit_edge, label %do.end.i.i.for.body.i.i_crit_edge

do.end.i.i.for.body.i.i_crit_edge:                ; preds = %do.end.i.i
  br label %for.body.i.i

do.end.i.i.__path_is_mountpoint.exit_crit_edge:   ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__path_is_mountpoint.exit

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %do.end.i.i.for.body.i.i_crit_edge
  %p.048.i.i = phi ptr [ %p.0.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %p.046.i.i, %do.end.i.i.for.body.i.i_crit_edge ]
  %mnt_parent.i.i = getelementptr inbounds %struct.mount, ptr %p.048.i.i, i32 0, i32 1
  %18 = ptrtoint ptr %mnt_parent.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %mnt_parent.i.i, align 4
  %mnt14.i.i = getelementptr inbounds %struct.mount, ptr %19, i32 0, i32 3
  %cmp.i.i = icmp eq ptr %mnt14.i.i, %9
  br i1 %cmp.i.i, label %land.lhs.true15.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i.i

land.lhs.true15.i.i:                              ; preds = %for.body.i.i
  %mnt_mountpoint.i.i = getelementptr inbounds %struct.mount, ptr %p.048.i.i, i32 0, i32 2
  %20 = ptrtoint ptr %mnt_mountpoint.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %mnt_mountpoint.i.i, align 4
  %cmp16.i.i = icmp eq ptr %21, %11
  br i1 %cmp16.i.i, label %land.rhs.i, label %land.lhs.true15.i.i.for.inc.i.i_crit_edge

land.lhs.true15.i.i.for.inc.i.i_crit_edge:        ; preds = %land.lhs.true15.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %land.lhs.true15.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %22 = ptrtoint ptr %p.048.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %p.0.i.i = load volatile ptr, ptr %p.048.i.i, align 4
  %tobool13.not.i.i = icmp eq ptr %p.0.i.i, null
  br i1 %tobool13.not.i.i, label %for.inc.i.i.__path_is_mountpoint.exit_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i.i

for.inc.i.i.__path_is_mountpoint.exit_crit_edge:  ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__path_is_mountpoint.exit

land.rhs.i:                                       ; preds = %land.lhs.true15.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %mnt_flags.i = getelementptr inbounds %struct.mount, ptr %p.048.i.i, i32 0, i32 3, i32 2
  %23 = ptrtoint ptr %mnt_flags.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %mnt_flags.i, align 4
  %and.i8 = and i32 %24, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i8)
  %tobool2.not.i = icmp eq i32 %and.i8, 0
  br label %__path_is_mountpoint.exit

__path_is_mountpoint.exit:                        ; preds = %land.rhs.i, %for.inc.i.i.__path_is_mountpoint.exit_crit_edge, %do.end.i.i.__path_is_mountpoint.exit_crit_edge
  %25 = phi i1 [ %tobool2.not.i, %land.rhs.i ], [ false, %do.end.i.i.__path_is_mountpoint.exit_crit_edge ], [ false, %for.inc.i.i.__path_is_mountpoint.exit_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !363
  %26 = load volatile i32, ptr @mount_lock, align 128
  %cmp.i.i.i.not = icmp eq i32 %26, %call1
  br i1 %cmp.i.i.i.not, label %do.end, label %__path_is_mountpoint.exit.do.body_crit_edge

__path_is_mountpoint.exit.do.body_crit_edge:      ; preds = %__path_is_mountpoint.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body

do.end:                                           ; preds = %__path_is_mountpoint.exit
  %call.i9 = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i9, label %do.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i12

do.end.rcu_read_unlock.exit_crit_edge:            ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

land.lhs.true.i12:                                ; preds = %do.end
  %call1.i10 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i10)
  %tobool.not.i11 = icmp eq i32 %call1.i10, 0
  br i1 %tobool.not.i11, label %land.lhs.true.i12.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i14

land.lhs.true.i12.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i12
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

land.lhs.true2.i14:                               ; preds = %land.lhs.true.i12
  %.b4.i13 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i13, label %land.lhs.true2.i14.rcu_read_unlock.exit_crit_edge, label %if.then.i15

land.lhs.true2.i14.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i14
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

if.then.i15:                                      ; preds = %land.lhs.true2.i14
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 724, ptr noundef nonnull @.str.46) #22
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i15, %land.lhs.true2.i14.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i12.rcu_read_unlock.exit_crit_edge, %do.end.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !366
  %27 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i.i16 = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i.i.i.i16 to ptr
  %preempt_count.i.i.i.i17 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %preempt_count.i.i.i.i17 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %preempt_count.i.i.i.i17, align 4
  %sub.i.i.i = add i32 %30, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i17, align 4
  tail call void @rcu_read_unlock_strict() #22
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #22
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ %25, %rcu_read_unlock.exit ], [ false, %entry.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @mnt_clone_internal(ptr nocapture noundef readonly %path) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %path, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 -16
  %dentry = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %2 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dentry, align 4
  %call1 = tail call fastcc ptr @clone_mnt(ptr noundef %add.ptr.i, ptr noundef %3, i32 noundef 16)
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %mnt4 = getelementptr inbounds %struct.mount, ptr %call1, i32 0, i32 3
  %mnt_flags = getelementptr inbounds %struct.mount, ptr %call1, i32 0, i32 3, i32 2
  %4 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mnt_flags, align 4
  %or = or i32 %5, 16384
  store i32 %or, ptr %mnt_flags, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %mnt4, %if.end ], [ %call1, %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @clone_mnt(ptr noundef %old, ptr noundef %root, i32 noundef %flag) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %mnt_sb = getelementptr inbounds %struct.mount, ptr %old, i32 0, i32 3, i32 1
  %0 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mnt_sb, align 4
  %mnt_devname = getelementptr inbounds %struct.mount, ptr %old, i32 0, i32 9
  %2 = ptrtoint ptr %mnt_devname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mnt_devname, align 4
  %call = tail call fastcc ptr @alloc_vfsmnt(ptr noundef %3)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %and = and i32 %flag, 50
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %if.else, label %if.end.if.end7_crit_edge

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %mnt_group_id5 = getelementptr inbounds %struct.mount, ptr %old, i32 0, i32 23
  %4 = ptrtoint ptr %mnt_group_id5 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mnt_group_id5, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.end.if.end7_crit_edge
  %.sink = phi i32 [ %5, %if.else ], [ 0, %if.end.if.end7_crit_edge ]
  %6 = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 23
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %.sink, ptr %6, align 4
  %and8 = and i32 %flag, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %if.end7.if.end17_crit_edge, label %land.lhs.true

if.end7.if.end17_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end17

land.lhs.true:                                    ; preds = %if.end7
  %8 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %6, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool11.not = icmp eq i32 %9, 0
  br i1 %tobool11.not, label %if.then12, label %land.lhs.true.if.end17_crit_edge

land.lhs.true.if.end17_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end17

if.then12:                                        ; preds = %land.lhs.true
  %call.i.i154 = tail call i32 @ida_alloc_range(ptr noundef nonnull @mnt_group_ida, i32 noundef 1, i32 noundef -1, i32 noundef 3264) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i154)
  %cmp.i = icmp slt i32 %call.i.i154, 0
  br i1 %cmp.i, label %out_free, label %mnt_alloc_group_id.exit.thread

mnt_alloc_group_id.exit.thread:                   ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #24
  %10 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %call.i.i154, ptr %6, align 4
  br label %if.end17

if.end17:                                         ; preds = %mnt_alloc_group_id.exit.thread, %land.lhs.true.if.end17_crit_edge, %if.end7.if.end17_crit_edge
  %mnt_flags = getelementptr inbounds %struct.mount, ptr %old, i32 0, i32 3, i32 2
  %11 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %mnt_flags, align 4
  %mnt19 = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 3
  %mnt_flags20 = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 3, i32 2
  %and23 = and i32 %12, -67125761
  %13 = ptrtoint ptr %mnt_flags20 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %and23, ptr %mnt_flags20, align 4
  %s_active = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 16
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %s_active, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %s_active, i32 1, i32 3, i32 1) #22
  %14 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %s_active, ptr %s_active, i32 1, ptr elementtype(i32) %s_active) #22, !srcloc !372
  %mnt_userns.i = getelementptr inbounds %struct.mount, ptr %old, i32 0, i32 3, i32 3
  %15 = ptrtoint ptr %mnt_userns.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %mnt_userns.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !375
  %mnt_userns = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 3, i32 3
  %17 = ptrtoint ptr %mnt_userns to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %16, ptr %mnt_userns, align 4
  %cmp.i155 = icmp eq ptr %16, @init_user_ns
  br i1 %cmp.i155, label %if.end17.if.end36_crit_edge, label %if.then30

if.end17.if.end36_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end36

if.then30:                                        ; preds = %if.end17
  %tobool.not.i = icmp eq ptr %16, null
  br i1 %tobool.not.i, label %if.then30.get_user_ns.exit_crit_edge, label %if.then.i

if.then30.get_user_ns.exit_crit_edge:             ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #24
  br label %get_user_ns.exit

if.then.i:                                        ; preds = %if.then30
  %count.i = getelementptr inbounds %struct.user_namespace, ptr %16, i32 0, i32 7, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #22
  %18 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #22, !srcloc !373
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %18, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !343

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %19 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %19)
  %.not.i.i.i.i = icmp sgt i32 %19, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.get_user_ns.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !352

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.get_user_ns.exit_crit_edge:       ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %get_user_ns.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %count.i, i32 noundef %.sink.i.i.i.i) #22
  br label %get_user_ns.exit

get_user_ns.exit:                                 ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.get_user_ns.exit_crit_edge, %if.then30.get_user_ns.exit_crit_edge
  %20 = ptrtoint ptr %mnt_userns to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %16, ptr %mnt_userns, align 4
  br label %if.end36

if.end36:                                         ; preds = %get_user_ns.exit, %if.end17.if.end36_crit_edge
  %mnt_sb38 = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 3, i32 1
  %21 = ptrtoint ptr %mnt_sb38 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %1, ptr %mnt_sb38, align 4
  %tobool.not.i157 = icmp eq ptr %root, null
  br i1 %tobool.not.i157, label %if.end36.dget.exit_crit_edge, label %if.then.i158

if.end36.dget.exit_crit_edge:                     ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #24
  br label %dget.exit

if.then.i158:                                     ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #24
  %d_lockref.i = getelementptr inbounds %struct.dentry, ptr %root, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i) #22
  br label %dget.exit

dget.exit:                                        ; preds = %if.then.i158, %if.end36.dget.exit_crit_edge
  %22 = ptrtoint ptr %mnt19 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %root, ptr %mnt19, align 4
  %mnt_mountpoint = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 2
  %23 = ptrtoint ptr %mnt_mountpoint to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %root, ptr %mnt_mountpoint, align 4
  %mnt_parent = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 1
  %24 = ptrtoint ptr %mnt_parent to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %call, ptr %mnt_parent, align 4
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %25 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %25, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %26 = tail call ptr @llvm.returnaddress(i32 0) #22
  %27 = ptrtoint ptr %26 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %27) #22
  %mnt_instance = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 8
  %s_mounts = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 25
  %prev.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 25, i32 1
  %28 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %prev.i, align 4
  %call.i.i160 = tail call zeroext i1 @__list_add_valid(ptr noundef %mnt_instance, ptr noundef %29, ptr noundef %s_mounts) #22
  br i1 %call.i.i160, label %if.end.i.i, label %dget.exit.list_add_tail.exit_crit_edge

dget.exit.list_add_tail.exit_crit_edge:           ; preds = %dget.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %dget.exit
  call void @__sanitizer_cov_trace_pc() #24
  %30 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %mnt_instance, ptr %prev.i, align 4
  %31 = ptrtoint ptr %mnt_instance to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %s_mounts, ptr %mnt_instance, align 4
  %prev3.i.i = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 8, i32 1
  %32 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %29, ptr %prev3.i.i, align 4
  %33 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %mnt_instance, ptr %29, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %dget.exit.list_add_tail.exit_crit_edge
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %27) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %34 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i = add i32 %34, 1
  store i32 %inc.i.i.i.i, ptr @mount_lock, align 128
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %and43 = and i32 %flag, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and43)
  %tobool44.not = icmp eq i32 %and43, 0
  br i1 %tobool44.not, label %lor.lhs.false, label %list_add_tail.exit.if.then52_crit_edge

list_add_tail.exit.if.then52_crit_edge:           ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then52

lor.lhs.false:                                    ; preds = %list_add_tail.exit
  %and45 = and i32 %flag, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and45)
  %tobool46.not = icmp eq i32 %and45, 0
  br i1 %tobool46.not, label %lor.lhs.false.if.else56_crit_edge, label %land.lhs.true47

lor.lhs.false.if.else56_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else56

land.lhs.true47:                                  ; preds = %lor.lhs.false
  %35 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %mnt_flags, align 4
  %and50 = and i32 %36, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and50)
  %tobool51.not = icmp eq i32 %and50, 0
  br i1 %tobool51.not, label %land.lhs.true47.if.else56_crit_edge, label %land.lhs.true47.if.then52_crit_edge

land.lhs.true47.if.then52_crit_edge:              ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then52

land.lhs.true47.if.else56_crit_edge:              ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else56

if.then52:                                        ; preds = %land.lhs.true47.if.then52_crit_edge, %list_add_tail.exit.if.then52_crit_edge
  %mnt_slave = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 14
  %mnt_slave_list = getelementptr inbounds %struct.mount, ptr %old, i32 0, i32 13
  %37 = ptrtoint ptr %mnt_slave_list to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %mnt_slave_list, align 4
  %call.i.i161 = tail call zeroext i1 @__list_add_valid(ptr noundef %mnt_slave, ptr noundef %mnt_slave_list, ptr noundef %38) #22
  br i1 %call.i.i161, label %if.end.i.i163, label %if.then52.list_add.exit_crit_edge

if.then52.list_add.exit_crit_edge:                ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add.exit

if.end.i.i163:                                    ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #24
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %mnt_slave, ptr %prev1.i.i, align 4
  %40 = ptrtoint ptr %mnt_slave to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %38, ptr %mnt_slave, align 4
  %prev3.i.i162 = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 14, i32 1
  %41 = ptrtoint ptr %prev3.i.i162 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %mnt_slave_list, ptr %prev3.i.i162, align 4
  %42 = ptrtoint ptr %mnt_slave_list to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile ptr %mnt_slave, ptr %mnt_slave_list, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i163, %if.then52.list_add.exit_crit_edge
  %mnt_master = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 15
  %43 = ptrtoint ptr %mnt_master to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %old, ptr %mnt_master, align 4
  %44 = ptrtoint ptr %mnt_flags20 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %mnt_flags20, align 4
  %and55 = and i32 %45, -4097
  store i32 %and55, ptr %mnt_flags20, align 4
  br label %if.end83

if.else56:                                        ; preds = %land.lhs.true47.if.else56_crit_edge, %lor.lhs.false.if.else56_crit_edge
  %and57 = and i32 %flag, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and57)
  %tobool58.not = icmp eq i32 %and57, 0
  br i1 %tobool58.not, label %if.then59, label %if.else78

if.then59:                                        ; preds = %if.else56
  br i1 %tobool9.not, label %lor.lhs.false62, label %if.then59.if.then67_crit_edge

if.then59.if.then67_crit_edge:                    ; preds = %if.then59
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then67

lor.lhs.false62:                                  ; preds = %if.then59
  %46 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %mnt_flags, align 4
  %and65 = and i32 %47, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and65)
  %tobool66.not = icmp eq i32 %and65, 0
  br i1 %tobool66.not, label %lor.lhs.false62.if.end69_crit_edge, label %lor.lhs.false62.if.then67_crit_edge

lor.lhs.false62.if.then67_crit_edge:              ; preds = %lor.lhs.false62
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then67

lor.lhs.false62.if.end69_crit_edge:               ; preds = %lor.lhs.false62
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end69

if.then67:                                        ; preds = %lor.lhs.false62.if.then67_crit_edge, %if.then59.if.then67_crit_edge
  %mnt_share = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 12
  %mnt_share68 = getelementptr inbounds %struct.mount, ptr %old, i32 0, i32 12
  %48 = ptrtoint ptr %mnt_share68 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %mnt_share68, align 4
  %call.i.i164 = tail call zeroext i1 @__list_add_valid(ptr noundef %mnt_share, ptr noundef %mnt_share68, ptr noundef %49) #22
  br i1 %call.i.i164, label %if.end.i.i167, label %if.then67.if.end69_crit_edge

if.then67.if.end69_crit_edge:                     ; preds = %if.then67
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end69

if.end.i.i167:                                    ; preds = %if.then67
  call void @__sanitizer_cov_trace_pc() #24
  %prev1.i.i165 = getelementptr inbounds %struct.list_head, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %prev1.i.i165 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %mnt_share, ptr %prev1.i.i165, align 4
  %51 = ptrtoint ptr %mnt_share to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %49, ptr %mnt_share, align 4
  %prev3.i.i166 = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 12, i32 1
  %52 = ptrtoint ptr %prev3.i.i166 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %mnt_share68, ptr %prev3.i.i166, align 4
  %53 = ptrtoint ptr %mnt_share68 to i32
  call void @__asan_store4_noabort(i32 %53)
  store volatile ptr %mnt_share, ptr %mnt_share68, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.end.i.i167, %if.then67.if.end69_crit_edge, %lor.lhs.false62.if.end69_crit_edge
  %mnt_master70 = getelementptr inbounds %struct.mount, ptr %old, i32 0, i32 15
  %54 = ptrtoint ptr %mnt_master70 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %mnt_master70, align 4
  %tobool71.not = icmp eq ptr %55, null
  br i1 %tobool71.not, label %if.end69.if.end75_crit_edge, label %if.then72

if.end69.if.end75_crit_edge:                      ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end75

if.then72:                                        ; preds = %if.end69
  %mnt_slave73 = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 14
  %mnt_slave74 = getelementptr inbounds %struct.mount, ptr %old, i32 0, i32 14
  %56 = ptrtoint ptr %mnt_slave74 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %mnt_slave74, align 4
  %call.i.i169 = tail call zeroext i1 @__list_add_valid(ptr noundef %mnt_slave73, ptr noundef %mnt_slave74, ptr noundef %57) #22
  br i1 %call.i.i169, label %if.end.i.i172, label %if.then72.if.end75_crit_edge

if.then72.if.end75_crit_edge:                     ; preds = %if.then72
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end75

if.end.i.i172:                                    ; preds = %if.then72
  call void @__sanitizer_cov_trace_pc() #24
  %prev1.i.i170 = getelementptr inbounds %struct.list_head, ptr %57, i32 0, i32 1
  %58 = ptrtoint ptr %prev1.i.i170 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %mnt_slave73, ptr %prev1.i.i170, align 4
  %59 = ptrtoint ptr %mnt_slave73 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr %57, ptr %mnt_slave73, align 4
  %prev3.i.i171 = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 14, i32 1
  %60 = ptrtoint ptr %prev3.i.i171 to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %mnt_slave74, ptr %prev3.i.i171, align 4
  %61 = ptrtoint ptr %mnt_slave74 to i32
  call void @__asan_store4_noabort(i32 %61)
  store volatile ptr %mnt_slave73, ptr %mnt_slave74, align 4
  br label %if.end75

if.end75:                                         ; preds = %if.end.i.i172, %if.then72.if.end75_crit_edge, %if.end69.if.end75_crit_edge
  %62 = ptrtoint ptr %mnt_master70 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %mnt_master70, align 4
  %mnt_master77 = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 15
  %64 = ptrtoint ptr %mnt_master77 to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr %63, ptr %mnt_master77, align 4
  br label %if.end83

if.else78:                                        ; preds = %if.else56
  call void @__sanitizer_cov_trace_pc() #24
  %65 = ptrtoint ptr %mnt_flags20 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %mnt_flags20, align 4
  %and81 = and i32 %66, -4097
  store i32 %and81, ptr %mnt_flags20, align 4
  br label %if.end83

if.end83:                                         ; preds = %if.else78, %if.end75, %list_add.exit
  br i1 %tobool9.not, label %if.end83.if.end87_crit_edge, label %if.then86

if.end83.if.end87_crit_edge:                      ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end87

if.then86:                                        ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #24
  %67 = ptrtoint ptr %mnt_flags20 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %mnt_flags20, align 4
  %and.i = and i32 %68, -12289
  %or.i = or i32 %and.i, 4096
  store i32 %or.i, ptr %mnt_flags20, align 4
  br label %if.end87

if.end87:                                         ; preds = %if.then86, %if.end83.if.end87_crit_edge
  %and88 = and i32 %flag, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and88)
  %tobool89.not = icmp eq i32 %and88, 0
  br i1 %tobool89.not, label %if.end87.cleanup_crit_edge, label %if.then90

if.end87.cleanup_crit_edge:                       ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then90:                                        ; preds = %if.end87
  %mnt_expire = getelementptr inbounds %struct.mount, ptr %old, i32 0, i32 11
  %69 = ptrtoint ptr %mnt_expire to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile ptr, ptr %mnt_expire, align 4
  %cmp.i174.not = icmp eq ptr %70, %mnt_expire
  br i1 %cmp.i174.not, label %if.then90.cleanup_crit_edge, label %if.then93

if.then90.cleanup_crit_edge:                      ; preds = %if.then90
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then93:                                        ; preds = %if.then90
  %mnt_expire94 = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 11
  %call.i.i175 = tail call zeroext i1 @__list_add_valid(ptr noundef %mnt_expire94, ptr noundef %mnt_expire, ptr noundef %70) #22
  br i1 %call.i.i175, label %if.end.i.i178, label %if.then93.cleanup_crit_edge

if.then93.cleanup_crit_edge:                      ; preds = %if.then93
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end.i.i178:                                    ; preds = %if.then93
  call void @__sanitizer_cov_trace_pc() #24
  %prev1.i.i176 = getelementptr inbounds %struct.list_head, ptr %70, i32 0, i32 1
  %71 = ptrtoint ptr %prev1.i.i176 to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr %mnt_expire94, ptr %prev1.i.i176, align 4
  %72 = ptrtoint ptr %mnt_expire94 to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %70, ptr %mnt_expire94, align 4
  %prev3.i.i177 = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 11, i32 1
  %73 = ptrtoint ptr %prev3.i.i177 to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr %mnt_expire, ptr %prev3.i.i177, align 4
  %74 = ptrtoint ptr %mnt_expire to i32
  call void @__asan_store4_noabort(i32 %74)
  store volatile ptr %mnt_expire94, ptr %mnt_expire, align 4
  br label %cleanup

out_free:                                         ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #24
  %mnt_id.i = getelementptr inbounds %struct.mount, ptr %call, i32 0, i32 22
  %75 = ptrtoint ptr %mnt_id.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %mnt_id.i, align 4
  tail call void @ida_free(ptr noundef nonnull @mnt_id_ida, i32 noundef %76) #22
  tail call fastcc void @free_vfsmnt(ptr noundef nonnull %call)
  %77 = inttoptr i32 %call.i.i154 to ptr
  br label %cleanup

cleanup:                                          ; preds = %out_free, %if.end.i.i178, %if.then93.cleanup_crit_edge, %if.then90.cleanup_crit_edge, %if.end87.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %77, %out_free ], [ %call, %if.then90.cleanup_crit_edge ], [ %call, %if.end87.cleanup_crit_edge ], [ inttoptr (i32 -12 to ptr), %entry.cleanup_crit_edge ], [ %call, %if.then93.cleanup_crit_edge ], [ %call, %if.end.i.i178 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @m_start(ptr nocapture noundef readonly %m, ptr nocapture noundef readonly %pos) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.seq_file, ptr %m, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 8
  tail call void @down_read(ptr noundef nonnull @namespace_sem) #22
  %2 = ptrtoint ptr %pos to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %pos, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %3)
  %tobool.not = icmp eq i64 %3, 0
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %1, align 4
  %list = getelementptr inbounds %struct.mnt_namespace, ptr %5, i32 0, i32 2
  br label %if.end3

if.else:                                          ; preds = %entry
  %mnt_list = getelementptr inbounds %struct.proc_mounts, ptr %1, i32 0, i32 3, i32 10
  %6 = ptrtoint ptr %mnt_list to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %mnt_list, align 4
  %cmp.i.not = icmp eq ptr %7, %mnt_list
  br i1 %cmp.i.not, label %if.else.cleanup_crit_edge, label %if.else.if.end3_crit_edge

if.else.if.end3_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end3

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end3:                                          ; preds = %if.else.if.end3_crit_edge, %if.then
  %prev.0 = phi ptr [ %mnt_list, %if.else.if.end3_crit_edge ], [ %list, %if.then ]
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %1, align 4
  %ns_lock.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %9, i32 0, i32 3
  tail call void @_raw_spin_lock(ptr noundef %ns_lock.i.i) #22
  %list.i = getelementptr inbounds %struct.mnt_namespace, ptr %9, i32 0, i32 2
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.end3
  %p.addr.0.in.i = phi ptr [ %prev.0, %if.end3 ], [ %p.addr.0.i, %for.body.i.for.cond.i_crit_edge ]
  %10 = ptrtoint ptr %p.addr.0.in.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %p.addr.0.i = load ptr, ptr %p.addr.0.in.i, align 4
  %cmp.i.not.i = icmp eq ptr %p.addr.0.i, %list.i
  br i1 %cmp.i.not.i, label %for.cond.i.mnt_list_next.exit_crit_edge, label %for.body.i

for.cond.i.mnt_list_next.exit_crit_edge:          ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_list_next.exit

for.body.i:                                       ; preds = %for.cond.i
  %mnt_flags.i.i = getelementptr i8, ptr %p.addr.0.i, i32 -48
  %11 = ptrtoint ptr %mnt_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %mnt_flags.i.i, align 4
  %and.i.i = and i32 %12, 268435456
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %for.end.split.loop.exit.i, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond.i

for.end.split.loop.exit.i:                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  %add.ptr.le.i = getelementptr i8, ptr %p.addr.0.i, i32 -72
  br label %mnt_list_next.exit

mnt_list_next.exit:                               ; preds = %for.end.split.loop.exit.i, %for.cond.i.mnt_list_next.exit_crit_edge
  %ret.0.i = phi ptr [ %add.ptr.le.i, %for.end.split.loop.exit.i ], [ null, %for.cond.i.mnt_list_next.exit_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %ns_lock.i.i) #22
  br label %cleanup

cleanup:                                          ; preds = %mnt_list_next.exit, %if.else.cleanup_crit_edge
  %retval.0 = phi ptr [ %ret.0.i, %mnt_list_next.exit ], [ null, %if.else.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @m_stop(ptr nocapture noundef readonly %m, ptr noundef %v) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.seq_file, ptr %m, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %ns_lock.i = getelementptr inbounds %struct.mnt_namespace, ptr %3, i32 0, i32 3
  tail call void @_raw_spin_lock(ptr noundef %ns_lock.i) #22
  %tobool.not = icmp eq ptr %v, null
  %mnt_list3 = getelementptr inbounds %struct.proc_mounts, ptr %1, i32 0, i32 3, i32 10
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %mnt_list1 = getelementptr inbounds %struct.mount, ptr %v, i32 0, i32 10
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %mnt_list3) #22
  br i1 %call.i.i, label %if.end.i.i, label %if.then.__list_del_entry.exit.i_crit_edge

if.then.__list_del_entry.exit.i_crit_edge:        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %__list_del_entry.exit.i

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.proc_mounts, ptr %1, i32 0, i32 3, i32 10, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i, align 4
  %6 = ptrtoint ptr %mnt_list3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mnt_list3, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev1.i.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %7, ptr %5, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i, %if.then.__list_del_entry.exit.i_crit_edge
  %prev.i2.i = getelementptr inbounds %struct.mount, ptr %v, i32 0, i32 10, i32 1
  %10 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %prev.i2.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %mnt_list3, ptr noundef %11, ptr noundef %mnt_list1) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.if.end_crit_edge

__list_del_entry.exit.i.if.end_crit_edge:         ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %12 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %mnt_list3, ptr %prev.i2.i, align 4
  %13 = ptrtoint ptr %mnt_list3 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %mnt_list1, ptr %mnt_list3, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.proc_mounts, ptr %1, i32 0, i32 3, i32 10, i32 1
  %14 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %11, ptr %prev3.i.i.i, align 4
  %15 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %mnt_list3, ptr %11, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %call.i.i9 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %mnt_list3) #22
  br i1 %call.i.i9, label %if.end.i.i12, label %if.else.list_del_init.exit_crit_edge

if.else.list_del_init.exit_crit_edge:             ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_init.exit

if.end.i.i12:                                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i10 = getelementptr inbounds %struct.proc_mounts, ptr %1, i32 0, i32 3, i32 10, i32 1
  %16 = ptrtoint ptr %prev.i.i10 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %prev.i.i10, align 4
  %18 = ptrtoint ptr %mnt_list3 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %mnt_list3, align 4
  %prev1.i.i.i11 = getelementptr inbounds %struct.list_head, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %prev1.i.i.i11 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %17, ptr %prev1.i.i.i11, align 4
  %21 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %19, ptr %17, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i12, %if.else.list_del_init.exit_crit_edge
  %22 = ptrtoint ptr %mnt_list3 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %mnt_list3, ptr %mnt_list3, align 4
  %prev.i3.i = getelementptr inbounds %struct.proc_mounts, ptr %1, i32 0, i32 3, i32 10, i32 1
  %23 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %mnt_list3, ptr %prev.i3.i, align 4
  br label %if.end

if.end:                                           ; preds = %list_del_init.exit, %if.end.i.i.i, %__list_del_entry.exit.i.if.end_crit_edge
  %24 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %1, align 4
  %ns_lock.i14 = getelementptr inbounds %struct.mnt_namespace, ptr %25, i32 0, i32 3
  tail call void @_raw_spin_unlock(ptr noundef %ns_lock.i14) #22
  tail call void @up_read(ptr noundef nonnull @namespace_sem) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @m_next(ptr nocapture noundef readonly %m, ptr nocapture noundef readonly %v, ptr nocapture noundef %pos) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.seq_file, ptr %m, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 8
  %2 = ptrtoint ptr %pos to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %pos, align 8
  %inc = add i64 %3, 1
  store i64 %inc, ptr %pos, align 8
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %1, align 4
  %mnt_list = getelementptr inbounds %struct.mount, ptr %v, i32 0, i32 10
  %ns_lock.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %5, i32 0, i32 3
  tail call void @_raw_spin_lock(ptr noundef %ns_lock.i.i) #22
  %list.i = getelementptr inbounds %struct.mnt_namespace, ptr %5, i32 0, i32 2
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %entry
  %p.addr.0.in.i = phi ptr [ %mnt_list, %entry ], [ %p.addr.0.i, %for.body.i.for.cond.i_crit_edge ]
  %6 = ptrtoint ptr %p.addr.0.in.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %p.addr.0.i = load ptr, ptr %p.addr.0.in.i, align 4
  %cmp.i.not.i = icmp eq ptr %p.addr.0.i, %list.i
  br i1 %cmp.i.not.i, label %for.cond.i.mnt_list_next.exit_crit_edge, label %for.body.i

for.cond.i.mnt_list_next.exit_crit_edge:          ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_list_next.exit

for.body.i:                                       ; preds = %for.cond.i
  %mnt_flags.i.i = getelementptr i8, ptr %p.addr.0.i, i32 -48
  %7 = ptrtoint ptr %mnt_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %mnt_flags.i.i, align 4
  %and.i.i = and i32 %8, 268435456
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %for.end.split.loop.exit.i, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond.i

for.end.split.loop.exit.i:                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  %add.ptr.le.i = getelementptr i8, ptr %p.addr.0.i, i32 -72
  br label %mnt_list_next.exit

mnt_list_next.exit:                               ; preds = %for.end.split.loop.exit.i, %for.cond.i.mnt_list_next.exit_crit_edge
  %ret.0.i = phi ptr [ %add.ptr.le.i, %for.end.split.loop.exit.i ], [ null, %for.cond.i.mnt_list_next.exit_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %ns_lock.i.i) #22
  ret ptr %ret.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @m_show(ptr noundef %m, ptr noundef %v) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.seq_file, ptr %m, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 8
  %show = getelementptr inbounds %struct.proc_mounts, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %show to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %show, align 4
  %mnt = getelementptr inbounds %struct.mount, ptr %v, i32 0, i32 3
  %call = tail call i32 %3(ptr noundef %m, ptr noundef %mnt) #22
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mnt_cursor_del(ptr noundef %ns, ptr noundef %cursor) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @down_read(ptr noundef nonnull @namespace_sem) #22
  %ns_lock.i = getelementptr inbounds %struct.mnt_namespace, ptr %ns, i32 0, i32 3
  tail call void @_raw_spin_lock(ptr noundef %ns_lock.i) #22
  %mnt_list = getelementptr inbounds %struct.mount, ptr %cursor, i32 0, i32 10
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %mnt_list) #22
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_del.exit_crit_edge

entry.list_del.exit_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.mount, ptr %cursor, i32 0, i32 10, i32 1
  %0 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %prev.i.i, align 4
  %2 = ptrtoint ptr %mnt_list to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mnt_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %1, ptr %prev1.i.i.i, align 4
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %3, ptr %1, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %entry.list_del.exit_crit_edge
  %6 = ptrtoint ptr %mnt_list to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr inttoptr (i32 256 to ptr), ptr %mnt_list, align 4
  %prev.i = getelementptr inbounds %struct.mount, ptr %cursor, i32 0, i32 10, i32 1
  %7 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %ns_lock.i) #22
  tail call void @up_read(ptr noundef nonnull @namespace_sem) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @may_umount_tree(ptr noundef readonly %m) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %m, i32 -16
  %tobool.not = icmp eq ptr %m, null
  br i1 %tobool.not, label %do.body4, label %do.end9, !prof !343

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namespace.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1422, 0\0A.popsection", ""() #22, !srcloc !376
  unreachable

do.end9:                                          ; preds = %entry
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %0 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %0, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %1 = tail call ptr @llvm.returnaddress(i32 0) #22
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %2) #22
  %tobool10.not27 = icmp eq ptr %add.ptr.i, null
  br i1 %tobool10.not27, label %do.end9.for.end_crit_edge, label %for.body.lr.ph

do.end9.for.end_crit_edge:                        ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body.lr.ph:                                   ; preds = %do.end9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %3 = load i32, ptr @nr_cpu_ids, align 4
  %call6.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__sanitizer_cov_trace_cmp4(i32 %call6.i, i32 %3)
  %cmp7.i = icmp ult i32 %call6.i, %3
  br label %for.body

for.body:                                         ; preds = %next_mnt.exit.for.body_crit_edge, %for.body.lr.ph
  %p.030 = phi ptr [ %add.ptr.i, %for.body.lr.ph ], [ %add.ptr.i26, %next_mnt.exit.for.body_crit_edge ]
  %minimum_refs.029 = phi i32 [ 0, %for.body.lr.ph ], [ %add12, %next_mnt.exit.for.body_crit_edge ]
  %actual_refs.028 = phi i32 [ 0, %for.body.lr.ph ], [ %add, %next_mnt.exit.for.body_crit_edge ]
  br i1 %cmp7.i, label %do.body.lr.ph.i, label %for.body.mnt_get_count.exit_crit_edge

for.body.mnt_get_count.exit_crit_edge:            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_get_count.exit

do.body.lr.ph.i:                                  ; preds = %for.body
  %mnt_pcp.i = getelementptr inbounds %struct.mount, ptr %p.030, i32 0, i32 5
  %4 = ptrtoint ptr %mnt_pcp.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mnt_pcp.i, align 4
  %6 = ptrtoint ptr %5 to i32
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %do.body.lr.ph.i
  %call9.i = phi i32 [ %call6.i, %do.body.lr.ph.i ], [ %call.i, %do.body.i.do.body.i_crit_edge ]
  %count.08.i = phi i32 [ 0, %do.body.lr.ph.i ], [ %add2.i, %do.body.i.do.body.i_crit_edge ]
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call9.i
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %8, %6
  %9 = inttoptr i32 %add.i to ptr
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  %add2.i = add i32 %11, %count.08.i
  %call.i = tail call i32 @cpumask_next(i32 noundef %call9.i, ptr noundef nonnull @__cpu_possible_mask) #25
  %cmp.i = icmp ult i32 %call.i, %3
  br i1 %cmp.i, label %do.body.i.do.body.i_crit_edge, label %do.body.i.mnt_get_count.exit_crit_edge

do.body.i.mnt_get_count.exit_crit_edge:           ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_get_count.exit

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body.i

mnt_get_count.exit:                               ; preds = %do.body.i.mnt_get_count.exit_crit_edge, %for.body.mnt_get_count.exit_crit_edge
  %count.0.lcssa.i = phi i32 [ 0, %for.body.mnt_get_count.exit_crit_edge ], [ %add2.i, %do.body.i.mnt_get_count.exit_crit_edge ]
  %add = add i32 %count.0.lcssa.i, %actual_refs.028
  %add12 = add i32 %minimum_refs.029, 2
  %mnt_mounts.i = getelementptr inbounds %struct.mount, ptr %p.030, i32 0, i32 6
  %12 = ptrtoint ptr %mnt_mounts.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %mnt_mounts.i, align 4
  %cmp.i25 = icmp eq ptr %13, %mnt_mounts.i
  br i1 %cmp.i25, label %mnt_get_count.exit.while.cond.i_crit_edge, label %mnt_get_count.exit.next_mnt.exit_crit_edge

mnt_get_count.exit.next_mnt.exit_crit_edge:       ; preds = %mnt_get_count.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit

mnt_get_count.exit.while.cond.i_crit_edge:        ; preds = %mnt_get_count.exit
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end.i.while.cond.i_crit_edge, %mnt_get_count.exit.while.cond.i_crit_edge
  %p.addr.0.i = phi ptr [ %17, %if.end.i.while.cond.i_crit_edge ], [ %p.030, %mnt_get_count.exit.while.cond.i_crit_edge ]
  %cmp3.i = icmp eq ptr %p.addr.0.i, %add.ptr.i
  br i1 %cmp3.i, label %while.cond.i.for.end_crit_edge, label %if.end.i

while.cond.i.for.end_crit_edge:                   ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

if.end.i:                                         ; preds = %while.cond.i
  %mnt_child.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 7
  %14 = ptrtoint ptr %mnt_child.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mnt_child.i, align 4
  %mnt_parent.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %mnt_parent.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %mnt_parent.i, align 4
  %mnt_mounts6.i = getelementptr inbounds %struct.mount, ptr %17, i32 0, i32 6
  %cmp7.not.i = icmp eq ptr %15, %mnt_mounts6.i
  br i1 %cmp7.not.i, label %if.end.i.while.cond.i_crit_edge, label %if.end.i.next_mnt.exit_crit_edge

if.end.i.next_mnt.exit_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit

if.end.i.while.cond.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i

next_mnt.exit:                                    ; preds = %if.end.i.next_mnt.exit_crit_edge, %mnt_get_count.exit.next_mnt.exit_crit_edge
  %next.0.i = phi ptr [ %13, %mnt_get_count.exit.next_mnt.exit_crit_edge ], [ %15, %if.end.i.next_mnt.exit_crit_edge ]
  %add.ptr.i26 = getelementptr i8, ptr %next.0.i, i32 -52
  %tobool10.not = icmp eq ptr %add.ptr.i26, null
  br i1 %tobool10.not, label %next_mnt.exit.for.end_crit_edge, label %next_mnt.exit.for.body_crit_edge

next_mnt.exit.for.body_crit_edge:                 ; preds = %next_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

next_mnt.exit.for.end_crit_edge:                  ; preds = %next_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %next_mnt.exit.for.end_crit_edge, %while.cond.i.for.end_crit_edge, %do.end9.for.end_crit_edge
  %actual_refs.0.lcssa = phi i32 [ 0, %do.end9.for.end_crit_edge ], [ %add, %while.cond.i.for.end_crit_edge ], [ %add, %next_mnt.exit.for.end_crit_edge ]
  %minimum_refs.0.lcssa = phi i32 [ 0, %do.end9.for.end_crit_edge ], [ %add12, %while.cond.i.for.end_crit_edge ], [ %add12, %next_mnt.exit.for.end_crit_edge ]
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %2) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %18 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i = add i32 %18, 1
  store i32 %inc.i.i.i.i, ptr @mount_lock, align 128
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  call void @__sanitizer_cov_trace_cmp4(i32 %actual_refs.0.lcssa, i32 %minimum_refs.0.lcssa)
  %cmp = icmp sle i32 %actual_refs.0.lcssa, %minimum_refs.0.lcssa
  %. = zext i1 %cmp to i32
  ret i32 %.
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @may_umount(ptr noundef %mnt) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @down_read(ptr noundef nonnull @namespace_sem) #22
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %0 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %0, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %1 = tail call ptr @llvm.returnaddress(i32 0) #22
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %2) #22
  %add.ptr.i = getelementptr i8, ptr %mnt, i32 -16
  %call1 = tail call i32 @propagate_mount_busy(ptr noundef %add.ptr.i, i32 noundef 2) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  %spec.select = zext i1 %tobool.not to i32
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %2) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %3 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i = add i32 %3, 1
  store i32 %inc.i.i.i.i, ptr @mount_lock, align 128
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  tail call void @up_read(ptr noundef nonnull @namespace_sem) #22
  ret i32 %spec.select
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @propagate_mount_busy(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__detach_mounts(ptr noundef %dentry) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @down_write(ptr noundef nonnull @namespace_sem) #22
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %0 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %0, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %1 = tail call ptr @llvm.returnaddress(i32 0) #22
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %2) #22
  %3 = ptrtoint ptr %dentry to i32
  %div3.i.i = lshr i32 %3, 7
  %4 = load i32, ptr @mp_hash_shift, align 4
  %shr.i.i = lshr i32 %div3.i.i, %4
  %add.i.i = add nuw nsw i32 %shr.i.i, %div3.i.i
  %5 = load ptr, ptr @mountpoint_hashtable, align 4
  %6 = load i32, ptr @mp_hash_mask, align 4
  %and.i.i = and i32 %add.i.i, %6
  %arrayidx.i.i = getelementptr %struct.hlist_head, ptr %5, i32 %and.i.i
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %entry
  %mp.0.in.i = phi ptr [ %arrayidx.i.i, %entry ], [ %mp.0.i, %for.body.i.for.cond.i_crit_edge ]
  %7 = ptrtoint ptr %mp.0.in.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %mp.0.i = load ptr, ptr %mp.0.in.i, align 4
  %tobool2.not.i = icmp eq ptr %mp.0.i, null
  br i1 %tobool2.not.i, label %for.cond.i.out_unlock_crit_edge, label %for.body.i

for.cond.i.out_unlock_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_unlock

for.body.i:                                       ; preds = %for.cond.i
  %m_dentry.i = getelementptr inbounds %struct.mountpoint, ptr %mp.0.i, i32 0, i32 1
  %8 = ptrtoint ptr %m_dentry.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %m_dentry.i, align 4
  %cmp.i = icmp eq ptr %9, %dentry
  br i1 %cmp.i, label %if.end, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond.i

if.end:                                           ; preds = %for.body.i
  %m_dentry.i.le = getelementptr inbounds %struct.mountpoint, ptr %mp.0.i, i32 0, i32 1
  %m_count.i = getelementptr inbounds %struct.mountpoint, ptr %mp.0.i, i32 0, i32 3
  %10 = ptrtoint ptr %m_count.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %m_count.i, align 4
  %inc.i = add i32 %11, 1
  store i32 %inc.i, ptr %m_count.i, align 4
  %12 = load i64, ptr @event, align 8
  %inc = add i64 %12, 1
  store i64 %inc, ptr @event, align 8
  %m_list = getelementptr inbounds %struct.mountpoint, ptr %mp.0.i, i32 0, i32 2
  %13 = ptrtoint ptr %m_list to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %m_list, align 4
  %tobool.not.i.not17 = icmp eq ptr %14, null
  br i1 %tobool.not.i.not17, label %if.end.while.end_crit_edge, label %if.end.while.body_crit_edge

if.end.while.body_crit_edge:                      ; preds = %if.end
  br label %while.body

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.body:                                       ; preds = %if.end7.while.body_crit_edge, %if.end.while.body_crit_edge
  %15 = phi ptr [ %23, %if.end7.while.body_crit_edge ], [ %14, %if.end.while.body_crit_edge ]
  %add.ptr = getelementptr i8, ptr %15, i32 -124
  %mnt_flags = getelementptr i8, ptr %15, i32 -100
  %16 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %mnt_flags, align 4
  %and = and i32 %17, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool5.not = icmp eq i32 %and, 0
  br i1 %tobool5.not, label %if.else, label %if.then6

if.then6:                                         ; preds = %while.body
  tail call fastcc void @umount_mnt(ptr noundef %add.ptr)
  %18 = load ptr, ptr @unmounted, align 4
  %19 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %18, ptr %15, align 4
  %tobool.not.i14 = icmp eq ptr %18, null
  br i1 %tobool.not.i14, label %if.then6.hlist_add_head.exit_crit_edge, label %do.body12.i

if.then6.hlist_add_head.exit_crit_edge:           ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_add_head.exit

do.body12.i:                                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #24
  %pprev.i = getelementptr inbounds %struct.hlist_node, ptr %18, i32 0, i32 1
  %20 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %15, ptr %pprev.i, align 4
  br label %hlist_add_head.exit

hlist_add_head.exit:                              ; preds = %do.body12.i, %if.then6.hlist_add_head.exit_crit_edge
  store volatile ptr %15, ptr @unmounted, align 4
  %pprev34.i = getelementptr inbounds %struct.hlist_node, ptr %15, i32 0, i32 1
  %21 = ptrtoint ptr %pprev34.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr @unmounted, ptr %pprev34.i, align 4
  br label %if.end7

if.else:                                          ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @umount_tree(ptr noundef %add.ptr, i32 noundef 4)
  br label %if.end7

if.end7:                                          ; preds = %if.else, %hlist_add_head.exit
  %22 = ptrtoint ptr %m_list to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %m_list, align 4
  %tobool.not.i.not = icmp eq ptr %23, null
  br i1 %tobool.not.i.not, label %if.end7.while.end_crit_edge, label %if.end7.while.body_crit_edge

if.end7.while.body_crit_edge:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body

if.end7.while.end_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.end:                                        ; preds = %if.end7.while.end_crit_edge, %if.end.while.end_crit_edge
  %24 = ptrtoint ptr %m_count.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %m_count.i, align 4
  %dec.i.i = add i32 %25, -1
  store i32 %dec.i.i, ptr %m_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i.i)
  %tobool.not.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %while.end.out_unlock_crit_edge

while.end.out_unlock_crit_edge:                   ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_unlock

if.then.i.i:                                      ; preds = %while.end
  %26 = ptrtoint ptr %m_dentry.i.le to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %m_dentry.i.le, align 4
  %28 = ptrtoint ptr %m_list to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile ptr, ptr %m_list, align 4
  %tobool.not.i.not.i.i = icmp eq ptr %29, null
  br i1 %tobool.not.i.not.i.i, label %do.end11.i.i, label %do.body6.i.i, !prof !352

do.body6.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namespace.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 821, 0\0A.popsection", ""() #22, !srcloc !370
  unreachable

do.end11.i.i:                                     ; preds = %if.then.i.i
  %d_lockref.i.i = getelementptr inbounds %struct.dentry, ptr %27, i32 0, i32 7
  tail call void @_raw_spin_lock(ptr noundef %d_lockref.i.i) #22
  %30 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %27, align 8
  %and.i.i15 = and i32 %31, -65537
  store i32 %and.i.i15, ptr %27, align 8
  tail call void @_raw_spin_unlock(ptr noundef %d_lockref.i.i) #22
  tail call void @dput_to_list(ptr noundef %27, ptr noundef nonnull @ex_mountpoints) #22
  %32 = ptrtoint ptr %mp.0.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %mp.0.i, align 4
  %pprev2.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %mp.0.i, i32 0, i32 1
  %34 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %pprev2.i.i.i.i, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %33, ptr %35, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %33, null
  br i1 %tobool.not.i.i.i.i, label %do.end11.i.i.hlist_del.exit.i.i_crit_edge, label %do.body13.i.i.i.i

do.end11.i.i.hlist_del.exit.i.i_crit_edge:        ; preds = %do.end11.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del.exit.i.i

do.body13.i.i.i.i:                                ; preds = %do.end11.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %33, i32 0, i32 1
  %37 = ptrtoint ptr %pprev14.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store volatile ptr %35, ptr %pprev14.i.i.i.i, align 4
  br label %hlist_del.exit.i.i

hlist_del.exit.i.i:                               ; preds = %do.body13.i.i.i.i, %do.end11.i.i.hlist_del.exit.i.i_crit_edge
  %38 = ptrtoint ptr %mp.0.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr inttoptr (i32 256 to ptr), ptr %mp.0.i, align 4
  %39 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i.i, align 4
  tail call void @kfree(ptr noundef nonnull %mp.0.i) #22
  br label %out_unlock

out_unlock:                                       ; preds = %hlist_del.exit.i.i, %while.end.out_unlock_crit_edge, %for.cond.i.out_unlock_crit_edge
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %2) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %40 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i = add i32 %40, 1
  store i32 %inc.i.i.i.i, ptr @mount_lock, align 128
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  tail call fastcc void @namespace_unlock()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @umount_mnt(ptr noundef %mnt) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %mnt_parent.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 1
  %0 = ptrtoint ptr %mnt_parent.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %mnt, ptr %mnt_parent.i, align 4
  %mnt1.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 3
  %1 = ptrtoint ptr %mnt1.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %mnt1.i, align 4
  %mnt_mountpoint.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 2
  %3 = ptrtoint ptr %mnt_mountpoint.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %2, ptr %mnt_mountpoint.i, align 4
  %mnt_child.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 7
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %mnt_child.i) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %entry.list_del_init.exit.i_crit_edge

entry.list_del_init.exit.i_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_init.exit.i

if.end.i.i.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 7, i32 1
  %4 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i.i, align 4
  %6 = ptrtoint ptr %mnt_child.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mnt_child.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev1.i.i.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %7, ptr %5, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i, %entry.list_del_init.exit.i_crit_edge
  %10 = ptrtoint ptr %mnt_child.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %mnt_child.i, ptr %mnt_child.i, align 4
  %prev.i3.i.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 7, i32 1
  %11 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %mnt_child.i, ptr %prev.i3.i.i, align 4
  %pprev.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %mnt, i32 0, i32 1
  %12 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pprev.i.i.i, align 4
  %tobool.not.i.not.i.i = icmp eq ptr %13, null
  br i1 %tobool.not.i.not.i.i, label %list_del_init.exit.i.hlist_del_init_rcu.exit.i_crit_edge, label %if.then.i.i

list_del_init.exit.i.hlist_del_init_rcu.exit.i_crit_edge: ; preds = %list_del_init.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del_init_rcu.exit.i

if.then.i.i:                                      ; preds = %list_del_init.exit.i
  %14 = ptrtoint ptr %mnt to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mnt, align 4
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %15, ptr %13, align 4
  %tobool.not.i7.i.i = icmp eq ptr %15, null
  br i1 %tobool.not.i7.i.i, label %if.then.i.i.__hlist_del.exit.i.i_crit_edge, label %do.body13.i.i.i

if.then.i.i.__hlist_del.exit.i.i_crit_edge:       ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__hlist_del.exit.i.i

do.body13.i.i.i:                                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %15, i32 0, i32 1
  %17 = ptrtoint ptr %pprev14.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %13, ptr %pprev14.i.i.i, align 4
  br label %__hlist_del.exit.i.i

__hlist_del.exit.i.i:                             ; preds = %do.body13.i.i.i, %if.then.i.i.__hlist_del.exit.i.i_crit_edge
  %18 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr null, ptr %pprev.i.i.i, align 4
  br label %hlist_del_init_rcu.exit.i

hlist_del_init_rcu.exit.i:                        ; preds = %__hlist_del.exit.i.i, %list_del_init.exit.i.hlist_del_init_rcu.exit.i_crit_edge
  %19 = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 18
  %pprev.i.i11.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 18, i32 0, i32 1
  %20 = ptrtoint ptr %pprev.i.i11.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pprev.i.i11.i, align 4
  %tobool.not.i.not.i12.i = icmp eq ptr %21, null
  br i1 %tobool.not.i.not.i12.i, label %hlist_del_init_rcu.exit.i.unhash_mnt.exit_crit_edge, label %if.then.i13.i

hlist_del_init_rcu.exit.i.unhash_mnt.exit_crit_edge: ; preds = %hlist_del_init_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %unhash_mnt.exit

if.then.i13.i:                                    ; preds = %hlist_del_init_rcu.exit.i
  %22 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %19, align 4
  %24 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %23, ptr %21, align 4
  %tobool.not.i3.i.i = icmp eq ptr %23, null
  br i1 %tobool.not.i3.i.i, label %if.then.i13.i.__hlist_del.exit.i16.i_crit_edge, label %do.body13.i.i15.i

if.then.i13.i.__hlist_del.exit.i16.i_crit_edge:   ; preds = %if.then.i13.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__hlist_del.exit.i16.i

do.body13.i.i15.i:                                ; preds = %if.then.i13.i
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i14.i = getelementptr inbounds %struct.hlist_node, ptr %23, i32 0, i32 1
  %25 = ptrtoint ptr %pprev14.i.i14.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %21, ptr %pprev14.i.i14.i, align 4
  br label %__hlist_del.exit.i16.i

__hlist_del.exit.i16.i:                           ; preds = %do.body13.i.i15.i, %if.then.i13.i.__hlist_del.exit.i16.i_crit_edge
  %26 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr null, ptr %19, align 4
  %27 = ptrtoint ptr %pprev.i.i11.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr null, ptr %pprev.i.i11.i, align 4
  br label %unhash_mnt.exit

unhash_mnt.exit:                                  ; preds = %__hlist_del.exit.i16.i, %hlist_del_init_rcu.exit.i.unhash_mnt.exit_crit_edge
  %mnt_mp.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 17
  %28 = ptrtoint ptr %mnt_mp.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %mnt_mp.i, align 4
  store ptr null, ptr %mnt_mp.i, align 4
  %m_count.i.i = getelementptr inbounds %struct.mountpoint, ptr %29, i32 0, i32 3
  %30 = ptrtoint ptr %m_count.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %m_count.i.i, align 4
  %dec.i.i = add i32 %31, -1
  store i32 %dec.i.i, ptr %m_count.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i.i)
  %tobool.not.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i2, label %unhash_mnt.exit.put_mountpoint.exit_crit_edge

unhash_mnt.exit.put_mountpoint.exit_crit_edge:    ; preds = %unhash_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_mountpoint.exit

if.then.i.i2:                                     ; preds = %unhash_mnt.exit
  %m_dentry.i.i = getelementptr inbounds %struct.mountpoint, ptr %29, i32 0, i32 1
  %32 = ptrtoint ptr %m_dentry.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %m_dentry.i.i, align 4
  %m_list.i.i = getelementptr inbounds %struct.mountpoint, ptr %29, i32 0, i32 2
  %34 = ptrtoint ptr %m_list.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile ptr, ptr %m_list.i.i, align 4
  %tobool.not.i.not.i.i1 = icmp eq ptr %35, null
  br i1 %tobool.not.i.not.i.i1, label %do.end11.i.i, label %do.body6.i.i, !prof !352

do.body6.i.i:                                     ; preds = %if.then.i.i2
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namespace.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 821, 0\0A.popsection", ""() #22, !srcloc !370
  unreachable

do.end11.i.i:                                     ; preds = %if.then.i.i2
  %d_lockref.i.i = getelementptr inbounds %struct.dentry, ptr %33, i32 0, i32 7
  tail call void @_raw_spin_lock(ptr noundef %d_lockref.i.i) #22
  %36 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %33, align 8
  %and.i.i = and i32 %37, -65537
  store i32 %and.i.i, ptr %33, align 8
  tail call void @_raw_spin_unlock(ptr noundef %d_lockref.i.i) #22
  tail call void @dput_to_list(ptr noundef %33, ptr noundef nonnull @ex_mountpoints) #22
  %38 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %29, align 4
  %pprev2.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %29, i32 0, i32 1
  %40 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %pprev2.i.i.i.i, align 4
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile ptr %39, ptr %41, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %39, null
  br i1 %tobool.not.i.i.i.i, label %do.end11.i.i.hlist_del.exit.i.i_crit_edge, label %do.body13.i.i.i.i

do.end11.i.i.hlist_del.exit.i.i_crit_edge:        ; preds = %do.end11.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del.exit.i.i

do.body13.i.i.i.i:                                ; preds = %do.end11.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %39, i32 0, i32 1
  %43 = ptrtoint ptr %pprev14.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store volatile ptr %41, ptr %pprev14.i.i.i.i, align 4
  br label %hlist_del.exit.i.i

hlist_del.exit.i.i:                               ; preds = %do.body13.i.i.i.i, %do.end11.i.i.hlist_del.exit.i.i_crit_edge
  %44 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr inttoptr (i32 256 to ptr), ptr %29, align 4
  %45 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i.i, align 4
  tail call void @kfree(ptr noundef %29) #22
  br label %put_mountpoint.exit

put_mountpoint.exit:                              ; preds = %hlist_del.exit.i.i, %unhash_mnt.exit.put_mountpoint.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @umount_tree(ptr noundef %mnt, i32 noundef %how) unnamed_addr #1 align 64 {
entry:
  %tmp_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp_list) #22
  %0 = getelementptr inbounds %struct.list_head, ptr %tmp_list, i32 0, i32 1
  %1 = ptrtoint ptr %tmp_list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %tmp_list, ptr %tmp_list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %tmp_list, ptr %0, align 4
  %and = and i32 %how, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  call void @propagate_mount_unlock(ptr noundef %mnt) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %tobool1.not110 = icmp eq ptr %mnt, null
  br i1 %tobool1.not110, label %if.end.for.cond4.preheader_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.cond4.preheader_crit_edge:             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %next_mnt.exit.for.cond4.preheader_crit_edge, %while.cond.i.for.cond4.preheader_crit_edge, %if.end.for.cond4.preheader_crit_edge
  %3 = ptrtoint ptr %tmp_list to i32
  call void @__asan_load4_noabort(i32 %3)
  %.pn112 = load ptr, ptr %tmp_list, align 4
  %cmp.not113 = icmp eq ptr %.pn112, %tmp_list
  br i1 %cmp.not113, label %for.cond4.preheader.for.end13_crit_edge, label %for.cond4.preheader.for.body6_crit_edge

for.cond4.preheader.for.body6_crit_edge:          ; preds = %for.cond4.preheader
  br label %for.body6

for.cond4.preheader.for.end13_crit_edge:          ; preds = %for.cond4.preheader
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end13

for.body:                                         ; preds = %next_mnt.exit.for.body_crit_edge, %if.end.for.body_crit_edge
  %p.0111 = phi ptr [ %add.ptr.i, %next_mnt.exit.for.body_crit_edge ], [ %mnt, %if.end.for.body_crit_edge ]
  %mnt_flags = getelementptr inbounds %struct.mount, ptr %p.0111, i32 0, i32 3, i32 2
  %4 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mnt_flags, align 4
  %or = or i32 %5, 134217728
  store i32 %or, ptr %mnt_flags, align 4
  %mnt_list = getelementptr inbounds %struct.mount, ptr %p.0111, i32 0, i32 10
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %mnt_list) #22
  br i1 %call.i.i, label %if.end.i.i, label %for.body.__list_del_entry.exit.i_crit_edge

for.body.__list_del_entry.exit.i_crit_edge:       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %__list_del_entry.exit.i

if.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.mount, ptr %p.0111, i32 0, i32 10, i32 1
  %6 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev.i.i, align 4
  %8 = ptrtoint ptr %mnt_list to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mnt_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev1.i.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %9, ptr %7, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i, %for.body.__list_del_entry.exit.i_crit_edge
  %12 = ptrtoint ptr %tmp_list to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %tmp_list, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %mnt_list, ptr noundef nonnull %tmp_list, ptr noundef %13) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.list_move.exit_crit_edge

__list_del_entry.exit.i.list_move.exit_crit_edge: ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_move.exit

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev1.i.i2.i = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %prev1.i.i2.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %mnt_list, ptr %prev1.i.i2.i, align 4
  %15 = ptrtoint ptr %mnt_list to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %13, ptr %mnt_list, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.mount, ptr %p.0111, i32 0, i32 10, i32 1
  %16 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %tmp_list, ptr %prev3.i.i.i, align 4
  %17 = ptrtoint ptr %tmp_list to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %mnt_list, ptr %tmp_list, align 4
  br label %list_move.exit

list_move.exit:                                   ; preds = %if.end.i.i.i, %__list_del_entry.exit.i.list_move.exit_crit_edge
  %mnt_mounts.i = getelementptr inbounds %struct.mount, ptr %p.0111, i32 0, i32 6
  %18 = ptrtoint ptr %mnt_mounts.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %mnt_mounts.i, align 4
  %cmp.i = icmp eq ptr %19, %mnt_mounts.i
  br i1 %cmp.i, label %list_move.exit.while.cond.i_crit_edge, label %list_move.exit.next_mnt.exit_crit_edge

list_move.exit.next_mnt.exit_crit_edge:           ; preds = %list_move.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit

list_move.exit.while.cond.i_crit_edge:            ; preds = %list_move.exit
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end.i.while.cond.i_crit_edge, %list_move.exit.while.cond.i_crit_edge
  %p.addr.0.i = phi ptr [ %23, %if.end.i.while.cond.i_crit_edge ], [ %p.0111, %list_move.exit.while.cond.i_crit_edge ]
  %cmp3.i = icmp eq ptr %p.addr.0.i, %mnt
  br i1 %cmp3.i, label %while.cond.i.for.cond4.preheader_crit_edge, label %if.end.i

while.cond.i.for.cond4.preheader_crit_edge:       ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond4.preheader

if.end.i:                                         ; preds = %while.cond.i
  %mnt_child.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 7
  %20 = ptrtoint ptr %mnt_child.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %mnt_child.i, align 4
  %mnt_parent.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 1
  %22 = ptrtoint ptr %mnt_parent.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %mnt_parent.i, align 4
  %mnt_mounts6.i = getelementptr inbounds %struct.mount, ptr %23, i32 0, i32 6
  %cmp7.not.i = icmp eq ptr %21, %mnt_mounts6.i
  br i1 %cmp7.not.i, label %if.end.i.while.cond.i_crit_edge, label %if.end.i.next_mnt.exit_crit_edge

if.end.i.next_mnt.exit_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit

if.end.i.while.cond.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i

next_mnt.exit:                                    ; preds = %if.end.i.next_mnt.exit_crit_edge, %list_move.exit.next_mnt.exit_crit_edge
  %next.0.i = phi ptr [ %19, %list_move.exit.next_mnt.exit_crit_edge ], [ %21, %if.end.i.next_mnt.exit_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %next.0.i, i32 -52
  %tobool1.not = icmp eq ptr %add.ptr.i, null
  br i1 %tobool1.not, label %next_mnt.exit.for.cond4.preheader_crit_edge, label %next_mnt.exit.for.body_crit_edge

next_mnt.exit.for.body_crit_edge:                 ; preds = %next_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

next_mnt.exit.for.cond4.preheader_crit_edge:      ; preds = %next_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond4.preheader

for.body6:                                        ; preds = %list_del_init.exit.for.body6_crit_edge, %for.cond4.preheader.for.body6_crit_edge
  %.pn114 = phi ptr [ %.pn, %list_del_init.exit.for.body6_crit_edge ], [ %.pn112, %for.cond4.preheader.for.body6_crit_edge ]
  %mnt_child = getelementptr i8, ptr %.pn114, i32 -20
  %call.i.i78 = call zeroext i1 @__list_del_entry_valid(ptr noundef %mnt_child) #22
  br i1 %call.i.i78, label %if.end.i.i81, label %for.body6.list_del_init.exit_crit_edge

for.body6.list_del_init.exit_crit_edge:           ; preds = %for.body6
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_init.exit

if.end.i.i81:                                     ; preds = %for.body6
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i79 = getelementptr i8, ptr %.pn114, i32 -16
  %24 = ptrtoint ptr %prev.i.i79 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %prev.i.i79, align 4
  %26 = ptrtoint ptr %mnt_child to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %mnt_child, align 4
  %prev1.i.i.i80 = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %prev1.i.i.i80 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %25, ptr %prev1.i.i.i80, align 4
  %29 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile ptr %27, ptr %25, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i81, %for.body6.list_del_init.exit_crit_edge
  %30 = ptrtoint ptr %mnt_child to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %mnt_child, ptr %mnt_child, align 4
  %prev.i3.i = getelementptr i8, ptr %.pn114, i32 -16
  %31 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %mnt_child, ptr %prev.i3.i, align 4
  %32 = ptrtoint ptr %.pn114 to i32
  call void @__asan_load4_noabort(i32 %32)
  %.pn = load ptr, ptr %.pn114, align 4
  %cmp.not = icmp eq ptr %.pn, %tmp_list
  br i1 %cmp.not, label %list_del_init.exit.for.end13_crit_edge, label %list_del_init.exit.for.body6_crit_edge

list_del_init.exit.for.body6_crit_edge:           ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body6

list_del_init.exit.for.end13_crit_edge:           ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end13

for.end13:                                        ; preds = %list_del_init.exit.for.end13_crit_edge, %for.cond4.preheader.for.end13_crit_edge
  br i1 %tobool.not, label %for.end13.if.end18_crit_edge, label %if.then16

for.end13.if.end18_crit_edge:                     ; preds = %for.end13
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end18

if.then16:                                        ; preds = %for.end13
  call void @__sanitizer_cov_trace_pc() #24
  %call17 = call i32 @propagate_umount(ptr noundef nonnull %tmp_list) #22
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %for.end13.if.end18_crit_edge
  %33 = ptrtoint ptr %tmp_list to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile ptr, ptr %tmp_list, align 4
  %cmp.i83.not116 = icmp eq ptr %34, %tmp_list
  br i1 %cmp.i83.not116, label %if.end18.while.end_crit_edge, label %while.body.lr.ph

if.end18.while.end_crit_edge:                     ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.body.lr.ph:                                 ; preds = %if.end18
  %and31 = and i32 %how, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31)
  %tobool32.not = icmp eq i32 %and31, 0
  %and9.i = and i32 %how, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9.i)
  %tobool10.not.i = icmp ne i32 %and9.i, 0
  br label %while.body

while.body:                                       ; preds = %if.end50.while.body_crit_edge, %while.body.lr.ph
  %35 = phi ptr [ %34, %while.body.lr.ph ], [ %101, %if.end50.while.body_crit_edge ]
  %add.ptr25 = getelementptr i8, ptr %35, i32 -72
  %mnt_expire = getelementptr i8, ptr %35, i32 8
  %call.i.i84 = call zeroext i1 @__list_del_entry_valid(ptr noundef %mnt_expire) #22
  br i1 %call.i.i84, label %if.end.i.i87, label %while.body.list_del_init.exit90_crit_edge

while.body.list_del_init.exit90_crit_edge:        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_init.exit90

if.end.i.i87:                                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i85 = getelementptr i8, ptr %35, i32 12
  %36 = ptrtoint ptr %prev.i.i85 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %prev.i.i85, align 4
  %38 = ptrtoint ptr %mnt_expire to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %mnt_expire, align 4
  %prev1.i.i.i86 = getelementptr inbounds %struct.list_head, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %prev1.i.i.i86 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %37, ptr %prev1.i.i.i86, align 4
  %41 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile ptr %39, ptr %37, align 4
  br label %list_del_init.exit90

list_del_init.exit90:                             ; preds = %if.end.i.i87, %while.body.list_del_init.exit90_crit_edge
  %42 = ptrtoint ptr %mnt_expire to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile ptr %mnt_expire, ptr %mnt_expire, align 4
  %prev.i3.i88 = getelementptr i8, ptr %35, i32 12
  %43 = ptrtoint ptr %prev.i3.i88 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %mnt_expire, ptr %prev.i3.i88, align 4
  %call.i.i91 = call zeroext i1 @__list_del_entry_valid(ptr noundef %35) #22
  br i1 %call.i.i91, label %if.end.i.i94, label %list_del_init.exit90.list_del_init.exit97_crit_edge

list_del_init.exit90.list_del_init.exit97_crit_edge: ; preds = %list_del_init.exit90
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_init.exit97

if.end.i.i94:                                     ; preds = %list_del_init.exit90
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i92 = getelementptr inbounds %struct.list_head, ptr %35, i32 0, i32 1
  %44 = ptrtoint ptr %prev.i.i92 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %prev.i.i92, align 4
  %46 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %35, align 4
  %prev1.i.i.i93 = getelementptr inbounds %struct.list_head, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %prev1.i.i.i93 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %45, ptr %prev1.i.i.i93, align 4
  %49 = ptrtoint ptr %45 to i32
  call void @__asan_store4_noabort(i32 %49)
  store volatile ptr %47, ptr %45, align 4
  br label %list_del_init.exit97

list_del_init.exit97:                             ; preds = %if.end.i.i94, %list_del_init.exit90.list_del_init.exit97_crit_edge
  %50 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile ptr %35, ptr %35, align 4
  %prev.i3.i95 = getelementptr inbounds %struct.list_head, ptr %35, i32 0, i32 1
  %51 = ptrtoint ptr %prev.i3.i95 to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %35, ptr %prev.i3.i95, align 4
  %mnt_ns = getelementptr i8, ptr %35, i32 44
  %52 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %mnt_ns, align 4
  %tobool27.not = icmp eq ptr %53, null
  br i1 %tobool27.not, label %list_del_init.exit97.if.end29_crit_edge, label %land.lhs.true.i

list_del_init.exit97.if.end29_crit_edge:          ; preds = %list_del_init.exit97
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end29

land.lhs.true.i:                                  ; preds = %list_del_init.exit97
  %mounts = getelementptr inbounds %struct.mnt_namespace, ptr %53, i32 0, i32 9
  %54 = ptrtoint ptr %mounts to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %mounts, align 8
  %dec = add i32 %55, -1
  store i32 %dec, ptr %mounts, align 8
  %event.i = getelementptr inbounds %struct.mnt_namespace, ptr %53, i32 0, i32 8
  %56 = ptrtoint ptr %event.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %event.i, align 8
  %58 = load i64, ptr @event, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %57, i64 %58)
  %cmp.not.i = icmp eq i64 %57, %58
  br i1 %cmp.not.i, label %land.lhs.true.i.if.end29_crit_edge, label %if.then.i

land.lhs.true.i.if.end29_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end29

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  %59 = ptrtoint ptr %event.i to i32
  call void @__asan_store8_noabort(i32 %59)
  store i64 %58, ptr %event.i, align 8
  %poll.i = getelementptr inbounds %struct.mnt_namespace, ptr %53, i32 0, i32 7
  call void @__wake_up(ptr noundef %poll.i, i32 noundef 1, i32 noundef 1, ptr noundef null) #22
  br label %if.end29

if.end29:                                         ; preds = %if.then.i, %land.lhs.true.i.if.end29_crit_edge, %list_del_init.exit97.if.end29_crit_edge
  %60 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr null, ptr %mnt_ns, align 4
  br i1 %tobool32.not, label %if.end.i100, label %if.end37

if.end37:                                         ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #24
  %mnt_flags35 = getelementptr i8, ptr %35, i32 -48
  %61 = ptrtoint ptr %mnt_flags35 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %mnt_flags35, align 4
  %or36 = or i32 %62, 33554432
  store i32 %or36, ptr %mnt_flags35, align 4
  br label %disconnect_mount.exit

if.end.i100:                                      ; preds = %if.end29
  %mnt_parent.i.i = getelementptr i8, ptr %35, i32 -64
  %63 = ptrtoint ptr %mnt_parent.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %mnt_parent.i.i, align 4
  %cmp.i.not.i = icmp eq ptr %64, %add.ptr25
  br i1 %cmp.i.not.i, label %if.end.i100.disconnect_mount.exit_crit_edge, label %if.end3.i

if.end.i100.disconnect_mount.exit_crit_edge:      ; preds = %if.end.i100
  call void @__sanitizer_cov_trace_pc() #24
  br label %disconnect_mount.exit

if.end3.i:                                        ; preds = %if.end.i100
  %mnt_flags.i = getelementptr inbounds %struct.mount, ptr %64, i32 0, i32 3, i32 2
  %65 = ptrtoint ptr %mnt_flags.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %mnt_flags.i, align 4
  %and5.i = and i32 %66, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  %brmerge = or i1 %tobool6.not.i, %tobool10.not.i
  br i1 %brmerge, label %if.end3.i.disconnect_mount.exit_crit_edge, label %if.end12.i

if.end3.i.disconnect_mount.exit_crit_edge:        ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %disconnect_mount.exit

if.end12.i:                                       ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #24
  %mnt_flags14.i = getelementptr i8, ptr %35, i32 -48
  %67 = ptrtoint ptr %mnt_flags14.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %mnt_flags14.i, align 4
  %and15.i = and i32 %68, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15.i)
  %tobool16.not.i = icmp eq i32 %and15.i, 0
  br label %disconnect_mount.exit

disconnect_mount.exit:                            ; preds = %if.end12.i, %if.end3.i.disconnect_mount.exit_crit_edge, %if.end.i100.disconnect_mount.exit_crit_edge, %if.end37
  %retval.0.i101 = phi i1 [ true, %if.end37 ], [ true, %if.end.i100.disconnect_mount.exit_crit_edge ], [ %tobool6.not.i, %if.end3.i.disconnect_mount.exit_crit_edge ], [ %tobool16.not.i, %if.end12.i ]
  %mnt_parent.i102 = getelementptr i8, ptr %35, i32 -64
  %69 = ptrtoint ptr %mnt_parent.i102 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %mnt_parent.i102, align 4
  %cmp.i103.not = icmp eq ptr %70, %add.ptr25
  br i1 %cmp.i103.not, label %if.end47, label %if.then41

if.then41:                                        ; preds = %disconnect_mount.exit
  %71 = ptrtoint ptr %mnt_parent.i102 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %mnt_parent.i102, align 4
  %73 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %mnt_pcp.i = getelementptr inbounds %struct.mount, ptr %72, i32 0, i32 5
  %74 = ptrtoint ptr %mnt_pcp.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %mnt_pcp.i, align 4
  %76 = ptrtoint ptr %75 to i32
  %77 = call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %77, -16384
  %78 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %78, i32 0, i32 3
  %79 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %80
  %81 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %82, %76
  %83 = inttoptr i32 %add.i to ptr
  %84 = ptrtoint ptr %83 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %83, align 4
  %add13.i = add i32 %85, -1
  store i32 %add13.i, ptr %83, align 4
  %86 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i = and i32 %86, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i105 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i105, label %if.then.i106, label %if.then41.mnt_add_count.exit_crit_edge, !prof !343

if.then41.mnt_add_count.exit_crit_edge:           ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_add_count.exit

if.then.i106:                                     ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #24
  call void @warn_bogus_irq_restore() #22
  br label %mnt_add_count.exit

mnt_add_count.exit:                               ; preds = %if.then.i106, %if.then41.mnt_add_count.exit_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %73) #22, !srcloc !344
  br i1 %retval.0.i101, label %if.else, label %if.then43

if.then43:                                        ; preds = %mnt_add_count.exit
  %mnt_child44 = getelementptr i8, ptr %35, i32 -20
  %87 = ptrtoint ptr %mnt_parent.i102 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %mnt_parent.i102, align 4
  %mnt_mounts = getelementptr inbounds %struct.mount, ptr %88, i32 0, i32 6
  %prev.i = getelementptr inbounds %struct.mount, ptr %88, i32 0, i32 6, i32 1
  %89 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %prev.i, align 4
  %call.i.i107 = call zeroext i1 @__list_add_valid(ptr noundef %mnt_child44, ptr noundef %90, ptr noundef %mnt_mounts) #22
  br i1 %call.i.i107, label %if.end.i.i108, label %if.then43.list_add_tail.exit_crit_edge

if.then43.list_add_tail.exit_crit_edge:           ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add_tail.exit

if.end.i.i108:                                    ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #24
  %91 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %mnt_child44, ptr %prev.i, align 4
  %92 = ptrtoint ptr %mnt_child44 to i32
  call void @__asan_store4_noabort(i32 %92)
  store ptr %mnt_mounts, ptr %mnt_child44, align 4
  %prev3.i.i = getelementptr i8, ptr %35, i32 -16
  %93 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store ptr %90, ptr %prev3.i.i, align 4
  %94 = ptrtoint ptr %90 to i32
  call void @__asan_store4_noabort(i32 %94)
  store volatile ptr %mnt_child44, ptr %90, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i108, %if.then43.list_add_tail.exit_crit_edge
  call void @change_mnt_propagation(ptr noundef %add.ptr25, i32 noundef 262144) #22
  br label %if.end50

if.else:                                          ; preds = %mnt_add_count.exit
  call void @__sanitizer_cov_trace_pc() #24
  call fastcc void @umount_mnt(ptr noundef %add.ptr25)
  call void @change_mnt_propagation(ptr noundef %add.ptr25, i32 noundef 262144) #22
  br label %if.then49

if.end47:                                         ; preds = %disconnect_mount.exit
  call void @change_mnt_propagation(ptr noundef %add.ptr25, i32 noundef 262144) #22
  br i1 %retval.0.i101, label %if.end47.if.then49_crit_edge, label %if.end47.if.end50_crit_edge

if.end47.if.end50_crit_edge:                      ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end50

if.end47.if.then49_crit_edge:                     ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then49

if.then49:                                        ; preds = %if.end47.if.then49_crit_edge, %if.else
  %95 = getelementptr i8, ptr %35, i32 52
  %96 = load ptr, ptr @unmounted, align 4
  %97 = ptrtoint ptr %95 to i32
  call void @__asan_store4_noabort(i32 %97)
  store volatile ptr %96, ptr %95, align 4
  %tobool.not.i109 = icmp eq ptr %96, null
  br i1 %tobool.not.i109, label %if.then49.hlist_add_head.exit_crit_edge, label %do.body12.i

if.then49.hlist_add_head.exit_crit_edge:          ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_add_head.exit

do.body12.i:                                      ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #24
  %pprev.i = getelementptr inbounds %struct.hlist_node, ptr %96, i32 0, i32 1
  %98 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %98)
  store volatile ptr %95, ptr %pprev.i, align 4
  br label %hlist_add_head.exit

hlist_add_head.exit:                              ; preds = %do.body12.i, %if.then49.hlist_add_head.exit_crit_edge
  store volatile ptr %95, ptr @unmounted, align 4
  %pprev34.i = getelementptr i8, ptr %35, i32 56
  %99 = ptrtoint ptr %pprev34.i to i32
  call void @__asan_store4_noabort(i32 %99)
  store volatile ptr @unmounted, ptr %pprev34.i, align 4
  br label %if.end50

if.end50:                                         ; preds = %hlist_add_head.exit, %if.end47.if.end50_crit_edge, %list_add_tail.exit
  %100 = ptrtoint ptr %tmp_list to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load volatile ptr, ptr %tmp_list, align 4
  %cmp.i83.not = icmp eq ptr %101, %tmp_list
  br i1 %cmp.i83.not, label %if.end50.while.end_crit_edge, label %if.end50.while.body_crit_edge

if.end50.while.body_crit_edge:                    ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body

if.end50.while.end_crit_edge:                     ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.end:                                        ; preds = %if.end50.while.end_crit_edge, %if.end18.while.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp_list) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @namespace_unlock() unnamed_addr #1 align 64 {
entry:
  %head = alloca %struct.hlist_head, align 4
  %list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %head) #22
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %list) #22
  %0 = getelementptr inbounds %struct.list_head, ptr %list, i32 0, i32 1
  %1 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %list, ptr %list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %list, ptr %0, align 4
  %3 = load ptr, ptr @unmounted, align 4
  %4 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %3, ptr %head, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.hlist_move_list.exit_crit_edge, label %if.then.i

entry.hlist_move_list.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_move_list.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %pprev.i = getelementptr inbounds %struct.hlist_node, ptr %3, i32 0, i32 1
  %5 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %head, ptr %pprev.i, align 4
  br label %hlist_move_list.exit

hlist_move_list.exit:                             ; preds = %if.then.i, %entry.hlist_move_list.exit_crit_edge
  store ptr null, ptr @unmounted, align 4
  %6 = load volatile ptr, ptr @ex_mountpoints, align 4
  %cmp.i.not.i = icmp eq ptr %6, @ex_mountpoints
  br i1 %cmp.i.not.i, label %hlist_move_list.exit.list_splice_init.exit_crit_edge, label %if.then.i28

hlist_move_list.exit.list_splice_init.exit_crit_edge: ; preds = %hlist_move_list.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_splice_init.exit

if.then.i28:                                      ; preds = %hlist_move_list.exit
  call void @__sanitizer_cov_trace_pc() #24
  %7 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @ex_mountpoints, i32 0, i32 1), align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %8 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %list, ptr %prev3.i.i, align 4
  %9 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %6, ptr %list, align 4
  %10 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %list, ptr %7, align 4
  %11 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %7, ptr %0, align 4
  store volatile ptr @ex_mountpoints, ptr @ex_mountpoints, align 4
  store ptr @ex_mountpoints, ptr getelementptr inbounds (%struct.list_head, ptr @ex_mountpoints, i32 0, i32 1), align 4
  br label %list_splice_init.exit

list_splice_init.exit:                            ; preds = %if.then.i28, %hlist_move_list.exit.list_splice_init.exit_crit_edge
  call void @up_write(ptr noundef nonnull @namespace_sem) #22
  call void @shrink_dentry_list(ptr noundef nonnull %list) #22
  %12 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %head, align 4
  %tobool.not.i29.not = icmp eq ptr %13, null
  br i1 %tobool.not.i29.not, label %list_splice_init.exit.cleanup_crit_edge, label %if.end, !prof !352

list_splice_init.exit.cleanup_crit_edge:          ; preds = %list_splice_init.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %list_splice_init.exit
  call void @synchronize_rcu_expedited() #22
  %14 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %head, align 4
  %tobool3.not = icmp eq ptr %15, null
  %add.ptr = getelementptr i8, ptr %15, i32 -124
  %tobool5.not3436 = icmp eq ptr %add.ptr, null
  %tobool5.not34 = or i1 %tobool3.not, %tobool5.not3436
  br i1 %tobool5.not34, label %if.end.cleanup_crit_edge, label %if.end.land.rhs_crit_edge

if.end.land.rhs_crit_edge:                        ; preds = %if.end
  br label %land.rhs

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

land.rhs:                                         ; preds = %mntput.exit.land.rhs_crit_edge, %if.end.land.rhs_crit_edge
  %m.035 = phi ptr [ %add.ptr15, %mntput.exit.land.rhs_crit_edge ], [ %add.ptr, %if.end.land.rhs_crit_edge ]
  %16 = getelementptr inbounds %struct.mount, ptr %m.035, i32 0, i32 18
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 4
  %pprev2.i.i = getelementptr inbounds %struct.mount, ptr %m.035, i32 0, i32 18, i32 0, i32 1
  %19 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %pprev2.i.i, align 4
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %18, ptr %20, align 4
  %tobool.not.i.i = icmp eq ptr %18, null
  br i1 %tobool.not.i.i, label %land.rhs.hlist_del.exit_crit_edge, label %do.body13.i.i

land.rhs.hlist_del.exit_crit_edge:                ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del.exit

do.body13.i.i:                                    ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i = getelementptr inbounds %struct.hlist_node, ptr %18, i32 0, i32 1
  %22 = ptrtoint ptr %pprev14.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %20, ptr %pprev14.i.i, align 4
  br label %hlist_del.exit

hlist_del.exit:                                   ; preds = %do.body13.i.i, %land.rhs.hlist_del.exit_crit_edge
  %23 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr inttoptr (i32 256 to ptr), ptr %16, align 4
  %24 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i, align 4
  %mnt = getelementptr inbounds %struct.mount, ptr %m.035, i32 0, i32 3
  %tobool.not.i30 = icmp eq ptr %mnt, null
  br i1 %tobool.not.i30, label %hlist_del.exit.mntput.exit_crit_edge, label %if.then.i31

hlist_del.exit.mntput.exit_crit_edge:             ; preds = %hlist_del.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %mntput.exit

if.then.i31:                                      ; preds = %hlist_del.exit
  %mnt_expiry_mark.i = getelementptr %struct.mount, ptr %m.035, i32 0, i32 24
  %25 = ptrtoint ptr %mnt_expiry_mark.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %mnt_expiry_mark.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool1.not.i = icmp eq i32 %26, 0
  br i1 %tobool1.not.i, label %if.then.i31.if.end.i_crit_edge, label %if.then4.i, !prof !352

if.then.i31.if.end.i_crit_edge:                   ; preds = %if.then.i31
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i

if.then4.i:                                       ; preds = %if.then.i31
  call void @__sanitizer_cov_trace_pc() #24
  %27 = ptrtoint ptr %mnt_expiry_mark.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 0, ptr %mnt_expiry_mark.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then4.i, %if.then.i31.if.end.i_crit_edge
  call fastcc void @mntput_no_expire(ptr noundef nonnull %m.035) #22
  br label %mntput.exit

mntput.exit:                                      ; preds = %if.end.i, %hlist_del.exit.mntput.exit_crit_edge
  %add.ptr15 = getelementptr i8, ptr %18, i32 -124
  %tobool5.not37 = icmp eq ptr %add.ptr15, null
  %tobool5.not = or i1 %tobool.not.i.i, %tobool5.not37
  br i1 %tobool5.not, label %mntput.exit.cleanup_crit_edge, label %mntput.exit.land.rhs_crit_edge

mntput.exit.land.rhs_crit_edge:                   ; preds = %mntput.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs

mntput.exit.cleanup_crit_edge:                    ; preds = %mntput.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

cleanup:                                          ; preds = %mntput.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %list_splice_init.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %list) #22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %head) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @path_umount(ptr nocapture noundef readonly %path, i32 noundef %flags) local_unnamed_addr #1 align 64 {
entry:
  %graveyard.i.i = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %path, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 -16
  %2 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i.i, align 8
  %nsproxy.i.i = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 110
  %6 = ptrtoint ptr %nsproxy.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %nsproxy.i.i, align 4
  %mnt_ns.i.i = getelementptr inbounds %struct.nsproxy, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %mnt_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mnt_ns.i.i, align 4
  %user_ns.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %9, i32 0, i32 4
  %10 = ptrtoint ptr %user_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %user_ns.i.i, align 8
  %call1.i.i = tail call zeroext i1 @ns_capable(ptr noundef %11, i32 noundef 21) #22
  br i1 %call1.i.i, label %if.end.i, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.end.i:                                         ; preds = %entry
  %dentry.i = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %12 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dentry.i, align 4
  %14 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %path, align 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  %cmp.not.i = icmp eq ptr %13, %17
  br i1 %cmp.not.i, label %if.end5.i, label %if.end.i.if.end_crit_edge

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.end5.i:                                        ; preds = %if.end.i
  %mnt_ns.i21.i = getelementptr i8, ptr %1, i32 100
  %18 = ptrtoint ptr %mnt_ns.i21.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %mnt_ns.i21.i, align 4
  %20 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i22.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i22.i to ptr
  %task.i23.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %task.i23.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task.i23.i, align 8
  %nsproxy.i24.i = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 110
  %24 = ptrtoint ptr %nsproxy.i24.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %nsproxy.i24.i, align 4
  %mnt_ns1.i.i = getelementptr inbounds %struct.nsproxy, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %mnt_ns1.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %mnt_ns1.i.i, align 4
  %cmp.i.not.i = icmp eq ptr %19, %27
  br i1 %cmp.i.not.i, label %if.end8.i, label %if.end5.i.if.end_crit_edge

if.end5.i.if.end_crit_edge:                       ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.end8.i:                                        ; preds = %if.end5.i
  %mnt_flags.i = getelementptr i8, ptr %1, i32 8
  %28 = ptrtoint ptr %mnt_flags.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %mnt_flags.i, align 4
  %and.i = and i32 %29, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool10.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool10.not.i, label %if.end12.i, label %if.end8.i.if.end_crit_edge

if.end8.i.if.end_crit_edge:                       ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.end12.i:                                       ; preds = %if.end8.i
  %and13.i = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13.i)
  %tobool14.not.i = icmp eq i32 %and13.i, 0
  br i1 %tobool14.not.i, label %if.end12.i.if.then_crit_edge, label %land.lhs.true.i

if.end12.i.if.then_crit_edge:                     ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then

land.lhs.true.i:                                  ; preds = %if.end12.i
  %call15.i = tail call zeroext i1 @capable(i32 noundef 21) #22
  br i1 %call15.i, label %land.lhs.true.i.if.then_crit_edge, label %land.lhs.true.i.if.end_crit_edge

land.lhs.true.i.if.end_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true.i.if.then_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then

if.then:                                          ; preds = %land.lhs.true.i.if.then_crit_edge, %if.end12.i.if.then_crit_edge
  %mnt_sb.i = getelementptr i8, ptr %1, i32 4
  %30 = ptrtoint ptr %mnt_sb.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %mnt_sb.i, align 4
  %call.i = tail call i32 @security_sb_umount(ptr noundef %1, i32 noundef %flags) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i10, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.end.i10:                                       ; preds = %if.then
  %and.i9 = and i32 %flags, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i9)
  %tobool4.not.i = icmp eq i32 %and.i9, 0
  br i1 %tobool4.not.i, label %if.end.i10.if.end35.i_crit_edge, label %if.then5.i

if.end.i10.if.end35.i_crit_edge:                  ; preds = %if.end.i10
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end35.i

if.then5.i:                                       ; preds = %if.end.i10
  %32 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 2
  %34 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %task.i, align 8
  %fs.i = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 107
  %36 = ptrtoint ptr %fs.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %fs.i, align 128
  %root.i = getelementptr inbounds %struct.fs_struct, ptr %37, i32 0, i32 5
  %38 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %root.i, align 4
  %cmp.i = icmp ne ptr %1, %39
  %and9.i = and i32 %flags, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9.i)
  %tobool10.not.i11 = icmp eq i32 %and9.i, 0
  %or.cond.i = and i1 %tobool10.not.i11, %cmp.i
  br i1 %or.cond.i, label %if.end12.i12, label %if.then5.i.if.end_crit_edge

if.then5.i.if.end_crit_edge:                      ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.end12.i12:                                     ; preds = %if.then5.i
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %40 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i.i = add i32 %40, 1
  store i32 %inc.i.i.i.i.i.i, ptr @mount_lock, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %41 = tail call ptr @llvm.returnaddress(i32 0) #22
  %42 = ptrtoint ptr %41 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %42) #22
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %43 = load i32, ptr @nr_cpu_ids, align 4
  %call6.i.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__sanitizer_cov_trace_cmp4(i32 %call6.i.i, i32 %43)
  %cmp7.i.i = icmp ult i32 %call6.i.i, %43
  br i1 %cmp7.i.i, label %do.body.lr.ph.i.i, label %if.end12.i12.if.then15.i_crit_edge

if.end12.i12.if.then15.i_crit_edge:               ; preds = %if.end12.i12
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then15.i

do.body.lr.ph.i.i:                                ; preds = %if.end12.i12
  %mnt_pcp.i.i = getelementptr i8, ptr %1, i32 24
  %44 = ptrtoint ptr %mnt_pcp.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %mnt_pcp.i.i, align 4
  %46 = ptrtoint ptr %45 to i32
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.body.i.i.do.body.i.i_crit_edge, %do.body.lr.ph.i.i
  %call9.i.i = phi i32 [ %call6.i.i, %do.body.lr.ph.i.i ], [ %call.i107.i, %do.body.i.i.do.body.i.i_crit_edge ]
  %count.08.i.i = phi i32 [ 0, %do.body.lr.ph.i.i ], [ %add2.i.i, %do.body.i.i.do.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call9.i.i
  %47 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %48, %46
  %49 = inttoptr i32 %add.i.i to ptr
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %49, align 4
  %add2.i.i = add i32 %51, %count.08.i.i
  %call.i107.i = tail call i32 @cpumask_next(i32 noundef %call9.i.i, ptr noundef nonnull @__cpu_possible_mask) #25
  %cmp.i.i = icmp ult i32 %call.i107.i, %43
  br i1 %cmp.i.i, label %do.body.i.i.do.body.i.i_crit_edge, label %mnt_get_count.exit.i

do.body.i.i.do.body.i.i_crit_edge:                ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body.i.i

mnt_get_count.exit.i:                             ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %add2.i.i)
  %cmp14.not.i = icmp eq i32 %add2.i.i, 2
  br i1 %cmp14.not.i, label %if.end16.i, label %mnt_get_count.exit.i.if.then15.i_crit_edge

mnt_get_count.exit.i.if.then15.i_crit_edge:       ; preds = %mnt_get_count.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then15.i

if.then15.i:                                      ; preds = %mnt_get_count.exit.i.if.then15.i_crit_edge, %if.end12.i12.if.then15.i_crit_edge
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %42) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %52 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %52, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  br label %if.end

if.end16.i:                                       ; preds = %mnt_get_count.exit.i
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %42) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %53 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i108.i = add i32 %53, 1
  store i32 %inc.i.i.i.i108.i, ptr @mount_lock, align 128
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %mnt_expiry_mark.i = getelementptr i8, ptr %1, i32 140
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %mnt_expiry_mark.i, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !377
  tail call void @llvm.prefetch.p0(ptr %mnt_expiry_mark.i, i32 1, i32 3, i32 1) #22
  %54 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 1, ptr %mnt_expiry_mark.i) #22, !srcloc !378
  %asmresult.i.i = extractvalue { i32, i32 } %54, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !379
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %tobool32.not.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %tobool32.not.i, label %if.end16.i.if.end_crit_edge, label %if.end16.i.if.end35.i_crit_edge

if.end16.i.if.end35.i_crit_edge:                  ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end35.i

if.end16.i.if.end_crit_edge:                      ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.end35.i:                                       ; preds = %if.end16.i.if.end35.i_crit_edge, %if.end.i10.if.end35.i_crit_edge
  br i1 %tobool14.not.i, label %if.end35.i.if.end42.i_crit_edge, label %land.lhs.true.i13

if.end35.i.if.end42.i_crit_edge:                  ; preds = %if.end35.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42.i

land.lhs.true.i13:                                ; preds = %if.end35.i
  %s_op.i = getelementptr inbounds %struct.super_block, ptr %31, i32 0, i32 6
  %55 = ptrtoint ptr %s_op.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %s_op.i, align 4
  %umount_begin.i = getelementptr inbounds %struct.super_operations, ptr %56, i32 0, i32 15
  %57 = ptrtoint ptr %umount_begin.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %umount_begin.i, align 4
  %tobool38.not.i = icmp eq ptr %58, null
  br i1 %tobool38.not.i, label %land.lhs.true.i13.if.end42.i_crit_edge, label %if.then39.i

land.lhs.true.i13.if.end42.i_crit_edge:           ; preds = %land.lhs.true.i13
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end42.i

if.then39.i:                                      ; preds = %land.lhs.true.i13
  call void @__sanitizer_cov_trace_pc() #24
  tail call void %58(ptr noundef %31) #22
  br label %if.end42.i

if.end42.i:                                       ; preds = %if.then39.i, %land.lhs.true.i13.if.end42.i_crit_edge, %if.end35.i.if.end42.i_crit_edge
  %59 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i109.i = and i32 %59, -16384
  %60 = inttoptr i32 %and.i109.i to ptr
  %task45.i = getelementptr inbounds %struct.thread_info, ptr %60, i32 0, i32 2
  %61 = ptrtoint ptr %task45.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %task45.i, align 8
  %fs46.i = getelementptr inbounds %struct.task_struct, ptr %62, i32 0, i32 107
  %63 = ptrtoint ptr %fs46.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %fs46.i, align 128
  %root47.i = getelementptr inbounds %struct.fs_struct, ptr %64, i32 0, i32 5
  %65 = ptrtoint ptr %root47.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %root47.i, align 4
  %cmp49.i = icmp eq ptr %1, %66
  %and51.i = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and51.i)
  %tobool52.not.i = icmp eq i32 %and51.i, 0
  %or.cond106.i = and i1 %tobool52.not.i, %cmp49.i
  br i1 %or.cond106.i, label %if.then53.i, label %if.end58.i

if.then53.i:                                      ; preds = %if.end42.i
  %s_user_ns.i = getelementptr inbounds %struct.super_block, ptr %31, i32 0, i32 53
  %67 = ptrtoint ptr %s_user_ns.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %s_user_ns.i, align 8
  %call54.i = tail call zeroext i1 @ns_capable(ptr noundef %68, i32 noundef 21) #22
  br i1 %call54.i, label %if.end56.i, label %if.then53.i.if.end_crit_edge

if.then53.i.if.end_crit_edge:                     ; preds = %if.then53.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.end56.i:                                       ; preds = %if.then53.i
  %s_umount.i.i = getelementptr inbounds %struct.super_block, ptr %31, i32 0, i32 14
  tail call void @down_write(ptr noundef %s_umount.i.i) #22
  %s_flags.i.i.i = getelementptr inbounds %struct.super_block, ptr %31, i32 0, i32 10
  %69 = ptrtoint ptr %s_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %s_flags.i.i.i, align 4
  %and.i.i.i14 = and i32 %70, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i14)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i14, 0
  br i1 %tobool.i.not.i.i, label %if.then.i.i, label %if.end56.i.do_umount_root.exit.i_crit_edge

if.end56.i.do_umount_root.exit.i_crit_edge:       ; preds = %if.end56.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_umount_root.exit.i

if.then.i.i:                                      ; preds = %if.end56.i
  %s_root.i.i = getelementptr inbounds %struct.super_block, ptr %31, i32 0, i32 13
  %71 = ptrtoint ptr %s_root.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %s_root.i.i, align 64
  %call1.i.i15 = tail call ptr @fs_context_for_reconfigure(ptr noundef %72, i32 noundef 1, i32 noundef 1) #22
  %cmp.i.i.i = icmp ugt ptr %call1.i.i15, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %if.then3.i.i, label %if.else.i.i

if.then3.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %73 = ptrtoint ptr %call1.i.i15 to i32
  br label %do_umount_root.exit.i

if.else.i.i:                                      ; preds = %if.then.i.i
  %call5.i.i = tail call i32 @parse_monolithic_mount_data(ptr noundef %call1.i.i15, ptr noundef null) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i)
  %tobool.not.i.i = icmp eq i32 %call5.i.i, 0
  br i1 %tobool.not.i.i, label %if.then6.i.i, label %if.else.i.i.if.end.i.i_crit_edge

if.else.i.i.if.end.i.i_crit_edge:                 ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i.i

if.then6.i.i:                                     ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %call7.i.i = tail call i32 @reconfigure_super(ptr noundef %call1.i.i15) #22
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then6.i.i, %if.else.i.i.if.end.i.i_crit_edge
  %ret.0.i.i = phi i32 [ %call5.i.i, %if.else.i.i.if.end.i.i_crit_edge ], [ %call7.i.i, %if.then6.i.i ]
  tail call void @put_fs_context(ptr noundef %call1.i.i15) #22
  br label %do_umount_root.exit.i

do_umount_root.exit.i:                            ; preds = %if.end.i.i, %if.then3.i.i, %if.end56.i.do_umount_root.exit.i_crit_edge
  %ret.2.i.i = phi i32 [ 0, %if.end56.i.do_umount_root.exit.i_crit_edge ], [ %73, %if.then3.i.i ], [ %ret.0.i.i, %if.end.i.i ]
  tail call void @up_write(ptr noundef %s_umount.i.i) #22
  br label %if.end

if.end58.i:                                       ; preds = %if.end42.i
  tail call void @down_write(ptr noundef nonnull @namespace_sem) #22
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %74 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i110.i = add i32 %74, 1
  store i32 %inc.i.i.i.i.i110.i, ptr @mount_lock, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %75 = tail call ptr @llvm.returnaddress(i32 0) #22
  %76 = ptrtoint ptr %75 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %76) #22
  %77 = ptrtoint ptr %mnt_flags.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %mnt_flags.i, align 4
  %and60.i = and i32 %78, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and60.i)
  %tobool61.not.i = icmp eq i32 %and60.i, 0
  br i1 %tobool61.not.i, label %if.end63.i, label %if.end58.i.out.i_crit_edge

if.end58.i.out.i_crit_edge:                       ; preds = %if.end58.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.i

if.end63.i:                                       ; preds = %if.end58.i
  %79 = load i64, ptr @event, align 8
  %inc.i = add i64 %79, 1
  store i64 %inc.i, ptr @event, align 8
  br i1 %tobool52.not.i, label %if.else.i, label %if.then66.i

if.then66.i:                                      ; preds = %if.end63.i
  %mnt_list.i = getelementptr i8, ptr %1, i32 56
  %80 = ptrtoint ptr %mnt_list.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile ptr, ptr %mnt_list.i, align 4
  %cmp.i111.not.i = icmp eq ptr %81, %mnt_list.i
  br i1 %cmp.i111.not.i, label %if.then66.i.out.i_crit_edge, label %if.then69.i

if.then66.i.out.i_crit_edge:                      ; preds = %if.then66.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.i

if.then69.i:                                      ; preds = %if.then66.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @umount_tree(ptr noundef %add.ptr.i, i32 noundef 2) #22
  br label %out.i

if.else.i:                                        ; preds = %if.end63.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %graveyard.i.i) #22
  %82 = getelementptr inbounds %struct.list_head, ptr %graveyard.i.i, i32 0, i32 1
  %83 = ptrtoint ptr %graveyard.i.i to i32
  call void @__asan_store4_noabort(i32 %83)
  store ptr %graveyard.i.i, ptr %graveyard.i.i, align 4
  %84 = ptrtoint ptr %82 to i32
  call void @__asan_store4_noabort(i32 %84)
  store ptr %graveyard.i.i, ptr %82, align 4
  br label %repeat.i.i.i

repeat.i.i.i:                                     ; preds = %repeat.i.i.i.backedge, %if.else.i
  %found.0.i.i.i = phi i32 [ 0, %if.else.i ], [ %found.0.i.i.i.be, %repeat.i.i.i.backedge ]
  %this_parent.0.i.i.i = phi ptr [ %add.ptr.i, %if.else.i ], [ %this_parent.0.i.i.i.be, %repeat.i.i.i.backedge ]
  %mnt_mounts.i.i.i = getelementptr inbounds %struct.mount, ptr %this_parent.0.i.i.i, i32 0, i32 6
  br label %resume.i.i.i

resume.i.i.i:                                     ; preds = %if.then16.i.i.i, %repeat.i.i.i
  %found.1.i.i.i = phi i32 [ %found.0.i.i.i, %repeat.i.i.i ], [ %found.2.i.lcssa.i.i, %if.then16.i.i.i ]
  %next.0.in.i.i.i = phi ptr [ %mnt_mounts.i.i.i, %repeat.i.i.i ], [ %mnt_child.i.i.i, %if.then16.i.i.i ]
  %this_parent.1.i.i.i = phi ptr [ %this_parent.0.i.i.i, %repeat.i.i.i ], [ %105, %if.then16.i.i.i ]
  %85 = ptrtoint ptr %next.0.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %next.0.i.i.i = load ptr, ptr %next.0.in.i.i.i, align 4
  %mnt_mounts2.i.i.i = getelementptr inbounds %struct.mount, ptr %this_parent.1.i.i.i, i32 0, i32 6
  %cmp.not.i12.i.i = icmp eq ptr %next.0.i.i.i, %mnt_mounts2.i.i.i
  br i1 %cmp.not.i12.i.i, label %resume.i.i.i.while.end.i.i.i_crit_edge, label %resume.i.i.i.while.body.i.i.i_crit_edge

resume.i.i.i.while.body.i.i.i_crit_edge:          ; preds = %resume.i.i.i
  br label %while.body.i.i.i

resume.i.i.i.while.end.i.i.i_crit_edge:           ; preds = %resume.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end.i.i.i

while.body.i.i.i:                                 ; preds = %cleanup.i.i.i.while.body.i.i.i_crit_edge, %resume.i.i.i.while.body.i.i.i_crit_edge
  %next.1.i14.i.i = phi ptr [ %87, %cleanup.i.i.i.while.body.i.i.i_crit_edge ], [ %next.0.i.i.i, %resume.i.i.i.while.body.i.i.i_crit_edge ]
  %found.2.i13.i.i = phi i32 [ %found.4.i.i.i, %cleanup.i.i.i.while.body.i.i.i_crit_edge ], [ %found.1.i.i.i, %resume.i.i.i.while.body.i.i.i_crit_edge ]
  %add.ptr.i.i.i = getelementptr i8, ptr %next.1.i14.i.i, i32 -52
  %86 = ptrtoint ptr %next.1.i14.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %next.1.i14.i.i, align 4
  %mnt_flags.i.i.i = getelementptr i8, ptr %next.1.i14.i.i, i32 -28
  %88 = ptrtoint ptr %mnt_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %mnt_flags.i.i.i, align 4
  %and.i.i112.i = and i32 %89, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i112.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i112.i, 0
  br i1 %tobool.not.i.i.i, label %while.body.i.i.i.cleanup.i.i.i_crit_edge, label %if.end.i.i.i

while.body.i.i.i.cleanup.i.i.i_crit_edge:         ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup.i.i.i

if.end.i.i.i:                                     ; preds = %while.body.i.i.i
  %mnt_mounts6.i.i.i = getelementptr i8, ptr %next.1.i14.i.i, i32 -8
  %90 = ptrtoint ptr %mnt_mounts6.i.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load volatile ptr, ptr %mnt_mounts6.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %91, %mnt_mounts6.i.i.i
  br i1 %cmp.i.not.i.i.i, label %if.end9.i.i.i, label %if.end.i.i.i.repeat.i.i.i.backedge_crit_edge

if.end.i.i.i.repeat.i.i.i.backedge_crit_edge:     ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %repeat.i.i.i.backedge

if.end9.i.i.i:                                    ; preds = %if.end.i.i.i
  %call10.i.i.i = call i32 @propagate_mount_busy(ptr noundef %add.ptr.i.i.i, i32 noundef 1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i.i.i)
  %tobool11.not.i.i.i = icmp eq i32 %call10.i.i.i, 0
  br i1 %tobool11.not.i.i.i, label %if.then12.i.i.i, label %if.end9.i.i.i.cleanup.i.i.i_crit_edge

if.end9.i.i.i.cleanup.i.i.i_crit_edge:            ; preds = %if.end9.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup.i.i.i

if.then12.i.i.i:                                  ; preds = %if.end9.i.i.i
  %mnt_expire.i.i.i = getelementptr i8, ptr %next.1.i14.i.i, i32 28
  %call.i.i.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %mnt_expire.i.i.i) #22
  br i1 %call.i.i.i.i.i, label %if.end.i.i.i.i.i, label %if.then12.i.i.i.__list_del_entry.exit.i.i.i.i_crit_edge

if.then12.i.i.i.__list_del_entry.exit.i.i.i.i_crit_edge: ; preds = %if.then12.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__list_del_entry.exit.i.i.i.i

if.end.i.i.i.i.i:                                 ; preds = %if.then12.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i.i.i.i = getelementptr i8, ptr %next.1.i14.i.i, i32 32
  %92 = ptrtoint ptr %prev.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %prev.i.i.i.i.i, align 4
  %94 = ptrtoint ptr %mnt_expire.i.i.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %mnt_expire.i.i.i, align 4
  %prev1.i.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %95, i32 0, i32 1
  %96 = ptrtoint ptr %prev1.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %96)
  store ptr %93, ptr %prev1.i.i.i.i.i.i, align 4
  %97 = ptrtoint ptr %93 to i32
  call void @__asan_store4_noabort(i32 %97)
  store volatile ptr %95, ptr %93, align 4
  br label %__list_del_entry.exit.i.i.i.i

__list_del_entry.exit.i.i.i.i:                    ; preds = %if.end.i.i.i.i.i, %if.then12.i.i.i.__list_del_entry.exit.i.i.i.i_crit_edge
  %98 = ptrtoint ptr %82 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %82, align 4
  %call.i.i.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %mnt_expire.i.i.i, ptr noundef %99, ptr noundef nonnull %graveyard.i.i) #22
  br i1 %call.i.i.i.i.i.i, label %if.end.i.i.i.i.i.i, label %__list_del_entry.exit.i.i.i.i.list_move_tail.exit.i.i.i_crit_edge

__list_del_entry.exit.i.i.i.i.list_move_tail.exit.i.i.i_crit_edge: ; preds = %__list_del_entry.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_move_tail.exit.i.i.i

if.end.i.i.i.i.i.i:                               ; preds = %__list_del_entry.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %100 = ptrtoint ptr %82 to i32
  call void @__asan_store4_noabort(i32 %100)
  store ptr %mnt_expire.i.i.i, ptr %82, align 4
  %101 = ptrtoint ptr %mnt_expire.i.i.i to i32
  call void @__asan_store4_noabort(i32 %101)
  store ptr %graveyard.i.i, ptr %mnt_expire.i.i.i, align 4
  %prev3.i.i.i.i.i.i = getelementptr i8, ptr %next.1.i14.i.i, i32 32
  %102 = ptrtoint ptr %prev3.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store ptr %99, ptr %prev3.i.i.i.i.i.i, align 4
  %103 = ptrtoint ptr %99 to i32
  call void @__asan_store4_noabort(i32 %103)
  store volatile ptr %mnt_expire.i.i.i, ptr %99, align 4
  br label %list_move_tail.exit.i.i.i

list_move_tail.exit.i.i.i:                        ; preds = %if.end.i.i.i.i.i.i, %__list_del_entry.exit.i.i.i.i.list_move_tail.exit.i.i.i_crit_edge
  %inc.i.i.i = add i32 %found.2.i13.i.i, 1
  br label %cleanup.i.i.i

cleanup.i.i.i:                                    ; preds = %list_move_tail.exit.i.i.i, %if.end9.i.i.i.cleanup.i.i.i_crit_edge, %while.body.i.i.i.cleanup.i.i.i_crit_edge
  %found.4.i.i.i = phi i32 [ %found.2.i13.i.i, %while.body.i.i.i.cleanup.i.i.i_crit_edge ], [ %found.2.i13.i.i, %if.end9.i.i.i.cleanup.i.i.i_crit_edge ], [ %inc.i.i.i, %list_move_tail.exit.i.i.i ]
  %cmp.not.i.i.i = icmp eq ptr %87, %mnt_mounts2.i.i.i
  br i1 %cmp.not.i.i.i, label %cleanup.i.i.i.while.end.i.i.i_crit_edge, label %cleanup.i.i.i.while.body.i.i.i_crit_edge

cleanup.i.i.i.while.body.i.i.i_crit_edge:         ; preds = %cleanup.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body.i.i.i

cleanup.i.i.i.while.end.i.i.i_crit_edge:          ; preds = %cleanup.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end.i.i.i

while.end.i.i.i:                                  ; preds = %cleanup.i.i.i.while.end.i.i.i_crit_edge, %resume.i.i.i.while.end.i.i.i_crit_edge
  %found.2.i.lcssa.i.i = phi i32 [ %found.1.i.i.i, %resume.i.i.i.while.end.i.i.i_crit_edge ], [ %found.4.i.i.i, %cleanup.i.i.i.while.end.i.i.i_crit_edge ]
  %cmp15.not.i.i.i = icmp eq ptr %this_parent.1.i.i.i, %add.ptr.i
  br i1 %cmp15.not.i.i.i, label %select_submounts.exit.i.i, label %if.then16.i.i.i

if.then16.i.i.i:                                  ; preds = %while.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %mnt_child.i.i.i = getelementptr inbounds %struct.mount, ptr %this_parent.1.i.i.i, i32 0, i32 7
  %mnt_parent.i.i.i = getelementptr inbounds %struct.mount, ptr %this_parent.1.i.i.i, i32 0, i32 1
  %104 = ptrtoint ptr %mnt_parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %mnt_parent.i.i.i, align 4
  br label %resume.i.i.i

select_submounts.exit.i.i:                        ; preds = %while.end.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %found.2.i.lcssa.i.i)
  %tobool.not.i113.i = icmp eq i32 %found.2.i.lcssa.i.i, 0
  br i1 %tobool.not.i113.i, label %shrink_submounts.exit.i, label %while.cond1.preheader.i.i

while.cond1.preheader.i.i:                        ; preds = %select_submounts.exit.i.i
  %106 = ptrtoint ptr %graveyard.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load volatile ptr, ptr %graveyard.i.i, align 4
  %cmp.i.not16.i.i = icmp eq ptr %107, %graveyard.i.i
  br i1 %cmp.i.not16.i.i, label %while.cond1.preheader.i.i.repeat.i.i.i.backedge_crit_edge, label %while.cond1.preheader.i.i.while.body4.i.i_crit_edge

while.cond1.preheader.i.i.while.body4.i.i_crit_edge: ; preds = %while.cond1.preheader.i.i
  br label %while.body4.i.i

while.cond1.preheader.i.i.repeat.i.i.i.backedge_crit_edge: ; preds = %while.cond1.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %repeat.i.i.i.backedge

repeat.i.i.i.backedge:                            ; preds = %touch_mnt_namespace.exit.i.i.repeat.i.i.i.backedge_crit_edge, %while.cond1.preheader.i.i.repeat.i.i.i.backedge_crit_edge, %if.end.i.i.i.repeat.i.i.i.backedge_crit_edge
  %found.0.i.i.i.be = phi i32 [ 0, %while.cond1.preheader.i.i.repeat.i.i.i.backedge_crit_edge ], [ %found.2.i13.i.i, %if.end.i.i.i.repeat.i.i.i.backedge_crit_edge ], [ 0, %touch_mnt_namespace.exit.i.i.repeat.i.i.i.backedge_crit_edge ]
  %this_parent.0.i.i.i.be = phi ptr [ %add.ptr.i, %while.cond1.preheader.i.i.repeat.i.i.i.backedge_crit_edge ], [ %add.ptr.i.i.i, %if.end.i.i.i.repeat.i.i.i.backedge_crit_edge ], [ %add.ptr.i, %touch_mnt_namespace.exit.i.i.repeat.i.i.i.backedge_crit_edge ]
  br label %repeat.i.i.i

while.body4.i.i:                                  ; preds = %touch_mnt_namespace.exit.i.i.while.body4.i.i_crit_edge, %while.cond1.preheader.i.i.while.body4.i.i_crit_edge
  %108 = phi ptr [ %114, %touch_mnt_namespace.exit.i.i.while.body4.i.i_crit_edge ], [ %107, %while.cond1.preheader.i.i.while.body4.i.i_crit_edge ]
  %add.ptr.i.i = getelementptr i8, ptr %108, i32 -80
  %mnt_ns.i.i17 = getelementptr i8, ptr %108, i32 36
  %109 = ptrtoint ptr %mnt_ns.i.i17 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %mnt_ns.i.i17, align 4
  %tobool.not.i8.i.i = icmp eq ptr %110, null
  br i1 %tobool.not.i8.i.i, label %while.body4.i.i.touch_mnt_namespace.exit.i.i_crit_edge, label %if.then.i.i.i

while.body4.i.i.touch_mnt_namespace.exit.i.i_crit_edge: ; preds = %while.body4.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %touch_mnt_namespace.exit.i.i

if.then.i.i.i:                                    ; preds = %while.body4.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %111 = load i64, ptr @event, align 8
  %inc.i9.i.i = add i64 %111, 1
  store i64 %inc.i9.i.i, ptr @event, align 8
  %event.i.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %110, i32 0, i32 8
  %112 = ptrtoint ptr %event.i.i.i to i32
  call void @__asan_store8_noabort(i32 %112)
  store i64 %inc.i9.i.i, ptr %event.i.i.i, align 8
  %poll.i.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %110, i32 0, i32 7
  call void @__wake_up(ptr noundef %poll.i.i.i, i32 noundef 1, i32 noundef 1, ptr noundef null) #22
  br label %touch_mnt_namespace.exit.i.i

touch_mnt_namespace.exit.i.i:                     ; preds = %if.then.i.i.i, %while.body4.i.i.touch_mnt_namespace.exit.i.i_crit_edge
  call fastcc void @umount_tree(ptr noundef %add.ptr.i.i, i32 noundef 3) #22
  %113 = ptrtoint ptr %graveyard.i.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load volatile ptr, ptr %graveyard.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %114, %graveyard.i.i
  br i1 %cmp.i.not.i.i, label %touch_mnt_namespace.exit.i.i.repeat.i.i.i.backedge_crit_edge, label %touch_mnt_namespace.exit.i.i.while.body4.i.i_crit_edge

touch_mnt_namespace.exit.i.i.while.body4.i.i_crit_edge: ; preds = %touch_mnt_namespace.exit.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body4.i.i

touch_mnt_namespace.exit.i.i.repeat.i.i.i.backedge_crit_edge: ; preds = %touch_mnt_namespace.exit.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %repeat.i.i.i.backedge

shrink_submounts.exit.i:                          ; preds = %select_submounts.exit.i.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %graveyard.i.i) #22
  %call71.i = call i32 @propagate_mount_busy(ptr noundef %add.ptr.i, i32 noundef 2) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call71.i)
  %tobool72.not.i = icmp eq i32 %call71.i, 0
  br i1 %tobool72.not.i, label %if.then73.i, label %shrink_submounts.exit.i.out.i_crit_edge

shrink_submounts.exit.i.out.i_crit_edge:          ; preds = %shrink_submounts.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.i

if.then73.i:                                      ; preds = %shrink_submounts.exit.i
  %mnt_list74.i = getelementptr i8, ptr %1, i32 56
  %115 = ptrtoint ptr %mnt_list74.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load volatile ptr, ptr %mnt_list74.i, align 4
  %cmp.i114.not.i = icmp eq ptr %116, %mnt_list74.i
  br i1 %cmp.i114.not.i, label %if.then73.i.out.i_crit_edge, label %if.then77.i

if.then73.i.out.i_crit_edge:                      ; preds = %if.then73.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.i

if.then77.i:                                      ; preds = %if.then73.i
  call void @__sanitizer_cov_trace_pc() #24
  call fastcc void @umount_tree(ptr noundef %add.ptr.i, i32 noundef 3) #22
  br label %out.i

out.i:                                            ; preds = %if.then77.i, %if.then73.i.out.i_crit_edge, %shrink_submounts.exit.i.out.i_crit_edge, %if.then69.i, %if.then66.i.out.i_crit_edge, %if.end58.i.out.i_crit_edge
  %retval2.0.i = phi i32 [ -22, %if.end58.i.out.i_crit_edge ], [ -16, %shrink_submounts.exit.i.out.i_crit_edge ], [ 0, %if.then69.i ], [ 0, %if.then66.i.out.i_crit_edge ], [ 0, %if.then77.i ], [ 0, %if.then73.i.out.i_crit_edge ]
  call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %76) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %117 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i116.i = add i32 %117, 1
  store i32 %inc.i.i.i.i116.i, ptr @mount_lock, align 128
  call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  call fastcc void @namespace_unlock() #22
  br label %if.end

if.end:                                           ; preds = %out.i, %do_umount_root.exit.i, %if.then53.i.if.end_crit_edge, %if.end16.i.if.end_crit_edge, %if.then15.i, %if.then5.i.if.end_crit_edge, %if.then.if.end_crit_edge, %land.lhs.true.i.if.end_crit_edge, %if.end8.i.if.end_crit_edge, %if.end5.i.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %ret.0 = phi i32 [ -16, %if.then15.i ], [ %retval2.0.i, %out.i ], [ %ret.2.i.i, %do_umount_root.exit.i ], [ %call.i, %if.then.if.end_crit_edge ], [ -22, %if.then5.i.if.end_crit_edge ], [ -11, %if.end16.i.if.end_crit_edge ], [ -1, %if.then53.i.if.end_crit_edge ], [ -1, %land.lhs.true.i.if.end_crit_edge ], [ -22, %if.end8.i.if.end_crit_edge ], [ -22, %if.end5.i.if.end_crit_edge ], [ -22, %if.end.i.if.end_crit_edge ], [ -1, %entry.if.end_crit_edge ]
  %dentry = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %118 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %dentry, align 4
  call void @dput(ptr noundef %119) #22
  call fastcc void @mntput_no_expire(ptr noundef %add.ptr.i)
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dput(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_umount(i32 noundef %name, i32 noundef %flags) #1 align 64 {
entry:
  %path.i.i = alloca %struct.path, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path.i.i) #22
  %0 = ptrtoint ptr %path.i.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %path.i.i, align 4, !annotation !380
  %1 = getelementptr inbounds %struct.path, ptr %path.i.i, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !380
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %flags)
  %tobool.not.i.i = icmp ult i32 %flags, 16
  br i1 %tobool.not.i.i, label %if.end.i.i, label %entry.__do_sys_umount.exit_crit_edge

entry.__do_sys_umount.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_umount.exit

if.end.i.i:                                       ; preds = %entry
  %3 = inttoptr i32 %name to ptr
  %and1.i.i = and i32 %flags, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool2.not.i.i = icmp eq i32 %and1.i.i, 0
  %spec.select.i.i = select i1 %tobool2.not.i.i, i32 129, i32 128
  %call.i.i.i = call i32 @user_path_at_empty(i32 noundef -100, ptr noundef %3, i32 noundef %spec.select.i.i, ptr noundef nonnull %path.i.i, ptr noundef null) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool5.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool5.not.i.i, label %if.end7.i.i, label %if.end.i.i.__do_sys_umount.exit_crit_edge

if.end.i.i.__do_sys_umount.exit_crit_edge:        ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_umount.exit

if.end7.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %call8.i.i = call i32 @path_umount(ptr noundef nonnull %path.i.i, i32 noundef %flags) #22
  br label %__do_sys_umount.exit

__do_sys_umount.exit:                             ; preds = %if.end7.i.i, %if.end.i.i.__do_sys_umount.exit_crit_edge, %entry.__do_sys_umount.exit_crit_edge
  %retval.0.i.i = phi i32 [ %call8.i.i, %if.end7.i.i ], [ -22, %entry.__do_sys_umount.exit_crit_edge ], [ %call.i.i.i, %if.end.i.i.__do_sys_umount.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path.i.i) #22
  ret i32 %retval.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_oldumount(i32 noundef %name) #1 align 64 {
entry:
  %path.i.i = alloca %struct.path, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %name to ptr
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path.i.i) #22
  %1 = ptrtoint ptr %path.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %path.i.i, align 4, !annotation !380
  %2 = getelementptr inbounds %struct.path, ptr %path.i.i, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr inttoptr (i32 -1 to ptr), ptr %2, align 4, !annotation !380
  %call.i.i.i = call i32 @user_path_at_empty(i32 noundef -100, ptr noundef %0, i32 noundef 129, ptr noundef nonnull %path.i.i, ptr noundef null) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool5.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool5.not.i.i, label %if.end7.i.i, label %entry.__do_sys_oldumount.exit_crit_edge

entry.__do_sys_oldumount.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_oldumount.exit

if.end7.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %call8.i.i = call i32 @path_umount(ptr noundef nonnull %path.i.i, i32 noundef 0) #22
  br label %__do_sys_oldumount.exit

__do_sys_oldumount.exit:                          ; preds = %if.end7.i.i, %entry.__do_sys_oldumount.exit_crit_edge
  %retval.0.i.i = phi i32 [ %call8.i.i, %if.end7.i.i ], [ %call.i.i.i, %entry.__do_sys_oldumount.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path.i.i) #22
  ret i32 %retval.0.i.i
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @from_mnt_ns(ptr noundef readnone returned %mnt) local_unnamed_addr #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  ret ptr %mnt
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @copy_tree(ptr noundef %mnt, ptr noundef %dentry, i32 noundef %flag) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %flag, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %mnt_flags = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 3, i32 2
  %0 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mnt_flags, align 4
  %and2 = and i32 %1, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true.cleanup69_crit_edge

land.lhs.true.cleanup69_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup69

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %and4 = and i32 %flag, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  br i1 %tobool5.not, label %land.lhs.true6, label %if.end.if.end10_crit_edge

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end10

land.lhs.true6:                                   ; preds = %if.end
  %d_op.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 8
  %2 = ptrtoint ptr %d_op.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %d_op.i, align 8
  %cmp.i = icmp eq ptr %3, @ns_dentry_operations
  br i1 %cmp.i, label %is_mnt_ns_file.exit, label %land.lhs.true6.if.end10_crit_edge

land.lhs.true6.if.end10_crit_edge:                ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end10

is_mnt_ns_file.exit:                              ; preds = %land.lhs.true6
  %d_fsdata.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 11
  %4 = ptrtoint ptr %d_fsdata.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %d_fsdata.i, align 4
  %cmp1.i = icmp eq ptr %5, @mntns_operations
  br i1 %cmp1.i, label %is_mnt_ns_file.exit.cleanup69_crit_edge, label %is_mnt_ns_file.exit.if.end10_crit_edge

is_mnt_ns_file.exit.if.end10_crit_edge:           ; preds = %is_mnt_ns_file.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end10

is_mnt_ns_file.exit.cleanup69_crit_edge:          ; preds = %is_mnt_ns_file.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup69

if.end10:                                         ; preds = %is_mnt_ns_file.exit.if.end10_crit_edge, %land.lhs.true6.if.end10_crit_edge, %if.end.if.end10_crit_edge
  %call11 = tail call fastcc ptr @clone_mnt(ptr noundef %mnt, ptr noundef %dentry, i32 noundef %flag)
  %cmp.i113 = icmp ugt ptr %call11, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i113, label %if.end10.cleanup69_crit_edge, label %if.end14

if.end10.cleanup69_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup69

if.end14:                                         ; preds = %if.end10
  %mnt_mountpoint = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 2
  %6 = ptrtoint ptr %mnt_mountpoint to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mnt_mountpoint, align 4
  %mnt_mountpoint15 = getelementptr inbounds %struct.mount, ptr %call11, i32 0, i32 2
  %8 = ptrtoint ptr %mnt_mountpoint15 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %mnt_mountpoint15, align 4
  %mnt_mounts = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 6
  %9 = ptrtoint ptr %mnt_mounts to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pn156 = load ptr, ptr %mnt_mounts, align 4
  %cmp.not158 = icmp eq ptr %.pn156, %mnt_mounts
  br i1 %cmp.not158, label %if.end14.cleanup69_crit_edge, label %for.body.lr.ph

if.end14.cleanup69_crit_edge:                     ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup69

for.body.lr.ph:                                   ; preds = %if.end14
  %mnt_list57 = getelementptr inbounds %struct.mount, ptr %call11, i32 0, i32 10
  %prev.i = getelementptr inbounds %struct.mount, ptr %call11, i32 0, i32 10, i32 1
  br label %for.body

for.body:                                         ; preds = %for.inc59.for.body_crit_edge, %for.body.lr.ph
  %.pn161 = phi ptr [ %.pn156, %for.body.lr.ph ], [ %.pn, %for.inc59.for.body_crit_edge ]
  %p.0160 = phi ptr [ %mnt, %for.body.lr.ph ], [ %p.4.ph, %for.inc59.for.body_crit_edge ]
  %q.0159 = phi ptr [ %call11, %for.body.lr.ph ], [ %q.4.ph, %for.inc59.for.body_crit_edge ]
  %r.0162 = getelementptr i8, ptr %.pn161, i32 -52
  %mnt_mountpoint17 = getelementptr i8, ptr %.pn161, i32 -40
  %10 = ptrtoint ptr %mnt_mountpoint17 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mnt_mountpoint17, align 4
  %call18 = tail call zeroext i1 @is_subdir(ptr noundef %11, ptr noundef %dentry) #22
  %call18.not = xor i1 %call18, true
  %tobool22.not149 = icmp eq ptr %r.0162, null
  %or.cond = select i1 %call18.not, i1 true, i1 %tobool22.not149
  br i1 %or.cond, label %for.body.for.inc59_crit_edge, label %for.body.for.body23_crit_edge

for.body.for.body23_crit_edge:                    ; preds = %for.body
  br label %for.body23

for.body.for.inc59_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc59

for.body23:                                       ; preds = %next_mnt.exit.for.body23_crit_edge, %for.body.for.body23_crit_edge
  %s.0152 = phi ptr [ %add.ptr.i136, %next_mnt.exit.for.body23_crit_edge ], [ %r.0162, %for.body.for.body23_crit_edge ]
  %p.1151 = phi ptr [ %p.3, %next_mnt.exit.for.body23_crit_edge ], [ %p.0160, %for.body.for.body23_crit_edge ]
  %q.1150 = phi ptr [ %q.3, %next_mnt.exit.for.body23_crit_edge ], [ %q.0159, %for.body.for.body23_crit_edge ]
  br i1 %tobool.not, label %land.lhs.true26, label %for.body23.if.end39_crit_edge

for.body23.if.end39_crit_edge:                    ; preds = %for.body23
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end39

land.lhs.true26:                                  ; preds = %for.body23
  %mnt_flags28 = getelementptr inbounds %struct.mount, ptr %s.0152, i32 0, i32 3, i32 2
  %12 = ptrtoint ptr %mnt_flags28 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %mnt_flags28, align 4
  %and29 = and i32 %13, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29)
  %tobool30.not = icmp eq i32 %and29, 0
  br i1 %tobool30.not, label %land.lhs.true26.if.end39_crit_edge, label %if.then31

land.lhs.true26.if.end39_crit_edge:               ; preds = %land.lhs.true26
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end39

if.then31:                                        ; preds = %land.lhs.true26
  %and34 = and i32 %13, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34)
  %tobool35.not = icmp eq i32 %and34, 0
  br i1 %tobool35.not, label %if.else, label %if.then31.out_crit_edge

if.then31.out_crit_edge:                          ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

if.else:                                          ; preds = %if.then31
  %prev1.i = getelementptr inbounds %struct.mount, ptr %s.0152, i32 0, i32 6, i32 1
  %14 = ptrtoint ptr %prev1.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %prev.09.i = load ptr, ptr %prev1.i, align 4
  %mnt_mounts210.i = getelementptr inbounds %struct.mount, ptr %s.0152, i32 0, i32 6
  %cmp.not11.i = icmp eq ptr %prev.09.i, %mnt_mounts210.i
  br i1 %cmp.not11.i, label %if.else.for.inc_crit_edge, label %if.else.while.body.i_crit_edge

if.else.while.body.i_crit_edge:                   ; preds = %if.else
  br label %while.body.i

if.else.for.inc_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %if.else.while.body.i_crit_edge
  %prev.012.i = phi ptr [ %prev.0.i, %while.body.i.while.body.i_crit_edge ], [ %prev.09.i, %if.else.while.body.i_crit_edge ]
  %prev4.i = getelementptr i8, ptr %prev.012.i, i32 -4
  %15 = ptrtoint ptr %prev4.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %prev.0.i = load ptr, ptr %prev4.i, align 4
  %mnt_mounts2.i = getelementptr i8, ptr %prev.012.i, i32 -8
  %cmp.not.i = icmp eq ptr %prev.0.i, %mnt_mounts2.i
  br i1 %cmp.not.i, label %while.end.loopexit.i, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body.i

while.end.loopexit.i:                             ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #24
  %add.ptr.i = getelementptr i8, ptr %prev.012.i, i32 -52
  br label %for.inc

if.end39:                                         ; preds = %land.lhs.true26.if.end39_crit_edge, %for.body23.if.end39_crit_edge
  br i1 %tobool5.not, label %land.lhs.true42, label %if.end39.if.end47_crit_edge

if.end39.if.end47_crit_edge:                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end47

land.lhs.true42:                                  ; preds = %if.end39
  %mnt43 = getelementptr inbounds %struct.mount, ptr %s.0152, i32 0, i32 3
  %16 = ptrtoint ptr %mnt43 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %mnt43, align 4
  %d_op.i114 = getelementptr inbounds %struct.dentry, ptr %17, i32 0, i32 8
  %18 = ptrtoint ptr %d_op.i114 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %d_op.i114, align 8
  %cmp.i115 = icmp eq ptr %19, @ns_dentry_operations
  br i1 %cmp.i115, label %is_mnt_ns_file.exit119, label %land.lhs.true42.if.end47_crit_edge

land.lhs.true42.if.end47_crit_edge:               ; preds = %land.lhs.true42
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end47

is_mnt_ns_file.exit119:                           ; preds = %land.lhs.true42
  %d_fsdata.i116 = getelementptr inbounds %struct.dentry, ptr %17, i32 0, i32 11
  %20 = ptrtoint ptr %d_fsdata.i116 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %d_fsdata.i116, align 4
  %cmp1.i117 = icmp eq ptr %21, @mntns_operations
  br i1 %cmp1.i117, label %if.then45, label %is_mnt_ns_file.exit119.if.end47_crit_edge

is_mnt_ns_file.exit119.if.end47_crit_edge:        ; preds = %is_mnt_ns_file.exit119
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end47

if.then45:                                        ; preds = %is_mnt_ns_file.exit119
  %prev1.i120 = getelementptr inbounds %struct.mount, ptr %s.0152, i32 0, i32 6, i32 1
  %22 = ptrtoint ptr %prev1.i120 to i32
  call void @__asan_load4_noabort(i32 %22)
  %prev.09.i121 = load ptr, ptr %prev1.i120, align 4
  %mnt_mounts210.i122 = getelementptr inbounds %struct.mount, ptr %s.0152, i32 0, i32 6
  %cmp.not11.i123 = icmp eq ptr %prev.09.i121, %mnt_mounts210.i122
  br i1 %cmp.not11.i123, label %if.then45.for.inc_crit_edge, label %if.then45.while.body.i129_crit_edge

if.then45.while.body.i129_crit_edge:              ; preds = %if.then45
  br label %while.body.i129

if.then45.for.inc_crit_edge:                      ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

while.body.i129:                                  ; preds = %while.body.i129.while.body.i129_crit_edge, %if.then45.while.body.i129_crit_edge
  %prev.012.i124 = phi ptr [ %prev.0.i126, %while.body.i129.while.body.i129_crit_edge ], [ %prev.09.i121, %if.then45.while.body.i129_crit_edge ]
  %prev4.i125 = getelementptr i8, ptr %prev.012.i124, i32 -4
  %23 = ptrtoint ptr %prev4.i125 to i32
  call void @__asan_load4_noabort(i32 %23)
  %prev.0.i126 = load ptr, ptr %prev4.i125, align 4
  %mnt_mounts2.i127 = getelementptr i8, ptr %prev.012.i124, i32 -8
  %cmp.not.i128 = icmp eq ptr %prev.0.i126, %mnt_mounts2.i127
  br i1 %cmp.not.i128, label %while.end.loopexit.i131, label %while.body.i129.while.body.i129_crit_edge

while.body.i129.while.body.i129_crit_edge:        ; preds = %while.body.i129
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body.i129

while.end.loopexit.i131:                          ; preds = %while.body.i129
  call void @__sanitizer_cov_trace_pc() #24
  %add.ptr.i130 = getelementptr i8, ptr %prev.012.i124, i32 -52
  br label %for.inc

if.end47:                                         ; preds = %is_mnt_ns_file.exit119.if.end47_crit_edge, %land.lhs.true42.if.end47_crit_edge, %if.end39.if.end47_crit_edge
  %mnt_parent = getelementptr inbounds %struct.mount, ptr %s.0152, i32 0, i32 1
  %24 = ptrtoint ptr %mnt_parent to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %mnt_parent, align 4
  %cmp48.not146 = icmp eq ptr %p.1151, %25
  br i1 %cmp48.not146, label %if.end47.while.end_crit_edge, label %if.end47.while.body_crit_edge

if.end47.while.body_crit_edge:                    ; preds = %if.end47
  br label %while.body

if.end47.while.end_crit_edge:                     ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %if.end47.while.body_crit_edge
  %p.2148 = phi ptr [ %27, %while.body.while.body_crit_edge ], [ %p.1151, %if.end47.while.body_crit_edge ]
  %q.2147 = phi ptr [ %29, %while.body.while.body_crit_edge ], [ %q.1150, %if.end47.while.body_crit_edge ]
  %mnt_parent49 = getelementptr inbounds %struct.mount, ptr %p.2148, i32 0, i32 1
  %26 = ptrtoint ptr %mnt_parent49 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %mnt_parent49, align 4
  %mnt_parent50 = getelementptr inbounds %struct.mount, ptr %q.2147, i32 0, i32 1
  %28 = ptrtoint ptr %mnt_parent50 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %mnt_parent50, align 4
  %cmp48.not = icmp eq ptr %27, %25
  br i1 %cmp48.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %if.end47.while.end_crit_edge
  %q.2.lcssa = phi ptr [ %q.1150, %if.end47.while.end_crit_edge ], [ %29, %while.body.while.end_crit_edge ]
  %mnt51 = getelementptr inbounds %struct.mount, ptr %s.0152, i32 0, i32 3
  %30 = ptrtoint ptr %mnt51 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %mnt51, align 4
  %call53 = tail call fastcc ptr @clone_mnt(ptr noundef nonnull %s.0152, ptr noundef %31, i32 noundef %flag)
  %cmp.i134 = icmp ugt ptr %call53, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i134, label %while.end.out_crit_edge, label %if.end56

while.end.out_crit_edge:                          ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

if.end56:                                         ; preds = %while.end
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %32 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %32, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %33 = tail call ptr @llvm.returnaddress(i32 0) #22
  %34 = ptrtoint ptr %33 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %34) #22
  %mnt_list = getelementptr inbounds %struct.mount, ptr %call53, i32 0, i32 10
  %35 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %mnt_list, ptr noundef %36, ptr noundef %mnt_list57) #22
  br i1 %call.i.i, label %if.end.i.i, label %if.end56.list_add_tail.exit_crit_edge

if.end56.list_add_tail.exit_crit_edge:            ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #24
  %37 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %mnt_list, ptr %prev.i, align 4
  %38 = ptrtoint ptr %mnt_list to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %mnt_list57, ptr %mnt_list, align 4
  %prev3.i.i = getelementptr inbounds %struct.mount, ptr %call53, i32 0, i32 10, i32 1
  %39 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %36, ptr %prev3.i.i, align 4
  %40 = ptrtoint ptr %36 to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile ptr %mnt_list, ptr %36, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.end56.list_add_tail.exit_crit_edge
  %mnt_mp = getelementptr inbounds %struct.mount, ptr %s.0152, i32 0, i32 17
  %41 = ptrtoint ptr %mnt_mp to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %mnt_mp, align 4
  tail call fastcc void @attach_mnt(ptr noundef %call53, ptr noundef %q.2.lcssa, ptr noundef %42)
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %34) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %43 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i = add i32 %43, 1
  store i32 %inc.i.i.i.i, ptr @mount_lock, align 128
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  br label %for.inc

for.inc:                                          ; preds = %list_add_tail.exit, %while.end.loopexit.i131, %if.then45.for.inc_crit_edge, %while.end.loopexit.i, %if.else.for.inc_crit_edge
  %q.3 = phi ptr [ %call53, %list_add_tail.exit ], [ %q.1150, %if.else.for.inc_crit_edge ], [ %q.1150, %while.end.loopexit.i ], [ %q.1150, %if.then45.for.inc_crit_edge ], [ %q.1150, %while.end.loopexit.i131 ]
  %p.3 = phi ptr [ %s.0152, %list_add_tail.exit ], [ %p.1151, %if.else.for.inc_crit_edge ], [ %p.1151, %while.end.loopexit.i ], [ %p.1151, %if.then45.for.inc_crit_edge ], [ %p.1151, %while.end.loopexit.i131 ]
  %s.1 = phi ptr [ %s.0152, %list_add_tail.exit ], [ %s.0152, %if.else.for.inc_crit_edge ], [ %add.ptr.i, %while.end.loopexit.i ], [ %s.0152, %if.then45.for.inc_crit_edge ], [ %add.ptr.i130, %while.end.loopexit.i131 ]
  %mnt_mounts.i = getelementptr inbounds %struct.mount, ptr %s.1, i32 0, i32 6
  %44 = ptrtoint ptr %mnt_mounts.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %mnt_mounts.i, align 4
  %cmp.i135 = icmp eq ptr %45, %mnt_mounts.i
  br i1 %cmp.i135, label %for.inc.while.cond.i_crit_edge, label %for.inc.next_mnt.exit_crit_edge

for.inc.next_mnt.exit_crit_edge:                  ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit

for.inc.while.cond.i_crit_edge:                   ; preds = %for.inc
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end.i.while.cond.i_crit_edge, %for.inc.while.cond.i_crit_edge
  %p.addr.0.i = phi ptr [ %49, %if.end.i.while.cond.i_crit_edge ], [ %s.1, %for.inc.while.cond.i_crit_edge ]
  %cmp3.i = icmp eq ptr %p.addr.0.i, %r.0162
  br i1 %cmp3.i, label %while.cond.i.for.inc59_crit_edge, label %if.end.i

while.cond.i.for.inc59_crit_edge:                 ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc59

if.end.i:                                         ; preds = %while.cond.i
  %mnt_child.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 7
  %46 = ptrtoint ptr %mnt_child.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %mnt_child.i, align 4
  %mnt_parent.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 1
  %48 = ptrtoint ptr %mnt_parent.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %mnt_parent.i, align 4
  %mnt_mounts6.i = getelementptr inbounds %struct.mount, ptr %49, i32 0, i32 6
  %cmp7.not.i = icmp eq ptr %47, %mnt_mounts6.i
  br i1 %cmp7.not.i, label %if.end.i.while.cond.i_crit_edge, label %if.end.i.next_mnt.exit_crit_edge

if.end.i.next_mnt.exit_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit

if.end.i.while.cond.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i

next_mnt.exit:                                    ; preds = %if.end.i.next_mnt.exit_crit_edge, %for.inc.next_mnt.exit_crit_edge
  %next.0.i = phi ptr [ %45, %for.inc.next_mnt.exit_crit_edge ], [ %47, %if.end.i.next_mnt.exit_crit_edge ]
  %add.ptr.i136 = getelementptr i8, ptr %next.0.i, i32 -52
  %tobool22.not = icmp eq ptr %add.ptr.i136, null
  br i1 %tobool22.not, label %next_mnt.exit.for.inc59_crit_edge, label %next_mnt.exit.for.body23_crit_edge

next_mnt.exit.for.body23_crit_edge:               ; preds = %next_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body23

next_mnt.exit.for.inc59_crit_edge:                ; preds = %next_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc59

for.inc59:                                        ; preds = %next_mnt.exit.for.inc59_crit_edge, %while.cond.i.for.inc59_crit_edge, %for.body.for.inc59_crit_edge
  %q.4.ph = phi ptr [ %q.0159, %for.body.for.inc59_crit_edge ], [ %q.3, %while.cond.i.for.inc59_crit_edge ], [ %q.3, %next_mnt.exit.for.inc59_crit_edge ]
  %p.4.ph = phi ptr [ %p.0160, %for.body.for.inc59_crit_edge ], [ %p.3, %while.cond.i.for.inc59_crit_edge ], [ %p.3, %next_mnt.exit.for.inc59_crit_edge ]
  %50 = ptrtoint ptr %.pn161 to i32
  call void @__asan_load4_noabort(i32 %50)
  %.pn = load ptr, ptr %.pn161, align 4
  %cmp.not = icmp eq ptr %.pn, %mnt_mounts
  br i1 %cmp.not, label %for.inc59.cleanup69_crit_edge, label %for.inc59.for.body_crit_edge

for.inc59.for.body_crit_edge:                     ; preds = %for.inc59
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc59.cleanup69_crit_edge:                    ; preds = %for.inc59
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup69

out:                                              ; preds = %while.end.out_crit_edge, %if.then31.out_crit_edge
  %q.4 = phi ptr [ %call53, %while.end.out_crit_edge ], [ inttoptr (i32 -1 to ptr), %if.then31.out_crit_edge ]
  %tobool66.not = icmp eq ptr %call11, null
  br i1 %tobool66.not, label %out.cleanup69_crit_edge, label %if.then67

out.cleanup69_crit_edge:                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup69

if.then67:                                        ; preds = %out
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %51 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i137 = add i32 %51, 1
  store i32 %inc.i.i.i.i.i137, ptr @mount_lock, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %52 = tail call ptr @llvm.returnaddress(i32 0) #22
  %53 = ptrtoint ptr %52 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %53) #22
  tail call fastcc void @umount_tree(ptr noundef nonnull %call11, i32 noundef 1)
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %53) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %54 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i138 = add i32 %54, 1
  store i32 %inc.i.i.i.i138, ptr @mount_lock, align 128
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  br label %cleanup69

cleanup69:                                        ; preds = %if.then67, %out.cleanup69_crit_edge, %for.inc59.cleanup69_crit_edge, %if.end14.cleanup69_crit_edge, %if.end10.cleanup69_crit_edge, %is_mnt_ns_file.exit.cleanup69_crit_edge, %land.lhs.true.cleanup69_crit_edge
  %retval.0 = phi ptr [ %call11, %if.end10.cleanup69_crit_edge ], [ %q.4, %if.then67 ], [ %q.4, %out.cleanup69_crit_edge ], [ inttoptr (i32 -22 to ptr), %land.lhs.true.cleanup69_crit_edge ], [ inttoptr (i32 -22 to ptr), %is_mnt_ns_file.exit.cleanup69_crit_edge ], [ %call11, %if.end14.cleanup69_crit_edge ], [ %call11, %for.inc59.cleanup69_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_subdir(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @collect_mounts(ptr nocapture noundef readonly %path) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @down_write(ptr noundef nonnull @namespace_sem) #22
  %0 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %path, align 4
  %mnt_ns.i = getelementptr i8, ptr %1, i32 100
  %2 = ptrtoint ptr %mnt_ns.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mnt_ns.i, align 4
  %4 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task.i, align 8
  %nsproxy.i = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 110
  %8 = ptrtoint ptr %nsproxy.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %nsproxy.i, align 4
  %mnt_ns1.i = getelementptr inbounds %struct.nsproxy, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %mnt_ns1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mnt_ns1.i, align 4
  %cmp.i.not = icmp eq ptr %3, %11
  br i1 %cmp.i.not, label %if.end, label %if.end.thread

if.end.thread:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @namespace_unlock()
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %add.ptr.i = getelementptr i8, ptr %1, i32 -16
  %dentry = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %12 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dentry, align 4
  %call5 = tail call ptr @copy_tree(ptr noundef %add.ptr.i, ptr noundef %13, i32 noundef 84)
  tail call fastcc void @namespace_unlock()
  %cmp.i16 = icmp ugt ptr %call5, inttoptr (i32 -4096 to ptr)
  %mnt10 = getelementptr inbounds %struct.mount, ptr %call5, i32 0, i32 3
  %spec.select = select i1 %cmp.i16, ptr %call5, ptr %mnt10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.end.thread
  %retval.0 = phi ptr [ inttoptr (i32 -22 to ptr), %if.end.thread ], [ %spec.select, %if.end ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @dissolve_on_fput(ptr noundef %mnt) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @down_write(ptr noundef nonnull @namespace_sem) #22
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %0 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %0, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %1 = tail call ptr @llvm.returnaddress(i32 0) #22
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %2) #22
  %add.ptr.i = getelementptr i8, ptr %mnt, i32 -16
  %mnt_ns = getelementptr i8, ptr %mnt, i32 100
  %3 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mnt_ns, align 4
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %entry.if.end4_crit_edge, label %if.then

entry.if.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end4

if.then:                                          ; preds = %entry
  %seq.i = getelementptr inbounds %struct.mnt_namespace, ptr %4, i32 0, i32 6
  %5 = ptrtoint ptr %seq.i to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %seq.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %6)
  %cmp.i = icmp eq i64 %6, 0
  br i1 %cmp.i, label %if.then2, label %if.then.if.end4_crit_edge

if.then.if.end4_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end4

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @umount_tree(ptr noundef %add.ptr.i, i32 noundef 4)
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.then.if.end4_crit_edge, %entry.if.end4_crit_edge
  %ns.0 = phi ptr [ %4, %if.then2 ], [ null, %entry.if.end4_crit_edge ], [ null, %if.then.if.end4_crit_edge ]
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %2) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %7 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i = add i32 %7, 1
  store i32 %inc.i.i.i.i, ptr @mount_lock, align 128
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  tail call fastcc void @namespace_unlock()
  %tobool5.not = icmp eq ptr %ns.0, null
  br i1 %tobool5.not, label %if.end4.if.end7_crit_edge, label %if.then6

if.end4.if.end7_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

if.then6:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @free_mnt_ns(ptr noundef nonnull %ns.0)
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end4.if.end7_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @free_mnt_ns(ptr noundef %ns) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %seq.i = getelementptr inbounds %struct.mnt_namespace, ptr %ns, i32 0, i32 6
  %0 = ptrtoint ptr %seq.i to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %seq.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %1)
  %cmp.i = icmp eq i64 %1, 0
  br i1 %cmp.i, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %inum = getelementptr inbounds %struct.ns_common, ptr %ns, i32 0, i32 2
  %2 = ptrtoint ptr %inum to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %inum, align 8
  tail call void @proc_free_inum(i32 noundef %3) #22
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %ucounts = getelementptr inbounds %struct.mnt_namespace, ptr %ns, i32 0, i32 5
  %4 = ptrtoint ptr %ucounts to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ucounts, align 4
  tail call void @dec_ucount(ptr noundef %5, i32 noundef 5) #22
  %user_ns = getelementptr inbounds %struct.mnt_namespace, ptr %ns, i32 0, i32 4
  %6 = ptrtoint ptr %user_ns to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %user_ns, align 8
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %if.end.put_user_ns.exit_crit_edge, label %land.lhs.true.i

if.end.put_user_ns.exit_crit_edge:                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_user_ns.exit

land.lhs.true.i:                                  ; preds = %if.end
  %count.i = getelementptr inbounds %struct.user_namespace, ptr %7, i32 0, i32 7, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !381
  tail call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #22
  %8 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #22, !srcloc !382
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %8, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.put_user_ns.exit_crit_edge, label %if.then10.i.i.i.i, !prof !352

if.end5.i.i.i.i.put_user_ns.exit_crit_edge:       ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_user_ns.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %count.i, i32 noundef 3) #22
  br label %put_user_ns.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !383
  tail call void @__put_user_ns(ptr noundef nonnull %7) #22
  br label %put_user_ns.exit

put_user_ns.exit:                                 ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.put_user_ns.exit_crit_edge, %if.end.put_user_ns.exit_crit_edge
  tail call void @kfree(ptr noundef %ns) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @drop_collected_mounts(ptr noundef %mnt) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @down_write(ptr noundef nonnull @namespace_sem) #22
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %0 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %0, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %1 = tail call ptr @llvm.returnaddress(i32 0) #22
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %2) #22
  %add.ptr.i = getelementptr i8, ptr %mnt, i32 -16
  tail call fastcc void @umount_tree(ptr noundef %add.ptr.i, i32 noundef 0)
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %2) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %3 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i = add i32 %3, 1
  store i32 %inc.i.i.i.i, ptr @mount_lock, align 128
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  tail call fastcc void @namespace_unlock()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @clone_private_mount(ptr nocapture noundef readonly %path) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %path, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 -16
  tail call void @down_read(ptr noundef nonnull @namespace_sem) #22
  %mnt_flags = getelementptr i8, ptr %1, i32 8
  %2 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mnt_flags, align 4
  %and = and i32 %3, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.invalid_crit_edge

entry.invalid_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %invalid

if.end:                                           ; preds = %entry
  %mnt_ns.i = getelementptr i8, ptr %1, i32 100
  %4 = ptrtoint ptr %mnt_ns.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mnt_ns.i, align 4
  %6 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task.i, align 8
  %nsproxy.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 110
  %10 = ptrtoint ptr %nsproxy.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %nsproxy.i, align 4
  %mnt_ns1.i = getelementptr inbounds %struct.nsproxy, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %mnt_ns1.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %mnt_ns1.i, align 4
  %cmp.i.not = icmp eq ptr %5, %13
  br i1 %cmp.i.not, label %if.end5, label %if.end.invalid_crit_edge

if.end.invalid_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %invalid

if.end5:                                          ; preds = %if.end
  %dentry = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %14 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %dentry, align 4
  %mnt_mounts.i = getelementptr i8, ptr %1, i32 28
  %16 = ptrtoint ptr %mnt_mounts.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn14.i = load ptr, ptr %mnt_mounts.i, align 4
  %cmp.not15.i = icmp eq ptr %.pn14.i, %mnt_mounts.i
  br i1 %cmp.not15.i, label %if.end5.if.end8_crit_edge, label %if.end5.for.body.i_crit_edge

if.end5.for.body.i_crit_edge:                     ; preds = %if.end5
  br label %for.body.i

if.end5.if.end8_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end8

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end5.for.body.i_crit_edge
  %.pn16.i = phi ptr [ %.pn.i, %for.inc.i.for.body.i_crit_edge ], [ %.pn14.i, %if.end5.for.body.i_crit_edge ]
  %mnt_mountpoint.i = getelementptr i8, ptr %.pn16.i, i32 -40
  %17 = ptrtoint ptr %mnt_mountpoint.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %mnt_mountpoint.i, align 4
  %call.i = tail call zeroext i1 @is_subdir(ptr noundef %18, ptr noundef %15) #22
  br i1 %call.i, label %if.end.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %mnt_flags.i = getelementptr i8, ptr %.pn16.i, i32 -28
  %19 = ptrtoint ptr %mnt_flags.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %mnt_flags.i, align 4
  %and.i = and i32 %20, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i.for.inc.i_crit_edge, label %if.end.i.invalid_crit_edge

if.end.i.invalid_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %invalid

if.end.i.for.inc.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %21 = ptrtoint ptr %.pn16.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %.pn.i = load ptr, ptr %.pn16.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %mnt_mounts.i
  br i1 %cmp.not.i, label %for.inc.i.if.end8_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i

for.inc.i.if.end8_crit_edge:                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end8

if.end8:                                          ; preds = %for.inc.i.if.end8_crit_edge, %if.end5.if.end8_crit_edge
  %22 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %dentry, align 4
  %call10 = tail call fastcc ptr @clone_mnt(ptr noundef %add.ptr.i, ptr noundef %23, i32 noundef 16)
  tail call void @up_read(ptr noundef nonnull @namespace_sem) #22
  %cmp.i27 = icmp ugt ptr %call10, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i27, label %if.end8.cleanup_crit_edge, label %if.end14

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end14:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #24
  %mnt_ns = getelementptr inbounds %struct.mount, ptr %call10, i32 0, i32 16
  %24 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr inttoptr (i32 -22 to ptr), ptr %mnt_ns, align 4
  %mnt16 = getelementptr inbounds %struct.mount, ptr %call10, i32 0, i32 3
  br label %cleanup

invalid:                                          ; preds = %if.end.i.invalid_crit_edge, %if.end.invalid_crit_edge, %entry.invalid_crit_edge
  tail call void @up_read(ptr noundef nonnull @namespace_sem) #22
  br label %cleanup

cleanup:                                          ; preds = %invalid, %if.end14, %if.end8.cleanup_crit_edge
  %retval.0 = phi ptr [ inttoptr (i32 -22 to ptr), %invalid ], [ %mnt16, %if.end14 ], [ %call10, %if.end8.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @iterate_mounts(ptr nocapture noundef readonly %f, ptr noundef %arg, ptr noundef %root) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 %f(ptr noundef %root, ptr noundef %arg) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %mnt_list = getelementptr i8, ptr %root, i32 56
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.end
  %.pn.in = phi ptr [ %mnt_list, %if.end ], [ %.pn, %for.body.for.cond_crit_edge ]
  %0 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn = load ptr, ptr %.pn.in, align 4
  %cmp.not = icmp eq ptr %.pn, %mnt_list
  br i1 %cmp.not, label %for.cond.cleanup_crit_edge, label %for.body

for.cond.cleanup_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

for.body:                                         ; preds = %for.cond
  %mnt5 = getelementptr i8, ptr %.pn, i32 -56
  %call6 = tail call i32 %f(ptr noundef %mnt5, ptr noundef %arg) #22
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %for.body.for.cond_crit_edge, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond

cleanup:                                          ; preds = %for.body.cleanup_crit_edge, %for.cond.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ 0, %for.cond.cleanup_crit_edge ], [ %call6, %for.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @count_mounts(ptr nocapture noundef %ns, ptr noundef readonly %mnt) local_unnamed_addr #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile i32, ptr @sysctl_mount_max, align 4
  %tobool.not30 = icmp eq ptr %mnt, null
  br i1 %tobool.not30, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %next_mnt.exit.for.body_crit_edge, %entry.for.body_crit_edge
  %p.032 = phi ptr [ %add.ptr.i, %next_mnt.exit.for.body_crit_edge ], [ %mnt, %entry.for.body_crit_edge ]
  %mounts.031 = phi i32 [ %inc, %next_mnt.exit.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %inc = add i32 %mounts.031, 1
  %mnt_mounts.i = getelementptr inbounds %struct.mount, ptr %p.032, i32 0, i32 6
  %1 = ptrtoint ptr %mnt_mounts.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %mnt_mounts.i, align 4
  %cmp.i = icmp eq ptr %2, %mnt_mounts.i
  br i1 %cmp.i, label %for.body.while.cond.i_crit_edge, label %for.body.next_mnt.exit_crit_edge

for.body.next_mnt.exit_crit_edge:                 ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit

for.body.while.cond.i_crit_edge:                  ; preds = %for.body
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end.i.while.cond.i_crit_edge, %for.body.while.cond.i_crit_edge
  %p.addr.0.i = phi ptr [ %6, %if.end.i.while.cond.i_crit_edge ], [ %p.032, %for.body.while.cond.i_crit_edge ]
  %cmp3.i = icmp eq ptr %p.addr.0.i, %mnt
  br i1 %cmp3.i, label %while.cond.i.for.end_crit_edge, label %if.end.i

while.cond.i.for.end_crit_edge:                   ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

if.end.i:                                         ; preds = %while.cond.i
  %mnt_child.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 7
  %3 = ptrtoint ptr %mnt_child.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mnt_child.i, align 4
  %mnt_parent.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 1
  %5 = ptrtoint ptr %mnt_parent.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mnt_parent.i, align 4
  %mnt_mounts6.i = getelementptr inbounds %struct.mount, ptr %6, i32 0, i32 6
  %cmp7.not.i = icmp eq ptr %4, %mnt_mounts6.i
  br i1 %cmp7.not.i, label %if.end.i.while.cond.i_crit_edge, label %if.end.i.next_mnt.exit_crit_edge

if.end.i.next_mnt.exit_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit

if.end.i.while.cond.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i

next_mnt.exit:                                    ; preds = %if.end.i.next_mnt.exit_crit_edge, %for.body.next_mnt.exit_crit_edge
  %next.0.i = phi ptr [ %2, %for.body.next_mnt.exit_crit_edge ], [ %4, %if.end.i.next_mnt.exit_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %next.0.i, i32 -52
  %tobool.not = icmp eq ptr %add.ptr.i, null
  br i1 %tobool.not, label %next_mnt.exit.for.end_crit_edge, label %next_mnt.exit.for.body_crit_edge

next_mnt.exit.for.body_crit_edge:                 ; preds = %next_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

next_mnt.exit.for.end_crit_edge:                  ; preds = %next_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %next_mnt.exit.for.end_crit_edge, %while.cond.i.for.end_crit_edge, %entry.for.end_crit_edge
  %mounts.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %inc, %while.cond.i.for.end_crit_edge ], [ %inc, %next_mnt.exit.for.end_crit_edge ]
  %mounts1 = getelementptr inbounds %struct.mnt_namespace, ptr %ns, i32 0, i32 9
  %7 = ptrtoint ptr %mounts1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %mounts1, align 8
  %pending_mounts = getelementptr inbounds %struct.mnt_namespace, ptr %ns, i32 0, i32 10
  %9 = ptrtoint ptr %pending_mounts to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %pending_mounts, align 4
  %add = add i32 %10, %8
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %add)
  %cmp = icmp ugt i32 %8, %add
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %add)
  %cmp2 = icmp ugt i32 %10, %add
  %or.cond = or i1 %cmp, %cmp2
  call void @__sanitizer_cov_trace_cmp4(i32 %0, i32 %add)
  %cmp4 = icmp ult i32 %0, %add
  %or.cond28 = select i1 %or.cond, i1 true, i1 %cmp4
  %sub = sub i32 %0, %add
  call void @__sanitizer_cov_trace_cmp4(i32 %mounts.0.lcssa, i32 %sub)
  %cmp6 = icmp ugt i32 %mounts.0.lcssa, %sub
  %or.cond29 = select i1 %or.cond28, i1 true, i1 %cmp6
  br i1 %or.cond29, label %for.end.cleanup_crit_edge, label %if.end

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  %add7 = add i32 %10, %mounts.0.lcssa
  %11 = ptrtoint ptr %pending_mounts to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %add7, ptr %pending_mounts, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %for.end.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -28, %for.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_open_tree(i32 noundef %dfd, i32 noundef %filename, i32 noundef %flags) #1 align 64 {
entry:
  %path.i = alloca %struct.path, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %filename to ptr
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path.i) #22
  %1 = ptrtoint ptr %path.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %path.i, align 4, !annotation !380
  %2 = getelementptr inbounds %struct.path, ptr %path.i, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr inttoptr (i32 -1 to ptr), ptr %2, align 4, !annotation !380
  %and.i = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %and1.i = and i32 %flags, -563458
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool2.not.i = icmp ne i32 %and1.i, 0
  %and3.i = and i32 %flags, 32769
  call void @__sanitizer_cov_trace_const_cmp4(i32 32768, i32 %and3.i)
  %cmp.i = icmp eq i32 %and3.i, 32768
  %or.cond.i = or i1 %tobool2.not.i, %cmp.i
  br i1 %or.cond.i, label %entry.__do_sys_open_tree.exit_crit_edge, label %if.end5.i

entry.__do_sys_open_tree.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_open_tree.exit

if.end5.i:                                        ; preds = %entry
  %and6.i = and i32 %flags, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i)
  %tobool7.not.i = icmp eq i32 %and6.i, 0
  %spec.select.i = select i1 %tobool7.not.i, i32 5, i32 1
  %and11.i = and i32 %flags, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11.i)
  %tobool12.not.i = icmp eq i32 %and11.i, 0
  %and14.i = and i32 %spec.select.i, 4
  %lookup_flags.1.i = select i1 %tobool12.not.i, i32 %spec.select.i, i32 %and14.i
  %and16.i = shl nuw nsw i32 %flags, 2
  %4 = and i32 %and16.i, 16384
  %5 = or i32 %lookup_flags.1.i, %4
  br i1 %tobool.not.i, label %if.end5.i.if.end22.i_crit_edge, label %land.lhs.true.i

if.end5.i.if.end22.i_crit_edge:                   ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end22.i

land.lhs.true.i:                                  ; preds = %if.end5.i
  %6 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task.i.i, align 8
  %nsproxy.i.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 110
  %10 = ptrtoint ptr %nsproxy.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %nsproxy.i.i, align 4
  %mnt_ns.i.i = getelementptr inbounds %struct.nsproxy, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %mnt_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %mnt_ns.i.i, align 4
  %user_ns.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %13, i32 0, i32 4
  %14 = ptrtoint ptr %user_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %user_ns.i.i, align 8
  %call1.i.i = tail call zeroext i1 @ns_capable(ptr noundef %15, i32 noundef 21) #22
  br i1 %call1.i.i, label %land.lhs.true.i.if.end22.i_crit_edge, label %land.lhs.true.i.__do_sys_open_tree.exit_crit_edge

land.lhs.true.i.__do_sys_open_tree.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_open_tree.exit

land.lhs.true.i.if.end22.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end22.i

if.end22.i:                                       ; preds = %land.lhs.true.i.if.end22.i_crit_edge, %if.end5.i.if.end22.i_crit_edge
  %and23.i = and i32 %flags, 524288
  %call24.i = tail call i32 @get_unused_fd_flags(i32 noundef %and23.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24.i)
  %cmp25.i = icmp slt i32 %call24.i, 0
  br i1 %cmp25.i, label %if.end22.i.__do_sys_open_tree.exit_crit_edge, label %if.end27.i

if.end22.i.__do_sys_open_tree.exit_crit_edge:     ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_open_tree.exit

if.end27.i:                                       ; preds = %if.end22.i
  %call.i.i = call i32 @user_path_at_empty(i32 noundef %dfd, ptr noundef %0, i32 noundef %5, ptr noundef nonnull %path.i, ptr noundef null) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool29.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool29.not.i, label %if.else.i, label %if.then32.i, !prof !352

if.then32.i:                                      ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #24
  %16 = inttoptr i32 %call.i.i to ptr
  br label %if.end46.i

if.else.i:                                        ; preds = %if.end27.i
  %17 = call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 2
  %19 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %task.i, align 8
  br i1 %tobool.not.i, label %do.end42.i, label %if.then35.i

if.then35.i:                                      ; preds = %if.else.i
  %nsproxy.i76.i = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 110
  %21 = ptrtoint ptr %nsproxy.i76.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %nsproxy.i76.i, align 4
  %mnt_ns.i77.i = getelementptr inbounds %struct.nsproxy, ptr %22, i32 0, i32 3
  %23 = ptrtoint ptr %mnt_ns.i77.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %mnt_ns.i77.i, align 4
  %user_ns1.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %24, i32 0, i32 4
  %25 = ptrtoint ptr %user_ns1.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %user_ns1.i.i, align 8
  %call2.i.i = call fastcc ptr @alloc_mnt_ns(ptr noundef %26, i1 noundef zeroext true) #22
  %cmp.i.i.i = icmp ugt ptr %call2.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %if.then35.i.if.end45.i_crit_edge, label %if.end.i.i

if.then35.i.if.end45.i_crit_edge:                 ; preds = %if.then35.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end45.i

if.end.i.i:                                       ; preds = %if.then35.i
  call void @down_write(ptr noundef nonnull @namespace_sem) #22
  %and36.i = lshr i32 %flags, 15
  %and36.lobit.i = and i32 %and36.i, 1
  %call5.i.i = call fastcc ptr @__do_loopback(ptr noundef nonnull %path.i, i32 noundef %and36.lobit.i) #22
  %cmp.i50.i.i = icmp ugt ptr %call5.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i50.i.i, label %if.then7.i.i, label %if.end9.i.i

if.then7.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  call fastcc void @namespace_unlock() #22
  call fastcc void @free_mnt_ns(ptr noundef %call2.i.i) #22
  br label %if.end45.i

if.end9.i.i:                                      ; preds = %if.end.i.i
  call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %27 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i.i.i = add i32 %27, 1
  store i32 %inc.i.i.i.i.i.i.i, ptr @mount_lock, align 128
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %28 = call ptr @llvm.returnaddress(i32 0) #22
  %29 = ptrtoint ptr %28 to i32
  call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %29) #22
  %tobool10.not57.i.i = icmp eq ptr %call5.i.i, null
  br i1 %tobool10.not57.i.i, label %if.end9.i.i.for.end.i.i_crit_edge, label %for.body.lr.ph.i.i

if.end9.i.i.for.end.i.i_crit_edge:                ; preds = %if.end9.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end.i.i

for.body.lr.ph.i.i:                               ; preds = %if.end9.i.i
  %mounts.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %call2.i.i, i32 0, i32 9
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %next_mnt.exit.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %p.058.i.i = phi ptr [ %call5.i.i, %for.body.lr.ph.i.i ], [ %add.ptr.i.i.i, %next_mnt.exit.i.i.for.body.i.i_crit_edge ]
  %mnt_ns11.i.i = getelementptr inbounds %struct.mount, ptr %p.058.i.i, i32 0, i32 16
  %30 = ptrtoint ptr %mnt_ns11.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %call2.i.i, ptr %mnt_ns11.i.i, align 4
  %31 = ptrtoint ptr %mounts.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %mounts.i.i, align 8
  %inc.i.i = add i32 %32, 1
  store i32 %inc.i.i, ptr %mounts.i.i, align 8
  %mnt_mounts.i.i.i = getelementptr inbounds %struct.mount, ptr %p.058.i.i, i32 0, i32 6
  %33 = ptrtoint ptr %mnt_mounts.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %mnt_mounts.i.i.i, align 4
  %cmp.i51.i.i = icmp eq ptr %34, %mnt_mounts.i.i.i
  br i1 %cmp.i51.i.i, label %for.body.i.i.while.cond.i.i.i_crit_edge, label %for.body.i.i.next_mnt.exit.i.i_crit_edge

for.body.i.i.next_mnt.exit.i.i_crit_edge:         ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit.i.i

for.body.i.i.while.cond.i.i.i_crit_edge:          ; preds = %for.body.i.i
  br label %while.cond.i.i.i

while.cond.i.i.i:                                 ; preds = %if.end.i.i.i.while.cond.i.i.i_crit_edge, %for.body.i.i.while.cond.i.i.i_crit_edge
  %p.addr.0.i.i.i = phi ptr [ %38, %if.end.i.i.i.while.cond.i.i.i_crit_edge ], [ %p.058.i.i, %for.body.i.i.while.cond.i.i.i_crit_edge ]
  %cmp3.i.i.i = icmp eq ptr %p.addr.0.i.i.i, %call5.i.i
  br i1 %cmp3.i.i.i, label %while.cond.i.i.i.for.end.i.i_crit_edge, label %if.end.i.i.i

while.cond.i.i.i.for.end.i.i_crit_edge:           ; preds = %while.cond.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end.i.i

if.end.i.i.i:                                     ; preds = %while.cond.i.i.i
  %mnt_child.i.i.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i.i.i, i32 0, i32 7
  %35 = ptrtoint ptr %mnt_child.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %mnt_child.i.i.i, align 4
  %mnt_parent.i.i.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i.i.i, i32 0, i32 1
  %37 = ptrtoint ptr %mnt_parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %mnt_parent.i.i.i, align 4
  %mnt_mounts6.i.i.i = getelementptr inbounds %struct.mount, ptr %38, i32 0, i32 6
  %cmp7.not.i.i.i = icmp eq ptr %36, %mnt_mounts6.i.i.i
  br i1 %cmp7.not.i.i.i, label %if.end.i.i.i.while.cond.i.i.i_crit_edge, label %if.end.i.i.i.next_mnt.exit.i.i_crit_edge

if.end.i.i.i.next_mnt.exit.i.i_crit_edge:         ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit.i.i

if.end.i.i.i.while.cond.i.i.i_crit_edge:          ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i.i.i

next_mnt.exit.i.i:                                ; preds = %if.end.i.i.i.next_mnt.exit.i.i_crit_edge, %for.body.i.i.next_mnt.exit.i.i_crit_edge
  %next.0.i.i.i = phi ptr [ %34, %for.body.i.i.next_mnt.exit.i.i_crit_edge ], [ %36, %if.end.i.i.i.next_mnt.exit.i.i_crit_edge ]
  %add.ptr.i.i.i = getelementptr i8, ptr %next.0.i.i.i, i32 -52
  %tobool10.not.i.i = icmp eq ptr %add.ptr.i.i.i, null
  br i1 %tobool10.not.i.i, label %next_mnt.exit.i.i.for.end.i.i_crit_edge, label %next_mnt.exit.i.i.for.body.i.i_crit_edge

next_mnt.exit.i.i.for.body.i.i_crit_edge:         ; preds = %next_mnt.exit.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i.i

next_mnt.exit.i.i.for.end.i.i_crit_edge:          ; preds = %next_mnt.exit.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %next_mnt.exit.i.i.for.end.i.i_crit_edge, %while.cond.i.i.i.for.end.i.i_crit_edge, %if.end9.i.i.for.end.i.i_crit_edge
  %root.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %call2.i.i, i32 0, i32 1
  %39 = ptrtoint ptr %root.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %call5.i.i, ptr %root.i.i, align 8
  %list.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %call2.i.i, i32 0, i32 2
  %mnt_list.i.i = getelementptr inbounds %struct.mount, ptr %call5.i.i, i32 0, i32 10
  %prev.i.i.i = getelementptr inbounds %struct.mount, ptr %call5.i.i, i32 0, i32 10, i32 1
  %40 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %prev.i.i.i, align 4
  %call.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %list.i.i, ptr noundef %41, ptr noundef %mnt_list.i.i) #22
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %for.end.i.i.list_add_tail.exit.i.i_crit_edge

for.end.i.i.list_add_tail.exit.i.i_crit_edge:     ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add_tail.exit.i.i

if.end.i.i.i.i:                                   ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %42 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %list.i.i, ptr %prev.i.i.i, align 4
  %43 = ptrtoint ptr %list.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %mnt_list.i.i, ptr %list.i.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %call2.i.i, i32 0, i32 2, i32 1
  %44 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %41, ptr %prev3.i.i.i.i, align 4
  %45 = ptrtoint ptr %41 to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %list.i.i, ptr %41, align 4
  br label %list_add_tail.exit.i.i

list_add_tail.exit.i.i:                           ; preds = %if.end.i.i.i.i, %for.end.i.i.list_add_tail.exit.i.i_crit_edge
  %mnt13.i.i = getelementptr inbounds %struct.mount, ptr %call5.i.i, i32 0, i32 3
  %46 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %mnt_pcp.i.i.i.i = getelementptr %struct.mount, ptr %call5.i.i, i32 0, i32 5
  %47 = ptrtoint ptr %mnt_pcp.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %mnt_pcp.i.i.i.i, align 4
  %49 = ptrtoint ptr %48 to i32
  %50 = call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i.i = and i32 %50, -16384
  %51 = inttoptr i32 %and.i.i.i.i.i to ptr
  %cpu.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %51, i32 0, i32 3
  %52 = ptrtoint ptr %cpu.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %cpu.i.i.i.i, align 4
  %arrayidx.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %53
  %54 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %55, %49
  %56 = inttoptr i32 %add.i.i.i.i to ptr
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %56, align 4
  %add13.i.i.i.i = add i32 %58, 1
  store i32 %add13.i.i.i.i, ptr %56, align 4
  %59 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i.i.i.i = and i32 %59, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.then.i.i.i.i, label %list_add_tail.exit.i.i.mnt_add_count.exit.i.i.i_crit_edge, !prof !343

list_add_tail.exit.i.i.mnt_add_count.exit.i.i.i_crit_edge: ; preds = %list_add_tail.exit.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_add_count.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %list_add_tail.exit.i.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @warn_bogus_irq_restore() #22
  br label %mnt_add_count.exit.i.i.i

mnt_add_count.exit.i.i.i:                         ; preds = %if.then.i.i.i.i, %list_add_tail.exit.i.i.mnt_add_count.exit.i.i.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %46) #22, !srcloc !344
  call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %29) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %60 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i.i = add i32 %60, 1
  store i32 %inc.i.i.i.i.i.i, ptr @mount_lock, align 128
  call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  call fastcc void @namespace_unlock() #22
  %61 = ptrtoint ptr %path.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %path.i, align 4
  %tobool.not.i53.i.i = icmp eq ptr %62, null
  br i1 %tobool.not.i53.i.i, label %mnt_add_count.exit.i.i.i.mntput.exit.i.i_crit_edge, label %if.then.i54.i.i

mnt_add_count.exit.i.i.i.mntput.exit.i.i_crit_edge: ; preds = %mnt_add_count.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mntput.exit.i.i

if.then.i54.i.i:                                  ; preds = %mnt_add_count.exit.i.i.i
  %add.ptr.i.i.i.i = getelementptr i8, ptr %62, i32 -16
  %mnt_expiry_mark.i.i.i = getelementptr i8, ptr %62, i32 140
  %63 = ptrtoint ptr %mnt_expiry_mark.i.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %mnt_expiry_mark.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %tobool1.not.i.i.i = icmp eq i32 %64, 0
  br i1 %tobool1.not.i.i.i, label %if.then.i54.i.i.if.end.i55.i.i_crit_edge, label %if.then4.i.i.i, !prof !352

if.then.i54.i.i.if.end.i55.i.i_crit_edge:         ; preds = %if.then.i54.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i55.i.i

if.then4.i.i.i:                                   ; preds = %if.then.i54.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %65 = ptrtoint ptr %mnt_expiry_mark.i.i.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 0, ptr %mnt_expiry_mark.i.i.i, align 4
  br label %if.end.i55.i.i

if.end.i55.i.i:                                   ; preds = %if.then4.i.i.i, %if.then.i54.i.i.if.end.i55.i.i_crit_edge
  call fastcc void @mntput_no_expire(ptr noundef %add.ptr.i.i.i.i) #22
  br label %mntput.exit.i.i

mntput.exit.i.i:                                  ; preds = %if.end.i55.i.i, %mnt_add_count.exit.i.i.i.mntput.exit.i.i_crit_edge
  %66 = ptrtoint ptr %path.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr %mnt13.i.i, ptr %path.i, align 4
  %67 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %task.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %68, i32 0, i32 99
  %69 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %cred.i.i, align 16
  %call20.i.i = call ptr @dentry_open(ptr noundef nonnull %path.i, i32 noundef 2097152, ptr noundef %70) #22
  %cmp.i56.i.i = icmp ugt ptr %call20.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i56.i.i, label %if.then22.i.i, label %if.else.i.i

if.then22.i.i:                                    ; preds = %mntput.exit.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %71 = ptrtoint ptr %path.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %path.i, align 4
  call void @dissolve_on_fput(ptr noundef %72) #22
  br label %if.end45.i

if.else.i.i:                                      ; preds = %mntput.exit.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %f_mode.i.i = getelementptr inbounds %struct.file, ptr %call20.i.i, i32 0, i32 8
  %73 = ptrtoint ptr %f_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %f_mode.i.i, align 8
  %or.i.i = or i32 %74, 268435456
  store i32 %or.i.i, ptr %f_mode.i.i, align 8
  br label %if.end45.i

do.end42.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #24
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 99
  %75 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %cred.i, align 16
  %call44.i = call ptr @dentry_open(ptr noundef nonnull %path.i, i32 noundef 2097152, ptr noundef %76) #22
  br label %if.end45.i

if.end45.i:                                       ; preds = %do.end42.i, %if.else.i.i, %if.then22.i.i, %if.then7.i.i, %if.then35.i.if.end45.i_crit_edge
  %file.0.i = phi ptr [ %call44.i, %do.end42.i ], [ %call5.i.i, %if.then7.i.i ], [ %call20.i.i, %if.else.i.i ], [ %call20.i.i, %if.then22.i.i ], [ %call2.i.i, %if.then35.i.if.end45.i_crit_edge ]
  call void @path_put(ptr noundef nonnull %path.i) #22
  br label %if.end46.i

if.end46.i:                                       ; preds = %if.end45.i, %if.then32.i
  %file.1.i = phi ptr [ %16, %if.then32.i ], [ %file.0.i, %if.end45.i ]
  %cmp.i.i = icmp ugt ptr %file.1.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then48.i, label %if.end50.i

if.then48.i:                                      ; preds = %if.end46.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @put_unused_fd(i32 noundef %call24.i) #22
  %77 = ptrtoint ptr %file.1.i to i32
  br label %__do_sys_open_tree.exit

if.end50.i:                                       ; preds = %if.end46.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @fd_install(i32 noundef %call24.i, ptr noundef %file.1.i) #22
  br label %__do_sys_open_tree.exit

__do_sys_open_tree.exit:                          ; preds = %if.end50.i, %if.then48.i, %if.end22.i.__do_sys_open_tree.exit_crit_edge, %land.lhs.true.i.__do_sys_open_tree.exit_crit_edge, %entry.__do_sys_open_tree.exit_crit_edge
  %retval.0.i = phi i32 [ %77, %if.then48.i ], [ %call24.i, %if.end50.i ], [ -22, %entry.__do_sys_open_tree.exit_crit_edge ], [ -1, %land.lhs.true.i.__do_sys_open_tree.exit_crit_edge ], [ %call24.i, %if.end22.i.__do_sys_open_tree.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path.i) #22
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @finish_automount(ptr noundef %m, ptr nocapture noundef readonly %path) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %dentry1 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %0 = ptrtoint ptr %dentry1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dentry1, align 4
  %tobool.not = icmp eq ptr %m, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %cmp.i = icmp ugt ptr %m, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %2 = ptrtoint ptr %m to i32
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %add.ptr.i = getelementptr i8, ptr %m, i32 -16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %3 = load i32, ptr @nr_cpu_ids, align 4
  %call6.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__sanitizer_cov_trace_cmp4(i32 %call6.i, i32 %3)
  %cmp7.i = icmp ult i32 %call6.i, %3
  br i1 %cmp7.i, label %do.body.lr.ph.i, label %if.end4.do.body10_crit_edge

if.end4.do.body10_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body10

do.body.lr.ph.i:                                  ; preds = %if.end4
  %mnt_pcp.i = getelementptr i8, ptr %m, i32 24
  %4 = ptrtoint ptr %mnt_pcp.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mnt_pcp.i, align 4
  %6 = ptrtoint ptr %5 to i32
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %do.body.lr.ph.i
  %call9.i = phi i32 [ %call6.i, %do.body.lr.ph.i ], [ %call.i93, %do.body.i.do.body.i_crit_edge ]
  %count.08.i = phi i32 [ 0, %do.body.lr.ph.i ], [ %add2.i, %do.body.i.do.body.i_crit_edge ]
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call9.i
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %8, %6
  %9 = inttoptr i32 %add.i to ptr
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  %add2.i = add i32 %11, %count.08.i
  %call.i93 = tail call i32 @cpumask_next(i32 noundef %call9.i, ptr noundef nonnull @__cpu_possible_mask) #25
  %cmp.i94 = icmp ult i32 %call.i93, %3
  br i1 %cmp.i94, label %do.body.i.do.body.i_crit_edge, label %mnt_get_count.exit

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body.i

mnt_get_count.exit:                               ; preds = %do.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %add2.i)
  %cmp = icmp slt i32 %add2.i, 2
  br i1 %cmp, label %mnt_get_count.exit.do.body10_crit_edge, label %do.end16, !prof !343

mnt_get_count.exit.do.body10_crit_edge:           ; preds = %mnt_get_count.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body10

do.body10:                                        ; preds = %mnt_get_count.exit.do.body10_crit_edge, %if.end4.do.body10_crit_edge
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namespace.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3048, 0\0A.popsection", ""() #22, !srcloc !384
  unreachable

do.end16:                                         ; preds = %mnt_get_count.exit
  %mnt_sb = getelementptr %struct.vfsmount, ptr %m, i32 0, i32 1
  %12 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %mnt_sb, align 4
  %14 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %path, align 4
  %mnt_sb18 = getelementptr inbounds %struct.vfsmount, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %mnt_sb18 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %mnt_sb18, align 4
  %cmp19 = icmp eq ptr %13, %17
  br i1 %cmp19, label %land.lhs.true, label %do.end16.if.end22_crit_edge

do.end16.if.end22_crit_edge:                      ; preds = %do.end16
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end22

land.lhs.true:                                    ; preds = %do.end16
  %18 = ptrtoint ptr %m to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %m, align 4
  %cmp20 = icmp eq ptr %19, %1
  br i1 %cmp20, label %land.lhs.true.discard_crit_edge, label %land.lhs.true.if.end22_crit_edge

land.lhs.true.if.end22_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end22

land.lhs.true.discard_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %discard

if.end22:                                         ; preds = %land.lhs.true.if.end22_crit_edge, %do.end16.if.end22_crit_edge
  %d_inode = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 5
  %20 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %d_inode, align 8
  %i_rwsem.i = getelementptr inbounds %struct.inode, ptr %21, i32 0, i32 25
  tail call void @down_write(ptr noundef %i_rwsem.i) #22
  tail call void @down_write(ptr noundef nonnull @namespace_sem) #22
  %22 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %1, align 8
  %and.i = and i32 %23, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool24.not = icmp eq i32 %and.i, 0
  br i1 %tobool24.not, label %if.end32, label %if.end22.discard_locked_crit_edge, !prof !352

if.end22.discard_locked_crit_edge:                ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #24
  br label %discard_locked

if.end32:                                         ; preds = %if.end22
  %24 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %27, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !365
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #22
  %call.i = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i, label %if.end32.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end32.rcu_read_lock.exit_crit_edge:            ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end32
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 696, ptr noundef nonnull @.str.47) #22
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end32.rcu_read_lock.exit_crit_edge
  %28 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %path, align 4
  %30 = ptrtoint ptr %29 to i32
  %div6.i.i = lshr i32 %30, 7
  %31 = ptrtoint ptr %1 to i32
  %div17.i.i = lshr i32 %31, 7
  %add.i.i = add nuw nsw i32 %div6.i.i, %div17.i.i
  %32 = load i32, ptr @m_hash_shift, align 4
  %shr.i.i = lshr i32 %add.i.i, %32
  %add2.i.i = add nuw nsw i32 %shr.i.i, %add.i.i
  %33 = load ptr, ptr @mount_hashtable, align 4
  %34 = load i32, ptr @m_hash_mask, align 4
  %and.i.i = and i32 %add2.i.i, %34
  %arrayidx.i.i = getelementptr %struct.hlist_head, ptr %33, i32 %and.i.i
  %call1.i95 = tail call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i95)
  %tobool.not.i96 = icmp eq i32 %call1.i95, 0
  br i1 %tobool.not.i96, label %land.lhs.true.i97, label %rcu_read_lock.exit.do.end.i_crit_edge

rcu_read_lock.exit.do.end.i_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i

land.lhs.true.i97:                                ; preds = %rcu_read_lock.exit
  %call2.i = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i97.do.end.i_crit_edge, label %land.lhs.true4.i

land.lhs.true.i97.do.end.i_crit_edge:             ; preds = %land.lhs.true.i97
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i97
  %.b44.i = load i1, ptr @__lookup_mnt.__warned, align 1
  br i1 %.b44.i, label %land.lhs.true4.i.do.end.i_crit_edge, label %if.then.i98

land.lhs.true4.i.do.end.i_crit_edge:              ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i

if.then.i98:                                      ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @__lookup_mnt.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 660, ptr noundef nonnull @.str.3) #22
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i98, %land.lhs.true4.i.do.end.i_crit_edge, %land.lhs.true.i97.do.end.i_crit_edge, %rcu_read_lock.exit.do.end.i_crit_edge
  %35 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %p.046.i = load volatile ptr, ptr %arrayidx.i.i, align 4
  %tobool13.not47.i = icmp eq ptr %p.046.i, null
  br i1 %tobool13.not47.i, label %do.end.i.if.end43_crit_edge, label %do.end.i.for.body.i_crit_edge

do.end.i.for.body.i_crit_edge:                    ; preds = %do.end.i
  br label %for.body.i

do.end.i.if.end43_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end43

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %do.end.i.for.body.i_crit_edge
  %p.048.i = phi ptr [ %p.0.i, %for.inc.i.for.body.i_crit_edge ], [ %p.046.i, %do.end.i.for.body.i_crit_edge ]
  %mnt_parent.i = getelementptr inbounds %struct.mount, ptr %p.048.i, i32 0, i32 1
  %36 = ptrtoint ptr %mnt_parent.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %mnt_parent.i, align 4
  %mnt14.i = getelementptr inbounds %struct.mount, ptr %37, i32 0, i32 3
  %cmp.i99 = icmp eq ptr %mnt14.i, %29
  br i1 %cmp.i99, label %land.lhs.true15.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

land.lhs.true15.i:                                ; preds = %for.body.i
  %mnt_mountpoint.i = getelementptr inbounds %struct.mount, ptr %p.048.i, i32 0, i32 2
  %38 = ptrtoint ptr %mnt_mountpoint.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %mnt_mountpoint.i, align 4
  %cmp16.i = icmp eq ptr %39, %1
  br i1 %cmp16.i, label %if.then42, label %land.lhs.true15.i.for.inc.i_crit_edge

land.lhs.true15.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true15.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true15.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %40 = ptrtoint ptr %p.048.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %p.0.i = load volatile ptr, ptr %p.048.i, align 4
  %tobool13.not.i = icmp eq ptr %p.0.i, null
  br i1 %tobool13.not.i, label %for.inc.i.if.end43_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i

for.inc.i.if.end43_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end43

if.then42:                                        ; preds = %land.lhs.true15.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @rcu_read_unlock()
  br label %discard_locked

if.end43:                                         ; preds = %for.inc.i.if.end43_crit_edge, %do.end.i.if.end43_crit_edge
  %call.i100 = tail call zeroext i1 @rcu_is_watching() #22
  br i1 %call.i100, label %if.end43.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i103

if.end43.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

land.lhs.true.i103:                               ; preds = %if.end43
  %call1.i101 = tail call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i101)
  %tobool.not.i102 = icmp eq i32 %call1.i101, 0
  br i1 %tobool.not.i102, label %land.lhs.true.i103.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i105

land.lhs.true.i103.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i103
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

land.lhs.true2.i105:                              ; preds = %land.lhs.true.i103
  %.b4.i104 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i104, label %land.lhs.true2.i105.rcu_read_unlock.exit_crit_edge, label %if.then.i106

land.lhs.true2.i105.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i105
  call void @__sanitizer_cov_trace_pc() #24
  br label %rcu_read_unlock.exit

if.then.i106:                                     ; preds = %land.lhs.true2.i105
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.45, i32 noundef 724, ptr noundef nonnull @.str.46) #22
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i106, %land.lhs.true2.i105.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i103.rcu_read_unlock.exit_crit_edge, %if.end43.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #22, !srcloc !366
  %41 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i.i107 = and i32 %41, -16384
  %42 = inttoptr i32 %and.i.i.i.i.i107 to ptr
  %preempt_count.i.i.i.i108 = getelementptr inbounds %struct.thread_info, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %preempt_count.i.i.i.i108 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %preempt_count.i.i.i.i108, align 4
  %sub.i.i.i = add i32 %44, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i108, align 4
  tail call void @rcu_read_unlock_strict() #22
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #22
  %call44 = tail call fastcc ptr @get_mountpoint(ptr noundef %1)
  %cmp.i110 = icmp ugt ptr %call44, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i110, label %if.then46, label %if.end48

if.then46:                                        ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #24
  %45 = ptrtoint ptr %call44 to i32
  br label %discard_locked

if.end48:                                         ; preds = %rcu_read_unlock.exit
  %46 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %path, align 4
  %mnt_flags = getelementptr inbounds %struct.vfsmount, ptr %47, i32 0, i32 2
  %48 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %mnt_flags, align 4
  %add.ptr.i.i = getelementptr i8, ptr %47, i32 -16
  %or = and i32 %49, -385897217
  %and.i111 = or i32 %or, 256
  %mnt_ns.i.i = getelementptr i8, ptr %47, i32 100
  %50 = ptrtoint ptr %mnt_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %mnt_ns.i.i, align 4
  %52 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i = and i32 %52, -16384
  %53 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %53, i32 0, i32 2
  %54 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %task.i.i, align 8
  %nsproxy.i.i = getelementptr inbounds %struct.task_struct, ptr %55, i32 0, i32 110
  %56 = ptrtoint ptr %nsproxy.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %nsproxy.i.i, align 4
  %mnt_ns1.i.i = getelementptr inbounds %struct.nsproxy, ptr %57, i32 0, i32 3
  %58 = ptrtoint ptr %mnt_ns1.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %mnt_ns1.i.i, align 4
  %cmp.i.not.i = icmp eq ptr %51, %59
  br i1 %cmp.i.not.i, label %if.end48.if.end11.i_crit_edge, label %if.then.i112, !prof !352

if.end48.if.end11.i_crit_edge:                    ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end11.i

if.then.i112:                                     ; preds = %if.end48
  %tobool8.not.i = icmp eq ptr %51, null
  br i1 %tobool8.not.i, label %if.then.i112.do_add_mount.exit.thread_crit_edge, label %if.then.i112.if.end11.i_crit_edge

if.then.i112.if.end11.i_crit_edge:                ; preds = %if.then.i112
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end11.i

if.then.i112.do_add_mount.exit.thread_crit_edge:  ; preds = %if.then.i112
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_add_mount.exit.thread

if.end11.i:                                       ; preds = %if.then.i112.if.end11.i_crit_edge, %if.end48.if.end11.i_crit_edge
  %mnt_sb.i = getelementptr inbounds %struct.vfsmount, ptr %47, i32 0, i32 1
  %60 = ptrtoint ptr %mnt_sb.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %mnt_sb.i, align 4
  %62 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %mnt_sb, align 4
  %cmp.i113 = icmp eq ptr %61, %63
  br i1 %cmp.i113, label %land.lhs.true.i115, label %if.end11.i.if.end18.i_crit_edge

if.end11.i.if.end18.i_crit_edge:                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end18.i

land.lhs.true.i115:                               ; preds = %if.end11.i
  %64 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %47, align 4
  %66 = ptrtoint ptr %dentry1 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %dentry1, align 4
  %cmp16.i114 = icmp eq ptr %65, %67
  br i1 %cmp16.i114, label %land.lhs.true.i115.do_add_mount.exit.thread_crit_edge, label %land.lhs.true.i115.if.end18.i_crit_edge

land.lhs.true.i115.if.end18.i_crit_edge:          ; preds = %land.lhs.true.i115
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end18.i

land.lhs.true.i115.do_add_mount.exit.thread_crit_edge: ; preds = %land.lhs.true.i115
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_add_mount.exit.thread

if.end18.i:                                       ; preds = %land.lhs.true.i115.if.end18.i_crit_edge, %if.end11.i.if.end18.i_crit_edge
  %68 = ptrtoint ptr %m to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %m, align 4
  %70 = ptrtoint ptr %69 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %69, align 8
  %and.i.i37.i = and i32 %71, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 6291456, i32 %and.i.i37.i)
  %cmp.i38.i = icmp eq i32 %and.i.i37.i, 6291456
  br i1 %cmp.i38.i, label %if.end18.i.do_add_mount.exit.thread_crit_edge, label %if.end23.i

if.end18.i.do_add_mount.exit.thread_crit_edge:    ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_add_mount.exit.thread

if.end23.i:                                       ; preds = %if.end18.i
  %mnt_flags25.i = getelementptr i8, ptr %m, i32 8
  %72 = ptrtoint ptr %mnt_flags25.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %and.i111, ptr %mnt_flags25.i, align 4
  %s_flags.i.i = getelementptr inbounds %struct.super_block, ptr %63, i32 0, i32 10
  %73 = ptrtoint ptr %s_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %s_flags.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %74)
  %tobool.not.i.i = icmp sgt i32 %74, -1
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.end23.i.do_add_mount.exit.thread_crit_edge

if.end23.i.do_add_mount.exit.thread_crit_edge:    ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_add_mount.exit.thread

if.end.i.i:                                       ; preds = %if.end23.i
  %m_dentry.i.i = getelementptr inbounds %struct.mountpoint, ptr %call44, i32 0, i32 1
  %75 = ptrtoint ptr %m_dentry.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %m_dentry.i.i, align 4
  %77 = ptrtoint ptr %76 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %76, align 8
  %79 = and i32 %78, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %79)
  %80 = icmp eq i32 %79, 2097152
  %81 = ptrtoint ptr %69 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %69, align 8
  %83 = and i32 %82, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %83)
  %84 = icmp eq i32 %83, 2097152
  %85 = xor i1 %80, %84
  br i1 %85, label %if.end.i.i.do_add_mount.exit.thread_crit_edge, label %do_add_mount.exit

if.end.i.i.do_add_mount.exit.thread_crit_edge:    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_add_mount.exit.thread

do_add_mount.exit.thread:                         ; preds = %if.end.i.i.do_add_mount.exit.thread_crit_edge, %if.end23.i.do_add_mount.exit.thread_crit_edge, %if.end18.i.do_add_mount.exit.thread_crit_edge, %land.lhs.true.i115.do_add_mount.exit.thread_crit_edge, %if.then.i112.do_add_mount.exit.thread_crit_edge
  %retval.0.i.ph = phi i32 [ -20, %if.end.i.i.do_add_mount.exit.thread_crit_edge ], [ -22, %if.end23.i.do_add_mount.exit.thread_crit_edge ], [ -22, %if.end18.i.do_add_mount.exit.thread_crit_edge ], [ -16, %land.lhs.true.i115.do_add_mount.exit.thread_crit_edge ], [ -22, %if.then.i112.do_add_mount.exit.thread_crit_edge ]
  tail call fastcc void @unlock_mount(ptr noundef %call44)
  br label %discard

do_add_mount.exit:                                ; preds = %if.end.i.i
  %call8.i.i = tail call fastcc i32 @attach_recursive_mnt(ptr noundef %add.ptr.i, ptr noundef %add.ptr.i.i, ptr noundef %call44, i1 noundef zeroext false) #22
  tail call fastcc void @unlock_mount(ptr noundef %call44)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i.i)
  %tobool51.not = icmp eq i32 %call8.i.i, 0
  br i1 %tobool51.not, label %if.then.i118, label %do_add_mount.exit.discard_crit_edge, !prof !352

do_add_mount.exit.discard_crit_edge:              ; preds = %do_add_mount.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %discard

if.then.i118:                                     ; preds = %do_add_mount.exit
  %mnt_expiry_mark.i = getelementptr i8, ptr %m, i32 140
  %86 = ptrtoint ptr %mnt_expiry_mark.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %mnt_expiry_mark.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %87)
  %tobool1.not.i = icmp eq i32 %87, 0
  br i1 %tobool1.not.i, label %if.then.i118.mntput.exit_crit_edge, label %if.then4.i, !prof !352

if.then.i118.mntput.exit_crit_edge:               ; preds = %if.then.i118
  call void @__sanitizer_cov_trace_pc() #24
  br label %mntput.exit

if.then4.i:                                       ; preds = %if.then.i118
  call void @__sanitizer_cov_trace_pc() #24
  %88 = ptrtoint ptr %mnt_expiry_mark.i to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 0, ptr %mnt_expiry_mark.i, align 4
  br label %mntput.exit

mntput.exit:                                      ; preds = %if.then4.i, %if.then.i118.mntput.exit_crit_edge
  tail call fastcc void @mntput_no_expire(ptr noundef %add.ptr.i) #22
  br label %cleanup

discard_locked:                                   ; preds = %if.then46, %if.then42, %if.end22.discard_locked_crit_edge
  %err.0 = phi i32 [ 0, %if.then42 ], [ %45, %if.then46 ], [ -2, %if.end22.discard_locked_crit_edge ]
  tail call fastcc void @namespace_unlock()
  %89 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %d_inode, align 8
  %i_rwsem.i119 = getelementptr inbounds %struct.inode, ptr %90, i32 0, i32 25
  tail call void @up_write(ptr noundef %i_rwsem.i119) #22
  br label %discard

discard:                                          ; preds = %discard_locked, %do_add_mount.exit.discard_crit_edge, %do_add_mount.exit.thread, %land.lhs.true.discard_crit_edge
  %err.1 = phi i32 [ %err.0, %discard_locked ], [ %call8.i.i, %do_add_mount.exit.discard_crit_edge ], [ -40, %land.lhs.true.discard_crit_edge ], [ %retval.0.i.ph, %do_add_mount.exit.thread ]
  %mnt_expire = getelementptr i8, ptr %m, i32 64
  %91 = ptrtoint ptr %mnt_expire to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load volatile ptr, ptr %mnt_expire, align 4
  %cmp.i120.not = icmp eq ptr %92, %mnt_expire
  br i1 %cmp.i120.not, label %discard.if.then.i126_crit_edge, label %if.then63

discard.if.then.i126_crit_edge:                   ; preds = %discard
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i126

if.then63:                                        ; preds = %discard
  tail call void @down_write(ptr noundef nonnull @namespace_sem) #22
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %mnt_expire) #22
  br i1 %call.i.i, label %if.end.i.i121, label %if.then63.list_del_init.exit_crit_edge

if.then63.list_del_init.exit_crit_edge:           ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_init.exit

if.end.i.i121:                                    ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr i8, ptr %m, i32 68
  %93 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %prev.i.i, align 4
  %95 = ptrtoint ptr %mnt_expire to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %mnt_expire, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %96, i32 0, i32 1
  %97 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %97)
  store ptr %94, ptr %prev1.i.i.i, align 4
  %98 = ptrtoint ptr %94 to i32
  call void @__asan_store4_noabort(i32 %98)
  store volatile ptr %96, ptr %94, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i121, %if.then63.list_del_init.exit_crit_edge
  %99 = ptrtoint ptr %mnt_expire to i32
  call void @__asan_store4_noabort(i32 %99)
  store volatile ptr %mnt_expire, ptr %mnt_expire, align 4
  %prev.i3.i = getelementptr i8, ptr %m, i32 68
  %100 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %100)
  store ptr %mnt_expire, ptr %prev.i3.i, align 4
  tail call fastcc void @namespace_unlock()
  br label %if.then.i126

if.then.i126:                                     ; preds = %list_del_init.exit, %discard.if.then.i126_crit_edge
  %mnt_expiry_mark.i124 = getelementptr i8, ptr %m, i32 140
  %101 = ptrtoint ptr %mnt_expiry_mark.i124 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %mnt_expiry_mark.i124, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %102)
  %tobool1.not.i125 = icmp eq i32 %102, 0
  br i1 %tobool1.not.i125, label %if.then.i126.if.then.i134_crit_edge, label %if.then4.i127, !prof !352

if.then.i126.if.then.i134_crit_edge:              ; preds = %if.then.i126
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i134

if.then4.i127:                                    ; preds = %if.then.i126
  call void @__sanitizer_cov_trace_pc() #24
  %103 = ptrtoint ptr %mnt_expiry_mark.i124 to i32
  call void @__asan_store4_noabort(i32 %103)
  store i32 0, ptr %mnt_expiry_mark.i124, align 4
  br label %if.then.i134

if.then.i134:                                     ; preds = %if.then4.i127, %if.then.i126.if.then.i134_crit_edge
  tail call fastcc void @mntput_no_expire(ptr noundef %add.ptr.i) #22
  %104 = ptrtoint ptr %mnt_expiry_mark.i124 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %mnt_expiry_mark.i124, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %105)
  %tobool1.not.i133 = icmp eq i32 %105, 0
  br i1 %tobool1.not.i133, label %if.then.i134.mntput.exit137_crit_edge, label %if.then4.i135, !prof !352

if.then.i134.mntput.exit137_crit_edge:            ; preds = %if.then.i134
  call void @__sanitizer_cov_trace_pc() #24
  br label %mntput.exit137

if.then4.i135:                                    ; preds = %if.then.i134
  call void @__sanitizer_cov_trace_pc() #24
  %106 = ptrtoint ptr %mnt_expiry_mark.i124 to i32
  call void @__asan_store4_noabort(i32 %106)
  store i32 0, ptr %mnt_expiry_mark.i124, align 4
  br label %mntput.exit137

mntput.exit137:                                   ; preds = %if.then4.i135, %if.then.i134.mntput.exit137_crit_edge
  tail call fastcc void @mntput_no_expire(ptr noundef %add.ptr.i) #22
  br label %cleanup

cleanup:                                          ; preds = %mntput.exit137, %mntput.exit, %if.then2, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %2, %if.then2 ], [ %err.1, %mntput.exit137 ], [ 0, %mntput.exit ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @get_mountpoint(ptr noundef %dentry) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %dentry, align 8
  %and.i = and i32 %1, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %entry.if.end12_crit_edge, label %if.then

entry.if.end12_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end12

if.then:                                          ; preds = %entry
  %pprev.i.i.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 2, i32 1
  %2 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pprev.i.i.i, align 4
  %tobool.not.i.i.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i.i.not.i, label %land.rhs.i, label %if.then.mountpoint_crit_edge

if.then.mountpoint_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %mountpoint

land.rhs.i:                                       ; preds = %if.then
  %d_parent.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 3
  %4 = ptrtoint ptr %d_parent.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %d_parent.i, align 8
  %cmp.i = icmp eq ptr %5, %dentry
  br i1 %cmp.i, label %land.rhs.i.mountpoint_crit_edge, label %land.rhs.i.cleanup_crit_edge

land.rhs.i.cleanup_crit_edge:                     ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

land.rhs.i.mountpoint_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mountpoint

mountpoint:                                       ; preds = %if.end16.mountpoint_crit_edge, %land.rhs.i.mountpoint_crit_edge, %if.then.mountpoint_crit_edge
  %new.0 = phi ptr [ null, %land.rhs.i.mountpoint_crit_edge ], [ %new.251, %if.end16.mountpoint_crit_edge ], [ null, %if.then.mountpoint_crit_edge ]
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %6 = ptrtoint ptr %dentry to i32
  %div3.i.i = lshr i32 %6, 7
  %7 = load i32, ptr @mp_hash_shift, align 4
  %shr.i.i = lshr i32 %div3.i.i, %7
  %add.i.i = add nuw nsw i32 %shr.i.i, %div3.i.i
  %8 = load ptr, ptr @mountpoint_hashtable, align 4
  %9 = load i32, ptr @mp_hash_mask, align 4
  %and.i.i = and i32 %add.i.i, %9
  %arrayidx.i.i = getelementptr %struct.hlist_head, ptr %8, i32 %and.i.i
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %mountpoint
  %mp.0.in.i = phi ptr [ %arrayidx.i.i, %mountpoint ], [ %mp.0.i, %for.body.i.for.cond.i_crit_edge ]
  %10 = ptrtoint ptr %mp.0.in.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %mp.0.i = load ptr, ptr %mp.0.in.i, align 4
  %tobool2.not.i = icmp eq ptr %mp.0.i, null
  br i1 %tobool2.not.i, label %if.end8, label %for.body.i

for.body.i:                                       ; preds = %for.cond.i
  %m_dentry.i = getelementptr inbounds %struct.mountpoint, ptr %mp.0.i, i32 0, i32 1
  %11 = ptrtoint ptr %m_dentry.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %m_dentry.i, align 4
  %cmp.i43 = icmp eq ptr %12, %dentry
  br i1 %cmp.i43, label %lookup_mountpoint.exit, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond.i

lookup_mountpoint.exit:                           ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  %m_count.i = getelementptr inbounds %struct.mountpoint, ptr %mp.0.i, i32 0, i32 3
  %13 = ptrtoint ptr %m_count.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %m_count.i, align 4
  %inc.i = add i32 %14, 1
  store i32 %inc.i, ptr %m_count.i, align 4
  br label %done.sink.split

if.end8:                                          ; preds = %for.cond.i
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %tobool9.not = icmp eq ptr %new.0, null
  br i1 %tobool9.not, label %if.end8.if.end12_crit_edge, label %if.end8.if.end16_crit_edge

if.end8.if.end16_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end16

if.end8.if.end12_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end12

if.end12:                                         ; preds = %if.end8.if.end12_crit_edge, %entry.if.end12_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %15 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %15, i32 noundef 3264, i32 noundef 20) #28
  %tobool13.not = icmp eq ptr %call7.i, null
  br i1 %tobool13.not, label %if.end12.cleanup_crit_edge, label %if.end12.if.end16_crit_edge

if.end12.if.end16_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end16

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end16:                                         ; preds = %if.end12.if.end16_crit_edge, %if.end8.if.end16_crit_edge
  %new.251 = phi ptr [ %call7.i, %if.end12.if.end16_crit_edge ], [ %new.0, %if.end8.if.end16_crit_edge ]
  %call17 = tail call i32 @d_set_mounted(ptr noundef %dentry) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 -16, i32 %call17)
  %cmp = icmp eq i32 %call17, -16
  br i1 %cmp, label %if.end16.mountpoint_crit_edge, label %if.end19

if.end16.mountpoint_crit_edge:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #24
  br label %mountpoint

if.end19:                                         ; preds = %if.end16
  %16 = inttoptr i32 %call17 to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool21.not = icmp eq i32 %call17, 0
  br i1 %tobool21.not, label %if.end23, label %if.end19.done_crit_edge

if.end19.done_crit_edge:                          ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #24
  br label %done

if.end23:                                         ; preds = %if.end19
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %tobool.not.i = icmp eq ptr %dentry, null
  br i1 %tobool.not.i, label %if.end23.dget.exit_crit_edge, label %if.then.i44

if.end23.dget.exit_crit_edge:                     ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #24
  br label %dget.exit

if.then.i44:                                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #24
  %d_lockref.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i) #22
  br label %dget.exit

dget.exit:                                        ; preds = %if.then.i44, %if.end23.dget.exit_crit_edge
  %m_dentry = getelementptr inbounds %struct.mountpoint, ptr %new.251, i32 0, i32 1
  %17 = ptrtoint ptr %m_dentry to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %dentry, ptr %m_dentry, align 4
  %m_count = getelementptr inbounds %struct.mountpoint, ptr %new.251, i32 0, i32 3
  %18 = ptrtoint ptr %m_count to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 1, ptr %m_count, align 4
  %19 = ptrtoint ptr %dentry to i32
  %div3.i = lshr i32 %19, 7
  %20 = load i32, ptr @mp_hash_shift, align 4
  %shr.i = lshr i32 %div3.i, %20
  %add.i = add nuw nsw i32 %shr.i, %div3.i
  %21 = load ptr, ptr @mountpoint_hashtable, align 4
  %22 = load i32, ptr @mp_hash_mask, align 4
  %and.i45 = and i32 %add.i, %22
  %arrayidx.i = getelementptr %struct.hlist_head, ptr %21, i32 %and.i45
  %23 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %arrayidx.i, align 4
  %25 = ptrtoint ptr %new.251 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %24, ptr %new.251, align 4
  %tobool.not.i46 = icmp eq ptr %24, null
  br i1 %tobool.not.i46, label %dget.exit.hlist_add_head.exit_crit_edge, label %do.body12.i

dget.exit.hlist_add_head.exit_crit_edge:          ; preds = %dget.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_add_head.exit

do.body12.i:                                      ; preds = %dget.exit
  call void @__sanitizer_cov_trace_pc() #24
  %pprev.i = getelementptr inbounds %struct.hlist_node, ptr %24, i32 0, i32 1
  %26 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %new.251, ptr %pprev.i, align 4
  br label %hlist_add_head.exit

hlist_add_head.exit:                              ; preds = %do.body12.i, %dget.exit.hlist_add_head.exit_crit_edge
  %27 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %new.251, ptr %arrayidx.i, align 4
  %pprev34.i = getelementptr inbounds %struct.hlist_node, ptr %new.251, i32 0, i32 1
  %28 = ptrtoint ptr %pprev34.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %arrayidx.i, ptr %pprev34.i, align 4
  %m_list = getelementptr inbounds %struct.mountpoint, ptr %new.251, i32 0, i32 2
  %29 = ptrtoint ptr %m_list to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr null, ptr %m_list, align 4
  br label %done.sink.split

done.sink.split:                                  ; preds = %hlist_add_head.exit, %lookup_mountpoint.exit
  %mp.0.ph = phi ptr [ %new.251, %hlist_add_head.exit ], [ %mp.0.i, %lookup_mountpoint.exit ]
  %new.3.ph = phi ptr [ null, %hlist_add_head.exit ], [ %new.0, %lookup_mountpoint.exit ]
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  br label %done

done:                                             ; preds = %done.sink.split, %if.end19.done_crit_edge
  %mp.0 = phi ptr [ %16, %if.end19.done_crit_edge ], [ %mp.0.ph, %done.sink.split ]
  %new.3 = phi ptr [ %new.251, %if.end19.done_crit_edge ], [ %new.3.ph, %done.sink.split ]
  tail call void @kfree(ptr noundef %new.3) #22
  br label %cleanup

cleanup:                                          ; preds = %done, %if.end12.cleanup_crit_edge, %land.rhs.i.cleanup_crit_edge
  %retval.0 = phi ptr [ %mp.0, %done ], [ inttoptr (i32 -2 to ptr), %land.rhs.i.cleanup_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end12.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @unlock_mount(ptr noundef %where) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %m_dentry = getelementptr inbounds %struct.mountpoint, ptr %where, i32 0, i32 1
  %0 = ptrtoint ptr %m_dentry to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %m_dentry, align 4
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %m_count.i.i = getelementptr inbounds %struct.mountpoint, ptr %where, i32 0, i32 3
  %2 = ptrtoint ptr %m_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %m_count.i.i, align 4
  %dec.i.i = add i32 %3, -1
  store i32 %dec.i.i, ptr %m_count.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i.i)
  %tobool.not.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %entry.put_mountpoint.exit_crit_edge

entry.put_mountpoint.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_mountpoint.exit

if.then.i.i:                                      ; preds = %entry
  %4 = ptrtoint ptr %m_dentry to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %m_dentry, align 4
  %m_list.i.i = getelementptr inbounds %struct.mountpoint, ptr %where, i32 0, i32 2
  %6 = ptrtoint ptr %m_list.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %m_list.i.i, align 4
  %tobool.not.i.not.i.i = icmp eq ptr %7, null
  br i1 %tobool.not.i.not.i.i, label %do.end11.i.i, label %do.body6.i.i, !prof !352

do.body6.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namespace.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 821, 0\0A.popsection", ""() #22, !srcloc !370
  unreachable

do.end11.i.i:                                     ; preds = %if.then.i.i
  %d_lockref.i.i = getelementptr inbounds %struct.dentry, ptr %5, i32 0, i32 7
  tail call void @_raw_spin_lock(ptr noundef %d_lockref.i.i) #22
  %8 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %5, align 8
  %and.i.i = and i32 %9, -65537
  store i32 %and.i.i, ptr %5, align 8
  tail call void @_raw_spin_unlock(ptr noundef %d_lockref.i.i) #22
  tail call void @dput_to_list(ptr noundef %5, ptr noundef nonnull @ex_mountpoints) #22
  %10 = ptrtoint ptr %where to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %where, align 4
  %pprev2.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %where, i32 0, i32 1
  %12 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pprev2.i.i.i.i, align 4
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %11, ptr %13, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i.i.i, label %do.end11.i.i.hlist_del.exit.i.i_crit_edge, label %do.body13.i.i.i.i

do.end11.i.i.hlist_del.exit.i.i_crit_edge:        ; preds = %do.end11.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del.exit.i.i

do.body13.i.i.i.i:                                ; preds = %do.end11.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %11, i32 0, i32 1
  %15 = ptrtoint ptr %pprev14.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %13, ptr %pprev14.i.i.i.i, align 4
  br label %hlist_del.exit.i.i

hlist_del.exit.i.i:                               ; preds = %do.body13.i.i.i.i, %do.end11.i.i.hlist_del.exit.i.i_crit_edge
  %16 = ptrtoint ptr %where to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr inttoptr (i32 256 to ptr), ptr %where, align 4
  %17 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i.i, align 4
  tail call void @kfree(ptr noundef %where) #22
  br label %put_mountpoint.exit

put_mountpoint.exit:                              ; preds = %hlist_del.exit.i.i, %entry.put_mountpoint.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  tail call fastcc void @namespace_unlock()
  %d_inode = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 5
  %18 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %d_inode, align 8
  %i_rwsem.i = getelementptr inbounds %struct.inode, ptr %19, i32 0, i32 25
  tail call void @up_write(ptr noundef %i_rwsem.i) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mnt_set_expiry(ptr noundef %mnt, ptr noundef %expiry_list) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @down_write(ptr noundef nonnull @namespace_sem) #22
  %mnt_expire = getelementptr i8, ptr %mnt, i32 64
  %prev.i = getelementptr inbounds %struct.list_head, ptr %expiry_list, i32 0, i32 1
  %0 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %mnt_expire, ptr noundef %1, ptr noundef %expiry_list) #22
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_add_tail.exit_crit_edge

entry.list_add_tail.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %2 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %mnt_expire, ptr %prev.i, align 4
  %3 = ptrtoint ptr %mnt_expire to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %expiry_list, ptr %mnt_expire, align 4
  %prev3.i.i = getelementptr i8, ptr %mnt, i32 68
  %4 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %1, ptr %prev3.i.i, align 4
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %mnt_expire, ptr %1, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %entry.list_add_tail.exit_crit_edge
  tail call fastcc void @namespace_unlock()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mark_mounts_for_expiry(ptr noundef %mounts) #1 align 64 {
entry:
  %graveyard = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %graveyard) #22
  %0 = getelementptr inbounds %struct.list_head, ptr %graveyard, i32 0, i32 1
  %1 = ptrtoint ptr %graveyard to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %graveyard, ptr %graveyard, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %graveyard, ptr %0, align 4
  %3 = ptrtoint ptr %mounts to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %mounts, align 4
  %cmp.i.not = icmp eq ptr %4, %mounts
  br i1 %cmp.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @down_write(ptr noundef nonnull @namespace_sem) #22
  call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %5 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %5, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %6 = call ptr @llvm.returnaddress(i32 0) #22
  %7 = ptrtoint ptr %6 to i32
  call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %7) #22
  %8 = ptrtoint ptr %mounts to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mounts, align 4
  %cmp.not59 = icmp eq ptr %9, %mounts
  br i1 %cmp.not59, label %if.end.while.cond.preheader_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.while.cond.preheader_crit_edge:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %for.inc.while.cond.preheader_crit_edge, %if.end.while.cond.preheader_crit_edge
  %10 = ptrtoint ptr %graveyard to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %graveyard, align 4
  %cmp.i55.not64 = icmp eq ptr %11, %graveyard
  br i1 %cmp.i55.not64, label %while.cond.preheader.while.end_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.while.end_crit_edge:         ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end.for.body_crit_edge
  %.pn.in60 = phi ptr [ %.pn63, %for.inc.for.body_crit_edge ], [ %9, %if.end.for.body_crit_edge ]
  %12 = ptrtoint ptr %.pn.in60 to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pn63 = load ptr, ptr %.pn.in60, align 4
  %mnt_expiry_mark = getelementptr i8, ptr %.pn.in60, i32 76
  %call.i = call zeroext i1 @__kasan_check_write(ptr noundef %mnt_expiry_mark, i32 noundef 4) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !385
  call void @llvm.prefetch.p0(ptr %mnt_expiry_mark, i32 1, i32 3, i32 1) #22
  %13 = call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 1, ptr %mnt_expiry_mark) #22, !srcloc !378
  %asmresult.i = extractvalue { i32, i32 } %13, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !386
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i)
  %tobool24.not = icmp eq i32 %asmresult.i, 0
  br i1 %tobool24.not, label %for.body.for.inc_crit_edge, label %lor.lhs.false

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

lor.lhs.false:                                    ; preds = %for.body
  %mnt.062 = getelementptr i8, ptr %.pn.in60, i32 -80
  %call25 = call i32 @propagate_mount_busy(ptr noundef %mnt.062, i32 noundef 1) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.end28, label %lor.lhs.false.for.inc_crit_edge

lor.lhs.false.for.inc_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end28:                                         ; preds = %lor.lhs.false
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in60) #22
  br i1 %call.i.i, label %if.end.i.i, label %if.end28.__list_del_entry.exit.i_crit_edge

if.end28.__list_del_entry.exit.i_crit_edge:       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #24
  br label %__list_del_entry.exit.i

if.end.i.i:                                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in60, i32 0, i32 1
  %14 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %prev.i.i, align 4
  %16 = ptrtoint ptr %.pn.in60 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %.pn.in60, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %15, ptr %prev1.i.i.i, align 4
  %19 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %17, ptr %15, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i, %if.end28.__list_del_entry.exit.i_crit_edge
  %20 = ptrtoint ptr %graveyard to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %graveyard, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %.pn.in60, ptr noundef nonnull %graveyard, ptr noundef %21) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.for.inc_crit_edge

__list_del_entry.exit.i.for.inc_crit_edge:        ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev1.i.i2.i = getelementptr inbounds %struct.list_head, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %prev1.i.i2.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %.pn.in60, ptr %prev1.i.i2.i, align 4
  %23 = ptrtoint ptr %.pn.in60 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %21, ptr %.pn.in60, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in60, i32 0, i32 1
  %24 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %graveyard, ptr %prev3.i.i.i, align 4
  %25 = ptrtoint ptr %graveyard to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %.pn.in60, ptr %graveyard, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end.i.i.i, %__list_del_entry.exit.i.for.inc_crit_edge, %lor.lhs.false.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %cmp.not = icmp eq ptr %.pn63, %mounts
  br i1 %cmp.not, label %for.inc.while.cond.preheader_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.inc.while.cond.preheader_crit_edge:           ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.preheader

while.body:                                       ; preds = %touch_mnt_namespace.exit.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %26 = phi ptr [ %32, %touch_mnt_namespace.exit.while.body_crit_edge ], [ %11, %while.cond.preheader.while.body_crit_edge ]
  %add.ptr41 = getelementptr i8, ptr %26, i32 -80
  %mnt_ns = getelementptr i8, ptr %26, i32 36
  %27 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %mnt_ns, align 4
  %tobool.not.i = icmp eq ptr %28, null
  br i1 %tobool.not.i, label %while.body.touch_mnt_namespace.exit_crit_edge, label %if.then.i

while.body.touch_mnt_namespace.exit_crit_edge:    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %touch_mnt_namespace.exit

if.then.i:                                        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  %29 = load i64, ptr @event, align 8
  %inc.i = add i64 %29, 1
  store i64 %inc.i, ptr @event, align 8
  %event.i = getelementptr inbounds %struct.mnt_namespace, ptr %28, i32 0, i32 8
  %30 = ptrtoint ptr %event.i to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %inc.i, ptr %event.i, align 8
  %poll.i = getelementptr inbounds %struct.mnt_namespace, ptr %28, i32 0, i32 7
  call void @__wake_up(ptr noundef %poll.i, i32 noundef 1, i32 noundef 1, ptr noundef null) #22
  br label %touch_mnt_namespace.exit

touch_mnt_namespace.exit:                         ; preds = %if.then.i, %while.body.touch_mnt_namespace.exit_crit_edge
  call fastcc void @umount_tree(ptr noundef %add.ptr41, i32 noundef 3)
  %31 = ptrtoint ptr %graveyard to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile ptr, ptr %graveyard, align 4
  %cmp.i55.not = icmp eq ptr %32, %graveyard
  br i1 %cmp.i55.not, label %touch_mnt_namespace.exit.while.end_crit_edge, label %touch_mnt_namespace.exit.while.body_crit_edge

touch_mnt_namespace.exit.while.body_crit_edge:    ; preds = %touch_mnt_namespace.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body

touch_mnt_namespace.exit.while.end_crit_edge:     ; preds = %touch_mnt_namespace.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.end:                                        ; preds = %touch_mnt_namespace.exit.while.end_crit_edge, %while.cond.preheader.while.end_crit_edge
  call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %7) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %33 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i = add i32 %33, 1
  store i32 %inc.i.i.i.i, ptr @mount_lock, align 128
  call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  call fastcc void @namespace_unlock()
  br label %cleanup

cleanup:                                          ; preds = %while.end, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %graveyard) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @path_mount(ptr noundef %dev_name, ptr noundef %path, ptr noundef %type_page, i32 noundef %flags, ptr noundef %data_page) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %flags, -65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1058209792, i32 %and)
  %cmp = icmp eq i32 %and, -1058209792
  %and1 = and i32 %flags, 65535
  %spec.select = select i1 %cmp, i32 %and1, i32 %flags
  %tobool.not = icmp eq ptr %data_page, null
  br i1 %tobool.not, label %entry.if.end3_crit_edge, label %if.then2

entry.if.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end3

if.then2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %arrayidx = getelementptr i8, ptr %data_page, i32 4095
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 0, ptr %arrayidx, align 1
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %entry.if.end3_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %spec.select)
  %tobool5.not = icmp sgt i32 %spec.select, -1
  br i1 %tobool5.not, label %if.end7, label %if.end3.cleanup_crit_edge

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end7:                                          ; preds = %if.end3
  %call = tail call i32 @security_sb_mount(ptr noundef %dev_name, ptr noundef %path, ptr noundef %type_page, i32 noundef %spec.select, ptr noundef %data_page) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool8.not = icmp eq i32 %call, 0
  br i1 %tobool8.not, label %if.end10, label %if.end7.cleanup_crit_edge

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end10:                                         ; preds = %if.end7
  %1 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task.i, align 8
  %nsproxy.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 110
  %5 = ptrtoint ptr %nsproxy.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %nsproxy.i, align 4
  %mnt_ns.i = getelementptr inbounds %struct.nsproxy, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %mnt_ns.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %mnt_ns.i, align 4
  %user_ns.i = getelementptr inbounds %struct.mnt_namespace, ptr %8, i32 0, i32 4
  %9 = ptrtoint ptr %user_ns.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %user_ns.i, align 8
  %call1.i = tail call zeroext i1 @ns_capable(ptr noundef %10, i32 noundef 21) #22
  br i1 %call1.i, label %if.end13, label %if.end10.cleanup_crit_edge

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end13:                                         ; preds = %if.end10
  %and14 = and i32 %spec.select, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14)
  %tobool15.not = icmp eq i32 %and14, 0
  br i1 %tobool15.not, label %if.end13.if.end17_crit_edge, label %if.then16

if.end13.if.end17_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end17

if.then16:                                        ; preds = %if.end13
  %.b13.i = load i1, ptr @warn_mandlock.__already_done, align 1
  br i1 %.b13.i, label %if.then16.if.end17_crit_edge, label %if.then.i, !prof !352

if.then16.if.end17_crit_edge:                     ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end17

if.then.i:                                        ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @warn_mandlock.__already_done, align 1
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.61) #29
  br label %if.end17

if.end17:                                         ; preds = %if.then.i, %if.then16.if.end17_crit_edge, %if.end13.if.end17_crit_edge
  %and18 = and i32 %spec.select, 1024
  %11 = lshr exact i32 %and18, 5
  %and22 = lshr i32 %spec.select, 1
  %12 = and i32 %and22, 1
  %13 = or i32 %11, %12
  %14 = and i32 %and22, 2
  %15 = or i32 %13, %14
  %16 = and i32 %and22, 4
  %17 = or i32 %15, %16
  %18 = lshr exact i32 %and18, 7
  %19 = or i32 %17, %18
  %and42 = lshr i32 %spec.select, 7
  %20 = and i32 %and42, 16
  %21 = or i32 %19, %20
  %22 = xor i32 %21, 32
  %and47 = and i32 %spec.select, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47)
  %tobool48.not = icmp eq i32 %and47, 0
  %and50 = and i32 %21, -41
  %mnt_flags.6 = select i1 %tobool48.not, i32 %22, i32 %and50
  %and52 = shl i32 %spec.select, 6
  %23 = and i32 %and52, 64
  %24 = and i32 %and22, 128
  %25 = or i32 %24, %23
  %26 = or i32 %25, %mnt_flags.6
  %and62 = and i32 %spec.select, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and62)
  %tobool63.not = icmp eq i32 %and62, 0
  %27 = and i32 %spec.select, 18877472
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %27)
  %.not = icmp eq i32 %27, 32
  br i1 %.not, label %if.then66, label %if.end17.if.end71_crit_edge

if.end17.if.end71_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end71

if.then66:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #24
  %and67 = and i32 %26, -57
  %28 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %path, align 4
  %mnt_flags68 = getelementptr inbounds %struct.vfsmount, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %mnt_flags68 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %mnt_flags68, align 4
  %and69 = and i32 %31, 56
  %or70 = or i32 %and69, %and67
  br label %if.end71

if.end71:                                         ; preds = %if.then66, %if.end17.if.end71_crit_edge
  %mnt_flags.9 = phi i32 [ %or70, %if.then66 ], [ %26, %if.end17.if.end71_crit_edge ]
  %and72 = and i32 %spec.select, 42041553
  %and73 = and i32 %spec.select, 4128
  call void @__sanitizer_cov_trace_const_cmp4(i32 4128, i32 %and73)
  %cmp74 = icmp eq i32 %and73, 4128
  br i1 %cmp74, label %if.then75, label %if.end77

if.then75:                                        ; preds = %if.end71
  %32 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %path, align 4
  %mnt_sb.i = getelementptr %struct.vfsmount, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %mnt_sb.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %mnt_sb.i, align 4
  %mnt_ns.i.i = getelementptr i8, ptr %33, i32 100
  %36 = ptrtoint ptr %mnt_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %mnt_ns.i.i, align 4
  %38 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 2
  %40 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %task.i.i, align 8
  %nsproxy.i.i = getelementptr inbounds %struct.task_struct, ptr %41, i32 0, i32 110
  %42 = ptrtoint ptr %nsproxy.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %nsproxy.i.i, align 4
  %mnt_ns1.i.i = getelementptr inbounds %struct.nsproxy, ptr %43, i32 0, i32 3
  %44 = ptrtoint ptr %mnt_ns1.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %mnt_ns1.i.i, align 4
  %cmp.i.not.i = icmp eq ptr %37, %45
  br i1 %cmp.i.not.i, label %if.end.i, label %if.then75.cleanup_crit_edge

if.then75.cleanup_crit_edge:                      ; preds = %if.then75
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end.i:                                         ; preds = %if.then75
  %dentry.i = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %46 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %dentry.i, align 4
  %48 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %33, align 4
  %cmp.not.i = icmp eq ptr %47, %49
  br i1 %cmp.not.i, label %if.end6.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end6.i:                                        ; preds = %if.end.i
  %mnt_flags2.i.i = getelementptr i8, ptr %33, i32 8
  %50 = ptrtoint ptr %mnt_flags2.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %mnt_flags2.i.i, align 4
  %and.i.i157 = and i32 %51, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i157)
  %tobool.not.i.i = icmp ne i32 %and.i.i157, 0
  %and3.i.i = and i32 %mnt_flags.9, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i.i)
  %tobool4.not.i.i = icmp eq i32 %and3.i.i, 0
  %or.cond.i.i = and i1 %tobool4.not.i.i, %tobool.not.i.i
  br i1 %or.cond.i.i, label %if.end6.i.cleanup_crit_edge, label %if.end.i.i

if.end6.i.cleanup_crit_edge:                      ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end.i.i:                                       ; preds = %if.end6.i
  %and5.i.i = and i32 %51, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i.i)
  %tobool6.not.i.i = icmp ne i32 %and5.i.i, 0
  %and8.i.i = and i32 %mnt_flags.9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i.i)
  %tobool9.not.i.i = icmp eq i32 %and8.i.i, 0
  %or.cond42.i.i = and i1 %tobool9.not.i.i, %tobool6.not.i.i
  br i1 %or.cond42.i.i, label %if.end.i.i.cleanup_crit_edge, label %if.end11.i.i

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end11.i.i:                                     ; preds = %if.end.i.i
  %and12.i.i = and i32 %51, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i.i)
  %tobool13.not.i.i = icmp ne i32 %and12.i.i, 0
  %and15.i.i = and i32 %mnt_flags.9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15.i.i)
  %tobool16.not.i.i = icmp eq i32 %and15.i.i, 0
  %or.cond43.i.i = and i1 %tobool16.not.i.i, %tobool13.not.i.i
  br i1 %or.cond43.i.i, label %if.end11.i.i.cleanup_crit_edge, label %if.end18.i.i

if.end11.i.i.cleanup_crit_edge:                   ; preds = %if.end11.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end18.i.i:                                     ; preds = %if.end11.i.i
  %and19.i.i = and i32 %51, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19.i.i)
  %tobool20.not.i.i = icmp ne i32 %and19.i.i, 0
  %and22.i.i = and i32 %mnt_flags.9, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22.i.i)
  %tobool23.not.i.i = icmp eq i32 %and22.i.i, 0
  %or.cond44.i.i = and i1 %tobool23.not.i.i, %tobool20.not.i.i
  br i1 %or.cond44.i.i, label %if.end18.i.i.cleanup_crit_edge, label %if.end25.i.i

if.end18.i.i.cleanup_crit_edge:                   ; preds = %if.end18.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end25.i.i:                                     ; preds = %if.end18.i.i
  %and26.i.i = and i32 %51, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26.i.i)
  %tobool27.not.i.i = icmp eq i32 %and26.i.i, 0
  br i1 %tobool27.not.i.i, label %if.end25.i.i.if.end9.i_crit_edge, label %land.lhs.true28.i.i

if.end25.i.i.if.end9.i_crit_edge:                 ; preds = %if.end25.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end9.i

land.lhs.true28.i.i:                              ; preds = %if.end25.i.i
  %52 = xor i32 %51, %mnt_flags.9
  %53 = and i32 %52, 56
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %cmp.not.i.i = icmp eq i32 %53, 0
  br i1 %cmp.not.i.i, label %land.lhs.true28.i.i.if.end9.i_crit_edge, label %land.lhs.true28.i.i.cleanup_crit_edge

land.lhs.true28.i.i.cleanup_crit_edge:            ; preds = %land.lhs.true28.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

land.lhs.true28.i.i.if.end9.i_crit_edge:          ; preds = %land.lhs.true28.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end9.i

if.end9.i:                                        ; preds = %land.lhs.true28.i.i.if.end9.i_crit_edge, %if.end25.i.i.if.end9.i_crit_edge
  %s_umount.i = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 14
  tail call void @down_read(ptr noundef %s_umount.i) #22
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %54 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i.i = add i32 %54, 1
  store i32 %inc.i.i.i.i.i.i, ptr @mount_lock, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %55 = tail call ptr @llvm.returnaddress(i32 0) #22
  %56 = ptrtoint ptr %55 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %56) #22
  %and.lobit.i.i = lshr exact i32 %and3.i.i, 6
  %57 = ptrtoint ptr %mnt_flags2.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %mnt_flags2.i.i, align 4
  %and.i.i31.i = and i32 %58, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i31.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i31.i, 0
  br i1 %tobool.not.i.i.i, label %lor.rhs.i.i.i, label %if.end9.i.__mnt_is_readonly.exit.i.i_crit_edge

if.end9.i.__mnt_is_readonly.exit.i.i_crit_edge:   ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__mnt_is_readonly.exit.i.i

lor.rhs.i.i.i:                                    ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #24
  %59 = ptrtoint ptr %mnt_sb.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %mnt_sb.i, align 4
  %s_flags.i.i.i.i = getelementptr inbounds %struct.super_block, ptr %60, i32 0, i32 10
  %61 = ptrtoint ptr %s_flags.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %s_flags.i.i.i.i, align 4
  %and.i.i.i.i = and i32 %62, 1
  br label %__mnt_is_readonly.exit.i.i

__mnt_is_readonly.exit.i.i:                       ; preds = %lor.rhs.i.i.i, %if.end9.i.__mnt_is_readonly.exit.i.i_crit_edge
  %63 = phi i32 [ 1, %if.end9.i.__mnt_is_readonly.exit.i.i_crit_edge ], [ %and.i.i.i.i, %lor.rhs.i.i.i ]
  call void @__sanitizer_cov_trace_cmp4(i32 %and.lobit.i.i, i32 %63)
  %cmp.i32.i = icmp eq i32 %and.lobit.i.i, %63
  br i1 %cmp.i32.i, label %__mnt_is_readonly.exit.i.i.if.then12.i_crit_edge, label %if.end.i34.i

__mnt_is_readonly.exit.i.i.if.then12.i_crit_edge: ; preds = %__mnt_is_readonly.exit.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then12.i

if.end.i34.i:                                     ; preds = %__mnt_is_readonly.exit.i.i
  br i1 %tobool4.not.i.i, label %change_mount_ro_state.exit.thread46.i, label %if.then6.i.i

if.then6.i.i:                                     ; preds = %if.end.i34.i
  %or.i.i.i.i = or i32 %58, 512
  %64 = ptrtoint ptr %mnt_flags2.i.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %or.i.i.i.i, ptr %mnt_flags2.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !387
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %65 = load i32, ptr @nr_cpu_ids, align 4
  %call6.i.i.i.i.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__sanitizer_cov_trace_cmp4(i32 %call6.i.i.i.i.i, i32 %65)
  %cmp7.i.i.i.i.i = icmp ult i32 %call6.i.i.i.i.i, %65
  br i1 %cmp7.i.i.i.i.i, label %do.body.lr.ph.i.i.i.i.i, label %if.then6.i.i.if.then.i.i.i_crit_edge

if.then6.i.i.if.then.i.i.i_crit_edge:             ; preds = %if.then6.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i.i.i

do.body.lr.ph.i.i.i.i.i:                          ; preds = %if.then6.i.i
  %mnt_pcp.i.i.i.i.i = getelementptr i8, ptr %33, i32 24
  %66 = ptrtoint ptr %mnt_pcp.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %mnt_pcp.i.i.i.i.i, align 4
  %68 = ptrtoint ptr %67 to i32
  br label %do.body.i.i.i.i.i

do.body.i.i.i.i.i:                                ; preds = %do.body.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge, %do.body.lr.ph.i.i.i.i.i
  %call9.i.i.i.i.i = phi i32 [ %call6.i.i.i.i.i, %do.body.lr.ph.i.i.i.i.i ], [ %call.i.i.i.i.i, %do.body.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge ]
  %count.08.i.i.i.i.i = phi i32 [ 0, %do.body.lr.ph.i.i.i.i.i ], [ %add2.i.i.i.i.i, %do.body.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge ]
  %arrayidx.i.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call9.i.i.i.i.i
  %69 = ptrtoint ptr %arrayidx.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %arrayidx.i.i.i.i.i, align 4
  %add.i.i.i.i.i = add i32 %70, %68
  %71 = inttoptr i32 %add.i.i.i.i.i to ptr
  %mnt_writers.i.i.i.i.i = getelementptr inbounds %struct.mnt_pcp, ptr %71, i32 0, i32 1
  %72 = ptrtoint ptr %mnt_writers.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %mnt_writers.i.i.i.i.i, align 4
  %add2.i.i.i.i.i = add i32 %73, %count.08.i.i.i.i.i
  %call.i.i.i.i.i = tail call i32 @cpumask_next(i32 noundef %call9.i.i.i.i.i, ptr noundef nonnull @__cpu_possible_mask) #25
  %cmp.i.i.i.i.i = icmp ult i32 %call.i.i.i.i.i, %65
  br i1 %cmp.i.i.i.i.i, label %do.body.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge, label %mnt_get_writers.exit.i.i.i.i

do.body.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge:    ; preds = %do.body.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body.i.i.i.i.i

mnt_get_writers.exit.i.i.i.i:                     ; preds = %do.body.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add2.i.i.i.i.i)
  %cmp.not.i.i.i.i = icmp eq i32 %add2.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i, label %mnt_get_writers.exit.i.i.i.i.if.then.i.i.i_crit_edge, label %mnt_get_writers.exit.i.i.i.i.change_mount_ro_state.exit.i_crit_edge

mnt_get_writers.exit.i.i.i.i.change_mount_ro_state.exit.i_crit_edge: ; preds = %mnt_get_writers.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %change_mount_ro_state.exit.i

mnt_get_writers.exit.i.i.i.i.if.then.i.i.i_crit_edge: ; preds = %mnt_get_writers.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %mnt_get_writers.exit.i.i.i.i.if.then.i.i.i_crit_edge, %if.then6.i.i.if.then.i.i.i_crit_edge
  %74 = ptrtoint ptr %mnt_flags2.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %mnt_flags2.i.i, align 4
  %or.i.i.i = or i32 %75, 64
  store i32 %or.i.i.i, ptr %mnt_flags2.i.i, align 4
  br label %change_mount_ro_state.exit.i

change_mount_ro_state.exit.thread46.i:            ; preds = %if.end.i34.i
  call void @__sanitizer_cov_trace_pc() #24
  %and11.i.i = and i32 %58, -65
  %76 = ptrtoint ptr %mnt_flags2.i.i to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %and11.i.i, ptr %mnt_flags2.i.i, align 4
  br label %if.then12.i

change_mount_ro_state.exit.i:                     ; preds = %if.then.i.i.i, %mnt_get_writers.exit.i.i.i.i.change_mount_ro_state.exit.i_crit_edge
  %cmp11.i = phi i1 [ false, %mnt_get_writers.exit.i.i.i.i.change_mount_ro_state.exit.i_crit_edge ], [ true, %if.then.i.i.i ]
  %77 = phi i32 [ -16, %mnt_get_writers.exit.i.i.i.i.change_mount_ro_state.exit.i_crit_edge ], [ 0, %if.then.i.i.i ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !388
  %78 = ptrtoint ptr %mnt_flags2.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %mnt_flags2.i.i, align 4
  %and.i.i15.i.i = and i32 %79, -513
  store i32 %and.i.i15.i.i, ptr %mnt_flags2.i.i, align 4
  br i1 %cmp11.i, label %change_mount_ro_state.exit.i.if.then12.i_crit_edge, label %change_mount_ro_state.exit.i.if.end13.i_crit_edge

change_mount_ro_state.exit.i.if.end13.i_crit_edge: ; preds = %change_mount_ro_state.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end13.i

change_mount_ro_state.exit.i.if.then12.i_crit_edge: ; preds = %change_mount_ro_state.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then12.i

if.then12.i:                                      ; preds = %change_mount_ro_state.exit.i.if.then12.i_crit_edge, %change_mount_ro_state.exit.thread46.i, %__mnt_is_readonly.exit.i.i.if.then12.i_crit_edge
  %80 = ptrtoint ptr %mnt_flags2.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %mnt_flags2.i.i, align 4
  %and.i37.i = and i32 %81, -256
  %or.i.i = or i32 %and.i37.i, %mnt_flags.9
  store i32 %or.i.i, ptr %mnt_flags2.i.i, align 4
  %82 = ptrtoint ptr %mnt_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %mnt_ns.i.i, align 4
  %tobool.not.i.i39.i = icmp eq ptr %83, null
  br i1 %tobool.not.i.i39.i, label %if.then12.i.if.end13.i_crit_edge, label %if.then.i.i40.i

if.then12.i.if.end13.i_crit_edge:                 ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end13.i

if.then.i.i40.i:                                  ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #24
  %84 = load i64, ptr @event, align 8
  %inc.i.i.i = add i64 %84, 1
  store i64 %inc.i.i.i, ptr @event, align 8
  %event.i.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %83, i32 0, i32 8
  %85 = ptrtoint ptr %event.i.i.i to i32
  call void @__asan_store8_noabort(i32 %85)
  store i64 %inc.i.i.i, ptr %event.i.i.i, align 8
  %poll.i.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %83, i32 0, i32 7
  tail call void @__wake_up(ptr noundef %poll.i.i.i, i32 noundef 1, i32 noundef 1, ptr noundef null) #22
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.then.i.i40.i, %if.then12.i.if.end13.i_crit_edge, %change_mount_ro_state.exit.i.if.end13.i_crit_edge
  %retval.0.i3544.i = phi i32 [ %77, %change_mount_ro_state.exit.i.if.end13.i_crit_edge ], [ 0, %if.then12.i.if.end13.i_crit_edge ], [ 0, %if.then.i.i40.i ]
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %56) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %86 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %86, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  tail call void @up_read(ptr noundef %s_umount.i) #22
  tail call fastcc void @mnt_warn_timestamp_expiry(ptr noundef %path, ptr noundef %33) #22
  br label %cleanup

if.end77:                                         ; preds = %if.end71
  br i1 %tobool63.not, label %if.end82, label %if.then80

if.then80:                                        ; preds = %if.end77
  %87 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %path, align 4
  %mnt_sb.i158 = getelementptr inbounds %struct.vfsmount, ptr %88, i32 0, i32 1
  %89 = ptrtoint ptr %mnt_sb.i158 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %mnt_sb.i158, align 4
  %add.ptr.i.i = getelementptr i8, ptr %88, i32 -16
  %mnt_ns.i.i159 = getelementptr i8, ptr %88, i32 100
  %91 = ptrtoint ptr %mnt_ns.i.i159 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %mnt_ns.i.i159, align 4
  %93 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i160 = and i32 %93, -16384
  %94 = inttoptr i32 %and.i.i.i160 to ptr
  %task.i.i161 = getelementptr inbounds %struct.thread_info, ptr %94, i32 0, i32 2
  %95 = ptrtoint ptr %task.i.i161 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %task.i.i161, align 8
  %nsproxy.i.i162 = getelementptr inbounds %struct.task_struct, ptr %96, i32 0, i32 110
  %97 = ptrtoint ptr %nsproxy.i.i162 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %nsproxy.i.i162, align 4
  %mnt_ns1.i.i163 = getelementptr inbounds %struct.nsproxy, ptr %98, i32 0, i32 3
  %99 = ptrtoint ptr %mnt_ns1.i.i163 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %mnt_ns1.i.i163, align 4
  %cmp.i.not.i164 = icmp eq ptr %92, %100
  br i1 %cmp.i.not.i164, label %if.end.i167, label %if.then80.cleanup_crit_edge

if.then80.cleanup_crit_edge:                      ; preds = %if.then80
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end.i167:                                      ; preds = %if.then80
  %dentry.i165 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %101 = ptrtoint ptr %dentry.i165 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %dentry.i165, align 4
  %103 = ptrtoint ptr %88 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %88, align 4
  %cmp.not.i166 = icmp eq ptr %102, %104
  br i1 %cmp.not.i166, label %if.end6.i174, label %if.end.i167.cleanup_crit_edge

if.end.i167.cleanup_crit_edge:                    ; preds = %if.end.i167
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end6.i174:                                     ; preds = %if.end.i167
  %mnt_flags2.i.i168 = getelementptr i8, ptr %88, i32 8
  %105 = ptrtoint ptr %mnt_flags2.i.i168 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %mnt_flags2.i.i168, align 4
  %and.i.i169 = and i32 %106, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i169)
  %tobool.not.i.i170 = icmp ne i32 %and.i.i169, 0
  %and3.i.i171 = and i32 %mnt_flags.9, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i.i171)
  %tobool4.not.i.i172 = icmp eq i32 %and3.i.i171, 0
  %or.cond.i.i173 = and i1 %tobool4.not.i.i172, %tobool.not.i.i170
  br i1 %or.cond.i.i173, label %if.end6.i174.cleanup_crit_edge, label %if.end.i.i180

if.end6.i174.cleanup_crit_edge:                   ; preds = %if.end6.i174
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end.i.i180:                                    ; preds = %if.end6.i174
  %and5.i.i175 = and i32 %106, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i.i175)
  %tobool6.not.i.i176 = icmp ne i32 %and5.i.i175, 0
  %and8.i.i177 = and i32 %mnt_flags.9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i.i177)
  %tobool9.not.i.i178 = icmp eq i32 %and8.i.i177, 0
  %or.cond42.i.i179 = and i1 %tobool9.not.i.i178, %tobool6.not.i.i176
  br i1 %or.cond42.i.i179, label %if.end.i.i180.cleanup_crit_edge, label %if.end11.i.i186

if.end.i.i180.cleanup_crit_edge:                  ; preds = %if.end.i.i180
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end11.i.i186:                                  ; preds = %if.end.i.i180
  %and12.i.i181 = and i32 %106, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i.i181)
  %tobool13.not.i.i182 = icmp ne i32 %and12.i.i181, 0
  %and15.i.i183 = and i32 %mnt_flags.9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15.i.i183)
  %tobool16.not.i.i184 = icmp eq i32 %and15.i.i183, 0
  %or.cond43.i.i185 = and i1 %tobool16.not.i.i184, %tobool13.not.i.i182
  br i1 %or.cond43.i.i185, label %if.end11.i.i186.cleanup_crit_edge, label %if.end18.i.i192

if.end11.i.i186.cleanup_crit_edge:                ; preds = %if.end11.i.i186
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end18.i.i192:                                  ; preds = %if.end11.i.i186
  %and19.i.i187 = and i32 %106, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19.i.i187)
  %tobool20.not.i.i188 = icmp ne i32 %and19.i.i187, 0
  %and22.i.i189 = and i32 %mnt_flags.9, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22.i.i189)
  %tobool23.not.i.i190 = icmp eq i32 %and22.i.i189, 0
  %or.cond44.i.i191 = and i1 %tobool23.not.i.i190, %tobool20.not.i.i188
  br i1 %or.cond44.i.i191, label %if.end18.i.i192.cleanup_crit_edge, label %if.end25.i.i195

if.end18.i.i192.cleanup_crit_edge:                ; preds = %if.end18.i.i192
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end25.i.i195:                                  ; preds = %if.end18.i.i192
  %and26.i.i193 = and i32 %106, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26.i.i193)
  %tobool27.not.i.i194 = icmp eq i32 %and26.i.i193, 0
  br i1 %tobool27.not.i.i194, label %if.end25.i.i195.if.end9.i198_crit_edge, label %land.lhs.true28.i.i197

if.end25.i.i195.if.end9.i198_crit_edge:           ; preds = %if.end25.i.i195
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end9.i198

land.lhs.true28.i.i197:                           ; preds = %if.end25.i.i195
  %107 = xor i32 %106, %mnt_flags.9
  %108 = and i32 %107, 56
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %108)
  %cmp.not.i.i196 = icmp eq i32 %108, 0
  br i1 %cmp.not.i.i196, label %land.lhs.true28.i.i197.if.end9.i198_crit_edge, label %land.lhs.true28.i.i197.cleanup_crit_edge

land.lhs.true28.i.i197.cleanup_crit_edge:         ; preds = %land.lhs.true28.i.i197
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

land.lhs.true28.i.i197.if.end9.i198_crit_edge:    ; preds = %land.lhs.true28.i.i197
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end9.i198

if.end9.i198:                                     ; preds = %land.lhs.true28.i.i197.if.end9.i198_crit_edge, %if.end25.i.i195.if.end9.i198_crit_edge
  %call11.i = tail call ptr @fs_context_for_reconfigure(ptr noundef %102, i32 noundef %and72, i32 noundef 41943121) #22
  %cmp.i1.i = icmp ugt ptr %call11.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i1.i, label %if.then13.i, label %if.end15.i

if.then13.i:                                      ; preds = %if.end9.i198
  call void @__sanitizer_cov_trace_pc() #24
  %109 = ptrtoint ptr %call11.i to i32
  br label %cleanup

if.end15.i:                                       ; preds = %if.end9.i198
  %oldapi.i = getelementptr inbounds %struct.fs_context, ptr %call11.i, i32 0, i32 17
  %110 = ptrtoint ptr %oldapi.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %bf.load.i = load i32, ptr %oldapi.i, align 4
  %bf.set.i = or i32 %bf.load.i, 8192
  store i32 %bf.set.i, ptr %oldapi.i, align 4
  %call16.i = tail call i32 @parse_monolithic_mount_data(ptr noundef %call11.i, ptr noundef %data_page) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.i)
  %tobool17.not.i = icmp eq i32 %call16.i, 0
  br i1 %tobool17.not.i, label %if.then18.i, label %if.end15.i.if.end27.i_crit_edge

if.end15.i.if.end27.i_crit_edge:                  ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end27.i

if.then18.i:                                      ; preds = %if.end15.i
  %s_umount.i199 = getelementptr inbounds %struct.super_block, ptr %90, i32 0, i32 14
  tail call void @down_write(ptr noundef %s_umount.i199) #22
  %s_user_ns.i = getelementptr inbounds %struct.super_block, ptr %90, i32 0, i32 53
  %111 = ptrtoint ptr %s_user_ns.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %s_user_ns.i, align 8
  %call19.i = tail call zeroext i1 @ns_capable(ptr noundef %112, i32 noundef 21) #22
  br i1 %call19.i, label %if.then20.i, label %if.then18.i.if.end25.i_crit_edge

if.then18.i.if.end25.i_crit_edge:                 ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end25.i

if.then20.i:                                      ; preds = %if.then18.i
  %call21.i = tail call i32 @reconfigure_super(ptr noundef %call11.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21.i)
  %tobool22.not.i = icmp eq i32 %call21.i, 0
  br i1 %tobool22.not.i, label %if.then23.i, label %if.then20.i.if.end25.i_crit_edge

if.then20.i.if.end25.i_crit_edge:                 ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end25.i

if.then23.i:                                      ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @lock_mount_hash() #22
  tail call fastcc void @set_mount_attributes(ptr noundef %add.ptr.i.i, i32 noundef %mnt_flags.9) #22
  tail call fastcc void @unlock_mount_hash() #22
  br label %if.end25.i

if.end25.i:                                       ; preds = %if.then23.i, %if.then20.i.if.end25.i_crit_edge, %if.then18.i.if.end25.i_crit_edge
  %err.0.i = phi i32 [ %call21.i, %if.then20.i.if.end25.i_crit_edge ], [ 0, %if.then23.i ], [ -1, %if.then18.i.if.end25.i_crit_edge ]
  tail call void @up_write(ptr noundef %s_umount.i199) #22
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.end25.i, %if.end15.i.if.end27.i_crit_edge
  %err.1.i = phi i32 [ %call16.i, %if.end15.i.if.end27.i_crit_edge ], [ %err.0.i, %if.end25.i ]
  tail call fastcc void @mnt_warn_timestamp_expiry(ptr noundef %path, ptr noundef %88) #22
  tail call void @put_fs_context(ptr noundef %call11.i) #22
  br label %cleanup

if.end82:                                         ; preds = %if.end77
  %and83 = and i32 %spec.select, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and83)
  %tobool84.not = icmp eq i32 %and83, 0
  br i1 %tobool84.not, label %if.end88, label %if.then85

if.then85:                                        ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #24
  %and86 = and i32 %spec.select, 16384
  %call87 = tail call fastcc i32 @do_loopback(ptr noundef %path, ptr noundef %dev_name, i32 noundef %and86)
  br label %cleanup

if.end88:                                         ; preds = %if.end82
  %and89 = and i32 %spec.select, 1966080
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and89)
  %tobool90.not = icmp eq i32 %and89, 0
  br i1 %tobool90.not, label %if.end93, label %if.then91

if.then91:                                        ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #24
  %call92 = tail call fastcc i32 @do_change_type(ptr noundef %path, i32 noundef %spec.select)
  br label %cleanup

if.end93:                                         ; preds = %if.end88
  %and94 = and i32 %spec.select, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and94)
  %tobool95.not = icmp eq i32 %and94, 0
  br i1 %tobool95.not, label %if.end98, label %if.then96

if.then96:                                        ; preds = %if.end93
  call void @__sanitizer_cov_trace_pc() #24
  %call97 = tail call fastcc i32 @do_move_mount_old(ptr noundef %path, ptr noundef %dev_name)
  br label %cleanup

if.end98:                                         ; preds = %if.end93
  call void @__sanitizer_cov_trace_pc() #24
  %call99 = tail call fastcc i32 @do_new_mount(ptr noundef %path, ptr noundef %type_page, i32 noundef %and72, i32 noundef %mnt_flags.9, ptr noundef %dev_name, ptr noundef %data_page)
  br label %cleanup

cleanup:                                          ; preds = %if.end98, %if.then96, %if.then91, %if.then85, %if.end27.i, %if.then13.i, %land.lhs.true28.i.i197.cleanup_crit_edge, %if.end18.i.i192.cleanup_crit_edge, %if.end11.i.i186.cleanup_crit_edge, %if.end.i.i180.cleanup_crit_edge, %if.end6.i174.cleanup_crit_edge, %if.end.i167.cleanup_crit_edge, %if.then80.cleanup_crit_edge, %if.end13.i, %land.lhs.true28.i.i.cleanup_crit_edge, %if.end18.i.i.cleanup_crit_edge, %if.end11.i.i.cleanup_crit_edge, %if.end.i.i.cleanup_crit_edge, %if.end6.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %if.then75.cleanup_crit_edge, %if.end10.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %if.end3.cleanup_crit_edge
  %retval.0 = phi i32 [ %call87, %if.then85 ], [ %call92, %if.then91 ], [ %call97, %if.then96 ], [ %call99, %if.end98 ], [ -22, %if.end3.cleanup_crit_edge ], [ %call, %if.end7.cleanup_crit_edge ], [ -1, %if.end10.cleanup_crit_edge ], [ %retval.0.i3544.i, %if.end13.i ], [ -22, %if.then75.cleanup_crit_edge ], [ -22, %if.end.i.cleanup_crit_edge ], [ -1, %if.end6.i.cleanup_crit_edge ], [ -1, %if.end.i.i.cleanup_crit_edge ], [ -1, %if.end11.i.i.cleanup_crit_edge ], [ -1, %if.end18.i.i.cleanup_crit_edge ], [ -1, %land.lhs.true28.i.i.cleanup_crit_edge ], [ %109, %if.then13.i ], [ %err.1.i, %if.end27.i ], [ -22, %if.then80.cleanup_crit_edge ], [ -22, %if.end.i167.cleanup_crit_edge ], [ -1, %if.end6.i174.cleanup_crit_edge ], [ -1, %if.end.i.i180.cleanup_crit_edge ], [ -1, %if.end11.i.i186.cleanup_crit_edge ], [ -1, %if.end18.i.i192.cleanup_crit_edge ], [ -1, %land.lhs.true28.i.i197.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_sb_mount(ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_loopback(ptr noundef %path, ptr noundef %old_name, i32 noundef %recurse) unnamed_addr #1 align 64 {
entry:
  %old_path = alloca %struct.path, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %old_path) #22
  %0 = ptrtoint ptr %old_path to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %old_path, align 4, !annotation !380
  %1 = getelementptr inbounds %struct.path, ptr %old_path, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !380
  %tobool.not = icmp eq ptr %old_name, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %3 = ptrtoint ptr %old_name to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %old_name, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool1.not = icmp eq i8 %4, 0
  br i1 %tobool1.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @kern_path(ptr noundef nonnull %old_name, i32 noundef 5, ptr noundef nonnull %old_path) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool2.not = icmp eq i32 %call, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %1, align 4
  %d_op.i.i = getelementptr inbounds %struct.dentry, ptr %6, i32 0, i32 8
  %7 = ptrtoint ptr %d_op.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %d_op.i.i, align 8
  %cmp.i.i = icmp eq ptr %8, @ns_dentry_operations
  br i1 %cmp.i.i, label %is_mnt_ns_file.exit.i, label %if.end4.if.end7_crit_edge

if.end4.if.end7_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

is_mnt_ns_file.exit.i:                            ; preds = %if.end4
  %d_fsdata.i.i = getelementptr inbounds %struct.dentry, ptr %6, i32 0, i32 11
  %9 = ptrtoint ptr %d_fsdata.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %d_fsdata.i.i, align 4
  %cmp1.i.i = icmp eq ptr %10, @mntns_operations
  br i1 %cmp1.i.i, label %mnt_ns_loop.exit, label %is_mnt_ns_file.exit.i.if.end7_crit_edge

is_mnt_ns_file.exit.i.if.end7_crit_edge:          ; preds = %is_mnt_ns_file.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

mnt_ns_loop.exit:                                 ; preds = %is_mnt_ns_file.exit.i
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %6, i32 0, i32 5
  %11 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %d_inode.i, align 8
  %i_private.i = getelementptr inbounds %struct.inode, ptr %12, i32 0, i32 54
  %13 = ptrtoint ptr %i_private.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %i_private.i, align 4
  %15 = call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %task.i, align 8
  %nsproxy.i = getelementptr inbounds %struct.task_struct, ptr %18, i32 0, i32 110
  %19 = ptrtoint ptr %nsproxy.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %nsproxy.i, align 4
  %mnt_ns3.i = getelementptr inbounds %struct.nsproxy, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %mnt_ns3.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %mnt_ns3.i, align 4
  %seq.i = getelementptr inbounds %struct.mnt_namespace, ptr %22, i32 0, i32 6
  %23 = ptrtoint ptr %seq.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %seq.i, align 8
  %seq4.i = getelementptr inbounds %struct.mnt_namespace, ptr %14, i32 0, i32 6
  %25 = ptrtoint ptr %seq4.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %seq4.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %24, i64 %26)
  %cmp.i.not = icmp ult i64 %24, %26
  br i1 %cmp.i.not, label %mnt_ns_loop.exit.if.end7_crit_edge, label %mnt_ns_loop.exit.out_crit_edge

mnt_ns_loop.exit.out_crit_edge:                   ; preds = %mnt_ns_loop.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

mnt_ns_loop.exit.if.end7_crit_edge:               ; preds = %mnt_ns_loop.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

if.end7:                                          ; preds = %mnt_ns_loop.exit.if.end7_crit_edge, %is_mnt_ns_file.exit.i.if.end7_crit_edge, %if.end4.if.end7_crit_edge
  %call8 = call fastcc ptr @lock_mount(ptr noundef %path)
  %cmp.i45 = icmp ugt ptr %call8, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i45, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  %27 = ptrtoint ptr %call8 to i32
  br label %out

if.end12:                                         ; preds = %if.end7
  %28 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %path, align 4
  %add.ptr.i = getelementptr i8, ptr %29, i32 -16
  %mnt_ns.i = getelementptr i8, ptr %29, i32 100
  %30 = ptrtoint ptr %mnt_ns.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %mnt_ns.i, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i46 = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i46 to ptr
  %task.i47 = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 2
  %34 = ptrtoint ptr %task.i47 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %task.i47, align 8
  %nsproxy.i48 = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 110
  %36 = ptrtoint ptr %nsproxy.i48 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %nsproxy.i48, align 4
  %mnt_ns1.i = getelementptr inbounds %struct.nsproxy, ptr %37, i32 0, i32 3
  %38 = ptrtoint ptr %mnt_ns1.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %mnt_ns1.i, align 4
  %cmp.i49.not = icmp eq ptr %31, %39
  br i1 %cmp.i49.not, label %if.end18, label %if.end12.out2_crit_edge

if.end12.out2_crit_edge:                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #24
  br label %out2

if.end18:                                         ; preds = %if.end12
  %call19 = call fastcc ptr @__do_loopback(ptr noundef nonnull %old_path, i32 noundef %recurse)
  %cmp.i50 = icmp ugt ptr %call19, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i50, label %if.then21, label %if.end23

if.then21:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #24
  %40 = ptrtoint ptr %call19 to i32
  br label %out2

if.end23:                                         ; preds = %if.end18
  %call24 = call fastcc i32 @graft_tree(ptr noundef %call19, ptr noundef %add.ptr.i, ptr noundef %call8)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.end23.out2_crit_edge, label %if.then26

if.end23.out2_crit_edge:                          ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #24
  br label %out2

if.then26:                                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #24
  call fastcc void @lock_mount_hash()
  call fastcc void @umount_tree(ptr noundef %call19, i32 noundef 1)
  call fastcc void @unlock_mount_hash()
  br label %out2

out2:                                             ; preds = %if.then26, %if.end23.out2_crit_edge, %if.then21, %if.end12.out2_crit_edge
  %err.0 = phi i32 [ %40, %if.then21 ], [ %call24, %if.then26 ], [ 0, %if.end23.out2_crit_edge ], [ -22, %if.end12.out2_crit_edge ]
  call fastcc void @unlock_mount(ptr noundef %call8)
  br label %out

out:                                              ; preds = %out2, %if.then10, %mnt_ns_loop.exit.out_crit_edge
  %err.1 = phi i32 [ -22, %mnt_ns_loop.exit.out_crit_edge ], [ %27, %if.then10 ], [ %err.0, %out2 ]
  call void @path_put(ptr noundef nonnull %old_path) #22
  br label %cleanup

cleanup:                                          ; preds = %out, %if.end.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.1, %out ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ %call, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %old_path) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_change_type(ptr nocapture noundef readonly %path, i32 noundef %ms_flags) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %path, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 -16
  %and = and i32 %ms_flags, 16384
  %dentry = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %2 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dentry, align 4
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %1, align 4
  %cmp.not = icmp eq ptr %3, %5
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %and.i = and i32 %ms_flags, -49153
  %and1.i = and i32 %ms_flags, -2015233
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not.i = icmp ne i32 %and1.i, 0
  %6 = tail call i32 @llvm.ctpop.i32(i32 %and.i) #22, !range !389
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %7 = icmp ne i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not34 = icmp eq i32 %and.i, 0
  %not. = or i1 %tobool.not.i, %7
  %tobool.not = or i1 %tobool.not34, %not.
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end5:                                          ; preds = %if.end
  tail call void @down_write(ptr noundef nonnull @namespace_sem) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 1048576, i32 %and.i)
  %cmp6 = icmp eq i32 %and.i, 1048576
  br i1 %cmp6, label %if.then7, label %if.end5.if.end13_crit_edge

if.end5.if.end13_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end13

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool8 = icmp ne i32 %and, 0
  %call9 = tail call fastcc i32 @invent_group_ids(ptr noundef %add.ptr.i, i1 noundef zeroext %tobool8)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.then7.if.end13_crit_edge, label %if.then7.out_unlock_crit_edge

if.then7.out_unlock_crit_edge:                    ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_unlock

if.then7.if.end13_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end13

if.end13:                                         ; preds = %if.then7.if.end13_crit_edge, %if.end5.if.end13_crit_edge
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %8 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %8, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %9 = tail call ptr @llvm.returnaddress(i32 0) #22
  %10 = ptrtoint ptr %9 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %10) #22
  %tobool14.not35 = icmp eq ptr %add.ptr.i, null
  br i1 %tobool14.not35, label %if.end13.for.end_crit_edge, label %for.body.lr.ph

if.end13.for.end_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool15.not = icmp eq i32 %and, 0
  br label %for.body

for.body:                                         ; preds = %cond.end.for.body_crit_edge, %for.body.lr.ph
  %m.036 = phi ptr [ %add.ptr.i, %for.body.lr.ph ], [ %add.ptr.i32, %cond.end.for.body_crit_edge ]
  tail call void @change_mnt_propagation(ptr noundef nonnull %m.036, i32 noundef %and.i) #22
  br i1 %tobool15.not, label %for.body.for.end_crit_edge, label %cond.true

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

cond.true:                                        ; preds = %for.body
  %mnt_mounts.i = getelementptr inbounds %struct.mount, ptr %m.036, i32 0, i32 6
  %11 = ptrtoint ptr %mnt_mounts.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %mnt_mounts.i, align 4
  %cmp.i = icmp eq ptr %12, %mnt_mounts.i
  br i1 %cmp.i, label %cond.true.while.cond.i_crit_edge, label %cond.true.cond.end_crit_edge

cond.true.cond.end_crit_edge:                     ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end

cond.true.while.cond.i_crit_edge:                 ; preds = %cond.true
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end.i.while.cond.i_crit_edge, %cond.true.while.cond.i_crit_edge
  %p.addr.0.i = phi ptr [ %16, %if.end.i.while.cond.i_crit_edge ], [ %m.036, %cond.true.while.cond.i_crit_edge ]
  %cmp3.i = icmp eq ptr %p.addr.0.i, %add.ptr.i
  br i1 %cmp3.i, label %while.cond.i.for.end_crit_edge, label %if.end.i

while.cond.i.for.end_crit_edge:                   ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

if.end.i:                                         ; preds = %while.cond.i
  %mnt_child.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 7
  %13 = ptrtoint ptr %mnt_child.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %mnt_child.i, align 4
  %mnt_parent.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 1
  %15 = ptrtoint ptr %mnt_parent.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mnt_parent.i, align 4
  %mnt_mounts6.i = getelementptr inbounds %struct.mount, ptr %16, i32 0, i32 6
  %cmp7.not.i = icmp eq ptr %14, %mnt_mounts6.i
  br i1 %cmp7.not.i, label %if.end.i.while.cond.i_crit_edge, label %if.end.i.cond.end_crit_edge

if.end.i.cond.end_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end

if.end.i.while.cond.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i

cond.end:                                         ; preds = %if.end.i.cond.end_crit_edge, %cond.true.cond.end_crit_edge
  %next.0.i = phi ptr [ %12, %cond.true.cond.end_crit_edge ], [ %14, %if.end.i.cond.end_crit_edge ]
  %add.ptr.i32 = getelementptr i8, ptr %next.0.i, i32 -52
  %tobool14.not = icmp eq ptr %add.ptr.i32, null
  br i1 %tobool14.not, label %cond.end.for.end_crit_edge, label %cond.end.for.body_crit_edge

cond.end.for.body_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

cond.end.for.end_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %cond.end.for.end_crit_edge, %while.cond.i.for.end_crit_edge, %for.body.for.end_crit_edge, %if.end13.for.end_crit_edge
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %10) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %17 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i = add i32 %17, 1
  store i32 %inc.i.i.i.i, ptr @mount_lock, align 128
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  br label %out_unlock

out_unlock:                                       ; preds = %for.end, %if.then7.out_unlock_crit_edge
  %err.1 = phi i32 [ %call9, %if.then7.out_unlock_crit_edge ], [ 0, %for.end ]
  tail call fastcc void @namespace_unlock()
  br label %cleanup

cleanup:                                          ; preds = %out_unlock, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.1, %out_unlock ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_move_mount_old(ptr noundef %path, ptr noundef %old_name) unnamed_addr #1 align 64 {
entry:
  %old_path = alloca %struct.path, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %old_path) #22
  %0 = ptrtoint ptr %old_path to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %old_path, align 4, !annotation !380
  %1 = getelementptr inbounds %struct.path, ptr %old_path, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !380
  %tobool.not = icmp eq ptr %old_name, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %3 = ptrtoint ptr %old_name to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %old_name, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool1.not = icmp eq i8 %4, 0
  br i1 %tobool1.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %call = call i32 @kern_path(ptr noundef nonnull %old_name, i32 noundef 1, ptr noundef nonnull %old_path) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool2.not = icmp eq i32 %call, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %call5 = call fastcc i32 @do_move_mount(ptr noundef nonnull %old_path, ptr noundef %path)
  call void @path_put(ptr noundef nonnull %old_path) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.end.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end4 ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ %call, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %old_path) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_new_mount(ptr noundef %path, ptr noundef %fstype, i32 noundef %sb_flags, i32 noundef %mnt_flags, ptr noundef %name, ptr noundef %data) unnamed_addr #1 align 64 {
entry:
  %mnt_flags.addr.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %fstype, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call ptr @get_fs_type(ptr noundef nonnull %fstype) #22
  %tobool1.not = icmp eq ptr %call, null
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %fs_flags = getelementptr inbounds %struct.file_system_type, ptr %call, i32 0, i32 1
  %0 = ptrtoint ptr %fs_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %fs_flags, align 4
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %if.end3.if.end13_crit_edge, label %if.then5

if.end3.if.end13_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end13

if.then5:                                         ; preds = %if.end3
  %call6 = tail call ptr @strchr(ptr noundef nonnull %fstype, i32 noundef 46)
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.then5.if.end13_crit_edge, label %if.then8

if.then5.if.end13_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end13

if.then8:                                         ; preds = %if.then5
  %incdec.ptr = getelementptr i8, ptr %call6, i32 1
  %2 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %incdec.ptr, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool9.not = icmp eq i8 %3, 0
  br i1 %tobool9.not, label %if.then10, label %if.then8.if.end13_crit_edge

if.then8.if.end13_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end13

if.then10:                                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @put_filesystem(ptr noundef nonnull %call) #22
  br label %cleanup

if.end13:                                         ; preds = %if.then8.if.end13_crit_edge, %if.then5.if.end13_crit_edge, %if.end3.if.end13_crit_edge
  %subtype.0 = phi ptr [ %incdec.ptr, %if.then8.if.end13_crit_edge ], [ null, %if.then5.if.end13_crit_edge ], [ null, %if.end3.if.end13_crit_edge ]
  %call14 = tail call ptr @fs_context_for_mount(ptr noundef nonnull %call, i32 noundef %sb_flags) #22
  tail call void @put_filesystem(ptr noundef nonnull %call) #22
  %cmp.i = icmp ugt ptr %call14, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #24
  %4 = ptrtoint ptr %call14 to i32
  br label %cleanup

if.end18:                                         ; preds = %if.end13
  %tobool19.not = icmp eq ptr %subtype.0, null
  br i1 %tobool19.not, label %if.end18.land.lhs.true_crit_edge, label %if.end23

if.end18.land.lhs.true_crit_edge:                 ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.lhs.true

if.end23:                                         ; preds = %if.end18
  %call21 = tail call i32 @strlen(ptr noundef nonnull %subtype.0) #27
  %call22 = tail call i32 @vfs_parse_fs_string(ptr noundef %call14, ptr noundef nonnull @.str.67, ptr noundef nonnull %subtype.0, i32 noundef %call21) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool24.not = icmp eq i32 %call22, 0
  br i1 %tobool24.not, label %if.end23.land.lhs.true_crit_edge, label %if.end23.if.end46_crit_edge

if.end23.if.end46_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end46

if.end23.land.lhs.true_crit_edge:                 ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end23.land.lhs.true_crit_edge, %if.end18.land.lhs.true_crit_edge
  %tobool25.not = icmp eq ptr %name, null
  br i1 %tobool25.not, label %land.lhs.true.if.end33_crit_edge, label %if.end29

land.lhs.true.if.end33_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end33

if.end29:                                         ; preds = %land.lhs.true
  %call27 = tail call i32 @strlen(ptr noundef nonnull %name) #27
  %call28 = tail call i32 @vfs_parse_fs_string(ptr noundef %call14, ptr noundef nonnull @.str.5, ptr noundef nonnull %name, i32 noundef %call27) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %tobool30.not = icmp eq i32 %call28, 0
  br i1 %tobool30.not, label %if.end29.if.end33_crit_edge, label %if.end29.if.end46_crit_edge

if.end29.if.end46_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end46

if.end29.if.end33_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end33

if.end33:                                         ; preds = %if.end29.if.end33_crit_edge, %land.lhs.true.if.end33_crit_edge
  %call32 = tail call i32 @parse_monolithic_mount_data(ptr noundef %call14, ptr noundef %data) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32)
  %tobool34.not = icmp eq i32 %call32, 0
  br i1 %tobool34.not, label %land.lhs.true35, label %if.end33.if.end46_crit_edge

if.end33.if.end46_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end46

land.lhs.true35:                                  ; preds = %if.end33
  %call36 = tail call zeroext i1 @mount_capable(ptr noundef %call14) #22
  br i1 %call36, label %if.end42, label %land.lhs.true35.if.end46_crit_edge

land.lhs.true35.if.end46_crit_edge:               ; preds = %land.lhs.true35
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end46

if.end42:                                         ; preds = %land.lhs.true35
  %call41 = tail call i32 @vfs_get_tree(ptr noundef %call14) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool43.not = icmp eq i32 %call41, 0
  br i1 %tobool43.not, label %if.then44, label %if.end42.if.end46_crit_edge

if.end42.if.end46_crit_edge:                      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end46

if.then44:                                        ; preds = %if.end42
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %mnt_flags.addr.i)
  %5 = ptrtoint ptr %mnt_flags.addr.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %mnt_flags, ptr %mnt_flags.addr.i, align 4
  %root.i = getelementptr inbounds %struct.fs_context, ptr %call14, i32 0, i32 5
  %6 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %root.i, align 4
  %d_sb.i = getelementptr inbounds %struct.dentry, ptr %7, i32 0, i32 9
  %8 = ptrtoint ptr %d_sb.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %d_sb.i, align 4
  %call.i = tail call i32 @security_sb_kern_mount(ptr noundef %9) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.then44.if.then5.i_crit_edge

if.then44.if.then5.i_crit_edge:                   ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then5.i

land.lhs.true.i:                                  ; preds = %if.then44
  %call1.i = call fastcc zeroext i1 @mount_too_revealing(ptr noundef %9, ptr noundef nonnull %mnt_flags.addr.i) #22
  br i1 %call1.i, label %land.lhs.true.i.if.then5.i_crit_edge, label %if.end6.i

land.lhs.true.i.if.then5.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then5.i

if.then5.i:                                       ; preds = %land.lhs.true.i.if.then5.i_crit_edge, %if.then44.if.then5.i_crit_edge
  %error.0.ph.i = phi i32 [ %call.i, %if.then44.if.then5.i_crit_edge ], [ -1, %land.lhs.true.i.if.then5.i_crit_edge ]
  tail call void @fc_drop_locked(ptr noundef %call14) #22
  br label %do_new_mount_fc.exit

if.end6.i:                                        ; preds = %land.lhs.true.i
  %s_umount.i = getelementptr inbounds %struct.super_block, ptr %9, i32 0, i32 14
  tail call void @up_write(ptr noundef %s_umount.i) #22
  %call7.i = tail call ptr @vfs_create_mount(ptr noundef %call14) #22
  %cmp.i.i = icmp ugt ptr %call7.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then9.i, label %if.end11.i

if.then9.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #24
  %10 = ptrtoint ptr %call7.i to i32
  br label %do_new_mount_fc.exit

if.end11.i:                                       ; preds = %if.end6.i
  tail call fastcc void @mnt_warn_timestamp_expiry(ptr noundef %path, ptr noundef %call7.i) #22
  %call12.i = tail call fastcc ptr @lock_mount(ptr noundef %path) #22
  %cmp.i42.i = icmp ugt ptr %call12.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i42.i, label %if.then14.i, label %if.end16.i

if.then14.i:                                      ; preds = %if.end11.i
  %tobool.not.i.i = icmp eq ptr %call7.i, null
  br i1 %tobool.not.i.i, label %if.then14.i.mntput.exit.i_crit_edge, label %if.then.i.i

if.then14.i.mntput.exit.i_crit_edge:              ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mntput.exit.i

if.then.i.i:                                      ; preds = %if.then14.i
  %add.ptr.i.i.i = getelementptr i8, ptr %call7.i, i32 -16
  %mnt_expiry_mark.i.i = getelementptr i8, ptr %call7.i, i32 140
  %11 = ptrtoint ptr %mnt_expiry_mark.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %mnt_expiry_mark.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool1.not.i.i = icmp eq i32 %12, 0
  br i1 %tobool1.not.i.i, label %if.then.i.i.if.end.i.i_crit_edge, label %if.then4.i.i, !prof !352

if.then.i.i.if.end.i.i_crit_edge:                 ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i.i

if.then4.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %13 = ptrtoint ptr %mnt_expiry_mark.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %mnt_expiry_mark.i.i, align 4
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then4.i.i, %if.then.i.i.if.end.i.i_crit_edge
  tail call fastcc void @mntput_no_expire(ptr noundef %add.ptr.i.i.i) #22
  br label %mntput.exit.i

mntput.exit.i:                                    ; preds = %if.end.i.i, %if.then14.i.mntput.exit.i_crit_edge
  %14 = ptrtoint ptr %call12.i to i32
  br label %do_new_mount_fc.exit

if.end16.i:                                       ; preds = %if.end11.i
  %add.ptr.i.i = getelementptr i8, ptr %call7.i, i32 -16
  %15 = ptrtoint ptr %mnt_flags.addr.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %mnt_flags.addr.i, align 4
  %17 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %path, align 4
  %add.ptr.i.i43.i = getelementptr i8, ptr %18, i32 -16
  %and.i.i = and i32 %16, -385896961
  %mnt_ns.i.i.i = getelementptr i8, ptr %18, i32 100
  %19 = ptrtoint ptr %mnt_ns.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %mnt_ns.i.i.i, align 4
  %21 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i.i.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %23 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %task.i.i.i, align 8
  %nsproxy.i.i.i = getelementptr inbounds %struct.task_struct, ptr %24, i32 0, i32 110
  %25 = ptrtoint ptr %nsproxy.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %nsproxy.i.i.i, align 4
  %mnt_ns1.i.i.i = getelementptr inbounds %struct.nsproxy, ptr %26, i32 0, i32 3
  %27 = ptrtoint ptr %mnt_ns1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %mnt_ns1.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %20, %28
  br i1 %cmp.i.not.i.i, label %if.end16.i.if.end11.i.i_crit_edge, label %if.then.i44.i, !prof !352

if.end16.i.if.end11.i.i_crit_edge:                ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end11.i.i

if.then.i44.i:                                    ; preds = %if.end16.i
  %and5.i.i = and i32 %16, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i.i)
  %tobool6.not.i.i = icmp eq i32 %and5.i.i, 0
  %tobool8.not.i.i = icmp eq ptr %20, null
  %or.cond.i.i = select i1 %tobool6.not.i.i, i1 true, i1 %tobool8.not.i.i
  br i1 %or.cond.i.i, label %if.then.i44.i.do_add_mount.exit.thread.i_crit_edge, label %if.then.i44.i.if.end11.i.i_crit_edge

if.then.i44.i.if.end11.i.i_crit_edge:             ; preds = %if.then.i44.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end11.i.i

if.then.i44.i.do_add_mount.exit.thread.i_crit_edge: ; preds = %if.then.i44.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_add_mount.exit.thread.i

if.end11.i.i:                                     ; preds = %if.then.i44.i.if.end11.i.i_crit_edge, %if.end16.i.if.end11.i.i_crit_edge
  %mnt_sb.i.i = getelementptr inbounds %struct.vfsmount, ptr %18, i32 0, i32 1
  %29 = ptrtoint ptr %mnt_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %mnt_sb.i.i, align 4
  %mnt_sb14.i.i = getelementptr i8, ptr %call7.i, i32 4
  %31 = ptrtoint ptr %mnt_sb14.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %mnt_sb14.i.i, align 4
  %cmp.i45.i = icmp eq ptr %30, %32
  br i1 %cmp.i45.i, label %land.lhs.true.i.i, label %if.end11.i.i.if.end18.i.i_crit_edge

if.end11.i.i.if.end18.i.i_crit_edge:              ; preds = %if.end11.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end18.i.i

land.lhs.true.i.i:                                ; preds = %if.end11.i.i
  %33 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %18, align 4
  %dentry.i.i = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %35 = ptrtoint ptr %dentry.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %dentry.i.i, align 4
  %cmp16.i.i = icmp eq ptr %34, %36
  br i1 %cmp16.i.i, label %land.lhs.true.i.i.do_add_mount.exit.thread.i_crit_edge, label %land.lhs.true.i.i.if.end18.i.i_crit_edge

land.lhs.true.i.i.if.end18.i.i_crit_edge:         ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end18.i.i

land.lhs.true.i.i.do_add_mount.exit.thread.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_add_mount.exit.thread.i

if.end18.i.i:                                     ; preds = %land.lhs.true.i.i.if.end18.i.i_crit_edge, %if.end11.i.i.if.end18.i.i_crit_edge
  %37 = ptrtoint ptr %call7.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %call7.i, align 4
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %38, align 8
  %and.i.i37.i.i = and i32 %40, 7340032
  call void @__sanitizer_cov_trace_const_cmp4(i32 6291456, i32 %and.i.i37.i.i)
  %cmp.i38.i.i = icmp eq i32 %and.i.i37.i.i, 6291456
  br i1 %cmp.i38.i.i, label %if.end18.i.i.do_add_mount.exit.thread.i_crit_edge, label %if.end23.i.i

if.end18.i.i.do_add_mount.exit.thread.i_crit_edge: ; preds = %if.end18.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_add_mount.exit.thread.i

if.end23.i.i:                                     ; preds = %if.end18.i.i
  %mnt_flags25.i.i = getelementptr i8, ptr %call7.i, i32 8
  %41 = ptrtoint ptr %mnt_flags25.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %and.i.i, ptr %mnt_flags25.i.i, align 4
  %s_flags.i.i.i = getelementptr inbounds %struct.super_block, ptr %32, i32 0, i32 10
  %42 = ptrtoint ptr %s_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %s_flags.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %43)
  %tobool.not.i.i.i = icmp sgt i32 %43, -1
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.end23.i.i.do_add_mount.exit.thread.i_crit_edge

if.end23.i.i.do_add_mount.exit.thread.i_crit_edge: ; preds = %if.end23.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_add_mount.exit.thread.i

if.end.i.i.i:                                     ; preds = %if.end23.i.i
  %m_dentry.i.i.i = getelementptr inbounds %struct.mountpoint, ptr %call12.i, i32 0, i32 1
  %44 = ptrtoint ptr %m_dentry.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %m_dentry.i.i.i, align 4
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %45, align 8
  %48 = and i32 %47, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %48)
  %49 = icmp eq i32 %48, 2097152
  %50 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %38, align 8
  %52 = and i32 %51, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %52)
  %53 = icmp eq i32 %52, 2097152
  %54 = xor i1 %49, %53
  br i1 %54, label %if.end.i.i.i.do_add_mount.exit.thread.i_crit_edge, label %do_add_mount.exit.i

if.end.i.i.i.do_add_mount.exit.thread.i_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_add_mount.exit.thread.i

do_add_mount.exit.thread.i:                       ; preds = %if.end.i.i.i.do_add_mount.exit.thread.i_crit_edge, %if.end23.i.i.do_add_mount.exit.thread.i_crit_edge, %if.end18.i.i.do_add_mount.exit.thread.i_crit_edge, %land.lhs.true.i.i.do_add_mount.exit.thread.i_crit_edge, %if.then.i44.i.do_add_mount.exit.thread.i_crit_edge
  %retval.0.i.ph.i = phi i32 [ -20, %if.end.i.i.i.do_add_mount.exit.thread.i_crit_edge ], [ -22, %if.end23.i.i.do_add_mount.exit.thread.i_crit_edge ], [ -22, %if.end18.i.i.do_add_mount.exit.thread.i_crit_edge ], [ -16, %land.lhs.true.i.i.do_add_mount.exit.thread.i_crit_edge ], [ -22, %if.then.i44.i.do_add_mount.exit.thread.i_crit_edge ]
  tail call fastcc void @unlock_mount(ptr noundef %call12.i) #22
  br label %if.then19.i

do_add_mount.exit.i:                              ; preds = %if.end.i.i.i
  %call8.i.i.i = tail call fastcc i32 @attach_recursive_mnt(ptr noundef %add.ptr.i.i, ptr noundef %add.ptr.i.i43.i, ptr noundef %call12.i, i1 noundef zeroext false) #22
  tail call fastcc void @unlock_mount(ptr noundef %call12.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i.i.i)
  %cmp.i76 = icmp slt i32 %call8.i.i.i, 0
  br i1 %cmp.i76, label %do_add_mount.exit.i.if.then19.i_crit_edge, label %do_add_mount.exit.i.do_new_mount_fc.exit_crit_edge

do_add_mount.exit.i.do_new_mount_fc.exit_crit_edge: ; preds = %do_add_mount.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_new_mount_fc.exit

do_add_mount.exit.i.if.then19.i_crit_edge:        ; preds = %do_add_mount.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then19.i

if.then19.i:                                      ; preds = %do_add_mount.exit.i.if.then19.i_crit_edge, %do_add_mount.exit.thread.i
  %retval.0.i59.i = phi i32 [ %retval.0.i.ph.i, %do_add_mount.exit.thread.i ], [ %call8.i.i.i, %do_add_mount.exit.i.if.then19.i_crit_edge ]
  %tobool.not.i46.i = icmp eq ptr %call7.i, null
  br i1 %tobool.not.i46.i, label %if.then19.i.do_new_mount_fc.exit_crit_edge, label %if.then.i50.i

if.then19.i.do_new_mount_fc.exit_crit_edge:       ; preds = %if.then19.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_new_mount_fc.exit

if.then.i50.i:                                    ; preds = %if.then19.i
  %mnt_expiry_mark.i48.i = getelementptr i8, ptr %call7.i, i32 140
  %55 = ptrtoint ptr %mnt_expiry_mark.i48.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %mnt_expiry_mark.i48.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool1.not.i49.i = icmp eq i32 %56, 0
  br i1 %tobool1.not.i49.i, label %if.then.i50.i.if.end.i52.i_crit_edge, label %if.then4.i51.i, !prof !352

if.then.i50.i.if.end.i52.i_crit_edge:             ; preds = %if.then.i50.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i52.i

if.then4.i51.i:                                   ; preds = %if.then.i50.i
  call void @__sanitizer_cov_trace_pc() #24
  %57 = ptrtoint ptr %mnt_expiry_mark.i48.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 0, ptr %mnt_expiry_mark.i48.i, align 4
  br label %if.end.i52.i

if.end.i52.i:                                     ; preds = %if.then4.i51.i, %if.then.i50.i.if.end.i52.i_crit_edge
  tail call fastcc void @mntput_no_expire(ptr noundef %add.ptr.i.i) #22
  br label %do_new_mount_fc.exit

do_new_mount_fc.exit:                             ; preds = %if.end.i52.i, %if.then19.i.do_new_mount_fc.exit_crit_edge, %do_add_mount.exit.i.do_new_mount_fc.exit_crit_edge, %mntput.exit.i, %if.then9.i, %if.then5.i
  %retval.0.i = phi i32 [ %error.0.ph.i, %if.then5.i ], [ %10, %if.then9.i ], [ %14, %mntput.exit.i ], [ %call8.i.i.i, %do_add_mount.exit.i.do_new_mount_fc.exit_crit_edge ], [ %retval.0.i59.i, %if.then19.i.do_new_mount_fc.exit_crit_edge ], [ %retval.0.i59.i, %if.end.i52.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %mnt_flags.addr.i)
  br label %if.end46

if.end46:                                         ; preds = %do_new_mount_fc.exit, %if.end42.if.end46_crit_edge, %land.lhs.true35.if.end46_crit_edge, %if.end33.if.end46_crit_edge, %if.end29.if.end46_crit_edge, %if.end23.if.end46_crit_edge
  %err.5 = phi i32 [ %call41, %if.end42.if.end46_crit_edge ], [ %retval.0.i, %do_new_mount_fc.exit ], [ -1, %land.lhs.true35.if.end46_crit_edge ], [ %call32, %if.end33.if.end46_crit_edge ], [ %call28, %if.end29.if.end46_crit_edge ], [ %call22, %if.end23.if.end46_crit_edge ]
  tail call void @put_fs_context(ptr noundef %call14) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end46, %if.then16, %if.then10, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %4, %if.then16 ], [ %err.5, %if.end46 ], [ -22, %if.then10 ], [ -22, %entry.cleanup_crit_edge ], [ -19, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @do_mount(ptr noundef %dev_name, ptr noundef %dir_name, ptr noundef %type_page, i32 noundef %flags, ptr noundef %data_page) local_unnamed_addr #1 align 64 {
entry:
  %path = alloca %struct.path, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path) #22
  %0 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %path, align 4, !annotation !380
  %1 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !380
  %call.i = call i32 @user_path_at_empty(i32 noundef -100, ptr noundef %dir_name, i32 noundef 1, ptr noundef nonnull %path, ptr noundef null) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %call1 = call i32 @path_mount(ptr noundef %dev_name, ptr noundef nonnull %path, ptr noundef %type_page, i32 noundef %flags, ptr noundef %data_page)
  call void @path_put(ptr noundef nonnull %path) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call.i, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path) #22
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @path_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @copy_mnt_ns(i32 noundef %flags, ptr noundef %ns, ptr noundef %user_ns, ptr noundef %new_fs) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %ns, null
  br i1 %tobool.not, label %do.body4, label %do.end9, !prof !343

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namespace.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3446, 0\0A.popsection", ""() #22, !srcloc !390
  unreachable

do.end9:                                          ; preds = %entry
  %and = and i32 %flags, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool10.not = icmp eq i32 %and, 0
  br i1 %tobool10.not, label %if.then19, label %if.end20, !prof !352

if.then19:                                        ; preds = %do.end9
  %count.i = getelementptr inbounds %struct.ns_common, ptr %ns, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #22
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #22, !srcloc !373
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then19.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !343

if.then19.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then19
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %1 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %.not.i.i.i.i = icmp sgt i32 %1, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.cleanup_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !352

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.cleanup_crit_edge:                ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then19.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then19.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %count.i, i32 noundef %.sink.i.i.i.i) #22
  br label %cleanup

if.end20:                                         ; preds = %do.end9
  %root = getelementptr inbounds %struct.mnt_namespace, ptr %ns, i32 0, i32 1
  %2 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %root, align 8
  %call = tail call fastcc ptr @alloc_mnt_ns(ptr noundef %user_ns, i1 noundef zeroext false)
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end20.cleanup_crit_edge, label %if.end23

if.end20.cleanup_crit_edge:                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end23:                                         ; preds = %if.end20
  tail call void @down_write(ptr noundef nonnull @namespace_sem) #22
  %user_ns24 = getelementptr inbounds %struct.mnt_namespace, ptr %ns, i32 0, i32 4
  %4 = ptrtoint ptr %user_ns24 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %user_ns24, align 8
  %cmp.not = icmp eq ptr %5, %user_ns
  %spec.select = select i1 %cmp.not, i32 5, i32 37
  %mnt = getelementptr inbounds %struct.mount, ptr %3, i32 0, i32 3
  %6 = ptrtoint ptr %mnt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mnt, align 4
  %call27 = tail call ptr @copy_tree(ptr noundef %3, ptr noundef %7, i32 noundef %spec.select)
  %cmp.i132 = icmp ugt ptr %call27, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i132, label %if.then29, label %if.end31

if.then29:                                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @namespace_unlock()
  tail call fastcc void @free_mnt_ns(ptr noundef %call)
  br label %cleanup

if.end31:                                         ; preds = %if.end23
  %8 = ptrtoint ptr %user_ns24 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %user_ns24, align 8
  %cmp33.not = icmp eq ptr %9, %user_ns
  br i1 %cmp33.not, label %if.end31.if.end35_crit_edge, label %if.then34

if.end31.if.end35_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end35

if.then34:                                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @lock_mount_hash()
  tail call fastcc void @lock_mnt_tree(ptr noundef %call27)
  tail call fastcc void @unlock_mount_hash()
  br label %if.end35

if.end35:                                         ; preds = %if.then34, %if.end31.if.end35_crit_edge
  %root36 = getelementptr inbounds %struct.mnt_namespace, ptr %call, i32 0, i32 1
  %10 = ptrtoint ptr %root36 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %call27, ptr %root36, align 8
  %list = getelementptr inbounds %struct.mnt_namespace, ptr %call, i32 0, i32 2
  %mnt_list = getelementptr inbounds %struct.mount, ptr %call27, i32 0, i32 10
  %prev.i = getelementptr inbounds %struct.mount, ptr %call27, i32 0, i32 10, i32 1
  %11 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %list, ptr noundef %12, ptr noundef %mnt_list) #22
  br i1 %call.i.i, label %if.end.i.i, label %if.end35.list_add_tail.exit_crit_edge

if.end35.list_add_tail.exit_crit_edge:            ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #24
  %13 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %list, ptr %prev.i, align 4
  %14 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %mnt_list, ptr %list, align 4
  %prev3.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %call, i32 0, i32 2, i32 1
  %15 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %12, ptr %prev3.i.i, align 4
  %16 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %list, ptr %12, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.end35.list_add_tail.exit_crit_edge
  %tobool37.not181 = icmp eq ptr %3, null
  br i1 %tobool37.not181, label %if.end78.thread, label %while.body.lr.ph

if.end78.thread:                                  ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @namespace_unlock()
  br label %cleanup

while.body.lr.ph:                                 ; preds = %list_add_tail.exit
  %mounts = getelementptr inbounds %struct.mnt_namespace, ptr %call, i32 0, i32 9
  %tobool38.not = icmp eq ptr %new_fs, null
  %root41 = getelementptr inbounds %struct.fs_struct, ptr %new_fs, i32 0, i32 5
  %pwd = getelementptr inbounds %struct.fs_struct, ptr %new_fs, i32 0, i32 6
  br label %while.body

while.cond.loopexit:                              ; preds = %next_mnt.exit163.while.cond.loopexit_crit_edge, %while.cond67.preheader.while.cond.loopexit_crit_edge
  %p.1.lcssa = phi ptr [ %retval.0.i, %while.cond67.preheader.while.cond.loopexit_crit_edge ], [ %retval.0.i162, %next_mnt.exit163.while.cond.loopexit_crit_edge ]
  %tobool37.not = icmp eq ptr %p.1.lcssa, null
  br i1 %tobool37.not, label %while.cond.loopexit.while.end75_crit_edge, label %while.cond.loopexit.while.body_crit_edge

while.cond.loopexit.while.body_crit_edge:         ; preds = %while.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body

while.cond.loopexit.while.end75_crit_edge:        ; preds = %while.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end75

while.body:                                       ; preds = %while.cond.loopexit.while.body_crit_edge, %while.body.lr.ph
  %q.0185 = phi ptr [ %call27, %while.body.lr.ph ], [ %add.ptr.i145, %while.cond.loopexit.while.body_crit_edge ]
  %p.0184 = phi ptr [ %3, %while.body.lr.ph ], [ %p.1.lcssa, %while.cond.loopexit.while.body_crit_edge ]
  %pwdmnt.0183 = phi ptr [ null, %while.body.lr.ph ], [ %pwdmnt.1, %while.cond.loopexit.while.body_crit_edge ]
  %rootmnt.0182 = phi ptr [ null, %while.body.lr.ph ], [ %rootmnt.2, %while.cond.loopexit.while.body_crit_edge ]
  %mnt_ns = getelementptr inbounds %struct.mount, ptr %q.0185, i32 0, i32 16
  %17 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %call, ptr %mnt_ns, align 4
  %18 = ptrtoint ptr %mounts to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %mounts, align 8
  %inc = add i32 %19, 1
  store i32 %inc, ptr %mounts, align 8
  br i1 %tobool38.not, label %while.body.if.end61_crit_edge, label %if.then39

while.body.if.end61_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end61

if.then39:                                        ; preds = %while.body
  %mnt40 = getelementptr inbounds %struct.mount, ptr %p.0184, i32 0, i32 3
  %20 = ptrtoint ptr %root41 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %root41, align 4
  %cmp43 = icmp eq ptr %mnt40, %21
  br i1 %cmp43, label %if.then44, label %if.then39.if.end50_crit_edge

if.then39.if.end50_crit_edge:                     ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end50

if.then44:                                        ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #24
  %mnt45 = getelementptr inbounds %struct.mount, ptr %q.0185, i32 0, i32 3
  %call46 = tail call ptr @mntget(ptr noundef %mnt45)
  %22 = ptrtoint ptr %root41 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %mnt45, ptr %root41, align 4
  br label %if.end50

if.end50:                                         ; preds = %if.then44, %if.then39.if.end50_crit_edge
  %rootmnt.1 = phi ptr [ %mnt40, %if.then44 ], [ %rootmnt.0182, %if.then39.if.end50_crit_edge ]
  %23 = ptrtoint ptr %pwd to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pwd, align 4
  %cmp53 = icmp eq ptr %mnt40, %24
  br i1 %cmp53, label %if.then54, label %if.end50.if.end61_crit_edge

if.end50.if.end61_crit_edge:                      ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end61

if.then54:                                        ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #24
  %mnt55 = getelementptr inbounds %struct.mount, ptr %q.0185, i32 0, i32 3
  %call56 = tail call ptr @mntget(ptr noundef %mnt55)
  %25 = ptrtoint ptr %pwd to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %mnt55, ptr %pwd, align 4
  br label %if.end61

if.end61:                                         ; preds = %if.then54, %if.end50.if.end61_crit_edge, %while.body.if.end61_crit_edge
  %rootmnt.2 = phi ptr [ %rootmnt.1, %if.then54 ], [ %rootmnt.1, %if.end50.if.end61_crit_edge ], [ %rootmnt.0182, %while.body.if.end61_crit_edge ]
  %pwdmnt.1 = phi ptr [ %mnt40, %if.then54 ], [ %pwdmnt.0183, %if.end50.if.end61_crit_edge ], [ %pwdmnt.0183, %while.body.if.end61_crit_edge ]
  %mnt_mounts.i = getelementptr inbounds %struct.mount, ptr %p.0184, i32 0, i32 6
  %26 = ptrtoint ptr %mnt_mounts.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %mnt_mounts.i, align 4
  %cmp.i133 = icmp eq ptr %27, %mnt_mounts.i
  br i1 %cmp.i133, label %if.end61.while.cond.i_crit_edge, label %if.end61.if.end11.i_crit_edge

if.end61.if.end11.i_crit_edge:                    ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end11.i

if.end61.while.cond.i_crit_edge:                  ; preds = %if.end61
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end.i.while.cond.i_crit_edge, %if.end61.while.cond.i_crit_edge
  %p.addr.0.i = phi ptr [ %31, %if.end.i.while.cond.i_crit_edge ], [ %p.0184, %if.end61.while.cond.i_crit_edge ]
  %cmp3.i = icmp eq ptr %p.addr.0.i, %3
  br i1 %cmp3.i, label %while.cond.i.next_mnt.exit_crit_edge, label %if.end.i

while.cond.i.next_mnt.exit_crit_edge:             ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit

if.end.i:                                         ; preds = %while.cond.i
  %mnt_child.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 7
  %28 = ptrtoint ptr %mnt_child.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %mnt_child.i, align 4
  %mnt_parent.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 1
  %30 = ptrtoint ptr %mnt_parent.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %mnt_parent.i, align 4
  %mnt_mounts6.i = getelementptr inbounds %struct.mount, ptr %31, i32 0, i32 6
  %cmp7.not.i = icmp eq ptr %29, %mnt_mounts6.i
  br i1 %cmp7.not.i, label %if.end.i.while.cond.i_crit_edge, label %if.end.i.if.end11.i_crit_edge

if.end.i.if.end11.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end11.i

if.end.i.while.cond.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i

if.end11.i:                                       ; preds = %if.end.i.if.end11.i_crit_edge, %if.end61.if.end11.i_crit_edge
  %next.0.i = phi ptr [ %27, %if.end61.if.end11.i_crit_edge ], [ %29, %if.end.i.if.end11.i_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %next.0.i, i32 -52
  br label %next_mnt.exit

next_mnt.exit:                                    ; preds = %if.end11.i, %while.cond.i.next_mnt.exit_crit_edge
  %retval.0.i = phi ptr [ %add.ptr.i, %if.end11.i ], [ null, %while.cond.i.next_mnt.exit_crit_edge ]
  %mnt_mounts.i134 = getelementptr inbounds %struct.mount, ptr %q.0185, i32 0, i32 6
  %32 = ptrtoint ptr %mnt_mounts.i134 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %mnt_mounts.i134, align 4
  %cmp.i135 = icmp eq ptr %33, %mnt_mounts.i134
  br i1 %cmp.i135, label %next_mnt.exit.while.cond.i138_crit_edge, label %next_mnt.exit.next_mnt.exit148_crit_edge

next_mnt.exit.next_mnt.exit148_crit_edge:         ; preds = %next_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit148

next_mnt.exit.while.cond.i138_crit_edge:          ; preds = %next_mnt.exit
  br label %while.cond.i138

while.cond.i138:                                  ; preds = %if.end.i143.while.cond.i138_crit_edge, %next_mnt.exit.while.cond.i138_crit_edge
  %p.addr.0.i136 = phi ptr [ %37, %if.end.i143.while.cond.i138_crit_edge ], [ %q.0185, %next_mnt.exit.while.cond.i138_crit_edge ]
  %cmp3.i137 = icmp eq ptr %p.addr.0.i136, %call27
  br i1 %cmp3.i137, label %while.cond.i138.while.end75_crit_edge, label %if.end.i143

while.cond.i138.while.end75_crit_edge:            ; preds = %while.cond.i138
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end75

if.end.i143:                                      ; preds = %while.cond.i138
  %mnt_child.i139 = getelementptr inbounds %struct.mount, ptr %p.addr.0.i136, i32 0, i32 7
  %34 = ptrtoint ptr %mnt_child.i139 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %mnt_child.i139, align 4
  %mnt_parent.i140 = getelementptr inbounds %struct.mount, ptr %p.addr.0.i136, i32 0, i32 1
  %36 = ptrtoint ptr %mnt_parent.i140 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %mnt_parent.i140, align 4
  %mnt_mounts6.i141 = getelementptr inbounds %struct.mount, ptr %37, i32 0, i32 6
  %cmp7.not.i142 = icmp eq ptr %35, %mnt_mounts6.i141
  br i1 %cmp7.not.i142, label %if.end.i143.while.cond.i138_crit_edge, label %if.end.i143.next_mnt.exit148_crit_edge

if.end.i143.next_mnt.exit148_crit_edge:           ; preds = %if.end.i143
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit148

if.end.i143.while.cond.i138_crit_edge:            ; preds = %if.end.i143
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i138

next_mnt.exit148:                                 ; preds = %if.end.i143.next_mnt.exit148_crit_edge, %next_mnt.exit.next_mnt.exit148_crit_edge
  %next.0.i144 = phi ptr [ %33, %next_mnt.exit.next_mnt.exit148_crit_edge ], [ %35, %if.end.i143.next_mnt.exit148_crit_edge ]
  %add.ptr.i145 = getelementptr i8, ptr %next.0.i144, i32 -52
  %tobool64.not = icmp eq ptr %add.ptr.i145, null
  br i1 %tobool64.not, label %next_mnt.exit148.while.end75_crit_edge, label %while.cond67.preheader

next_mnt.exit148.while.end75_crit_edge:           ; preds = %next_mnt.exit148
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end75

while.cond67.preheader:                           ; preds = %next_mnt.exit148
  %mnt70 = getelementptr i8, ptr %next.0.i144, i32 -36
  %38 = ptrtoint ptr %mnt70 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %mnt70, align 4
  %mnt68178 = getelementptr inbounds %struct.mount, ptr %retval.0.i, i32 0, i32 3
  %40 = ptrtoint ptr %mnt68178 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %mnt68178, align 4
  %cmp72.not179 = icmp eq ptr %41, %39
  br i1 %cmp72.not179, label %while.cond67.preheader.while.cond.loopexit_crit_edge, label %while.cond67.preheader.while.body73_crit_edge

while.cond67.preheader.while.body73_crit_edge:    ; preds = %while.cond67.preheader
  br label %while.body73

while.cond67.preheader.while.cond.loopexit_crit_edge: ; preds = %while.cond67.preheader
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.loopexit

while.body73:                                     ; preds = %next_mnt.exit163.while.body73_crit_edge, %while.cond67.preheader.while.body73_crit_edge
  %p.1180 = phi ptr [ %retval.0.i162, %next_mnt.exit163.while.body73_crit_edge ], [ %retval.0.i, %while.cond67.preheader.while.body73_crit_edge ]
  %mnt_mounts.i149 = getelementptr inbounds %struct.mount, ptr %p.1180, i32 0, i32 6
  %42 = ptrtoint ptr %mnt_mounts.i149 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %mnt_mounts.i149, align 4
  %cmp.i150 = icmp eq ptr %43, %mnt_mounts.i149
  br i1 %cmp.i150, label %while.body73.while.cond.i153_crit_edge, label %while.body73.if.end11.i161_crit_edge

while.body73.if.end11.i161_crit_edge:             ; preds = %while.body73
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end11.i161

while.body73.while.cond.i153_crit_edge:           ; preds = %while.body73
  br label %while.cond.i153

while.cond.i153:                                  ; preds = %if.end.i158.while.cond.i153_crit_edge, %while.body73.while.cond.i153_crit_edge
  %p.addr.0.i151 = phi ptr [ %47, %if.end.i158.while.cond.i153_crit_edge ], [ %p.1180, %while.body73.while.cond.i153_crit_edge ]
  %cmp3.i152 = icmp eq ptr %p.addr.0.i151, %3
  br i1 %cmp3.i152, label %while.cond.i153.next_mnt.exit163_crit_edge, label %if.end.i158

while.cond.i153.next_mnt.exit163_crit_edge:       ; preds = %while.cond.i153
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit163

if.end.i158:                                      ; preds = %while.cond.i153
  %mnt_child.i154 = getelementptr inbounds %struct.mount, ptr %p.addr.0.i151, i32 0, i32 7
  %44 = ptrtoint ptr %mnt_child.i154 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %mnt_child.i154, align 4
  %mnt_parent.i155 = getelementptr inbounds %struct.mount, ptr %p.addr.0.i151, i32 0, i32 1
  %46 = ptrtoint ptr %mnt_parent.i155 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %mnt_parent.i155, align 4
  %mnt_mounts6.i156 = getelementptr inbounds %struct.mount, ptr %47, i32 0, i32 6
  %cmp7.not.i157 = icmp eq ptr %45, %mnt_mounts6.i156
  br i1 %cmp7.not.i157, label %if.end.i158.while.cond.i153_crit_edge, label %if.end.i158.if.end11.i161_crit_edge

if.end.i158.if.end11.i161_crit_edge:              ; preds = %if.end.i158
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end11.i161

if.end.i158.while.cond.i153_crit_edge:            ; preds = %if.end.i158
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i153

if.end11.i161:                                    ; preds = %if.end.i158.if.end11.i161_crit_edge, %while.body73.if.end11.i161_crit_edge
  %next.0.i159 = phi ptr [ %43, %while.body73.if.end11.i161_crit_edge ], [ %45, %if.end.i158.if.end11.i161_crit_edge ]
  %add.ptr.i160 = getelementptr i8, ptr %next.0.i159, i32 -52
  br label %next_mnt.exit163

next_mnt.exit163:                                 ; preds = %if.end11.i161, %while.cond.i153.next_mnt.exit163_crit_edge
  %retval.0.i162 = phi ptr [ %add.ptr.i160, %if.end11.i161 ], [ null, %while.cond.i153.next_mnt.exit163_crit_edge ]
  %mnt68 = getelementptr inbounds %struct.mount, ptr %retval.0.i162, i32 0, i32 3
  %48 = ptrtoint ptr %mnt68 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %mnt68, align 4
  %cmp72.not = icmp eq ptr %49, %39
  br i1 %cmp72.not, label %next_mnt.exit163.while.cond.loopexit_crit_edge, label %next_mnt.exit163.while.body73_crit_edge

next_mnt.exit163.while.body73_crit_edge:          ; preds = %next_mnt.exit163
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body73

next_mnt.exit163.while.cond.loopexit_crit_edge:   ; preds = %next_mnt.exit163
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.loopexit

while.end75:                                      ; preds = %next_mnt.exit148.while.end75_crit_edge, %while.cond.i138.while.end75_crit_edge, %while.cond.loopexit.while.end75_crit_edge
  tail call fastcc void @namespace_unlock()
  %tobool76.not = icmp eq ptr %rootmnt.2, null
  br i1 %tobool76.not, label %while.end75.if.end78_crit_edge, label %if.then.i

while.end75.if.end78_crit_edge:                   ; preds = %while.end75
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end78

if.then.i:                                        ; preds = %while.end75
  %add.ptr.i.i = getelementptr i8, ptr %rootmnt.2, i32 -16
  %mnt_expiry_mark.i = getelementptr i8, ptr %rootmnt.2, i32 140
  %50 = ptrtoint ptr %mnt_expiry_mark.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %mnt_expiry_mark.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool1.not.i = icmp eq i32 %51, 0
  br i1 %tobool1.not.i, label %if.then.i.mntput.exit_crit_edge, label %if.then4.i, !prof !352

if.then.i.mntput.exit_crit_edge:                  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mntput.exit

if.then4.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  %52 = ptrtoint ptr %mnt_expiry_mark.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 0, ptr %mnt_expiry_mark.i, align 4
  br label %mntput.exit

mntput.exit:                                      ; preds = %if.then4.i, %if.then.i.mntput.exit_crit_edge
  tail call fastcc void @mntput_no_expire(ptr noundef %add.ptr.i.i) #22
  br label %if.end78

if.end78:                                         ; preds = %mntput.exit, %while.end75.if.end78_crit_edge
  %tobool79.not = icmp eq ptr %pwdmnt.1, null
  br i1 %tobool79.not, label %if.end78.cleanup_crit_edge, label %if.then.i169

if.end78.cleanup_crit_edge:                       ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then.i169:                                     ; preds = %if.end78
  %add.ptr.i.i166 = getelementptr i8, ptr %pwdmnt.1, i32 -16
  %mnt_expiry_mark.i167 = getelementptr i8, ptr %pwdmnt.1, i32 140
  %53 = ptrtoint ptr %mnt_expiry_mark.i167 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %mnt_expiry_mark.i167, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool1.not.i168 = icmp eq i32 %54, 0
  br i1 %tobool1.not.i168, label %if.then.i169.mntput.exit172_crit_edge, label %if.then4.i170, !prof !352

if.then.i169.mntput.exit172_crit_edge:            ; preds = %if.then.i169
  call void @__sanitizer_cov_trace_pc() #24
  br label %mntput.exit172

if.then4.i170:                                    ; preds = %if.then.i169
  call void @__sanitizer_cov_trace_pc() #24
  %55 = ptrtoint ptr %mnt_expiry_mark.i167 to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 0, ptr %mnt_expiry_mark.i167, align 4
  br label %mntput.exit172

mntput.exit172:                                   ; preds = %if.then4.i170, %if.then.i169.mntput.exit172_crit_edge
  tail call fastcc void @mntput_no_expire(ptr noundef %add.ptr.i.i166) #22
  br label %cleanup

cleanup:                                          ; preds = %mntput.exit172, %if.end78.cleanup_crit_edge, %if.end78.thread, %if.then29, %if.end20.cleanup_crit_edge, %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.cleanup_crit_edge
  %retval.0 = phi ptr [ %call27, %if.then29 ], [ %call, %if.end20.cleanup_crit_edge ], [ %call, %mntput.exit172 ], [ %call, %if.end78.cleanup_crit_edge ], [ %ns, %if.else.i.i.i.i.cleanup_crit_edge ], [ %ns, %if.end15.sink.split.i.i.i.i ], [ %call, %if.end78.thread ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @alloc_mnt_ns(ptr noundef %user_ns, i1 noundef zeroext %anon) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred.i, align 16
  %euid.i = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 8
  %6 = ptrtoint ptr %euid.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %agg.tmp.sroa.0.0.copyload.i = load i32, ptr %euid.i, align 4
  %.fca.0.insert.i = insertvalue [1 x i32] poison, i32 %agg.tmp.sroa.0.0.copyload.i, 0
  %call1.i = tail call ptr @inc_ucount(ptr noundef %user_ns, [1 x i32] %.fca.0.insert.i, i32 noundef 5) #22
  %tobool.not = icmp eq ptr %call1.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 1, i32 8) to i32))
  %7 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 1, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %7, i32 noundef 4197824, i32 noundef 160) #28
  %tobool3.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool3.not, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @dec_ucount(ptr noundef nonnull %call1.i, i32 noundef 5) #22
  br label %cleanup

if.end6:                                          ; preds = %if.end
  br i1 %anon, label %if.end19.critedge, label %if.then8

if.then8:                                         ; preds = %if.end6
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call7.i.i, i32 noundef 4) #22
  %8 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile i32 0, ptr %call7.i.i, align 8
  %inum.i = getelementptr inbounds %struct.ns_common, ptr %call7.i.i, i32 0, i32 2
  %call.i48 = tail call i32 @proc_alloc_inum(ptr noundef %inum.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i48)
  %tobool10.not = icmp eq i32 %call.i48, 0
  br i1 %tobool10.not, label %if.then17.critedge, label %if.then11

if.then11:                                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #22
  tail call void @dec_ucount(ptr noundef nonnull %call1.i, i32 noundef 5) #22
  %9 = inttoptr i32 %call.i48 to ptr
  br label %cleanup

if.then17.critedge:                               ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #24
  %ops.c = getelementptr inbounds %struct.ns_common, ptr %call7.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %ops.c to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @mntns_operations, ptr %ops.c, align 4
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @mnt_ns_seq, i32 noundef 8) #22
  %call.i = tail call i64 @generic_atomic64_add_return(i64 noundef 1, ptr noundef nonnull @mnt_ns_seq) #22
  %seq = getelementptr inbounds %struct.mnt_namespace, ptr %call7.i.i, i32 0, i32 6
  %11 = ptrtoint ptr %seq to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %call.i, ptr %seq, align 8
  br label %if.end19

if.end19.critedge:                                ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #24
  %ops.c47 = getelementptr inbounds %struct.ns_common, ptr %call7.i.i, i32 0, i32 1
  %12 = ptrtoint ptr %ops.c47 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr @mntns_operations, ptr %ops.c47, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.end19.critedge, %if.then17.critedge
  %count = getelementptr inbounds %struct.ns_common, ptr %call7.i.i, i32 0, i32 3
  %call.i.i.i49 = tail call zeroext i1 @__kasan_check_write(ptr noundef %count, i32 noundef 4) #22
  %13 = ptrtoint ptr %count to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile i32 1, ptr %count, align 4
  %list = getelementptr inbounds %struct.mnt_namespace, ptr %call7.i.i, i32 0, i32 2
  %14 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %list, ptr %list, align 4
  %prev.i = getelementptr inbounds %struct.mnt_namespace, ptr %call7.i.i, i32 0, i32 2, i32 1
  %15 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %list, ptr %prev.i, align 8
  %poll = getelementptr inbounds %struct.mnt_namespace, ptr %call7.i.i, i32 0, i32 7
  tail call void @__init_waitqueue_head(ptr noundef %poll, ptr noundef nonnull @.str.69, ptr noundef nonnull @alloc_mnt_ns.__key) #22
  %ns_lock = getelementptr inbounds %struct.mnt_namespace, ptr %call7.i.i, i32 0, i32 3
  tail call void @__raw_spin_lock_init(ptr noundef %ns_lock, ptr noundef nonnull @.str.71, ptr noundef nonnull @alloc_mnt_ns.__key.70, i16 noundef signext 3) #22
  %tobool.not.i = icmp eq ptr %user_ns, null
  br i1 %tobool.not.i, label %if.end19.get_user_ns.exit_crit_edge, label %if.then.i

if.end19.get_user_ns.exit_crit_edge:              ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #24
  br label %get_user_ns.exit

if.then.i:                                        ; preds = %if.end19
  %count.i = getelementptr inbounds %struct.user_namespace, ptr %user_ns, i32 0, i32 7, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #22
  %16 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #22, !srcloc !373
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %16, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !343

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %17 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %17)
  %.not.i.i.i.i = icmp sgt i32 %17, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.get_user_ns.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !352

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.get_user_ns.exit_crit_edge:       ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %get_user_ns.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %count.i, i32 noundef %.sink.i.i.i.i) #22
  br label %get_user_ns.exit

get_user_ns.exit:                                 ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.get_user_ns.exit_crit_edge, %if.end19.get_user_ns.exit_crit_edge
  %user_ns26 = getelementptr inbounds %struct.mnt_namespace, ptr %call7.i.i, i32 0, i32 4
  %18 = ptrtoint ptr %user_ns26 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %user_ns, ptr %user_ns26, align 8
  %ucounts27 = getelementptr inbounds %struct.mnt_namespace, ptr %call7.i.i, i32 0, i32 5
  %19 = ptrtoint ptr %ucounts27 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call1.i, ptr %ucounts27, align 4
  br label %cleanup

cleanup:                                          ; preds = %get_user_ns.exit, %if.then11, %if.then4, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %call7.i.i, %get_user_ns.exit ], [ %9, %if.then11 ], [ inttoptr (i32 -12 to ptr), %if.then4 ], [ inttoptr (i32 -28 to ptr), %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @lock_mnt_tree(ptr noundef %mnt) unnamed_addr #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not42 = icmp eq ptr %mnt, null
  br i1 %tobool.not42, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %next_mnt.exit.for.body_crit_edge, %entry.for.body_crit_edge
  %p.043 = phi ptr [ %add.ptr.i, %next_mnt.exit.for.body_crit_edge ], [ %mnt, %entry.for.body_crit_edge ]
  %mnt_flags = getelementptr inbounds %struct.mount, ptr %p.043, i32 0, i32 3, i32 2
  %0 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mnt_flags, align 4
  %and = and i32 %1, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  %spec.select.v = select i1 %tobool2.not, i32 262144, i32 4456448
  %and4 = shl i32 %1, 20
  %2 = and i32 %and4, 2097152
  %3 = and i32 %and4, 1048576
  %and14 = shl i32 %1, 17
  %4 = and i32 %and14, 524288
  %spec.select = or i32 %2, %1
  %5 = or i32 %spec.select, %3
  %6 = or i32 %5, %4
  %7 = or i32 %6, %spec.select.v
  %mnt_expire = getelementptr inbounds %struct.mount, ptr %p.043, i32 0, i32 11
  %8 = ptrtoint ptr %mnt_expire to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %mnt_expire, align 4
  %cmp.i.not = icmp eq ptr %9, %mnt_expire
  %or21 = or i32 %7, 8388608
  %flags.4 = select i1 %cmp.i.not, i32 %or21, i32 %7
  %10 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %flags.4, ptr %mnt_flags, align 4
  %mnt_mounts.i = getelementptr inbounds %struct.mount, ptr %p.043, i32 0, i32 6
  %11 = ptrtoint ptr %mnt_mounts.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %mnt_mounts.i, align 4
  %cmp.i41 = icmp eq ptr %12, %mnt_mounts.i
  br i1 %cmp.i41, label %for.body.while.cond.i_crit_edge, label %for.body.next_mnt.exit_crit_edge

for.body.next_mnt.exit_crit_edge:                 ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit

for.body.while.cond.i_crit_edge:                  ; preds = %for.body
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end.i.while.cond.i_crit_edge, %for.body.while.cond.i_crit_edge
  %p.addr.0.i = phi ptr [ %16, %if.end.i.while.cond.i_crit_edge ], [ %p.043, %for.body.while.cond.i_crit_edge ]
  %cmp3.i = icmp eq ptr %p.addr.0.i, %mnt
  br i1 %cmp3.i, label %while.cond.i.for.end_crit_edge, label %if.end.i

while.cond.i.for.end_crit_edge:                   ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

if.end.i:                                         ; preds = %while.cond.i
  %mnt_child.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 7
  %13 = ptrtoint ptr %mnt_child.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %mnt_child.i, align 4
  %mnt_parent.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 1
  %15 = ptrtoint ptr %mnt_parent.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mnt_parent.i, align 4
  %mnt_mounts6.i = getelementptr inbounds %struct.mount, ptr %16, i32 0, i32 6
  %cmp7.not.i = icmp eq ptr %14, %mnt_mounts6.i
  br i1 %cmp7.not.i, label %if.end.i.while.cond.i_crit_edge, label %if.end.i.next_mnt.exit_crit_edge

if.end.i.next_mnt.exit_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit

if.end.i.while.cond.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i

next_mnt.exit:                                    ; preds = %if.end.i.next_mnt.exit_crit_edge, %for.body.next_mnt.exit_crit_edge
  %next.0.i = phi ptr [ %12, %for.body.next_mnt.exit_crit_edge ], [ %14, %if.end.i.next_mnt.exit_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %next.0.i, i32 -52
  %tobool.not = icmp eq ptr %add.ptr.i, null
  br i1 %tobool.not, label %next_mnt.exit.for.end_crit_edge, label %next_mnt.exit.for.body_crit_edge

next_mnt.exit.for.body_crit_edge:                 ; preds = %next_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

next_mnt.exit.for.end_crit_edge:                  ; preds = %next_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %next_mnt.exit.for.end_crit_edge, %while.cond.i.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @mount_subtree(ptr noundef %m, ptr noundef %name) #1 align 64 {
entry:
  %path = alloca %struct.path, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %m, i32 -16
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path) #22
  %0 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %path, align 4, !annotation !380
  %1 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !380
  %call1 = tail call fastcc ptr @alloc_mnt_ns(ptr noundef nonnull @init_user_ns, i1 noundef zeroext true)
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tobool.not.i = icmp eq ptr %m, null
  br i1 %tobool.not.i, label %if.then.cleanup_crit_edge, label %if.then.i

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then.i:                                        ; preds = %if.then
  %mnt_expiry_mark.i = getelementptr i8, ptr %m, i32 140
  %3 = ptrtoint ptr %mnt_expiry_mark.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %mnt_expiry_mark.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool1.not.i = icmp eq i32 %4, 0
  br i1 %tobool1.not.i, label %if.then.i.if.end.i_crit_edge, label %if.then4.i, !prof !352

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i

if.then4.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  %5 = ptrtoint ptr %mnt_expiry_mark.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %mnt_expiry_mark.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then4.i, %if.then.i.if.end.i_crit_edge
  tail call fastcc void @mntput_no_expire(ptr noundef %add.ptr.i) #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %mnt_ns = getelementptr i8, ptr %m, i32 100
  %6 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call1, ptr %mnt_ns, align 4
  %root = getelementptr inbounds %struct.mnt_namespace, ptr %call1, i32 0, i32 1
  %7 = ptrtoint ptr %root to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %add.ptr.i, ptr %root, align 8
  %mounts = getelementptr inbounds %struct.mnt_namespace, ptr %call1, i32 0, i32 9
  %8 = ptrtoint ptr %mounts to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mounts, align 8
  %inc = add i32 %9, 1
  store i32 %inc, ptr %mounts, align 8
  %mnt_list = getelementptr i8, ptr %m, i32 56
  %list = getelementptr inbounds %struct.mnt_namespace, ptr %call1, i32 0, i32 2
  %10 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %list, align 4
  %call.i.i27 = tail call zeroext i1 @__list_add_valid(ptr noundef %mnt_list, ptr noundef %list, ptr noundef %11) #22
  br i1 %call.i.i27, label %if.end.i.i, label %if.end.list_add.exit_crit_edge

if.end.list_add.exit_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %mnt_list, ptr %prev1.i.i, align 4
  %13 = ptrtoint ptr %mnt_list to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %11, ptr %mnt_list, align 4
  %prev3.i.i = getelementptr i8, ptr %m, i32 60
  %14 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %list, ptr %prev3.i.i, align 4
  %15 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %mnt_list, ptr %list, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end.list_add.exit_crit_edge
  %16 = ptrtoint ptr %m to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %m, align 4
  %call4 = call i32 @vfs_path_lookup(ptr noundef %17, ptr noundef %m, ptr noundef %name, i32 noundef 5, ptr noundef nonnull %path) #22
  call void @put_mnt_ns(ptr noundef %call1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.end7, label %if.then5

if.then5:                                         ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #24
  %18 = inttoptr i32 %call4 to ptr
  br label %cleanup

if.end7:                                          ; preds = %list_add.exit
  %19 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %path, align 4
  %mnt_sb = getelementptr inbounds %struct.vfsmount, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %mnt_sb, align 4
  %s_active = getelementptr inbounds %struct.super_block, ptr %22, i32 0, i32 16
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %s_active, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr %s_active, i32 1, i32 3, i32 1) #22
  %23 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %s_active, ptr %s_active, i32 1, ptr elementtype(i32) %s_active) #22, !srcloc !372
  %24 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %path, align 4
  %tobool.not.i28 = icmp eq ptr %25, null
  br i1 %tobool.not.i28, label %if.end7.mntput.exit35_crit_edge, label %if.then.i32

if.end7.mntput.exit35_crit_edge:                  ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  br label %mntput.exit35

if.then.i32:                                      ; preds = %if.end7
  %add.ptr.i.i29 = getelementptr i8, ptr %25, i32 -16
  %mnt_expiry_mark.i30 = getelementptr i8, ptr %25, i32 140
  %26 = ptrtoint ptr %mnt_expiry_mark.i30 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %mnt_expiry_mark.i30, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool1.not.i31 = icmp eq i32 %27, 0
  br i1 %tobool1.not.i31, label %if.then.i32.if.end.i34_crit_edge, label %if.then4.i33, !prof !352

if.then.i32.if.end.i34_crit_edge:                 ; preds = %if.then.i32
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i34

if.then4.i33:                                     ; preds = %if.then.i32
  call void @__sanitizer_cov_trace_pc() #24
  %28 = ptrtoint ptr %mnt_expiry_mark.i30 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %mnt_expiry_mark.i30, align 4
  br label %if.end.i34

if.end.i34:                                       ; preds = %if.then4.i33, %if.then.i32.if.end.i34_crit_edge
  call fastcc void @mntput_no_expire(ptr noundef %add.ptr.i.i29) #22
  br label %mntput.exit35

mntput.exit35:                                    ; preds = %if.end.i34, %if.end7.mntput.exit35_crit_edge
  %s_umount = getelementptr inbounds %struct.super_block, ptr %22, i32 0, i32 14
  call void @down_write(ptr noundef %s_umount) #22
  %29 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %1, align 4
  br label %cleanup

cleanup:                                          ; preds = %mntput.exit35, %if.then5, %if.end.i, %if.then.cleanup_crit_edge
  %retval.0 = phi ptr [ %18, %if.then5 ], [ %30, %mntput.exit35 ], [ %call1, %if.then.cleanup_crit_edge ], [ %call1, %if.end.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path) #22
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vfs_path_lookup(ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @put_mnt_ns(ptr noundef %ns) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %count = getelementptr inbounds %struct.ns_common, ptr %ns, i32 0, i32 3
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !381
  tail call void @llvm.prefetch.p0(ptr %count, i32 1, i32 3, i32 1) #22
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count, ptr %count, i32 1, ptr elementtype(i32) %count) #22, !srcloc !382
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.end, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.return_crit_edge, label %if.then10.i.i.i, !prof !352

if.end5.i.i.i.return_crit_edge:                   ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %count, i32 noundef 3) #22
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !383
  %root = getelementptr inbounds %struct.mnt_namespace, ptr %ns, i32 0, i32 1
  %1 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %root, align 8
  tail call void @down_write(ptr noundef nonnull @namespace_sem) #22
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %3 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i.i = add i32 %3, 1
  store i32 %inc.i.i.i.i.i.i, ptr @mount_lock, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %4 = tail call ptr @llvm.returnaddress(i32 0) #22
  %5 = ptrtoint ptr %4 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %5) #22
  tail call fastcc void @umount_tree(ptr noundef %2, i32 noundef 0) #22
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %5) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %6 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %6, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  tail call fastcc void @namespace_unlock() #22
  tail call fastcc void @free_mnt_ns(ptr noundef %ns)
  br label %return

return:                                           ; preds = %if.end, %if.then10.i.i.i, %if.end5.i.i.i.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_mount(i32 noundef %dev_name, i32 noundef %dir_name, i32 noundef %type, i32 noundef %flags, i32 noundef %data) #1 align 64 {
entry:
  %path.i.i = alloca %struct.path, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %dev_name to ptr
  %1 = inttoptr i32 %dir_name to ptr
  %2 = inttoptr i32 %data to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %type)
  %tobool.not.i.i = icmp eq i32 %type, 0
  br i1 %tobool.not.i.i, label %entry.if.end.i_crit_edge, label %copy_mount_string.exit.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i

copy_mount_string.exit.i:                         ; preds = %entry
  %3 = inttoptr i32 %type to ptr
  %call.i.i = tail call ptr @strndup_user(ptr noundef nonnull %3, i32 noundef 4096) #22
  %4 = ptrtoint ptr %call.i.i to i32
  %cmp.i.i = icmp ugt ptr %call.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %copy_mount_string.exit.i.__do_sys_mount.exit_crit_edge, label %copy_mount_string.exit.i.if.end.i_crit_edge

copy_mount_string.exit.i.if.end.i_crit_edge:      ; preds = %copy_mount_string.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i

copy_mount_string.exit.i.__do_sys_mount.exit_crit_edge: ; preds = %copy_mount_string.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_mount.exit

if.end.i:                                         ; preds = %copy_mount_string.exit.i.if.end.i_crit_edge, %entry.if.end.i_crit_edge
  %cond.i38.i = phi ptr [ %call.i.i, %copy_mount_string.exit.i.if.end.i_crit_edge ], [ null, %entry.if.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dev_name)
  %tobool.not.i23.i = icmp eq i32 %dev_name, 0
  br i1 %tobool.not.i23.i, label %if.end.i.if.end7.i_crit_edge, label %copy_mount_string.exit27.i

if.end.i.if.end7.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7.i

copy_mount_string.exit27.i:                       ; preds = %if.end.i
  %call.i24.i = tail call ptr @strndup_user(ptr noundef nonnull %0, i32 noundef 4096) #22
  %5 = ptrtoint ptr %call.i24.i to i32
  %cmp.i28.i = icmp ugt ptr %call.i24.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i28.i, label %copy_mount_string.exit27.i.out_dev.i_crit_edge, label %copy_mount_string.exit27.i.if.end7.i_crit_edge

copy_mount_string.exit27.i.if.end7.i_crit_edge:   ; preds = %copy_mount_string.exit27.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7.i

copy_mount_string.exit27.i.out_dev.i_crit_edge:   ; preds = %copy_mount_string.exit27.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_dev.i

if.end7.i:                                        ; preds = %copy_mount_string.exit27.i.if.end7.i_crit_edge, %if.end.i.if.end7.i_crit_edge
  %cond.i2641.i = phi ptr [ %call.i24.i, %copy_mount_string.exit27.i.if.end7.i_crit_edge ], [ null, %if.end.i.if.end7.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %data)
  %tobool.not.i29.i = icmp eq i32 %data, 0
  br i1 %tobool.not.i29.i, label %if.end7.i.if.end12.i_crit_edge, label %if.end.i.i

if.end7.i.if.end12.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end12.i

if.end.i.i:                                       ; preds = %if.end7.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12) to i32))
  %6 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %6, i32 noundef 3264, i32 noundef 4096) #28
  %tobool1.not.i.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool1.not.i.i, label %if.end.i.i.copy_mount_options.exit.thread.i_crit_edge, label %if.end59.i.i.i.i

if.end.i.i.copy_mount_options.exit.thread.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %copy_mount_options.exit.thread.i

if.end59.i.i.i.i:                                 ; preds = %if.end.i.i
  tail call void @__might_fault(ptr noundef nonnull @.str.80, i32 noundef 156) #22
  %call.i.i.i.i = tail call zeroext i1 @should_fail_usercopy() #22
  br i1 %call.i.i.i.i, label %if.end59.i.i.i.i.while.body.preheader.i.i_crit_edge, label %land.lhs.true.i.i.i.i

if.end59.i.i.i.i.while.body.preheader.i.i_crit_edge: ; preds = %if.end59.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body.preheader.i.i

land.lhs.true.i.i.i.i:                            ; preds = %if.end59.i.i.i.i
  %7 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %2, i32 4096, i32 -1226833920) #30, !srcloc !391
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %7, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %cmp.i6.i.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %cmp.i6.i.i.i, label %if.end.i.i.i.i, label %land.lhs.true.i.i.i.i.while.body.preheader.i.i_crit_edge, !prof !352

land.lhs.true.i.i.i.i.while.body.preheader.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body.preheader.i.i

if.end.i.i.i.i:                                   ; preds = %land.lhs.true.i.i.i.i
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call7.i.i.i, i32 noundef 4096) #22
  %8 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i.i.i.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 4
  %10 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i.i) #16, !srcloc !392
  %and.i.i.i.i.i.i = and i32 %10, -13
  %or.i.i.i.i.i.i = or i32 %and.i.i.i.i.i.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i.i) #22, !srcloc !393
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #22, !srcloc !394
  %call1.i.i.i.i.i = tail call i32 @arm_copy_from_user(ptr noundef nonnull %call7.i.i.i, ptr noundef nonnull %2, i32 noundef 4096) #22
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %10) #22, !srcloc !393
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #22, !srcloc !394
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i.i)
  %tobool4.not.i.i.i.i = icmp eq i32 %call1.i.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i.i, label %if.end.i.i.i.i.copy_mount_options.exit.i_crit_edge, label %if.end.i.i.i.i.while.body.preheader.i.i_crit_edge, !prof !352

if.end.i.i.i.i.while.body.preheader.i.i_crit_edge: ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body.preheader.i.i

if.end.i.i.i.i.copy_mount_options.exit.i_crit_edge: ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %copy_mount_options.exit.i

while.body.preheader.i.i:                         ; preds = %if.end.i.i.i.i.while.body.preheader.i.i_crit_edge, %land.lhs.true.i.i.i.i.while.body.preheader.i.i_crit_edge, %if.end59.i.i.i.i.while.body.preheader.i.i_crit_edge
  %res.0.i.i33.i.i = phi i32 [ %call1.i.i.i.i.i, %if.end.i.i.i.i.while.body.preheader.i.i_crit_edge ], [ 4096, %if.end59.i.i.i.i.while.body.preheader.i.i_crit_edge ], [ 4096, %land.lhs.true.i.i.i.i.while.body.preheader.i.i_crit_edge ]
  %sub.i.i.i.i = sub i32 4096, %res.0.i.i33.i.i
  %add.ptr.i.i.i.i = getelementptr i8, ptr %call7.i.i.i, i32 %sub.i.i.i.i
  %11 = call ptr @memset(ptr %add.ptr.i.i.i.i, i32 0, i32 %res.0.i.i33.i.i)
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %cleanup.i.i.while.body.i.i_crit_edge, %while.body.preheader.i.i
  %left.043.i.i = phi i32 [ %dec.i.i, %cleanup.i.i.while.body.i.i_crit_edge ], [ %res.0.i.i33.i.i, %while.body.preheader.i.i ]
  %offset.042.i.i = phi i32 [ %inc.i.i, %cleanup.i.i.while.body.i.i_crit_edge ], [ %sub.i.i.i.i, %while.body.preheader.i.i ]
  tail call void @__might_fault(ptr noundef nonnull @.str.2, i32 noundef 3245) #22
  %add.ptr.i.i = getelementptr i8, ptr %2, i32 %offset.042.i.i
  %12 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 4
  %14 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i) #16, !srcloc !392
  %and.i.i.i = and i32 %14, -13
  %or.i.i.i = or i32 %and.i.i.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i) #22, !srcloc !393
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #22, !srcloc !394
  %15 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_1", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %add.ptr.i.i, i32 -1226833921) #22, !srcloc !395
  %asmresult.i.i = extractvalue { i32, i32 } %15, 0
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %14) #22, !srcloc !393
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #22, !srcloc !394
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %tobool10.not.i.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %tobool10.not.i.i, label %cleanup.i.i, label %while.end.i.i

cleanup.i.i:                                      ; preds = %while.body.i.i
  %asmresult8.i.i = extractvalue { i32, i32 } %15, 1
  %conv.i.i = trunc i32 %asmresult8.i.i to i8
  %arrayidx.i.i = getelementptr i8, ptr %call7.i.i.i, i32 %offset.042.i.i
  %16 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %conv.i.i, ptr %arrayidx.i.i, align 1
  %dec.i.i = add i32 %left.043.i.i, -1
  %inc.i.i = add i32 %offset.042.i.i, 1
  %tobool6.not.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %tobool6.not.i.i, label %cleanup.i.i.copy_mount_options.exit.i_crit_edge, label %cleanup.i.i.while.body.i.i_crit_edge

cleanup.i.i.while.body.i.i_crit_edge:             ; preds = %cleanup.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body.i.i

cleanup.i.i.copy_mount_options.exit.i_crit_edge:  ; preds = %cleanup.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %copy_mount_options.exit.i

while.end.i.i:                                    ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %left.043.i.i)
  %cmp.i30.i = icmp eq i32 %left.043.i.i, 4096
  br i1 %cmp.i30.i, label %if.then14.i.i, label %while.end.i.i.copy_mount_options.exit.i_crit_edge

while.end.i.i.copy_mount_options.exit.i_crit_edge: ; preds = %while.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %copy_mount_options.exit.i

if.then14.i.i:                                    ; preds = %while.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i) #22
  br label %copy_mount_options.exit.thread.i

copy_mount_options.exit.thread.i:                 ; preds = %if.then14.i.i, %if.end.i.i.copy_mount_options.exit.thread.i_crit_edge
  %retval.0.i.ph.i = phi ptr [ inttoptr (i32 -12 to ptr), %if.end.i.i.copy_mount_options.exit.thread.i_crit_edge ], [ inttoptr (i32 -14 to ptr), %if.then14.i.i ]
  %17 = ptrtoint ptr %retval.0.i.ph.i to i32
  br label %out_data.i

copy_mount_options.exit.i:                        ; preds = %while.end.i.i.copy_mount_options.exit.i_crit_edge, %cleanup.i.i.copy_mount_options.exit.i_crit_edge, %if.end.i.i.i.i.copy_mount_options.exit.i_crit_edge
  %18 = ptrtoint ptr %call7.i.i.i to i32
  %cmp.i31.i = icmp ugt ptr %call7.i.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i31.i, label %copy_mount_options.exit.i.out_data.i_crit_edge, label %copy_mount_options.exit.i.if.end12.i_crit_edge

copy_mount_options.exit.i.if.end12.i_crit_edge:   ; preds = %copy_mount_options.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end12.i

copy_mount_options.exit.i.out_data.i_crit_edge:   ; preds = %copy_mount_options.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_data.i

if.end12.i:                                       ; preds = %copy_mount_options.exit.i.if.end12.i_crit_edge, %if.end7.i.if.end12.i_crit_edge
  %retval.0.i47.i = phi ptr [ %call7.i.i.i, %copy_mount_options.exit.i.if.end12.i_crit_edge ], [ null, %if.end7.i.if.end12.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path.i.i) #22
  %19 = ptrtoint ptr %path.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr inttoptr (i32 -1 to ptr), ptr %path.i.i, align 4, !annotation !380
  %20 = getelementptr inbounds %struct.path, ptr %path.i.i, i32 0, i32 1
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr inttoptr (i32 -1 to ptr), ptr %20, align 4, !annotation !380
  %call.i.i.i = call i32 @user_path_at_empty(i32 noundef -100, ptr noundef %1, i32 noundef 1, ptr noundef nonnull %path.i.i, ptr noundef null) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i32.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i32.i, label %if.end.i33.i, label %if.end12.i.do_mount.exit.i_crit_edge

if.end12.i.do_mount.exit.i_crit_edge:             ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_mount.exit.i

if.end.i33.i:                                     ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #24
  %call1.i.i = call i32 @path_mount(ptr noundef %cond.i2641.i, ptr noundef nonnull %path.i.i, ptr noundef %cond.i38.i, i32 noundef %flags, ptr noundef %retval.0.i47.i) #22
  call void @path_put(ptr noundef nonnull %path.i.i) #22
  br label %do_mount.exit.i

do_mount.exit.i:                                  ; preds = %if.end.i33.i, %if.end12.i.do_mount.exit.i_crit_edge
  %retval.0.i34.i = phi i32 [ %call1.i.i, %if.end.i33.i ], [ %call.i.i.i, %if.end12.i.do_mount.exit.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path.i.i) #22
  call void @kfree(ptr noundef %retval.0.i47.i) #22
  br label %out_data.i

out_data.i:                                       ; preds = %do_mount.exit.i, %copy_mount_options.exit.i.out_data.i_crit_edge, %copy_mount_options.exit.thread.i
  %ret.0.i = phi i32 [ %18, %copy_mount_options.exit.i.out_data.i_crit_edge ], [ %retval.0.i34.i, %do_mount.exit.i ], [ %17, %copy_mount_options.exit.thread.i ]
  call void @kfree(ptr noundef %cond.i2641.i) #22
  br label %out_dev.i

out_dev.i:                                        ; preds = %out_data.i, %copy_mount_string.exit27.i.out_dev.i_crit_edge
  %ret.1.i = phi i32 [ %5, %copy_mount_string.exit27.i.out_dev.i_crit_edge ], [ %ret.0.i, %out_data.i ]
  call void @kfree(ptr noundef %cond.i38.i) #22
  br label %__do_sys_mount.exit

__do_sys_mount.exit:                              ; preds = %out_dev.i, %copy_mount_string.exit.i.__do_sys_mount.exit_crit_edge
  %ret.2.i = phi i32 [ %4, %copy_mount_string.exit.i.__do_sys_mount.exit_crit_edge ], [ %ret.1.i, %out_dev.i ]
  ret i32 %ret.2.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_fsmount(i32 noundef %fs_fd, i32 noundef %flags, i32 noundef %attr_flags) #1 align 64 {
entry:
  %newmount.i = alloca %struct.path, align 4
  %mnt_flags.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %newmount.i) #22
  %0 = ptrtoint ptr %newmount.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %newmount.i, align 4, !annotation !380
  %1 = getelementptr inbounds %struct.path, ptr %newmount.i, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !380
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %mnt_flags.i) #22
  %3 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task.i.i, align 8
  %nsproxy.i.i = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 110
  %7 = ptrtoint ptr %nsproxy.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %nsproxy.i.i, align 4
  %mnt_ns.i.i = getelementptr inbounds %struct.nsproxy, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %mnt_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mnt_ns.i.i, align 4
  %user_ns.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %10, i32 0, i32 4
  %11 = ptrtoint ptr %user_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %user_ns.i.i, align 8
  %call1.i.i = tail call zeroext i1 @ns_capable(ptr noundef %12, i32 noundef 21) #22
  br i1 %call1.i.i, label %if.end.i, label %entry.__do_sys_fsmount.exit_crit_edge

entry.__do_sys_fsmount.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_fsmount.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %flags)
  %cmp.not.i = icmp ult i32 %flags, 2
  %and3.i = and i32 %attr_flags, -2097408
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i)
  %tobool.not.i = icmp eq i32 %and3.i, 0
  %or.cond.i = and i1 %cmp.not.i, %tobool.not.i
  br i1 %or.cond.i, label %if.end5.i, label %if.end.i.__do_sys_fsmount.exit_crit_edge

if.end.i.__do_sys_fsmount.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_fsmount.exit

if.end5.i:                                        ; preds = %if.end.i
  %13 = shl nuw nsw i32 %attr_flags, 6
  %14 = and i32 %13, 64
  %15 = lshr i32 %attr_flags, 1
  %16 = and i32 %15, 1
  %17 = or i32 %16, %14
  %18 = and i32 %15, 2
  %19 = or i32 %17, %18
  %20 = and i32 %15, 4
  %21 = or i32 %19, %20
  %22 = lshr i32 %attr_flags, 3
  %23 = and i32 %22, 16
  %24 = or i32 %21, %23
  %25 = lshr i32 %attr_flags, 14
  %26 = and i32 %25, 128
  %27 = or i32 %24, %26
  %28 = ptrtoint ptr %mnt_flags.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %mnt_flags.i, align 4
  %and7.i = and i32 %attr_flags, 112
  %29 = zext i32 %and7.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %29, ptr @__sancov_gen_cov_switch_values)
  switch i32 %and7.i, label %if.end5.i.__do_sys_fsmount.exit_crit_edge [
    i32 32, label %if.end5.i.sw.epilog.i_crit_edge
    i32 16, label %sw.bb.i
    i32 0, label %sw.bb8.i
  ]

if.end5.i.sw.epilog.i_crit_edge:                  ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %sw.epilog.i

if.end5.i.__do_sys_fsmount.exit_crit_edge:        ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_fsmount.exit

sw.bb.i:                                          ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #24
  %or.i = or i32 %27, 8
  %30 = ptrtoint ptr %mnt_flags.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %or.i, ptr %mnt_flags.i, align 4
  br label %sw.epilog.i

sw.bb8.i:                                         ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #24
  %or9.i = or i32 %27, 32
  %31 = ptrtoint ptr %mnt_flags.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or9.i, ptr %mnt_flags.i, align 4
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.bb8.i, %sw.bb.i, %if.end5.i.sw.epilog.i_crit_edge
  %call.i.i = tail call i32 @__fdget(i32 noundef %fs_fd) #22, !noalias !396
  %and.i.i116.i = and i32 %call.i.i, -4
  %32 = inttoptr i32 %and.i.i116.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i116.i)
  %tobool11.not.i = icmp eq i32 %and.i.i116.i, 0
  br i1 %tobool11.not.i, label %sw.epilog.i.__do_sys_fsmount.exit_crit_edge, label %if.end13.i

sw.epilog.i.__do_sys_fsmount.exit_crit_edge:      ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_fsmount.exit

if.end13.i:                                       ; preds = %sw.epilog.i
  %f_op.i = getelementptr inbounds %struct.file, ptr %32, i32 0, i32 3
  %33 = ptrtoint ptr %f_op.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %f_op.i, align 4
  %cmp15.not.i = icmp eq ptr %34, @fscontext_fops
  br i1 %cmp15.not.i, label %if.end18.i, label %if.end13.i.err_fsfd.i_crit_edge

if.end13.i.err_fsfd.i_crit_edge:                  ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %err_fsfd.i

if.end18.i:                                       ; preds = %if.end13.i
  %private_data.i = getelementptr inbounds %struct.file, ptr %32, i32 0, i32 16
  %35 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %private_data.i, align 4
  %uapi_mutex.i = getelementptr inbounds %struct.fs_context, ptr %36, i32 0, i32 1
  %call20.i = tail call i32 @mutex_lock_interruptible_nested(ptr noundef %uapi_mutex.i, i32 noundef 0) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20.i)
  %cmp21.i = icmp slt i32 %call20.i, 0
  br i1 %cmp21.i, label %if.end18.i.err_fsfd.i_crit_edge, label %if.end24.i

if.end18.i.err_fsfd.i_crit_edge:                  ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %err_fsfd.i

if.end24.i:                                       ; preds = %if.end18.i
  %root.i = getelementptr inbounds %struct.fs_context, ptr %36, i32 0, i32 5
  %37 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %root.i, align 4
  %tobool25.not.i = icmp eq ptr %38, null
  br i1 %tobool25.not.i, label %if.end24.i.err_unlock.i_crit_edge, label %if.end27.i

if.end24.i.err_unlock.i_crit_edge:                ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %err_unlock.i

if.end27.i:                                       ; preds = %if.end24.i
  %d_sb.i = getelementptr inbounds %struct.dentry, ptr %38, i32 0, i32 9
  %39 = ptrtoint ptr %d_sb.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %d_sb.i, align 4
  %call29.i = call fastcc zeroext i1 @mount_too_revealing(ptr noundef %40, ptr noundef nonnull %mnt_flags.i) #22
  br i1 %call29.i, label %do.end.i, label %if.end33.i

do.end.i:                                         ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #24
  %call32.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.84) #29
  br label %err_unlock.i

if.end33.i:                                       ; preds = %if.end27.i
  %phase.i = getelementptr inbounds %struct.fs_context, ptr %36, i32 0, i32 17
  %41 = ptrtoint ptr %phase.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %bf.load.i = load i32, ptr %phase.i, align 4
  %42 = and i32 %bf.load.i, 16711680
  call void @__sanitizer_cov_trace_const_cmp4(i32 131072, i32 %42)
  %cmp34.not.i = icmp eq i32 %42, 131072
  br i1 %cmp34.not.i, label %if.end37.i, label %if.end33.i.err_unlock.i_crit_edge

if.end33.i.err_unlock.i_crit_edge:                ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %err_unlock.i

if.end37.i:                                       ; preds = %if.end33.i
  %sb_flags.i = getelementptr inbounds %struct.fs_context, ptr %36, i32 0, i32 13
  %43 = ptrtoint ptr %sb_flags.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %sb_flags.i, align 4
  %and38.i = and i32 %44, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and38.i)
  %tobool39.not.i = icmp eq i32 %and38.i, 0
  br i1 %tobool39.not.i, label %if.end37.i.if.end41.i_crit_edge, label %if.then40.i

if.end37.i.if.end41.i_crit_edge:                  ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end41.i

if.then40.i:                                      ; preds = %if.end37.i
  %.b13.i.i = load i1, ptr @warn_mandlock.__already_done, align 1
  br i1 %.b13.i.i, label %if.then40.i.if.end41.i_crit_edge, label %if.then.i.i, !prof !352

if.then40.i.if.end41.i_crit_edge:                 ; preds = %if.then40.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end41.i

if.then.i.i:                                      ; preds = %if.then40.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @warn_mandlock.__already_done, align 1
  %call.i117.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.61) #29
  br label %if.end41.i

if.end41.i:                                       ; preds = %if.then.i.i, %if.then40.i.if.end41.i_crit_edge, %if.end37.i.if.end41.i_crit_edge
  %call42.i = tail call ptr @vfs_create_mount(ptr noundef %36) #22
  %45 = ptrtoint ptr %newmount.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %call42.i, ptr %newmount.i, align 4
  %cmp.i.i = icmp ugt ptr %call42.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then46.i, label %if.end49.i

if.then46.i:                                      ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #24
  %46 = ptrtoint ptr %call42.i to i32
  br label %err_unlock.i

if.end49.i:                                       ; preds = %if.end41.i
  %47 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %root.i, align 4
  %tobool.not.i.i = icmp eq ptr %48, null
  br i1 %tobool.not.i.i, label %if.end49.i.dget.exit.i_crit_edge, label %if.then.i118.i

if.end49.i.dget.exit.i_crit_edge:                 ; preds = %if.end49.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %dget.exit.i

if.then.i118.i:                                   ; preds = %if.end49.i
  call void @__sanitizer_cov_trace_pc() #24
  %d_lockref.i.i = getelementptr inbounds %struct.dentry, ptr %48, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i.i) #22
  br label %dget.exit.i

dget.exit.i:                                      ; preds = %if.then.i118.i, %if.end49.i.dget.exit.i_crit_edge
  %49 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %48, ptr %1, align 4
  %50 = ptrtoint ptr %mnt_flags.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %mnt_flags.i, align 4
  %52 = ptrtoint ptr %newmount.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %newmount.i, align 4
  %mnt_flags53.i = getelementptr inbounds %struct.vfsmount, ptr %53, i32 0, i32 2
  %54 = ptrtoint ptr %mnt_flags53.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %51, ptr %mnt_flags53.i, align 4
  tail call void @vfs_clean_context(ptr noundef %36) #22
  %55 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %55, -16384
  %56 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 2
  %57 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %task.i, align 8
  %nsproxy.i = getelementptr inbounds %struct.task_struct, ptr %58, i32 0, i32 110
  %59 = ptrtoint ptr %nsproxy.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %nsproxy.i, align 4
  %mnt_ns.i = getelementptr inbounds %struct.nsproxy, ptr %60, i32 0, i32 3
  %61 = ptrtoint ptr %mnt_ns.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %mnt_ns.i, align 4
  %user_ns.i = getelementptr inbounds %struct.mnt_namespace, ptr %62, i32 0, i32 4
  %63 = ptrtoint ptr %user_ns.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %user_ns.i, align 8
  %call55.i = tail call fastcc ptr @alloc_mnt_ns(ptr noundef %64, i1 noundef zeroext true) #22
  %cmp.i119.i = icmp ugt ptr %call55.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i119.i, label %if.then57.i, label %if.end59.i

if.then57.i:                                      ; preds = %dget.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %65 = ptrtoint ptr %call55.i to i32
  br label %err_path.i

if.end59.i:                                       ; preds = %dget.exit.i
  %66 = ptrtoint ptr %newmount.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %newmount.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %67, i32 -16
  %mnt_ns62.i = getelementptr i8, ptr %67, i32 100
  %68 = ptrtoint ptr %mnt_ns62.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %call55.i, ptr %mnt_ns62.i, align 4
  %root63.i = getelementptr inbounds %struct.mnt_namespace, ptr %call55.i, i32 0, i32 1
  %69 = ptrtoint ptr %root63.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %add.ptr.i.i, ptr %root63.i, align 8
  %mounts.i = getelementptr inbounds %struct.mnt_namespace, ptr %call55.i, i32 0, i32 9
  %70 = ptrtoint ptr %mounts.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 1, ptr %mounts.i, align 8
  %mnt_list.i = getelementptr i8, ptr %67, i32 56
  %list.i = getelementptr inbounds %struct.mnt_namespace, ptr %call55.i, i32 0, i32 2
  %71 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %list.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %mnt_list.i, ptr noundef %list.i, ptr noundef %72) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end59.i.list_add.exit.i_crit_edge

if.end59.i.list_add.exit.i_crit_edge:             ; preds = %if.end59.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add.exit.i

if.end.i.i.i:                                     ; preds = %if.end59.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %72, i32 0, i32 1
  %73 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr %mnt_list.i, ptr %prev1.i.i.i, align 4
  %74 = ptrtoint ptr %mnt_list.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %72, ptr %mnt_list.i, align 4
  %prev3.i.i.i = getelementptr i8, ptr %67, i32 60
  %75 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %list.i, ptr %prev3.i.i.i, align 4
  %76 = ptrtoint ptr %list.i to i32
  call void @__asan_store4_noabort(i32 %76)
  store volatile ptr %mnt_list.i, ptr %list.i, align 4
  br label %list_add.exit.i

list_add.exit.i:                                  ; preds = %if.end.i.i.i, %if.end59.i.list_add.exit.i_crit_edge
  %77 = ptrtoint ptr %newmount.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %newmount.i, align 4
  %tobool.not.i1 = icmp eq ptr %78, null
  br i1 %tobool.not.i1, label %list_add.exit.i.mntget.exit_crit_edge, label %if.then.i

list_add.exit.i.mntget.exit_crit_edge:            ; preds = %list_add.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mntget.exit

if.then.i:                                        ; preds = %list_add.exit.i
  %79 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %mnt_pcp.i.i = getelementptr i8, ptr %78, i32 24
  %80 = ptrtoint ptr %mnt_pcp.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %mnt_pcp.i.i, align 4
  %82 = ptrtoint ptr %81 to i32
  %83 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i2 = and i32 %83, -16384
  %84 = inttoptr i32 %and.i.i.i2 to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %84, i32 0, i32 3
  %85 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %86
  %87 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %88, %82
  %89 = inttoptr i32 %add.i.i to ptr
  %90 = ptrtoint ptr %89 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %89, align 4
  %add13.i.i = add i32 %91, 1
  store i32 %add13.i.i, ptr %89, align 4
  %92 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i.i = and i32 %92, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i3 = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i3, label %if.then.i.i4, label %if.then.i.mnt_add_count.exit.i_crit_edge, !prof !343

if.then.i.mnt_add_count.exit.i_crit_edge:         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_add_count.exit.i

if.then.i.i4:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @warn_bogus_irq_restore() #22
  br label %mnt_add_count.exit.i

mnt_add_count.exit.i:                             ; preds = %if.then.i.i4, %if.then.i.mnt_add_count.exit.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %79) #22, !srcloc !344
  br label %mntget.exit

mntget.exit:                                      ; preds = %mnt_add_count.exit.i, %list_add.exit.i.mntget.exit_crit_edge
  %cred.i = getelementptr inbounds %struct.fs_context, ptr %36, i32 0, i32 8
  %93 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %cred.i, align 4
  %call66.i = call ptr @dentry_open(ptr noundef nonnull %newmount.i, i32 noundef 2097152, ptr noundef %94) #22
  %cmp.i120.i = icmp ugt ptr %call66.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i120.i, label %if.then68.i, label %if.end71.i

if.then68.i:                                      ; preds = %mntget.exit
  call void @__sanitizer_cov_trace_pc() #24
  %95 = ptrtoint ptr %newmount.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %newmount.i, align 4
  call void @dissolve_on_fput(ptr noundef %96) #22
  %97 = ptrtoint ptr %call66.i to i32
  br label %err_path.i

if.end71.i:                                       ; preds = %mntget.exit
  %f_mode.i = getelementptr inbounds %struct.file, ptr %call66.i, i32 0, i32 8
  %98 = ptrtoint ptr %f_mode.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %f_mode.i, align 8
  %or72.i = or i32 %99, 268435456
  store i32 %or72.i, ptr %f_mode.i, align 8
  %and73.i = shl nuw nsw i32 %flags, 19
  %100 = and i32 %and73.i, 524288
  %call75.i = call i32 @get_unused_fd_flags(i32 noundef %100) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call75.i)
  %cmp76.i = icmp sgt i32 %call75.i, -1
  br i1 %cmp76.i, label %if.then78.i, label %if.else.i

if.then78.i:                                      ; preds = %if.end71.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @fd_install(i32 noundef %call75.i, ptr noundef %call66.i) #22
  br label %err_path.i

if.else.i:                                        ; preds = %if.end71.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @fput(ptr noundef %call66.i) #22
  br label %err_path.i

err_path.i:                                       ; preds = %if.else.i, %if.then78.i, %if.then68.i, %if.then57.i
  %ret.0.i = phi i32 [ %65, %if.then57.i ], [ %97, %if.then68.i ], [ %call75.i, %if.then78.i ], [ %call75.i, %if.else.i ]
  call void @path_put(ptr noundef nonnull %newmount.i) #22
  br label %err_unlock.i

err_unlock.i:                                     ; preds = %err_path.i, %if.then46.i, %if.end33.i.err_unlock.i_crit_edge, %do.end.i, %if.end24.i.err_unlock.i_crit_edge
  %ret.1.i = phi i32 [ -1, %do.end.i ], [ -16, %if.end33.i.err_unlock.i_crit_edge ], [ %46, %if.then46.i ], [ %ret.0.i, %err_path.i ], [ -22, %if.end24.i.err_unlock.i_crit_edge ]
  call void @mutex_unlock(ptr noundef %uapi_mutex.i) #22
  br label %err_fsfd.i

err_fsfd.i:                                       ; preds = %err_unlock.i, %if.end18.i.err_fsfd.i_crit_edge, %if.end13.i.err_fsfd.i_crit_edge
  %ret.2.i = phi i32 [ -22, %if.end13.i.err_fsfd.i_crit_edge ], [ %call20.i, %if.end18.i.err_fsfd.i_crit_edge ], [ %ret.1.i, %err_unlock.i ]
  %and.i121.i = and i32 %call.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i121.i)
  %tobool.not.i122.i = icmp eq i32 %and.i121.i, 0
  br i1 %tobool.not.i122.i, label %err_fsfd.i.__do_sys_fsmount.exit_crit_edge, label %if.then.i123.i

err_fsfd.i.__do_sys_fsmount.exit_crit_edge:       ; preds = %err_fsfd.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_fsmount.exit

if.then.i123.i:                                   ; preds = %err_fsfd.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @fput(ptr noundef nonnull %32) #22
  br label %__do_sys_fsmount.exit

__do_sys_fsmount.exit:                            ; preds = %if.then.i123.i, %err_fsfd.i.__do_sys_fsmount.exit_crit_edge, %sw.epilog.i.__do_sys_fsmount.exit_crit_edge, %if.end5.i.__do_sys_fsmount.exit_crit_edge, %if.end.i.__do_sys_fsmount.exit_crit_edge, %entry.__do_sys_fsmount.exit_crit_edge
  %retval.0.i = phi i32 [ -1, %entry.__do_sys_fsmount.exit_crit_edge ], [ -22, %if.end.i.__do_sys_fsmount.exit_crit_edge ], [ -22, %if.end5.i.__do_sys_fsmount.exit_crit_edge ], [ -9, %sw.epilog.i.__do_sys_fsmount.exit_crit_edge ], [ %ret.2.i, %err_fsfd.i.__do_sys_fsmount.exit_crit_edge ], [ %ret.2.i, %if.then.i123.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %mnt_flags.i) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %newmount.i) #22
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_move_mount(i32 noundef %from_dfd, i32 noundef %from_pathname, i32 noundef %to_dfd, i32 noundef %to_pathname, i32 noundef %flags) #1 align 64 {
entry:
  %from_path.i = alloca %struct.path, align 4
  %to_path.i = alloca %struct.path, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %from_pathname to ptr
  %1 = inttoptr i32 %to_pathname to ptr
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %from_path.i) #22
  %2 = ptrtoint ptr %from_path.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %from_path.i, align 4, !annotation !380
  %3 = getelementptr inbounds %struct.path, ptr %from_path.i, i32 0, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr inttoptr (i32 -1 to ptr), ptr %3, align 4, !annotation !380
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %to_path.i) #22
  %5 = ptrtoint ptr %to_path.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr inttoptr (i32 -1 to ptr), ptr %to_path.i, align 4, !annotation !380
  %6 = getelementptr inbounds %struct.path, ptr %to_path.i, i32 0, i32 1
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr inttoptr (i32 -1 to ptr), ptr %6, align 4, !annotation !380
  %8 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %task.i.i, align 8
  %nsproxy.i.i = getelementptr inbounds %struct.task_struct, ptr %11, i32 0, i32 110
  %12 = ptrtoint ptr %nsproxy.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %nsproxy.i.i, align 4
  %mnt_ns.i.i = getelementptr inbounds %struct.nsproxy, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %mnt_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mnt_ns.i.i, align 4
  %user_ns.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %15, i32 0, i32 4
  %16 = ptrtoint ptr %user_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %user_ns.i.i, align 8
  %call1.i.i = tail call zeroext i1 @ns_capable(ptr noundef %17, i32 noundef 21) #22
  br i1 %call1.i.i, label %if.end.i, label %entry.__do_sys_move_mount.exit_crit_edge

entry.__do_sys_move_mount.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_move_mount.exit

if.end.i:                                         ; preds = %entry
  %and.i = and i32 %flags, -376
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end2.i, label %if.end.i.__do_sys_move_mount.exit_crit_edge

if.end.i.__do_sys_move_mount.exit_crit_edge:      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_move_mount.exit

if.end2.i:                                        ; preds = %if.end.i
  %and3.i = and i32 %flags, 1
  %and7.i = shl nuw nsw i32 %flags, 1
  %18 = and i32 %and7.i, 4
  %19 = or i32 %18, %and3.i
  %and12.i = shl nuw nsw i32 %flags, 12
  %20 = and i32 %and12.i, 16384
  %21 = or i32 %19, %20
  %call.i.i = call i32 @user_path_at_empty(i32 noundef %from_dfd, ptr noundef %0, i32 noundef %21, ptr noundef nonnull %from_path.i, ptr noundef null) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i, label %if.end2.i.__do_sys_move_mount.exit_crit_edge, label %if.end19.i

if.end2.i.__do_sys_move_mount.exit_crit_edge:     ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_move_mount.exit

if.end19.i:                                       ; preds = %if.end2.i
  %and20.i = lshr i32 %flags, 4
  %and20.lobit.i = and i32 %and20.i, 1
  %and25.i = lshr i32 %flags, 3
  %22 = and i32 %and25.i, 4
  %23 = or i32 %22, %and20.lobit.i
  %and30.i = shl nuw nsw i32 %flags, 8
  %24 = and i32 %and30.i, 16384
  %25 = or i32 %23, %24
  %call.i71.i = call i32 @user_path_at_empty(i32 noundef %to_dfd, ptr noundef %1, i32 noundef %25, ptr noundef nonnull %to_path.i, ptr noundef null) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i71.i)
  %cmp36.i = icmp slt i32 %call.i71.i, 0
  br i1 %cmp36.i, label %if.end19.i.out_from.i_crit_edge, label %if.end38.i

if.end19.i.out_from.i_crit_edge:                  ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_from.i

if.end38.i:                                       ; preds = %if.end19.i
  %call39.i = call i32 @security_move_mount(ptr noundef nonnull %from_path.i, ptr noundef nonnull %to_path.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call39.i)
  %cmp40.i = icmp slt i32 %call39.i, 0
  br i1 %cmp40.i, label %if.end38.i.out_to.i_crit_edge, label %if.end42.i

if.end38.i.out_to.i_crit_edge:                    ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out_to.i

if.end42.i:                                       ; preds = %if.end38.i
  %and43.i = and i32 %flags, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and43.i)
  %tobool44.not.i = icmp eq i32 %and43.i, 0
  br i1 %tobool44.not.i, label %if.else.i, label %if.then45.i

if.then45.i:                                      ; preds = %if.end42.i
  %26 = ptrtoint ptr %from_path.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %from_path.i, align 4
  %28 = ptrtoint ptr %to_path.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %to_path.i, align 4
  call void @down_write(ptr noundef nonnull @namespace_sem) #22
  %mnt_ns.i.i.i = getelementptr i8, ptr %27, i32 100
  %30 = ptrtoint ptr %mnt_ns.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %mnt_ns.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %31, null
  %cmp.i.i.i.i = icmp ugt ptr %31, inttoptr (i32 -4096 to ptr)
  %tobool.not.i.i = or i1 %tobool.not.i.i.i.i, %cmp.i.i.i.i
  br i1 %tobool.not.i.i, label %if.then45.i.do_set_group.exit.i_crit_edge, label %if.end.i.i

if.then45.i.do_set_group.exit.i_crit_edge:        ; preds = %if.then45.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_set_group.exit.i

if.end.i.i:                                       ; preds = %if.then45.i
  %mnt_ns.i100.i.i = getelementptr i8, ptr %29, i32 100
  %32 = ptrtoint ptr %mnt_ns.i100.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %mnt_ns.i100.i.i, align 4
  %tobool.not.i.i101.i.i = icmp eq ptr %33, null
  %cmp.i.i102.i.i = icmp ugt ptr %33, inttoptr (i32 -4096 to ptr)
  %tobool7.not.i.i = or i1 %tobool.not.i.i101.i.i, %cmp.i.i102.i.i
  br i1 %tobool7.not.i.i, label %if.end.i.i.do_set_group.exit.i_crit_edge, label %if.end9.i.i

if.end.i.i.do_set_group.exit.i_crit_edge:         ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_set_group.exit.i

if.end9.i.i:                                      ; preds = %if.end.i.i
  %user_ns.i72.i = getelementptr inbounds %struct.mnt_namespace, ptr %31, i32 0, i32 4
  %34 = ptrtoint ptr %user_ns.i72.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %user_ns.i72.i, align 8
  %call10.i.i = call zeroext i1 @ns_capable(ptr noundef %35, i32 noundef 21) #22
  br i1 %call10.i.i, label %if.end12.i.i, label %if.end9.i.i.do_set_group.exit.i_crit_edge

if.end9.i.i.do_set_group.exit.i_crit_edge:        ; preds = %if.end9.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_set_group.exit.i

if.end12.i.i:                                     ; preds = %if.end9.i.i
  %36 = ptrtoint ptr %mnt_ns.i100.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %mnt_ns.i100.i.i, align 4
  %user_ns14.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %37, i32 0, i32 4
  %38 = ptrtoint ptr %user_ns14.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %user_ns14.i.i, align 8
  %call15.i.i = call zeroext i1 @ns_capable(ptr noundef %39, i32 noundef 21) #22
  br i1 %call15.i.i, label %if.end17.i.i, label %if.end12.i.i.do_set_group.exit.i_crit_edge

if.end12.i.i.do_set_group.exit.i_crit_edge:       ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_set_group.exit.i

if.end17.i.i:                                     ; preds = %if.end12.i.i
  %40 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %3, align 4
  %42 = ptrtoint ptr %from_path.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %from_path.i, align 4
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %43, align 4
  %cmp.not.i.i = icmp eq ptr %41, %45
  br i1 %cmp.not.i.i, label %if.end20.i.i, label %if.end17.i.i.do_set_group.exit.i_crit_edge

if.end17.i.i.do_set_group.exit.i_crit_edge:       ; preds = %if.end17.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_set_group.exit.i

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %46 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %6, align 4
  %48 = ptrtoint ptr %to_path.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %to_path.i, align 4
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %49, align 4
  %cmp24.not.i.i = icmp eq ptr %47, %51
  br i1 %cmp24.not.i.i, label %if.end26.i.i, label %if.end20.i.i.do_set_group.exit.i_crit_edge

if.end20.i.i.do_set_group.exit.i_crit_edge:       ; preds = %if.end20.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_set_group.exit.i

if.end26.i.i:                                     ; preds = %if.end20.i.i
  %mnt_sb.i.i = getelementptr i8, ptr %27, i32 4
  %52 = ptrtoint ptr %mnt_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %mnt_sb.i.i, align 4
  %mnt_sb29.i.i = getelementptr i8, ptr %29, i32 4
  %54 = ptrtoint ptr %mnt_sb29.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %mnt_sb29.i.i, align 4
  %cmp30.not.i.i = icmp eq ptr %53, %55
  br i1 %cmp30.not.i.i, label %if.end32.i.i, label %if.end26.i.i.do_set_group.exit.i_crit_edge

if.end26.i.i.do_set_group.exit.i_crit_edge:       ; preds = %if.end26.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_set_group.exit.i

if.end32.i.i:                                     ; preds = %if.end26.i.i
  %56 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %29, align 4
  %58 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %27, align 4
  %call37.i.i = call zeroext i1 @is_subdir(ptr noundef %57, ptr noundef %59) #22
  br i1 %call37.i.i, label %if.end39.i.i, label %if.end32.i.i.do_set_group.exit.i_crit_edge

if.end32.i.i.do_set_group.exit.i_crit_edge:       ; preds = %if.end32.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_set_group.exit.i

if.end39.i.i:                                     ; preds = %if.end32.i.i
  %60 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %29, align 4
  %mnt_mounts.i = getelementptr i8, ptr %27, i32 28
  %62 = ptrtoint ptr %mnt_mounts.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %.pn14.i = load ptr, ptr %mnt_mounts.i, align 4
  %cmp.not15.i = icmp eq ptr %.pn14.i, %mnt_mounts.i
  br i1 %cmp.not15.i, label %if.end39.i.i.if.end44.i.i_crit_edge, label %if.end39.i.i.for.body.i_crit_edge

if.end39.i.i.for.body.i_crit_edge:                ; preds = %if.end39.i.i
  br label %for.body.i

if.end39.i.i.if.end44.i.i_crit_edge:              ; preds = %if.end39.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end44.i.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end39.i.i.for.body.i_crit_edge
  %.pn16.i = phi ptr [ %.pn.i, %for.inc.i.for.body.i_crit_edge ], [ %.pn14.i, %if.end39.i.i.for.body.i_crit_edge ]
  %mnt_mountpoint.i = getelementptr i8, ptr %.pn16.i, i32 -40
  %63 = ptrtoint ptr %mnt_mountpoint.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %mnt_mountpoint.i, align 4
  %call.i = call zeroext i1 @is_subdir(ptr noundef %64, ptr noundef %61) #22
  br i1 %call.i, label %if.end.i3, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

if.end.i3:                                        ; preds = %for.body.i
  %mnt_flags.i = getelementptr i8, ptr %.pn16.i, i32 -28
  %65 = ptrtoint ptr %mnt_flags.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %mnt_flags.i, align 4
  %and.i1 = and i32 %66, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i1)
  %tobool.not.i2 = icmp eq i32 %and.i1, 0
  br i1 %tobool.not.i2, label %if.end.i3.for.inc.i_crit_edge, label %if.end.i3.do_set_group.exit.i_crit_edge

if.end.i3.do_set_group.exit.i_crit_edge:          ; preds = %if.end.i3
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_set_group.exit.i

if.end.i3.for.inc.i_crit_edge:                    ; preds = %if.end.i3
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i3.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %67 = ptrtoint ptr %.pn16.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %.pn.i = load ptr, ptr %.pn16.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %mnt_mounts.i
  br i1 %cmp.not.i, label %for.inc.i.if.end44.i.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i

for.inc.i.if.end44.i.i_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end44.i.i

if.end44.i.i:                                     ; preds = %for.inc.i.if.end44.i.i_crit_edge, %if.end39.i.i.if.end44.i.i_crit_edge
  %mnt_flags.i.i = getelementptr i8, ptr %29, i32 8
  %68 = ptrtoint ptr %mnt_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %mnt_flags.i.i, align 4
  %and.i.i = and i32 %69, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool46.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool46.not.i.i, label %lor.lhs.false.i.i, label %if.end44.i.i.do_set_group.exit.i_crit_edge

if.end44.i.i.do_set_group.exit.i_crit_edge:       ; preds = %if.end44.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_set_group.exit.i

lor.lhs.false.i.i:                                ; preds = %if.end44.i.i
  %mnt_master.i.i = getelementptr i8, ptr %29, i32 96
  %70 = ptrtoint ptr %mnt_master.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %mnt_master.i.i, align 4
  %tobool47.not.i.i = icmp eq ptr %71, null
  br i1 %tobool47.not.i.i, label %if.end49.i.i, label %lor.lhs.false.i.i.do_set_group.exit.i_crit_edge

lor.lhs.false.i.i.do_set_group.exit.i_crit_edge:  ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_set_group.exit.i

if.end49.i.i:                                     ; preds = %lor.lhs.false.i.i
  %mnt_flags51.i.i = getelementptr i8, ptr %27, i32 8
  %72 = ptrtoint ptr %mnt_flags51.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %mnt_flags51.i.i, align 4
  %and52.i.i = and i32 %73, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and52.i.i)
  %tobool53.not.i.i = icmp eq i32 %and52.i.i, 0
  br i1 %tobool53.not.i.i, label %land.lhs.true.i.i, label %if.end49.i.i.if.end57.i.i_crit_edge

if.end49.i.i.if.end57.i.i_crit_edge:              ; preds = %if.end49.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end57.i.i

land.lhs.true.i.i:                                ; preds = %if.end49.i.i
  %mnt_master54.i.i = getelementptr i8, ptr %27, i32 96
  %74 = ptrtoint ptr %mnt_master54.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %mnt_master54.i.i, align 4
  %tobool55.not.i.i = icmp eq ptr %75, null
  br i1 %tobool55.not.i.i, label %land.lhs.true.i.i.do_set_group.exit.i_crit_edge, label %land.lhs.true.i.i.if.end57.i.i_crit_edge

land.lhs.true.i.i.if.end57.i.i_crit_edge:         ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end57.i.i

land.lhs.true.i.i.do_set_group.exit.i_crit_edge:  ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_set_group.exit.i

if.end57.i.i:                                     ; preds = %land.lhs.true.i.i.if.end57.i.i_crit_edge, %if.end49.i.i.if.end57.i.i_crit_edge
  %mnt_master58.i.i = getelementptr i8, ptr %27, i32 96
  %76 = ptrtoint ptr %mnt_master58.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %mnt_master58.i.i, align 4
  %tobool59.not.i.i = icmp eq ptr %77, null
  br i1 %tobool59.not.i.i, label %if.end57.i.i.if.end63.i.i_crit_edge, label %if.then60.i.i

if.end57.i.i.if.end63.i.i_crit_edge:              ; preds = %if.end57.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end63.i.i

if.then60.i.i:                                    ; preds = %if.end57.i.i
  %mnt_slave.i.i = getelementptr i8, ptr %29, i32 88
  %mnt_slave_list.i.i = getelementptr inbounds %struct.mount, ptr %77, i32 0, i32 13
  %78 = ptrtoint ptr %mnt_slave_list.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %mnt_slave_list.i.i, align 4
  %call.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %mnt_slave.i.i, ptr noundef %mnt_slave_list.i.i, ptr noundef %79) #22
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %if.then60.i.i.list_add.exit.i.i_crit_edge

if.then60.i.i.list_add.exit.i.i_crit_edge:        ; preds = %if.then60.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add.exit.i.i

if.end.i.i.i.i:                                   ; preds = %if.then60.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %79, i32 0, i32 1
  %80 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr %mnt_slave.i.i, ptr %prev1.i.i.i.i, align 4
  %81 = ptrtoint ptr %mnt_slave.i.i to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr %79, ptr %mnt_slave.i.i, align 4
  %prev3.i.i.i.i = getelementptr i8, ptr %29, i32 92
  %82 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %mnt_slave_list.i.i, ptr %prev3.i.i.i.i, align 4
  %83 = ptrtoint ptr %mnt_slave_list.i.i to i32
  call void @__asan_store4_noabort(i32 %83)
  store volatile ptr %mnt_slave.i.i, ptr %mnt_slave_list.i.i, align 4
  br label %list_add.exit.i.i

list_add.exit.i.i:                                ; preds = %if.end.i.i.i.i, %if.then60.i.i.list_add.exit.i.i_crit_edge
  %84 = ptrtoint ptr %mnt_master.i.i to i32
  call void @__asan_store4_noabort(i32 %84)
  store ptr %77, ptr %mnt_master.i.i, align 4
  br label %if.end63.i.i

if.end63.i.i:                                     ; preds = %list_add.exit.i.i, %if.end57.i.i.if.end63.i.i_crit_edge
  %85 = ptrtoint ptr %mnt_flags51.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %mnt_flags51.i.i, align 4
  %and66.i.i = and i32 %86, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and66.i.i)
  %tobool67.not.i.i = icmp eq i32 %and66.i.i, 0
  br i1 %tobool67.not.i.i, label %if.end63.i.i.do_set_group.exit.i_crit_edge, label %if.then68.i.i

if.end63.i.i.do_set_group.exit.i_crit_edge:       ; preds = %if.end63.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_set_group.exit.i

if.then68.i.i:                                    ; preds = %if.end63.i.i
  %mnt_group_id.i.i = getelementptr i8, ptr %27, i32 136
  %87 = ptrtoint ptr %mnt_group_id.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %mnt_group_id.i.i, align 4
  %mnt_group_id69.i.i = getelementptr i8, ptr %29, i32 136
  %89 = ptrtoint ptr %mnt_group_id69.i.i to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 %88, ptr %mnt_group_id69.i.i, align 4
  %mnt_share.i.i = getelementptr i8, ptr %29, i32 72
  %mnt_share70.i.i = getelementptr i8, ptr %27, i32 72
  %90 = ptrtoint ptr %mnt_share70.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %mnt_share70.i.i, align 4
  %call.i.i105.i.i = call zeroext i1 @__list_add_valid(ptr noundef %mnt_share.i.i, ptr noundef %mnt_share70.i.i, ptr noundef %91) #22
  br i1 %call.i.i105.i.i, label %if.end.i.i108.i.i, label %if.then68.i.i.list_add.exit109.i.i_crit_edge

if.then68.i.i.list_add.exit109.i.i_crit_edge:     ; preds = %if.then68.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add.exit109.i.i

if.end.i.i108.i.i:                                ; preds = %if.then68.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev1.i.i106.i.i = getelementptr inbounds %struct.list_head, ptr %91, i32 0, i32 1
  %92 = ptrtoint ptr %prev1.i.i106.i.i to i32
  call void @__asan_store4_noabort(i32 %92)
  store ptr %mnt_share.i.i, ptr %prev1.i.i106.i.i, align 4
  %93 = ptrtoint ptr %mnt_share.i.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store ptr %91, ptr %mnt_share.i.i, align 4
  %prev3.i.i107.i.i = getelementptr i8, ptr %29, i32 76
  %94 = ptrtoint ptr %prev3.i.i107.i.i to i32
  call void @__asan_store4_noabort(i32 %94)
  store ptr %mnt_share70.i.i, ptr %prev3.i.i107.i.i, align 4
  %95 = ptrtoint ptr %mnt_share70.i.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store volatile ptr %mnt_share.i.i, ptr %mnt_share70.i.i, align 4
  br label %list_add.exit109.i.i

list_add.exit109.i.i:                             ; preds = %if.end.i.i108.i.i, %if.then68.i.i.list_add.exit109.i.i_crit_edge
  call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %96 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %96, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %97 = call ptr @llvm.returnaddress(i32 0) #22
  %98 = ptrtoint ptr %97 to i32
  call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %98) #22
  %99 = ptrtoint ptr %mnt_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %mnt_flags.i.i, align 4
  %and.i.i73.i = and i32 %100, -12289
  %or.i.i.i = or i32 %and.i.i73.i, 4096
  store i32 %or.i.i.i, ptr %mnt_flags.i.i, align 4
  call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %98) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %101 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i = add i32 %101, 1
  store i32 %inc.i.i.i.i, ptr @mount_lock, align 128
  call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  br label %do_set_group.exit.i

do_set_group.exit.i:                              ; preds = %list_add.exit109.i.i, %if.end63.i.i.do_set_group.exit.i_crit_edge, %land.lhs.true.i.i.do_set_group.exit.i_crit_edge, %lor.lhs.false.i.i.do_set_group.exit.i_crit_edge, %if.end44.i.i.do_set_group.exit.i_crit_edge, %if.end.i3.do_set_group.exit.i_crit_edge, %if.end32.i.i.do_set_group.exit.i_crit_edge, %if.end26.i.i.do_set_group.exit.i_crit_edge, %if.end20.i.i.do_set_group.exit.i_crit_edge, %if.end17.i.i.do_set_group.exit.i_crit_edge, %if.end12.i.i.do_set_group.exit.i_crit_edge, %if.end9.i.i.do_set_group.exit.i_crit_edge, %if.end.i.i.do_set_group.exit.i_crit_edge, %if.then45.i.do_set_group.exit.i_crit_edge
  %err.0.i.i = phi i32 [ -22, %if.end17.i.i.do_set_group.exit.i_crit_edge ], [ -22, %if.end20.i.i.do_set_group.exit.i_crit_edge ], [ -22, %if.end26.i.i.do_set_group.exit.i_crit_edge ], [ -22, %if.end44.i.i.do_set_group.exit.i_crit_edge ], [ -22, %lor.lhs.false.i.i.do_set_group.exit.i_crit_edge ], [ -22, %land.lhs.true.i.i.do_set_group.exit.i_crit_edge ], [ -22, %if.end32.i.i.do_set_group.exit.i_crit_edge ], [ -1, %if.end12.i.i.do_set_group.exit.i_crit_edge ], [ -1, %if.end9.i.i.do_set_group.exit.i_crit_edge ], [ -22, %if.end.i.i.do_set_group.exit.i_crit_edge ], [ -22, %if.then45.i.do_set_group.exit.i_crit_edge ], [ 0, %list_add.exit109.i.i ], [ 0, %if.end63.i.i.do_set_group.exit.i_crit_edge ], [ -22, %if.end.i3.do_set_group.exit.i_crit_edge ]
  call fastcc void @namespace_unlock() #22
  br label %out_to.i

if.else.i:                                        ; preds = %if.end42.i
  call void @__sanitizer_cov_trace_pc() #24
  %call47.i = call fastcc i32 @do_move_mount(ptr noundef nonnull %from_path.i, ptr noundef nonnull %to_path.i) #22
  br label %out_to.i

out_to.i:                                         ; preds = %if.else.i, %do_set_group.exit.i, %if.end38.i.out_to.i_crit_edge
  %ret.0.i = phi i32 [ %call39.i, %if.end38.i.out_to.i_crit_edge ], [ %err.0.i.i, %do_set_group.exit.i ], [ %call47.i, %if.else.i ]
  call void @path_put(ptr noundef nonnull %to_path.i) #22
  br label %out_from.i

out_from.i:                                       ; preds = %out_to.i, %if.end19.i.out_from.i_crit_edge
  %ret.1.i = phi i32 [ %call.i71.i, %if.end19.i.out_from.i_crit_edge ], [ %ret.0.i, %out_to.i ]
  call void @path_put(ptr noundef nonnull %from_path.i) #22
  br label %__do_sys_move_mount.exit

__do_sys_move_mount.exit:                         ; preds = %out_from.i, %if.end2.i.__do_sys_move_mount.exit_crit_edge, %if.end.i.__do_sys_move_mount.exit_crit_edge, %entry.__do_sys_move_mount.exit_crit_edge
  %retval.0.i = phi i32 [ %ret.1.i, %out_from.i ], [ -1, %entry.__do_sys_move_mount.exit_crit_edge ], [ -22, %if.end.i.__do_sys_move_mount.exit_crit_edge ], [ %call.i.i, %if.end2.i.__do_sys_move_mount.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %to_path.i) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %from_path.i) #22
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @is_path_reachable(ptr noundef readonly %mnt, ptr noundef %dentry, ptr nocapture noundef readonly %root) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root, align 4
  %mnt117 = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 3
  %cmp.not18 = icmp eq ptr %mnt117, %1
  br i1 %cmp.not18, label %entry.land.rhs6_crit_edge, label %entry.land.rhs_crit_edge

entry.land.rhs_crit_edge:                         ; preds = %entry
  br label %land.rhs

entry.land.rhs6_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs6

land.rhs:                                         ; preds = %while.body.land.rhs_crit_edge, %entry.land.rhs_crit_edge
  %mnt.addr.019 = phi ptr [ %3, %while.body.land.rhs_crit_edge ], [ %mnt, %entry.land.rhs_crit_edge ]
  %mnt_parent.i = getelementptr inbounds %struct.mount, ptr %mnt.addr.019, i32 0, i32 1
  %2 = ptrtoint ptr %mnt_parent.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mnt_parent.i, align 4
  %cmp.i.not = icmp eq ptr %3, %mnt.addr.019
  br i1 %cmp.i.not, label %land.rhs.land.end9_crit_edge, label %while.body

land.rhs.land.end9_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.end9

while.body:                                       ; preds = %land.rhs
  %mnt1 = getelementptr inbounds %struct.mount, ptr %3, i32 0, i32 3
  %cmp.not = icmp eq ptr %mnt1, %1
  br i1 %cmp.not, label %while.cond.land.rhs6_crit_edge, label %while.body.land.rhs_crit_edge

while.body.land.rhs_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs

while.cond.land.rhs6_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  %mnt_mountpoint.le = getelementptr inbounds %struct.mount, ptr %mnt.addr.019, i32 0, i32 2
  %4 = ptrtoint ptr %mnt_mountpoint.le to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mnt_mountpoint.le, align 4
  br label %land.rhs6

land.rhs6:                                        ; preds = %while.cond.land.rhs6_crit_edge, %entry.land.rhs6_crit_edge
  %dentry.addr.0.lcssa = phi ptr [ %5, %while.cond.land.rhs6_crit_edge ], [ %dentry, %entry.land.rhs6_crit_edge ]
  %dentry7 = getelementptr inbounds %struct.path, ptr %root, i32 0, i32 1
  %6 = ptrtoint ptr %dentry7 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dentry7, align 4
  %call8 = tail call zeroext i1 @is_subdir(ptr noundef %dentry.addr.0.lcssa, ptr noundef %7) #22
  br label %land.end9

land.end9:                                        ; preds = %land.rhs6, %land.rhs.land.end9_crit_edge
  %8 = phi i1 [ %call8, %land.rhs6 ], [ false, %land.rhs.land.end9_crit_edge ]
  ret i1 %8
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @path_is_under(ptr nocapture noundef readonly %path1, ptr nocapture noundef readonly %path2) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %0 = ptrtoint ptr %path1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %path1, align 4
  %dentry = getelementptr inbounds %struct.path, ptr %path1, i32 0, i32 1
  %2 = ptrtoint ptr %path2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %path2, align 4
  %cmp.not18.i = icmp eq ptr %1, %3
  br i1 %cmp.not18.i, label %entry.land.rhs6.i_crit_edge, label %land.rhs.i.preheader

entry.land.rhs6.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs6.i

land.rhs.i.preheader:                             ; preds = %entry
  %add.ptr.i = getelementptr i8, ptr %1, i32 -16
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %while.body.i.land.rhs.i_crit_edge, %land.rhs.i.preheader
  %mnt.addr.019.i = phi ptr [ %5, %while.body.i.land.rhs.i_crit_edge ], [ %add.ptr.i, %land.rhs.i.preheader ]
  %mnt_parent.i.i = getelementptr inbounds %struct.mount, ptr %mnt.addr.019.i, i32 0, i32 1
  %4 = ptrtoint ptr %mnt_parent.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mnt_parent.i.i, align 4
  %cmp.i.not.i = icmp eq ptr %5, %mnt.addr.019.i
  br i1 %cmp.i.not.i, label %land.rhs.i.is_path_reachable.exit_crit_edge, label %while.body.i

land.rhs.i.is_path_reachable.exit_crit_edge:      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %is_path_reachable.exit

while.body.i:                                     ; preds = %land.rhs.i
  %mnt1.i = getelementptr inbounds %struct.mount, ptr %5, i32 0, i32 3
  %cmp.not.i = icmp eq ptr %mnt1.i, %3
  br i1 %cmp.not.i, label %while.cond.land.rhs6_crit_edge.i, label %while.body.i.land.rhs.i_crit_edge

while.body.i.land.rhs.i_crit_edge:                ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs.i

while.cond.land.rhs6_crit_edge.i:                 ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #24
  %mnt_mountpoint.le.i = getelementptr inbounds %struct.mount, ptr %mnt.addr.019.i, i32 0, i32 2
  br label %land.rhs6.i

land.rhs6.i:                                      ; preds = %while.cond.land.rhs6_crit_edge.i, %entry.land.rhs6.i_crit_edge
  %dentry.addr.0.lcssa.i.in = phi ptr [ %mnt_mountpoint.le.i, %while.cond.land.rhs6_crit_edge.i ], [ %dentry, %entry.land.rhs6.i_crit_edge ]
  %6 = ptrtoint ptr %dentry.addr.0.lcssa.i.in to i32
  call void @__asan_load4_noabort(i32 %6)
  %dentry.addr.0.lcssa.i = load ptr, ptr %dentry.addr.0.lcssa.i.in, align 4
  %dentry7.i = getelementptr inbounds %struct.path, ptr %path2, i32 0, i32 1
  %7 = ptrtoint ptr %dentry7.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dentry7.i, align 4
  %call8.i = tail call zeroext i1 @is_subdir(ptr noundef %dentry.addr.0.lcssa.i, ptr noundef %8) #22
  br label %is_path_reachable.exit

is_path_reachable.exit:                           ; preds = %land.rhs6.i, %land.rhs.i.is_path_reachable.exit_crit_edge
  %9 = phi i1 [ %call8.i, %land.rhs6.i ], [ false, %land.rhs.i.is_path_reachable.exit_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  ret i1 %9
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_pivot_root(i32 noundef %new_root, i32 noundef %put_old) #1 align 64 {
entry:
  %new.i = alloca %struct.path, align 4
  %old.i = alloca %struct.path, align 4
  %root.i = alloca %struct.path, align 8
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %put_old to ptr
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %new.i) #22
  %1 = ptrtoint ptr %new.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %new.i, align 4, !annotation !380
  %2 = getelementptr inbounds %struct.path, ptr %new.i, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr inttoptr (i32 -1 to ptr), ptr %2, align 4, !annotation !380
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %old.i) #22
  %4 = ptrtoint ptr %old.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr inttoptr (i32 -1 to ptr), ptr %old.i, align 4, !annotation !380
  %5 = getelementptr inbounds %struct.path, ptr %old.i, i32 0, i32 1
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr inttoptr (i32 -1 to ptr), ptr %5, align 4, !annotation !380
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %root.i) #22
  %7 = ptrtoint ptr %root.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr inttoptr (i32 -1 to ptr), ptr %root.i, align 8, !annotation !380
  %8 = getelementptr inbounds %struct.path, ptr %root.i, i32 0, i32 1
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 -1 to ptr), ptr %8, align 4, !annotation !380
  %10 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task.i.i, align 8
  %nsproxy.i.i = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 110
  %14 = ptrtoint ptr %nsproxy.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %nsproxy.i.i, align 4
  %mnt_ns.i.i = getelementptr inbounds %struct.nsproxy, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %mnt_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %mnt_ns.i.i, align 4
  %user_ns.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %17, i32 0, i32 4
  %18 = ptrtoint ptr %user_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %user_ns.i.i, align 8
  %call1.i.i = tail call zeroext i1 @ns_capable(ptr noundef %19, i32 noundef 21) #22
  br i1 %call1.i.i, label %if.end.i, label %entry.__do_sys_pivot_root.exit_crit_edge

entry.__do_sys_pivot_root.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_pivot_root.exit

if.end.i:                                         ; preds = %entry
  %20 = inttoptr i32 %new_root to ptr
  %call.i.i = call i32 @user_path_at_empty(i32 noundef -100, ptr noundef %20, i32 noundef 3, ptr noundef nonnull %new.i, ptr noundef null) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %if.end3.i, label %if.end.i.__do_sys_pivot_root.exit_crit_edge

if.end.i.__do_sys_pivot_root.exit_crit_edge:      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_pivot_root.exit

if.end3.i:                                        ; preds = %if.end.i
  %call.i143.i = call i32 @user_path_at_empty(i32 noundef -100, ptr noundef %0, i32 noundef 3, ptr noundef nonnull %old.i, ptr noundef null) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i143.i)
  %tobool5.not.i = icmp eq i32 %call.i143.i, 0
  br i1 %tobool5.not.i, label %if.end7.i, label %if.end3.i.out1.i_crit_edge

if.end3.i.out1.i_crit_edge:                       ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out1.i

if.end7.i:                                        ; preds = %if.end3.i
  %call8.i = call i32 @security_sb_pivotroot(ptr noundef nonnull %old.i, ptr noundef nonnull %new.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool9.not.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.not.i, label %if.end11.i, label %if.end7.i.out2.i_crit_edge

if.end7.i.out2.i_crit_edge:                       ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out2.i

if.end11.i:                                       ; preds = %if.end7.i
  %21 = call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %23 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %task.i, align 8
  %fs.i = getelementptr inbounds %struct.task_struct, ptr %24, i32 0, i32 107
  %25 = ptrtoint ptr %fs.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %fs.i, align 128
  %lock.i.i = getelementptr inbounds %struct.fs_struct, ptr %26, i32 0, i32 1
  call void @_raw_spin_lock(ptr noundef %lock.i.i) #22
  %root1.i.i = getelementptr inbounds %struct.fs_struct, ptr %26, i32 0, i32 5
  %27 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_loadN_noabort(i32 %27, i32 8)
  %28 = load i64, ptr %root1.i.i, align 4
  %29 = ptrtoint ptr %root.i to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %root.i, align 8
  call void @path_get(ptr noundef nonnull %root.i) #22
  call void @_raw_spin_unlock(ptr noundef %lock.i.i) #22
  %call13.i = call fastcc ptr @lock_mount(ptr noundef nonnull %old.i) #22
  %30 = ptrtoint ptr %call13.i to i32
  %cmp.i.i = icmp ugt ptr %call13.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.end11.i.out3.i_crit_edge, label %if.end17.i

if.end11.i.out3.i_crit_edge:                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out3.i

if.end17.i:                                       ; preds = %if.end11.i
  %31 = ptrtoint ptr %new.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %new.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %32, i32 -16
  %33 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %root.i, align 8
  %add.ptr.i144.i = getelementptr i8, ptr %34, i32 -16
  %35 = ptrtoint ptr %old.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %old.i, align 4
  %add.ptr.i145.i = getelementptr i8, ptr %36, i32 -16
  %mnt_parent.i = getelementptr i8, ptr %32, i32 -8
  %37 = ptrtoint ptr %mnt_parent.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %mnt_parent.i, align 4
  %mnt_parent23.i = getelementptr i8, ptr %34, i32 -8
  %39 = ptrtoint ptr %mnt_parent23.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %mnt_parent23.i, align 4
  %mnt_flags.i = getelementptr i8, ptr %36, i32 8
  %41 = ptrtoint ptr %mnt_flags.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %mnt_flags.i, align 4
  %and.i = and i32 %42, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool25.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool25.not.i, label %lor.lhs.false.i, label %if.end17.i.out4.thread.i_crit_edge

if.end17.i.out4.thread.i_crit_edge:               ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out4.thread.i

lor.lhs.false.i:                                  ; preds = %if.end17.i
  %mnt_flags27.i = getelementptr inbounds %struct.mount, ptr %38, i32 0, i32 3, i32 2
  %43 = ptrtoint ptr %mnt_flags27.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %mnt_flags27.i, align 4
  %and28.i = and i32 %44, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28.i)
  %tobool29.not.i = icmp eq i32 %and28.i, 0
  br i1 %tobool29.not.i, label %lor.lhs.false30.i, label %lor.lhs.false.i.out4.thread.i_crit_edge

lor.lhs.false.i.out4.thread.i_crit_edge:          ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out4.thread.i

lor.lhs.false30.i:                                ; preds = %lor.lhs.false.i
  %mnt_flags32.i = getelementptr inbounds %struct.mount, ptr %40, i32 0, i32 3, i32 2
  %45 = ptrtoint ptr %mnt_flags32.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %mnt_flags32.i, align 4
  %and33.i = and i32 %46, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and33.i)
  %tobool34.not.i = icmp eq i32 %and33.i, 0
  br i1 %tobool34.not.i, label %if.end36.i, label %lor.lhs.false30.i.out4.thread.i_crit_edge

lor.lhs.false30.i.out4.thread.i_crit_edge:        ; preds = %lor.lhs.false30.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out4.thread.i

if.end36.i:                                       ; preds = %lor.lhs.false30.i
  %mnt_ns.i146.i = getelementptr i8, ptr %34, i32 100
  %47 = ptrtoint ptr %mnt_ns.i146.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %mnt_ns.i146.i, align 4
  %49 = call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i147.i = and i32 %49, -16384
  %50 = inttoptr i32 %and.i.i147.i to ptr
  %task.i148.i = getelementptr inbounds %struct.thread_info, ptr %50, i32 0, i32 2
  %51 = ptrtoint ptr %task.i148.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %task.i148.i, align 8
  %nsproxy.i149.i = getelementptr inbounds %struct.task_struct, ptr %52, i32 0, i32 110
  %53 = ptrtoint ptr %nsproxy.i149.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %nsproxy.i149.i, align 4
  %mnt_ns1.i.i = getelementptr inbounds %struct.nsproxy, ptr %54, i32 0, i32 3
  %55 = ptrtoint ptr %mnt_ns1.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %mnt_ns1.i.i, align 4
  %cmp.i150.not.i = icmp eq ptr %48, %56
  br i1 %cmp.i150.not.i, label %lor.lhs.false39.i, label %if.end36.i.out4.thread.i_crit_edge

if.end36.i.out4.thread.i_crit_edge:               ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out4.thread.i

lor.lhs.false39.i:                                ; preds = %if.end36.i
  %mnt_ns.i151.i = getelementptr i8, ptr %32, i32 100
  %57 = ptrtoint ptr %mnt_ns.i151.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %mnt_ns.i151.i, align 4
  %cmp.i156.not.i = icmp eq ptr %58, %48
  br i1 %cmp.i156.not.i, label %if.end43.i, label %lor.lhs.false39.i.out4.thread.i_crit_edge

lor.lhs.false39.i.out4.thread.i_crit_edge:        ; preds = %lor.lhs.false39.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out4.thread.i

if.end43.i:                                       ; preds = %lor.lhs.false39.i
  %mnt_flags45.i = getelementptr i8, ptr %32, i32 8
  %59 = ptrtoint ptr %mnt_flags45.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %mnt_flags45.i, align 4
  %and46.i = and i32 %60, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and46.i)
  %tobool47.not.i = icmp eq i32 %and46.i, 0
  br i1 %tobool47.not.i, label %if.end49.i, label %if.end43.i.out4.thread.i_crit_edge

if.end43.i.out4.thread.i_crit_edge:               ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out4.thread.i

if.end49.i:                                       ; preds = %if.end43.i
  %61 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %2, align 4
  %pprev.i.i.i.i = getelementptr inbounds %struct.dentry, ptr %62, i32 0, i32 2, i32 1
  %63 = ptrtoint ptr %pprev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %pprev.i.i.i.i, align 4
  %tobool.not.i.i.not.i.i = icmp eq ptr %64, null
  br i1 %tobool.not.i.i.not.i.i, label %d_unlinked.exit.i, label %if.end49.i.if.end53.i_crit_edge

if.end49.i.if.end53.i_crit_edge:                  ; preds = %if.end49.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end53.i

d_unlinked.exit.i:                                ; preds = %if.end49.i
  %d_parent.i.i = getelementptr inbounds %struct.dentry, ptr %62, i32 0, i32 3
  %65 = ptrtoint ptr %d_parent.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %d_parent.i.i, align 8
  %cmp.i158.not.i = icmp eq ptr %66, %62
  br i1 %cmp.i158.not.i, label %d_unlinked.exit.i.if.end53.i_crit_edge, label %d_unlinked.exit.i.out4.thread.i_crit_edge

d_unlinked.exit.i.out4.thread.i_crit_edge:        ; preds = %d_unlinked.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out4.thread.i

d_unlinked.exit.i.if.end53.i_crit_edge:           ; preds = %d_unlinked.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end53.i

if.end53.i:                                       ; preds = %d_unlinked.exit.i.if.end53.i_crit_edge, %if.end49.i.if.end53.i_crit_edge
  %cmp.i = icmp eq ptr %32, %34
  %cmp55.i = icmp eq ptr %36, %34
  %or.cond.i = select i1 %cmp.i, i1 true, i1 %cmp55.i
  br i1 %or.cond.i, label %if.end53.i.out4.thread.i_crit_edge, label %if.end57.i

if.end53.i.out4.thread.i_crit_edge:               ; preds = %if.end53.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out4.thread.i

if.end57.i:                                       ; preds = %if.end53.i
  %67 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %34, align 4
  %69 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %8, align 4
  %cmp60.not.i = icmp ne ptr %68, %70
  %cmp.i159.not.i = icmp eq ptr %40, %add.ptr.i144.i
  %or.cond184.i = select i1 %cmp60.not.i, i1 true, i1 %cmp.i159.not.i
  br i1 %or.cond184.i, label %if.end57.i.out4.thread.i_crit_edge, label %if.end66.i

if.end57.i.out4.thread.i_crit_edge:               ; preds = %if.end57.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out4.thread.i

if.end66.i:                                       ; preds = %if.end57.i
  %71 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %32, align 4
  %cmp70.not.i = icmp ne ptr %72, %62
  %cmp.i162.not.i = icmp eq ptr %38, %add.ptr.i.i
  %or.cond185.i = select i1 %cmp70.not.i, i1 true, i1 %cmp.i162.not.i
  br i1 %or.cond185.i, label %if.end66.i.out4.thread.i_crit_edge, label %if.end76.i

if.end66.i.out4.thread.i_crit_edge:               ; preds = %if.end66.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out4.thread.i

if.end76.i:                                       ; preds = %if.end66.i
  %73 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %5, align 4
  %cmp.not18.i.i = icmp eq ptr %36, %32
  br i1 %cmp.not18.i.i, label %if.end76.i.is_path_reachable.exit.i_crit_edge, label %if.end76.i.land.rhs.i164.i_crit_edge

if.end76.i.land.rhs.i164.i_crit_edge:             ; preds = %if.end76.i
  br label %land.rhs.i164.i

if.end76.i.is_path_reachable.exit.i_crit_edge:    ; preds = %if.end76.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %is_path_reachable.exit.i

land.rhs.i164.i:                                  ; preds = %while.body.i.i.land.rhs.i164.i_crit_edge, %if.end76.i.land.rhs.i164.i_crit_edge
  %mnt.addr.019.i.i = phi ptr [ %76, %while.body.i.i.land.rhs.i164.i_crit_edge ], [ %add.ptr.i145.i, %if.end76.i.land.rhs.i164.i_crit_edge ]
  %mnt_parent.i.i.i = getelementptr inbounds %struct.mount, ptr %mnt.addr.019.i.i, i32 0, i32 1
  %75 = ptrtoint ptr %mnt_parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %mnt_parent.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %76, %mnt.addr.019.i.i
  br i1 %cmp.i.not.i.i, label %land.rhs.i164.i.out4.thread.i_crit_edge, label %while.body.i.i

land.rhs.i164.i.out4.thread.i_crit_edge:          ; preds = %land.rhs.i164.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out4.thread.i

while.body.i.i:                                   ; preds = %land.rhs.i164.i
  %mnt1.i.i = getelementptr inbounds %struct.mount, ptr %76, i32 0, i32 3
  %cmp.not.i.i = icmp eq ptr %mnt1.i.i, %32
  br i1 %cmp.not.i.i, label %while.cond.land.rhs6_crit_edge.i.i, label %while.body.i.i.land.rhs.i164.i_crit_edge

while.body.i.i.land.rhs.i164.i_crit_edge:         ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs.i164.i

while.cond.land.rhs6_crit_edge.i.i:               ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %mnt_mountpoint.le.i.i = getelementptr inbounds %struct.mount, ptr %mnt.addr.019.i.i, i32 0, i32 2
  %77 = ptrtoint ptr %mnt_mountpoint.le.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %mnt_mountpoint.le.i.i, align 4
  br label %is_path_reachable.exit.i

is_path_reachable.exit.i:                         ; preds = %while.cond.land.rhs6_crit_edge.i.i, %if.end76.i.is_path_reachable.exit.i_crit_edge
  %dentry.addr.0.lcssa.i.i = phi ptr [ %78, %while.cond.land.rhs6_crit_edge.i.i ], [ %74, %if.end76.i.is_path_reachable.exit.i_crit_edge ]
  %call8.i.i = call zeroext i1 @is_subdir(ptr noundef %dentry.addr.0.lcssa.i.i, ptr noundef %62) #22
  br i1 %call8.i.i, label %if.end80.i, label %is_path_reachable.exit.i.out4.thread.i_crit_edge

is_path_reachable.exit.i.out4.thread.i_crit_edge: ; preds = %is_path_reachable.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out4.thread.i

if.end80.i:                                       ; preds = %is_path_reachable.exit.i
  %79 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %2, align 4
  %81 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %root.i, align 8
  %cmp.not18.i166.i = icmp eq ptr %32, %82
  br i1 %cmp.not18.i166.i, label %if.end80.i.is_path_reachable.exit180.i_crit_edge, label %if.end80.i.land.rhs.i170.i_crit_edge

if.end80.i.land.rhs.i170.i_crit_edge:             ; preds = %if.end80.i
  br label %land.rhs.i170.i

if.end80.i.is_path_reachable.exit180.i_crit_edge: ; preds = %if.end80.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %is_path_reachable.exit180.i

land.rhs.i170.i:                                  ; preds = %while.body.i173.i.land.rhs.i170.i_crit_edge, %if.end80.i.land.rhs.i170.i_crit_edge
  %mnt.addr.019.i167.i = phi ptr [ %84, %while.body.i173.i.land.rhs.i170.i_crit_edge ], [ %add.ptr.i.i, %if.end80.i.land.rhs.i170.i_crit_edge ]
  %mnt_parent.i.i168.i = getelementptr inbounds %struct.mount, ptr %mnt.addr.019.i167.i, i32 0, i32 1
  %83 = ptrtoint ptr %mnt_parent.i.i168.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %mnt_parent.i.i168.i, align 4
  %cmp.i.not.i169.i = icmp eq ptr %84, %mnt.addr.019.i167.i
  br i1 %cmp.i.not.i169.i, label %land.rhs.i170.i.out4.thread.i_crit_edge, label %while.body.i173.i

land.rhs.i170.i.out4.thread.i_crit_edge:          ; preds = %land.rhs.i170.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out4.thread.i

while.body.i173.i:                                ; preds = %land.rhs.i170.i
  %mnt1.i171.i = getelementptr inbounds %struct.mount, ptr %84, i32 0, i32 3
  %cmp.not.i172.i = icmp eq ptr %mnt1.i171.i, %82
  br i1 %cmp.not.i172.i, label %while.cond.land.rhs6_crit_edge.i175.i, label %while.body.i173.i.land.rhs.i170.i_crit_edge

while.body.i173.i.land.rhs.i170.i_crit_edge:      ; preds = %while.body.i173.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs.i170.i

while.cond.land.rhs6_crit_edge.i175.i:            ; preds = %while.body.i173.i
  call void @__sanitizer_cov_trace_pc() #24
  %mnt_mountpoint.le.i174.i = getelementptr inbounds %struct.mount, ptr %mnt.addr.019.i167.i, i32 0, i32 2
  %85 = ptrtoint ptr %mnt_mountpoint.le.i174.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %mnt_mountpoint.le.i174.i, align 4
  br label %is_path_reachable.exit180.i

is_path_reachable.exit180.i:                      ; preds = %while.cond.land.rhs6_crit_edge.i175.i, %if.end80.i.is_path_reachable.exit180.i_crit_edge
  %dentry.addr.0.lcssa.i176.i = phi ptr [ %86, %while.cond.land.rhs6_crit_edge.i175.i ], [ %80, %if.end80.i.is_path_reachable.exit180.i_crit_edge ]
  %87 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %8, align 4
  %call8.i178.i = call zeroext i1 @is_subdir(ptr noundef %dentry.addr.0.lcssa.i176.i, ptr noundef %88) #22
  br i1 %call8.i178.i, label %if.end84.i, label %is_path_reachable.exit180.i.out4.thread.i_crit_edge

is_path_reachable.exit180.i.out4.thread.i_crit_edge: ; preds = %is_path_reachable.exit180.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out4.thread.i

if.end84.i:                                       ; preds = %is_path_reachable.exit180.i
  call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %89 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %89, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %90 = call ptr @llvm.returnaddress(i32 0) #22
  %91 = ptrtoint ptr %90 to i32
  call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %91) #22
  call fastcc void @umount_mnt(ptr noundef %add.ptr.i.i) #22
  %92 = ptrtoint ptr %mnt_parent23.i to i32
  call void @__asan_store4_noabort(i32 %92)
  store ptr %add.ptr.i144.i, ptr %mnt_parent23.i, align 4
  %93 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %34, align 4
  %mnt_mountpoint.i = getelementptr i8, ptr %34, i32 -4
  %95 = ptrtoint ptr %mnt_mountpoint.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store ptr %94, ptr %mnt_mountpoint.i, align 4
  %mnt_child.i = getelementptr i8, ptr %34, i32 36
  %call.i.i.i9 = call zeroext i1 @__list_del_entry_valid(ptr noundef %mnt_child.i) #22
  br i1 %call.i.i.i9, label %if.end.i.i.i12, label %if.end84.i.list_del_init.exit.i_crit_edge

if.end84.i.list_del_init.exit.i_crit_edge:        ; preds = %if.end84.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_init.exit.i

if.end.i.i.i12:                                   ; preds = %if.end84.i
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i.i10 = getelementptr i8, ptr %34, i32 40
  %96 = ptrtoint ptr %prev.i.i.i10 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %prev.i.i.i10, align 4
  %98 = ptrtoint ptr %mnt_child.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %mnt_child.i, align 4
  %prev1.i.i.i.i11 = getelementptr inbounds %struct.list_head, ptr %99, i32 0, i32 1
  %100 = ptrtoint ptr %prev1.i.i.i.i11 to i32
  call void @__asan_store4_noabort(i32 %100)
  store ptr %97, ptr %prev1.i.i.i.i11, align 4
  %101 = ptrtoint ptr %97 to i32
  call void @__asan_store4_noabort(i32 %101)
  store volatile ptr %99, ptr %97, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i12, %if.end84.i.list_del_init.exit.i_crit_edge
  %102 = ptrtoint ptr %mnt_child.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store volatile ptr %mnt_child.i, ptr %mnt_child.i, align 4
  %prev.i3.i.i13 = getelementptr i8, ptr %34, i32 40
  %103 = ptrtoint ptr %prev.i3.i.i13 to i32
  call void @__asan_store4_noabort(i32 %103)
  store ptr %mnt_child.i, ptr %prev.i3.i.i13, align 4
  %pprev.i.i.i = getelementptr i8, ptr %34, i32 -12
  %104 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %pprev.i.i.i, align 4
  %tobool.not.i.not.i.i14 = icmp eq ptr %105, null
  br i1 %tobool.not.i.not.i.i14, label %list_del_init.exit.i.hlist_del_init_rcu.exit.i_crit_edge, label %if.then.i.i15

list_del_init.exit.i.hlist_del_init_rcu.exit.i_crit_edge: ; preds = %list_del_init.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del_init_rcu.exit.i

if.then.i.i15:                                    ; preds = %list_del_init.exit.i
  %106 = ptrtoint ptr %add.ptr.i144.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %add.ptr.i144.i, align 4
  %108 = ptrtoint ptr %105 to i32
  call void @__asan_store4_noabort(i32 %108)
  store volatile ptr %107, ptr %105, align 4
  %tobool.not.i7.i.i = icmp eq ptr %107, null
  br i1 %tobool.not.i7.i.i, label %if.then.i.i15.__hlist_del.exit.i.i_crit_edge, label %do.body13.i.i.i

if.then.i.i15.__hlist_del.exit.i.i_crit_edge:     ; preds = %if.then.i.i15
  call void @__sanitizer_cov_trace_pc() #24
  br label %__hlist_del.exit.i.i

do.body13.i.i.i:                                  ; preds = %if.then.i.i15
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %107, i32 0, i32 1
  %109 = ptrtoint ptr %pprev14.i.i.i to i32
  call void @__asan_store4_noabort(i32 %109)
  store volatile ptr %105, ptr %pprev14.i.i.i, align 4
  br label %__hlist_del.exit.i.i

__hlist_del.exit.i.i:                             ; preds = %do.body13.i.i.i, %if.then.i.i15.__hlist_del.exit.i.i_crit_edge
  %110 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %110)
  store volatile ptr null, ptr %pprev.i.i.i, align 4
  br label %hlist_del_init_rcu.exit.i

hlist_del_init_rcu.exit.i:                        ; preds = %__hlist_del.exit.i.i, %list_del_init.exit.i.hlist_del_init_rcu.exit.i_crit_edge
  %111 = getelementptr i8, ptr %34, i32 108
  %pprev.i.i11.i = getelementptr i8, ptr %34, i32 112
  %112 = ptrtoint ptr %pprev.i.i11.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %pprev.i.i11.i, align 4
  %tobool.not.i.not.i12.i = icmp eq ptr %113, null
  br i1 %tobool.not.i.not.i12.i, label %hlist_del_init_rcu.exit.i.unhash_mnt.exit_crit_edge, label %if.then.i13.i

hlist_del_init_rcu.exit.i.unhash_mnt.exit_crit_edge: ; preds = %hlist_del_init_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %unhash_mnt.exit

if.then.i13.i:                                    ; preds = %hlist_del_init_rcu.exit.i
  %114 = ptrtoint ptr %111 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %111, align 4
  %116 = ptrtoint ptr %113 to i32
  call void @__asan_store4_noabort(i32 %116)
  store volatile ptr %115, ptr %113, align 4
  %tobool.not.i3.i.i = icmp eq ptr %115, null
  br i1 %tobool.not.i3.i.i, label %if.then.i13.i.__hlist_del.exit.i16.i_crit_edge, label %do.body13.i.i15.i

if.then.i13.i.__hlist_del.exit.i16.i_crit_edge:   ; preds = %if.then.i13.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__hlist_del.exit.i16.i

do.body13.i.i15.i:                                ; preds = %if.then.i13.i
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i14.i = getelementptr inbounds %struct.hlist_node, ptr %115, i32 0, i32 1
  %117 = ptrtoint ptr %pprev14.i.i14.i to i32
  call void @__asan_store4_noabort(i32 %117)
  store volatile ptr %113, ptr %pprev14.i.i14.i, align 4
  br label %__hlist_del.exit.i16.i

__hlist_del.exit.i16.i:                           ; preds = %do.body13.i.i15.i, %if.then.i13.i.__hlist_del.exit.i16.i_crit_edge
  %118 = ptrtoint ptr %111 to i32
  call void @__asan_store4_noabort(i32 %118)
  store ptr null, ptr %111, align 4
  %119 = ptrtoint ptr %pprev.i.i11.i to i32
  call void @__asan_store4_noabort(i32 %119)
  store ptr null, ptr %pprev.i.i11.i, align 4
  br label %unhash_mnt.exit

unhash_mnt.exit:                                  ; preds = %__hlist_del.exit.i16.i, %hlist_del_init_rcu.exit.i.unhash_mnt.exit_crit_edge
  %mnt_mp.i = getelementptr i8, ptr %34, i32 104
  %120 = ptrtoint ptr %mnt_mp.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %mnt_mp.i, align 4
  store ptr null, ptr %mnt_mp.i, align 4
  %mnt_flags87.i = getelementptr i8, ptr %34, i32 8
  %122 = ptrtoint ptr %mnt_flags87.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %mnt_flags87.i, align 4
  %and88.i = and i32 %123, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and88.i)
  %tobool89.not.i = icmp eq i32 %and88.i, 0
  br i1 %tobool89.not.i, label %unhash_mnt.exit.if.end96.i_crit_edge, label %if.then90.i

unhash_mnt.exit.if.end96.i_crit_edge:             ; preds = %unhash_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end96.i

if.then90.i:                                      ; preds = %unhash_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  %124 = ptrtoint ptr %mnt_flags45.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %mnt_flags45.i, align 4
  %or.i = or i32 %125, 8388608
  store i32 %or.i, ptr %mnt_flags45.i, align 4
  %126 = ptrtoint ptr %mnt_flags87.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %mnt_flags87.i, align 4
  %and95.i = and i32 %127, -8388609
  store i32 %and95.i, ptr %mnt_flags87.i, align 4
  br label %if.end96.i

if.end96.i:                                       ; preds = %if.then90.i, %unhash_mnt.exit.if.end96.i_crit_edge
  call fastcc void @attach_mnt(ptr noundef %add.ptr.i144.i, ptr noundef %add.ptr.i145.i, ptr noundef %call13.i) #22
  call fastcc void @attach_mnt(ptr noundef %add.ptr.i.i, ptr noundef %40, ptr noundef %121) #22
  %128 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %mnt_pcp.i = getelementptr inbounds %struct.mount, ptr %40, i32 0, i32 5
  %129 = ptrtoint ptr %mnt_pcp.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %mnt_pcp.i, align 4
  %131 = ptrtoint ptr %130 to i32
  %132 = call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i4 = and i32 %132, -16384
  %133 = inttoptr i32 %and.i.i4 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %133, i32 0, i32 3
  %134 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %135
  %136 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %137, %131
  %138 = inttoptr i32 %add.i to ptr
  %139 = ptrtoint ptr %138 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %138, align 4
  %add13.i = add i32 %140, -1
  store i32 %add13.i, ptr %138, align 4
  %141 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i5 = and i32 %141, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i5)
  %tobool.not.i6 = icmp eq i32 %and.i.i.i5, 0
  br i1 %tobool.not.i6, label %if.then.i7, label %if.end96.i.mnt_add_count.exit_crit_edge, !prof !343

if.end96.i.mnt_add_count.exit_crit_edge:          ; preds = %if.end96.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_add_count.exit

if.then.i7:                                       ; preds = %if.end96.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @warn_bogus_irq_restore() #22
  br label %mnt_add_count.exit

mnt_add_count.exit:                               ; preds = %if.then.i7, %if.end96.i.mnt_add_count.exit_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %128) #22, !srcloc !344
  %142 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %task.i, align 8
  %nsproxy.i = getelementptr inbounds %struct.task_struct, ptr %143, i32 0, i32 110
  %144 = ptrtoint ptr %nsproxy.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %nsproxy.i, align 4
  %mnt_ns.i = getelementptr inbounds %struct.nsproxy, ptr %145, i32 0, i32 3
  %146 = ptrtoint ptr %mnt_ns.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %mnt_ns.i, align 4
  %tobool.not.i2 = icmp eq ptr %147, null
  br i1 %tobool.not.i2, label %mnt_add_count.exit.touch_mnt_namespace.exit_crit_edge, label %if.then.i

mnt_add_count.exit.touch_mnt_namespace.exit_crit_edge: ; preds = %mnt_add_count.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %touch_mnt_namespace.exit

if.then.i:                                        ; preds = %mnt_add_count.exit
  call void @__sanitizer_cov_trace_pc() #24
  %148 = load i64, ptr @event, align 8
  %inc.i = add i64 %148, 1
  store i64 %inc.i, ptr @event, align 8
  %event.i = getelementptr inbounds %struct.mnt_namespace, ptr %147, i32 0, i32 8
  %149 = ptrtoint ptr %event.i to i32
  call void @__asan_store8_noabort(i32 %149)
  store i64 %inc.i, ptr %event.i, align 8
  %poll.i = getelementptr inbounds %struct.mnt_namespace, ptr %147, i32 0, i32 7
  call void @__wake_up(ptr noundef %poll.i, i32 noundef 1, i32 noundef 1, ptr noundef null) #22
  br label %touch_mnt_namespace.exit

touch_mnt_namespace.exit:                         ; preds = %if.then.i, %mnt_add_count.exit.touch_mnt_namespace.exit_crit_edge
  %mnt_expire.i = getelementptr i8, ptr %32, i32 64
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %mnt_expire.i) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %touch_mnt_namespace.exit.if.then100.i_crit_edge

touch_mnt_namespace.exit.if.then100.i_crit_edge:  ; preds = %touch_mnt_namespace.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then100.i

if.end.i.i.i:                                     ; preds = %touch_mnt_namespace.exit
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i.i = getelementptr i8, ptr %32, i32 68
  %150 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %prev.i.i.i, align 4
  %152 = ptrtoint ptr %mnt_expire.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %mnt_expire.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %153, i32 0, i32 1
  %154 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %154)
  store ptr %151, ptr %prev1.i.i.i.i, align 4
  %155 = ptrtoint ptr %151 to i32
  call void @__asan_store4_noabort(i32 %155)
  store volatile ptr %153, ptr %151, align 4
  br label %if.then100.i

out4.thread.i:                                    ; preds = %is_path_reachable.exit180.i.out4.thread.i_crit_edge, %land.rhs.i170.i.out4.thread.i_crit_edge, %is_path_reachable.exit.i.out4.thread.i_crit_edge, %land.rhs.i164.i.out4.thread.i_crit_edge, %if.end66.i.out4.thread.i_crit_edge, %if.end57.i.out4.thread.i_crit_edge, %if.end53.i.out4.thread.i_crit_edge, %d_unlinked.exit.i.out4.thread.i_crit_edge, %if.end43.i.out4.thread.i_crit_edge, %lor.lhs.false39.i.out4.thread.i_crit_edge, %if.end36.i.out4.thread.i_crit_edge, %lor.lhs.false30.i.out4.thread.i_crit_edge, %lor.lhs.false.i.out4.thread.i_crit_edge, %if.end17.i.out4.thread.i_crit_edge
  %error.0.ph.i = phi i32 [ -22, %lor.lhs.false30.i.out4.thread.i_crit_edge ], [ -22, %lor.lhs.false.i.out4.thread.i_crit_edge ], [ -22, %if.end17.i.out4.thread.i_crit_edge ], [ -22, %lor.lhs.false39.i.out4.thread.i_crit_edge ], [ -22, %if.end36.i.out4.thread.i_crit_edge ], [ -22, %if.end43.i.out4.thread.i_crit_edge ], [ -2, %d_unlinked.exit.i.out4.thread.i_crit_edge ], [ -16, %if.end53.i.out4.thread.i_crit_edge ], [ -22, %if.end57.i.out4.thread.i_crit_edge ], [ -22, %if.end66.i.out4.thread.i_crit_edge ], [ -22, %is_path_reachable.exit.i.out4.thread.i_crit_edge ], [ -22, %is_path_reachable.exit180.i.out4.thread.i_crit_edge ], [ -22, %land.rhs.i170.i.out4.thread.i_crit_edge ], [ -22, %land.rhs.i164.i.out4.thread.i_crit_edge ]
  call fastcc void @unlock_mount(ptr noundef %call13.i) #22
  br label %out3.i

if.then100.i:                                     ; preds = %if.end.i.i.i, %touch_mnt_namespace.exit.if.then100.i_crit_edge
  %156 = ptrtoint ptr %mnt_expire.i to i32
  call void @__asan_store4_noabort(i32 %156)
  store volatile ptr %mnt_expire.i, ptr %mnt_expire.i, align 4
  %prev.i3.i.i = getelementptr i8, ptr %32, i32 68
  %157 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %157)
  store ptr %mnt_expire.i, ptr %prev.i3.i.i, align 4
  %m_count.i.i = getelementptr inbounds %struct.mountpoint, ptr %121, i32 0, i32 3
  %158 = ptrtoint ptr %m_count.i.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %m_count.i.i, align 4
  %dec.i.i = add i32 %159, -1
  store i32 %dec.i.i, ptr %m_count.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i.i)
  %tobool.not.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.then100.i.put_mountpoint.exit_crit_edge

if.then100.i.put_mountpoint.exit_crit_edge:       ; preds = %if.then100.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_mountpoint.exit

if.then.i.i:                                      ; preds = %if.then100.i
  %m_dentry.i.i = getelementptr inbounds %struct.mountpoint, ptr %121, i32 0, i32 1
  %160 = ptrtoint ptr %m_dentry.i.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %m_dentry.i.i, align 4
  %m_list.i.i = getelementptr inbounds %struct.mountpoint, ptr %121, i32 0, i32 2
  %162 = ptrtoint ptr %m_list.i.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load volatile ptr, ptr %m_list.i.i, align 4
  %tobool.not.i.not.i.i = icmp eq ptr %163, null
  br i1 %tobool.not.i.not.i.i, label %do.end11.i.i, label %do.body6.i.i, !prof !352

do.body6.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #24
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namespace.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 821, 0\0A.popsection", ""() #22, !srcloc !370
  unreachable

do.end11.i.i:                                     ; preds = %if.then.i.i
  %d_lockref.i.i = getelementptr inbounds %struct.dentry, ptr %161, i32 0, i32 7
  call void @_raw_spin_lock(ptr noundef %d_lockref.i.i) #22
  %164 = ptrtoint ptr %161 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %161, align 8
  %and.i.i1 = and i32 %165, -65537
  store i32 %and.i.i1, ptr %161, align 8
  call void @_raw_spin_unlock(ptr noundef %d_lockref.i.i) #22
  call void @dput_to_list(ptr noundef %161, ptr noundef nonnull @ex_mountpoints) #22
  %166 = ptrtoint ptr %121 to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %121, align 4
  %pprev2.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %121, i32 0, i32 1
  %168 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %pprev2.i.i.i.i, align 4
  %170 = ptrtoint ptr %169 to i32
  call void @__asan_store4_noabort(i32 %170)
  store volatile ptr %167, ptr %169, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %167, null
  br i1 %tobool.not.i.i.i.i, label %do.end11.i.i.hlist_del.exit.i.i_crit_edge, label %do.body13.i.i.i.i

do.end11.i.i.hlist_del.exit.i.i_crit_edge:        ; preds = %do.end11.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del.exit.i.i

do.body13.i.i.i.i:                                ; preds = %do.end11.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %167, i32 0, i32 1
  %171 = ptrtoint ptr %pprev14.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %171)
  store volatile ptr %169, ptr %pprev14.i.i.i.i, align 4
  br label %hlist_del.exit.i.i

hlist_del.exit.i.i:                               ; preds = %do.body13.i.i.i.i, %do.end11.i.i.hlist_del.exit.i.i_crit_edge
  %172 = ptrtoint ptr %121 to i32
  call void @__asan_store4_noabort(i32 %172)
  store ptr inttoptr (i32 256 to ptr), ptr %121, align 4
  %173 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %173)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i.i, align 4
  call void @kfree(ptr noundef %121) #22
  br label %put_mountpoint.exit

put_mountpoint.exit:                              ; preds = %hlist_del.exit.i.i, %if.then100.i.put_mountpoint.exit_crit_edge
  call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %91) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %174 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i = add i32 %174, 1
  store i32 %inc.i.i.i.i, ptr @mount_lock, align 128
  call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  call void @chroot_fs_refs(ptr noundef nonnull %root.i, ptr noundef nonnull %new.i) #22
  call fastcc void @unlock_mount(ptr noundef %call13.i) #22
  call fastcc void @mntput_no_expire(ptr noundef %38) #22
  br label %out3.i

out3.i:                                           ; preds = %put_mountpoint.exit, %out4.thread.i, %if.end11.i.out3.i_crit_edge
  %error.1.i = phi i32 [ %30, %if.end11.i.out3.i_crit_edge ], [ 0, %put_mountpoint.exit ], [ %error.0.ph.i, %out4.thread.i ]
  call void @path_put(ptr noundef nonnull %root.i) #22
  br label %out2.i

out2.i:                                           ; preds = %out3.i, %if.end7.i.out2.i_crit_edge
  %error.2.i = phi i32 [ %call8.i, %if.end7.i.out2.i_crit_edge ], [ %error.1.i, %out3.i ]
  call void @path_put(ptr noundef nonnull %old.i) #22
  br label %out1.i

out1.i:                                           ; preds = %out2.i, %if.end3.i.out1.i_crit_edge
  %error.3.i = phi i32 [ %call.i143.i, %if.end3.i.out1.i_crit_edge ], [ %error.2.i, %out2.i ]
  call void @path_put(ptr noundef nonnull %new.i) #22
  br label %__do_sys_pivot_root.exit

__do_sys_pivot_root.exit:                         ; preds = %out1.i, %if.end.i.__do_sys_pivot_root.exit_crit_edge, %entry.__do_sys_pivot_root.exit_crit_edge
  %retval.0.i = phi i32 [ -1, %entry.__do_sys_pivot_root.exit_crit_edge ], [ %call.i.i, %if.end.i.__do_sys_pivot_root.exit_crit_edge ], [ %error.3.i, %out1.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %root.i) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %old.i) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %new.i) #22
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_mount_setattr(i32 noundef %dfd, i32 noundef %path, i32 noundef %flags, i32 noundef %uattr, i32 noundef %usize) #1 align 64 {
entry:
  %target.i = alloca %struct.path, align 4
  %attr.i = alloca %struct.mount_attr, align 8
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %path to ptr
  %1 = inttoptr i32 %uattr to ptr
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %target.i) #22
  %2 = ptrtoint ptr %target.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %target.i, align 4, !annotation !380
  %3 = getelementptr inbounds %struct.path, ptr %target.i, i32 0, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr inttoptr (i32 -1 to ptr), ptr %3, align 4, !annotation !380
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %attr.i) #22
  %5 = getelementptr inbounds %struct.mount_attr, ptr %attr.i, i32 0, i32 1
  %6 = getelementptr inbounds %struct.mount_attr, ptr %attr.i, i32 0, i32 2
  %7 = getelementptr inbounds %struct.mount_attr, ptr %attr.i, i32 0, i32 3
  %8 = call ptr @memset(ptr %attr.i, i32 255, i32 32)
  %and.i = and i32 %flags, -39169
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.__do_sys_mount_setattr.exit_crit_edge

entry.__do_sys_mount_setattr.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_mount_setattr.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %usize)
  %cmp.i = icmp ugt i32 %usize, 4096
  br i1 %cmp.i, label %if.end.i.__do_sys_mount_setattr.exit_crit_edge, label %if.end4.i, !prof !343

if.end.i.__do_sys_mount_setattr.exit_crit_edge:   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_mount_setattr.exit

if.end4.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %usize)
  %cmp5.i = icmp ult i32 %usize, 32
  br i1 %cmp5.i, label %if.end4.i.__do_sys_mount_setattr.exit_crit_edge, label %if.end13.i, !prof !343

if.end4.i.__do_sys_mount_setattr.exit_crit_edge:  ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_mount_setattr.exit

if.end13.i:                                       ; preds = %if.end4.i
  %9 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task.i.i, align 8
  %nsproxy.i.i = getelementptr inbounds %struct.task_struct, ptr %12, i32 0, i32 110
  %13 = ptrtoint ptr %nsproxy.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %nsproxy.i.i, align 4
  %mnt_ns.i.i = getelementptr inbounds %struct.nsproxy, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %mnt_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mnt_ns.i.i, align 4
  %user_ns.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %16, i32 0, i32 4
  %17 = ptrtoint ptr %user_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %user_ns.i.i, align 8
  %call1.i.i = tail call zeroext i1 @ns_capable(ptr noundef %18, i32 noundef 21) #22
  br i1 %call1.i.i, label %if.end15.i, label %if.end13.i.__do_sys_mount_setattr.exit_crit_edge

if.end13.i.__do_sys_mount_setattr.exit_crit_edge: ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_mount_setattr.exit

if.end15.i:                                       ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %usize)
  %cmp.i.i = icmp ugt i32 %usize, 32
  br i1 %cmp.i.i, label %if.then9.i.i, label %if.end15.i.if.end59.i.i.i.i_crit_edge

if.end15.i.if.end59.i.i.i.i_crit_edge:            ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end59.i.i.i.i

if.then9.i.i:                                     ; preds = %if.end15.i
  %sub.i.i = add nsw i32 %usize, -32
  %add.ptr10.i.i = getelementptr i8, ptr %1, i32 32
  %call.i.i = tail call i32 @check_zeroed_user(ptr noundef %add.ptr10.i.i, i32 noundef %sub.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i.i)
  %cmp11.i.i = icmp slt i32 %call.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  %..i.i = select i1 %tobool.not.i.i, i32 -7, i32 %call.i.i
  br i1 %cmp11.i.i, label %if.then9.i.i.__do_sys_mount_setattr.exit_crit_edge, label %if.then9.i.i.if.end59.i.i.i.i_crit_edge

if.then9.i.i.if.end59.i.i.i.i_crit_edge:          ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end59.i.i.i.i

if.then9.i.i.__do_sys_mount_setattr.exit_crit_edge: ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_mount_setattr.exit

if.end59.i.i.i.i:                                 ; preds = %if.then9.i.i.if.end59.i.i.i.i_crit_edge, %if.end15.i.if.end59.i.i.i.i_crit_edge
  tail call void @__might_fault(ptr noundef nonnull @.str.80, i32 noundef 156) #22
  %call.i.i.i.i = tail call zeroext i1 @should_fail_usercopy() #22
  br i1 %call.i.i.i.i, label %if.end59.i.i.i.i.if.then11.i.i.i.i_crit_edge, label %land.lhs.true.i.i.i.i

if.end59.i.i.i.i.if.then11.i.i.i.i_crit_edge:     ; preds = %if.end59.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then11.i.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %if.end59.i.i.i.i
  %19 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %1, i32 32, i32 -1226833920) #30, !srcloc !391
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %19, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %cmp.i6.i.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %cmp.i6.i.i.i, label %if.end.i.i.i.i, label %land.lhs.true.i.i.i.i.if.then11.i.i.i.i_crit_edge, !prof !352

land.lhs.true.i.i.i.i.if.then11.i.i.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then11.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %land.lhs.true.i.i.i.i
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %attr.i, i32 noundef 32) #22
  %20 = call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i.i.i.i.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 4
  %22 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i.i) #16, !srcloc !392
  %and.i.i.i.i.i.i = and i32 %22, -13
  %or.i.i.i.i.i.i = or i32 %and.i.i.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i.i) #22, !srcloc !393
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #22, !srcloc !394
  %call1.i.i.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %attr.i, ptr noundef %1, i32 noundef 32) #22
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %22) #22, !srcloc !393
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #22, !srcloc !394
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i.i)
  %tobool4.not.i.i.i.i = icmp eq i32 %call1.i.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i.i, label %if.end19.i, label %if.end.i.i.i.i.if.then11.i.i.i.i_crit_edge, !prof !352

if.end.i.i.i.i.if.then11.i.i.i.i_crit_edge:       ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then11.i.i.i.i

if.then11.i.i.i.i:                                ; preds = %if.end.i.i.i.i.if.then11.i.i.i.i_crit_edge, %land.lhs.true.i.i.i.i.if.then11.i.i.i.i_crit_edge, %if.end59.i.i.i.i.if.then11.i.i.i.i_crit_edge
  %res.0.i.i4.i.i = phi i32 [ %call1.i.i.i.i.i, %if.end.i.i.i.i.if.then11.i.i.i.i_crit_edge ], [ 32, %if.end59.i.i.i.i.if.then11.i.i.i.i_crit_edge ], [ 32, %land.lhs.true.i.i.i.i.if.then11.i.i.i.i_crit_edge ]
  %sub.i.i.i.i = sub i32 32, %res.0.i.i4.i.i
  %add.ptr.i.i.i.i = getelementptr i8, ptr %attr.i, i32 %sub.i.i.i.i
  %23 = call ptr @memset(ptr %add.ptr.i.i.i.i, i32 0, i32 %res.0.i.i4.i.i)
  br label %__do_sys_mount_setattr.exit

if.end19.i:                                       ; preds = %if.end.i.i.i.i
  %24 = ptrtoint ptr %attr.i to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %attr.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %25)
  %cmp20.i = icmp eq i64 %25, 0
  br i1 %cmp20.i, label %land.lhs.true.i, label %if.end19.i.if.end25.i_crit_edge

if.end19.i.if.end25.i_crit_edge:                  ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end25.i

land.lhs.true.i:                                  ; preds = %if.end19.i
  %26 = ptrtoint ptr %5 to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %5, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %27)
  %cmp21.i = icmp eq i64 %27, 0
  br i1 %cmp21.i, label %land.lhs.true22.i, label %land.lhs.true.i.if.end25.i_crit_edge

land.lhs.true.i.if.end25.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end25.i

land.lhs.true22.i:                                ; preds = %land.lhs.true.i
  %28 = ptrtoint ptr %6 to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %6, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %29)
  %cmp23.i = icmp eq i64 %29, 0
  br i1 %cmp23.i, label %land.lhs.true22.i.__do_sys_mount_setattr.exit_crit_edge, label %land.lhs.true22.i.if.end25.i_crit_edge

land.lhs.true22.i.if.end25.i_crit_edge:           ; preds = %land.lhs.true22.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end25.i

land.lhs.true22.i.__do_sys_mount_setattr.exit_crit_edge: ; preds = %land.lhs.true22.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_mount_setattr.exit

if.end25.i:                                       ; preds = %land.lhs.true22.i.if.end25.i_crit_edge, %land.lhs.true.i.if.end25.i_crit_edge, %if.end19.i.if.end25.i_crit_edge
  %and.i.i = and i32 %flags, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i47.i = icmp eq i32 %and.i.i, 0
  %spec.select.i.i = select i1 %tobool.not.i47.i, i32 5, i32 1
  %and2.i.i = and i32 %flags, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i.i)
  %tobool3.not.i.i = icmp eq i32 %and2.i.i, 0
  %and5.i.i = and i32 %spec.select.i.i, 4
  %lookup_flags.1.i.i = select i1 %tobool3.not.i.i, i32 %spec.select.i.i, i32 %and5.i.i
  %and7.i.i = shl nuw nsw i32 %flags, 2
  %30 = and i32 %and7.i.i, 16384
  %31 = or i32 %lookup_flags.1.i.i, %30
  %and12.i.i = lshr i32 %flags, 15
  %32 = trunc i32 %and12.i.i to i8
  %33 = ptrtoint ptr %6 to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %6, align 8
  %and15.i.i = and i64 %34, -1966081
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and15.i.i)
  %tobool16.not.i.i = icmp eq i64 %and15.i.i, 0
  br i1 %tobool16.not.i.i, label %cond.false.i.i, label %if.end25.i.__do_sys_mount_setattr.exit_crit_edge

if.end25.i.__do_sys_mount_setattr.exit_crit_edge: ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_mount_setattr.exit

cond.false.i.i:                                   ; preds = %if.end25.i
  %35 = trunc i64 %34 to i32
  %conv.i.i = and i32 %35, 1966080
  %call.i.i.i = call i32 @__sw_hweight32(i32 noundef %conv.i.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i.i.i)
  %cmp.i49.i = icmp ugt i32 %call.i.i.i, 1
  br i1 %cmp.i49.i, label %cond.false.i.i.__do_sys_mount_setattr.exit_crit_edge, label %if.end340.i.i

cond.false.i.i.__do_sys_mount_setattr.exit_crit_edge: ; preds = %cond.false.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_mount_setattr.exit

if.end340.i.i:                                    ; preds = %cond.false.i.i
  %36 = ptrtoint ptr %6 to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %6, align 8
  %conv342.i.i = trunc i64 %37 to i32
  %38 = ptrtoint ptr %attr.i to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %attr.i, align 8
  %40 = ptrtoint ptr %5 to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %5, align 8
  %or344.i.i = or i64 %41, %39
  %and345.i.i = and i64 %or344.i.i, -3145984
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and345.i.i)
  %tobool346.not.i.i = icmp eq i64 %and345.i.i, 0
  br i1 %tobool346.not.i.i, label %if.end348.i.i, label %if.end340.i.i.__do_sys_mount_setattr.exit_crit_edge

if.end340.i.i.__do_sys_mount_setattr.exit_crit_edge: ; preds = %if.end340.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_mount_setattr.exit

if.end348.i.i:                                    ; preds = %if.end340.i.i
  %42 = trunc i64 %39 to i32
  %43 = shl i32 %42, 6
  %44 = and i32 %43, 64
  %45 = lshr i32 %42, 1
  %46 = and i32 %45, 1
  %47 = or i32 %46, %44
  %48 = and i32 %45, 2
  %49 = or i32 %47, %48
  %50 = and i32 %45, 4
  %51 = or i32 %49, %50
  %52 = lshr i32 %42, 3
  %53 = and i32 %52, 16
  %54 = or i32 %51, %53
  %55 = lshr i32 %42, 14
  %56 = and i32 %55, 128
  %57 = or i32 %54, %56
  %58 = trunc i64 %41 to i32
  %59 = shl i32 %58, 6
  %60 = and i32 %59, 64
  %61 = lshr i32 %58, 1
  %62 = and i32 %61, 1
  %63 = or i32 %62, %60
  %64 = and i32 %61, 2
  %65 = or i32 %63, %64
  %66 = and i32 %61, 4
  %67 = or i32 %65, %66
  %68 = lshr i32 %58, 3
  %69 = and i32 %68, 16
  %70 = or i32 %67, %69
  %71 = lshr i32 %58, 14
  %72 = and i32 %71, 128
  %73 = or i32 %70, %72
  %74 = trunc i64 %41 to i7
  %trunc2.i.i = and i7 %74, -16
  %75 = zext i7 %trunc2.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %75, ptr @__sancov_gen_cov_switch_values.103)
  switch i7 %trunc2.i.i, label %if.end348.i.i.__do_sys_mount_setattr.exit_crit_edge [
    i7 0, label %if.else.i.i
    i7 -16, label %if.end364.i.i
  ]

if.end348.i.i.__do_sys_mount_setattr.exit_crit_edge: ; preds = %if.end348.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_mount_setattr.exit

if.end364.i.i:                                    ; preds = %if.end348.i.i
  %or366.i.i = or i32 %73, 40
  %76 = trunc i64 %39 to i7
  %trunc.i.i = and i7 %76, -16
  %77 = zext i7 %trunc.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %77, ptr @__sancov_gen_cov_switch_values.104)
  switch i7 %trunc.i.i, label %if.end364.i.i.__do_sys_mount_setattr.exit_crit_edge [
    i7 0, label %if.end364.i.i.if.end379.sink.split.i.i_crit_edge
    i7 16, label %sw.bb371.i.i
    i7 32, label %if.end364.i.i.if.end379.i.i_crit_edge
  ]

if.end364.i.i.if.end379.i.i_crit_edge:            ; preds = %if.end364.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end379.i.i

if.end364.i.i.if.end379.sink.split.i.i_crit_edge: ; preds = %if.end364.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end379.sink.split.i.i

if.end364.i.i.__do_sys_mount_setattr.exit_crit_edge: ; preds = %if.end364.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_mount_setattr.exit

sw.bb371.i.i:                                     ; preds = %if.end364.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end379.sink.split.i.i

if.else.i.i:                                      ; preds = %if.end348.i.i
  %and375.i.i = and i64 %39, 112
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and375.i.i)
  %tobool376.not.i.i = icmp eq i64 %and375.i.i, 0
  br i1 %tobool376.not.i.i, label %if.else.i.i.if.end379.i.i_crit_edge, label %if.else.i.i.__do_sys_mount_setattr.exit_crit_edge

if.else.i.i.__do_sys_mount_setattr.exit_crit_edge: ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_mount_setattr.exit

if.else.i.i.if.end379.i.i_crit_edge:              ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end379.i.i

if.end379.sink.split.i.i:                         ; preds = %sw.bb371.i.i, %if.end364.i.i.if.end379.sink.split.i.i_crit_edge
  %.sink.i.i = phi i32 [ 8, %sw.bb371.i.i ], [ 32, %if.end364.i.i.if.end379.sink.split.i.i_crit_edge ]
  %or370.i.i = or i32 %.sink.i.i, %57
  br label %if.end379.i.i

if.end379.i.i:                                    ; preds = %if.end379.sink.split.i.i, %if.else.i.i.if.end379.i.i_crit_edge, %if.end364.i.i.if.end379.i.i_crit_edge
  %kattr.i.sroa.10.0 = phi i32 [ %or366.i.i, %if.end364.i.i.if.end379.i.i_crit_edge ], [ %or366.i.i, %if.end379.sink.split.i.i ], [ %73, %if.else.i.i.if.end379.i.i_crit_edge ]
  %kattr.i.sroa.0.0 = phi i32 [ %57, %if.end364.i.i.if.end379.i.i_crit_edge ], [ %or370.i.i, %if.end379.sink.split.i.i ], [ %57, %if.else.i.i.if.end379.i.i_crit_edge ]
  %and.i.i50.i = and i64 %or344.i.i, 1048576
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i50.i)
  %tobool.not.i.i.i = icmp eq i64 %and.i.i50.i, 0
  br i1 %tobool.not.i.i.i, label %if.end379.i.i.if.end29.i_crit_edge, label %if.end.i.i.i

if.end379.i.i.if.end29.i_crit_edge:               ; preds = %if.end379.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end29.i

if.end.i.i.i:                                     ; preds = %if.end379.i.i
  %and2.i.i.i = and i64 %41, 1048576
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and2.i.i.i)
  %tobool3.not.i.i.i = icmp eq i64 %and2.i.i.i, 0
  br i1 %tobool3.not.i.i.i, label %if.end5.i.i.i, label %if.end.i.i.i.__do_sys_mount_setattr.exit_crit_edge

if.end.i.i.i.__do_sys_mount_setattr.exit_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_mount_setattr.exit

if.end5.i.i.i:                                    ; preds = %if.end.i.i.i
  %78 = ptrtoint ptr %7 to i32
  call void @__asan_load8_noabort(i32 %78)
  %79 = load i64, ptr %7, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 2147483647, i64 %79)
  %cmp.i.i.i = icmp ugt i64 %79, 2147483647
  br i1 %cmp.i.i.i, label %if.end5.i.i.i.__do_sys_mount_setattr.exit_crit_edge, label %if.end7.i.i.i

if.end5.i.i.i.__do_sys_mount_setattr.exit_crit_edge: ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_mount_setattr.exit

if.end7.i.i.i:                                    ; preds = %if.end5.i.i.i
  %conv.i.i.i = trunc i64 %79 to i32
  %call.i1.i.i = call ptr @fget(i32 noundef %conv.i.i.i) #22
  %tobool9.not.i.i.i = icmp eq ptr %call.i1.i.i, null
  br i1 %tobool9.not.i.i.i, label %if.end7.i.i.i.__do_sys_mount_setattr.exit_crit_edge, label %if.end11.i.i.i

if.end7.i.i.i.__do_sys_mount_setattr.exit_crit_edge: ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_mount_setattr.exit

if.end11.i.i.i:                                   ; preds = %if.end7.i.i.i
  %call12.i.i.i = call zeroext i1 @proc_ns_file(ptr noundef nonnull %call.i1.i.i) #22
  br i1 %call12.i.i.i, label %if.end14.i.i.i, label %if.end11.i.i.i.build_mount_kattr.exit.thread61.i_crit_edge

if.end11.i.i.i.build_mount_kattr.exit.thread61.i_crit_edge: ; preds = %if.end11.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %build_mount_kattr.exit.thread61.i

if.end14.i.i.i:                                   ; preds = %if.end11.i.i.i
  %f_inode.i.i.i.i = getelementptr inbounds %struct.file, ptr %call.i1.i.i, i32 0, i32 2
  %80 = ptrtoint ptr %f_inode.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %f_inode.i.i.i.i, align 8
  %i_private.i.i.i = getelementptr inbounds %struct.inode, ptr %81, i32 0, i32 54
  %82 = ptrtoint ptr %i_private.i.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %i_private.i.i.i, align 4
  %ops.i.i.i = getelementptr inbounds %struct.ns_common, ptr %83, i32 0, i32 1
  %84 = ptrtoint ptr %ops.i.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %ops.i.i.i, align 4
  %type.i.i.i = getelementptr inbounds %struct.proc_ns_operations, ptr %85, i32 0, i32 2
  %86 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 268435456, i32 %87)
  %cmp16.not.i.i.i = icmp eq i32 %87, 268435456
  br i1 %cmp16.not.i.i.i, label %if.end19.i.i.i, label %if.end14.i.i.i.build_mount_kattr.exit.thread61.i_crit_edge

if.end14.i.i.i.build_mount_kattr.exit.thread61.i_crit_edge: ; preds = %if.end14.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %build_mount_kattr.exit.thread61.i

if.end19.i.i.i:                                   ; preds = %if.end14.i.i.i
  %add.ptr.i.i.i = getelementptr i8, ptr %83, i32 -208
  %cmp.i.i.i.i = icmp eq ptr %add.ptr.i.i.i, @init_user_ns
  br i1 %cmp.i.i.i.i, label %if.end19.i.i.i.build_mount_kattr.exit.thread61.i_crit_edge, label %build_mount_kattr.exit.i

if.end19.i.i.i.build_mount_kattr.exit.thread61.i_crit_edge: ; preds = %if.end19.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %build_mount_kattr.exit.thread61.i

build_mount_kattr.exit.thread61.i:                ; preds = %if.end19.i.i.i.build_mount_kattr.exit.thread61.i_crit_edge, %if.end14.i.i.i.build_mount_kattr.exit.thread61.i_crit_edge, %if.end11.i.i.i.build_mount_kattr.exit.thread61.i_crit_edge
  %err.0.i.i.ph.i = phi i32 [ -1, %if.end19.i.i.i.build_mount_kattr.exit.thread61.i_crit_edge ], [ -22, %if.end14.i.i.i.build_mount_kattr.exit.thread61.i_crit_edge ], [ -22, %if.end11.i.i.i.build_mount_kattr.exit.thread61.i_crit_edge ]
  call void @fput(ptr noundef nonnull %call.i1.i.i) #22
  br label %__do_sys_mount_setattr.exit

build_mount_kattr.exit.i:                         ; preds = %if.end19.i.i.i
  %tobool.not.i24 = icmp eq ptr %add.ptr.i.i.i, null
  br i1 %tobool.not.i24, label %build_mount_kattr.exit.i.get_user_ns.exit_crit_edge, label %if.then.i

build_mount_kattr.exit.i.get_user_ns.exit_crit_edge: ; preds = %build_mount_kattr.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %get_user_ns.exit

if.then.i:                                        ; preds = %build_mount_kattr.exit.i
  %count.i = getelementptr i8, ptr %83, i32 12
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #22
  %88 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #22, !srcloc !373
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %88, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !343

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i
  %add.i.i.i.i25 = add i32 %asmresult.i.i.i.i.i.i, 1
  %89 = or i32 %add.i.i.i.i25, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %89)
  %.not.i.i.i.i = icmp sgt i32 %89, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.get_user_ns.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !352

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.get_user_ns.exit_crit_edge:       ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %get_user_ns.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %count.i, i32 noundef %.sink.i.i.i.i) #22
  br label %get_user_ns.exit

get_user_ns.exit:                                 ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.get_user_ns.exit_crit_edge, %build_mount_kattr.exit.i.get_user_ns.exit_crit_edge
  call void @fput(ptr noundef nonnull %call.i1.i.i) #22
  br label %if.end29.i

if.end29.i:                                       ; preds = %get_user_ns.exit, %if.end379.i.i.if.end29.i_crit_edge
  %kattr.i.sroa.27.0 = phi ptr [ null, %if.end379.i.i.if.end29.i_crit_edge ], [ %add.ptr.i.i.i, %get_user_ns.exit ]
  %call.i51.i = call i32 @user_path_at_empty(i32 noundef %dfd, ptr noundef %0, i32 noundef %31, ptr noundef nonnull %target.i, ptr noundef null) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i51.i)
  %tobool31.not.i = icmp eq i32 %call.i51.i, 0
  br i1 %tobool31.not.i, label %if.then32.i, label %if.end29.i.if.end34.i_crit_edge

if.end29.i.if.end34.i_crit_edge:                  ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end34.i

if.then32.i:                                      ; preds = %if.end29.i
  %90 = ptrtoint ptr %target.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %target.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %91, i32 -16
  %92 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %3, align 4
  %94 = ptrtoint ptr %91 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %91, align 4
  %cmp.not.i = icmp eq ptr %93, %95
  br i1 %cmp.not.i, label %if.end.i2, label %if.then32.i.do_mount_setattr.exit_crit_edge

if.then32.i.do_mount_setattr.exit_crit_edge:      ; preds = %if.then32.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_mount_setattr.exit

if.end.i2:                                        ; preds = %if.then32.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv342.i.i)
  %tobool.not.i1 = icmp eq i32 %conv342.i.i, 0
  br i1 %tobool.not.i1, label %if.end.i2.if.end13.i6_crit_edge, label %if.then3.i

if.end.i2.if.end13.i6_crit_edge:                  ; preds = %if.end.i2
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end13.i6

if.then3.i:                                       ; preds = %if.end.i2
  call void @down_write(ptr noundef nonnull @namespace_sem) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 1048576, i32 %conv342.i.i)
  %cmp5.i3 = icmp eq i32 %conv342.i.i, 1048576
  br i1 %cmp5.i3, label %if.then6.i, label %if.then3.i.if.end13.i6_crit_edge

if.then3.i.if.end13.i6_crit_edge:                 ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end13.i6

if.then6.i:                                       ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %tobool7.i = icmp ne i8 %32, 0
  %call8.i = call fastcc i32 @invent_group_ids(ptr noundef %add.ptr.i.i, i1 noundef zeroext %tobool7.i) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool9.not.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.not.i, label %if.then6.i.if.end13.i6_crit_edge, label %if.then10.i

if.then6.i.if.end13.i6_crit_edge:                 ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end13.i6

if.then10.i:                                      ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #24
  call fastcc void @namespace_unlock() #22
  br label %do_mount_setattr.exit

if.end13.i6:                                      ; preds = %if.then6.i.if.end13.i6_crit_edge, %if.then3.i.if.end13.i6_crit_edge, %if.end.i2.if.end13.i6_crit_edge
  call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %96 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i.i = add i32 %96, 1
  store i32 %inc.i.i.i.i.i.i, ptr @mount_lock, align 128
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %97 = call ptr @llvm.returnaddress(i32 0) #22
  %98 = ptrtoint ptr %97 to i32
  call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %98) #22
  %mnt_ns.i.i.i = getelementptr i8, ptr %91, i32 100
  %99 = ptrtoint ptr %mnt_ns.i.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %mnt_ns.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %100, null
  %cmp.i.i.i.i4 = icmp ugt ptr %100, inttoptr (i32 -4096 to ptr)
  %tobool.not.i.i5 = or i1 %tobool.not.i.i.i.i, %cmp.i.i.i.i4
  br i1 %tobool.not.i.i5, label %if.end13.i6.if.end17.i_crit_edge, label %if.end.i.i

if.end13.i6.if.end17.i_crit_edge:                 ; preds = %if.end13.i6
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end17.i

if.end.i.i:                                       ; preds = %if.end13.i6
  %mnt_parent.i.i.i = getelementptr i8, ptr %91, i32 -8
  %101 = ptrtoint ptr %mnt_parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %mnt_parent.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %102, %add.ptr.i.i
  br i1 %cmp.i.not.i.i, label %cond.false.i.i8, label %cond.true.i.i7

cond.true.i.i7:                                   ; preds = %if.end.i.i
  %103 = call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i.i = and i32 %103, -16384
  %104 = inttoptr i32 %and.i.i.i.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %104, i32 0, i32 2
  %105 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %task.i.i.i, align 8
  %nsproxy.i.i.i = getelementptr inbounds %struct.task_struct, ptr %106, i32 0, i32 110
  %107 = ptrtoint ptr %nsproxy.i.i.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %nsproxy.i.i.i, align 4
  %mnt_ns1.i.i.i = getelementptr inbounds %struct.nsproxy, ptr %108, i32 0, i32 3
  %109 = ptrtoint ptr %mnt_ns1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %mnt_ns1.i.i.i, align 4
  %cmp.i54.not.i.i = icmp eq ptr %100, %110
  br i1 %cmp.i54.not.i.i, label %cond.true.i.i7.if.end8.i.i_crit_edge, label %cond.true.i.i7.if.end17.i_crit_edge

cond.true.i.i7.if.end17.i_crit_edge:              ; preds = %cond.true.i.i7
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end17.i

cond.true.i.i7.if.end8.i.i_crit_edge:             ; preds = %cond.true.i.i7
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end8.i.i

cond.false.i.i8:                                  ; preds = %if.end.i.i
  %seq.i.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %100, i32 0, i32 6
  %111 = ptrtoint ptr %seq.i.i.i to i32
  call void @__asan_load8_noabort(i32 %111)
  %112 = load i64, ptr %seq.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %112)
  %cmp.i56.i.i = icmp eq i64 %112, 0
  br i1 %cmp.i56.i.i, label %cond.false.i.i8.if.end8.i.i_crit_edge, label %cond.false.i.i8.if.end17.i_crit_edge

cond.false.i.i8.if.end17.i_crit_edge:             ; preds = %cond.false.i.i8
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end17.i

cond.false.i.i8.if.end8.i.i_crit_edge:            ; preds = %cond.false.i.i8
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %cond.false.i.i8.if.end8.i.i_crit_edge, %cond.true.i.i7.if.end8.i.i_crit_edge
  %mnt_flags.i.i101.i = getelementptr i8, ptr %91, i32 8
  %113 = ptrtoint ptr %mnt_flags.i.i101.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %mnt_flags.i.i101.i, align 4
  %neg.i.i102.i = xor i32 %kattr.i.sroa.10.0, -1
  %and.i.i103.i = and i32 %114, %neg.i.i102.i
  %or.i.i104.i = or i32 %and.i.i103.i, %kattr.i.sroa.0.0
  %and.i57.i105.i = and i32 %114, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i57.i105.i)
  %tobool.not.i.i106.i = icmp ne i32 %and.i57.i105.i, 0
  %and3.i.i107.i = and i32 %or.i.i104.i, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i.i107.i)
  %tobool4.not.i.i108.i = icmp eq i32 %and3.i.i107.i, 0
  %or.cond.i.i109.i = and i1 %tobool.not.i.i106.i, %tobool4.not.i.i108.i
  br i1 %or.cond.i.i109.i, label %if.end8.i.i.if.end17.i_crit_edge, label %if.end.i.i.i12.preheader

if.end8.i.i.if.end17.i_crit_edge:                 ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end17.i

if.end.i.i.i12.preheader:                         ; preds = %if.end8.i.i
  %and5.i.i.i55 = and i32 %114, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i.i.i55)
  %tobool6.not.i.i.i56 = icmp ne i32 %and5.i.i.i55, 0
  %and8.i.i.i57 = and i32 %or.i.i104.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i.i.i57)
  %tobool9.not.i.i.i1158 = icmp eq i32 %and8.i.i.i57, 0
  %or.cond42.i.i.i59 = and i1 %tobool9.not.i.i.i1158, %tobool6.not.i.i.i56
  br i1 %or.cond42.i.i.i59, label %if.end.i.i.i12.preheader.if.end17.i_crit_edge, label %if.end11.i.i.i13.lr.ph

if.end.i.i.i12.preheader.if.end17.i_crit_edge:    ; preds = %if.end.i.i.i12.preheader
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end17.i

if.end11.i.i.i13.lr.ph:                           ; preds = %if.end.i.i.i12.preheader
  %tobool.not.i58.i.i = icmp eq ptr %kattr.i.sroa.27.0, null
  %and.i.i14 = and i32 %kattr.i.sroa.0.0, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i14)
  %tobool17.not.i.i = icmp eq i32 %and.i.i14, 0
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %tobool27.not.i.i = icmp eq i8 %32, 0
  %and12.i.i.i177 = and i32 %114, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i.i.i177)
  %tobool13.not.i.i.i178 = icmp ne i32 %and12.i.i.i177, 0
  %and15.i.i.i179 = and i32 %or.i.i104.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15.i.i.i179)
  %tobool16.not.i.i.i180 = icmp eq i32 %and15.i.i.i179, 0
  %or.cond43.i.i.i181 = and i1 %tobool16.not.i.i.i180, %tobool13.not.i.i.i178
  br i1 %or.cond43.i.i.i181, label %if.end11.i.i.i13.lr.ph.mount_setattr_prepare.exit.i_crit_edge, label %if.end11.i.i.i13.lr.ph.if.end18.i.i.i_crit_edge

if.end11.i.i.i13.lr.ph.if.end18.i.i.i_crit_edge:  ; preds = %if.end11.i.i.i13.lr.ph
  br label %if.end18.i.i.i

if.end11.i.i.i13.lr.ph.mount_setattr_prepare.exit.i_crit_edge: ; preds = %if.end11.i.i.i13.lr.ph
  call void @__sanitizer_cov_trace_pc() #24
  br label %mount_setattr_prepare.exit.i

do.body.i.i:                                      ; preds = %next_mnt.exit.i.i
  %mnt_flags.i.i.i = getelementptr i8, ptr %next.0.i.i.i, i32 -28
  %115 = ptrtoint ptr %mnt_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %mnt_flags.i.i.i, align 4
  %and.i.i.i9 = and i32 %116, %neg.i.i102.i
  %or.i.i.i = or i32 %and.i.i.i9, %kattr.i.sroa.0.0
  %and.i57.i.i = and i32 %116, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i57.i.i)
  %tobool.not.i.i.i10 = icmp ne i32 %and.i57.i.i, 0
  %and3.i.i.i = and i32 %or.i.i.i, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i.i.i)
  %tobool4.not.i.i.i = icmp eq i32 %and3.i.i.i, 0
  %or.cond.i.i.i = and i1 %tobool.not.i.i.i10, %tobool4.not.i.i.i
  br i1 %or.cond.i.i.i, label %do.body.i.i.mount_setattr_prepare.exit.i_crit_edge, label %if.end.i.i.i12

do.body.i.i.mount_setattr_prepare.exit.i_crit_edge: ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mount_setattr_prepare.exit.i

if.end.i.i.i12:                                   ; preds = %do.body.i.i
  %and5.i.i.i = and i32 %116, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i.i.i)
  %tobool6.not.i.i.i = icmp ne i32 %and5.i.i.i, 0
  %and8.i.i.i = and i32 %or.i.i.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i.i.i)
  %tobool9.not.i.i.i11 = icmp eq i32 %and8.i.i.i, 0
  %or.cond42.i.i.i = and i1 %tobool9.not.i.i.i11, %tobool6.not.i.i.i
  br i1 %or.cond42.i.i.i, label %if.end.i.i.i12.mount_setattr_prepare.exit.i_crit_edge, label %if.end11.i.i.i13

if.end.i.i.i12.mount_setattr_prepare.exit.i_crit_edge: ; preds = %if.end.i.i.i12
  call void @__sanitizer_cov_trace_pc() #24
  br label %mount_setattr_prepare.exit.i

if.end11.i.i.i13:                                 ; preds = %if.end.i.i.i12
  %and12.i.i.i = and i32 %116, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i.i.i)
  %tobool13.not.i.i.i = icmp ne i32 %and12.i.i.i, 0
  %and15.i.i.i = and i32 %or.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15.i.i.i)
  %tobool16.not.i.i.i = icmp eq i32 %and15.i.i.i, 0
  %or.cond43.i.i.i = and i1 %tobool16.not.i.i.i, %tobool13.not.i.i.i
  br i1 %or.cond43.i.i.i, label %if.end11.i.i.i13.mount_setattr_prepare.exit.i_crit_edge, label %if.end11.i.i.i13.if.end18.i.i.i_crit_edge

if.end11.i.i.i13.if.end18.i.i.i_crit_edge:        ; preds = %if.end11.i.i.i13
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end18.i.i.i

if.end11.i.i.i13.mount_setattr_prepare.exit.i_crit_edge: ; preds = %if.end11.i.i.i13
  call void @__sanitizer_cov_trace_pc() #24
  br label %mount_setattr_prepare.exit.i

if.end18.i.i.i:                                   ; preds = %if.end11.i.i.i13.if.end18.i.i.i_crit_edge, %if.end11.i.i.i13.lr.ph.if.end18.i.i.i_crit_edge
  %or.i.i114.i60185 = phi i32 [ %or.i.i.i, %if.end11.i.i.i13.if.end18.i.i.i_crit_edge ], [ %or.i.i104.i, %if.end11.i.i.i13.lr.ph.if.end18.i.i.i_crit_edge ]
  %117 = phi i32 [ %116, %if.end11.i.i.i13.if.end18.i.i.i_crit_edge ], [ %114, %if.end11.i.i.i13.lr.ph.if.end18.i.i.i_crit_edge ]
  %mnt_flags.i.i113.i61184 = phi ptr [ %mnt_flags.i.i.i, %if.end11.i.i.i13.if.end18.i.i.i_crit_edge ], [ %mnt_flags.i.i101.i, %if.end11.i.i.i13.lr.ph.if.end18.i.i.i_crit_edge ]
  %last.0.i111.i62183 = phi ptr [ %m.0.i110.i63182, %if.end11.i.i.i13.if.end18.i.i.i_crit_edge ], [ null, %if.end11.i.i.i13.lr.ph.if.end18.i.i.i_crit_edge ]
  %m.0.i110.i63182 = phi ptr [ %add.ptr.i.i.i16, %if.end11.i.i.i13.if.end18.i.i.i_crit_edge ], [ %add.ptr.i.i, %if.end11.i.i.i13.lr.ph.if.end18.i.i.i_crit_edge ]
  %and19.i.i.i = and i32 %117, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19.i.i.i)
  %tobool20.not.i.i.i = icmp ne i32 %and19.i.i.i, 0
  %and22.i.i.i = and i32 %or.i.i114.i60185, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22.i.i.i)
  %tobool23.not.i.i.i = icmp eq i32 %and22.i.i.i, 0
  %or.cond44.i.i.i = and i1 %tobool23.not.i.i.i, %tobool20.not.i.i.i
  br i1 %or.cond44.i.i.i, label %if.end18.i.i.i.mount_setattr_prepare.exit.i_crit_edge, label %if.end25.i.i.i

if.end18.i.i.i.mount_setattr_prepare.exit.i_crit_edge: ; preds = %if.end18.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mount_setattr_prepare.exit.i

if.end25.i.i.i:                                   ; preds = %if.end18.i.i.i
  %and26.i.i.i = and i32 %117, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26.i.i.i)
  %tobool27.not.i.i.i = icmp eq i32 %and26.i.i.i, 0
  br i1 %tobool27.not.i.i.i, label %if.end25.i.i.i.if.end12.i.i_crit_edge, label %land.lhs.true28.i.i.i

if.end25.i.i.i.if.end12.i.i_crit_edge:            ; preds = %if.end25.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end12.i.i

land.lhs.true28.i.i.i:                            ; preds = %if.end25.i.i.i
  %118 = xor i32 %117, %or.i.i114.i60185
  %119 = and i32 %118, 56
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %119)
  %cmp.not.i.i.i = icmp eq i32 %119, 0
  br i1 %cmp.not.i.i.i, label %land.lhs.true28.i.i.i.if.end12.i.i_crit_edge, label %land.lhs.true28.i.i.i.mount_setattr_prepare.exit.i_crit_edge

land.lhs.true28.i.i.i.mount_setattr_prepare.exit.i_crit_edge: ; preds = %land.lhs.true28.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mount_setattr_prepare.exit.i

land.lhs.true28.i.i.i.if.end12.i.i_crit_edge:     ; preds = %land.lhs.true28.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end12.i.i

if.end12.i.i:                                     ; preds = %land.lhs.true28.i.i.i.if.end12.i.i_crit_edge, %if.end25.i.i.i.if.end12.i.i_crit_edge
  %mnt_sb.i.i.i = getelementptr inbounds %struct.mount, ptr %m.0.i110.i63182, i32 0, i32 3, i32 1
  %120 = ptrtoint ptr %mnt_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %mnt_sb.i.i.i, align 4
  %s_user_ns.i.i.i = getelementptr inbounds %struct.super_block, ptr %121, i32 0, i32 53
  %122 = ptrtoint ptr %s_user_ns.i.i.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %s_user_ns.i.i.i, align 8
  br i1 %tobool.not.i58.i.i, label %if.end12.i.i.if.end16.i.i_crit_edge, label %if.end.i60.i.i

if.end12.i.i.if.end16.i.i_crit_edge:              ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end16.i.i

if.end.i60.i.i:                                   ; preds = %if.end12.i.i
  %cmp.i59.i.i = icmp eq ptr %kattr.i.sroa.27.0, %123
  br i1 %cmp.i59.i.i, label %if.end.i60.i.i.mount_setattr_prepare.exit.i_crit_edge, label %if.end4.i.i.i

if.end.i60.i.i.mount_setattr_prepare.exit.i_crit_edge: ; preds = %if.end.i60.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mount_setattr_prepare.exit.i

if.end4.i.i.i:                                    ; preds = %if.end.i60.i.i
  %mnt_userns.i.i.i.i.i = getelementptr inbounds %struct.mount, ptr %m.0.i110.i63182, i32 0, i32 3, i32 3
  %124 = ptrtoint ptr %mnt_userns.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load volatile ptr, ptr %mnt_userns.i.i.i.i.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !375
  %126 = ptrtoint ptr %mnt_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %mnt_sb.i.i.i, align 4
  %s_user_ns.i.i.i.i = getelementptr inbounds %struct.super_block, ptr %127, i32 0, i32 53
  %128 = ptrtoint ptr %s_user_ns.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %s_user_ns.i.i.i.i, align 8
  %cmp.i.not.i.i.i = icmp eq ptr %125, %129
  br i1 %cmp.i.not.i.i.i, label %if.end6.i.i.i, label %if.end4.i.i.i.mount_setattr_prepare.exit.i_crit_edge

if.end4.i.i.i.mount_setattr_prepare.exit.i_crit_edge: ; preds = %if.end4.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mount_setattr_prepare.exit.i

if.end6.i.i.i:                                    ; preds = %if.end4.i.i.i
  %s_type.i.i.i = getelementptr inbounds %struct.super_block, ptr %127, i32 0, i32 5
  %130 = ptrtoint ptr %s_type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %s_type.i.i.i, align 32
  %fs_flags.i.i.i = getelementptr inbounds %struct.file_system_type, ptr %131, i32 0, i32 1
  %132 = ptrtoint ptr %fs_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %fs_flags.i.i.i, align 4
  %and.i61.i.i = and i32 %133, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i61.i.i)
  %tobool8.not.i.i.i = icmp eq i32 %and.i61.i.i, 0
  br i1 %tobool8.not.i.i.i, label %if.end6.i.i.i.mount_setattr_prepare.exit.i_crit_edge, label %if.end10.i.i.i

if.end6.i.i.i.mount_setattr_prepare.exit.i_crit_edge: ; preds = %if.end6.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mount_setattr_prepare.exit.i

if.end10.i.i.i:                                   ; preds = %if.end6.i.i.i
  %call11.i.i.i = call zeroext i1 @ns_capable(ptr noundef %123, i32 noundef 21) #22
  br i1 %call11.i.i.i, label %if.end13.i.i.i, label %if.end10.i.i.i.mount_setattr_prepare.exit.i_crit_edge

if.end10.i.i.i.mount_setattr_prepare.exit.i_crit_edge: ; preds = %if.end10.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mount_setattr_prepare.exit.i

if.end13.i.i.i:                                   ; preds = %if.end10.i.i.i
  %mnt_ns.i62.i.i = getelementptr inbounds %struct.mount, ptr %m.0.i110.i63182, i32 0, i32 16
  %134 = ptrtoint ptr %mnt_ns.i62.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %mnt_ns.i62.i.i, align 4
  %seq.i.i.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %135, i32 0, i32 6
  %136 = ptrtoint ptr %seq.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %136)
  %137 = load i64, ptr %seq.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %137)
  %cmp.i24.i.i.i = icmp eq i64 %137, 0
  br i1 %cmp.i24.i.i.i, label %if.end13.i.i.i.if.end16.i.i_crit_edge, label %if.end13.i.i.i.mount_setattr_prepare.exit.i_crit_edge

if.end13.i.i.i.mount_setattr_prepare.exit.i_crit_edge: ; preds = %if.end13.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mount_setattr_prepare.exit.i

if.end13.i.i.i.if.end16.i.i_crit_edge:            ; preds = %if.end13.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end16.i.i

if.end16.i.i:                                     ; preds = %if.end13.i.i.i.if.end16.i.i_crit_edge, %if.end12.i.i.if.end16.i.i_crit_edge
  br i1 %tobool17.not.i.i, label %if.end16.i.i.do.cond.i.i_crit_edge, label %land.lhs.true.i.i

if.end16.i.i.do.cond.i.i_crit_edge:               ; preds = %if.end16.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.cond.i.i

land.lhs.true.i.i:                                ; preds = %if.end16.i.i
  %138 = ptrtoint ptr %mnt_flags.i.i113.i61184 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %mnt_flags.i.i113.i61184, align 4
  %and19.i.i = and i32 %139, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19.i.i)
  %tobool20.not.i.i = icmp eq i32 %and19.i.i, 0
  br i1 %tobool20.not.i.i, label %if.then21.i.i, label %land.lhs.true.i.i.do.cond.i.i_crit_edge

land.lhs.true.i.i.do.cond.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.cond.i.i

if.then21.i.i:                                    ; preds = %land.lhs.true.i.i
  %or.i65.i.i = or i32 %139, 512
  %140 = ptrtoint ptr %mnt_flags.i.i113.i61184 to i32
  call void @__asan_store4_noabort(i32 %140)
  store i32 %or.i65.i.i, ptr %mnt_flags.i.i113.i61184, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !387
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %141 = load i32, ptr @nr_cpu_ids, align 4
  %call6.i.i.i.i = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__sanitizer_cov_trace_cmp4(i32 %call6.i.i.i.i, i32 %141)
  %cmp7.i.i.i.i = icmp ult i32 %call6.i.i.i.i, %141
  br i1 %cmp7.i.i.i.i, label %do.body.lr.ph.i.i.i.i, label %if.then21.i.i.do.cond.i.i_crit_edge

if.then21.i.i.do.cond.i.i_crit_edge:              ; preds = %if.then21.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.cond.i.i

do.body.lr.ph.i.i.i.i:                            ; preds = %if.then21.i.i
  %mnt_pcp.i.i.i.i = getelementptr inbounds %struct.mount, ptr %m.0.i110.i63182, i32 0, i32 5
  %142 = ptrtoint ptr %mnt_pcp.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %mnt_pcp.i.i.i.i, align 4
  %144 = ptrtoint ptr %143 to i32
  br label %do.body.i.i.i.i

do.body.i.i.i.i:                                  ; preds = %do.body.i.i.i.i.do.body.i.i.i.i_crit_edge, %do.body.lr.ph.i.i.i.i
  %call9.i.i.i.i = phi i32 [ %call6.i.i.i.i, %do.body.lr.ph.i.i.i.i ], [ %call.i.i.i.i15, %do.body.i.i.i.i.do.body.i.i.i.i_crit_edge ]
  %count.08.i.i.i.i = phi i32 [ 0, %do.body.lr.ph.i.i.i.i ], [ %add2.i.i.i.i, %do.body.i.i.i.i.do.body.i.i.i.i_crit_edge ]
  %arrayidx.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call9.i.i.i.i
  %145 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %arrayidx.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %146, %144
  %147 = inttoptr i32 %add.i.i.i.i to ptr
  %mnt_writers.i.i.i.i = getelementptr inbounds %struct.mnt_pcp, ptr %147, i32 0, i32 1
  %148 = ptrtoint ptr %mnt_writers.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load i32, ptr %mnt_writers.i.i.i.i, align 4
  %add2.i.i.i.i = add i32 %149, %count.08.i.i.i.i
  %call.i.i.i.i15 = call i32 @cpumask_next(i32 noundef %call9.i.i.i.i, ptr noundef nonnull @__cpu_possible_mask) #25
  %cmp.i.i66.i.i = icmp ult i32 %call.i.i.i.i15, %141
  br i1 %cmp.i.i66.i.i, label %do.body.i.i.i.i.do.body.i.i.i.i_crit_edge, label %mnt_get_writers.exit.i.i.i

do.body.i.i.i.i.do.body.i.i.i.i_crit_edge:        ; preds = %do.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body.i.i.i.i

mnt_get_writers.exit.i.i.i:                       ; preds = %do.body.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add2.i.i.i.i)
  %cmp.not.i67.i.i = icmp ne i32 %add2.i.i.i.i, 0
  %brmerge = or i1 %cmp.not.i67.i.i, %tobool27.not.i.i
  br i1 %brmerge, label %mount_setattr_prepare.exit.i.loopexit117.split.loop.exit165, label %mnt_get_writers.exit.i.i.i.land.rhs.i.i_crit_edge

mnt_get_writers.exit.i.i.i.land.rhs.i.i_crit_edge: ; preds = %mnt_get_writers.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs.i.i

do.cond.i.i:                                      ; preds = %if.then21.i.i.do.cond.i.i_crit_edge, %land.lhs.true.i.i.do.cond.i.i_crit_edge, %if.end16.i.i.do.cond.i.i_crit_edge
  br i1 %tobool27.not.i.i, label %do.cond.i.i.mount_setattr_prepare.exit.i_crit_edge, label %do.cond.i.i.land.rhs.i.i_crit_edge

do.cond.i.i.land.rhs.i.i_crit_edge:               ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs.i.i

do.cond.i.i.mount_setattr_prepare.exit.i_crit_edge: ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mount_setattr_prepare.exit.i

land.rhs.i.i:                                     ; preds = %do.cond.i.i.land.rhs.i.i_crit_edge, %mnt_get_writers.exit.i.i.i.land.rhs.i.i_crit_edge
  %mnt_mounts.i.i.i = getelementptr inbounds %struct.mount, ptr %m.0.i110.i63182, i32 0, i32 6
  %150 = ptrtoint ptr %mnt_mounts.i.i.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %mnt_mounts.i.i.i, align 4
  %cmp.i68.i.i = icmp eq ptr %151, %mnt_mounts.i.i.i
  br i1 %cmp.i68.i.i, label %land.rhs.i.i.while.cond.i.i.i_crit_edge, label %land.rhs.i.i.next_mnt.exit.i.i_crit_edge

land.rhs.i.i.next_mnt.exit.i.i_crit_edge:         ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit.i.i

land.rhs.i.i.while.cond.i.i.i_crit_edge:          ; preds = %land.rhs.i.i
  br label %while.cond.i.i.i

while.cond.i.i.i:                                 ; preds = %if.end.i70.i.i.while.cond.i.i.i_crit_edge, %land.rhs.i.i.while.cond.i.i.i_crit_edge
  %p.addr.0.i.i.i = phi ptr [ %155, %if.end.i70.i.i.while.cond.i.i.i_crit_edge ], [ %m.0.i110.i63182, %land.rhs.i.i.while.cond.i.i.i_crit_edge ]
  %cmp3.i.i.i = icmp eq ptr %p.addr.0.i.i.i, %add.ptr.i.i
  br i1 %cmp3.i.i.i, label %while.cond.i.i.i.mount_setattr_prepare.exit.i_crit_edge, label %if.end.i70.i.i

while.cond.i.i.i.mount_setattr_prepare.exit.i_crit_edge: ; preds = %while.cond.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mount_setattr_prepare.exit.i

if.end.i70.i.i:                                   ; preds = %while.cond.i.i.i
  %mnt_child.i.i.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i.i.i, i32 0, i32 7
  %152 = ptrtoint ptr %mnt_child.i.i.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %mnt_child.i.i.i, align 4
  %mnt_parent.i69.i.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i.i.i, i32 0, i32 1
  %154 = ptrtoint ptr %mnt_parent.i69.i.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %mnt_parent.i69.i.i, align 4
  %mnt_mounts6.i.i.i = getelementptr inbounds %struct.mount, ptr %155, i32 0, i32 6
  %cmp7.not.i.i.i = icmp eq ptr %153, %mnt_mounts6.i.i.i
  br i1 %cmp7.not.i.i.i, label %if.end.i70.i.i.while.cond.i.i.i_crit_edge, label %if.end.i70.i.i.next_mnt.exit.i.i_crit_edge

if.end.i70.i.i.next_mnt.exit.i.i_crit_edge:       ; preds = %if.end.i70.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit.i.i

if.end.i70.i.i.while.cond.i.i.i_crit_edge:        ; preds = %if.end.i70.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i.i.i

next_mnt.exit.i.i:                                ; preds = %if.end.i70.i.i.next_mnt.exit.i.i_crit_edge, %land.rhs.i.i.next_mnt.exit.i.i_crit_edge
  %next.0.i.i.i = phi ptr [ %151, %land.rhs.i.i.next_mnt.exit.i.i_crit_edge ], [ %153, %if.end.i70.i.i.next_mnt.exit.i.i_crit_edge ]
  %add.ptr.i.i.i16 = getelementptr i8, ptr %next.0.i.i.i, i32 -52
  %tobool29.not.i.i = icmp eq ptr %add.ptr.i.i.i16, null
  br i1 %tobool29.not.i.i, label %next_mnt.exit.i.i.mount_setattr_prepare.exit.i_crit_edge, label %do.body.i.i

next_mnt.exit.i.i.mount_setattr_prepare.exit.i_crit_edge: ; preds = %next_mnt.exit.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mount_setattr_prepare.exit.i

mount_setattr_prepare.exit.i.loopexit117.split.loop.exit165: ; preds = %mnt_get_writers.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %not.cmp.not.i67.i.i.le = xor i1 %cmp.not.i67.i.i, true
  %.mux102.le = select i1 %cmp.not.i67.i.i, i32 -16, i32 0
  br label %mount_setattr_prepare.exit.i

mount_setattr_prepare.exit.i:                     ; preds = %mount_setattr_prepare.exit.i.loopexit117.split.loop.exit165, %next_mnt.exit.i.i.mount_setattr_prepare.exit.i_crit_edge, %while.cond.i.i.i.mount_setattr_prepare.exit.i_crit_edge, %do.cond.i.i.mount_setattr_prepare.exit.i_crit_edge, %if.end13.i.i.i.mount_setattr_prepare.exit.i_crit_edge, %if.end10.i.i.i.mount_setattr_prepare.exit.i_crit_edge, %if.end6.i.i.i.mount_setattr_prepare.exit.i_crit_edge, %if.end4.i.i.i.mount_setattr_prepare.exit.i_crit_edge, %if.end.i60.i.i.mount_setattr_prepare.exit.i_crit_edge, %land.lhs.true28.i.i.i.mount_setattr_prepare.exit.i_crit_edge, %if.end18.i.i.i.mount_setattr_prepare.exit.i_crit_edge, %if.end11.i.i.i13.mount_setattr_prepare.exit.i_crit_edge, %if.end.i.i.i12.mount_setattr_prepare.exit.i_crit_edge, %do.body.i.i.mount_setattr_prepare.exit.i_crit_edge, %if.end11.i.i.i13.lr.ph.mount_setattr_prepare.exit.i_crit_edge
  %tobool.not.i38.i = phi i1 [ %not.cmp.not.i67.i.i.le, %mount_setattr_prepare.exit.i.loopexit117.split.loop.exit165 ], [ false, %if.end11.i.i.i13.lr.ph.mount_setattr_prepare.exit.i_crit_edge ], [ true, %while.cond.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ true, %next_mnt.exit.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ true, %do.cond.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ false, %if.end13.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ false, %if.end10.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ false, %if.end6.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ false, %if.end4.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ false, %if.end.i60.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ false, %land.lhs.true28.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ false, %if.end18.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ false, %if.end11.i.i.i13.mount_setattr_prepare.exit.i_crit_edge ], [ false, %if.end.i.i.i12.mount_setattr_prepare.exit.i_crit_edge ], [ false, %do.body.i.i.mount_setattr_prepare.exit.i_crit_edge ]
  %err.1.i = phi i32 [ %.mux102.le, %mount_setattr_prepare.exit.i.loopexit117.split.loop.exit165 ], [ -1, %if.end11.i.i.i13.lr.ph.mount_setattr_prepare.exit.i_crit_edge ], [ 0, %while.cond.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ 0, %next_mnt.exit.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ 0, %do.cond.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ -22, %if.end13.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ -1, %if.end10.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ -22, %if.end6.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ -1, %if.end4.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ -22, %if.end.i60.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ -1, %land.lhs.true28.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ -1, %if.end18.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ -1, %if.end11.i.i.i13.mount_setattr_prepare.exit.i_crit_edge ], [ -1, %if.end.i.i.i12.mount_setattr_prepare.exit.i_crit_edge ], [ -1, %do.body.i.i.mount_setattr_prepare.exit.i_crit_edge ]
  %last.2.i.i = phi ptr [ %m.0.i110.i63182, %mount_setattr_prepare.exit.i.loopexit117.split.loop.exit165 ], [ null, %if.end11.i.i.i13.lr.ph.mount_setattr_prepare.exit.i_crit_edge ], [ %m.0.i110.i63182, %while.cond.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ %m.0.i110.i63182, %next_mnt.exit.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ %m.0.i110.i63182, %do.cond.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ %last.0.i111.i62183, %if.end13.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ %last.0.i111.i62183, %if.end10.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ %last.0.i111.i62183, %if.end6.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ %last.0.i111.i62183, %if.end4.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ %last.0.i111.i62183, %if.end.i60.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ %last.0.i111.i62183, %land.lhs.true28.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ %last.0.i111.i62183, %if.end18.i.i.i.mount_setattr_prepare.exit.i_crit_edge ], [ %m.0.i110.i63182, %if.end11.i.i.i13.mount_setattr_prepare.exit.i_crit_edge ], [ %m.0.i110.i63182, %if.end.i.i.i12.mount_setattr_prepare.exit.i_crit_edge ], [ %m.0.i110.i63182, %do.body.i.i.mount_setattr_prepare.exit.i_crit_edge ]
  %tobool15.not.i = icmp eq ptr %last.2.i.i, null
  br i1 %tobool15.not.i, label %mount_setattr_prepare.exit.i.if.end17.i_crit_edge, label %do.body.i42.i.preheader

mount_setattr_prepare.exit.i.if.end17.i_crit_edge: ; preds = %mount_setattr_prepare.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end17.i

do.body.i42.i.preheader:                          ; preds = %mount_setattr_prepare.exit.i
  %tobool.not.i.i43.i = icmp eq ptr %kattr.i.sroa.27.0, null
  %count.i.i.i.i = getelementptr inbounds %struct.user_namespace, ptr %kattr.i.sroa.27.0, i32 0, i32 7, i32 3
  %and.i50.i = and i32 %kattr.i.sroa.0.0, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i50.i)
  %tobool9.not.i.i = icmp eq i32 %and.i50.i, 0
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %tobool27.not.i53.i = icmp eq i8 %32, 0
  br label %do.body.i42.i

do.body.i42.i:                                    ; preds = %next_mnt.exit.i67.i.do.body.i42.i_crit_edge, %do.body.i42.i.preheader
  %m.0.i41.i = phi ptr [ %add.ptr.i.i65.i, %next_mnt.exit.i67.i.do.body.i42.i_crit_edge ], [ %add.ptr.i.i, %do.body.i42.i.preheader ]
  br i1 %tobool.not.i38.i, label %if.then.i.i, label %do.body.i42.i.if.end.i51.i_crit_edge

do.body.i42.i.if.end.i51.i_crit_edge:             ; preds = %do.body.i42.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i51.i

if.then.i.i:                                      ; preds = %do.body.i42.i
  br i1 %tobool.not.i.i43.i, label %if.then.i.i.do_idmap_mount.exit.i.i_crit_edge, label %if.then.i.i.i.i

if.then.i.i.do_idmap_mount.exit.i.i_crit_edge:    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_idmap_mount.exit.i.i

if.then.i.i.i.i:                                  ; preds = %if.then.i.i
  %mnt_userns3.i.i.i = getelementptr inbounds %struct.mount, ptr %m.0.i41.i, i32 0, i32 3, i32 3
  %156 = ptrtoint ptr %mnt_userns3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %mnt_userns3.i.i.i, align 4
  %call.i.i.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %count.i.i.i.i, i32 noundef 4) #22
  call void @llvm.prefetch.p0(ptr %count.i.i.i.i, i32 1, i32 3, i32 1) #22
  %158 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i.i.i.i, ptr %count.i.i.i.i, i32 1, ptr elementtype(i32) %count.i.i.i.i) #22, !srcloc !373
  %asmresult.i.i.i.i.i.i.i.i.i17 = extractvalue { i32, i32, i32 } %158, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i17)
  %tobool1.not.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i17, 0
  br i1 %tobool1.not.i.i.i.i.i.i.i, label %if.then.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i.i.i, !prof !343

if.then.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i.i_crit_edge: ; preds = %if.then.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i.i.i.i

if.else.i.i.i.i.i.i.i:                            ; preds = %if.then.i.i.i.i
  %add.i.i.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i.i.i17, 1
  %159 = or i32 %add.i.i.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i.i.i17
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %159)
  %.not.i.i.i.i.i.i.i = icmp sgt i32 %159, -1
  br i1 %.not.i.i.i.i.i.i.i, label %if.else.i.i.i.i.i.i.i.get_user_ns.exit.i.i.i_crit_edge, label %if.else.i.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i.i_crit_edge, !prof !352

if.else.i.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i.i.i.i

if.else.i.i.i.i.i.i.i.get_user_ns.exit.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %get_user_ns.exit.i.i.i

if.end15.sink.split.i.i.i.i.i.i.i:                ; preds = %if.else.i.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i.i_crit_edge, %if.then.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i.i.i = phi i32 [ 2, %if.then.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %count.i.i.i.i, i32 noundef %.sink.i.i.i.i.i.i.i) #22
  br label %get_user_ns.exit.i.i.i

get_user_ns.exit.i.i.i:                           ; preds = %if.end15.sink.split.i.i.i.i.i.i.i, %if.else.i.i.i.i.i.i.i.get_user_ns.exit.i.i.i_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !399
  %160 = ptrtoint ptr %mnt_userns3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %160)
  store volatile ptr %kattr.i.sroa.27.0, ptr %mnt_userns3.i.i.i, align 4
  %cmp.i.i.i44.i = icmp eq ptr %157, @init_user_ns
  %tobool.not.i32.i.i.i = icmp eq ptr %157, null
  %or.cond.i.i45.i = or i1 %cmp.i.i.i44.i, %tobool.not.i32.i.i.i
  br i1 %or.cond.i.i45.i, label %get_user_ns.exit.i.i.i.do_idmap_mount.exit.i.i_crit_edge, label %land.lhs.true.i.i.i.i18

get_user_ns.exit.i.i.i.do_idmap_mount.exit.i.i_crit_edge: ; preds = %get_user_ns.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_idmap_mount.exit.i.i

land.lhs.true.i.i.i.i18:                          ; preds = %get_user_ns.exit.i.i.i
  %count.i33.i.i.i = getelementptr inbounds %struct.user_namespace, ptr %157, i32 0, i32 7, i32 3
  %call.i.i.i.i.i.i34.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %count.i33.i.i.i, i32 noundef 4) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !381
  call void @llvm.prefetch.p0(ptr %count.i33.i.i.i, i32 1, i32 3, i32 1) #22
  %161 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i33.i.i.i, ptr %count.i33.i.i.i, i32 1, ptr elementtype(i32) %count.i33.i.i.i) #22, !srcloc !382
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %161, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i36.i.i.i, label %if.end5.i.i.i.i.i.i.i

if.end5.i.i.i.i.i.i.i:                            ; preds = %land.lhs.true.i.i.i.i18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i35.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i35.i.i.i, label %if.end5.i.i.i.i.i.i.i.do_idmap_mount.exit.i.i_crit_edge, label %if.then10.i.i.i.i.i.i.i, !prof !352

if.end5.i.i.i.i.i.i.i.do_idmap_mount.exit.i.i_crit_edge: ; preds = %if.end5.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_idmap_mount.exit.i.i

if.then10.i.i.i.i.i.i.i:                          ; preds = %if.end5.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @refcount_warn_saturate(ptr noundef %count.i33.i.i.i, i32 noundef 3) #22
  br label %do_idmap_mount.exit.i.i

if.then.i36.i.i.i:                                ; preds = %land.lhs.true.i.i.i.i18
  call void @__sanitizer_cov_trace_pc() #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !383
  call void @__put_user_ns(ptr noundef nonnull %157) #22
  br label %do_idmap_mount.exit.i.i

do_idmap_mount.exit.i.i:                          ; preds = %if.then.i36.i.i.i, %if.then10.i.i.i.i.i.i.i, %if.end5.i.i.i.i.i.i.i.do_idmap_mount.exit.i.i_crit_edge, %get_user_ns.exit.i.i.i.do_idmap_mount.exit.i.i_crit_edge, %if.then.i.i.do_idmap_mount.exit.i.i_crit_edge
  %mnt_flags.i.i46.i = getelementptr inbounds %struct.mount, ptr %m.0.i41.i, i32 0, i32 3, i32 2
  %162 = ptrtoint ptr %mnt_flags.i.i46.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %mnt_flags.i.i46.i, align 4
  %and.i.i48.i = and i32 %163, %neg.i.i102.i
  %or.i.i49.i = or i32 %and.i.i48.i, %kattr.i.sroa.0.0
  store volatile i32 %or.i.i49.i, ptr %mnt_flags.i.i46.i, align 4
  br label %if.end.i51.i

if.end.i51.i:                                     ; preds = %do_idmap_mount.exit.i.i, %do.body.i42.i.if.end.i51.i_crit_edge
  br i1 %tobool9.not.i.i, label %if.end.i51.i.if.end15.i.i_crit_edge, label %land.lhs.true.i52.i

if.end.i51.i.if.end15.i.i_crit_edge:              ; preds = %if.end.i51.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.i.i

land.lhs.true.i52.i:                              ; preds = %if.end.i51.i
  %mnt_flags11.i.i = getelementptr inbounds %struct.mount, ptr %m.0.i41.i, i32 0, i32 3, i32 2
  %164 = ptrtoint ptr %mnt_flags11.i.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %mnt_flags11.i.i, align 4
  %and12.i.i19 = and i32 %165, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i.i19)
  %tobool13.not.i.i = icmp eq i32 %and12.i.i19, 0
  br i1 %tobool13.not.i.i, label %land.lhs.true.i52.i.if.end15.i.i_crit_edge, label %if.then14.i.i

land.lhs.true.i52.i.if.end15.i.i_crit_edge:       ; preds = %land.lhs.true.i52.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.i.i

if.then14.i.i:                                    ; preds = %land.lhs.true.i52.i
  call void @__sanitizer_cov_trace_pc() #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !388
  %166 = ptrtoint ptr %mnt_flags11.i.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %mnt_flags11.i.i, align 4
  %and.i53.i.i = and i32 %167, -513
  store i32 %and.i53.i.i, ptr %mnt_flags11.i.i, align 4
  br label %if.end15.i.i

if.end15.i.i:                                     ; preds = %if.then14.i.i, %land.lhs.true.i52.i.if.end15.i.i_crit_edge, %if.end.i51.i.if.end15.i.i_crit_edge
  br i1 %tobool.not.i38.i, label %land.lhs.true17.i.i, label %land.lhs.true23.critedge.i.i

land.lhs.true17.i.i:                              ; preds = %if.end15.i.i
  br i1 %tobool.not.i1, label %land.lhs.true17.i.i.do.cond26.i.i_crit_edge, label %if.then19.i.i

land.lhs.true17.i.i.do.cond26.i.i_crit_edge:      ; preds = %land.lhs.true17.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.cond26.i.i

if.then19.i.i:                                    ; preds = %land.lhs.true17.i.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @change_mnt_propagation(ptr noundef %m.0.i41.i, i32 noundef %conv342.i.i) #22
  br label %do.cond26.i.i

land.lhs.true23.critedge.i.i:                     ; preds = %if.end15.i.i
  %cmp.i.i20 = icmp eq ptr %m.0.i41.i, %last.2.i.i
  br i1 %cmp.i.i20, label %land.lhs.true23.critedge.i.i.if.end17.i_crit_edge, label %land.lhs.true23.critedge.i.i.do.cond26.i.i_crit_edge

land.lhs.true23.critedge.i.i.do.cond26.i.i_crit_edge: ; preds = %land.lhs.true23.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.cond26.i.i

land.lhs.true23.critedge.i.i.if.end17.i_crit_edge: ; preds = %land.lhs.true23.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end17.i

do.cond26.i.i:                                    ; preds = %land.lhs.true23.critedge.i.i.do.cond26.i.i_crit_edge, %if.then19.i.i, %land.lhs.true17.i.i.do.cond26.i.i_crit_edge
  br i1 %tobool27.not.i53.i, label %do.cond26.i.i.do.end30.i.i_crit_edge, label %land.rhs.i55.i

do.cond26.i.i.do.end30.i.i_crit_edge:             ; preds = %do.cond26.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end30.i.i

land.rhs.i55.i:                                   ; preds = %do.cond26.i.i
  %mnt_mounts.i.i54.i = getelementptr inbounds %struct.mount, ptr %m.0.i41.i, i32 0, i32 6
  %168 = ptrtoint ptr %mnt_mounts.i.i54.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %mnt_mounts.i.i54.i, align 4
  %cmp.i.i.i21 = icmp eq ptr %169, %mnt_mounts.i.i54.i
  br i1 %cmp.i.i.i21, label %land.rhs.i55.i.while.cond.i.i58.i_crit_edge, label %land.rhs.i55.i.next_mnt.exit.i67.i_crit_edge

land.rhs.i55.i.next_mnt.exit.i67.i_crit_edge:     ; preds = %land.rhs.i55.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit.i67.i

land.rhs.i55.i.while.cond.i.i58.i_crit_edge:      ; preds = %land.rhs.i55.i
  br label %while.cond.i.i58.i

while.cond.i.i58.i:                               ; preds = %if.end.i.i63.i.while.cond.i.i58.i_crit_edge, %land.rhs.i55.i.while.cond.i.i58.i_crit_edge
  %p.addr.0.i.i56.i = phi ptr [ %173, %if.end.i.i63.i.while.cond.i.i58.i_crit_edge ], [ %m.0.i41.i, %land.rhs.i55.i.while.cond.i.i58.i_crit_edge ]
  %cmp3.i.i57.i = icmp eq ptr %p.addr.0.i.i56.i, %add.ptr.i.i
  br i1 %cmp3.i.i57.i, label %while.cond.i.i58.i.do.end30.i.i_crit_edge, label %if.end.i.i63.i

while.cond.i.i58.i.do.end30.i.i_crit_edge:        ; preds = %while.cond.i.i58.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end30.i.i

if.end.i.i63.i:                                   ; preds = %while.cond.i.i58.i
  %mnt_child.i.i59.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i.i56.i, i32 0, i32 7
  %170 = ptrtoint ptr %mnt_child.i.i59.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %mnt_child.i.i59.i, align 4
  %mnt_parent.i.i60.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i.i56.i, i32 0, i32 1
  %172 = ptrtoint ptr %mnt_parent.i.i60.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %mnt_parent.i.i60.i, align 4
  %mnt_mounts6.i.i61.i = getelementptr inbounds %struct.mount, ptr %173, i32 0, i32 6
  %cmp7.not.i.i62.i = icmp eq ptr %171, %mnt_mounts6.i.i61.i
  br i1 %cmp7.not.i.i62.i, label %if.end.i.i63.i.while.cond.i.i58.i_crit_edge, label %if.end.i.i63.i.next_mnt.exit.i67.i_crit_edge

if.end.i.i63.i.next_mnt.exit.i67.i_crit_edge:     ; preds = %if.end.i.i63.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit.i67.i

if.end.i.i63.i.while.cond.i.i58.i_crit_edge:      ; preds = %if.end.i.i63.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i.i58.i

next_mnt.exit.i67.i:                              ; preds = %if.end.i.i63.i.next_mnt.exit.i67.i_crit_edge, %land.rhs.i55.i.next_mnt.exit.i67.i_crit_edge
  %next.0.i.i64.i = phi ptr [ %169, %land.rhs.i55.i.next_mnt.exit.i67.i_crit_edge ], [ %171, %if.end.i.i63.i.next_mnt.exit.i67.i_crit_edge ]
  %add.ptr.i.i65.i = getelementptr i8, ptr %next.0.i.i64.i, i32 -52
  %tobool29.not.i66.i = icmp eq ptr %add.ptr.i.i65.i, null
  br i1 %tobool29.not.i66.i, label %next_mnt.exit.i67.i.do.end30.i.i_crit_edge, label %next_mnt.exit.i67.i.do.body.i42.i_crit_edge

next_mnt.exit.i67.i.do.body.i42.i_crit_edge:      ; preds = %next_mnt.exit.i67.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body.i42.i

next_mnt.exit.i67.i.do.end30.i.i_crit_edge:       ; preds = %next_mnt.exit.i67.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end30.i.i

do.end30.i.i:                                     ; preds = %next_mnt.exit.i67.i.do.end30.i.i_crit_edge, %while.cond.i.i58.i.do.end30.i.i_crit_edge, %do.cond26.i.i.do.end30.i.i_crit_edge
  br i1 %tobool.not.i38.i, label %if.then32.i.i, label %do.end30.i.i.if.end17.i_crit_edge

do.end30.i.i.if.end17.i_crit_edge:                ; preds = %do.end30.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end17.i

if.then32.i.i:                                    ; preds = %do.end30.i.i
  %174 = ptrtoint ptr %mnt_ns.i.i.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %mnt_ns.i.i.i, align 4
  %tobool.not.i54.i.i = icmp eq ptr %175, null
  br i1 %tobool.not.i54.i.i, label %if.then32.i.i.if.end17.i_crit_edge, label %if.then.i.i.i22

if.then32.i.i.if.end17.i_crit_edge:               ; preds = %if.then32.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end17.i

if.then.i.i.i22:                                  ; preds = %if.then32.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %176 = load i64, ptr @event, align 8
  %inc.i.i.i = add i64 %176, 1
  store i64 %inc.i.i.i, ptr @event, align 8
  %event.i.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %175, i32 0, i32 8
  %177 = ptrtoint ptr %event.i.i.i to i32
  call void @__asan_store8_noabort(i32 %177)
  store i64 %inc.i.i.i, ptr %event.i.i.i, align 8
  %poll.i.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %175, i32 0, i32 7
  call void @__wake_up(ptr noundef %poll.i.i.i, i32 noundef 1, i32 noundef 1, ptr noundef null) #22
  br label %if.end17.i

if.end17.i:                                       ; preds = %if.then.i.i.i22, %if.then32.i.i.if.end17.i_crit_edge, %do.end30.i.i.if.end17.i_crit_edge, %land.lhs.true23.critedge.i.i.if.end17.i_crit_edge, %mount_setattr_prepare.exit.i.if.end17.i_crit_edge, %if.end.i.i.i12.preheader.if.end17.i_crit_edge, %if.end8.i.i.if.end17.i_crit_edge, %cond.false.i.i8.if.end17.i_crit_edge, %cond.true.i.i7.if.end17.i_crit_edge, %if.end13.i6.if.end17.i_crit_edge
  %err.192.i = phi i32 [ %err.1.i, %mount_setattr_prepare.exit.i.if.end17.i_crit_edge ], [ %err.1.i, %do.end30.i.i.if.end17.i_crit_edge ], [ 0, %if.then32.i.i.if.end17.i_crit_edge ], [ 0, %if.then.i.i.i22 ], [ -22, %if.end13.i6.if.end17.i_crit_edge ], [ -22, %cond.false.i.i8.if.end17.i_crit_edge ], [ -22, %cond.true.i.i7.if.end17.i_crit_edge ], [ -1, %if.end8.i.i.if.end17.i_crit_edge ], [ -1, %if.end.i.i.i12.preheader.if.end17.i_crit_edge ], [ %err.1.i, %land.lhs.true23.critedge.i.i.if.end17.i_crit_edge ]
  call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %98) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %178 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %178, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  br i1 %tobool.not.i1, label %if.end17.i.do_mount_setattr.exit_crit_edge, label %if.then20.i

if.end17.i.do_mount_setattr.exit_crit_edge:       ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_mount_setattr.exit

if.then20.i:                                      ; preds = %if.end17.i
  call fastcc void @namespace_unlock() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.192.i)
  %tobool21.not.i = icmp eq i32 %err.192.i, 0
  br i1 %tobool21.not.i, label %if.then20.i.do_mount_setattr.exit_crit_edge, label %if.then22.i

if.then20.i.do_mount_setattr.exit_crit_edge:      ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_mount_setattr.exit

if.then22.i:                                      ; preds = %if.then20.i
  %cmp.not8.i.i = icmp eq ptr %add.ptr.i.i, null
  br i1 %cmp.not8.i.i, label %if.then22.i.do_mount_setattr.exit_crit_edge, label %if.then22.i.for.body.i.i_crit_edge

if.then22.i.for.body.i.i_crit_edge:               ; preds = %if.then22.i
  br label %for.body.i.i

if.then22.i.do_mount_setattr.exit_crit_edge:      ; preds = %if.then22.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_mount_setattr.exit

for.body.i.i:                                     ; preds = %next_mnt.exit.i85.i.for.body.i.i_crit_edge, %if.then22.i.for.body.i.i_crit_edge
  %p.09.i.i = phi ptr [ %add.ptr.i.i83.i, %next_mnt.exit.i85.i.for.body.i.i_crit_edge ], [ %add.ptr.i.i, %if.then22.i.for.body.i.i_crit_edge ]
  %mnt_group_id.i.i = getelementptr inbounds %struct.mount, ptr %p.09.i.i, i32 0, i32 23
  %179 = ptrtoint ptr %mnt_group_id.i.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %mnt_group_id.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %180)
  %tobool.not.i68.i = icmp eq i32 %180, 0
  br i1 %tobool.not.i68.i, label %for.body.i.i.for.inc.i.i_crit_edge, label %land.lhs.true.i70.i

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i.i

land.lhs.true.i70.i:                              ; preds = %for.body.i.i
  %mnt_flags.i.i = getelementptr inbounds %struct.mount, ptr %p.09.i.i, i32 0, i32 3, i32 2
  %181 = ptrtoint ptr %mnt_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load i32, ptr %mnt_flags.i.i, align 4
  %and.i69.i = and i32 %182, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i69.i)
  %tobool2.not.i.i = icmp eq i32 %and.i69.i, 0
  br i1 %tobool2.not.i.i, label %if.then.i71.i, label %land.lhs.true.i70.i.for.inc.i.i_crit_edge

land.lhs.true.i70.i.for.inc.i.i_crit_edge:        ; preds = %land.lhs.true.i70.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i.i

if.then.i71.i:                                    ; preds = %land.lhs.true.i70.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @ida_free(ptr noundef nonnull @mnt_group_ida, i32 noundef %180) #22
  %183 = ptrtoint ptr %mnt_group_id.i.i to i32
  call void @__asan_store4_noabort(i32 %183)
  store i32 0, ptr %mnt_group_id.i.i, align 4
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.then.i71.i, %land.lhs.true.i70.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %mnt_mounts.i.i72.i = getelementptr inbounds %struct.mount, ptr %p.09.i.i, i32 0, i32 6
  %184 = ptrtoint ptr %mnt_mounts.i.i72.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %mnt_mounts.i.i72.i, align 4
  %cmp.i.i73.i = icmp eq ptr %185, %mnt_mounts.i.i72.i
  br i1 %cmp.i.i73.i, label %for.inc.i.i.while.cond.i.i76.i_crit_edge, label %for.inc.i.i.next_mnt.exit.i85.i_crit_edge

for.inc.i.i.next_mnt.exit.i85.i_crit_edge:        ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit.i85.i

for.inc.i.i.while.cond.i.i76.i_crit_edge:         ; preds = %for.inc.i.i
  br label %while.cond.i.i76.i

while.cond.i.i76.i:                               ; preds = %if.end.i.i81.i.while.cond.i.i76.i_crit_edge, %for.inc.i.i.while.cond.i.i76.i_crit_edge
  %p.addr.0.i.i74.i = phi ptr [ %189, %if.end.i.i81.i.while.cond.i.i76.i_crit_edge ], [ %p.09.i.i, %for.inc.i.i.while.cond.i.i76.i_crit_edge ]
  %cmp3.i.i75.i = icmp eq ptr %p.addr.0.i.i74.i, %add.ptr.i.i
  br i1 %cmp3.i.i75.i, label %while.cond.i.i76.i.do_mount_setattr.exit_crit_edge, label %if.end.i.i81.i

while.cond.i.i76.i.do_mount_setattr.exit_crit_edge: ; preds = %while.cond.i.i76.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_mount_setattr.exit

if.end.i.i81.i:                                   ; preds = %while.cond.i.i76.i
  %mnt_child.i.i77.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i.i74.i, i32 0, i32 7
  %186 = ptrtoint ptr %mnt_child.i.i77.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %mnt_child.i.i77.i, align 4
  %mnt_parent.i.i78.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i.i74.i, i32 0, i32 1
  %188 = ptrtoint ptr %mnt_parent.i.i78.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load ptr, ptr %mnt_parent.i.i78.i, align 4
  %mnt_mounts6.i.i79.i = getelementptr inbounds %struct.mount, ptr %189, i32 0, i32 6
  %cmp7.not.i.i80.i = icmp eq ptr %187, %mnt_mounts6.i.i79.i
  br i1 %cmp7.not.i.i80.i, label %if.end.i.i81.i.while.cond.i.i76.i_crit_edge, label %if.end.i.i81.i.next_mnt.exit.i85.i_crit_edge

if.end.i.i81.i.next_mnt.exit.i85.i_crit_edge:     ; preds = %if.end.i.i81.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit.i85.i

if.end.i.i81.i.while.cond.i.i76.i_crit_edge:      ; preds = %if.end.i.i81.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i.i76.i

next_mnt.exit.i85.i:                              ; preds = %if.end.i.i81.i.next_mnt.exit.i85.i_crit_edge, %for.inc.i.i.next_mnt.exit.i85.i_crit_edge
  %next.0.i.i82.i = phi ptr [ %185, %for.inc.i.i.next_mnt.exit.i85.i_crit_edge ], [ %187, %if.end.i.i81.i.next_mnt.exit.i85.i_crit_edge ]
  %add.ptr.i.i83.i = getelementptr i8, ptr %next.0.i.i82.i, i32 -52
  %cmp.not.i.i = icmp eq ptr %add.ptr.i.i83.i, null
  br i1 %cmp.not.i.i, label %next_mnt.exit.i85.i.do_mount_setattr.exit_crit_edge, label %next_mnt.exit.i85.i.for.body.i.i_crit_edge

next_mnt.exit.i85.i.for.body.i.i_crit_edge:       ; preds = %next_mnt.exit.i85.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i.i

next_mnt.exit.i85.i.do_mount_setattr.exit_crit_edge: ; preds = %next_mnt.exit.i85.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do_mount_setattr.exit

do_mount_setattr.exit:                            ; preds = %next_mnt.exit.i85.i.do_mount_setattr.exit_crit_edge, %while.cond.i.i76.i.do_mount_setattr.exit_crit_edge, %if.then22.i.do_mount_setattr.exit_crit_edge, %if.then20.i.do_mount_setattr.exit_crit_edge, %if.end17.i.do_mount_setattr.exit_crit_edge, %if.then10.i, %if.then32.i.do_mount_setattr.exit_crit_edge
  %retval.0.i23 = phi i32 [ %call8.i, %if.then10.i ], [ -22, %if.then32.i.do_mount_setattr.exit_crit_edge ], [ %err.192.i, %if.then22.i.do_mount_setattr.exit_crit_edge ], [ 0, %if.then20.i.do_mount_setattr.exit_crit_edge ], [ %err.192.i, %if.end17.i.do_mount_setattr.exit_crit_edge ], [ %err.192.i, %while.cond.i.i76.i.do_mount_setattr.exit_crit_edge ], [ %err.192.i, %next_mnt.exit.i85.i.do_mount_setattr.exit_crit_edge ]
  call void @path_put(ptr noundef nonnull %target.i) #22
  br label %if.end34.i

if.end34.i:                                       ; preds = %do_mount_setattr.exit, %if.end29.i.if.end34.i_crit_edge
  %err.0.i = phi i32 [ %call.i51.i, %if.end29.i.if.end34.i_crit_edge ], [ %retval.0.i23, %do_mount_setattr.exit ]
  %tobool.not.i.i52.i = icmp eq ptr %kattr.i.sroa.27.0, null
  br i1 %tobool.not.i.i52.i, label %if.end34.i.__do_sys_mount_setattr.exit_crit_edge, label %land.lhs.true.i.i.i

if.end34.i.__do_sys_mount_setattr.exit_crit_edge: ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_mount_setattr.exit

land.lhs.true.i.i.i:                              ; preds = %if.end34.i
  %count.i.i.i = getelementptr inbounds %struct.user_namespace, ptr %kattr.i.sroa.27.0, i32 0, i32 7, i32 3
  %call.i.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %count.i.i.i, i32 noundef 4) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !381
  call void @llvm.prefetch.p0(ptr %count.i.i.i, i32 1, i32 3, i32 1) #22
  %190 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i.i.i, ptr %count.i.i.i, i32 1, ptr elementtype(i32) %count.i.i.i) #22, !srcloc !382
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %190, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i.i.i, label %if.end5.i.i.i.i.i.i

if.end5.i.i.i.i.i.i:                              ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i.i, label %if.end5.i.i.i.i.i.i.__do_sys_mount_setattr.exit_crit_edge, label %if.then10.i.i.i.i.i.i, !prof !352

if.end5.i.i.i.i.i.i.__do_sys_mount_setattr.exit_crit_edge: ; preds = %if.end5.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__do_sys_mount_setattr.exit

if.then10.i.i.i.i.i.i:                            ; preds = %if.end5.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @refcount_warn_saturate(ptr noundef %count.i.i.i, i32 noundef 3) #22
  br label %__do_sys_mount_setattr.exit

if.then.i.i.i:                                    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !383
  call void @__put_user_ns(ptr noundef nonnull %kattr.i.sroa.27.0) #22
  br label %__do_sys_mount_setattr.exit

__do_sys_mount_setattr.exit:                      ; preds = %if.then.i.i.i, %if.then10.i.i.i.i.i.i, %if.end5.i.i.i.i.i.i.__do_sys_mount_setattr.exit_crit_edge, %if.end34.i.__do_sys_mount_setattr.exit_crit_edge, %build_mount_kattr.exit.thread61.i, %if.end7.i.i.i.__do_sys_mount_setattr.exit_crit_edge, %if.end5.i.i.i.__do_sys_mount_setattr.exit_crit_edge, %if.end.i.i.i.__do_sys_mount_setattr.exit_crit_edge, %if.else.i.i.__do_sys_mount_setattr.exit_crit_edge, %if.end364.i.i.__do_sys_mount_setattr.exit_crit_edge, %if.end348.i.i.__do_sys_mount_setattr.exit_crit_edge, %if.end340.i.i.__do_sys_mount_setattr.exit_crit_edge, %cond.false.i.i.__do_sys_mount_setattr.exit_crit_edge, %if.end25.i.__do_sys_mount_setattr.exit_crit_edge, %land.lhs.true22.i.__do_sys_mount_setattr.exit_crit_edge, %if.then11.i.i.i.i, %if.then9.i.i.__do_sys_mount_setattr.exit_crit_edge, %if.end13.i.__do_sys_mount_setattr.exit_crit_edge, %if.end4.i.__do_sys_mount_setattr.exit_crit_edge, %if.end.i.__do_sys_mount_setattr.exit_crit_edge, %entry.__do_sys_mount_setattr.exit_crit_edge
  %retval.0.i = phi i32 [ -22, %entry.__do_sys_mount_setattr.exit_crit_edge ], [ -7, %if.end.i.__do_sys_mount_setattr.exit_crit_edge ], [ -22, %if.end4.i.__do_sys_mount_setattr.exit_crit_edge ], [ -1, %if.end13.i.__do_sys_mount_setattr.exit_crit_edge ], [ 0, %land.lhs.true22.i.__do_sys_mount_setattr.exit_crit_edge ], [ %err.0.i.i.ph.i, %build_mount_kattr.exit.thread61.i ], [ -14, %if.then11.i.i.i.i ], [ %..i.i, %if.then9.i.i.__do_sys_mount_setattr.exit_crit_edge ], [ -9, %if.end7.i.i.i.__do_sys_mount_setattr.exit_crit_edge ], [ -22, %if.end5.i.i.i.__do_sys_mount_setattr.exit_crit_edge ], [ -22, %if.end.i.i.i.__do_sys_mount_setattr.exit_crit_edge ], [ -22, %if.else.i.i.__do_sys_mount_setattr.exit_crit_edge ], [ -22, %if.end364.i.i.__do_sys_mount_setattr.exit_crit_edge ], [ -22, %if.end348.i.i.__do_sys_mount_setattr.exit_crit_edge ], [ -22, %if.end340.i.i.__do_sys_mount_setattr.exit_crit_edge ], [ -22, %cond.false.i.i.__do_sys_mount_setattr.exit_crit_edge ], [ -22, %if.end25.i.__do_sys_mount_setattr.exit_crit_edge ], [ %err.0.i, %if.then.i.i.i ], [ %err.0.i, %if.then10.i.i.i.i.i.i ], [ %err.0.i, %if.end5.i.i.i.i.i.i.__do_sys_mount_setattr.exit_crit_edge ], [ %err.0.i, %if.end34.i.__do_sys_mount_setattr.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %attr.i) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %target.i) #22
  ret i32 %retval.0.i
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @mnt_init() local_unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.30, i32 noundef 168, i32 noundef 0, i32 noundef 67379200, ptr noundef null) #22
  store ptr %call, ptr @mnt_cache, align 4
  %0 = load i32, ptr @mhash_entries, align 4
  %call1 = tail call ptr @alloc_large_system_hash(ptr noundef nonnull @.str.31, i32 noundef 4, i32 noundef %0, i32 noundef 19, i32 noundef 4, ptr noundef nonnull @m_hash_shift, ptr noundef nonnull @m_hash_mask, i32 noundef 0, i32 noundef 0) #22
  store ptr %call1, ptr @mount_hashtable, align 4
  %1 = load i32, ptr @mphash_entries, align 4
  %call2 = tail call ptr @alloc_large_system_hash(ptr noundef nonnull @.str.32, i32 noundef 4, i32 noundef %1, i32 noundef 19, i32 noundef 4, ptr noundef nonnull @mp_hash_shift, ptr noundef nonnull @mp_hash_mask, i32 noundef 0, i32 noundef 0) #22
  store ptr %call2, ptr @mountpoint_hashtable, align 4
  %2 = load ptr, ptr @mount_hashtable, align 4
  %tobool.not = icmp eq ptr %2, null
  %tobool3.not = icmp eq ptr %call2, null
  %or.cond = select i1 %tobool.not, i1 true, i1 %tobool3.not
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  call void @__asan_handle_no_return()
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.33) #31
  unreachable

if.end:                                           ; preds = %entry
  tail call void @kernfs_init() #22
  %call4 = tail call i32 @sysfs_init() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.end.if.end8_crit_edge, label %do.end

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end8

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.35, i32 noundef %call4) #29
  br label %if.end8

if.end8:                                          ; preds = %do.end, %if.end.if.end8_crit_edge
  %call9 = tail call ptr @kobject_create_and_add(ptr noundef nonnull @.str.36, ptr noundef null) #22
  store ptr %call9, ptr @fs_kobj, align 4
  %tobool10.not = icmp eq ptr %call9, null
  br i1 %tobool10.not, label %do.end14, label %if.end8.if.end17_crit_edge

if.end8.if.end17_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end17

do.end14:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #24
  %call16 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.35) #29
  br label %if.end17

if.end17:                                         ; preds = %do.end14, %if.end8.if.end17_crit_edge
  %call18 = tail call i32 @shmem_init() #22
  tail call void @init_rootfs() #29
  tail call fastcc void @init_mount_tree() #32
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_large_system_hash(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: cold noreturn null_pointer_is_valid
declare dso_local void @panic(ptr noundef, ...) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local void @kernfs_init() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_init() local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #12

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kobject_create_and_add(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @shmem_init() local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @init_rootfs() local_unnamed_addr #12 section ".init.text"

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @init_mount_tree() unnamed_addr #0 section ".init.text" align 64 {
entry:
  %root = alloca %struct.path, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %root) #22
  %0 = ptrtoint ptr %root to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %root, align 4, !annotation !380
  %1 = getelementptr inbounds %struct.path, ptr %root, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !380
  %call = tail call ptr @vfs_kern_mount(ptr noundef nonnull @rootfs_fs_type, i32 noundef 0, ptr noundef nonnull @.str.97, ptr noundef null)
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  call void @__asan_handle_no_return()
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.98) #31
  unreachable

if.end:                                           ; preds = %entry
  %call2 = tail call fastcc ptr @alloc_mnt_ns(ptr noundef nonnull @init_user_ns, i1 noundef zeroext false)
  %cmp.i26 = icmp ugt ptr %call2, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i26, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  call void @__asan_handle_no_return()
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.99) #31
  unreachable

if.end5:                                          ; preds = %if.end
  %add.ptr.i = getelementptr i8, ptr %call, i32 -16
  %mnt_ns = getelementptr i8, ptr %call, i32 100
  %3 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %call2, ptr %mnt_ns, align 4
  %root7 = getelementptr inbounds %struct.mnt_namespace, ptr %call2, i32 0, i32 1
  %4 = ptrtoint ptr %root7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %add.ptr.i, ptr %root7, align 8
  %mounts = getelementptr inbounds %struct.mnt_namespace, ptr %call2, i32 0, i32 9
  %5 = ptrtoint ptr %mounts to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 1, ptr %mounts, align 8
  %mnt_list = getelementptr i8, ptr %call, i32 56
  %list = getelementptr inbounds %struct.mnt_namespace, ptr %call2, i32 0, i32 2
  %6 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %list, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %mnt_list, ptr noundef %list, ptr noundef %7) #22
  br i1 %call.i.i, label %if.end.i.i, label %if.end5.list_add.exit_crit_edge

if.end5.list_add.exit_crit_edge:                  ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #24
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %mnt_list, ptr %prev1.i.i, align 4
  %9 = ptrtoint ptr %mnt_list to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %7, ptr %mnt_list, align 4
  %prev3.i.i = getelementptr i8, ptr %call, i32 60
  %10 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %list, ptr %prev3.i.i, align 4
  %11 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %mnt_list, ptr %list, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end5.list_add.exit_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.task_struct, ptr @init_task, i32 0, i32 110) to i32))
  %12 = load ptr, ptr getelementptr inbounds (%struct.task_struct, ptr @init_task, i32 0, i32 110), align 4
  %mnt_ns8 = getelementptr inbounds %struct.nsproxy, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %mnt_ns8 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call2, ptr %mnt_ns8, align 4
  %count.i = getelementptr inbounds %struct.ns_common, ptr %call2, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #22
  %14 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #22, !srcloc !373
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %14, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %list_add.exit.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !343

list_add.exit.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %list_add.exit
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %15 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %15)
  %.not.i.i.i.i = icmp sgt i32 %15, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.get_mnt_ns.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !352

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.get_mnt_ns.exit_crit_edge:        ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %get_mnt_ns.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %list_add.exit.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %list_add.exit.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %count.i, i32 noundef %.sink.i.i.i.i) #22
  br label %get_mnt_ns.exit

get_mnt_ns.exit:                                  ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.get_mnt_ns.exit_crit_edge
  %16 = ptrtoint ptr %root to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %call, ptr %root, align 4
  %17 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %call, align 4
  %19 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %18, ptr %1, align 4
  %mnt_flags = getelementptr inbounds %struct.vfsmount, ptr %call, i32 0, i32 2
  %20 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %mnt_flags, align 4
  %or = or i32 %21, 8388608
  store i32 %or, ptr %mnt_flags, align 4
  %22 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %task, align 8
  %fs = getelementptr inbounds %struct.task_struct, ptr %25, i32 0, i32 107
  %26 = ptrtoint ptr %fs to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %fs, align 128
  call void @set_fs_pwd(ptr noundef %27, ptr noundef nonnull %root) #22
  %28 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %task, align 8
  %fs13 = getelementptr inbounds %struct.task_struct, ptr %29, i32 0, i32 107
  %30 = ptrtoint ptr %fs13 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %fs13, align 128
  call void @set_fs_root(ptr noundef %31, ptr noundef nonnull %root) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %root) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @kern_mount(ptr noundef %type) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type, align 4
  %call = tail call ptr @vfs_kern_mount(ptr noundef %type, i32 noundef 4194304, ptr noundef %1, ptr noundef null)
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %mnt_ns = getelementptr i8, ptr %call, i32 100
  %2 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -22 to ptr), ptr %mnt_ns, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @kern_unmount(ptr noundef %mnt) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %mnt, null
  %cmp.i = icmp ugt ptr %mnt, inttoptr (i32 -4096 to ptr)
  %spec.select.i = or i1 %tobool.not.i, %cmp.i
  br i1 %spec.select.i, label %entry.if.end_crit_edge, label %if.then.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr i8, ptr %mnt, i32 -16
  %mnt_ns = getelementptr i8, ptr %mnt, i32 100
  %0 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %mnt_ns, align 4
  tail call void @synchronize_rcu() #22
  %mnt_expiry_mark.i = getelementptr i8, ptr %mnt, i32 140
  %1 = ptrtoint ptr %mnt_expiry_mark.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %mnt_expiry_mark.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool1.not.i = icmp eq i32 %2, 0
  br i1 %tobool1.not.i, label %if.then.i.mntput.exit_crit_edge, label %if.then4.i, !prof !352

if.then.i.mntput.exit_crit_edge:                  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mntput.exit

if.then4.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  %3 = ptrtoint ptr %mnt_expiry_mark.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %mnt_expiry_mark.i, align 4
  br label %mntput.exit

mntput.exit:                                      ; preds = %if.then4.i, %if.then.i.mntput.exit_crit_edge
  tail call fastcc void @mntput_no_expire(ptr noundef %add.ptr.i) #22
  br label %if.end

if.end:                                           ; preds = %mntput.exit, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @kern_unmount_array(ptr nocapture noundef readonly %mnt, i32 noundef %num) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num)
  %cmp18.not = icmp eq i32 %num, 0
  br i1 %cmp18.not, label %for.end.thread, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.end.thread:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @synchronize_rcu_expedited() #22
  br label %for.end8

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %i.019 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr ptr, ptr %mnt, i32 %i.019
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  %mnt_ns = getelementptr i8, ptr %1, i32 100
  %2 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %mnt_ns, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %inc = add nuw i32 %i.019, 1
  %exitcond.not = icmp eq i32 %inc, %num
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.end:                                          ; preds = %for.inc
  tail call void @synchronize_rcu_expedited() #22
  br i1 %cmp18.not, label %for.end.for.end8_crit_edge, label %for.end.for.body4_crit_edge

for.end.for.body4_crit_edge:                      ; preds = %for.end
  br label %for.body4

for.end.for.end8_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end8

for.body4:                                        ; preds = %mntput.exit.for.body4_crit_edge, %for.end.for.body4_crit_edge
  %i.121 = phi i32 [ %inc7, %mntput.exit.for.body4_crit_edge ], [ 0, %for.end.for.body4_crit_edge ]
  %arrayidx5 = getelementptr ptr, ptr %mnt, i32 %i.121
  %3 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx5, align 4
  %tobool.not.i = icmp eq ptr %4, null
  br i1 %tobool.not.i, label %for.body4.mntput.exit_crit_edge, label %if.then.i

for.body4.mntput.exit_crit_edge:                  ; preds = %for.body4
  call void @__sanitizer_cov_trace_pc() #24
  br label %mntput.exit

if.then.i:                                        ; preds = %for.body4
  %add.ptr.i.i = getelementptr i8, ptr %4, i32 -16
  %mnt_expiry_mark.i = getelementptr i8, ptr %4, i32 140
  %5 = ptrtoint ptr %mnt_expiry_mark.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %mnt_expiry_mark.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool1.not.i = icmp eq i32 %6, 0
  br i1 %tobool1.not.i, label %if.then.i.if.end.i_crit_edge, label %if.then4.i, !prof !352

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i

if.then4.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  %7 = ptrtoint ptr %mnt_expiry_mark.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %mnt_expiry_mark.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then4.i, %if.then.i.if.end.i_crit_edge
  tail call fastcc void @mntput_no_expire(ptr noundef %add.ptr.i.i) #22
  br label %mntput.exit

mntput.exit:                                      ; preds = %if.end.i, %for.body4.mntput.exit_crit_edge
  %inc7 = add nuw i32 %i.121, 1
  %exitcond22.not = icmp eq i32 %inc7, %num
  br i1 %exitcond22.not, label %mntput.exit.for.end8_crit_edge, label %mntput.exit.for.body4_crit_edge

mntput.exit.for.body4_crit_edge:                  ; preds = %mntput.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body4

mntput.exit.for.end8_crit_edge:                   ; preds = %mntput.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end8

for.end8:                                         ; preds = %mntput.exit.for.end8_crit_edge, %for.end.for.end8_crit_edge, %for.end.thread
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu_expedited() local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @our_mnt(ptr nocapture noundef readonly %mnt) local_unnamed_addr #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %mnt_ns.i = getelementptr i8, ptr %mnt, i32 100
  %0 = ptrtoint ptr %mnt_ns.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mnt_ns.i, align 4
  %2 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i, align 8
  %nsproxy.i = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 110
  %6 = ptrtoint ptr %nsproxy.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %nsproxy.i, align 4
  %mnt_ns1.i = getelementptr inbounds %struct.nsproxy, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %mnt_ns1.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mnt_ns1.i, align 4
  %cmp.i = icmp eq ptr %1, %9
  ret i1 %cmp.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @current_chrooted() local_unnamed_addr #1 align 64 {
entry:
  %ns_root = alloca %struct.path, align 4
  %fs_root = alloca %struct.path, align 8
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %ns_root) #22
  %0 = getelementptr inbounds %struct.path, ptr %ns_root, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %fs_root) #22
  %1 = getelementptr inbounds %struct.path, ptr %fs_root, i32 0, i32 1
  %2 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task, align 8
  %nsproxy = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 110
  %6 = ptrtoint ptr %nsproxy to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %nsproxy, align 4
  %mnt_ns = getelementptr inbounds %struct.nsproxy, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mnt_ns, align 4
  %root = getelementptr inbounds %struct.mnt_namespace, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %root, align 8
  %mnt = getelementptr inbounds %struct.mount, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %ns_root to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %mnt, ptr %ns_root, align 4
  %13 = ptrtoint ptr %mnt to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %mnt, align 4
  %15 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %14, ptr %0, align 4
  call void @path_get(ptr noundef nonnull %ns_root) #22
  br label %while.cond

while.cond:                                       ; preds = %land.rhs.while.cond_crit_edge, %entry
  %16 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %0, align 4
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 8
  %and.i11 = and i32 %19, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i11)
  %tobool.i.not = icmp eq i32 %and.i11, 0
  br i1 %tobool.i.not, label %while.cond.while.end_crit_edge, label %land.rhs

while.cond.while.end_crit_edge:                   ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

land.rhs:                                         ; preds = %while.cond
  %call5 = call i32 @follow_down_one(ptr noundef nonnull %ns_root) #22
  %tobool.not = icmp eq i32 %call5, 0
  br i1 %tobool.not, label %land.rhs.while.end_crit_edge, label %land.rhs.while.cond_crit_edge

land.rhs.while.cond_crit_edge:                    ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond

land.rhs.while.end_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.end:                                        ; preds = %land.rhs.while.end_crit_edge, %while.cond.while.end_crit_edge
  %20 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %task, align 8
  %fs = getelementptr inbounds %struct.task_struct, ptr %21, i32 0, i32 107
  %22 = ptrtoint ptr %fs to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %fs, align 128
  %lock.i = getelementptr inbounds %struct.fs_struct, ptr %23, i32 0, i32 1
  call void @_raw_spin_lock(ptr noundef %lock.i) #22
  %root1.i = getelementptr inbounds %struct.fs_struct, ptr %23, i32 0, i32 5
  %24 = ptrtoint ptr %root1.i to i32
  call void @__asan_loadN_noabort(i32 %24, i32 8)
  %25 = load i64, ptr %root1.i, align 4
  %26 = ptrtoint ptr %fs_root to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %25, ptr %fs_root, align 8
  call void @path_get(ptr noundef nonnull %fs_root) #22
  call void @_raw_spin_unlock(ptr noundef %lock.i) #22
  %27 = ptrtoint ptr %fs_root to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_root, align 8
  %29 = ptrtoint ptr %ns_root to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ns_root, align 4
  %cmp.i = icmp eq ptr %28, %30
  br i1 %cmp.i, label %land.rhs.i, label %while.end.path_equal.exit_crit_edge

while.end.path_equal.exit_crit_edge:              ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %path_equal.exit

land.rhs.i:                                       ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #24
  %31 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %1, align 4
  %33 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %0, align 4
  %cmp3.i = icmp ne ptr %32, %34
  br label %path_equal.exit

path_equal.exit:                                  ; preds = %land.rhs.i, %while.end.path_equal.exit_crit_edge
  %35 = phi i1 [ true, %while.end.path_equal.exit_crit_edge ], [ %cmp3.i, %land.rhs.i ]
  call void @path_put(ptr noundef nonnull %fs_root) #22
  call void @path_put(ptr noundef nonnull %ns_root) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %fs_root) #22
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %ns_root) #22
  ret i1 %35
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @path_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @follow_down_one(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @mnt_may_suid(ptr nocapture noundef readonly %mnt) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %mnt_flags = getelementptr inbounds %struct.vfsmount, ptr %mnt, i32 0, i32 2
  %0 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mnt_flags, align 4
  %and = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.land.end_crit_edge

entry.land.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.end

land.lhs.true:                                    ; preds = %entry
  %mnt_ns.i = getelementptr i8, ptr %mnt, i32 100
  %2 = ptrtoint ptr %mnt_ns.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mnt_ns.i, align 4
  %4 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task.i, align 8
  %nsproxy.i = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 110
  %8 = ptrtoint ptr %nsproxy.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %nsproxy.i, align 4
  %mnt_ns1.i = getelementptr inbounds %struct.nsproxy, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %mnt_ns1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mnt_ns1.i, align 4
  %cmp.i.not = icmp eq ptr %3, %11
  br i1 %cmp.i.not, label %land.rhs, label %land.lhs.true.land.end_crit_edge

land.lhs.true.land.end_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  %mnt_sb = getelementptr inbounds %struct.vfsmount, ptr %mnt, i32 0, i32 1
  %12 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %mnt_sb, align 4
  %s_user_ns = getelementptr inbounds %struct.super_block, ptr %13, i32 0, i32 53
  %14 = ptrtoint ptr %s_user_ns to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %s_user_ns, align 8
  %call3 = tail call zeroext i1 @current_in_userns(ptr noundef %15) #22
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.land.end_crit_edge, %entry.land.end_crit_edge
  %16 = phi i1 [ false, %land.lhs.true.land.end_crit_edge ], [ false, %entry.land.end_crit_edge ], [ %call3, %land.rhs ]
  ret i1 %16
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @current_in_userns(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @mntns_get(ptr noundef %task) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %alloc_lock.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 127
  tail call void @_raw_spin_lock(ptr noundef %alloc_lock.i) #22
  %nsproxy1 = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 110
  %0 = ptrtoint ptr %nsproxy1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nsproxy1, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %entry
  %mnt_ns = getelementptr inbounds %struct.nsproxy, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mnt_ns, align 4
  %count.i = getelementptr inbounds %struct.ns_common, ptr %3, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #22
  %4 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #22, !srcloc !373
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %4, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !343

if.then.if.end15.sink.split.i.i.i.i_crit_edge:    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %5 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %5)
  %.not.i.i.i.i = icmp sgt i32 %5, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.if.end_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !352

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.if.end_crit_edge:                 ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %count.i, i32 noundef %.sink.i.i.i.i) #22
  br label %if.end

if.end:                                           ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.if.end_crit_edge, %entry.if.end_crit_edge
  %ns.0 = phi ptr [ null, %entry.if.end_crit_edge ], [ %3, %if.else.i.i.i.i.if.end_crit_edge ], [ %3, %if.end15.sink.split.i.i.i.i ]
  tail call void @_raw_spin_unlock(ptr noundef %alloc_lock.i) #22
  ret ptr %ns.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mntns_put(ptr noundef %ns) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @put_mnt_ns(ptr noundef %ns)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mntns_install(ptr nocapture noundef readonly %nsset, ptr noundef %ns) #1 align 64 {
entry:
  %root = alloca %struct.path, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %nsproxy1 = getelementptr inbounds %struct.nsset, ptr %nsset, i32 0, i32 1
  %0 = ptrtoint ptr %nsproxy1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nsproxy1, align 4
  %fs2 = getelementptr inbounds %struct.nsset, ptr %nsset, i32 0, i32 2
  %2 = ptrtoint ptr %fs2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %fs2, align 4
  %cred = getelementptr inbounds %struct.nsset, ptr %nsset, i32 0, i32 3
  %4 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred, align 4
  %user_ns3 = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 25
  %6 = ptrtoint ptr %user_ns3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %user_ns3, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %root) #22
  %8 = ptrtoint ptr %root to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr inttoptr (i32 -1 to ptr), ptr %root, align 4, !annotation !380
  %9 = getelementptr inbounds %struct.path, ptr %root, i32 0, i32 1
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 -1 to ptr), ptr %9, align 4, !annotation !380
  %user_ns4 = getelementptr inbounds %struct.mnt_namespace, ptr %ns, i32 0, i32 4
  %11 = ptrtoint ptr %user_ns4 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %user_ns4, align 8
  %call5 = tail call zeroext i1 @ns_capable(ptr noundef %12, i32 noundef 21) #22
  br i1 %call5, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %call6 = tail call zeroext i1 @ns_capable(ptr noundef %7, i32 noundef 18) #22
  br i1 %call6, label %lor.lhs.false7, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %call8 = tail call zeroext i1 @ns_capable(ptr noundef %7, i32 noundef 21) #22
  br i1 %call8, label %if.end, label %lor.lhs.false7.cleanup_crit_edge

lor.lhs.false7.cleanup_crit_edge:                 ; preds = %lor.lhs.false7
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false7
  %seq.i = getelementptr inbounds %struct.mnt_namespace, ptr %ns, i32 0, i32 6
  %13 = ptrtoint ptr %seq.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %seq.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %14)
  %cmp.i = icmp eq i64 %14, 0
  br i1 %cmp.i, label %if.end.cleanup_crit_edge, label %if.end11

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end11:                                         ; preds = %if.end
  %15 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %16)
  %cmp.not = icmp eq i32 %16, 1
  br i1 %cmp.not, label %if.end13, label %if.end11.cleanup_crit_edge

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end13:                                         ; preds = %if.end11
  %count.i = getelementptr inbounds %struct.ns_common, ptr %ns, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #22
  tail call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #22
  %17 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #22, !srcloc !373
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %17, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end13.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !343

if.end13.if.end15.sink.split.i.i.i.i_crit_edge:   ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end13
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %18 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %18)
  %.not.i.i.i.i = icmp sgt i32 %18, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.get_mnt_ns.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !352

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.get_mnt_ns.exit_crit_edge:        ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %get_mnt_ns.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end13.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end13.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %count.i, i32 noundef %.sink.i.i.i.i) #22
  br label %get_mnt_ns.exit

get_mnt_ns.exit:                                  ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.get_mnt_ns.exit_crit_edge
  %mnt_ns14 = getelementptr inbounds %struct.nsproxy, ptr %1, i32 0, i32 3
  %19 = ptrtoint ptr %mnt_ns14 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %mnt_ns14, align 4
  store ptr %ns, ptr %mnt_ns14, align 4
  %root16 = getelementptr inbounds %struct.mnt_namespace, ptr %ns, i32 0, i32 1
  %21 = ptrtoint ptr %root16 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %root16, align 8
  %mnt = getelementptr inbounds %struct.mount, ptr %22, i32 0, i32 3
  %23 = ptrtoint ptr %mnt to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %mnt, align 4
  %call19 = call i32 @vfs_path_lookup(ptr noundef %24, ptr noundef %mnt, ptr noundef nonnull @.str.100, i32 noundef 32768, ptr noundef nonnull %root) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool.not = icmp eq i32 %call19, 0
  br i1 %tobool.not, label %if.end22, label %if.then20

if.then20:                                        ; preds = %get_mnt_ns.exit
  call void @__sanitizer_cov_trace_pc() #24
  %25 = ptrtoint ptr %mnt_ns14 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %20, ptr %mnt_ns14, align 4
  call void @put_mnt_ns(ptr noundef %ns)
  br label %cleanup

if.end22:                                         ; preds = %get_mnt_ns.exit
  call void @__sanitizer_cov_trace_pc() #24
  call void @put_mnt_ns(ptr noundef %20)
  call void @set_fs_pwd(ptr noundef %3, ptr noundef nonnull %root) #22
  call void @set_fs_root(ptr noundef %3, ptr noundef nonnull %root) #22
  call void @path_put(ptr noundef nonnull %root) #22
  br label %cleanup

cleanup:                                          ; preds = %if.end22, %if.then20, %if.end11.cleanup_crit_edge, %if.end.cleanup_crit_edge, %lor.lhs.false7.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call19, %if.then20 ], [ 0, %if.end22 ], [ -1, %lor.lhs.false7.cleanup_crit_edge ], [ -1, %lor.lhs.false.cleanup_crit_edge ], [ -1, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ -22, %if.end11.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %root) #22
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal ptr @mntns_owner(ptr nocapture noundef readonly %ns) #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %user_ns = getelementptr inbounds %struct.mnt_namespace, ptr %ns, i32 0, i32 4
  %0 = ptrtoint ptr %user_ns to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %user_ns, align 8
  ret ptr %1
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @init_fs_namespace_sysctls() #0 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__register_sysctl_init(ptr noundef nonnull @.str.36, ptr noundef nonnull @fs_namespace_sysctls, ptr noundef nonnull @.str.101) #22
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @simple_strtoul(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #15

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__percpu_down_read(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcuwait_wake_up(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #16

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__put_mountpoint(ptr noundef %mp, ptr noundef %list) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %m_count = getelementptr inbounds %struct.mountpoint, ptr %mp, i32 0, i32 3
  %0 = ptrtoint ptr %m_count to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %m_count, align 4
  %dec = add i32 %1, -1
  store i32 %dec, ptr %m_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool.not = icmp eq i32 %dec, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end14_crit_edge

entry.if.end14_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end14

if.then:                                          ; preds = %entry
  %m_dentry = getelementptr inbounds %struct.mountpoint, ptr %mp, i32 0, i32 1
  %2 = ptrtoint ptr %m_dentry to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %m_dentry, align 4
  %m_list = getelementptr inbounds %struct.mountpoint, ptr %mp, i32 0, i32 2
  %4 = ptrtoint ptr %m_list to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %m_list, align 4
  %tobool.not.i.not = icmp eq ptr %5, null
  br i1 %tobool.not.i.not, label %do.end11, label %do.body6, !prof !352

do.body6:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namespace.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 821, 0\0A.popsection", ""() #22, !srcloc !370
  unreachable

do.end11:                                         ; preds = %if.then
  %d_lockref = getelementptr inbounds %struct.dentry, ptr %3, i32 0, i32 7
  tail call void @_raw_spin_lock(ptr noundef %d_lockref) #22
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %3, align 8
  %and = and i32 %7, -65537
  store i32 %and, ptr %3, align 8
  tail call void @_raw_spin_unlock(ptr noundef %d_lockref) #22
  tail call void @dput_to_list(ptr noundef %3, ptr noundef %list) #22
  %8 = ptrtoint ptr %mp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mp, align 4
  %pprev2.i.i = getelementptr inbounds %struct.hlist_node, ptr %mp, i32 0, i32 1
  %10 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pprev2.i.i, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %9, ptr %11, align 4
  %tobool.not.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i, label %do.end11.hlist_del.exit_crit_edge, label %do.body13.i.i

do.end11.hlist_del.exit_crit_edge:                ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del.exit

do.body13.i.i:                                    ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i = getelementptr inbounds %struct.hlist_node, ptr %9, i32 0, i32 1
  %13 = ptrtoint ptr %pprev14.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %11, ptr %pprev14.i.i, align 4
  br label %hlist_del.exit

hlist_del.exit:                                   ; preds = %do.body13.i.i, %do.end11.hlist_del.exit_crit_edge
  %14 = ptrtoint ptr %mp to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 256 to ptr), ptr %mp, align 4
  %15 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i, align 4
  tail call void @kfree(ptr noundef %mp) #22
  br label %if.end14

if.end14:                                         ; preds = %hlist_del.exit, %entry.if.end14_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dput_to_list(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kstrdup_const(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__alloc_percpu(i32 noundef, i32 noundef) local_unnamed_addr #17

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_const(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kmem_cache_alloc(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ida_alloc_range(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #18

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockref_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @unhash_mnt(ptr noundef %mnt) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %mnt_parent = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 1
  %0 = ptrtoint ptr %mnt_parent to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %mnt, ptr %mnt_parent, align 4
  %mnt1 = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 3
  %1 = ptrtoint ptr %mnt1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %mnt1, align 4
  %mnt_mountpoint = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 2
  %3 = ptrtoint ptr %mnt_mountpoint to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %2, ptr %mnt_mountpoint, align 4
  %mnt_child = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 7
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %mnt_child) #22
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_del_init.exit_crit_edge

entry.list_del_init.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 7, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i, align 4
  %6 = ptrtoint ptr %mnt_child to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mnt_child, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev1.i.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %7, ptr %5, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %entry.list_del_init.exit_crit_edge
  %10 = ptrtoint ptr %mnt_child to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %mnt_child, ptr %mnt_child, align 4
  %prev.i3.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 7, i32 1
  %11 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %mnt_child, ptr %prev.i3.i, align 4
  %pprev.i.i = getelementptr inbounds %struct.hlist_node, ptr %mnt, i32 0, i32 1
  %12 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pprev.i.i, align 4
  %tobool.not.i.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i.not.i, label %list_del_init.exit.hlist_del_init_rcu.exit_crit_edge, label %if.then.i

list_del_init.exit.hlist_del_init_rcu.exit_crit_edge: ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del_init_rcu.exit

if.then.i:                                        ; preds = %list_del_init.exit
  %14 = ptrtoint ptr %mnt to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mnt, align 4
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %15, ptr %13, align 4
  %tobool.not.i7.i = icmp eq ptr %15, null
  br i1 %tobool.not.i7.i, label %if.then.i.__hlist_del.exit.i_crit_edge, label %do.body13.i.i

if.then.i.__hlist_del.exit.i_crit_edge:           ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__hlist_del.exit.i

do.body13.i.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i = getelementptr inbounds %struct.hlist_node, ptr %15, i32 0, i32 1
  %17 = ptrtoint ptr %pprev14.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %13, ptr %pprev14.i.i, align 4
  br label %__hlist_del.exit.i

__hlist_del.exit.i:                               ; preds = %do.body13.i.i, %if.then.i.__hlist_del.exit.i_crit_edge
  %18 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr null, ptr %pprev.i.i, align 4
  br label %hlist_del_init_rcu.exit

hlist_del_init_rcu.exit:                          ; preds = %__hlist_del.exit.i, %list_del_init.exit.hlist_del_init_rcu.exit_crit_edge
  %19 = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 18
  %pprev.i.i11 = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 18, i32 0, i32 1
  %20 = ptrtoint ptr %pprev.i.i11 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pprev.i.i11, align 4
  %tobool.not.i.not.i12 = icmp eq ptr %21, null
  br i1 %tobool.not.i.not.i12, label %hlist_del_init_rcu.exit.hlist_del_init.exit_crit_edge, label %if.then.i13

hlist_del_init_rcu.exit.hlist_del_init.exit_crit_edge: ; preds = %hlist_del_init_rcu.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del_init.exit

if.then.i13:                                      ; preds = %hlist_del_init_rcu.exit
  %22 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %19, align 4
  %24 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %23, ptr %21, align 4
  %tobool.not.i3.i = icmp eq ptr %23, null
  br i1 %tobool.not.i3.i, label %if.then.i13.__hlist_del.exit.i16_crit_edge, label %do.body13.i.i15

if.then.i13.__hlist_del.exit.i16_crit_edge:       ; preds = %if.then.i13
  call void @__sanitizer_cov_trace_pc() #24
  br label %__hlist_del.exit.i16

do.body13.i.i15:                                  ; preds = %if.then.i13
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i14 = getelementptr inbounds %struct.hlist_node, ptr %23, i32 0, i32 1
  %25 = ptrtoint ptr %pprev14.i.i14 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %21, ptr %pprev14.i.i14, align 4
  br label %__hlist_del.exit.i16

__hlist_del.exit.i16:                             ; preds = %do.body13.i.i15, %if.then.i13.__hlist_del.exit.i16_crit_edge
  %26 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr null, ptr %19, align 4
  %27 = ptrtoint ptr %pprev.i.i11 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr null, ptr %pprev.i.i11, align 4
  br label %hlist_del_init.exit

hlist_del_init.exit:                              ; preds = %__hlist_del.exit.i16, %hlist_del_init_rcu.exit.hlist_del_init.exit_crit_edge
  %mnt_mp = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 17
  %28 = ptrtoint ptr %mnt_mp to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %mnt_mp, align 4
  store ptr null, ptr %mnt_mp, align 4
  ret ptr %29
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @shrink_dentry_list(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__cleanup_mnt(ptr noundef %head) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %head, i32 -32
  tail call fastcc void @cleanup_mnt(ptr noundef %add.ptr)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @task_work_add(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cleanup_mnt(ptr noundef %mnt) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %call6.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__sanitizer_cov_trace_cmp4(i32 %call6.i, i32 %0)
  %cmp7.i = icmp ult i32 %call6.i, %0
  br i1 %cmp7.i, label %do.body.lr.ph.i, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

do.body.lr.ph.i:                                  ; preds = %entry
  %mnt_pcp.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 5
  %1 = ptrtoint ptr %mnt_pcp.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %mnt_pcp.i, align 4
  %3 = ptrtoint ptr %2 to i32
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %do.body.lr.ph.i
  %call9.i = phi i32 [ %call6.i, %do.body.lr.ph.i ], [ %call.i, %do.body.i.do.body.i_crit_edge ]
  %count.08.i = phi i32 [ 0, %do.body.lr.ph.i ], [ %add2.i, %do.body.i.do.body.i_crit_edge ]
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call9.i
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %5, %3
  %6 = inttoptr i32 %add.i to ptr
  %mnt_writers.i = getelementptr inbounds %struct.mnt_pcp, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %mnt_writers.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %mnt_writers.i, align 4
  %add2.i = add i32 %8, %count.08.i
  %call.i = tail call i32 @cpumask_next(i32 noundef %call9.i, ptr noundef nonnull @__cpu_possible_mask) #25
  %cmp.i = icmp ult i32 %call.i, %0
  br i1 %cmp.i, label %do.body.i.do.body.i_crit_edge, label %mnt_get_writers.exit

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.body.i

mnt_get_writers.exit:                             ; preds = %do.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add2.i)
  %tobool.not = icmp eq i32 %add2.i, 0
  br i1 %tobool.not, label %mnt_get_writers.exit.if.end_crit_edge, label %do.end, !prof !352

mnt_get_writers.exit.if.end_crit_edge:            ; preds = %mnt_get_writers.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

do.end:                                           ; preds = %mnt_get_writers.exit
  call void @__sanitizer_cov_trace_pc() #24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1164, i32 noundef 9, ptr noundef null) #22
  br label %if.end

if.end:                                           ; preds = %do.end, %mnt_get_writers.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %mnt_pins = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 25
  %9 = ptrtoint ptr %mnt_pins to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mnt_pins, align 4
  %tobool20.not = icmp eq ptr %10, null
  br i1 %tobool20.not, label %if.end.if.end28_crit_edge, label %if.then27, !prof !352

if.end.if.end28_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end28

if.then27:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @mnt_pin_kill(ptr noundef %mnt) #22
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %if.end.if.end28_crit_edge
  %mnt_stuck_children = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 26
  %11 = ptrtoint ptr %mnt_stuck_children to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %mnt_stuck_children, align 4
  %tobool31.not = icmp eq ptr %12, null
  %add.ptr = getelementptr i8, ptr %12, i32 -124
  %tobool33.not6971 = icmp eq ptr %add.ptr, null
  %tobool33.not69 = or i1 %tobool31.not, %tobool33.not6971
  br i1 %tobool33.not69, label %if.end28.for.end_crit_edge, label %if.end28.land.rhs_crit_edge

if.end28.land.rhs_crit_edge:                      ; preds = %if.end28
  br label %land.rhs

if.end28.for.end_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

land.rhs:                                         ; preds = %mntput.exit.land.rhs_crit_edge, %if.end28.land.rhs_crit_edge
  %m.070 = phi ptr [ %add.ptr43, %mntput.exit.land.rhs_crit_edge ], [ %add.ptr, %if.end28.land.rhs_crit_edge ]
  %13 = getelementptr inbounds %struct.mount, ptr %m.070, i32 0, i32 18
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 4
  %pprev2.i.i = getelementptr inbounds %struct.mount, ptr %m.070, i32 0, i32 18, i32 0, i32 1
  %16 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %pprev2.i.i, align 4
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %15, ptr %17, align 4
  %tobool.not.i.i = icmp eq ptr %15, null
  br i1 %tobool.not.i.i, label %land.rhs.hlist_del.exit_crit_edge, label %do.body13.i.i

land.rhs.hlist_del.exit_crit_edge:                ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del.exit

do.body13.i.i:                                    ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i = getelementptr inbounds %struct.hlist_node, ptr %15, i32 0, i32 1
  %19 = ptrtoint ptr %pprev14.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %17, ptr %pprev14.i.i, align 4
  br label %hlist_del.exit

hlist_del.exit:                                   ; preds = %do.body13.i.i, %land.rhs.hlist_del.exit_crit_edge
  %20 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr inttoptr (i32 256 to ptr), ptr %13, align 4
  %21 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i, align 4
  %mnt36 = getelementptr inbounds %struct.mount, ptr %m.070, i32 0, i32 3
  %tobool.not.i = icmp eq ptr %mnt36, null
  br i1 %tobool.not.i, label %hlist_del.exit.mntput.exit_crit_edge, label %if.then.i

hlist_del.exit.mntput.exit_crit_edge:             ; preds = %hlist_del.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %mntput.exit

if.then.i:                                        ; preds = %hlist_del.exit
  %mnt_expiry_mark.i = getelementptr inbounds %struct.mount, ptr %m.070, i32 0, i32 24
  %22 = ptrtoint ptr %mnt_expiry_mark.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %mnt_expiry_mark.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool1.not.i = icmp eq i32 %23, 0
  br i1 %tobool1.not.i, label %if.then.i.if.end.i_crit_edge, label %if.then4.i, !prof !352

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end.i

if.then4.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #24
  %24 = ptrtoint ptr %mnt_expiry_mark.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 0, ptr %mnt_expiry_mark.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then4.i, %if.then.i.if.end.i_crit_edge
  tail call fastcc void @mntput_no_expire(ptr noundef nonnull %m.070) #22
  br label %mntput.exit

mntput.exit:                                      ; preds = %if.end.i, %hlist_del.exit.mntput.exit_crit_edge
  %add.ptr43 = getelementptr i8, ptr %15, i32 -124
  %tobool33.not72 = icmp eq ptr %add.ptr43, null
  %tobool33.not = or i1 %tobool.not.i.i, %tobool33.not72
  br i1 %tobool33.not, label %mntput.exit.for.end_crit_edge, label %mntput.exit.land.rhs_crit_edge

mntput.exit.land.rhs_crit_edge:                   ; preds = %mntput.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs

mntput.exit.for.end_crit_edge:                    ; preds = %mntput.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %mntput.exit.for.end_crit_edge, %if.end28.for.end_crit_edge
  %mnt47 = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 3
  tail call void @__fsnotify_vfsmount_delete(ptr noundef %mnt47) #22
  %25 = ptrtoint ptr %mnt47 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %mnt47, align 4
  tail call void @dput(ptr noundef %26) #22
  %mnt_sb = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 3, i32 1
  %27 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %mnt_sb, align 4
  tail call void @deactivate_super(ptr noundef %28) #22
  %mnt_id.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 22
  %29 = ptrtoint ptr %mnt_id.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %mnt_id.i, align 4
  tail call void @ida_free(ptr noundef nonnull @mnt_id_ida, i32 noundef %30) #22
  %31 = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 4
  tail call void @call_rcu(ptr noundef %31, ptr noundef nonnull @delayed_free_vfsmnt) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @llist_add_batch(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @delayed_mntput(ptr nocapture noundef readnone %unused) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @delayed_mntput_list, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !400
  tail call void @llvm.prefetch.p0(ptr nonnull @delayed_mntput_list, i32 1, i32 3, i32 1) #22
  %0 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr nonnull @delayed_mntput_list) #22, !srcloc !378
  %asmresult.i.i = extractvalue { i32, i32 } %0, 0
  %1 = inttoptr i32 %asmresult.i.i to ptr
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !401
  %m.06 = getelementptr i8, ptr %1, i32 -32
  %cmp.not7 = icmp eq ptr %m.06, inttoptr (i32 -32 to ptr)
  br i1 %cmp.not7, label %entry.for.end_crit_edge, label %entry.land.rhs_crit_edge

entry.land.rhs_crit_edge:                         ; preds = %entry
  br label %land.rhs

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

land.rhs:                                         ; preds = %land.rhs.land.rhs_crit_edge, %entry.land.rhs_crit_edge
  %m.09 = phi ptr [ %m.0, %land.rhs.land.rhs_crit_edge ], [ %m.06, %entry.land.rhs_crit_edge ]
  %call.pn8 = phi ptr [ %3, %land.rhs.land.rhs_crit_edge ], [ %1, %entry.land.rhs_crit_edge ]
  %2 = ptrtoint ptr %call.pn8 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %call.pn8, align 4
  tail call fastcc void @cleanup_mnt(ptr noundef %m.09)
  %m.0 = getelementptr i8, ptr %3, i32 -32
  %cmp.not = icmp eq ptr %m.0, inttoptr (i32 -32 to ptr)
  br i1 %cmp.not, label %land.rhs.for.end_crit_edge, label %land.rhs.land.rhs_crit_edge

land.rhs.land.rhs_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs

land.rhs.for.end_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %land.rhs.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mnt_pin_kill(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @deactivate_super(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @delayed_free_vfsmnt(ptr noundef %head) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %head, i32 -32
  tail call fastcc void @free_vfsmnt(ptr noundef %add.ptr)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__fsnotify_vfsmount_delete(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @free_vfsmnt(ptr noundef %mnt) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %mnt_userns.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 3, i32 3
  %0 = ptrtoint ptr %mnt_userns.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %mnt_userns.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !375
  %cmp.i = icmp eq ptr %1, @init_user_ns
  %tobool.not.i = icmp eq ptr %1, null
  %or.cond = or i1 %cmp.i, %tobool.not.i
  br i1 %or.cond, label %entry.if.end_crit_edge, label %land.lhs.true.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true.i:                                  ; preds = %entry
  %count.i = getelementptr inbounds %struct.user_namespace, ptr %1, i32 0, i32 7, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !381
  tail call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #22
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #22, !srcloc !382
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.if.end_crit_edge, label %if.then10.i.i.i.i, !prof !352

if.end5.i.i.i.i.if.end_crit_edge:                 ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @refcount_warn_saturate(ptr noundef %count.i, i32 noundef 3) #22
  br label %if.end

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !383
  tail call void @__put_user_ns(ptr noundef nonnull %1) #22
  br label %if.end

if.end:                                           ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.if.end_crit_edge, %entry.if.end_crit_edge
  %mnt_devname = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 9
  %3 = ptrtoint ptr %mnt_devname to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mnt_devname, align 4
  tail call void @kfree_const(ptr noundef %4) #22
  %mnt_pcp = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 5
  %5 = ptrtoint ptr %mnt_pcp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mnt_pcp, align 4
  tail call void @free_percpu(ptr noundef %6) #22
  %7 = load ptr, ptr @mnt_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %7, ptr noundef %mnt) #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_percpu(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_user_ns(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @propagate_mount_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @propagate_umount(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @change_mnt_propagation(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @capable(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_sb_umount(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @ns_capable(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @fs_context_for_reconfigure(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @reconfigure_super(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_unused_fd_flags(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dentry_open(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_unused_fd(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @fd_install(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__do_loopback(ptr nocapture noundef readonly %old_path, i32 noundef %recurse) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %old_path to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %old_path, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 -16
  %mnt_flags = getelementptr i8, ptr %1, i32 8
  %2 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mnt_flags, align 4
  %and = and i32 %3, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %mnt_ns.i = getelementptr i8, ptr %1, i32 100
  %4 = ptrtoint ptr %mnt_ns.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mnt_ns.i, align 4
  %6 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task.i, align 8
  %nsproxy.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 110
  %10 = ptrtoint ptr %nsproxy.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %nsproxy.i, align 4
  %mnt_ns1.i = getelementptr inbounds %struct.nsproxy, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %mnt_ns1.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %mnt_ns1.i, align 4
  %cmp.i.not = icmp eq ptr %5, %13
  br i1 %cmp.i.not, label %if.end.if.end7_crit_edge, label %land.lhs.true

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

land.lhs.true:                                    ; preds = %if.end
  %dentry = getelementptr inbounds %struct.path, ptr %old_path, i32 0, i32 1
  %14 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %dentry, align 4
  %d_op = getelementptr inbounds %struct.dentry, ptr %15, i32 0, i32 8
  %16 = ptrtoint ptr %d_op to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %d_op, align 8
  %cmp.not = icmp eq ptr %17, @ns_dentry_operations
  br i1 %cmp.not, label %land.lhs.true.if.end7_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

land.lhs.true.if.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end7

if.end7:                                          ; preds = %land.lhs.true.if.end7_crit_edge, %if.end.if.end7_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %recurse)
  %tobool8.not = icmp eq i32 %recurse, 0
  %dentry10 = getelementptr inbounds %struct.path, ptr %old_path, i32 0, i32 1
  %18 = ptrtoint ptr %dentry10 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %dentry10, align 4
  br i1 %tobool8.not, label %land.lhs.true9, label %if.then15.critedge

land.lhs.true9:                                   ; preds = %if.end7
  %mnt_mounts.i = getelementptr i8, ptr %1, i32 28
  %20 = ptrtoint ptr %mnt_mounts.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %.pn14.i = load ptr, ptr %mnt_mounts.i, align 4
  %cmp.not15.i = icmp eq ptr %.pn14.i, %mnt_mounts.i
  br i1 %cmp.not15.i, label %land.lhs.true9.if.else_crit_edge, label %land.lhs.true9.for.body.i_crit_edge

land.lhs.true9.for.body.i_crit_edge:              ; preds = %land.lhs.true9
  br label %for.body.i

land.lhs.true9.if.else_crit_edge:                 ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %land.lhs.true9.for.body.i_crit_edge
  %.pn16.i = phi ptr [ %.pn.i, %for.inc.i.for.body.i_crit_edge ], [ %.pn14.i, %land.lhs.true9.for.body.i_crit_edge ]
  %mnt_mountpoint.i = getelementptr i8, ptr %.pn16.i, i32 -40
  %21 = ptrtoint ptr %mnt_mountpoint.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %mnt_mountpoint.i, align 4
  %call.i = tail call zeroext i1 @is_subdir(ptr noundef %22, ptr noundef %19) #22
  br i1 %call.i, label %if.end.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %mnt_flags.i = getelementptr i8, ptr %.pn16.i, i32 -28
  %23 = ptrtoint ptr %mnt_flags.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %mnt_flags.i, align 4
  %and.i = and i32 %24, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i.for.inc.i_crit_edge, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end.i.for.inc.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %25 = ptrtoint ptr %.pn16.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %.pn.i = load ptr, ptr %.pn16.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %mnt_mounts.i
  br i1 %cmp.not.i, label %for.inc.i.if.else_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i

for.inc.i.if.else_crit_edge:                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.else

if.then15.critedge:                               ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #24
  %call17 = tail call ptr @copy_tree(ptr noundef %add.ptr.i, ptr noundef %19, i32 noundef 64)
  br label %if.end20

if.else:                                          ; preds = %for.inc.i.if.else_crit_edge, %land.lhs.true9.if.else_crit_edge
  %26 = ptrtoint ptr %dentry10 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %dentry10, align 4
  %call19 = tail call fastcc ptr @clone_mnt(ptr noundef %add.ptr.i, ptr noundef %27, i32 noundef 0)
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then15.critedge
  %mnt.0 = phi ptr [ %call17, %if.then15.critedge ], [ %call19, %if.else ]
  %cmp.i42 = icmp ugt ptr %mnt.0, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i42, label %if.end20.cleanup_crit_edge, label %if.then22

if.end20.cleanup_crit_edge:                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then22:                                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #24
  %mnt_flags24 = getelementptr inbounds %struct.mount, ptr %mnt.0, i32 0, i32 3, i32 2
  %28 = ptrtoint ptr %mnt_flags24 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %mnt_flags24, align 4
  %and25 = and i32 %29, -8388609
  store i32 %and25, ptr %mnt_flags24, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then22, %if.end20.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ inttoptr (i32 -22 to ptr), %entry.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %land.lhs.true.cleanup_crit_edge ], [ %mnt.0, %if.then22 ], [ %mnt.0, %if.end20.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end.i.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @d_set_mounted(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #19

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @graft_tree(ptr noundef %mnt, ptr noundef %p, ptr noundef %mp) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %mnt_sb = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 3, i32 1
  %0 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mnt_sb, align 4
  %s_flags = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %s_flags, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %3)
  %tobool.not = icmp sgt i32 %3, -1
  br i1 %tobool.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end:                                           ; preds = %entry
  %mnt1 = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 3
  %m_dentry = getelementptr inbounds %struct.mountpoint, ptr %mp, i32 0, i32 1
  %4 = ptrtoint ptr %m_dentry to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %m_dentry, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 8
  %8 = and i32 %7, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %8)
  %9 = icmp eq i32 %8, 2097152
  %10 = ptrtoint ptr %mnt1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mnt1, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 8
  %14 = and i32 %13, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %14)
  %15 = icmp eq i32 %14, 2097152
  %16 = xor i1 %9, %15
  br i1 %16, label %if.end.return_crit_edge, label %if.end7

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %return

if.end7:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  %call8 = tail call fastcc i32 @attach_recursive_mnt(ptr noundef %mnt, ptr noundef %p, ptr noundef %mp, i1 noundef zeroext false)
  br label %return

return:                                           ; preds = %if.end7, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call8, %if.end7 ], [ -22, %entry.return_crit_edge ], [ -20, %if.end.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @attach_recursive_mnt(ptr noundef %source_mnt, ptr noundef %dest_mnt, ptr noundef %dest_mp, i1 noundef zeroext %moving) unnamed_addr #1 align 64 {
entry:
  %tree_list = alloca %struct.hlist_head, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %nsproxy = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 110
  %4 = ptrtoint ptr %nsproxy to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nsproxy, align 4
  %mnt_ns = getelementptr inbounds %struct.nsproxy, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mnt_ns, align 4
  %user_ns1 = getelementptr inbounds %struct.mnt_namespace, ptr %7, i32 0, i32 4
  %8 = ptrtoint ptr %user_ns1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %user_ns1, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tree_list) #22
  %10 = ptrtoint ptr %tree_list to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %tree_list, align 4
  %mnt_ns2 = getelementptr inbounds %struct.mount, ptr %dest_mnt, i32 0, i32 16
  %11 = ptrtoint ptr %mnt_ns2 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %mnt_ns2, align 4
  %mnt = getelementptr inbounds %struct.mount, ptr %source_mnt, i32 0, i32 3
  %13 = ptrtoint ptr %mnt to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %mnt, align 4
  %call3 = tail call fastcc ptr @get_mountpoint(ptr noundef %14)
  %cmp.i = icmp ugt ptr %call3, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %15 = ptrtoint ptr %call3 to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  br i1 %moving, label %if.end.if.end11_crit_edge, label %if.then6

if.end.if.end11_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end11

if.then6:                                         ; preds = %if.end
  %16 = load volatile i32, ptr @sysctl_mount_max, align 4
  %tobool.not30.i = icmp eq ptr %source_mnt, null
  br i1 %tobool.not30.i, label %if.then6.for.end.i_crit_edge, label %if.then6.for.body.i_crit_edge

if.then6.for.body.i_crit_edge:                    ; preds = %if.then6
  br label %for.body.i

if.then6.for.end.i_crit_edge:                     ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end.i

for.body.i:                                       ; preds = %next_mnt.exit.i.for.body.i_crit_edge, %if.then6.for.body.i_crit_edge
  %p.032.i = phi ptr [ %add.ptr.i.i, %next_mnt.exit.i.for.body.i_crit_edge ], [ %source_mnt, %if.then6.for.body.i_crit_edge ]
  %mounts.031.i = phi i32 [ %inc.i, %next_mnt.exit.i.for.body.i_crit_edge ], [ 0, %if.then6.for.body.i_crit_edge ]
  %inc.i = add i32 %mounts.031.i, 1
  %mnt_mounts.i.i = getelementptr inbounds %struct.mount, ptr %p.032.i, i32 0, i32 6
  %17 = ptrtoint ptr %mnt_mounts.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %mnt_mounts.i.i, align 4
  %cmp.i.i = icmp eq ptr %18, %mnt_mounts.i.i
  br i1 %cmp.i.i, label %for.body.i.while.cond.i.i_crit_edge, label %for.body.i.next_mnt.exit.i_crit_edge

for.body.i.next_mnt.exit.i_crit_edge:             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit.i

for.body.i.while.cond.i.i_crit_edge:              ; preds = %for.body.i
  br label %while.cond.i.i

while.cond.i.i:                                   ; preds = %if.end.i.i.while.cond.i.i_crit_edge, %for.body.i.while.cond.i.i_crit_edge
  %p.addr.0.i.i = phi ptr [ %22, %if.end.i.i.while.cond.i.i_crit_edge ], [ %p.032.i, %for.body.i.while.cond.i.i_crit_edge ]
  %cmp3.i.i = icmp eq ptr %p.addr.0.i.i, %source_mnt
  br i1 %cmp3.i.i, label %while.cond.i.i.for.end.i_crit_edge, label %if.end.i.i

while.cond.i.i.for.end.i_crit_edge:               ; preds = %while.cond.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end.i

if.end.i.i:                                       ; preds = %while.cond.i.i
  %mnt_child.i.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i.i, i32 0, i32 7
  %19 = ptrtoint ptr %mnt_child.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %mnt_child.i.i, align 4
  %mnt_parent.i.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i.i, i32 0, i32 1
  %21 = ptrtoint ptr %mnt_parent.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %mnt_parent.i.i, align 4
  %mnt_mounts6.i.i = getelementptr inbounds %struct.mount, ptr %22, i32 0, i32 6
  %cmp7.not.i.i = icmp eq ptr %20, %mnt_mounts6.i.i
  br i1 %cmp7.not.i.i, label %if.end.i.i.while.cond.i.i_crit_edge, label %if.end.i.i.next_mnt.exit.i_crit_edge

if.end.i.i.next_mnt.exit.i_crit_edge:             ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit.i

if.end.i.i.while.cond.i.i_crit_edge:              ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i.i

next_mnt.exit.i:                                  ; preds = %if.end.i.i.next_mnt.exit.i_crit_edge, %for.body.i.next_mnt.exit.i_crit_edge
  %next.0.i.i = phi ptr [ %18, %for.body.i.next_mnt.exit.i_crit_edge ], [ %20, %if.end.i.i.next_mnt.exit.i_crit_edge ]
  %add.ptr.i.i = getelementptr i8, ptr %next.0.i.i, i32 -52
  %tobool.not.i = icmp eq ptr %add.ptr.i.i, null
  br i1 %tobool.not.i, label %next_mnt.exit.i.for.end.i_crit_edge, label %next_mnt.exit.i.for.body.i_crit_edge

next_mnt.exit.i.for.body.i_crit_edge:             ; preds = %next_mnt.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i

next_mnt.exit.i.for.end.i_crit_edge:              ; preds = %next_mnt.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end.i

for.end.i:                                        ; preds = %next_mnt.exit.i.for.end.i_crit_edge, %while.cond.i.i.for.end.i_crit_edge, %if.then6.for.end.i_crit_edge
  %mounts.0.lcssa.i = phi i32 [ 0, %if.then6.for.end.i_crit_edge ], [ %inc.i, %while.cond.i.i.for.end.i_crit_edge ], [ %inc.i, %next_mnt.exit.i.for.end.i_crit_edge ]
  %mounts1.i = getelementptr inbounds %struct.mnt_namespace, ptr %12, i32 0, i32 9
  %23 = ptrtoint ptr %mounts1.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %mounts1.i, align 8
  %pending_mounts.i = getelementptr inbounds %struct.mnt_namespace, ptr %12, i32 0, i32 10
  %25 = ptrtoint ptr %pending_mounts.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %pending_mounts.i, align 4
  %add.i = add i32 %26, %24
  call void @__sanitizer_cov_trace_cmp4(i32 %24, i32 %add.i)
  %cmp.i133 = icmp ugt i32 %24, %add.i
  call void @__sanitizer_cov_trace_cmp4(i32 %26, i32 %add.i)
  %cmp2.i = icmp ugt i32 %26, %add.i
  %or.cond.i = or i1 %cmp.i133, %cmp2.i
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %add.i)
  %cmp4.i = icmp ult i32 %16, %add.i
  %or.cond28.i = select i1 %or.cond.i, i1 true, i1 %cmp4.i
  %sub.i = sub i32 %16, %add.i
  call void @__sanitizer_cov_trace_cmp4(i32 %mounts.0.lcssa.i, i32 %sub.i)
  %cmp6.i = icmp ugt i32 %mounts.0.lcssa.i, %sub.i
  %or.cond29.i = select i1 %or.cond28.i, i1 true, i1 %cmp6.i
  br i1 %or.cond29.i, label %for.end.i.out_crit_edge, label %count_mounts.exit.thread

for.end.i.out_crit_edge:                          ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

count_mounts.exit.thread:                         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #24
  %add7.i = add i32 %26, %mounts.0.lcssa.i
  %27 = ptrtoint ptr %pending_mounts.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %add7.i, ptr %pending_mounts.i, align 4
  br label %if.end11

if.end11:                                         ; preds = %count_mounts.exit.thread, %if.end.if.end11_crit_edge
  %mnt_flags = getelementptr inbounds %struct.mount, ptr %dest_mnt, i32 0, i32 3, i32 2
  %28 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %mnt_flags, align 4
  %and = and i32 %29, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool13.not = icmp eq i32 %and, 0
  br i1 %tobool13.not, label %if.else, label %if.then14

if.then14:                                        ; preds = %if.end11
  %call15 = tail call fastcc i32 @invent_group_ids(ptr noundef %source_mnt, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %if.end18, label %if.then14.out_crit_edge

if.then14.out_crit_edge:                          ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

if.end18:                                         ; preds = %if.then14
  %call19 = call i32 @propagate_mnt(ptr noundef %dest_mnt, ptr noundef %dest_mp, ptr noundef %source_mnt, ptr noundef nonnull %tree_list) #22
  call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %30 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %30, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %31 = call ptr @llvm.returnaddress(i32 0) #22
  %32 = ptrtoint ptr %31 to i32
  call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %32) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %for.cond.preheader, label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.end18
  %33 = ptrtoint ptr %tree_list to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile ptr, ptr %tree_list, align 4
  %tobool.not.i182.not237 = icmp eq ptr %34, null
  br i1 %tobool.not.i182.not237, label %while.cond.preheader.while.end_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.while.end_crit_edge:         ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

for.cond.preheader:                               ; preds = %if.end18
  %tobool23.not238 = icmp eq ptr %source_mnt, null
  br i1 %tobool23.not238, label %for.cond.preheader.if.end25_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.if.end25_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end25

for.body:                                         ; preds = %next_mnt.exit.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %p.0239 = phi ptr [ %add.ptr.i, %next_mnt.exit.for.body_crit_edge ], [ %source_mnt, %for.cond.preheader.for.body_crit_edge ]
  %mnt_flags.i = getelementptr inbounds %struct.mount, ptr %p.0239, i32 0, i32 3, i32 2
  %35 = ptrtoint ptr %mnt_flags.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %mnt_flags.i, align 4
  %and.i134 = and i32 %36, -12289
  %or.i = or i32 %and.i134, 4096
  store i32 %or.i, ptr %mnt_flags.i, align 4
  %mnt_mounts.i = getelementptr inbounds %struct.mount, ptr %p.0239, i32 0, i32 6
  %37 = ptrtoint ptr %mnt_mounts.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %mnt_mounts.i, align 4
  %cmp.i135 = icmp eq ptr %38, %mnt_mounts.i
  br i1 %cmp.i135, label %for.body.while.cond.i_crit_edge, label %for.body.next_mnt.exit_crit_edge

for.body.next_mnt.exit_crit_edge:                 ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit

for.body.while.cond.i_crit_edge:                  ; preds = %for.body
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end.i136.while.cond.i_crit_edge, %for.body.while.cond.i_crit_edge
  %p.addr.0.i = phi ptr [ %42, %if.end.i136.while.cond.i_crit_edge ], [ %p.0239, %for.body.while.cond.i_crit_edge ]
  %cmp3.i = icmp eq ptr %p.addr.0.i, %source_mnt
  br i1 %cmp3.i, label %while.cond.i.if.end25_crit_edge, label %if.end.i136

while.cond.i.if.end25_crit_edge:                  ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end25

if.end.i136:                                      ; preds = %while.cond.i
  %mnt_child.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 7
  %39 = ptrtoint ptr %mnt_child.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %mnt_child.i, align 4
  %mnt_parent.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 1
  %41 = ptrtoint ptr %mnt_parent.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %mnt_parent.i, align 4
  %mnt_mounts6.i = getelementptr inbounds %struct.mount, ptr %42, i32 0, i32 6
  %cmp7.not.i = icmp eq ptr %40, %mnt_mounts6.i
  br i1 %cmp7.not.i, label %if.end.i136.while.cond.i_crit_edge, label %if.end.i136.next_mnt.exit_crit_edge

if.end.i136.next_mnt.exit_crit_edge:              ; preds = %if.end.i136
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit

if.end.i136.while.cond.i_crit_edge:               ; preds = %if.end.i136
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i

next_mnt.exit:                                    ; preds = %if.end.i136.next_mnt.exit_crit_edge, %for.body.next_mnt.exit_crit_edge
  %next.0.i = phi ptr [ %38, %for.body.next_mnt.exit_crit_edge ], [ %40, %if.end.i136.next_mnt.exit_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %next.0.i, i32 -52
  %tobool23.not = icmp eq ptr %add.ptr.i, null
  br i1 %tobool23.not, label %next_mnt.exit.if.end25_crit_edge, label %next_mnt.exit.for.body_crit_edge

next_mnt.exit.for.body_crit_edge:                 ; preds = %next_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

next_mnt.exit.if.end25_crit_edge:                 ; preds = %next_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end25

if.else:                                          ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %43 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i138 = add i32 %43, 1
  store i32 %inc.i.i.i.i.i138, ptr @mount_lock, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %44 = tail call ptr @llvm.returnaddress(i32 0) #22
  %45 = ptrtoint ptr %44 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %45) #22
  br label %if.end25

if.end25:                                         ; preds = %if.else, %next_mnt.exit.if.end25_crit_edge, %while.cond.i.if.end25_crit_edge, %for.cond.preheader.if.end25_crit_edge
  br i1 %moving, label %if.then27, label %if.else30

if.then27:                                        ; preds = %if.end25
  %mnt_parent.i139 = getelementptr inbounds %struct.mount, ptr %source_mnt, i32 0, i32 1
  %46 = ptrtoint ptr %mnt_parent.i139 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %source_mnt, ptr %mnt_parent.i139, align 4
  %47 = ptrtoint ptr %mnt to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %mnt, align 4
  %mnt_mountpoint.i = getelementptr inbounds %struct.mount, ptr %source_mnt, i32 0, i32 2
  %49 = ptrtoint ptr %mnt_mountpoint.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %48, ptr %mnt_mountpoint.i, align 4
  %mnt_child.i140 = getelementptr inbounds %struct.mount, ptr %source_mnt, i32 0, i32 7
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %mnt_child.i140) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then27.list_del_init.exit.i_crit_edge

if.then27.list_del_init.exit.i_crit_edge:         ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_init.exit.i

if.end.i.i.i:                                     ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i.i = getelementptr inbounds %struct.mount, ptr %source_mnt, i32 0, i32 7, i32 1
  %50 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %prev.i.i.i, align 4
  %52 = ptrtoint ptr %mnt_child.i140 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %mnt_child.i140, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %53, i32 0, i32 1
  %54 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %51, ptr %prev1.i.i.i.i, align 4
  %55 = ptrtoint ptr %51 to i32
  call void @__asan_store4_noabort(i32 %55)
  store volatile ptr %53, ptr %51, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i, %if.then27.list_del_init.exit.i_crit_edge
  %56 = ptrtoint ptr %mnt_child.i140 to i32
  call void @__asan_store4_noabort(i32 %56)
  store volatile ptr %mnt_child.i140, ptr %mnt_child.i140, align 4
  %prev.i3.i.i = getelementptr inbounds %struct.mount, ptr %source_mnt, i32 0, i32 7, i32 1
  %57 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %mnt_child.i140, ptr %prev.i3.i.i, align 4
  %pprev.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %source_mnt, i32 0, i32 1
  %58 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %pprev.i.i.i, align 4
  %tobool.not.i.not.i.i = icmp eq ptr %59, null
  br i1 %tobool.not.i.not.i.i, label %list_del_init.exit.i.hlist_del_init_rcu.exit.i_crit_edge, label %if.then.i.i

list_del_init.exit.i.hlist_del_init_rcu.exit.i_crit_edge: ; preds = %list_del_init.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del_init_rcu.exit.i

if.then.i.i:                                      ; preds = %list_del_init.exit.i
  %60 = ptrtoint ptr %source_mnt to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %source_mnt, align 4
  %62 = ptrtoint ptr %59 to i32
  call void @__asan_store4_noabort(i32 %62)
  store volatile ptr %61, ptr %59, align 4
  %tobool.not.i7.i.i = icmp eq ptr %61, null
  br i1 %tobool.not.i7.i.i, label %if.then.i.i.__hlist_del.exit.i.i_crit_edge, label %do.body13.i.i.i

if.then.i.i.__hlist_del.exit.i.i_crit_edge:       ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__hlist_del.exit.i.i

do.body13.i.i.i:                                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %61, i32 0, i32 1
  %63 = ptrtoint ptr %pprev14.i.i.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store volatile ptr %59, ptr %pprev14.i.i.i, align 4
  br label %__hlist_del.exit.i.i

__hlist_del.exit.i.i:                             ; preds = %do.body13.i.i.i, %if.then.i.i.__hlist_del.exit.i.i_crit_edge
  %64 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store volatile ptr null, ptr %pprev.i.i.i, align 4
  br label %hlist_del_init_rcu.exit.i

hlist_del_init_rcu.exit.i:                        ; preds = %__hlist_del.exit.i.i, %list_del_init.exit.i.hlist_del_init_rcu.exit.i_crit_edge
  %65 = getelementptr inbounds %struct.mount, ptr %source_mnt, i32 0, i32 18
  %pprev.i.i11.i = getelementptr inbounds %struct.mount, ptr %source_mnt, i32 0, i32 18, i32 0, i32 1
  %66 = ptrtoint ptr %pprev.i.i11.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %pprev.i.i11.i, align 4
  %tobool.not.i.not.i12.i = icmp eq ptr %67, null
  br i1 %tobool.not.i.not.i12.i, label %hlist_del_init_rcu.exit.i.unhash_mnt.exit_crit_edge, label %if.then.i13.i

hlist_del_init_rcu.exit.i.unhash_mnt.exit_crit_edge: ; preds = %hlist_del_init_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %unhash_mnt.exit

if.then.i13.i:                                    ; preds = %hlist_del_init_rcu.exit.i
  %68 = ptrtoint ptr %65 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %65, align 4
  %70 = ptrtoint ptr %67 to i32
  call void @__asan_store4_noabort(i32 %70)
  store volatile ptr %69, ptr %67, align 4
  %tobool.not.i3.i.i = icmp eq ptr %69, null
  br i1 %tobool.not.i3.i.i, label %if.then.i13.i.__hlist_del.exit.i16.i_crit_edge, label %do.body13.i.i15.i

if.then.i13.i.__hlist_del.exit.i16.i_crit_edge:   ; preds = %if.then.i13.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__hlist_del.exit.i16.i

do.body13.i.i15.i:                                ; preds = %if.then.i13.i
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i14.i = getelementptr inbounds %struct.hlist_node, ptr %69, i32 0, i32 1
  %71 = ptrtoint ptr %pprev14.i.i14.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store volatile ptr %67, ptr %pprev14.i.i14.i, align 4
  br label %__hlist_del.exit.i16.i

__hlist_del.exit.i16.i:                           ; preds = %do.body13.i.i15.i, %if.then.i13.i.__hlist_del.exit.i16.i_crit_edge
  %72 = ptrtoint ptr %65 to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr null, ptr %65, align 4
  %73 = ptrtoint ptr %pprev.i.i11.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr null, ptr %pprev.i.i11.i, align 4
  br label %unhash_mnt.exit

unhash_mnt.exit:                                  ; preds = %__hlist_del.exit.i16.i, %hlist_del_init_rcu.exit.i.unhash_mnt.exit_crit_edge
  %mnt_mp.i = getelementptr inbounds %struct.mount, ptr %source_mnt, i32 0, i32 17
  %74 = ptrtoint ptr %mnt_mp.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr null, ptr %mnt_mp.i, align 4
  call fastcc void @attach_mnt(ptr noundef %source_mnt, ptr noundef %dest_mnt, ptr noundef %dest_mp)
  %mnt_ns29 = getelementptr inbounds %struct.mount, ptr %source_mnt, i32 0, i32 16
  %75 = ptrtoint ptr %mnt_ns29 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %mnt_ns29, align 4
  %tobool.not.i141 = icmp eq ptr %76, null
  br i1 %tobool.not.i141, label %unhash_mnt.exit.if.end36_crit_edge, label %if.then.i

unhash_mnt.exit.if.end36_crit_edge:               ; preds = %unhash_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end36

if.then.i:                                        ; preds = %unhash_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  %77 = load i64, ptr @event, align 8
  %inc.i142 = add i64 %77, 1
  store i64 %inc.i142, ptr @event, align 8
  %event.i = getelementptr inbounds %struct.mnt_namespace, ptr %76, i32 0, i32 8
  %78 = ptrtoint ptr %event.i to i32
  call void @__asan_store8_noabort(i32 %78)
  store i64 %inc.i142, ptr %event.i, align 8
  %poll.i = getelementptr inbounds %struct.mnt_namespace, ptr %76, i32 0, i32 7
  call void @__wake_up(ptr noundef %poll.i, i32 noundef 1, i32 noundef 1, ptr noundef null) #22
  br label %if.end36

if.else30:                                        ; preds = %if.end25
  %mnt_ns31 = getelementptr inbounds %struct.mount, ptr %source_mnt, i32 0, i32 16
  %79 = ptrtoint ptr %mnt_ns31 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %mnt_ns31, align 4
  %tobool32.not = icmp eq ptr %80, null
  br i1 %tobool32.not, label %if.else30.if.end35_crit_edge, label %if.then33

if.else30.if.end35_crit_edge:                     ; preds = %if.else30
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end35

if.then33:                                        ; preds = %if.else30
  %list = getelementptr inbounds %struct.mnt_namespace, ptr %80, i32 0, i32 2
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %list) #22
  br i1 %call.i.i, label %if.end.i.i144, label %if.then33.list_del_init.exit_crit_edge

if.then33.list_del_init.exit_crit_edge:           ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_init.exit

if.end.i.i144:                                    ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %80, i32 0, i32 2, i32 1
  %81 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %prev.i.i, align 4
  %83 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %84, i32 0, i32 1
  %85 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store ptr %82, ptr %prev1.i.i.i, align 4
  %86 = ptrtoint ptr %82 to i32
  call void @__asan_store4_noabort(i32 %86)
  store volatile ptr %84, ptr %82, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i144, %if.then33.list_del_init.exit_crit_edge
  %87 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %87)
  store volatile ptr %list, ptr %list, align 4
  %prev.i3.i = getelementptr inbounds %struct.mnt_namespace, ptr %80, i32 0, i32 2, i32 1
  %88 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %88)
  store ptr %list, ptr %prev.i3.i, align 4
  br label %if.end35

if.end35:                                         ; preds = %list_del_init.exit, %if.else30.if.end35_crit_edge
  %m_count.i = getelementptr inbounds %struct.mountpoint, ptr %dest_mp, i32 0, i32 3
  %89 = ptrtoint ptr %m_count.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %m_count.i, align 4
  %inc.i145 = add i32 %90, 1
  store i32 %inc.i145, ptr %m_count.i, align 4
  %91 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #22, !srcloc !341
  %mnt_pcp.i.i = getelementptr inbounds %struct.mount, ptr %dest_mnt, i32 0, i32 5
  %92 = ptrtoint ptr %mnt_pcp.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %mnt_pcp.i.i, align 4
  %94 = ptrtoint ptr %93 to i32
  %95 = call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i.i = and i32 %95, -16384
  %96 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %96, i32 0, i32 3
  %97 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %98
  %99 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %100, %94
  %101 = inttoptr i32 %add.i.i to ptr
  %102 = ptrtoint ptr %101 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %101, align 4
  %add13.i.i = add i32 %103, 1
  store i32 %add13.i.i, ptr %101, align 4
  %104 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #22, !srcloc !342
  %and.i.i.i.i = and i32 %104, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i146, label %if.end35.mnt_add_count.exit.i_crit_edge, !prof !343

if.end35.mnt_add_count.exit.i_crit_edge:          ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_add_count.exit.i

if.then.i.i146:                                   ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #24
  call void @warn_bogus_irq_restore() #22
  br label %mnt_add_count.exit.i

mnt_add_count.exit.i:                             ; preds = %if.then.i.i146, %if.end35.mnt_add_count.exit.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %91) #22, !srcloc !344
  %m_dentry.i = getelementptr inbounds %struct.mountpoint, ptr %dest_mp, i32 0, i32 1
  %105 = ptrtoint ptr %m_dentry.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %m_dentry.i, align 4
  %mnt_mountpoint.i147 = getelementptr inbounds %struct.mount, ptr %source_mnt, i32 0, i32 2
  %107 = ptrtoint ptr %mnt_mountpoint.i147 to i32
  call void @__asan_store4_noabort(i32 %107)
  store ptr %106, ptr %mnt_mountpoint.i147, align 4
  %mnt_parent.i148 = getelementptr inbounds %struct.mount, ptr %source_mnt, i32 0, i32 1
  %108 = ptrtoint ptr %mnt_parent.i148 to i32
  call void @__asan_store4_noabort(i32 %108)
  store ptr %dest_mnt, ptr %mnt_parent.i148, align 4
  %mnt_mp.i149 = getelementptr inbounds %struct.mount, ptr %source_mnt, i32 0, i32 17
  %109 = ptrtoint ptr %mnt_mp.i149 to i32
  call void @__asan_store4_noabort(i32 %109)
  store ptr %dest_mp, ptr %mnt_mp.i149, align 4
  %110 = getelementptr inbounds %struct.mount, ptr %source_mnt, i32 0, i32 18
  %m_list.i = getelementptr inbounds %struct.mountpoint, ptr %dest_mp, i32 0, i32 2
  %111 = ptrtoint ptr %m_list.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %m_list.i, align 4
  %113 = ptrtoint ptr %110 to i32
  call void @__asan_store4_noabort(i32 %113)
  store volatile ptr %112, ptr %110, align 4
  %tobool.not.i8.i = icmp eq ptr %112, null
  br i1 %tobool.not.i8.i, label %mnt_add_count.exit.i.mnt_set_mountpoint.exit_crit_edge, label %do.body12.i.i

mnt_add_count.exit.i.mnt_set_mountpoint.exit_crit_edge: ; preds = %mnt_add_count.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_set_mountpoint.exit

do.body12.i.i:                                    ; preds = %mnt_add_count.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %pprev.i.i = getelementptr inbounds %struct.hlist_node, ptr %112, i32 0, i32 1
  %114 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_store4_noabort(i32 %114)
  store volatile ptr %110, ptr %pprev.i.i, align 4
  br label %mnt_set_mountpoint.exit

mnt_set_mountpoint.exit:                          ; preds = %do.body12.i.i, %mnt_add_count.exit.i.mnt_set_mountpoint.exit_crit_edge
  %115 = ptrtoint ptr %m_list.i to i32
  call void @__asan_store4_noabort(i32 %115)
  store volatile ptr %110, ptr %m_list.i, align 4
  %pprev34.i.i = getelementptr inbounds %struct.mount, ptr %source_mnt, i32 0, i32 18, i32 0, i32 1
  %116 = ptrtoint ptr %pprev34.i.i to i32
  call void @__asan_store4_noabort(i32 %116)
  store volatile ptr %m_list.i, ptr %pprev34.i.i, align 4
  call fastcc void @commit_tree(ptr noundef %source_mnt)
  br label %if.end36

if.end36:                                         ; preds = %mnt_set_mountpoint.exit, %if.then.i, %unhash_mnt.exit.if.end36_crit_edge
  %117 = ptrtoint ptr %tree_list to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %tree_list, align 4
  %tobool40.not240 = icmp eq ptr %118, null
  br i1 %tobool40.not240, label %if.end36.for.end69_crit_edge, label %if.end36.land.rhs_crit_edge

if.end36.land.rhs_crit_edge:                      ; preds = %if.end36
  br label %land.rhs

if.end36.for.end69_crit_edge:                     ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end69

land.rhs:                                         ; preds = %if.end54.land.rhs_crit_edge, %if.end36.land.rhs_crit_edge
  %child.0241 = phi ptr [ %120, %if.end54.land.rhs_crit_edge ], [ %118, %if.end36.land.rhs_crit_edge ]
  %119 = ptrtoint ptr %child.0241 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %child.0241, align 4
  %pprev.i.i150 = getelementptr inbounds %struct.hlist_node, ptr %child.0241, i32 0, i32 1
  %121 = ptrtoint ptr %pprev.i.i150 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %pprev.i.i150, align 4
  %tobool.not.i.not.i = icmp eq ptr %122, null
  br i1 %tobool.not.i.not.i, label %land.rhs.hlist_del_init.exit_crit_edge, label %if.then.i151

land.rhs.hlist_del_init.exit_crit_edge:           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del_init.exit

if.then.i151:                                     ; preds = %land.rhs
  %123 = ptrtoint ptr %122 to i32
  call void @__asan_store4_noabort(i32 %123)
  store volatile ptr %120, ptr %122, align 4
  %tobool.not.i3.i = icmp eq ptr %120, null
  br i1 %tobool.not.i3.i, label %if.then.i151.__hlist_del.exit.i_crit_edge, label %do.body13.i.i

if.then.i151.__hlist_del.exit.i_crit_edge:        ; preds = %if.then.i151
  call void @__sanitizer_cov_trace_pc() #24
  br label %__hlist_del.exit.i

do.body13.i.i:                                    ; preds = %if.then.i151
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i = getelementptr inbounds %struct.hlist_node, ptr %120, i32 0, i32 1
  %124 = ptrtoint ptr %pprev14.i.i to i32
  call void @__asan_store4_noabort(i32 %124)
  store volatile ptr %122, ptr %pprev14.i.i, align 4
  br label %__hlist_del.exit.i

__hlist_del.exit.i:                               ; preds = %do.body13.i.i, %if.then.i151.__hlist_del.exit.i_crit_edge
  %125 = ptrtoint ptr %child.0241 to i32
  call void @__asan_store4_noabort(i32 %125)
  store ptr null, ptr %child.0241, align 4
  %126 = ptrtoint ptr %pprev.i.i150 to i32
  call void @__asan_store4_noabort(i32 %126)
  store ptr null, ptr %pprev.i.i150, align 4
  br label %hlist_del_init.exit

hlist_del_init.exit:                              ; preds = %__hlist_del.exit.i, %land.rhs.hlist_del_init.exit_crit_edge
  %mnt_parent = getelementptr inbounds %struct.mount, ptr %child.0241, i32 0, i32 1
  %127 = ptrtoint ptr %mnt_parent to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %mnt_parent, align 4
  %mnt45 = getelementptr inbounds %struct.mount, ptr %128, i32 0, i32 3
  %mnt_mountpoint = getelementptr inbounds %struct.mount, ptr %child.0241, i32 0, i32 2
  %129 = ptrtoint ptr %mnt_mountpoint to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %mnt_mountpoint, align 4
  %131 = ptrtoint ptr %mnt45 to i32
  %div6.i.i = lshr i32 %131, 7
  %132 = ptrtoint ptr %130 to i32
  %div17.i.i = lshr i32 %132, 7
  %add.i.i153 = add nuw nsw i32 %div17.i.i, %div6.i.i
  %133 = load i32, ptr @m_hash_shift, align 4
  %shr.i.i = lshr i32 %add.i.i153, %133
  %add2.i.i = add nuw nsw i32 %shr.i.i, %add.i.i153
  %134 = load ptr, ptr @mount_hashtable, align 4
  %135 = load i32, ptr @m_hash_mask, align 4
  %and.i.i = and i32 %add2.i.i, %135
  %arrayidx.i.i154 = getelementptr %struct.hlist_head, ptr %134, i32 %and.i.i
  %call1.i = call i32 @rcu_read_lock_any_held() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i155 = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i155, label %land.lhs.true.i, label %hlist_del_init.exit.do.end.i_crit_edge

hlist_del_init.exit.do.end.i_crit_edge:           ; preds = %hlist_del_init.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i

land.lhs.true.i:                                  ; preds = %hlist_del_init.exit
  %call2.i = call i32 @debug_lockdep_rcu_enabled() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.do.end.i_crit_edge, label %land.lhs.true4.i

land.lhs.true.i.do.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  %.b44.i = load i1, ptr @__lookup_mnt.__warned, align 1
  br i1 %.b44.i, label %land.lhs.true4.i.do.end.i_crit_edge, label %if.then.i156

land.lhs.true4.i.do.end.i_crit_edge:              ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %do.end.i

if.then.i156:                                     ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @__lookup_mnt.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 660, ptr noundef nonnull @.str.3) #22
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i156, %land.lhs.true4.i.do.end.i_crit_edge, %land.lhs.true.i.do.end.i_crit_edge, %hlist_del_init.exit.do.end.i_crit_edge
  %136 = ptrtoint ptr %arrayidx.i.i154 to i32
  call void @__asan_load4_noabort(i32 %136)
  %p.046.i = load volatile ptr, ptr %arrayidx.i.i154, align 4
  %tobool13.not47.i = icmp eq ptr %p.046.i, null
  br i1 %tobool13.not47.i, label %do.end.i.if.end49_crit_edge, label %do.end.i.for.body.i159_crit_edge

do.end.i.for.body.i159_crit_edge:                 ; preds = %do.end.i
  br label %for.body.i159

do.end.i.if.end49_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end49

for.body.i159:                                    ; preds = %for.inc.i.for.body.i159_crit_edge, %do.end.i.for.body.i159_crit_edge
  %p.048.i = phi ptr [ %p.0.i, %for.inc.i.for.body.i159_crit_edge ], [ %p.046.i, %do.end.i.for.body.i159_crit_edge ]
  %mnt_parent.i157 = getelementptr inbounds %struct.mount, ptr %p.048.i, i32 0, i32 1
  %137 = ptrtoint ptr %mnt_parent.i157 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %mnt_parent.i157, align 4
  %cmp.i158 = icmp eq ptr %138, %128
  br i1 %cmp.i158, label %land.lhs.true15.i, label %for.body.i159.for.inc.i_crit_edge

for.body.i159.for.inc.i_crit_edge:                ; preds = %for.body.i159
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

land.lhs.true15.i:                                ; preds = %for.body.i159
  %mnt_mountpoint.i160 = getelementptr inbounds %struct.mount, ptr %p.048.i, i32 0, i32 2
  %139 = ptrtoint ptr %mnt_mountpoint.i160 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %mnt_mountpoint.i160, align 4
  %cmp16.i = icmp eq ptr %140, %130
  br i1 %cmp16.i, label %if.then48, label %land.lhs.true15.i.for.inc.i_crit_edge

land.lhs.true15.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true15.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true15.i.for.inc.i_crit_edge, %for.body.i159.for.inc.i_crit_edge
  %141 = ptrtoint ptr %p.048.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %p.0.i = load volatile ptr, ptr %p.048.i, align 4
  %tobool13.not.i = icmp eq ptr %p.0.i, null
  br i1 %tobool13.not.i, label %for.inc.i.if.end49_crit_edge, label %for.inc.i.for.body.i159_crit_edge

for.inc.i.for.body.i159_crit_edge:                ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i159

for.inc.i.if.end49_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end49

if.then48:                                        ; preds = %land.lhs.true15.i
  call void @__sanitizer_cov_trace_pc() #24
  call void @mnt_change_mountpoint(ptr noundef nonnull %child.0241, ptr noundef %call3, ptr noundef nonnull %p.048.i)
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %for.inc.i.if.end49_crit_edge, %do.end.i.if.end49_crit_edge
  %142 = ptrtoint ptr %mnt_parent to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %mnt_parent, align 4
  %mnt_ns51 = getelementptr inbounds %struct.mount, ptr %143, i32 0, i32 16
  %144 = ptrtoint ptr %mnt_ns51 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %mnt_ns51, align 4
  %user_ns52 = getelementptr inbounds %struct.mnt_namespace, ptr %145, i32 0, i32 4
  %146 = ptrtoint ptr %user_ns52 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %user_ns52, align 8
  %cmp.not = icmp eq ptr %147, %9
  br i1 %cmp.not, label %if.end49.if.end54_crit_edge, label %if.end49.for.body.i164_crit_edge

if.end49.for.body.i164_crit_edge:                 ; preds = %if.end49
  br label %for.body.i164

if.end49.if.end54_crit_edge:                      ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end54

for.body.i164:                                    ; preds = %next_mnt.exit.i176.for.body.i164_crit_edge, %if.end49.for.body.i164_crit_edge
  %p.043.i = phi ptr [ %add.ptr.i.i174, %next_mnt.exit.i176.for.body.i164_crit_edge ], [ %child.0241, %if.end49.for.body.i164_crit_edge ]
  %mnt_flags.i161 = getelementptr inbounds %struct.mount, ptr %p.043.i, i32 0, i32 3, i32 2
  %148 = ptrtoint ptr %mnt_flags.i161 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load i32, ptr %mnt_flags.i161, align 4
  %and.i162 = and i32 %149, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i162)
  %tobool2.not.i = icmp eq i32 %and.i162, 0
  %spec.select.v.i = select i1 %tobool2.not.i, i32 262144, i32 4456448
  %and4.i = shl i32 %149, 20
  %150 = and i32 %and4.i, 2097152
  %151 = and i32 %and4.i, 1048576
  %and14.i = shl i32 %149, 17
  %152 = and i32 %and14.i, 524288
  %spec.select.i = or i32 %150, %149
  %153 = or i32 %spec.select.i, %151
  %154 = or i32 %153, %152
  %155 = or i32 %154, %spec.select.v.i
  %mnt_expire.i = getelementptr inbounds %struct.mount, ptr %p.043.i, i32 0, i32 11
  %156 = ptrtoint ptr %mnt_expire.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load volatile ptr, ptr %mnt_expire.i, align 4
  %cmp.i.not.i = icmp eq ptr %157, %mnt_expire.i
  %or21.i = or i32 %155, 8388608
  %flags.4.i = select i1 %cmp.i.not.i, i32 %or21.i, i32 %155
  %158 = ptrtoint ptr %mnt_flags.i161 to i32
  call void @__asan_store4_noabort(i32 %158)
  store i32 %flags.4.i, ptr %mnt_flags.i161, align 4
  %mnt_mounts.i.i163 = getelementptr inbounds %struct.mount, ptr %p.043.i, i32 0, i32 6
  %159 = ptrtoint ptr %mnt_mounts.i.i163 to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %mnt_mounts.i.i163, align 4
  %cmp.i41.i = icmp eq ptr %160, %mnt_mounts.i.i163
  br i1 %cmp.i41.i, label %for.body.i164.while.cond.i.i167_crit_edge, label %for.body.i164.next_mnt.exit.i176_crit_edge

for.body.i164.next_mnt.exit.i176_crit_edge:       ; preds = %for.body.i164
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit.i176

for.body.i164.while.cond.i.i167_crit_edge:        ; preds = %for.body.i164
  br label %while.cond.i.i167

while.cond.i.i167:                                ; preds = %if.end.i.i172.while.cond.i.i167_crit_edge, %for.body.i164.while.cond.i.i167_crit_edge
  %p.addr.0.i.i165 = phi ptr [ %164, %if.end.i.i172.while.cond.i.i167_crit_edge ], [ %p.043.i, %for.body.i164.while.cond.i.i167_crit_edge ]
  %cmp3.i.i166 = icmp eq ptr %p.addr.0.i.i165, %child.0241
  br i1 %cmp3.i.i166, label %while.cond.i.i167.if.end54_crit_edge, label %if.end.i.i172

while.cond.i.i167.if.end54_crit_edge:             ; preds = %while.cond.i.i167
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end54

if.end.i.i172:                                    ; preds = %while.cond.i.i167
  %mnt_child.i.i168 = getelementptr inbounds %struct.mount, ptr %p.addr.0.i.i165, i32 0, i32 7
  %161 = ptrtoint ptr %mnt_child.i.i168 to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %mnt_child.i.i168, align 4
  %mnt_parent.i.i169 = getelementptr inbounds %struct.mount, ptr %p.addr.0.i.i165, i32 0, i32 1
  %163 = ptrtoint ptr %mnt_parent.i.i169 to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %mnt_parent.i.i169, align 4
  %mnt_mounts6.i.i170 = getelementptr inbounds %struct.mount, ptr %164, i32 0, i32 6
  %cmp7.not.i.i171 = icmp eq ptr %162, %mnt_mounts6.i.i170
  br i1 %cmp7.not.i.i171, label %if.end.i.i172.while.cond.i.i167_crit_edge, label %if.end.i.i172.next_mnt.exit.i176_crit_edge

if.end.i.i172.next_mnt.exit.i176_crit_edge:       ; preds = %if.end.i.i172
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit.i176

if.end.i.i172.while.cond.i.i167_crit_edge:        ; preds = %if.end.i.i172
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i.i167

next_mnt.exit.i176:                               ; preds = %if.end.i.i172.next_mnt.exit.i176_crit_edge, %for.body.i164.next_mnt.exit.i176_crit_edge
  %next.0.i.i173 = phi ptr [ %160, %for.body.i164.next_mnt.exit.i176_crit_edge ], [ %162, %if.end.i.i172.next_mnt.exit.i176_crit_edge ]
  %add.ptr.i.i174 = getelementptr i8, ptr %next.0.i.i173, i32 -52
  %tobool.not.i175 = icmp eq ptr %add.ptr.i.i174, null
  br i1 %tobool.not.i175, label %next_mnt.exit.i176.if.end54_crit_edge, label %next_mnt.exit.i176.for.body.i164_crit_edge

next_mnt.exit.i176.for.body.i164_crit_edge:       ; preds = %next_mnt.exit.i176
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i164

next_mnt.exit.i176.if.end54_crit_edge:            ; preds = %next_mnt.exit.i176
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end54

if.end54:                                         ; preds = %next_mnt.exit.i176.if.end54_crit_edge, %while.cond.i.i167.if.end54_crit_edge, %if.end49.if.end54_crit_edge
  %mnt_flags56 = getelementptr inbounds %struct.mount, ptr %child.0241, i32 0, i32 3, i32 2
  %165 = ptrtoint ptr %mnt_flags56 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %mnt_flags56, align 4
  %and57 = and i32 %166, -8388609
  store i32 %and57, ptr %mnt_flags56, align 4
  call fastcc void @commit_tree(ptr noundef nonnull %child.0241)
  %tobool40.not = icmp eq ptr %120, null
  br i1 %tobool40.not, label %if.end54.for.end69_crit_edge, label %if.end54.land.rhs_crit_edge

if.end54.land.rhs_crit_edge:                      ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #24
  br label %land.rhs

if.end54.for.end69_crit_edge:                     ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end69

for.end69:                                        ; preds = %if.end54.for.end69_crit_edge, %if.end36.for.end69_crit_edge
  %m_count.i.i = getelementptr inbounds %struct.mountpoint, ptr %call3, i32 0, i32 3
  %167 = ptrtoint ptr %m_count.i.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %m_count.i.i, align 4
  %dec.i.i = add i32 %168, -1
  store i32 %dec.i.i, ptr %m_count.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i.i)
  %tobool.not.i.i178 = icmp eq i32 %dec.i.i, 0
  br i1 %tobool.not.i.i178, label %if.then.i.i180, label %for.end69.put_mountpoint.exit_crit_edge

for.end69.put_mountpoint.exit_crit_edge:          ; preds = %for.end69
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_mountpoint.exit

if.then.i.i180:                                   ; preds = %for.end69
  %m_dentry.i.i = getelementptr inbounds %struct.mountpoint, ptr %call3, i32 0, i32 1
  %169 = ptrtoint ptr %m_dentry.i.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %m_dentry.i.i, align 4
  %m_list.i.i = getelementptr inbounds %struct.mountpoint, ptr %call3, i32 0, i32 2
  %171 = ptrtoint ptr %m_list.i.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load volatile ptr, ptr %m_list.i.i, align 4
  %tobool.not.i.not.i.i179 = icmp eq ptr %172, null
  br i1 %tobool.not.i.not.i.i179, label %do.end11.i.i, label %do.body6.i.i, !prof !352

do.body6.i.i:                                     ; preds = %if.then.i.i180
  call void @__sanitizer_cov_trace_pc() #24
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namespace.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 821, 0\0A.popsection", ""() #22, !srcloc !370
  unreachable

do.end11.i.i:                                     ; preds = %if.then.i.i180
  %d_lockref.i.i = getelementptr inbounds %struct.dentry, ptr %170, i32 0, i32 7
  call void @_raw_spin_lock(ptr noundef %d_lockref.i.i) #22
  %173 = ptrtoint ptr %170 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %170, align 8
  %and.i.i181 = and i32 %174, -65537
  store i32 %and.i.i181, ptr %170, align 8
  call void @_raw_spin_unlock(ptr noundef %d_lockref.i.i) #22
  call void @dput_to_list(ptr noundef %170, ptr noundef nonnull @ex_mountpoints) #22
  %175 = ptrtoint ptr %call3 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %call3, align 4
  %pprev2.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %call3, i32 0, i32 1
  %177 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %pprev2.i.i.i.i, align 4
  %179 = ptrtoint ptr %178 to i32
  call void @__asan_store4_noabort(i32 %179)
  store volatile ptr %176, ptr %178, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %176, null
  br i1 %tobool.not.i.i.i.i, label %do.end11.i.i.hlist_del.exit.i.i_crit_edge, label %do.body13.i.i.i.i

do.end11.i.i.hlist_del.exit.i.i_crit_edge:        ; preds = %do.end11.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del.exit.i.i

do.body13.i.i.i.i:                                ; preds = %do.end11.i.i
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %176, i32 0, i32 1
  %180 = ptrtoint ptr %pprev14.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %180)
  store volatile ptr %178, ptr %pprev14.i.i.i.i, align 4
  br label %hlist_del.exit.i.i

hlist_del.exit.i.i:                               ; preds = %do.body13.i.i.i.i, %do.end11.i.i.hlist_del.exit.i.i_crit_edge
  %181 = ptrtoint ptr %call3 to i32
  call void @__asan_store4_noabort(i32 %181)
  store ptr inttoptr (i32 256 to ptr), ptr %call3, align 4
  %182 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %182)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i.i, align 4
  call void @kfree(ptr noundef %call3) #22
  br label %put_mountpoint.exit

put_mountpoint.exit:                              ; preds = %hlist_del.exit.i.i, %for.end69.put_mountpoint.exit_crit_edge
  %183 = call ptr @llvm.returnaddress(i32 0) #22
  %184 = ptrtoint ptr %183 to i32
  call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %184) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %185 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i = add i32 %185, 1
  store i32 %inc.i.i.i.i, ptr @mount_lock, align 128
  call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  br label %cleanup

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %186 = phi ptr [ %193, %while.body.while.body_crit_edge ], [ %34, %while.cond.preheader.while.body_crit_edge ]
  %mnt_parent76 = getelementptr inbounds %struct.mount, ptr %186, i32 0, i32 1
  %187 = ptrtoint ptr %mnt_parent76 to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %mnt_parent76, align 4
  %mnt_ns77 = getelementptr inbounds %struct.mount, ptr %188, i32 0, i32 16
  %189 = ptrtoint ptr %mnt_ns77 to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %mnt_ns77, align 4
  %pending_mounts = getelementptr inbounds %struct.mnt_namespace, ptr %190, i32 0, i32 10
  %191 = ptrtoint ptr %pending_mounts to i32
  call void @__asan_store4_noabort(i32 %191)
  store i32 0, ptr %pending_mounts, align 4
  call fastcc void @umount_tree(ptr noundef nonnull %186, i32 noundef 1)
  %192 = ptrtoint ptr %tree_list to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load volatile ptr, ptr %tree_list, align 4
  %tobool.not.i182.not = icmp eq ptr %193, null
  br i1 %tobool.not.i182.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %while.cond.preheader.while.end_crit_edge
  call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %32) #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %194 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i183 = add i32 %194, 1
  store i32 %inc.i.i.i.i183, ptr @mount_lock, align 128
  call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %cmp.not8.i = icmp eq ptr %source_mnt, null
  br i1 %cmp.not8.i, label %while.end.out_crit_edge, label %while.end.for.body.i185_crit_edge

while.end.for.body.i185_crit_edge:                ; preds = %while.end
  br label %for.body.i185

while.end.out_crit_edge:                          ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

for.body.i185:                                    ; preds = %next_mnt.exit.i204.for.body.i185_crit_edge, %while.end.for.body.i185_crit_edge
  %p.09.i = phi ptr [ %add.ptr.i.i203, %next_mnt.exit.i204.for.body.i185_crit_edge ], [ %source_mnt, %while.end.for.body.i185_crit_edge ]
  %mnt_group_id.i = getelementptr inbounds %struct.mount, ptr %p.09.i, i32 0, i32 23
  %195 = ptrtoint ptr %mnt_group_id.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load i32, ptr %mnt_group_id.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %196)
  %tobool.not.i184 = icmp eq i32 %196, 0
  br i1 %tobool.not.i184, label %for.body.i185.for.inc.i193_crit_edge, label %land.lhs.true.i189

for.body.i185.for.inc.i193_crit_edge:             ; preds = %for.body.i185
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i193

land.lhs.true.i189:                               ; preds = %for.body.i185
  %mnt_flags.i186 = getelementptr inbounds %struct.mount, ptr %p.09.i, i32 0, i32 3, i32 2
  %197 = ptrtoint ptr %mnt_flags.i186 to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load i32, ptr %mnt_flags.i186, align 4
  %and.i187 = and i32 %198, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i187)
  %tobool2.not.i188 = icmp eq i32 %and.i187, 0
  br i1 %tobool2.not.i188, label %if.then.i190, label %land.lhs.true.i189.for.inc.i193_crit_edge

land.lhs.true.i189.for.inc.i193_crit_edge:        ; preds = %land.lhs.true.i189
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i193

if.then.i190:                                     ; preds = %land.lhs.true.i189
  call void @__sanitizer_cov_trace_pc() #24
  call void @ida_free(ptr noundef nonnull @mnt_group_ida, i32 noundef %196) #22
  %199 = ptrtoint ptr %mnt_group_id.i to i32
  call void @__asan_store4_noabort(i32 %199)
  store i32 0, ptr %mnt_group_id.i, align 4
  br label %for.inc.i193

for.inc.i193:                                     ; preds = %if.then.i190, %land.lhs.true.i189.for.inc.i193_crit_edge, %for.body.i185.for.inc.i193_crit_edge
  %mnt_mounts.i.i191 = getelementptr inbounds %struct.mount, ptr %p.09.i, i32 0, i32 6
  %200 = ptrtoint ptr %mnt_mounts.i.i191 to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load ptr, ptr %mnt_mounts.i.i191, align 4
  %cmp.i.i192 = icmp eq ptr %201, %mnt_mounts.i.i191
  br i1 %cmp.i.i192, label %for.inc.i193.while.cond.i.i196_crit_edge, label %for.inc.i193.next_mnt.exit.i204_crit_edge

for.inc.i193.next_mnt.exit.i204_crit_edge:        ; preds = %for.inc.i193
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit.i204

for.inc.i193.while.cond.i.i196_crit_edge:         ; preds = %for.inc.i193
  br label %while.cond.i.i196

while.cond.i.i196:                                ; preds = %if.end.i.i201.while.cond.i.i196_crit_edge, %for.inc.i193.while.cond.i.i196_crit_edge
  %p.addr.0.i.i194 = phi ptr [ %205, %if.end.i.i201.while.cond.i.i196_crit_edge ], [ %p.09.i, %for.inc.i193.while.cond.i.i196_crit_edge ]
  %cmp3.i.i195 = icmp eq ptr %p.addr.0.i.i194, %source_mnt
  br i1 %cmp3.i.i195, label %while.cond.i.i196.out_crit_edge, label %if.end.i.i201

while.cond.i.i196.out_crit_edge:                  ; preds = %while.cond.i.i196
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

if.end.i.i201:                                    ; preds = %while.cond.i.i196
  %mnt_child.i.i197 = getelementptr inbounds %struct.mount, ptr %p.addr.0.i.i194, i32 0, i32 7
  %202 = ptrtoint ptr %mnt_child.i.i197 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %mnt_child.i.i197, align 4
  %mnt_parent.i.i198 = getelementptr inbounds %struct.mount, ptr %p.addr.0.i.i194, i32 0, i32 1
  %204 = ptrtoint ptr %mnt_parent.i.i198 to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load ptr, ptr %mnt_parent.i.i198, align 4
  %mnt_mounts6.i.i199 = getelementptr inbounds %struct.mount, ptr %205, i32 0, i32 6
  %cmp7.not.i.i200 = icmp eq ptr %203, %mnt_mounts6.i.i199
  br i1 %cmp7.not.i.i200, label %if.end.i.i201.while.cond.i.i196_crit_edge, label %if.end.i.i201.next_mnt.exit.i204_crit_edge

if.end.i.i201.next_mnt.exit.i204_crit_edge:       ; preds = %if.end.i.i201
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit.i204

if.end.i.i201.while.cond.i.i196_crit_edge:        ; preds = %if.end.i.i201
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i.i196

next_mnt.exit.i204:                               ; preds = %if.end.i.i201.next_mnt.exit.i204_crit_edge, %for.inc.i193.next_mnt.exit.i204_crit_edge
  %next.0.i.i202 = phi ptr [ %201, %for.inc.i193.next_mnt.exit.i204_crit_edge ], [ %203, %if.end.i.i201.next_mnt.exit.i204_crit_edge ]
  %add.ptr.i.i203 = getelementptr i8, ptr %next.0.i.i202, i32 -52
  %cmp.not.i = icmp eq ptr %add.ptr.i.i203, null
  br i1 %cmp.not.i, label %next_mnt.exit.i204.out_crit_edge, label %next_mnt.exit.i204.for.body.i185_crit_edge

next_mnt.exit.i204.for.body.i185_crit_edge:       ; preds = %next_mnt.exit.i204
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i185

next_mnt.exit.i204.out_crit_edge:                 ; preds = %next_mnt.exit.i204
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

out:                                              ; preds = %next_mnt.exit.i204.out_crit_edge, %while.cond.i.i196.out_crit_edge, %while.end.out_crit_edge, %if.then14.out_crit_edge, %for.end.i.out_crit_edge
  %err.0 = phi i32 [ %call15, %if.then14.out_crit_edge ], [ -28, %for.end.i.out_crit_edge ], [ %call19, %while.end.out_crit_edge ], [ %call19, %while.cond.i.i196.out_crit_edge ], [ %call19, %next_mnt.exit.i204.out_crit_edge ]
  %pending_mounts78 = getelementptr inbounds %struct.mnt_namespace, ptr %12, i32 0, i32 10
  %206 = ptrtoint ptr %pending_mounts78 to i32
  call void @__asan_store4_noabort(i32 %206)
  store i32 0, ptr %pending_mounts78, align 4
  call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %m_count.i.i206 = getelementptr inbounds %struct.mountpoint, ptr %call3, i32 0, i32 3
  %207 = ptrtoint ptr %m_count.i.i206 to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %m_count.i.i206, align 4
  %dec.i.i207 = add i32 %208, -1
  store i32 %dec.i.i207, ptr %m_count.i.i206, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i.i207)
  %tobool.not.i.i208 = icmp eq i32 %dec.i.i207, 0
  br i1 %tobool.not.i.i208, label %if.then.i.i212, label %out.put_mountpoint.exit222_crit_edge

out.put_mountpoint.exit222_crit_edge:             ; preds = %out
  call void @__sanitizer_cov_trace_pc() #24
  br label %put_mountpoint.exit222

if.then.i.i212:                                   ; preds = %out
  %m_dentry.i.i209 = getelementptr inbounds %struct.mountpoint, ptr %call3, i32 0, i32 1
  %209 = ptrtoint ptr %m_dentry.i.i209 to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load ptr, ptr %m_dentry.i.i209, align 4
  %m_list.i.i210 = getelementptr inbounds %struct.mountpoint, ptr %call3, i32 0, i32 2
  %211 = ptrtoint ptr %m_list.i.i210 to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load volatile ptr, ptr %m_list.i.i210, align 4
  %tobool.not.i.not.i.i211 = icmp eq ptr %212, null
  br i1 %tobool.not.i.not.i.i211, label %do.end11.i.i218, label %do.body6.i.i213, !prof !352

do.body6.i.i213:                                  ; preds = %if.then.i.i212
  call void @__sanitizer_cov_trace_pc() #24
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namespace.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 821, 0\0A.popsection", ""() #22, !srcloc !370
  unreachable

do.end11.i.i218:                                  ; preds = %if.then.i.i212
  %d_lockref.i.i214 = getelementptr inbounds %struct.dentry, ptr %210, i32 0, i32 7
  call void @_raw_spin_lock(ptr noundef %d_lockref.i.i214) #22
  %213 = ptrtoint ptr %210 to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load i32, ptr %210, align 8
  %and.i.i215 = and i32 %214, -65537
  store i32 %and.i.i215, ptr %210, align 8
  call void @_raw_spin_unlock(ptr noundef %d_lockref.i.i214) #22
  call void @dput_to_list(ptr noundef %210, ptr noundef nonnull @ex_mountpoints) #22
  %215 = ptrtoint ptr %call3 to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load ptr, ptr %call3, align 4
  %pprev2.i.i.i.i216 = getelementptr inbounds %struct.hlist_node, ptr %call3, i32 0, i32 1
  %217 = ptrtoint ptr %pprev2.i.i.i.i216 to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load ptr, ptr %pprev2.i.i.i.i216, align 4
  %219 = ptrtoint ptr %218 to i32
  call void @__asan_store4_noabort(i32 %219)
  store volatile ptr %216, ptr %218, align 4
  %tobool.not.i.i.i.i217 = icmp eq ptr %216, null
  br i1 %tobool.not.i.i.i.i217, label %do.end11.i.i218.hlist_del.exit.i.i221_crit_edge, label %do.body13.i.i.i.i220

do.end11.i.i218.hlist_del.exit.i.i221_crit_edge:  ; preds = %do.end11.i.i218
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_del.exit.i.i221

do.body13.i.i.i.i220:                             ; preds = %do.end11.i.i218
  call void @__sanitizer_cov_trace_pc() #24
  %pprev14.i.i.i.i219 = getelementptr inbounds %struct.hlist_node, ptr %216, i32 0, i32 1
  %220 = ptrtoint ptr %pprev14.i.i.i.i219 to i32
  call void @__asan_store4_noabort(i32 %220)
  store volatile ptr %218, ptr %pprev14.i.i.i.i219, align 4
  br label %hlist_del.exit.i.i221

hlist_del.exit.i.i221:                            ; preds = %do.body13.i.i.i.i220, %do.end11.i.i218.hlist_del.exit.i.i221_crit_edge
  %221 = ptrtoint ptr %call3 to i32
  call void @__asan_store4_noabort(i32 %221)
  store ptr inttoptr (i32 256 to ptr), ptr %call3, align 4
  %222 = ptrtoint ptr %pprev2.i.i.i.i216 to i32
  call void @__asan_store4_noabort(i32 %222)
  store ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i.i216, align 4
  call void @kfree(ptr noundef %call3) #22
  br label %put_mountpoint.exit222

put_mountpoint.exit222:                           ; preds = %hlist_del.exit.i.i221, %out.put_mountpoint.exit222_crit_edge
  call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  br label %cleanup

cleanup:                                          ; preds = %put_mountpoint.exit222, %put_mountpoint.exit, %if.then
  %retval.0 = phi i32 [ %15, %if.then ], [ %err.0, %put_mountpoint.exit222 ], [ 0, %put_mountpoint.exit ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tree_list) #22
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @invent_group_ids(ptr noundef %mnt, i1 noundef zeroext %recurse) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not31 = icmp eq ptr %mnt, null
  br i1 %tobool.not31, label %entry.cleanup9_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.cleanup9_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup9

for.body:                                         ; preds = %cond.end.for.body_crit_edge, %entry.for.body_crit_edge
  %p.032 = phi ptr [ %add.ptr.i, %cond.end.for.body_crit_edge ], [ %mnt, %entry.for.body_crit_edge ]
  %mnt_group_id = getelementptr inbounds %struct.mount, ptr %p.032, i32 0, i32 23
  %0 = ptrtoint ptr %mnt_group_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mnt_group_id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool1.not = icmp eq i32 %1, 0
  br i1 %tobool1.not, label %land.lhs.true, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %mnt_flags = getelementptr inbounds %struct.mount, ptr %p.032, i32 0, i32 3, i32 2
  %2 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mnt_flags, align 4
  %and = and i32 %3, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %if.then, label %land.lhs.true.for.inc_crit_edge

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

if.then:                                          ; preds = %land.lhs.true
  %call.i.i = tail call i32 @ida_alloc_range(ptr noundef nonnull @mnt_group_ida, i32 noundef 1, i32 noundef -1, i32 noundef 3264) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i, label %if.then5, label %cleanup

if.then5:                                         ; preds = %if.then
  %cmp.not8.i = icmp eq ptr %p.032, %mnt
  br i1 %cmp.not8.i, label %if.then5.cleanup9_crit_edge, label %if.then5.for.body.i_crit_edge

if.then5.for.body.i_crit_edge:                    ; preds = %if.then5
  br label %for.body.i

if.then5.cleanup9_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup9

for.body.i:                                       ; preds = %next_mnt.exit.i.for.body.i_crit_edge, %if.then5.for.body.i_crit_edge
  %p.09.i = phi ptr [ %retval.0.i.i, %next_mnt.exit.i.for.body.i_crit_edge ], [ %mnt, %if.then5.for.body.i_crit_edge ]
  %mnt_group_id.i19 = getelementptr inbounds %struct.mount, ptr %p.09.i, i32 0, i32 23
  %4 = ptrtoint ptr %mnt_group_id.i19 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mnt_group_id.i19, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %land.lhs.true.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %mnt_flags.i = getelementptr inbounds %struct.mount, ptr %p.09.i, i32 0, i32 3, i32 2
  %6 = ptrtoint ptr %mnt_flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mnt_flags.i, align 4
  %and.i = and i32 %7, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool2.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool2.not.i, label %if.then.i, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #24
  tail call void @ida_free(ptr noundef nonnull @mnt_group_ida, i32 noundef %5) #22
  %8 = ptrtoint ptr %mnt_group_id.i19 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %mnt_group_id.i19, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %mnt_mounts.i.i = getelementptr inbounds %struct.mount, ptr %p.09.i, i32 0, i32 6
  %9 = ptrtoint ptr %mnt_mounts.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mnt_mounts.i.i, align 4
  %cmp.i.i = icmp eq ptr %10, %mnt_mounts.i.i
  br i1 %cmp.i.i, label %for.inc.i.while.cond.i.i_crit_edge, label %for.inc.i.if.end11.i.i_crit_edge

for.inc.i.if.end11.i.i_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end11.i.i

for.inc.i.while.cond.i.i_crit_edge:               ; preds = %for.inc.i
  br label %while.cond.i.i

while.cond.i.i:                                   ; preds = %if.end.i.i.while.cond.i.i_crit_edge, %for.inc.i.while.cond.i.i_crit_edge
  %p.addr.0.i.i = phi ptr [ %14, %if.end.i.i.while.cond.i.i_crit_edge ], [ %p.09.i, %for.inc.i.while.cond.i.i_crit_edge ]
  %cmp3.i.i = icmp eq ptr %p.addr.0.i.i, %mnt
  br i1 %cmp3.i.i, label %while.cond.i.i.next_mnt.exit.i_crit_edge, label %if.end.i.i

while.cond.i.i.next_mnt.exit.i_crit_edge:         ; preds = %while.cond.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit.i

if.end.i.i:                                       ; preds = %while.cond.i.i
  %mnt_child.i.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i.i, i32 0, i32 7
  %11 = ptrtoint ptr %mnt_child.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %mnt_child.i.i, align 4
  %mnt_parent.i.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i.i, i32 0, i32 1
  %13 = ptrtoint ptr %mnt_parent.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %mnt_parent.i.i, align 4
  %mnt_mounts6.i.i = getelementptr inbounds %struct.mount, ptr %14, i32 0, i32 6
  %cmp7.not.i.i = icmp eq ptr %12, %mnt_mounts6.i.i
  br i1 %cmp7.not.i.i, label %if.end.i.i.while.cond.i.i_crit_edge, label %if.end.i.i.if.end11.i.i_crit_edge

if.end.i.i.if.end11.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end11.i.i

if.end.i.i.while.cond.i.i_crit_edge:              ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i.i

if.end11.i.i:                                     ; preds = %if.end.i.i.if.end11.i.i_crit_edge, %for.inc.i.if.end11.i.i_crit_edge
  %next.0.i.i = phi ptr [ %10, %for.inc.i.if.end11.i.i_crit_edge ], [ %12, %if.end.i.i.if.end11.i.i_crit_edge ]
  %add.ptr.i.i = getelementptr i8, ptr %next.0.i.i, i32 -52
  br label %next_mnt.exit.i

next_mnt.exit.i:                                  ; preds = %if.end11.i.i, %while.cond.i.i.next_mnt.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %add.ptr.i.i, %if.end11.i.i ], [ null, %while.cond.i.i.next_mnt.exit.i_crit_edge ]
  %cmp.not.i = icmp eq ptr %retval.0.i.i, %p.032
  br i1 %cmp.not.i, label %next_mnt.exit.i.cleanup9_crit_edge, label %next_mnt.exit.i.for.body.i_crit_edge

next_mnt.exit.i.for.body.i_crit_edge:             ; preds = %next_mnt.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i

next_mnt.exit.i.cleanup9_crit_edge:               ; preds = %next_mnt.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup9

cleanup:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  %15 = ptrtoint ptr %mnt_group_id to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %call.i.i, ptr %mnt_group_id, align 4
  br label %for.inc

for.inc:                                          ; preds = %cleanup, %land.lhs.true.for.inc_crit_edge, %for.body.for.inc_crit_edge
  br i1 %recurse, label %cond.true, label %for.inc.cleanup9_crit_edge

for.inc.cleanup9_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup9

cond.true:                                        ; preds = %for.inc
  %mnt_mounts.i = getelementptr inbounds %struct.mount, ptr %p.032, i32 0, i32 6
  %16 = ptrtoint ptr %mnt_mounts.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %mnt_mounts.i, align 4
  %cmp.i20 = icmp eq ptr %17, %mnt_mounts.i
  br i1 %cmp.i20, label %cond.true.while.cond.i_crit_edge, label %cond.true.cond.end_crit_edge

cond.true.cond.end_crit_edge:                     ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end

cond.true.while.cond.i_crit_edge:                 ; preds = %cond.true
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end.i21.while.cond.i_crit_edge, %cond.true.while.cond.i_crit_edge
  %p.addr.0.i = phi ptr [ %21, %if.end.i21.while.cond.i_crit_edge ], [ %p.032, %cond.true.while.cond.i_crit_edge ]
  %cmp3.i = icmp eq ptr %p.addr.0.i, %mnt
  br i1 %cmp3.i, label %while.cond.i.cleanup9_crit_edge, label %if.end.i21

while.cond.i.cleanup9_crit_edge:                  ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup9

if.end.i21:                                       ; preds = %while.cond.i
  %mnt_child.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 7
  %18 = ptrtoint ptr %mnt_child.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %mnt_child.i, align 4
  %mnt_parent.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 1
  %20 = ptrtoint ptr %mnt_parent.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %mnt_parent.i, align 4
  %mnt_mounts6.i = getelementptr inbounds %struct.mount, ptr %21, i32 0, i32 6
  %cmp7.not.i = icmp eq ptr %19, %mnt_mounts6.i
  br i1 %cmp7.not.i, label %if.end.i21.while.cond.i_crit_edge, label %if.end.i21.cond.end_crit_edge

if.end.i21.cond.end_crit_edge:                    ; preds = %if.end.i21
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end

if.end.i21.while.cond.i_crit_edge:                ; preds = %if.end.i21
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i

cond.end:                                         ; preds = %if.end.i21.cond.end_crit_edge, %cond.true.cond.end_crit_edge
  %next.0.i = phi ptr [ %17, %cond.true.cond.end_crit_edge ], [ %19, %if.end.i21.cond.end_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %next.0.i, i32 -52
  %tobool.not = icmp eq ptr %add.ptr.i, null
  br i1 %tobool.not, label %cond.end.cleanup9_crit_edge, label %cond.end.for.body_crit_edge

cond.end.for.body_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

cond.end.cleanup9_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup9

cleanup9:                                         ; preds = %cond.end.cleanup9_crit_edge, %while.cond.i.cleanup9_crit_edge, %for.inc.cleanup9_crit_edge, %next_mnt.exit.i.cleanup9_crit_edge, %if.then5.cleanup9_crit_edge, %entry.cleanup9_crit_edge
  %retval.3 = phi i32 [ %call.i.i, %if.then5.cleanup9_crit_edge ], [ 0, %entry.cleanup9_crit_edge ], [ %call.i.i, %next_mnt.exit.i.cleanup9_crit_edge ], [ 0, %while.cond.i.cleanup9_crit_edge ], [ 0, %cond.end.cleanup9_crit_edge ], [ 0, %for.inc.cleanup9_crit_edge ]
  ret i32 %retval.3
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @propagate_mnt(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @commit_tree(ptr noundef %mnt) unnamed_addr #1 align 64 {
entry:
  %head = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %mnt_parent = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 1
  %0 = ptrtoint ptr %mnt_parent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mnt_parent, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %head) #22
  %2 = getelementptr inbounds %struct.list_head, ptr %head, i32 0, i32 1
  %3 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %head, ptr %head, align 4
  %4 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %head, ptr %2, align 4
  %mnt_ns = getelementptr inbounds %struct.mount, ptr %1, i32 0, i32 16
  %5 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mnt_ns, align 4
  %cmp = icmp eq ptr %1, %mnt
  br i1 %cmp, label %do.body2, label %do.end7, !prof !343

do.body2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/namespace.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 946, 0\0A.popsection", ""() #22, !srcloc !402
  unreachable

do.end7:                                          ; preds = %entry
  %mnt_list = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 10
  %prev.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 10, i32 1
  %7 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i, align 4
  %call.i.i = call zeroext i1 @__list_add_valid(ptr noundef nonnull %head, ptr noundef %8, ptr noundef %mnt_list) #22
  br i1 %call.i.i, label %if.end.i.i, label %do.end7.list_add_tail.exit_crit_edge

do.end7.list_add_tail.exit_crit_edge:             ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #24
  %9 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %head, ptr %prev.i, align 4
  %10 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %mnt_list, ptr %head, align 4
  %11 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %2, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %head, ptr %8, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %do.end7.list_add_tail.exit_crit_edge
  %13 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %13)
  %.pn35 = load ptr, ptr %head, align 4
  %cmp10.not36 = icmp eq ptr %.pn35, %head
  br i1 %cmp10.not36, label %list_add_tail.exit.for.end_crit_edge, label %list_add_tail.exit.for.body_crit_edge

list_add_tail.exit.for.body_crit_edge:            ; preds = %list_add_tail.exit
  br label %for.body

list_add_tail.exit.for.end_crit_edge:             ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %list_add_tail.exit.for.body_crit_edge
  %.pn37 = phi ptr [ %.pn, %for.body.for.body_crit_edge ], [ %.pn35, %list_add_tail.exit.for.body_crit_edge ]
  %mnt_ns13 = getelementptr i8, ptr %.pn37, i32 44
  %14 = ptrtoint ptr %mnt_ns13 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %6, ptr %mnt_ns13, align 4
  %15 = ptrtoint ptr %.pn37 to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pn = load ptr, ptr %.pn37, align 4
  %cmp10.not = icmp eq ptr %.pn, %head
  br i1 %cmp10.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %list_add_tail.exit.for.end_crit_edge
  %prev19 = getelementptr inbounds %struct.mnt_namespace, ptr %6, i32 0, i32 2, i32 1
  %16 = ptrtoint ptr %prev19 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %prev19, align 4
  %18 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %head, align 4
  %cmp.i.not.i = icmp eq ptr %19, %head
  br i1 %cmp.i.not.i, label %for.end.list_splice.exit_crit_edge, label %if.then.i

for.end.list_splice.exit_crit_edge:               ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_splice.exit

if.then.i:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  %20 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %17, align 4
  %22 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %2, align 4
  %prev3.i.i33 = getelementptr inbounds %struct.list_head, ptr %19, i32 0, i32 1
  %24 = ptrtoint ptr %prev3.i.i33 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %17, ptr %prev3.i.i33, align 4
  store ptr %19, ptr %17, align 4
  %25 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %21, ptr %23, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %21, i32 0, i32 1
  %26 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %23, ptr %prev6.i.i, align 4
  br label %list_splice.exit

list_splice.exit:                                 ; preds = %if.then.i, %for.end.list_splice.exit_crit_edge
  %pending_mounts = getelementptr inbounds %struct.mnt_namespace, ptr %6, i32 0, i32 10
  %27 = ptrtoint ptr %pending_mounts to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %pending_mounts, align 4
  %mounts = getelementptr inbounds %struct.mnt_namespace, ptr %6, i32 0, i32 9
  %29 = ptrtoint ptr %mounts to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %mounts, align 8
  %add = add i32 %30, %28
  store i32 %add, ptr %mounts, align 8
  store i32 0, ptr %pending_mounts, align 4
  %mnt1.i = getelementptr inbounds %struct.mount, ptr %1, i32 0, i32 3
  %mnt_mountpoint.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 2
  %31 = ptrtoint ptr %mnt_mountpoint.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %mnt_mountpoint.i, align 4
  %33 = ptrtoint ptr %mnt1.i to i32
  %div6.i.i = lshr i32 %33, 7
  %34 = ptrtoint ptr %32 to i32
  %div17.i.i = lshr i32 %34, 7
  %add.i.i = add nuw nsw i32 %div17.i.i, %div6.i.i
  %35 = load i32, ptr @m_hash_shift, align 4
  %shr.i.i = lshr i32 %add.i.i, %35
  %add2.i.i = add nuw nsw i32 %shr.i.i, %add.i.i
  %36 = load ptr, ptr @mount_hashtable, align 4
  %37 = load i32, ptr @m_hash_mask, align 4
  %and.i.i = and i32 %add2.i.i, %37
  %arrayidx.i.i = getelementptr %struct.hlist_head, ptr %36, i32 %and.i.i
  %38 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx.i.i, align 4
  %40 = ptrtoint ptr %mnt to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %39, ptr %mnt, align 4
  %pprev.i.i = getelementptr inbounds %struct.hlist_node, ptr %mnt, i32 0, i32 1
  %41 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile ptr %arrayidx.i.i, ptr %pprev.i.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !371
  %42 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile ptr %mnt, ptr %arrayidx.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %39, null
  br i1 %tobool.not.i.i, label %list_splice.exit.hlist_add_head_rcu.exit.i_crit_edge, label %do.body49.i.i

list_splice.exit.hlist_add_head_rcu.exit.i_crit_edge: ; preds = %list_splice.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %hlist_add_head_rcu.exit.i

do.body49.i.i:                                    ; preds = %list_splice.exit
  call void @__sanitizer_cov_trace_pc() #24
  %pprev51.i.i = getelementptr inbounds %struct.hlist_node, ptr %39, i32 0, i32 1
  %43 = ptrtoint ptr %pprev51.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store volatile ptr %mnt, ptr %pprev51.i.i, align 4
  br label %hlist_add_head_rcu.exit.i

hlist_add_head_rcu.exit.i:                        ; preds = %do.body49.i.i, %list_splice.exit.hlist_add_head_rcu.exit.i_crit_edge
  %mnt_child.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 7
  %mnt_mounts.i = getelementptr inbounds %struct.mount, ptr %1, i32 0, i32 6
  %prev.i.i = getelementptr inbounds %struct.mount, ptr %1, i32 0, i32 6, i32 1
  %44 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %mnt_child.i, ptr noundef %45, ptr noundef %mnt_mounts.i) #22
  br i1 %call.i.i.i, label %if.end.i.i.i, label %hlist_add_head_rcu.exit.i.__attach_mnt.exit_crit_edge

hlist_add_head_rcu.exit.i.__attach_mnt.exit_crit_edge: ; preds = %hlist_add_head_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %__attach_mnt.exit

if.end.i.i.i:                                     ; preds = %hlist_add_head_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  %46 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %mnt_child.i, ptr %prev.i.i, align 4
  %47 = ptrtoint ptr %mnt_child.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %mnt_mounts.i, ptr %mnt_child.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 7, i32 1
  %48 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %45, ptr %prev3.i.i.i, align 4
  %49 = ptrtoint ptr %45 to i32
  call void @__asan_store4_noabort(i32 %49)
  store volatile ptr %mnt_child.i, ptr %45, align 4
  br label %__attach_mnt.exit

__attach_mnt.exit:                                ; preds = %if.end.i.i.i, %hlist_add_head_rcu.exit.i.__attach_mnt.exit_crit_edge
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %__attach_mnt.exit.touch_mnt_namespace.exit_crit_edge, label %if.then.i34

__attach_mnt.exit.touch_mnt_namespace.exit_crit_edge: ; preds = %__attach_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %touch_mnt_namespace.exit

if.then.i34:                                      ; preds = %__attach_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  %50 = load i64, ptr @event, align 8
  %inc.i = add i64 %50, 1
  store i64 %inc.i, ptr @event, align 8
  %event.i = getelementptr inbounds %struct.mnt_namespace, ptr %6, i32 0, i32 8
  %51 = ptrtoint ptr %event.i to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 %inc.i, ptr %event.i, align 8
  %poll.i = getelementptr inbounds %struct.mnt_namespace, ptr %6, i32 0, i32 7
  call void @__wake_up(ptr noundef %poll.i, i32 noundef 1, i32 noundef 1, ptr noundef null) #22
  br label %touch_mnt_namespace.exit

touch_mnt_namespace.exit:                         ; preds = %if.then.i34, %__attach_mnt.exit.touch_mnt_namespace.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %head) #22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @set_mount_attributes(ptr nocapture noundef %mnt, i32 noundef %mnt_flags) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %mnt_flags2 = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 3, i32 2
  %0 = ptrtoint ptr %mnt_flags2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mnt_flags2, align 4
  %and = and i32 %1, -256
  %or = or i32 %and, %mnt_flags
  store i32 %or, ptr %mnt_flags2, align 4
  %mnt_ns = getelementptr inbounds %struct.mount, ptr %mnt, i32 0, i32 16
  %2 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mnt_ns, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.touch_mnt_namespace.exit_crit_edge, label %if.then.i

entry.touch_mnt_namespace.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %touch_mnt_namespace.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %4 = load i64, ptr @event, align 8
  %inc.i = add i64 %4, 1
  store i64 %inc.i, ptr @event, align 8
  %event.i = getelementptr inbounds %struct.mnt_namespace, ptr %3, i32 0, i32 8
  %5 = ptrtoint ptr %event.i to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %inc.i, ptr %event.i, align 8
  %poll.i = getelementptr inbounds %struct.mnt_namespace, ptr %3, i32 0, i32 7
  tail call void @__wake_up(ptr noundef %poll.i, i32 noundef 1, i32 noundef 1, ptr noundef null) #22
  br label %touch_mnt_namespace.exit

touch_mnt_namespace.exit:                         ; preds = %if.then.i, %entry.touch_mnt_namespace.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mnt_warn_timestamp_expiry(ptr noundef %mountpoint, ptr nocapture noundef readonly %mnt) unnamed_addr #1 align 64 {
entry:
  %tm = alloca %struct.tm, align 4
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %mnt_sb = getelementptr inbounds %struct.vfsmount, ptr %mnt, i32 0, i32 1
  %0 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mnt_sb, align 4
  %mnt_flags.i = getelementptr inbounds %struct.vfsmount, ptr %mnt, i32 0, i32 2
  %2 = ptrtoint ptr %mnt_flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mnt_flags.i, align 4
  %and.i = and i32 %3, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %__mnt_is_readonly.exit, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

__mnt_is_readonly.exit:                           ; preds = %entry
  %s_flags.i.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 10
  %4 = ptrtoint ptr %s_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %s_flags.i.i, align 4
  %and.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.i.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.i.not, label %land.lhs.true, label %__mnt_is_readonly.exit.if.end_crit_edge

__mnt_is_readonly.exit.if.end_crit_edge:          ; preds = %__mnt_is_readonly.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

land.lhs.true:                                    ; preds = %__mnt_is_readonly.exit
  %call1 = tail call i64 @ktime_get_real_seconds() #22
  %add = add i64 %call1, 946080000
  %s_time_max = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 36
  %6 = ptrtoint ptr %s_time_max to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %s_time_max, align 64
  call void @__sanitizer_cov_trace_cmp8(i64 %add, i64 %7)
  %cmp = icmp sgt i64 %add, %7
  br i1 %cmp, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  %call2 = tail call i32 @__get_free_pages(i32 noundef 3264, i32 noundef 0) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.then.cond.end_crit_edge, label %cond.true

if.then.cond.end_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  br label %cond.end

cond.true:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #24
  %8 = inttoptr i32 %call2 to ptr
  %call3 = tail call ptr @d_path(ptr noundef %mountpoint, ptr noundef nonnull %8, i32 noundef 4096) #22
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.then.cond.end_crit_edge
  %cond = phi ptr [ %call3, %cond.true ], [ inttoptr (i32 -12 to ptr), %if.then.cond.end_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %tm) #22
  %9 = getelementptr inbounds %struct.tm, ptr %tm, i32 0, i32 5
  %10 = call ptr @memset(ptr %tm, i32 255, i32 32)
  %11 = ptrtoint ptr %s_time_max to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %s_time_max, align 64
  call void @time64_to_tm(i64 noundef %12, i32 noundef 0, ptr noundef nonnull %tm) #22
  %s_type = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 5
  %13 = ptrtoint ptr %s_type to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %s_type, align 32
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %14, align 4
  %mnt_ns.i = getelementptr i8, ptr %mnt, i32 100
  %17 = ptrtoint ptr %mnt_ns.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %mnt_ns.i, align 4
  %tobool.not.i.i = icmp eq ptr %18, null
  %cmp.i.i = icmp ugt ptr %18, inttoptr (i32 -4096 to ptr)
  %tobool7.not = or i1 %tobool.not.i.i, %cmp.i.i
  %cond8 = select i1 %tobool7.not, ptr @.str.66, ptr @.str.65
  %19 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %9, align 4
  %add9 = add i32 %20, 1900
  %21 = ptrtoint ptr %s_time_max to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %s_time_max, align 64
  %call11 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.63, ptr noundef %16, ptr noundef nonnull %cond8, ptr noundef %cond, i32 noundef %add9, i64 noundef %22) #29
  call void @free_pages(i32 noundef %call2, i32 noundef 0) #22
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %tm) #22
  br label %if.end

if.end:                                           ; preds = %cond.end, %land.lhs.true.if.end_crit_edge, %__mnt_is_readonly.exit.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_real_seconds() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__get_free_pages(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @d_path(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @time64_to_tm(i64 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_pages(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kern_path(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @lock_mount(ptr noundef %path) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %dentry1 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %0 = ptrtoint ptr %dentry1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dentry1, align 4
  %d_inode50 = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %d_inode50 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %d_inode50, align 8
  %i_rwsem.i51 = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 25
  tail call void @down_write(ptr noundef %i_rwsem.i51) #22
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %1, align 8
  %and.i52 = and i32 %5, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i52)
  %tobool.not53 = icmp eq i32 %and.i52, 0
  br i1 %tobool.not53, label %if.end.preheader, label %entry.cleanup28.sink.split_crit_edge, !prof !352

entry.cleanup28.sink.split_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup28.sink.split

if.end.preheader:                                 ; preds = %entry
  tail call void @down_write(ptr noundef nonnull @namespace_sem) #22
  %call658 = tail call ptr @lookup_mnt(ptr noundef %path)
  %tobool7.not59 = icmp eq ptr %call658, null
  br i1 %tobool7.not59, label %if.end.preheader.if.then16_crit_edge, label %if.end.preheader.if.end22_crit_edge, !prof !352

if.end.preheader.if.end22_crit_edge:              ; preds = %if.end.preheader
  br label %if.end22

if.end.preheader.if.then16_crit_edge:             ; preds = %if.end.preheader
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then16

if.end:                                           ; preds = %dget.exit
  tail call void @down_write(ptr noundef nonnull @namespace_sem) #22
  %call6 = tail call ptr @lookup_mnt(ptr noundef %path)
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end.if.then16_crit_edge, label %if.end.if.end22_crit_edge, !prof !352

if.end.if.end22_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end22

if.end.if.then16_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.then16

if.then16:                                        ; preds = %if.end.if.then16_crit_edge, %if.end.preheader.if.then16_crit_edge
  %dentry.054.lcssa = phi ptr [ %1, %if.end.preheader.if.then16_crit_edge ], [ %12, %if.end.if.then16_crit_edge ]
  %call17 = tail call fastcc ptr @get_mountpoint(ptr noundef %dentry.054.lcssa)
  %cmp.i = icmp ugt ptr %call17, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then19, label %if.then16.cleanup28_crit_edge

if.then16.cleanup28_crit_edge:                    ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup28

if.then19:                                        ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @namespace_unlock()
  br label %cleanup28.sink.split

if.end22:                                         ; preds = %if.end.if.end22_crit_edge, %if.end.preheader.if.end22_crit_edge
  %call660 = phi ptr [ %call6, %if.end.if.end22_crit_edge ], [ %call658, %if.end.preheader.if.end22_crit_edge ]
  tail call fastcc void @namespace_unlock()
  %6 = ptrtoint ptr %dentry1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dentry1, align 4
  %d_inode24 = getelementptr inbounds %struct.dentry, ptr %7, i32 0, i32 5
  %8 = ptrtoint ptr %d_inode24 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %d_inode24, align 8
  %i_rwsem.i45 = getelementptr inbounds %struct.inode, ptr %9, i32 0, i32 25
  tail call void @up_write(ptr noundef %i_rwsem.i45) #22
  tail call void @path_put(ptr noundef %path) #22
  %10 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %call660, ptr %path, align 4
  %11 = ptrtoint ptr %call660 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %call660, align 4
  %tobool.not.i = icmp eq ptr %12, null
  br i1 %tobool.not.i, label %if.end22.dget.exit_crit_edge, label %if.then.i

if.end22.dget.exit_crit_edge:                     ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #24
  br label %dget.exit

if.then.i:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #24
  %d_lockref.i = getelementptr inbounds %struct.dentry, ptr %12, i32 0, i32 7
  tail call void @lockref_get(ptr noundef %d_lockref.i) #22
  br label %dget.exit

dget.exit:                                        ; preds = %if.then.i, %if.end22.dget.exit_crit_edge
  %13 = ptrtoint ptr %dentry1 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %12, ptr %dentry1, align 4
  %d_inode = getelementptr inbounds %struct.dentry, ptr %12, i32 0, i32 5
  %14 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %d_inode, align 8
  %i_rwsem.i = getelementptr inbounds %struct.inode, ptr %15, i32 0, i32 25
  tail call void @down_write(ptr noundef %i_rwsem.i) #22
  %16 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %12, align 8
  %and.i = and i32 %17, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.end, label %dget.exit.cleanup28.sink.split_crit_edge, !prof !352

dget.exit.cleanup28.sink.split_crit_edge:         ; preds = %dget.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup28.sink.split

cleanup28.sink.split:                             ; preds = %dget.exit.cleanup28.sink.split_crit_edge, %if.then19, %entry.cleanup28.sink.split_crit_edge
  %dentry.054.lcssa.pn = phi ptr [ %dentry.054.lcssa, %if.then19 ], [ %1, %entry.cleanup28.sink.split_crit_edge ], [ %12, %dget.exit.cleanup28.sink.split_crit_edge ]
  %retval.1.ph = phi ptr [ %call17, %if.then19 ], [ inttoptr (i32 -2 to ptr), %entry.cleanup28.sink.split_crit_edge ], [ inttoptr (i32 -2 to ptr), %dget.exit.cleanup28.sink.split_crit_edge ]
  %d_inode.le.sink = getelementptr inbounds %struct.dentry, ptr %dentry.054.lcssa.pn, i32 0, i32 5
  %18 = ptrtoint ptr %d_inode.le.sink to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %d_inode.le.sink, align 8
  %i_rwsem.i44 = getelementptr inbounds %struct.inode, ptr %19, i32 0, i32 25
  tail call void @up_write(ptr noundef %i_rwsem.i44) #22
  br label %cleanup28

cleanup28:                                        ; preds = %cleanup28.sink.split, %if.then16.cleanup28_crit_edge
  %retval.1 = phi ptr [ %call17, %if.then16.cleanup28_crit_edge ], [ %retval.1.ph, %cleanup28.sink.split ]
  ret ptr %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_move_mount(ptr nocapture noundef readonly %old_path, ptr noundef %new_path) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @lock_mount(ptr noundef %new_path)
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  %0 = ptrtoint ptr %call to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = ptrtoint ptr %old_path to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %old_path, align 4
  %add.ptr.i = getelementptr i8, ptr %2, i32 -16
  %3 = ptrtoint ptr %new_path to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %new_path, align 4
  %add.ptr.i120 = getelementptr i8, ptr %4, i32 -16
  %mnt_parent = getelementptr i8, ptr %2, i32 -8
  %5 = ptrtoint ptr %mnt_parent to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mnt_parent, align 4
  %cmp.i121 = icmp ne ptr %6, %add.ptr.i
  %mnt_mp = getelementptr i8, ptr %2, i32 104
  %7 = ptrtoint ptr %mnt_mp to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %mnt_mp, align 4
  %mnt_ns = getelementptr i8, ptr %2, i32 100
  %9 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mnt_ns, align 4
  %mnt_ns.i = getelementptr i8, ptr %4, i32 100
  %11 = ptrtoint ptr %mnt_ns.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %mnt_ns.i, align 4
  %13 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i, align 8
  %nsproxy.i = getelementptr inbounds %struct.task_struct, ptr %16, i32 0, i32 110
  %17 = ptrtoint ptr %nsproxy.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %nsproxy.i, align 4
  %mnt_ns1.i = getelementptr inbounds %struct.nsproxy, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %mnt_ns1.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %mnt_ns1.i, align 4
  %cmp.i122.not = icmp eq ptr %12, %20
  br i1 %cmp.i122.not, label %if.end10, label %if.end.out.thread_crit_edge

if.end.out.thread_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.thread

if.end10:                                         ; preds = %if.end
  %21 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %mnt_ns, align 4
  %tobool.not.i.i = icmp eq ptr %22, null
  %cmp.i.i = icmp ugt ptr %22, inttoptr (i32 -4096 to ptr)
  %tobool13.not = or i1 %tobool.not.i.i, %cmp.i.i
  br i1 %tobool13.not, label %if.end10.out.thread_crit_edge, label %if.end15

if.end10.out.thread_crit_edge:                    ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.thread

if.end15:                                         ; preds = %if.end10
  br i1 %cmp.i121, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end15
  %cmp.i130.not = icmp eq ptr %10, %12
  br i1 %cmp.i130.not, label %cond.true.if.end21_crit_edge, label %cond.true.out.thread_crit_edge

cond.true.out.thread_crit_edge:                   ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.thread

cond.true.if.end21_crit_edge:                     ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end21

cond.false:                                       ; preds = %if.end15
  %seq.i = getelementptr inbounds %struct.mnt_namespace, ptr %10, i32 0, i32 6
  %23 = ptrtoint ptr %seq.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %seq.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %24)
  %cmp.i132 = icmp eq i64 %24, 0
  br i1 %cmp.i132, label %cond.false.if.end21_crit_edge, label %cond.false.out.thread_crit_edge

cond.false.out.thread_crit_edge:                  ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.thread

cond.false.if.end21_crit_edge:                    ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end21

if.end21:                                         ; preds = %cond.false.if.end21_crit_edge, %cond.true.if.end21_crit_edge
  %mnt_flags = getelementptr i8, ptr %2, i32 8
  %25 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %mnt_flags, align 4
  %and = and i32 %26, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool23.not = icmp eq i32 %and, 0
  br i1 %tobool23.not, label %if.end25, label %if.end21.out.thread_crit_edge

if.end21.out.thread_crit_edge:                    ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.thread

if.end25:                                         ; preds = %if.end21
  %dentry = getelementptr inbounds %struct.path, ptr %old_path, i32 0, i32 1
  %27 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %dentry, align 4
  %29 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %2, align 4
  %cmp.not = icmp eq ptr %28, %30
  br i1 %cmp.not, label %if.end28, label %if.end25.out.thread_crit_edge

if.end25.out.thread_crit_edge:                    ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.thread

if.end28:                                         ; preds = %if.end25
  %dentry29 = getelementptr inbounds %struct.path, ptr %new_path, i32 0, i32 1
  %31 = ptrtoint ptr %dentry29 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %dentry29, align 4
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %32, align 8
  %35 = and i32 %34, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %35)
  %36 = icmp eq i32 %35, 2097152
  %37 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %28, align 8
  %39 = and i32 %38, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %39)
  %40 = icmp eq i32 %39, 2097152
  %41 = xor i1 %36, %40
  br i1 %41, label %if.end28.out.thread_crit_edge, label %if.end37

if.end28.out.thread_crit_edge:                    ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.thread

if.end37:                                         ; preds = %if.end28
  br i1 %cmp.i121, label %land.lhs.true, label %if.end37.if.end45_crit_edge

if.end37.if.end45_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end45

land.lhs.true:                                    ; preds = %if.end37
  %mnt_flags41 = getelementptr inbounds %struct.mount, ptr %6, i32 0, i32 3, i32 2
  %42 = ptrtoint ptr %mnt_flags41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %mnt_flags41, align 4
  %and42 = and i32 %43, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and42)
  %tobool43.not = icmp eq i32 %and42, 0
  br i1 %tobool43.not, label %land.lhs.true.if.end45_crit_edge, label %land.lhs.true.out.thread_crit_edge

land.lhs.true.out.thread_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.thread

land.lhs.true.if.end45_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end45

if.end45:                                         ; preds = %land.lhs.true.if.end45_crit_edge, %if.end37.if.end45_crit_edge
  %mnt_flags47 = getelementptr i8, ptr %4, i32 8
  %44 = ptrtoint ptr %mnt_flags47 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %mnt_flags47, align 4
  %and48 = and i32 %45, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and48)
  %tobool49.not = icmp eq i32 %and48, 0
  br i1 %tobool49.not, label %if.end45.if.end54_crit_edge, label %land.lhs.true50

if.end45.if.end54_crit_edge:                      ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end54

land.lhs.true50:                                  ; preds = %if.end45
  %call51 = tail call fastcc i32 @tree_contains_unbindable(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call51)
  %tobool52.not = icmp eq i32 %call51, 0
  br i1 %tobool52.not, label %land.lhs.true50.if.end54_crit_edge, label %land.lhs.true50.out.thread_crit_edge

land.lhs.true50.out.thread_crit_edge:             ; preds = %land.lhs.true50
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.thread

land.lhs.true50.if.end54_crit_edge:               ; preds = %land.lhs.true50
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end54

if.end54:                                         ; preds = %land.lhs.true50.if.end54_crit_edge, %if.end45.if.end54_crit_edge
  %call55 = tail call fastcc zeroext i1 @check_for_nsfs_mounts(ptr noundef %add.ptr.i)
  br i1 %call55, label %if.end54.for.cond_crit_edge, label %if.end54.out.thread_crit_edge

if.end54.out.thread_crit_edge:                    ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.thread

if.end54.for.cond_crit_edge:                      ; preds = %if.end54
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.end54.for.cond_crit_edge
  %p.0 = phi ptr [ %47, %for.body.for.cond_crit_edge ], [ %add.ptr.i120, %if.end54.for.cond_crit_edge ]
  %mnt_parent.i133 = getelementptr inbounds %struct.mount, ptr %p.0, i32 0, i32 1
  %46 = ptrtoint ptr %mnt_parent.i133 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %mnt_parent.i133, align 4
  %cmp.i134.not = icmp eq ptr %47, %p.0
  br i1 %cmp.i134.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %cmp60 = icmp eq ptr %p.0, %add.ptr.i
  br i1 %cmp60, label %for.body.out.thread_crit_edge, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.cond

for.body.out.thread_crit_edge:                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.thread

for.end:                                          ; preds = %for.cond
  %48 = ptrtoint ptr %new_path to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %new_path, align 4
  %add.ptr.i136 = getelementptr i8, ptr %49, i32 -16
  %call68 = tail call fastcc i32 @attach_recursive_mnt(ptr noundef %add.ptr.i, ptr noundef %add.ptr.i136, ptr noundef %call, i1 noundef zeroext %cmp.i121)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call68)
  %tobool69.not = icmp eq i32 %call68, 0
  br i1 %tobool69.not, label %if.end71, label %for.end.out.thread_crit_edge

for.end.out.thread_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %out.thread

if.end71:                                         ; preds = %for.end
  %mnt_expire = getelementptr i8, ptr %2, i32 64
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %mnt_expire) #22
  br i1 %call.i.i, label %if.end.i.i, label %if.end71.list_del_init.exit_crit_edge

if.end71.list_del_init.exit_crit_edge:            ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #24
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #24
  %prev.i.i = getelementptr i8, ptr %2, i32 68
  %50 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %prev.i.i, align 4
  %52 = ptrtoint ptr %mnt_expire to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %mnt_expire, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %53, i32 0, i32 1
  %54 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %51, ptr %prev1.i.i.i, align 4
  %55 = ptrtoint ptr %51 to i32
  call void @__asan_store4_noabort(i32 %55)
  store volatile ptr %53, ptr %51, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %if.end71.list_del_init.exit_crit_edge
  %56 = ptrtoint ptr %mnt_expire to i32
  call void @__asan_store4_noabort(i32 %56)
  store volatile ptr %mnt_expire, ptr %mnt_expire, align 4
  %prev.i3.i = getelementptr i8, ptr %2, i32 68
  %57 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %mnt_expire, ptr %prev.i3.i, align 4
  br i1 %cmp.i121, label %if.then78, label %if.else

out.thread:                                       ; preds = %for.end.out.thread_crit_edge, %for.body.out.thread_crit_edge, %if.end54.out.thread_crit_edge, %land.lhs.true50.out.thread_crit_edge, %land.lhs.true.out.thread_crit_edge, %if.end28.out.thread_crit_edge, %if.end25.out.thread_crit_edge, %if.end21.out.thread_crit_edge, %cond.false.out.thread_crit_edge, %cond.true.out.thread_crit_edge, %if.end10.out.thread_crit_edge, %if.end.out.thread_crit_edge
  %err.0.ph = phi i32 [ -22, %if.end.out.thread_crit_edge ], [ -22, %if.end10.out.thread_crit_edge ], [ -22, %cond.false.out.thread_crit_edge ], [ -22, %cond.true.out.thread_crit_edge ], [ -40, %if.end54.out.thread_crit_edge ], [ %call68, %for.end.out.thread_crit_edge ], [ -22, %land.lhs.true50.out.thread_crit_edge ], [ -22, %land.lhs.true.out.thread_crit_edge ], [ -22, %if.end28.out.thread_crit_edge ], [ -22, %if.end25.out.thread_crit_edge ], [ -22, %if.end21.out.thread_crit_edge ], [ -40, %for.body.out.thread_crit_edge ]
  tail call fastcc void @unlock_mount(ptr noundef %call)
  br label %cleanup

if.then78:                                        ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @put_mountpoint(ptr noundef %8)
  tail call fastcc void @unlock_mount(ptr noundef %call)
  tail call fastcc void @mntput_no_expire(ptr noundef %6)
  br label %cleanup

if.else:                                          ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #24
  tail call fastcc void @unlock_mount(ptr noundef %call)
  tail call fastcc void @free_mnt_ns(ptr noundef %10)
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then78, %out.thread, %if.then
  %retval.0 = phi i32 [ %0, %if.then ], [ 0, %if.then78 ], [ 0, %if.else ], [ %err.0.ph, %out.thread ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @tree_contains_unbindable(ptr noundef readonly %mnt) unnamed_addr #20 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  %tobool.not6 = icmp eq ptr %mnt, null
  br i1 %tobool.not6, label %entry.cleanup_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

for.body:                                         ; preds = %next_mnt.exit.for.body_crit_edge, %entry.for.body_crit_edge
  %p.07 = phi ptr [ %add.ptr.i, %next_mnt.exit.for.body_crit_edge ], [ %mnt, %entry.for.body_crit_edge ]
  %mnt_flags = getelementptr inbounds %struct.mount, ptr %p.07, i32 0, i32 3, i32 2
  %0 = ptrtoint ptr %mnt_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mnt_flags, align 4
  %and = and i32 %1, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %for.inc, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %mnt_mounts.i = getelementptr inbounds %struct.mount, ptr %p.07, i32 0, i32 6
  %2 = ptrtoint ptr %mnt_mounts.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mnt_mounts.i, align 4
  %cmp.i = icmp eq ptr %3, %mnt_mounts.i
  br i1 %cmp.i, label %for.inc.while.cond.i_crit_edge, label %for.inc.next_mnt.exit_crit_edge

for.inc.next_mnt.exit_crit_edge:                  ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit

for.inc.while.cond.i_crit_edge:                   ; preds = %for.inc
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end.i.while.cond.i_crit_edge, %for.inc.while.cond.i_crit_edge
  %p.addr.0.i = phi ptr [ %7, %if.end.i.while.cond.i_crit_edge ], [ %p.07, %for.inc.while.cond.i_crit_edge ]
  %cmp3.i = icmp eq ptr %p.addr.0.i, %mnt
  br i1 %cmp3.i, label %while.cond.i.cleanup_crit_edge, label %if.end.i

while.cond.i.cleanup_crit_edge:                   ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end.i:                                         ; preds = %while.cond.i
  %mnt_child.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 7
  %4 = ptrtoint ptr %mnt_child.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mnt_child.i, align 4
  %mnt_parent.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 1
  %6 = ptrtoint ptr %mnt_parent.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mnt_parent.i, align 4
  %mnt_mounts6.i = getelementptr inbounds %struct.mount, ptr %7, i32 0, i32 6
  %cmp7.not.i = icmp eq ptr %5, %mnt_mounts6.i
  br i1 %cmp7.not.i, label %if.end.i.while.cond.i_crit_edge, label %if.end.i.next_mnt.exit_crit_edge

if.end.i.next_mnt.exit_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit

if.end.i.while.cond.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i

next_mnt.exit:                                    ; preds = %if.end.i.next_mnt.exit_crit_edge, %for.inc.next_mnt.exit_crit_edge
  %next.0.i = phi ptr [ %3, %for.inc.next_mnt.exit_crit_edge ], [ %5, %if.end.i.next_mnt.exit_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %next.0.i, i32 -52
  %tobool.not = icmp eq ptr %add.ptr.i, null
  br i1 %tobool.not, label %next_mnt.exit.cleanup_crit_edge, label %next_mnt.exit.for.body_crit_edge

next_mnt.exit.for.body_crit_edge:                 ; preds = %next_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

next_mnt.exit.cleanup_crit_edge:                  ; preds = %next_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

cleanup:                                          ; preds = %next_mnt.exit.cleanup_crit_edge, %while.cond.i.cleanup_crit_edge, %for.body.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %while.cond.i.cleanup_crit_edge ], [ 0, %next_mnt.exit.cleanup_crit_edge ], [ 1, %for.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @check_for_nsfs_mounts(ptr noundef readonly %subtree) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  %0 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i.i = add i32 %0, 1
  store i32 %inc.i.i.i.i.i, ptr @mount_lock, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !359
  %1 = tail call ptr @llvm.returnaddress(i32 0) #22
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %2) #22
  %tobool.not10 = icmp eq ptr %subtree, null
  br i1 %tobool.not10, label %entry.out_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

for.body:                                         ; preds = %next_mnt.exit.for.body_crit_edge, %entry.for.body_crit_edge
  %p.011 = phi ptr [ %add.ptr.i, %next_mnt.exit.for.body_crit_edge ], [ %subtree, %entry.for.body_crit_edge ]
  %mnt = getelementptr inbounds %struct.mount, ptr %p.011, i32 0, i32 3
  %3 = ptrtoint ptr %mnt to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mnt, align 4
  %d_op.i.i = getelementptr inbounds %struct.dentry, ptr %4, i32 0, i32 8
  %5 = ptrtoint ptr %d_op.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %d_op.i.i, align 8
  %cmp.i.i = icmp eq ptr %6, @ns_dentry_operations
  br i1 %cmp.i.i, label %is_mnt_ns_file.exit.i, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

is_mnt_ns_file.exit.i:                            ; preds = %for.body
  %d_fsdata.i.i = getelementptr inbounds %struct.dentry, ptr %4, i32 0, i32 11
  %7 = ptrtoint ptr %d_fsdata.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %d_fsdata.i.i, align 4
  %cmp1.i.i = icmp eq ptr %8, @mntns_operations
  br i1 %cmp1.i.i, label %mnt_ns_loop.exit, label %is_mnt_ns_file.exit.i.for.inc_crit_edge

is_mnt_ns_file.exit.i.for.inc_crit_edge:          ; preds = %is_mnt_ns_file.exit.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

mnt_ns_loop.exit:                                 ; preds = %is_mnt_ns_file.exit.i
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %4, i32 0, i32 5
  %9 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %d_inode.i, align 8
  %i_private.i = getelementptr inbounds %struct.inode, ptr %10, i32 0, i32 54
  %11 = ptrtoint ptr %i_private.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %i_private.i, align 4
  %13 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i, align 8
  %nsproxy.i = getelementptr inbounds %struct.task_struct, ptr %16, i32 0, i32 110
  %17 = ptrtoint ptr %nsproxy.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %nsproxy.i, align 4
  %mnt_ns3.i = getelementptr inbounds %struct.nsproxy, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %mnt_ns3.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %mnt_ns3.i, align 4
  %seq.i = getelementptr inbounds %struct.mnt_namespace, ptr %20, i32 0, i32 6
  %21 = ptrtoint ptr %seq.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %seq.i, align 8
  %seq4.i = getelementptr inbounds %struct.mnt_namespace, ptr %12, i32 0, i32 6
  %23 = ptrtoint ptr %seq4.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %seq4.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %22, i64 %24)
  %cmp.i.not = icmp ult i64 %22, %24
  br i1 %cmp.i.not, label %mnt_ns_loop.exit.for.inc_crit_edge, label %mnt_ns_loop.exit.out_crit_edge

mnt_ns_loop.exit.out_crit_edge:                   ; preds = %mnt_ns_loop.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

mnt_ns_loop.exit.for.inc_crit_edge:               ; preds = %mnt_ns_loop.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc

for.inc:                                          ; preds = %mnt_ns_loop.exit.for.inc_crit_edge, %is_mnt_ns_file.exit.i.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %mnt_mounts.i = getelementptr inbounds %struct.mount, ptr %p.011, i32 0, i32 6
  %25 = ptrtoint ptr %mnt_mounts.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %mnt_mounts.i, align 4
  %cmp.i6 = icmp eq ptr %26, %mnt_mounts.i
  br i1 %cmp.i6, label %for.inc.while.cond.i_crit_edge, label %for.inc.next_mnt.exit_crit_edge

for.inc.next_mnt.exit_crit_edge:                  ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit

for.inc.while.cond.i_crit_edge:                   ; preds = %for.inc
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end.i7.while.cond.i_crit_edge, %for.inc.while.cond.i_crit_edge
  %p.addr.0.i = phi ptr [ %30, %if.end.i7.while.cond.i_crit_edge ], [ %p.011, %for.inc.while.cond.i_crit_edge ]
  %cmp3.i = icmp eq ptr %p.addr.0.i, %subtree
  br i1 %cmp3.i, label %while.cond.i.out_crit_edge, label %if.end.i7

while.cond.i.out_crit_edge:                       ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

if.end.i7:                                        ; preds = %while.cond.i
  %mnt_child.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 7
  %27 = ptrtoint ptr %mnt_child.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %mnt_child.i, align 4
  %mnt_parent.i = getelementptr inbounds %struct.mount, ptr %p.addr.0.i, i32 0, i32 1
  %29 = ptrtoint ptr %mnt_parent.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %mnt_parent.i, align 4
  %mnt_mounts6.i = getelementptr inbounds %struct.mount, ptr %30, i32 0, i32 6
  %cmp7.not.i = icmp eq ptr %28, %mnt_mounts6.i
  br i1 %cmp7.not.i, label %if.end.i7.while.cond.i_crit_edge, label %if.end.i7.next_mnt.exit_crit_edge

if.end.i7.next_mnt.exit_crit_edge:                ; preds = %if.end.i7
  call void @__sanitizer_cov_trace_pc() #24
  br label %next_mnt.exit

if.end.i7.while.cond.i_crit_edge:                 ; preds = %if.end.i7
  call void @__sanitizer_cov_trace_pc() #24
  br label %while.cond.i

next_mnt.exit:                                    ; preds = %if.end.i7.next_mnt.exit_crit_edge, %for.inc.next_mnt.exit_crit_edge
  %next.0.i = phi ptr [ %26, %for.inc.next_mnt.exit_crit_edge ], [ %28, %if.end.i7.next_mnt.exit_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %next.0.i, i32 -52
  %tobool.not = icmp eq ptr %add.ptr.i, null
  br i1 %tobool.not, label %next_mnt.exit.out_crit_edge, label %next_mnt.exit.for.body_crit_edge

next_mnt.exit.for.body_crit_edge:                 ; preds = %next_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body

next_mnt.exit.out_crit_edge:                      ; preds = %next_mnt.exit
  call void @__sanitizer_cov_trace_pc() #24
  br label %out

out:                                              ; preds = %next_mnt.exit.out_crit_edge, %while.cond.i.out_crit_edge, %mnt_ns_loop.exit.out_crit_edge, %entry.out_crit_edge
  %tobool.not.lcssa = phi i1 [ true, %entry.out_crit_edge ], [ true, %while.cond.i.out_crit_edge ], [ true, %next_mnt.exit.out_crit_edge ], [ false, %mnt_ns_loop.exit.out_crit_edge ]
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 0, i32 0, i32 1), i32 noundef %2) #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #22, !srcloc !362
  %31 = load i32, ptr @mount_lock, align 128
  %inc.i.i.i.i = add i32 %31, 1
  store i32 %inc.i.i.i.i, ptr @mount_lock, align 128
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.seqlock_t, ptr @mount_lock, i32 0, i32 1)) #22
  ret i1 %tobool.not.lcssa
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_fs_type(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_filesystem(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mount_capable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_sb_kern_mount(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @mount_too_revealing(ptr nocapture noundef readonly %sb, ptr nocapture noundef %new_mnt_flags) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #24
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !330) #22
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %nsproxy = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 110
  %4 = ptrtoint ptr %nsproxy to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nsproxy, align 4
  %mnt_ns = getelementptr inbounds %struct.nsproxy, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %mnt_ns to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mnt_ns, align 4
  %user_ns = getelementptr inbounds %struct.mnt_namespace, ptr %7, i32 0, i32 4
  %8 = ptrtoint ptr %user_ns to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %user_ns, align 8
  %cmp = icmp eq ptr %9, @init_user_ns
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end:                                           ; preds = %entry
  %s_iflags1 = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 11
  %10 = ptrtoint ptr %s_iflags1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %s_iflags1, align 8
  %and = and i32 %11, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %and4 = and i32 %11, 6
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %and4)
  %cmp5.not = icmp eq i32 %and4, 6
  br i1 %cmp5.not, label %if.end42, label %land.end

land.end:                                         ; preds = %if.end3
  %.b53 = load i1, ptr @mount_too_revealing.__already_done, align 1
  br i1 %.b53, label %land.end.cleanup_crit_edge, label %if.then12, !prof !352

land.end.cleanup_crit_edge:                       ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup

if.then12:                                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #24
  store i1 true, ptr @mount_too_revealing.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 4555, i32 noundef 9, ptr noundef nonnull @.str.68, i32 noundef 6) #22
  br label %cleanup

if.end42:                                         ; preds = %if.end3
  %12 = ptrtoint ptr %new_mnt_flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %new_mnt_flags, align 4
  tail call void @down_read(ptr noundef nonnull @namespace_sem) #22
  %ns_lock.i.i = getelementptr inbounds %struct.mnt_namespace, ptr %7, i32 0, i32 3
  tail call void @_raw_spin_lock(ptr noundef %ns_lock.i.i) #22
  %list.i = getelementptr inbounds %struct.mnt_namespace, ptr %7, i32 0, i32 2
  %14 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %.pn120.i = load ptr, ptr %list.i, align 4
  %cmp.not121.i = icmp eq ptr %.pn120.i, %list.i
  br i1 %cmp.not121.i, label %if.end42.mnt_already_visible.exit_crit_edge, label %for.body.lr.ph.i

if.end42.mnt_already_visible.exit_crit_edge:      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_already_visible.exit

for.body.lr.ph.i:                                 ; preds = %if.end42
  %s_type3.i = getelementptr inbounds %struct.super_block, ptr %sb, i32 0, i32 5
  %and20.i = and i32 %13, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20.i)
  %tobool21.not.i = icmp eq i32 %and20.i, 0
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc62.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %.pn122.i = phi ptr [ %.pn120.i, %for.body.lr.ph.i ], [ %.pn.i, %for.inc62.i.for.body.i_crit_edge ]
  %mnt_flags.i.i = getelementptr i8, ptr %.pn122.i, i32 -48
  %15 = ptrtoint ptr %mnt_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %mnt_flags.i.i, align 4
  %and.i.i = and i32 %16, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.end.i, label %for.body.i.for.inc62.i_crit_edge

for.body.i.for.inc62.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc62.i

if.end.i:                                         ; preds = %for.body.i
  %mnt_sb.i = getelementptr i8, ptr %.pn122.i, i32 -52
  %17 = ptrtoint ptr %mnt_sb.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %mnt_sb.i, align 4
  %s_type.i = getelementptr inbounds %struct.super_block, ptr %18, i32 0, i32 5
  %19 = ptrtoint ptr %s_type.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %s_type.i, align 32
  %21 = ptrtoint ptr %s_type3.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %s_type3.i, align 32
  %cmp4.not.i = icmp eq ptr %20, %22
  br i1 %cmp4.not.i, label %if.end6.i, label %if.end.i.for.inc62.i_crit_edge

if.end.i.for.inc62.i_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc62.i

if.end6.i:                                        ; preds = %if.end.i
  %mnt2.i = getelementptr i8, ptr %.pn122.i, i32 -56
  %23 = ptrtoint ptr %mnt2.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %mnt2.i, align 4
  %s_root.i = getelementptr inbounds %struct.super_block, ptr %18, i32 0, i32 13
  %25 = ptrtoint ptr %s_root.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %s_root.i, align 64
  %cmp10.not.i = icmp eq ptr %24, %26
  br i1 %cmp10.not.i, label %if.end12.i, label %if.end6.i.for.inc62.i_crit_edge

if.end6.i.for.inc62.i_crit_edge:                  ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc62.i

if.end12.i:                                       ; preds = %if.end6.i
  %s_flags.i.i = getelementptr inbounds %struct.super_block, ptr %18, i32 0, i32 10
  %27 = ptrtoint ptr %s_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %s_flags.i.i, align 4
  %and.i105.i = shl i32 %28, 22
  %29 = and i32 %and.i105.i, 4194304
  %30 = or i32 %29, %16
  %and.i54 = and i32 %30, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i54)
  %tobool.not.i = icmp ne i32 %and.i54, 0
  %or.cond.i = select i1 %tobool.not.i, i1 %tobool21.not.i, i1 false
  br i1 %or.cond.i, label %if.end12.i.for.inc62.i_crit_edge, label %if.end23.i

if.end12.i.for.inc62.i_crit_edge:                 ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc62.i

if.end23.i:                                       ; preds = %if.end12.i
  %and24.i = and i32 %16, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and24.i)
  %tobool25.not.i = icmp eq i32 %and24.i, 0
  br i1 %tobool25.not.i, label %if.end23.i.if.end31.i_crit_edge, label %land.lhs.true26.i

if.end23.i.if.end31.i_crit_edge:                  ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end31.i

land.lhs.true26.i:                                ; preds = %if.end23.i
  %31 = xor i32 %16, %13
  %32 = and i32 %31, 56
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %cmp29.not.i = icmp eq i32 %32, 0
  br i1 %cmp29.not.i, label %land.lhs.true26.i.if.end31.i_crit_edge, label %land.lhs.true26.i.for.inc62.i_crit_edge

land.lhs.true26.i.for.inc62.i_crit_edge:          ; preds = %land.lhs.true26.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc62.i

land.lhs.true26.i.if.end31.i_crit_edge:           ; preds = %land.lhs.true26.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %if.end31.i

if.end31.i:                                       ; preds = %land.lhs.true26.i.if.end31.i_crit_edge, %if.end23.i.if.end31.i_crit_edge
  %mnt_mounts.i = getelementptr i8, ptr %.pn122.i, i32 -28
  %33 = ptrtoint ptr %mnt_mounts.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %.pn104114.i = load ptr, ptr %mnt_mounts.i, align 4
  %cmp38.not115.i = icmp eq ptr %.pn104114.i, %mnt_mounts.i
  br i1 %cmp38.not115.i, label %if.end31.i.cleanup58.i_crit_edge, label %if.end31.i.for.body40.i_crit_edge

if.end31.i.for.body40.i_crit_edge:                ; preds = %if.end31.i
  br label %for.body40.i

if.end31.i.cleanup58.i_crit_edge:                 ; preds = %if.end31.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup58.i

for.body40.i:                                     ; preds = %for.inc.i.for.body40.i_crit_edge, %if.end31.i.for.body40.i_crit_edge
  %.pn104116.i = phi ptr [ %.pn104.i, %for.inc.i.for.body40.i_crit_edge ], [ %.pn104114.i, %if.end31.i.for.body40.i_crit_edge ]
  %mnt_flags42.i = getelementptr i8, ptr %.pn104116.i, i32 -28
  %34 = ptrtoint ptr %mnt_flags42.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %mnt_flags42.i, align 4
  %and43.i = and i32 %35, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and43.i)
  %tobool44.not.i = icmp eq i32 %and43.i, 0
  br i1 %tobool44.not.i, label %for.body40.i.for.inc.i_crit_edge, label %if.end46.i

for.body40.i.for.inc.i_crit_edge:                 ; preds = %for.body40.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

if.end46.i:                                       ; preds = %for.body40.i
  %mnt_mountpoint.i = getelementptr i8, ptr %.pn104116.i, i32 -40
  %36 = ptrtoint ptr %mnt_mountpoint.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %mnt_mountpoint.i, align 4
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %37, i32 0, i32 5
  %38 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %d_inode.i, align 8
  %call47.i = tail call zeroext i1 @is_empty_dir_inode(ptr noundef %39) #22
  br i1 %call47.i, label %if.end46.i.for.inc.i_crit_edge, label %if.end46.i.for.inc62.i_crit_edge

if.end46.i.for.inc62.i_crit_edge:                 ; preds = %if.end46.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc62.i

if.end46.i.for.inc.i_crit_edge:                   ; preds = %if.end46.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end46.i.for.inc.i_crit_edge, %for.body40.i.for.inc.i_crit_edge
  %40 = ptrtoint ptr %.pn104116.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %.pn104.i = load ptr, ptr %.pn104116.i, align 4
  %cmp38.not.i = icmp eq ptr %.pn104.i, %mnt_mounts.i
  br i1 %cmp38.not.i, label %for.inc.i.cleanup58.i_crit_edge, label %for.inc.i.for.body40.i_crit_edge

for.inc.i.for.body40.i_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body40.i

for.inc.i.cleanup58.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %cleanup58.i

cleanup58.i:                                      ; preds = %for.inc.i.cleanup58.i_crit_edge, %if.end31.i.cleanup58.i_crit_edge
  %and55.i = and i32 %30, 4456448
  %41 = ptrtoint ptr %new_mnt_flags to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %new_mnt_flags, align 4
  %or56.i = or i32 %42, %and55.i
  store i32 %or56.i, ptr %new_mnt_flags, align 4
  br label %mnt_already_visible.exit

for.inc62.i:                                      ; preds = %if.end46.i.for.inc62.i_crit_edge, %land.lhs.true26.i.for.inc62.i_crit_edge, %if.end12.i.for.inc62.i_crit_edge, %if.end6.i.for.inc62.i_crit_edge, %if.end.i.for.inc62.i_crit_edge, %for.body.i.for.inc62.i_crit_edge
  %43 = ptrtoint ptr %.pn122.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %.pn.i = load ptr, ptr %.pn122.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %list.i
  br i1 %cmp.not.i, label %for.inc62.i.mnt_already_visible.exit_crit_edge, label %for.inc62.i.for.body.i_crit_edge

for.inc62.i.for.body.i_crit_edge:                 ; preds = %for.inc62.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %for.body.i

for.inc62.i.mnt_already_visible.exit_crit_edge:   ; preds = %for.inc62.i
  call void @__sanitizer_cov_trace_pc() #24
  br label %mnt_already_visible.exit

mnt_already_visible.exit:                         ; preds = %for.inc62.i.mnt_already_visible.exit_crit_edge, %cleanup58.i, %if.end42.mnt_already_visible.exit_crit_edge
  %cmp.not113.i = phi i1 [ false, %cleanup58.i ], [ true, %if.end42.mnt_already_visible.exit_crit_edge ], [ true, %for.inc62.i.mnt_already_visible.exit_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %ns_lock.i.i) #22
  tail call void @up_read(ptr noundef nonnull @namespace_sem) #22
  br label %cleanup

cleanup:                                          ; preds = %mnt_already_visible.exit, %if.then12, %land.end.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ %cmp.not113.i, %mnt_already_visible.exit ], [ false, %entry.cleanup_crit_edge ], [ false, %if.end.cleanup_crit_edge ], [ true, %if.then12 ], [ true, %land.end.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @fc_drop_locked(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_empty_dir_inode(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @user_path_at_empty(i32 noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @proc_free_inum(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dec_ucount(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_waitqueue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @inc_ucount(ptr noundef, [1 x i32], i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @proc_alloc_inum(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @generic_atomic64_add_return(i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strndup_user(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_fault(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @should_fail_usercopy() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mutex_lock_interruptible_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vfs_clean_context(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @fput(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__fdget(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_move_mount(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_sb_pivotroot(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @chroot_fs_refs(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @check_zeroed_user(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sw_hweight32(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @fget(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @proc_ns_file(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @set_fs_pwd(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @set_fs_root(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__register_sysctl_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @proc_dointvec_minmax(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #21

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #22

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_handle_no_return()

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #23 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 149)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #23 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 149)
  ret void
}

attributes #0 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #5 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { cold noreturn null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #16 = { nounwind readonly }
attributes #17 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #19 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { inlinehint nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #21 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #22 = { nounwind }
attributes #23 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #24 = { nomerge }
attributes #25 = { nounwind readonly willreturn }
attributes #26 = { nounwind allocsize(0) }
attributes #27 = { nobuiltin }
attributes #28 = { nounwind allocsize(2) }
attributes #29 = { cold nounwind }
attributes #30 = { nounwind readnone }
attributes #31 = { cold noreturn nounwind }
attributes #32 = { cold }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !9, !10, !12, !14, !16, !18, !20, !22, !23, !24, !26, !28, !30, !32, !34, !36, !38, !40, !42, !44, !46, !48, !50, !51, !52, !53, !54, !55, !56, !57, !58, !60, !61, !62, !63, !64, !65, !66, !67, !68, !70, !72, !73, !74, !75, !76, !77, !78, !79, !80, !82, !84, !86, !88, !89, !90, !91, !92, !93, !94, !95, !96, !98, !99, !100, !101, !102, !103, !104, !105, !106, !108, !109, !110, !111, !112, !113, !114, !115, !116, !118, !120, !121, !122, !123, !124, !125, !126, !127, !128, !130, !131, !132, !133, !134, !135, !136, !137, !138, !140, !142, !144, !146, !148, !149, !150, !151, !153, !155, !156, !157, !159, !161, !163, !165, !167, !169, !171, !173, !175, !177, !179, !181, !183, !185, !187, !189, !191, !192, !193, !195, !196, !198, !200, !201, !202, !204, !205, !206, !208, !209, !211, !212, !213, !215, !217, !218, !220, !222, !223, !224, !226, !227, !228, !229, !230, !231, !232, !233, !234, !236, !237, !238, !239, !240, !241, !242, !244, !246, !248, !249, !250, !251, !252, !254, !255, !256, !257, !258, !259, !261, !263, !264, !266, !267, !269, !270, !272, !274, !275, !276, !277, !278, !279, !280, !281, !282, !284, !285, !287, !289, !290, !291, !292, !293, !294, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !318, !320, !322, !324, !326, !328}
!llvm.named.register.sp = !{!330}
!llvm.module.flags = !{!331, !332, !333, !334, !335, !336, !337, !338}
!llvm.ident = !{!339}

!0 = !{ptr @__setup_set_mhash_entries, !1, !"__setup_set_mhash_entries", i1 false, i1 false}
!1 = !{!"../fs/namespace.c", i32 55, i32 1}
!2 = !{ptr @__setup_set_mphash_entries, !3, !"__setup_set_mphash_entries", i1 false, i1 false}
!3 = !{!"../fs/namespace.c", i32 65, i32 1}
!4 = !{ptr @__ksymtab_fs_kobj, !5, !"__ksymtab_fs_kobj", i1 false, i1 false}
!5 = !{!"../fs/namespace.c", i32 89, i32 1}
!6 = !{ptr @.str, !7, !"<string literal>", i1 false, i1 false}
!7 = !{!"../fs/namespace.c", i32 99, i32 28}
!8 = !{ptr @.str.1, !7, !"<string literal>", i1 false, i1 false}
!9 = !{ptr @mount_lock, !7, !"mount_lock", i1 false, i1 false}
!10 = !{ptr @__ksymtab___mnt_is_readonly, !11, !"__ksymtab___mnt_is_readonly", i1 false, i1 false}
!11 = !{!"../fs/namespace.c", i32 273, i32 1}
!12 = !{ptr @__ksymtab_mnt_want_write, !13, !"__ksymtab_mnt_want_write", i1 false, i1 false}
!13 = !{!"../fs/namespace.c", i32 383, i32 1}
!14 = !{ptr @__ksymtab_mnt_want_write_file, !15, !"__ksymtab_mnt_want_write_file", i1 false, i1 false}
!15 = !{!"../fs/namespace.c", i32 427, i32 1}
!16 = !{ptr @__ksymtab_mnt_drop_write, !17, !"__ksymtab_mnt_drop_write", i1 false, i1 false}
!17 = !{!"../fs/namespace.c", i32 457, i32 1}
!18 = !{ptr @__ksymtab_mnt_drop_write_file, !19, !"__ksymtab_mnt_drop_write_file", i1 false, i1 false}
!19 = !{!"../fs/namespace.c", i32 470, i32 1}
!20 = distinct !{null, !21, !"__warned", i1 false, i1 false}
!21 = !{!"../fs/namespace.c", i32 660, i32 2}
!22 = !{ptr @.str.2, !21, !"<string literal>", i1 false, i1 false}
!23 = !{ptr @.str.3, !21, !"<string literal>", i1 false, i1 false}
!24 = !{ptr @.str.4, !25, !"<string literal>", i1 false, i1 false}
!25 = !{!"../fs/namespace.c", i32 1004, i32 35}
!26 = !{ptr @__ksymtab_vfs_create_mount, !27, !"__ksymtab_vfs_create_mount", i1 false, i1 false}
!27 = !{!"../fs/namespace.c", i32 1026, i32 1}
!28 = !{ptr @__ksymtab_fc_mount, !29, !"__ksymtab_fc_mount", i1 false, i1 false}
!29 = !{!"../fs/namespace.c", i32 1037, i32 1}
!30 = !{ptr @.str.5, !31, !"<string literal>", i1 false, i1 false}
!31 = !{!"../fs/namespace.c", i32 1055, i32 33}
!32 = !{ptr @__ksymtab_vfs_kern_mount, !33, !"__ksymtab_vfs_kern_mount", i1 false, i1 false}
!33 = !{!"../fs/namespace.c", i32 1067, i32 1}
!34 = !{ptr @__ksymtab_vfs_submount, !35, !"__ksymtab_vfs_submount", i1 false, i1 false}
!35 = !{!"../fs/namespace.c", i32 1082, i32 1}
!36 = !{ptr @__ksymtab_mntput, !37, !"__ksymtab_mntput", i1 false, i1 false}
!37 = !{!"../fs/namespace.c", i32 1272, i32 1}
!38 = !{ptr @__ksymtab_mntget, !39, !"__ksymtab_mntget", i1 false, i1 false}
!39 = !{!"../fs/namespace.c", i32 1280, i32 1}
!40 = !{ptr @__ksymtab_path_is_mountpoint, !41, !"__ksymtab_path_is_mountpoint", i1 false, i1 false}
!41 = !{!"../fs/namespace.c", i32 1310, i32 1}
!42 = !{ptr @mounts_op, !43, !"mounts_op", i1 false, i1 false}
!43 = !{!"../fs/namespace.c", i32 1391, i32 29}
!44 = !{ptr @__ksymtab_may_umount_tree, !45, !"__ksymtab_may_umount_tree", i1 false, i1 false}
!45 = !{!"../fs/namespace.c", i32 1438, i32 1}
!46 = !{ptr @__ksymtab_may_umount, !47, !"__ksymtab_may_umount", i1 false, i1 false}
!47 = !{!"../fs/namespace.c", i32 1465, i32 1}
!48 = !{ptr @.str.6, !49, !"<string literal>", i1 false, i1 false}
!49 = !{!"../fs/namespace.c", i32 1815, i32 1}
!50 = !{ptr @event_enter__umount, !49, !"event_enter__umount", i1 false, i1 false}
!51 = !{ptr @__event_enter__umount, !49, !"__event_enter__umount", i1 false, i1 false}
!52 = !{ptr @.str.7, !49, !"<string literal>", i1 false, i1 false}
!53 = !{ptr @event_exit__umount, !49, !"event_exit__umount", i1 false, i1 false}
!54 = !{ptr @__event_exit__umount, !49, !"__event_exit__umount", i1 false, i1 false}
!55 = !{ptr @.str.8, !49, !"<string literal>", i1 false, i1 false}
!56 = !{ptr @__syscall_meta__umount, !49, !"__syscall_meta__umount", i1 false, i1 false}
!57 = !{ptr @__p_syscall_meta__umount, !49, !"__p_syscall_meta__umount", i1 false, i1 false}
!58 = !{ptr @.str.9, !59, !"<string literal>", i1 false, i1 false}
!59 = !{!"../fs/namespace.c", i32 1825, i32 1}
!60 = !{ptr @event_enter__oldumount, !59, !"event_enter__oldumount", i1 false, i1 false}
!61 = !{ptr @__event_enter__oldumount, !59, !"__event_enter__oldumount", i1 false, i1 false}
!62 = !{ptr @.str.10, !59, !"<string literal>", i1 false, i1 false}
!63 = !{ptr @event_exit__oldumount, !59, !"event_exit__oldumount", i1 false, i1 false}
!64 = !{ptr @__event_exit__oldumount, !59, !"__event_exit__oldumount", i1 false, i1 false}
!65 = !{ptr @.str.11, !59, !"<string literal>", i1 false, i1 false}
!66 = !{ptr @__syscall_meta__oldumount, !59, !"__syscall_meta__oldumount", i1 false, i1 false}
!67 = !{ptr @__p_syscall_meta__oldumount, !59, !"__p_syscall_meta__oldumount", i1 false, i1 false}
!68 = !{ptr @__ksymtab_clone_private_mount, !69, !"__ksymtab_clone_private_mount", i1 false, i1 false}
!69 = !{!"../fs/namespace.c", i32 2028, i32 1}
!70 = !{ptr @.str.12, !71, !"<string literal>", i1 false, i1 false}
!71 = !{!"../fs/namespace.c", i32 2490, i32 1}
!72 = !{ptr @event_enter__open_tree, !71, !"event_enter__open_tree", i1 false, i1 false}
!73 = !{ptr @__event_enter__open_tree, !71, !"__event_enter__open_tree", i1 false, i1 false}
!74 = !{ptr @.str.13, !71, !"<string literal>", i1 false, i1 false}
!75 = !{ptr @event_exit__open_tree, !71, !"event_exit__open_tree", i1 false, i1 false}
!76 = !{ptr @__event_exit__open_tree, !71, !"__event_exit__open_tree", i1 false, i1 false}
!77 = !{ptr @.str.14, !71, !"<string literal>", i1 false, i1 false}
!78 = !{ptr @__syscall_meta__open_tree, !71, !"__syscall_meta__open_tree", i1 false, i1 false}
!79 = !{ptr @__p_syscall_meta__open_tree, !71, !"__p_syscall_meta__open_tree", i1 false, i1 false}
!80 = !{ptr @__ksymtab_mnt_set_expiry, !81, !"__ksymtab_mnt_set_expiry", i1 false, i1 false}
!81 = !{!"../fs/namespace.c", i32 3115, i32 1}
!82 = !{ptr @__ksymtab_mark_mounts_for_expiry, !83, !"__ksymtab_mark_mounts_for_expiry", i1 false, i1 false}
!83 = !{!"../fs/namespace.c", i32 3154, i32 1}
!84 = !{ptr @__ksymtab_mount_subtree, !85, !"__ksymtab_mount_subtree", i1 false, i1 false}
!85 = !{!"../fs/namespace.c", i32 3550, i32 1}
!86 = !{ptr @.str.15, !87, !"<string literal>", i1 false, i1 false}
!87 = !{!"../fs/namespace.c", i32 3552, i32 1}
!88 = !{ptr @event_enter__mount, !87, !"event_enter__mount", i1 false, i1 false}
!89 = !{ptr @__event_enter__mount, !87, !"__event_enter__mount", i1 false, i1 false}
!90 = !{ptr @.str.16, !87, !"<string literal>", i1 false, i1 false}
!91 = !{ptr @event_exit__mount, !87, !"event_exit__mount", i1 false, i1 false}
!92 = !{ptr @__event_exit__mount, !87, !"__event_exit__mount", i1 false, i1 false}
!93 = !{ptr @.str.17, !87, !"<string literal>", i1 false, i1 false}
!94 = !{ptr @__syscall_meta__mount, !87, !"__syscall_meta__mount", i1 false, i1 false}
!95 = !{ptr @__p_syscall_meta__mount, !87, !"__p_syscall_meta__mount", i1 false, i1 false}
!96 = !{ptr @.str.18, !97, !"<string literal>", i1 false, i1 false}
!97 = !{!"../fs/namespace.c", i32 3620, i32 1}
!98 = !{ptr @event_enter__fsmount, !97, !"event_enter__fsmount", i1 false, i1 false}
!99 = !{ptr @__event_enter__fsmount, !97, !"__event_enter__fsmount", i1 false, i1 false}
!100 = !{ptr @.str.19, !97, !"<string literal>", i1 false, i1 false}
!101 = !{ptr @event_exit__fsmount, !97, !"event_exit__fsmount", i1 false, i1 false}
!102 = !{ptr @__event_exit__fsmount, !97, !"__event_exit__fsmount", i1 false, i1 false}
!103 = !{ptr @.str.20, !97, !"<string literal>", i1 false, i1 false}
!104 = !{ptr @__syscall_meta__fsmount, !97, !"__syscall_meta__fsmount", i1 false, i1 false}
!105 = !{ptr @__p_syscall_meta__fsmount, !97, !"__p_syscall_meta__fsmount", i1 false, i1 false}
!106 = !{ptr @.str.21, !107, !"<string literal>", i1 false, i1 false}
!107 = !{!"../fs/namespace.c", i32 3749, i32 1}
!108 = !{ptr @event_enter__move_mount, !107, !"event_enter__move_mount", i1 false, i1 false}
!109 = !{ptr @__event_enter__move_mount, !107, !"__event_enter__move_mount", i1 false, i1 false}
!110 = !{ptr @.str.22, !107, !"<string literal>", i1 false, i1 false}
!111 = !{ptr @event_exit__move_mount, !107, !"event_exit__move_mount", i1 false, i1 false}
!112 = !{ptr @__event_exit__move_mount, !107, !"__event_exit__move_mount", i1 false, i1 false}
!113 = !{ptr @.str.23, !107, !"<string literal>", i1 false, i1 false}
!114 = !{ptr @__syscall_meta__move_mount, !107, !"__syscall_meta__move_mount", i1 false, i1 false}
!115 = !{ptr @__p_syscall_meta__move_mount, !107, !"__p_syscall_meta__move_mount", i1 false, i1 false}
!116 = !{ptr @__ksymtab_path_is_under, !117, !"__ksymtab_path_is_under", i1 false, i1 false}
!117 = !{!"../fs/namespace.c", i32 3825, i32 1}
!118 = !{ptr @.str.24, !119, !"<string literal>", i1 false, i1 false}
!119 = !{!"../fs/namespace.c", i32 3852, i32 1}
!120 = !{ptr @event_enter__pivot_root, !119, !"event_enter__pivot_root", i1 false, i1 false}
!121 = !{ptr @__event_enter__pivot_root, !119, !"__event_enter__pivot_root", i1 false, i1 false}
!122 = !{ptr @.str.25, !119, !"<string literal>", i1 false, i1 false}
!123 = !{ptr @event_exit__pivot_root, !119, !"event_exit__pivot_root", i1 false, i1 false}
!124 = !{ptr @__event_exit__pivot_root, !119, !"__event_exit__pivot_root", i1 false, i1 false}
!125 = !{ptr @.str.26, !119, !"<string literal>", i1 false, i1 false}
!126 = !{ptr @__syscall_meta__pivot_root, !119, !"__syscall_meta__pivot_root", i1 false, i1 false}
!127 = !{ptr @__p_syscall_meta__pivot_root, !119, !"__p_syscall_meta__pivot_root", i1 false, i1 false}
!128 = !{ptr @.str.27, !129, !"<string literal>", i1 false, i1 false}
!129 = !{!"../fs/namespace.c", i32 4281, i32 1}
!130 = !{ptr @event_enter__mount_setattr, !129, !"event_enter__mount_setattr", i1 false, i1 false}
!131 = !{ptr @__event_enter__mount_setattr, !129, !"__event_enter__mount_setattr", i1 false, i1 false}
!132 = !{ptr @.str.28, !129, !"<string literal>", i1 false, i1 false}
!133 = !{ptr @event_exit__mount_setattr, !129, !"event_exit__mount_setattr", i1 false, i1 false}
!134 = !{ptr @__event_exit__mount_setattr, !129, !"__event_exit__mount_setattr", i1 false, i1 false}
!135 = !{ptr @.str.29, !129, !"<string literal>", i1 false, i1 false}
!136 = !{ptr @__syscall_meta__mount_setattr, !129, !"__syscall_meta__mount_setattr", i1 false, i1 false}
!137 = !{ptr @__p_syscall_meta__mount_setattr, !129, !"__p_syscall_meta__mount_setattr", i1 false, i1 false}
!138 = !{ptr @.str.30, !139, !"<string literal>", i1 false, i1 false}
!139 = !{!"../fs/namespace.c", i32 4363, i32 32}
!140 = !{ptr @.str.31, !141, !"<string literal>", i1 false, i1 false}
!141 = !{!"../fs/namespace.c", i32 4366, i32 44}
!142 = !{ptr @.str.32, !143, !"<string literal>", i1 false, i1 false}
!143 = !{!"../fs/namespace.c", i32 4371, i32 49}
!144 = !{ptr @.str.33, !145, !"<string literal>", i1 false, i1 false}
!145 = !{!"../fs/namespace.c", i32 4378, i32 9}
!146 = !{ptr @.str.34, !147, !"<string literal>", i1 false, i1 false}
!147 = !{!"../fs/namespace.c", i32 4384, i32 3}
!148 = !{ptr @.str.35, !147, !"<string literal>", i1 false, i1 false}
!149 = !{ptr @mnt_init._entry, !147, !"_entry", i1 false, i1 false}
!150 = !{ptr @mnt_init._entry_ptr, !147, !"_entry_ptr", i1 false, i1 false}
!151 = !{ptr @.str.36, !152, !"<string literal>", i1 false, i1 false}
!152 = !{!"../fs/namespace.c", i32 4386, i32 35}
!153 = !{ptr @.str.38, !154, !"<string literal>", i1 false, i1 false}
!154 = !{!"../fs/namespace.c", i32 4388, i32 3}
!155 = !{ptr @mnt_init._entry.37, !154, !"_entry", i1 false, i1 false}
!156 = !{ptr @mnt_init._entry_ptr.39, !154, !"_entry_ptr", i1 false, i1 false}
!157 = !{ptr @__ksymtab_kern_mount, !158, !"__ksymtab_kern_mount", i1 false, i1 false}
!158 = !{!"../fs/namespace.c", i32 4415, i32 1}
!159 = !{ptr @__ksymtab_kern_unmount, !160, !"__ksymtab_kern_unmount", i1 false, i1 false}
!160 = !{!"../fs/namespace.c", i32 4426, i32 1}
!161 = !{ptr @__ksymtab_kern_unmount_array, !162, !"__ksymtab_kern_unmount_array", i1 false, i1 false}
!162 = !{!"../fs/namespace.c", i32 4439, i32 1}
!163 = !{ptr @.str.40, !164, !"<string literal>", i1 false, i1 false}
!164 = !{!"../fs/namespace.c", i32 4646, i32 11}
!165 = !{ptr @mntns_operations, !166, !"mntns_operations", i1 false, i1 false}
!166 = !{!"../fs/namespace.c", i32 4645, i32 33}
!167 = !{ptr @__initcall__kmod_namespace__315_4672_init_fs_namespace_sysctls5, !168, !"__initcall__kmod_namespace__315_4672_init_fs_namespace_sysctls5", i1 false, i1 false}
!168 = !{!"../fs/namespace.c", i32 4672, i32 1}
!169 = !{ptr @m_hash_mask, !170, !"m_hash_mask", i1 false, i1 false}
!170 = !{!"../fs/namespace.c", i32 42, i32 21}
!171 = !{ptr @m_hash_shift, !172, !"m_hash_shift", i1 false, i1 false}
!172 = !{!"../fs/namespace.c", i32 43, i32 21}
!173 = !{ptr @mp_hash_mask, !174, !"mp_hash_mask", i1 false, i1 false}
!174 = !{!"../fs/namespace.c", i32 44, i32 21}
!175 = !{ptr @mp_hash_shift, !176, !"mp_hash_shift", i1 false, i1 false}
!176 = !{!"../fs/namespace.c", i32 45, i32 21}
!177 = !{ptr @mhash_entries, !178, !"mhash_entries", i1 false, i1 false}
!178 = !{!"../fs/namespace.c", i32 47, i32 33}
!179 = !{ptr @mphash_entries, !180, !"mphash_entries", i1 false, i1 false}
!180 = !{!"../fs/namespace.c", i32 57, i32 33}
!181 = !{ptr @event, !182, !"event", i1 false, i1 false}
!182 = !{!"../fs/namespace.c", i32 67, i32 12}
!183 = !{ptr @mount_hashtable, !184, !"mount_hashtable", i1 false, i1 false}
!184 = !{!"../fs/namespace.c", i32 71, i32 27}
!185 = !{ptr @mountpoint_hashtable, !186, !"mountpoint_hashtable", i1 false, i1 false}
!186 = !{!"../fs/namespace.c", i32 72, i32 27}
!187 = !{ptr @mnt_cache, !188, !"mnt_cache", i1 false, i1 false}
!188 = !{!"../fs/namespace.c", i32 73, i32 27}
!189 = !{ptr @fs_kobj, !190, !"fs_kobj", i1 false, i1 false}
!190 = !{!"../fs/namespace.c", i32 88, i32 17}
!191 = !{ptr @__setup_str_set_mhash_entries, !1, !"__setup_str_set_mhash_entries", i1 false, i1 false}
!192 = !{ptr @__setup_str_set_mphash_entries, !3, !"__setup_str_set_mphash_entries", i1 false, i1 false}
!193 = !{ptr @.str.41, !194, !"<string literal>", i1 false, i1 false}
!194 = !{!"../fs/namespace.c", i32 69, i32 8}
!195 = !{ptr @mnt_group_ida, !194, !"mnt_group_ida", i1 false, i1 false}
!196 = !{ptr @.str.42, !197, !"<string literal>", i1 false, i1 false}
!197 = !{!"../include/linux/percpu-rwsem.h", i32 49, i32 2}
!198 = distinct !{null, !199, !"__warned", i1 false, i1 false}
!199 = !{!"../include/linux/rcu_sync.h", i32 34, i32 2}
!200 = !{ptr @.str.43, !199, !"<string literal>", i1 false, i1 false}
!201 = !{ptr @.str.44, !199, !"<string literal>", i1 false, i1 false}
!202 = distinct !{null, !203, !"__warned", i1 false, i1 false}
!203 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!204 = !{ptr @.str.45, !203, !"<string literal>", i1 false, i1 false}
!205 = !{ptr @.str.46, !203, !"<string literal>", i1 false, i1 false}
!206 = distinct !{null, !207, !"__warned", i1 false, i1 false}
!207 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!208 = !{ptr @.str.47, !207, !"<string literal>", i1 false, i1 false}
!209 = !{ptr @.str.48, !210, !"<string literal>", i1 false, i1 false}
!210 = !{!"../fs/namespace.c", i32 74, i32 8}
!211 = !{ptr @.str.49, !210, !"<string literal>", i1 false, i1 false}
!212 = !{ptr @namespace_sem, !210, !"namespace_sem", i1 false, i1 false}
!213 = !{ptr @ex_mountpoints, !214, !"ex_mountpoints", i1 false, i1 false}
!214 = !{!"../fs/namespace.c", i32 76, i32 8}
!215 = !{ptr @.str.50, !216, !"<string literal>", i1 false, i1 false}
!216 = !{!"../fs/namespace.c", i32 68, i32 8}
!217 = !{ptr @mnt_id_ida, !216, !"mnt_id_ida", i1 false, i1 false}
!218 = !{ptr @delayed_mntput_list, !219, !"delayed_mntput_list", i1 false, i1 false}
!219 = !{!"../fs/namespace.c", i32 1183, i32 8}
!220 = !{ptr @.str.51, !221, !"<string literal>", i1 false, i1 false}
!221 = !{!"../fs/namespace.c", i32 1192, i32 8}
!222 = !{ptr @.str.52, !221, !"<string literal>", i1 false, i1 false}
!223 = !{ptr @delayed_mntput_work, !221, !"delayed_mntput_work", i1 false, i1 false}
!224 = !{ptr @unmounted, !225, !"unmounted", i1 false, i1 false}
!225 = !{!"../fs/namespace.c", i32 75, i32 8}
!226 = !{ptr @.str.53, !49, !"<string literal>", i1 false, i1 false}
!227 = !{ptr @.str.54, !49, !"<string literal>", i1 false, i1 false}
!228 = !{ptr @types__umount, !49, !"types__umount", i1 false, i1 false}
!229 = !{ptr @.str.55, !49, !"<string literal>", i1 false, i1 false}
!230 = !{ptr @.str.56, !49, !"<string literal>", i1 false, i1 false}
!231 = !{ptr @args__umount, !49, !"args__umount", i1 false, i1 false}
!232 = !{ptr @types__oldumount, !59, !"types__oldumount", i1 false, i1 false}
!233 = !{ptr @args__oldumount, !59, !"args__oldumount", i1 false, i1 false}
!234 = !{ptr @sysctl_mount_max, !235, !"sysctl_mount_max", i1 false, i1 false}
!235 = !{!"../fs/namespace.c", i32 40, i32 21}
!236 = !{ptr @.str.57, !71, !"<string literal>", i1 false, i1 false}
!237 = !{ptr @.str.58, !71, !"<string literal>", i1 false, i1 false}
!238 = !{ptr @types__open_tree, !71, !"types__open_tree", i1 false, i1 false}
!239 = !{ptr @.str.59, !71, !"<string literal>", i1 false, i1 false}
!240 = !{ptr @.str.60, !71, !"<string literal>", i1 false, i1 false}
!241 = !{ptr @args__open_tree, !71, !"args__open_tree", i1 false, i1 false}
!242 = distinct !{null, !243, !"__warned", i1 false, i1 false}
!243 = !{!"../fs/namespace.c", i32 2530, i32 38}
!244 = distinct !{null, !245, !"__warned", i1 false, i1 false}
!245 = !{!"../fs/namespace.c", i32 2482, i32 35}
!246 = distinct !{null, !247, !"__already_done", i1 false, i1 false}
!247 = !{!"../fs/namespace.c", i32 1757, i32 2}
!248 = !{ptr @.str.61, !247, !"<string literal>", i1 false, i1 false}
!249 = !{ptr @.str.62, !247, !"<string literal>", i1 false, i1 false}
!250 = !{ptr @warn_mandlock._entry, !247, !"_entry", i1 false, i1 false}
!251 = !{ptr @warn_mandlock._entry_ptr, !247, !"_entry_ptr", i1 false, i1 false}
!252 = !{ptr @.str.63, !253, !"<string literal>", i1 false, i1 false}
!253 = !{!"../fs/namespace.c", i32 2607, i32 3}
!254 = !{ptr @.str.64, !253, !"<string literal>", i1 false, i1 false}
!255 = !{ptr @mnt_warn_timestamp_expiry._entry, !253, !"_entry", i1 false, i1 false}
!256 = !{ptr @mnt_warn_timestamp_expiry._entry_ptr, !253, !"_entry_ptr", i1 false, i1 false}
!257 = !{ptr @.str.65, !253, !"<string literal>", i1 false, i1 false}
!258 = !{ptr @.str.66, !253, !"<string literal>", i1 false, i1 false}
!259 = !{ptr @.str.67, !260, !"<string literal>", i1 false, i1 false}
!260 = !{!"../fs/namespace.c", i32 3015, i32 33}
!261 = distinct !{null, !262, !"__already_done", i1 false, i1 false}
!262 = !{!"../fs/namespace.c", i32 4554, i32 3}
!263 = !{ptr @.str.68, !262, !"<string literal>", i1 false, i1 false}
!264 = !{ptr @alloc_mnt_ns.__key, !265, !"__key", i1 false, i1 false}
!265 = !{!"../fs/namespace.c", i32 3428, i32 2}
!266 = !{ptr @.str.69, !265, !"<string literal>", i1 false, i1 false}
!267 = !{ptr @alloc_mnt_ns.__key.70, !268, !"__key", i1 false, i1 false}
!268 = !{!"../fs/namespace.c", i32 3429, i32 2}
!269 = !{ptr @.str.71, !268, !"<string literal>", i1 false, i1 false}
!270 = distinct !{null, !271, !"__warned", i1 false, i1 false}
!271 = !{!"../fs/namespace.c", i32 3374, i32 24}
!272 = !{ptr @mnt_ns_seq, !273, !"mnt_ns_seq", i1 false, i1 false}
!273 = !{!"../fs/namespace.c", i32 3398, i32 19}
!274 = !{ptr @.str.72, !87, !"<string literal>", i1 false, i1 false}
!275 = !{ptr @.str.73, !87, !"<string literal>", i1 false, i1 false}
!276 = !{ptr @types__mount, !87, !"types__mount", i1 false, i1 false}
!277 = !{ptr @.str.74, !87, !"<string literal>", i1 false, i1 false}
!278 = !{ptr @.str.75, !87, !"<string literal>", i1 false, i1 false}
!279 = !{ptr @.str.76, !87, !"<string literal>", i1 false, i1 false}
!280 = !{ptr @.str.77, !87, !"<string literal>", i1 false, i1 false}
!281 = !{ptr @args__mount, !87, !"args__mount", i1 false, i1 false}
!282 = distinct !{null, !283, !"__already_done", i1 false, i1 false}
!283 = !{!"../include/linux/thread_info.h", i32 230, i32 6}
!284 = distinct !{null, !283, !"<string literal>", i1 false, i1 false}
!285 = distinct !{null, !286, !"<string literal>", i1 false, i1 false}
!286 = !{!"../include/linux/thread_info.h", i32 214, i32 2}
!287 = !{ptr @.str.80, !288, !"<string literal>", i1 false, i1 false}
!288 = !{!"../include/linux/uaccess.h", i32 156, i32 2}
!289 = !{ptr @.str.81, !97, !"<string literal>", i1 false, i1 false}
!290 = !{ptr @types__fsmount, !97, !"types__fsmount", i1 false, i1 false}
!291 = !{ptr @.str.82, !97, !"<string literal>", i1 false, i1 false}
!292 = !{ptr @.str.83, !97, !"<string literal>", i1 false, i1 false}
!293 = !{ptr @args__fsmount, !97, !"args__fsmount", i1 false, i1 false}
!294 = !{ptr @.str.84, !295, !"<string literal>", i1 false, i1 false}
!295 = !{!"../fs/namespace.c", i32 3677, i32 3}
!296 = !{ptr @.str.85, !295, !"<string literal>", i1 false, i1 false}
!297 = !{ptr @__do_sys_fsmount._entry, !295, !"_entry", i1 false, i1 false}
!298 = !{ptr @__do_sys_fsmount._entry_ptr, !295, !"_entry_ptr", i1 false, i1 false}
!299 = !{ptr @types__move_mount, !107, !"types__move_mount", i1 false, i1 false}
!300 = !{ptr @.str.86, !107, !"<string literal>", i1 false, i1 false}
!301 = !{ptr @.str.87, !107, !"<string literal>", i1 false, i1 false}
!302 = !{ptr @.str.88, !107, !"<string literal>", i1 false, i1 false}
!303 = !{ptr @.str.89, !107, !"<string literal>", i1 false, i1 false}
!304 = !{ptr @args__move_mount, !107, !"args__move_mount", i1 false, i1 false}
!305 = !{ptr @types__pivot_root, !119, !"types__pivot_root", i1 false, i1 false}
!306 = !{ptr @.str.90, !119, !"<string literal>", i1 false, i1 false}
!307 = !{ptr @.str.91, !119, !"<string literal>", i1 false, i1 false}
!308 = !{ptr @args__pivot_root, !119, !"args__pivot_root", i1 false, i1 false}
!309 = !{ptr @.str.92, !129, !"<string literal>", i1 false, i1 false}
!310 = !{ptr @.str.93, !129, !"<string literal>", i1 false, i1 false}
!311 = !{ptr @types__mount_setattr, !129, !"types__mount_setattr", i1 false, i1 false}
!312 = !{ptr @.str.94, !129, !"<string literal>", i1 false, i1 false}
!313 = !{ptr @.str.95, !129, !"<string literal>", i1 false, i1 false}
!314 = !{ptr @.str.96, !129, !"<string literal>", i1 false, i1 false}
!315 = !{ptr @args__mount_setattr, !129, !"args__mount_setattr", i1 false, i1 false}
!316 = !{ptr @.str.97, !317, !"<string literal>", i1 false, i1 false}
!317 = !{!"../fs/namespace.c", i32 4336, i32 43}
!318 = !{ptr @.str.98, !319, !"<string literal>", i1 false, i1 false}
!319 = !{!"../fs/namespace.c", i32 4338, i32 9}
!320 = !{ptr @.str.99, !321, !"<string literal>", i1 false, i1 false}
!321 = !{!"../fs/namespace.c", i32 4342, i32 9}
!322 = !{ptr @.str.100, !323, !"<string literal>", i1 false, i1 false}
!323 = !{!"../fs/namespace.c", i32 4622, i32 5}
!324 = !{ptr @.str.101, !325, !"<string literal>", i1 false, i1 false}
!325 = !{!"../fs/namespace.c", i32 4669, i32 2}
!326 = !{ptr @.str.102, !327, !"<string literal>", i1 false, i1 false}
!327 = !{!"../fs/namespace.c", i32 4657, i32 15}
!328 = !{ptr @fs_namespace_sysctls, !329, !"fs_namespace_sysctls", i1 false, i1 false}
!329 = !{!"../fs/namespace.c", i32 4655, i32 25}
!330 = !{!"sp"}
!331 = !{i32 1, !"wchar_size", i32 2}
!332 = !{i32 1, !"min_enum_size", i32 4}
!333 = !{i32 8, !"branch-target-enforcement", i32 0}
!334 = !{i32 8, !"sign-return-address", i32 0}
!335 = !{i32 8, !"sign-return-address-all", i32 0}
!336 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!337 = !{i32 7, !"uwtable", i32 1}
!338 = !{i32 7, !"frame-pointer", i32 2}
!339 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!340 = !{i64 2155856983}
!341 = !{i64 1230527, i64 1230588}
!342 = !{i64 1233259}
!343 = !{!"branch_weights", i32 1, i32 2000}
!344 = !{i64 1233544}
!345 = !{i64 2155857089}
!346 = !{i64 2155860354}
!347 = !{i64 2155860196}
!348 = !{i64 2155860519}
!349 = !{i64 2155856792}
!350 = !{i64 2155860665}
!351 = !{i64 2152508989}
!352 = !{!"branch_weights", i32 2000, i32 1}
!353 = !{i64 2152517839}
!354 = !{i64 2152527793}
!355 = !{i64 2152537288}
!356 = !{i64 2152546765}
!357 = !{i64 2155863853}
!358 = !{i64 2155863950}
!359 = !{i64 2150254987}
!360 = !{i64 2155871249}
!361 = !{i64 2155871411}
!362 = !{i64 2150255312}
!363 = !{i64 2150254662}
!364 = !{i64 2155876238}
!365 = !{i64 2149638293}
!366 = !{i64 2149638559}
!367 = !{i64 2150269421}
!368 = !{i64 2150269263}
!369 = !{i64 2150269591}
!370 = !{i64 2155907624, i64 2155908103, i64 2155907661, i64 2155907717, i64 2155907751, i64 2155907775, i64 2155907816, i64 2155907837, i64 2155907865, i64 2155907899}
!371 = !{i64 2149739904}
!372 = !{i64 2148825847, i64 2148825873, i64 2148825902, i64 2148825936, i64 2148825967, i64 2148825990}
!373 = !{i64 2148827377, i64 2148827409, i64 2148827438, i64 2148827472, i64 2148827503, i64 2148827526}
!374 = !{i64 2155935905}
!375 = !{i64 2152577307}
!376 = !{i64 2155947230, i64 2155947710, i64 2155947267, i64 2155947323, i64 2155947357, i64 2155947381, i64 2155947422, i64 2155947443, i64 2155947471, i64 2155947505}
!377 = !{i64 2155964368}
!378 = !{i64 1332615, i64 1332632, i64 1332656, i64 1332682, i64 1332700}
!379 = !{i64 2155964711}
!380 = !{!"auto-init"}
!381 = !{i64 2148915402}
!382 = !{i64 2148829842, i64 2148829874, i64 2148829903, i64 2148829937, i64 2148829968, i64 2148829991}
!383 = !{i64 2150536491}
!384 = !{i64 2156036099, i64 2156036579, i64 2156036136, i64 2156036192, i64 2156036226, i64 2156036250, i64 2156036291, i64 2156036312, i64 2156036340, i64 2156036374}
!385 = !{i64 2156044837}
!386 = !{i64 2156045180}
!387 = !{i64 2155867243}
!388 = !{i64 2155867571}
!389 = !{i32 0, i32 31}
!390 = !{i64 2156066176, i64 2156066656, i64 2156066213, i64 2156066269, i64 2156066303, i64 2156066327, i64 2156066368, i64 2156066389, i64 2156066417, i64 2156066451}
!391 = !{i64 2152338326, i64 2152338351}
!392 = !{i64 4833881}
!393 = !{i64 4834078}
!394 = !{i64 2152319311}
!395 = !{i64 2156055018, i64 2156055298, i64 2156055632, i64 2156055966}
!396 = !{!397}
!397 = distinct !{!397, !398, !"fdget: %agg.result"}
!398 = distinct !{!398, !"fdget"}
!399 = !{i64 2156147878}
!400 = !{i64 2149443857}
!401 = !{i64 2149444210}
!402 = !{i64 2155909685, i64 2155910164, i64 2155909722, i64 2155909778, i64 2155909812, i64 2155909836, i64 2155909877, i64 2155909898, i64 2155909926, i64 2155909960}
